   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC4330_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	checkErrors:
  23              	.LVL0:
  24              	.LFB16:
  25              		.file 1 "boards/TMC4330_eval.c"
   1:boards/TMC4330_eval.c **** #include "Board.h"
   2:boards/TMC4330_eval.c **** #include "tmc/BoardAssignment.h"
   3:boards/TMC4330_eval.c **** #include "tmc/ic/TMC4330/TMC4330.h"
   4:boards/TMC4330_eval.c **** 
   5:boards/TMC4330_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
   6:boards/TMC4330_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
   7:boards/TMC4330_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
   8:boards/TMC4330_eval.c **** static uint32_t stop(uint8_t motor);
   9:boards/TMC4330_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  10:boards/TMC4330_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  11:boards/TMC4330_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  12:boards/TMC4330_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  13:boards/TMC4330_eval.c **** 
  14:boards/TMC4330_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value);
  15:boards/TMC4330_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value);
  16:boards/TMC4330_eval.c **** 
  17:boards/TMC4330_eval.c **** static void periodicJob(uint32_t tick);
  18:boards/TMC4330_eval.c **** static void checkErrors(uint32_t tick);
  19:boards/TMC4330_eval.c **** static void deInit(void);
  20:boards/TMC4330_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  21:boards/TMC4330_eval.c **** static uint8_t reset();
  22:boards/TMC4330_eval.c **** static uint8_t restore();
  23:boards/TMC4330_eval.c **** 
  24:boards/TMC4330_eval.c **** typedef struct
  25:boards/TMC4330_eval.c **** {
  26:boards/TMC4330_eval.c **** 	IOPinTypeDef  *TARGET_REACHED;
  27:boards/TMC4330_eval.c **** 	IOPinTypeDef  *NRST;
  28:boards/TMC4330_eval.c **** 	IOPinTypeDef  *FREEZE;
  29:boards/TMC4330_eval.c **** 	IOPinTypeDef  *START;
  30:boards/TMC4330_eval.c **** 	IOPinTypeDef  *HOME_REF;
  31:boards/TMC4330_eval.c **** 	IOPinTypeDef  *STOP_R;
  32:boards/TMC4330_eval.c **** 	IOPinTypeDef  *STOP_L;
  33:boards/TMC4330_eval.c **** 	IOPinTypeDef  *INTR;
  34:boards/TMC4330_eval.c **** 	IOPinTypeDef  *STANDBY_CLK;
  35:boards/TMC4330_eval.c **** } PinsTypeDef;
  36:boards/TMC4330_eval.c **** 
  37:boards/TMC4330_eval.c **** static PinsTypeDef Pins;
  38:boards/TMC4330_eval.c **** 
  39:boards/TMC4330_eval.c **** static SPIChannelTypeDef *TMC4330_SPIChannel;
  40:boards/TMC4330_eval.c **** static TMC4330TypeDef TMC4330;
  41:boards/TMC4330_eval.c **** 
  42:boards/TMC4330_eval.c **** static uint32_t vmax_position = 0;
  43:boards/TMC4330_eval.c **** 
  44:boards/TMC4330_eval.c **** // Translate motor number to TMC4330TypeDef
  45:boards/TMC4330_eval.c **** // When using multiple ICs you can map them here
  46:boards/TMC4330_eval.c **** static inline TMC4330TypeDef *motorToIC(uint8_t motor)
  47:boards/TMC4330_eval.c **** {
  48:boards/TMC4330_eval.c **** 	UNUSED(motor);
  49:boards/TMC4330_eval.c **** 
  50:boards/TMC4330_eval.c **** 	return &TMC4330;
  51:boards/TMC4330_eval.c **** }
  52:boards/TMC4330_eval.c **** 
  53:boards/TMC4330_eval.c **** // Translate channel number to SPI channel
  54:boards/TMC4330_eval.c **** // When using multiple ICs you can map them here
  55:boards/TMC4330_eval.c **** static inline SPIChannelTypeDef *channelToSPI(uint8_t channel)
  56:boards/TMC4330_eval.c **** {
  57:boards/TMC4330_eval.c **** 	UNUSED(channel);
  58:boards/TMC4330_eval.c **** 
  59:boards/TMC4330_eval.c **** 	return TMC4330_SPIChannel;
  60:boards/TMC4330_eval.c **** }
  61:boards/TMC4330_eval.c **** 
  62:boards/TMC4330_eval.c **** // => SPI Wrapper
  63:boards/TMC4330_eval.c **** void tmc4330_readWriteArray(uint8_t channel, uint8_t *data, size_t length)
  64:boards/TMC4330_eval.c **** {
  65:boards/TMC4330_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
  66:boards/TMC4330_eval.c **** }
  67:boards/TMC4330_eval.c **** // <= SPI Wrapper
  68:boards/TMC4330_eval.c **** 
  69:boards/TMC4330_eval.c **** // => Functions forwarded to API
  70:boards/TMC4330_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
  71:boards/TMC4330_eval.c **** {
  72:boards/TMC4330_eval.c **** 	UNUSED(motor);
  73:boards/TMC4330_eval.c **** 	tmc4330_rotate(motorToIC(motor), velocity);
  74:boards/TMC4330_eval.c **** 
  75:boards/TMC4330_eval.c **** 	return 0;
  76:boards/TMC4330_eval.c **** }
  77:boards/TMC4330_eval.c **** 
  78:boards/TMC4330_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
  79:boards/TMC4330_eval.c **** {
  80:boards/TMC4330_eval.c **** 	rotate(motor, velocity);
  81:boards/TMC4330_eval.c **** 
  82:boards/TMC4330_eval.c **** 	return 0;
  83:boards/TMC4330_eval.c **** }
  84:boards/TMC4330_eval.c **** 
  85:boards/TMC4330_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
  86:boards/TMC4330_eval.c **** {
  87:boards/TMC4330_eval.c **** 	rotate(motor, -velocity);
  88:boards/TMC4330_eval.c **** 
  89:boards/TMC4330_eval.c **** 	return 0;
  90:boards/TMC4330_eval.c **** }
  91:boards/TMC4330_eval.c **** 
  92:boards/TMC4330_eval.c **** static uint32_t stop(uint8_t motor)
  93:boards/TMC4330_eval.c **** {
  94:boards/TMC4330_eval.c **** 	rotate(motor, 0);
  95:boards/TMC4330_eval.c **** 
  96:boards/TMC4330_eval.c **** 	return 0;
  97:boards/TMC4330_eval.c **** }
  98:boards/TMC4330_eval.c **** 
  99:boards/TMC4330_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
 100:boards/TMC4330_eval.c **** {
 101:boards/TMC4330_eval.c **** 	tmc4330_moveTo(motorToIC(motor), position, vmax_position);
 102:boards/TMC4330_eval.c **** 
 103:boards/TMC4330_eval.c **** 	return 0;
 104:boards/TMC4330_eval.c **** }
 105:boards/TMC4330_eval.c **** 
 106:boards/TMC4330_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 107:boards/TMC4330_eval.c **** {
 108:boards/TMC4330_eval.c **** 	tmc4330_moveBy(motorToIC(motor), ticks, vmax_position);
 109:boards/TMC4330_eval.c **** 
 110:boards/TMC4330_eval.c **** 	return 0;
 111:boards/TMC4330_eval.c **** }
 112:boards/TMC4330_eval.c **** // <= Functions forwarded to API
 113:boards/TMC4330_eval.c **** 
 114:boards/TMC4330_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 115:boards/TMC4330_eval.c **** {
 116:boards/TMC4330_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 117:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 118:boards/TMC4330_eval.c **** 
 119:boards/TMC4330_eval.c **** 	if(motor >= TMC4330_MOTORS)
 120:boards/TMC4330_eval.c **** 		return TMC_ERROR_MOTOR;
 121:boards/TMC4330_eval.c **** 
 122:boards/TMC4330_eval.c **** 	switch(type)
 123:boards/TMC4330_eval.c **** 	{
 124:boards/TMC4330_eval.c **** 	case 0:
 125:boards/TMC4330_eval.c **** 		// Target position
 126:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 127:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_X_TARGET);
 128:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 129:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_X_TARGET, *value);
 130:boards/TMC4330_eval.c **** 		}
 131:boards/TMC4330_eval.c **** 		break;
 132:boards/TMC4330_eval.c **** 	case 1:
 133:boards/TMC4330_eval.c **** 		// Actual position
 134:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 135:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_XACTUAL);
 136:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 137:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_XACTUAL, *value);
 138:boards/TMC4330_eval.c **** 		}
 139:boards/TMC4330_eval.c **** 		break;
 140:boards/TMC4330_eval.c **** 	case 2:
 141:boards/TMC4330_eval.c **** 		// Target speed
 142:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 143:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VMAX) >> 8;
 144:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 145:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VMAX, tmc4330_discardVelocityDecimals(*value));
 146:boards/TMC4330_eval.c **** 		}
 147:boards/TMC4330_eval.c **** 		break;
 148:boards/TMC4330_eval.c **** 	case 3:
 149:boards/TMC4330_eval.c **** 		// Actual speed
 150:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 151:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VACTUAL);
 152:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 153:boards/TMC4330_eval.c **** 			errors |= TMC_ERROR_TYPE;
 154:boards/TMC4330_eval.c **** 		}
 155:boards/TMC4330_eval.c **** 		break;
 156:boards/TMC4330_eval.c **** 	case 4:
 157:boards/TMC4330_eval.c **** 		// Maximum speed
 158:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 159:boards/TMC4330_eval.c **** 			*value = vmax_position;
 160:boards/TMC4330_eval.c **** 			//*value = tmc4330_readInt(motorToIC(motor), TMC4330_VMAX) >> 8;
 161:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 162:boards/TMC4330_eval.c **** 			vmax_position = *value;
 163:boards/TMC4330_eval.c **** 			// Write VMAX if already in position mode
 164:boards/TMC4330_eval.c **** 			if(tmc4330_readInt(motorToIC(motor), TMC4330_RAMPMODE) & TMC4330_RAMP_POSITION)
 165:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_VMAX, tmc4330_discardVelocityDecimals(vmax_position)
 166:boards/TMC4330_eval.c **** 		}
 167:boards/TMC4330_eval.c **** 		break;
 168:boards/TMC4330_eval.c **** 	case 5:
 169:boards/TMC4330_eval.c **** 		// Maximum acceleration
 170:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 171:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_AMAX)>>2;
 172:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 173:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 174:boards/TMC4330_eval.c **** 			{
 175:boards/TMC4330_eval.c **** 				errors |= TMC_ERROR_VALUE;
 176:boards/TMC4330_eval.c **** 			}
 177:boards/TMC4330_eval.c **** 			else
 178:boards/TMC4330_eval.c **** 			{
 179:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_AMAX, *value<<2);
 180:boards/TMC4330_eval.c **** 			}
 181:boards/TMC4330_eval.c **** 		}
 182:boards/TMC4330_eval.c **** 		break;
 183:boards/TMC4330_eval.c **** 	case 8:
 184:boards/TMC4330_eval.c **** 		// Position reached flag
 185:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 186:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_STATUS) & (1<<0))? 1:0;
 187:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 188:boards/TMC4330_eval.c **** 			errors |= TMC_ERROR_TYPE;
 189:boards/TMC4330_eval.c **** 		break;
 190:boards/TMC4330_eval.c **** 	case 14:
 191:boards/TMC4330_eval.c **** 		// Ramp type
 192:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 193:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_RAMPMODE)<<1;
 194:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 195:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_RAMPMODE, (*value) ? TMC4330_RAMP_SSHAPE : TMC4330_RA
 196:boards/TMC4330_eval.c **** 		}
 197:boards/TMC4330_eval.c **** 		break;
 198:boards/TMC4330_eval.c **** 	case 15:
 199:boards/TMC4330_eval.c **** 		// Velocity VSTART
 200:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 201:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VSTART);
 202:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 203:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VSTART, *value);
 204:boards/TMC4330_eval.c **** 		}
 205:boards/TMC4330_eval.c **** 		break;
 206:boards/TMC4330_eval.c **** 	case 16:
 207:boards/TMC4330_eval.c **** 		// Acceleration AStart
 208:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 209:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_ASTART)>>2;
 210:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 211:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 212:boards/TMC4330_eval.c **** 			{
 213:boards/TMC4330_eval.c **** 				errors |= TMC_ERROR_VALUE;
 214:boards/TMC4330_eval.c **** 			}
 215:boards/TMC4330_eval.c **** 			else
 216:boards/TMC4330_eval.c **** 			{
 217:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_ASTART, *value<<2);
 218:boards/TMC4330_eval.c **** 			}
 219:boards/TMC4330_eval.c **** 		}
 220:boards/TMC4330_eval.c **** 		break;
 221:boards/TMC4330_eval.c **** 	case 17:
 222:boards/TMC4330_eval.c **** 		// Maximum Deceleration
 223:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 224:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_DMAX)>>2;
 225:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 226:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 227:boards/TMC4330_eval.c **** 			{
 228:boards/TMC4330_eval.c **** 				errors |= TMC_ERROR_VALUE;
 229:boards/TMC4330_eval.c **** 			}
 230:boards/TMC4330_eval.c **** 			else
 231:boards/TMC4330_eval.c **** 			{
 232:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_DMAX, *value<<2);
 233:boards/TMC4330_eval.c **** 			}
 234:boards/TMC4330_eval.c **** 		}
 235:boards/TMC4330_eval.c **** 		break;
 236:boards/TMC4330_eval.c **** 	case 18:
 237:boards/TMC4330_eval.c **** 		// Velocity VBreak
 238:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 239:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VBREAK);
 240:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 241:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VBREAK, *value);
 242:boards/TMC4330_eval.c **** 		}
 243:boards/TMC4330_eval.c **** 		break;
 244:boards/TMC4330_eval.c **** 	case 19:
 245:boards/TMC4330_eval.c **** 		// Deceleration DFinal
 246:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 247:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_DFINAL) >> 2;
 248:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 249:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 250:boards/TMC4330_eval.c **** 			{
 251:boards/TMC4330_eval.c **** 				errors |= TMC_ERROR_VALUE;
 252:boards/TMC4330_eval.c **** 			}
 253:boards/TMC4330_eval.c **** 			else
 254:boards/TMC4330_eval.c **** 			{
 255:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_DFINAL, *value<<2);
 256:boards/TMC4330_eval.c **** 			}
 257:boards/TMC4330_eval.c **** 		}
 258:boards/TMC4330_eval.c **** 		break;
 259:boards/TMC4330_eval.c **** 	case 20:
 260:boards/TMC4330_eval.c **** 		// Velocity VSTOP
 261:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 262:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VSTOP);
 263:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 264:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VSTOP, *value);
 265:boards/TMC4330_eval.c **** 		}
 266:boards/TMC4330_eval.c **** 		break;
 267:boards/TMC4330_eval.c **** 	case 21:
 268:boards/TMC4330_eval.c **** 		// Deceleration DStop
 269:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 270:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_DSTOP);
 271:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 272:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 273:boards/TMC4330_eval.c **** 			{
 274:boards/TMC4330_eval.c **** 				errors |= TMC_ERROR_VALUE;
 275:boards/TMC4330_eval.c **** 			}
 276:boards/TMC4330_eval.c **** 			else
 277:boards/TMC4330_eval.c **** 			{
 278:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_DSTOP, *value);
 279:boards/TMC4330_eval.c **** 			}
 280:boards/TMC4330_eval.c **** 		}
 281:boards/TMC4330_eval.c **** 		break;
 282:boards/TMC4330_eval.c **** 	case 22:
 283:boards/TMC4330_eval.c **** 		// Bow 1
 284:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 285:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW1);
 286:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 287:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_BOW1, *value);
 288:boards/TMC4330_eval.c **** 		}
 289:boards/TMC4330_eval.c **** 		break;
 290:boards/TMC4330_eval.c **** 	case 23:
 291:boards/TMC4330_eval.c **** 		// Bow 2
 292:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 293:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW2);
 294:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 295:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_BOW2, *value);
 296:boards/TMC4330_eval.c **** 		}
 297:boards/TMC4330_eval.c **** 		break;
 298:boards/TMC4330_eval.c **** 	case 24:
 299:boards/TMC4330_eval.c **** 		// Bow 3
 300:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 301:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW3);
 302:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 303:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_BOW3, *value);
 304:boards/TMC4330_eval.c **** 		}
 305:boards/TMC4330_eval.c **** 		break;
 306:boards/TMC4330_eval.c **** 	case 25:
 307:boards/TMC4330_eval.c **** 		// Bow 4
 308:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 309:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW4);
 310:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 311:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_BOW4, *value);
 312:boards/TMC4330_eval.c **** 		}
 313:boards/TMC4330_eval.c **** 		break;
 314:boards/TMC4330_eval.c **** 	case 26:
 315:boards/TMC4330_eval.c **** 		// Virtual stop left
 316:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 317:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VIRT_STOP_LEFT);
 318:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 319:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VIRT_STOP_LEFT, *value);
 320:boards/TMC4330_eval.c **** 		}
 321:boards/TMC4330_eval.c **** 		break;
 322:boards/TMC4330_eval.c **** 	case 27:
 323:boards/TMC4330_eval.c **** 		// Virtual stop right
 324:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 325:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VIRT_STOP_RIGHT);
 326:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 327:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VIRT_STOP_RIGHT, *value);
 328:boards/TMC4330_eval.c **** 		}
 329:boards/TMC4330_eval.c **** 		break;
 330:boards/TMC4330_eval.c **** 	case 108:
 331:boards/TMC4330_eval.c **** 		// CL Gamma VMin
 332:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 333:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_VMIN_EMF_WR);		// read from shadow registe
 334:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 335:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_VMIN_EMF_WR, *value);
 336:boards/TMC4330_eval.c **** 		}
 337:boards/TMC4330_eval.c **** 		break;
 338:boards/TMC4330_eval.c **** 	case 109:
 339:boards/TMC4330_eval.c **** 		// CL Gamma VMax
 340:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 341:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_VADD_EMF); 	// read from shadow register
 342:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 343:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_VADD_EMF, *value);
 344:boards/TMC4330_eval.c **** 		}
 345:boards/TMC4330_eval.c **** 		break;
 346:boards/TMC4330_eval.c **** 	case 110:
 347:boards/TMC4330_eval.c **** 		// CL maximum Gamma
 348:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 349:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_BETA) >> 16;
 350:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 351:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor),  TMC4330_CL_BETA) & 0x000001FF;
 352:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_BETA, uvalue | (*value<<16));
 353:boards/TMC4330_eval.c **** 		}
 354:boards/TMC4330_eval.c **** 		break;
 355:boards/TMC4330_eval.c **** 	case 111:
 356:boards/TMC4330_eval.c **** 		// CL beta
 357:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 358:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_BETA) & 0xFF;
 359:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 360:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor),  TMC4330_CL_BETA) & 0x00FF0000;
 361:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_BETA, uvalue | (*value & 0x1FF));
 362:boards/TMC4330_eval.c **** 		}
 363:boards/TMC4330_eval.c **** 		break;
 364:boards/TMC4330_eval.c **** 	case 112:
 365:boards/TMC4330_eval.c **** 		// CL offset
 366:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 367:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_OFFSET);
 368:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 369:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_OFFSET, *value);
 370:boards/TMC4330_eval.c **** 		}
 371:boards/TMC4330_eval.c **** 		break;
 372:boards/TMC4330_eval.c **** 	case 113:
 373:boards/TMC4330_eval.c **** 		// CL current minimum
 374:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 375:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 0) & 0xFF;
 376:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 377:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) & ~(0xFF<<0);
 378:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 0;
 379:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 380:boards/TMC4330_eval.c **** 		}
 381:boards/TMC4330_eval.c **** 		break;
 382:boards/TMC4330_eval.c **** 	case 114:
 383:boards/TMC4330_eval.c **** 		// CL current maximum
 384:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 385:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 8) & 0xFF;
 386:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 387:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) & ~(0xFF<<8);
 388:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 8;
 389:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 390:boards/TMC4330_eval.c **** 		}
 391:boards/TMC4330_eval.c **** 		break;
 392:boards/TMC4330_eval.c **** 	case 115:
 393:boards/TMC4330_eval.c **** 		// CL correction velocity P
 394:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 395:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_CL_VMAX_CALC_P_WR];
 396:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 397:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_VMAX_CALC_P_WR, *value);
 398:boards/TMC4330_eval.c **** 		}
 399:boards/TMC4330_eval.c **** 		break;
 400:boards/TMC4330_eval.c **** 	case 116:
 401:boards/TMC4330_eval.c **** 		// CL correction velocity I
 402:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 403:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_CL_VMAX_CALC_I_WR];
 404:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 405:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_VMAX_CALC_I_WR, *value);
 406:boards/TMC4330_eval.c **** 		}
 407:boards/TMC4330_eval.c **** 		break;
 408:boards/TMC4330_eval.c **** 	case 117:
 409:boards/TMC4330_eval.c **** 		// CL correction velocity I clipping
 410:boards/TMC4330_eval.c **** 		// todo AP 3: same register as in AP 116 and 115? (BS) #1
 411:boards/TMC4330_eval.c **** 		// (JE) : probably register TMC4361_PID_I_CLIP_WR ?
 412:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 413:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_PID_I_WR] >> 0;
 414:boards/TMC4330_eval.c **** 			*value &= 0x7FFF;
 415:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 416:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_PID_I_WR];
 417:boards/TMC4330_eval.c **** 			uvalue &= ~(0x7FFF << 0);
 418:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x7FFF) << 0;
 419:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_PID_I_WR, uvalue);
 420:boards/TMC4330_eval.c **** 		}
 421:boards/TMC4330_eval.c **** 		break;
 422:boards/TMC4330_eval.c **** 	case 118:
 423:boards/TMC4330_eval.c **** 		// CL correction velocity DV clock
 424:boards/TMC4330_eval.c **** 		// todo AP 3: same register as in AP 116 and 115? (BS) #2
 425:boards/TMC4330_eval.c **** 		// (JE) probably register TMC4361_PID_I_CLIP_WR?
 426:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 427:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_PID_I_WR] >> 16;
 428:boards/TMC4330_eval.c **** 			*value &= 0xFF;
 429:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 430:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_PID_I_WR];
 431:boards/TMC4330_eval.c **** 			uvalue &= ~(0xFF << 16);
 432:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 16;
 433:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_PID_I_WR, uvalue);
 434:boards/TMC4330_eval.c **** 		}
 435:boards/TMC4330_eval.c **** 		break;
 436:boards/TMC4330_eval.c **** 	case 119:
 437:boards/TMC4330_eval.c **** 		// CL correction velocity DV clipping
 438:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 439:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_PID_DV_CLIP_WR);
 440:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 441:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_PID_DV_CLIP_WR, *value);
 442:boards/TMC4330_eval.c **** 		}
 443:boards/TMC4330_eval.c **** 		break;
 444:boards/TMC4330_eval.c **** 	case 124:
 445:boards/TMC4330_eval.c **** 		// CL Correction Position P
 446:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 447:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_DELTA_P_WR);
 448:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 449:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_DELTA_P_WR, *value);
 450:boards/TMC4330_eval.c **** 		}
 451:boards/TMC4330_eval.c **** 		break;
 452:boards/TMC4330_eval.c **** 	case 125:
 453:boards/TMC4330_eval.c **** 		// CL max. correction tolerance
 454:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 455:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_TOLERANCE_WR);
 456:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 457:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_TOLERANCE_WR, *value);
 458:boards/TMC4330_eval.c **** 		}
 459:boards/TMC4330_eval.c **** 		break;
 460:boards/TMC4330_eval.c **** 	case 126:
 461:boards/TMC4330_eval.c **** 		// CL start up
 462:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 463:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 16) & 0xFF;
 464:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 465:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) & ~(0xFF<<16);
 466:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 16;
 467:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 468:boards/TMC4330_eval.c **** 		}
 469:boards/TMC4330_eval.c **** 		break;
 470:boards/TMC4330_eval.c **** 	case 129: // todo AP 2: merge AP 129 with AP 133? #1
 471:boards/TMC4330_eval.c **** 		// Closed Loop Flag
 472:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 473:boards/TMC4330_eval.c **** 			// Read for closed loop flag is implemented as AP 133
 474:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 475:boards/TMC4330_eval.c **** 			//Closed loop on/off
 476:boards/TMC4330_eval.c **** 			if(*value)
 477:boards/TMC4330_eval.c **** 			{
 478:boards/TMC4330_eval.c **** 				*value = tmc4330_calibrateClosedLoop(motorToIC(motor), 1);
 479:boards/TMC4330_eval.c **** 				if(!*value)
 480:boards/TMC4330_eval.c **** 					errors |= TMC_ERROR_NOT_DONE;
 481:boards/TMC4330_eval.c **** 			}
 482:boards/TMC4330_eval.c **** 			else
 483:boards/TMC4330_eval.c **** 			{
 484:boards/TMC4330_eval.c **** 				uvalue 	= tmc4330_readInt(motorToIC(motor), TMC4330_ENC_IN_CONF);
 485:boards/TMC4330_eval.c **** 				uvalue 	&= ~(1<<22); // closed loop
 486:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_IN_CONF, uvalue);
 487:boards/TMC4330_eval.c **** 			}
 488:boards/TMC4330_eval.c **** 		}
 489:boards/TMC4330_eval.c **** 		break;
 490:boards/TMC4330_eval.c **** 	case 132:
 491:boards/TMC4330_eval.c **** 		// Measured Encoder Speed
 492:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 493:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_V_ENC_RD);
 494:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 495:boards/TMC4330_eval.c **** 			errors |= TMC_ERROR_TYPE;
 496:boards/TMC4330_eval.c **** 		break;
 497:boards/TMC4330_eval.c **** 	case 133: // todo AP 2: merge AP 129 with AP 133? #2
 498:boards/TMC4330_eval.c **** 		// Closed Loop Init Flag
 499:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 500:boards/TMC4330_eval.c **** 			uvalue 	= tmc4330_readInt(motorToIC(motor), TMC4330_ENC_IN_CONF);
 501:boards/TMC4330_eval.c **** 			*value = (((uvalue >> 22) & 3) == 1) ? 1 : 0;
 502:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 503:boards/TMC4330_eval.c **** 			// Write for closed loop flag is implemented as AP 129
 504:boards/TMC4330_eval.c **** 		}
 505:boards/TMC4330_eval.c **** 		break;
 506:boards/TMC4330_eval.c **** 	case 134:
 507:boards/TMC4330_eval.c **** 		// todo AP XML 2: Split this into read-only Encoder deviation and write-only CL_TR_TOLERANCE? Hav
 508:boards/TMC4330_eval.c **** 		// Encoder deviation
 509:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 510:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_ENC_POS_DEV_RD);
 511:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 512:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_TR_TOLERANCE_WR, *value);
 513:boards/TMC4330_eval.c **** 		}
 514:boards/TMC4330_eval.c **** 		break;
 515:boards/TMC4330_eval.c **** 	case 136:
 516:boards/TMC4330_eval.c **** 		// Encoder Velocity Delay
 517:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 518:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 0) &  0xFF;
 519:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 520:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR];
 521:boards/TMC4330_eval.c **** 			uvalue &= ~(0xFF << 0);
 522:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x0F) << 0;
 523:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 524:boards/TMC4330_eval.c **** 		}
 525:boards/TMC4330_eval.c **** 		break;
 526:boards/TMC4330_eval.c **** 	case 137:
 527:boards/TMC4330_eval.c **** 		// Encoder Velocity Filter
 528:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 529:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 8) &  0xF;
 530:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 531:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR];
 532:boards/TMC4330_eval.c **** 			uvalue &= ~(0xF << 8);
 533:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x0F) << 8;
 534:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 535:boards/TMC4330_eval.c **** 		}
 536:boards/TMC4330_eval.c **** 		break;
 537:boards/TMC4330_eval.c **** 	case 138:
 538:boards/TMC4330_eval.c **** 		// Filter Update Time
 539:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 540:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 16) &  0xFF;
 541:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 542:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR];
 543:boards/TMC4330_eval.c **** 			uvalue &= ~(0xFF << 16);
 544:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x0FF) << 16;
 545:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 546:boards/TMC4330_eval.c **** 		}
 547:boards/TMC4330_eval.c **** 		break;
 548:boards/TMC4330_eval.c **** 	case 200:
 549:boards/TMC4330_eval.c **** 		// Boost current
 550:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 551:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 0) & 0xFF;
 552:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 553:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) & ~(0xFF<<0);
 554:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 0;
 555:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 556:boards/TMC4330_eval.c **** 		}
 557:boards/TMC4330_eval.c **** 		break;
 558:boards/TMC4330_eval.c **** 	case 209:
 559:boards/TMC4330_eval.c **** 		// Encoder position
 560:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 561:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_ENC_POS);
 562:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 563:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_POS, *value);
 564:boards/TMC4330_eval.c **** 		}
 565:boards/TMC4330_eval.c **** 		break;
 566:boards/TMC4330_eval.c **** 	case 212:
 567:boards/TMC4330_eval.c **** 		// Maximum encoder deviation
 568:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 569:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_SCALE_VALUES]; // todo CHECK 3: shouldn't this r
 570:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 571:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_POS_DEV_TOL_WR, *value);
 572:boards/TMC4330_eval.c **** 		}
 573:boards/TMC4330_eval.c **** 		break;
 574:boards/TMC4330_eval.c **** 	case 214:
 575:boards/TMC4330_eval.c **** 		// Power Down Delay
 576:boards/TMC4330_eval.c **** 		if(readWrite == READ) {
 577:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_STDBY_DELAY);
 578:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 579:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_STDBY_DELAY, *value*160000);
 580:boards/TMC4330_eval.c **** 		}
 581:boards/TMC4330_eval.c **** 		break;
 582:boards/TMC4330_eval.c **** 	default:
 583:boards/TMC4330_eval.c **** 		errors |= TMC_ERROR_TYPE;
 584:boards/TMC4330_eval.c **** 		break;
 585:boards/TMC4330_eval.c **** 	}
 586:boards/TMC4330_eval.c **** 	return errors;
 587:boards/TMC4330_eval.c **** }
 588:boards/TMC4330_eval.c **** 
 589:boards/TMC4330_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 590:boards/TMC4330_eval.c **** {
 591:boards/TMC4330_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 592:boards/TMC4330_eval.c **** }
 593:boards/TMC4330_eval.c **** 
 594:boards/TMC4330_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 595:boards/TMC4330_eval.c **** {
 596:boards/TMC4330_eval.c **** 	return handleParameter(READ, motor, type, value);
 597:boards/TMC4330_eval.c **** }
 598:boards/TMC4330_eval.c **** 
 599:boards/TMC4330_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
 600:boards/TMC4330_eval.c **** {
 601:boards/TMC4330_eval.c **** 	tmc4330_writeInt(motorToIC(motor), address, value);
 602:boards/TMC4330_eval.c **** }
 603:boards/TMC4330_eval.c **** 
 604:boards/TMC4330_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
 605:boards/TMC4330_eval.c **** {
 606:boards/TMC4330_eval.c **** 	*value	= tmc4330_readInt(motorToIC(motor), address);
 607:boards/TMC4330_eval.c **** }
 608:boards/TMC4330_eval.c **** 
 609:boards/TMC4330_eval.c **** static void periodicJob(uint32_t tick)
 610:boards/TMC4330_eval.c **** {
 611:boards/TMC4330_eval.c **** 	tmc4330_periodicJob(&TMC4330, tick);
 612:boards/TMC4330_eval.c **** }
 613:boards/TMC4330_eval.c **** 
 614:boards/TMC4330_eval.c **** static void checkErrors(uint32_t tick)
 615:boards/TMC4330_eval.c **** {
  26              		.loc 1 615 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 616:boards/TMC4330_eval.c **** 	UNUSED(tick);
  31              		.loc 1 616 2 view .LVU1
 617:boards/TMC4330_eval.c **** 	Evalboards.ch1.errors = 0;
  32              		.loc 1 617 2 view .LVU2
  33              		.loc 1 617 24 is_stmt 0 view .LVU3
  34 0000 014B     		ldr	r3, .L2
  35 0002 0022     		movs	r2, #0
  36 0004 9A60     		str	r2, [r3, #8]
 618:boards/TMC4330_eval.c **** }
  37              		.loc 1 618 1 view .LVU4
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00000000 		.word	Evalboards
  43              		.cfi_endproc
  44              	.LFE16:
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu softvfp
  52              	deInit:
  53              	.LFB18:
 619:boards/TMC4330_eval.c **** 
 620:boards/TMC4330_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 621:boards/TMC4330_eval.c **** {
 622:boards/TMC4330_eval.c **** 	uint32_t errors = 0;
 623:boards/TMC4330_eval.c **** 
 624:boards/TMC4330_eval.c **** 	switch(type)
 625:boards/TMC4330_eval.c **** 	{
 626:boards/TMC4330_eval.c **** 	case 0:	// simulate left/right reference switches, set high to support external ref swiches
 627:boards/TMC4330_eval.c **** 		/*
 628:boards/TMC4330_eval.c **** 		 * The the TMC4361 ref switch input is pulled high by external resistor an can be pulled low eith
 629:boards/TMC4330_eval.c **** 		 * this µC or external signal. To use external signal make sure the signals from µC are high or
 630:boards/TMC4330_eval.c **** 		 */
 631:boards/TMC4330_eval.c **** 		if(!(*value & ~3))
 632:boards/TMC4330_eval.c **** 		{
 633:boards/TMC4330_eval.c **** 			if(*value & (1<<0))
 634:boards/TMC4330_eval.c **** 			{
 635:boards/TMC4330_eval.c **** 				HAL.IOs->config->toInput(Pins.STOP_R); // pull up -> set it to floating causes high
 636:boards/TMC4330_eval.c **** 			}
 637:boards/TMC4330_eval.c **** 			else
 638:boards/TMC4330_eval.c **** 			{
 639:boards/TMC4330_eval.c **** 				HAL.IOs->config->toOutput(Pins.STOP_R);
 640:boards/TMC4330_eval.c **** 				HAL.IOs->config->setLow(Pins.STOP_R);
 641:boards/TMC4330_eval.c **** 			}
 642:boards/TMC4330_eval.c **** 
 643:boards/TMC4330_eval.c **** 			if(*value & (1<<1))
 644:boards/TMC4330_eval.c **** 			{
 645:boards/TMC4330_eval.c **** 				HAL.IOs->config->toInput(Pins.STOP_L); // pull up -> set it to floating causes high
 646:boards/TMC4330_eval.c **** 			}
 647:boards/TMC4330_eval.c **** 			else
 648:boards/TMC4330_eval.c **** 			{
 649:boards/TMC4330_eval.c **** 				HAL.IOs->config->toOutput(Pins.STOP_L);
 650:boards/TMC4330_eval.c **** 				HAL.IOs->config->setLow(Pins.STOP_L);
 651:boards/TMC4330_eval.c **** 			}
 652:boards/TMC4330_eval.c **** 		}
 653:boards/TMC4330_eval.c **** 		//else TMCL.reply->Status = REPLY_INVALID_VALUE;
 654:boards/TMC4330_eval.c **** 		break;
 655:boards/TMC4330_eval.c **** 	case 1:	// simulate reference switche HOME_REF, set high to support external ref swiches
 656:boards/TMC4330_eval.c **** 		/*
 657:boards/TMC4330_eval.c **** 		 * The the TMC43x1 ref switch input is pulled high by external resistor an can be pulled low eith
 658:boards/TMC4330_eval.c **** 		 * this µC or external signal. To use external signal make sure the signals from µC are high or
 659:boards/TMC4330_eval.c **** 		 */
 660:boards/TMC4330_eval.c **** 		if(*value)
 661:boards/TMC4330_eval.c **** 		{
 662:boards/TMC4330_eval.c **** 			HAL.IOs->config->toInput(Pins.HOME_REF); // pull up -> set it to floating causes high
 663:boards/TMC4330_eval.c **** 		}
 664:boards/TMC4330_eval.c **** 		else
 665:boards/TMC4330_eval.c **** 		{
 666:boards/TMC4330_eval.c **** 			HAL.IOs->config->toOutput(Pins.HOME_REF);
 667:boards/TMC4330_eval.c **** 			HAL.IOs->config->setLow(Pins.HOME_REF);
 668:boards/TMC4330_eval.c **** 		}
 669:boards/TMC4330_eval.c **** 		break;
 670:boards/TMC4330_eval.c **** 	case 2:	// simulate reference switche FREEZE, set high to support external ref swiches
 671:boards/TMC4330_eval.c **** 		/*
 672:boards/TMC4330_eval.c **** 		 * The the TMC43x1 ref switch input is pulled high by external resistor an can be pulled low eith
 673:boards/TMC4330_eval.c **** 		 * this µC or external signal. To use external signal make sure the signals from µC are high or
 674:boards/TMC4330_eval.c **** 		 */
 675:boards/TMC4330_eval.c **** 
 676:boards/TMC4330_eval.c **** 		if(*value)
 677:boards/TMC4330_eval.c **** 		{
 678:boards/TMC4330_eval.c **** 			HAL.IOs->config->toInput(Pins.FREEZE); // pull up -> set it to floating causes high
 679:boards/TMC4330_eval.c **** 		}
 680:boards/TMC4330_eval.c **** 		else
 681:boards/TMC4330_eval.c **** 		{
 682:boards/TMC4330_eval.c **** 			HAL.IOs->config->toOutput(Pins.FREEZE);
 683:boards/TMC4330_eval.c **** 			HAL.IOs->config->setLow(Pins.FREEZE);
 684:boards/TMC4330_eval.c **** 		}
 685:boards/TMC4330_eval.c **** 		break;
 686:boards/TMC4330_eval.c **** 	case 3:
 687:boards/TMC4330_eval.c **** 		*value = tmc4330_calibrateClosedLoop(motorToIC(motor), 1);
 688:boards/TMC4330_eval.c **** 		if(!*value)
 689:boards/TMC4330_eval.c **** 			errors |= TMC_ERROR_NOT_DONE;
 690:boards/TMC4330_eval.c **** 		break;
 691:boards/TMC4330_eval.c **** 	case 255:
 692:boards/TMC4330_eval.c **** 		Evalboards.ch2.config->reset();
 693:boards/TMC4330_eval.c **** 		Evalboards.ch1.config->reset();
 694:boards/TMC4330_eval.c **** 		break;
 695:boards/TMC4330_eval.c **** 	default:
 696:boards/TMC4330_eval.c **** 		errors |= TMC_ERROR_TYPE;
 697:boards/TMC4330_eval.c **** 		break;
 698:boards/TMC4330_eval.c **** 	}
 699:boards/TMC4330_eval.c **** 	return errors;
 700:boards/TMC4330_eval.c **** }
 701:boards/TMC4330_eval.c **** 
 702:boards/TMC4330_eval.c **** static void deInit(void)
 703:boards/TMC4330_eval.c **** {
  54              		.loc 1 703 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
 704:boards/TMC4330_eval.c **** 	HAL.IOs->config->setLow(Pins.NRST);
  58              		.loc 1 704 2 view .LVU6
 703:boards/TMC4330_eval.c **** 	HAL.IOs->config->setLow(Pins.NRST);
  59              		.loc 1 703 1 is_stmt 0 view .LVU7
  60 000c 70B5     		push	{r4, r5, r6, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 4, -16
  64              		.cfi_offset 5, -12
  65              		.cfi_offset 6, -8
  66              		.cfi_offset 14, -4
  67              		.loc 1 704 5 view .LVU8
  68 000e 184E     		ldr	r6, .L5
  69              		.loc 1 704 2 view .LVU9
  70 0010 184C     		ldr	r4, .L5+4
  71              		.loc 1 704 5 view .LVU10
  72 0012 F568     		ldr	r5, [r6, #12]
  73              		.loc 1 704 2 view .LVU11
  74 0014 6068     		ldr	r0, [r4, #4]
  75              		.loc 1 704 17 view .LVU12
  76 0016 2B68     		ldr	r3, [r5]
  77              		.loc 1 704 2 view .LVU13
  78 0018 9B69     		ldr	r3, [r3, #24]
  79 001a 9847     		blx	r3
  80              	.LVL1:
 705:boards/TMC4330_eval.c **** 
 706:boards/TMC4330_eval.c **** 	HAL.IOs->config->reset(Pins.STOP_L);
  81              		.loc 1 706 2 is_stmt 1 view .LVU14
  82              		.loc 1 706 17 is_stmt 0 view .LVU15
  83 001c 2B68     		ldr	r3, [r5]
  84              		.loc 1 706 2 view .LVU16
  85 001e A069     		ldr	r0, [r4, #24]
  86 0020 9B68     		ldr	r3, [r3, #8]
  87 0022 9847     		blx	r3
  88              	.LVL2:
 707:boards/TMC4330_eval.c **** 	HAL.IOs->config->reset(Pins.STOP_R);
  89              		.loc 1 707 2 is_stmt 1 view .LVU17
  90              		.loc 1 707 17 is_stmt 0 view .LVU18
  91 0024 2B68     		ldr	r3, [r5]
  92              		.loc 1 707 2 view .LVU19
  93 0026 6069     		ldr	r0, [r4, #20]
  94 0028 9B68     		ldr	r3, [r3, #8]
  95 002a 9847     		blx	r3
  96              	.LVL3:
 708:boards/TMC4330_eval.c **** 	HAL.IOs->config->reset(Pins.HOME_REF);
  97              		.loc 1 708 2 is_stmt 1 view .LVU20
  98              		.loc 1 708 17 is_stmt 0 view .LVU21
  99 002c 2B68     		ldr	r3, [r5]
 100              		.loc 1 708 2 view .LVU22
 101 002e 2069     		ldr	r0, [r4, #16]
 102 0030 9B68     		ldr	r3, [r3, #8]
 103 0032 9847     		blx	r3
 104              	.LVL4:
 709:boards/TMC4330_eval.c **** 	HAL.IOs->config->reset(Pins.START);
 105              		.loc 1 709 2 is_stmt 1 view .LVU23
 106              		.loc 1 709 17 is_stmt 0 view .LVU24
 107 0034 2B68     		ldr	r3, [r5]
 108              		.loc 1 709 2 view .LVU25
 109 0036 E068     		ldr	r0, [r4, #12]
 110 0038 9B68     		ldr	r3, [r3, #8]
 111 003a 9847     		blx	r3
 112              	.LVL5:
 710:boards/TMC4330_eval.c **** 	HAL.IOs->config->reset(Pins.FREEZE);
 113              		.loc 1 710 2 is_stmt 1 view .LVU26
 114              		.loc 1 710 17 is_stmt 0 view .LVU27
 115 003c 2B68     		ldr	r3, [r5]
 116              		.loc 1 710 2 view .LVU28
 117 003e A068     		ldr	r0, [r4, #8]
 118 0040 9B68     		ldr	r3, [r3, #8]
 119 0042 9847     		blx	r3
 120              	.LVL6:
 711:boards/TMC4330_eval.c **** 	HAL.IOs->config->reset(Pins.STANDBY_CLK);
 121              		.loc 1 711 2 is_stmt 1 view .LVU29
 122              		.loc 1 711 17 is_stmt 0 view .LVU30
 123 0044 2B68     		ldr	r3, [r5]
 124              		.loc 1 711 2 view .LVU31
 125 0046 206A     		ldr	r0, [r4, #32]
 126 0048 9B68     		ldr	r3, [r3, #8]
 127 004a 9847     		blx	r3
 128              	.LVL7:
 712:boards/TMC4330_eval.c **** 	HAL.IOs->config->reset(Pins.INTR);
 129              		.loc 1 712 2 is_stmt 1 view .LVU32
 130              		.loc 1 712 17 is_stmt 0 view .LVU33
 131 004c 2B68     		ldr	r3, [r5]
 132              		.loc 1 712 2 view .LVU34
 133 004e E069     		ldr	r0, [r4, #28]
 134 0050 9B68     		ldr	r3, [r3, #8]
 135 0052 9847     		blx	r3
 136              	.LVL8:
 713:boards/TMC4330_eval.c **** 	HAL.IOs->config->reset(Pins.TARGET_REACHED);
 137              		.loc 1 713 2 is_stmt 1 view .LVU35
 138              		.loc 1 713 17 is_stmt 0 view .LVU36
 139 0054 2B68     		ldr	r3, [r5]
 140              		.loc 1 713 2 view .LVU37
 141 0056 2068     		ldr	r0, [r4]
 142 0058 9B68     		ldr	r3, [r3, #8]
 143 005a 9847     		blx	r3
 144              	.LVL9:
 714:boards/TMC4330_eval.c **** 	HAL.IOs->config->reset(Pins.NRST);
 145              		.loc 1 714 2 is_stmt 1 view .LVU38
 146              		.loc 1 714 17 is_stmt 0 view .LVU39
 147 005c 2B68     		ldr	r3, [r5]
 148              		.loc 1 714 2 view .LVU40
 149 005e 6068     		ldr	r0, [r4, #4]
 150 0060 9B68     		ldr	r3, [r3, #8]
 151 0062 9847     		blx	r3
 152              	.LVL10:
 715:boards/TMC4330_eval.c **** 
 716:boards/TMC4330_eval.c **** 	HAL.SPI->ch2.reset();
 153              		.loc 1 716 2 is_stmt 1 view .LVU41
 154              		.loc 1 716 14 is_stmt 0 view .LVU42
 155 0064 3369     		ldr	r3, [r6, #16]
 717:boards/TMC4330_eval.c **** }
 156              		.loc 1 717 1 view .LVU43
 157 0066 BDE87040 		pop	{r4, r5, r6, lr}
 158              	.LCFI1:
 159              		.cfi_restore 14
 160              		.cfi_restore 6
 161              		.cfi_restore 5
 162              		.cfi_restore 4
 163              		.cfi_def_cfa_offset 0
 716:boards/TMC4330_eval.c **** }
 164              		.loc 1 716 2 view .LVU44
 165 006a 5B6A     		ldr	r3, [r3, #36]
 166 006c 1847     		bx	r3	@ indirect register sibling call
 167              	.LVL11:
 168              	.L6:
 169 006e 00BF     		.align	2
 170              	.L5:
 171 0070 00000000 		.word	HAL
 172 0074 00000000 		.word	.LANCHOR0
 173              		.cfi_endproc
 174              	.LFE18:
 176              		.align	1
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu softvfp
 182              	userFunction:
 183              	.LVL12:
 184              	.LFB17:
 621:boards/TMC4330_eval.c **** 	uint32_t errors = 0;
 185              		.loc 1 621 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 622:boards/TMC4330_eval.c **** 
 189              		.loc 1 622 2 view .LVU46
 624:boards/TMC4330_eval.c **** 	{
 190              		.loc 1 624 2 view .LVU47
 191 0078 0328     		cmp	r0, #3
 621:boards/TMC4330_eval.c **** 	uint32_t errors = 0;
 192              		.loc 1 621 1 is_stmt 0 view .LVU48
 193 007a 70B5     		push	{r4, r5, r6, lr}
 194              	.LCFI2:
 195              		.cfi_def_cfa_offset 16
 196              		.cfi_offset 4, -16
 197              		.cfi_offset 5, -12
 198              		.cfi_offset 6, -8
 199              		.cfi_offset 14, -4
 621:boards/TMC4330_eval.c **** 	uint32_t errors = 0;
 200              		.loc 1 621 1 view .LVU49
 201 007c 1446     		mov	r4, r2
 624:boards/TMC4330_eval.c **** 	{
 202              		.loc 1 624 2 view .LVU50
 203 007e 06D8     		bhi	.L8
 204 0080 0138     		subs	r0, r0, #1
 205              	.LVL13:
 624:boards/TMC4330_eval.c **** 	{
 206              		.loc 1 624 2 view .LVU51
 207 0082 0228     		cmp	r0, #2
 208 0084 08D8     		bhi	.L9
 209 0086 DFE800F0 		tbb	[pc, r0]
 210              	.L11:
 211 008a 2B       		.byte	(.L13-.L11)/2
 212 008b 3A       		.byte	(.L12-.L11)/2
 213 008c 48       		.byte	(.L10-.L11)/2
 214              	.LVL14:
 215 008d 00       		.p2align 1
 216              	.L8:
 624:boards/TMC4330_eval.c **** 	{
 217              		.loc 1 624 2 view .LVU52
 218 008e FF28     		cmp	r0, #255
 219 0090 4CD0     		beq	.L14
 220 0092 0424     		movs	r4, #4
 221              	.LVL15:
 222              	.L7:
 700:boards/TMC4330_eval.c **** 
 223              		.loc 1 700 1 view .LVU53
 224 0094 2046     		mov	r0, r4
 225 0096 70BD     		pop	{r4, r5, r6, pc}
 226              	.LVL16:
 227              	.L9:
 631:boards/TMC4330_eval.c **** 		{
 228              		.loc 1 631 3 is_stmt 1 view .LVU54
 631:boards/TMC4330_eval.c **** 		{
 229              		.loc 1 631 8 is_stmt 0 view .LVU55
 230 0098 1268     		ldr	r2, [r2]
 231              	.LVL17:
 631:boards/TMC4330_eval.c **** 		{
 232              		.loc 1 631 5 view .LVU56
 233 009a 32F00303 		bics	r3, r2, #3
 234 009e 10D1     		bne	.L24
 633:boards/TMC4330_eval.c **** 			{
 235              		.loc 1 633 4 is_stmt 1 view .LVU57
 236 00a0 284B     		ldr	r3, .L28
 237 00a2 294D     		ldr	r5, .L28+4
 238 00a4 DE68     		ldr	r6, [r3, #12]
 239 00a6 6869     		ldr	r0, [r5, #20]
 240 00a8 3368     		ldr	r3, [r6]
 633:boards/TMC4330_eval.c **** 			{
 241              		.loc 1 633 6 is_stmt 0 view .LVU58
 242 00aa D207     		lsls	r2, r2, #31
 243 00ac 0BD5     		bpl	.L17
 635:boards/TMC4330_eval.c **** 			}
 244              		.loc 1 635 5 is_stmt 1 view .LVU59
 245 00ae 1B69     		ldr	r3, [r3, #16]
 246              	.LVL18:
 247              	.L23:
 640:boards/TMC4330_eval.c **** 			}
 248              		.loc 1 640 5 is_stmt 0 view .LVU60
 249 00b0 9847     		blx	r3
 250              	.LVL19:
 643:boards/TMC4330_eval.c **** 			{
 251              		.loc 1 643 4 is_stmt 1 view .LVU61
 643:boards/TMC4330_eval.c **** 			{
 252              		.loc 1 643 14 is_stmt 0 view .LVU62
 253 00b2 2468     		ldr	r4, [r4]
 254              	.LVL20:
 643:boards/TMC4330_eval.c **** 			{
 255              		.loc 1 643 14 view .LVU63
 256 00b4 3268     		ldr	r2, [r6]
 257 00b6 A869     		ldr	r0, [r5, #24]
 643:boards/TMC4330_eval.c **** 			{
 258              		.loc 1 643 6 view .LVU64
 259 00b8 14F00204 		ands	r4, r4, #2
 260 00bc 09D0     		beq	.L19
 645:boards/TMC4330_eval.c **** 			}
 261              		.loc 1 645 5 is_stmt 1 view .LVU65
 262 00be 1369     		ldr	r3, [r2, #16]
 263              	.L26:
 678:boards/TMC4330_eval.c **** 		}
 264              		.loc 1 678 4 is_stmt 0 view .LVU66
 265 00c0 9847     		blx	r3
 266              	.LVL21:
 267              	.L24:
 694:boards/TMC4330_eval.c **** 	default:
 268              		.loc 1 694 3 is_stmt 1 view .LVU67
 622:boards/TMC4330_eval.c **** 
 269              		.loc 1 622 11 is_stmt 0 view .LVU68
 270 00c2 0024     		movs	r4, #0
 694:boards/TMC4330_eval.c **** 	default:
 271              		.loc 1 694 3 view .LVU69
 272 00c4 E6E7     		b	.L7
 273              	.LVL22:
 274              	.L17:
 639:boards/TMC4330_eval.c **** 				HAL.IOs->config->setLow(Pins.STOP_R);
 275              		.loc 1 639 5 is_stmt 1 view .LVU70
 276 00c6 DB68     		ldr	r3, [r3, #12]
 277 00c8 9847     		blx	r3
 278              	.LVL23:
 640:boards/TMC4330_eval.c **** 			}
 279              		.loc 1 640 5 view .LVU71
 640:boards/TMC4330_eval.c **** 			}
 280              		.loc 1 640 20 is_stmt 0 view .LVU72
 281 00ca 3368     		ldr	r3, [r6]
 640:boards/TMC4330_eval.c **** 			}
 282              		.loc 1 640 5 view .LVU73
 283 00cc 6869     		ldr	r0, [r5, #20]
 284 00ce 9B69     		ldr	r3, [r3, #24]
 285 00d0 EEE7     		b	.L23
 286              	.LVL24:
 287              	.L19:
 649:boards/TMC4330_eval.c **** 				HAL.IOs->config->setLow(Pins.STOP_L);
 288              		.loc 1 649 5 is_stmt 1 view .LVU74
 289 00d2 D368     		ldr	r3, [r2, #12]
 290 00d4 9847     		blx	r3
 291              	.LVL25:
 650:boards/TMC4330_eval.c **** 			}
 292              		.loc 1 650 5 view .LVU75
 650:boards/TMC4330_eval.c **** 			}
 293              		.loc 1 650 20 is_stmt 0 view .LVU76
 294 00d6 3368     		ldr	r3, [r6]
 650:boards/TMC4330_eval.c **** 			}
 295              		.loc 1 650 5 view .LVU77
 296 00d8 A869     		ldr	r0, [r5, #24]
 297 00da 9B69     		ldr	r3, [r3, #24]
 298              	.L25:
 683:boards/TMC4330_eval.c **** 		}
 299              		.loc 1 683 4 view .LVU78
 300 00dc 9847     		blx	r3
 301              	.LVL26:
 302 00de D9E7     		b	.L7
 303              	.LVL27:
 304              	.L13:
 660:boards/TMC4330_eval.c **** 		{
 305              		.loc 1 660 3 is_stmt 1 view .LVU79
 306 00e0 184B     		ldr	r3, .L28
 307 00e2 194D     		ldr	r5, .L28+4
 308 00e4 DE68     		ldr	r6, [r3, #12]
 660:boards/TMC4330_eval.c **** 		{
 309              		.loc 1 660 5 is_stmt 0 view .LVU80
 310 00e6 1468     		ldr	r4, [r2]
 311 00e8 2869     		ldr	r0, [r5, #16]
 312 00ea 3368     		ldr	r3, [r6]
 313 00ec 0CB1     		cbz	r4, .L20
 314              	.L27:
 678:boards/TMC4330_eval.c **** 		}
 315              		.loc 1 678 4 is_stmt 1 view .LVU81
 316 00ee 1B69     		ldr	r3, [r3, #16]
 317 00f0 E6E7     		b	.L26
 318              	.L20:
 666:boards/TMC4330_eval.c **** 			HAL.IOs->config->setLow(Pins.HOME_REF);
 319              		.loc 1 666 4 view .LVU82
 320 00f2 DB68     		ldr	r3, [r3, #12]
 321 00f4 9847     		blx	r3
 322              	.LVL28:
 667:boards/TMC4330_eval.c **** 		}
 323              		.loc 1 667 4 view .LVU83
 667:boards/TMC4330_eval.c **** 		}
 324              		.loc 1 667 19 is_stmt 0 view .LVU84
 325 00f6 3368     		ldr	r3, [r6]
 667:boards/TMC4330_eval.c **** 		}
 326              		.loc 1 667 4 view .LVU85
 327 00f8 2869     		ldr	r0, [r5, #16]
 328 00fa 9B69     		ldr	r3, [r3, #24]
 329 00fc EEE7     		b	.L25
 330              	.LVL29:
 331              	.L12:
 676:boards/TMC4330_eval.c **** 		{
 332              		.loc 1 676 3 is_stmt 1 view .LVU86
 333 00fe 114B     		ldr	r3, .L28
 334 0100 114D     		ldr	r5, .L28+4
 335 0102 DE68     		ldr	r6, [r3, #12]
 676:boards/TMC4330_eval.c **** 		{
 336              		.loc 1 676 5 is_stmt 0 view .LVU87
 337 0104 1468     		ldr	r4, [r2]
 338 0106 3368     		ldr	r3, [r6]
 339 0108 A868     		ldr	r0, [r5, #8]
 340 010a 002C     		cmp	r4, #0
 341 010c EFD1     		bne	.L27
 682:boards/TMC4330_eval.c **** 			HAL.IOs->config->setLow(Pins.FREEZE);
 342              		.loc 1 682 4 is_stmt 1 view .LVU88
 343 010e DB68     		ldr	r3, [r3, #12]
 344 0110 9847     		blx	r3
 345              	.LVL30:
 683:boards/TMC4330_eval.c **** 		}
 346              		.loc 1 683 4 view .LVU89
 683:boards/TMC4330_eval.c **** 		}
 347              		.loc 1 683 19 is_stmt 0 view .LVU90
 348 0112 3368     		ldr	r3, [r6]
 683:boards/TMC4330_eval.c **** 		}
 349              		.loc 1 683 4 view .LVU91
 350 0114 A868     		ldr	r0, [r5, #8]
 351 0116 9B69     		ldr	r3, [r3, #24]
 352 0118 E0E7     		b	.L25
 353              	.LVL31:
 354              	.L10:
 687:boards/TMC4330_eval.c **** 		if(!*value)
 355              		.loc 1 687 3 is_stmt 1 view .LVU92
 356              	.LBB203:
 357              	.LBI203:
  46:boards/TMC4330_eval.c **** {
 358              		.loc 1 46 31 view .LVU93
  46:boards/TMC4330_eval.c **** {
 359              		.loc 1 46 31 is_stmt 0 view .LVU94
 360              	.LBE203:
  48:boards/TMC4330_eval.c **** 
 361              		.loc 1 48 2 is_stmt 1 view .LVU95
  50:boards/TMC4330_eval.c **** }
 362              		.loc 1 50 2 view .LVU96
 687:boards/TMC4330_eval.c **** 		if(!*value)
 363              		.loc 1 687 12 is_stmt 0 view .LVU97
 364 011a 0C48     		ldr	r0, .L28+8
 365 011c 0121     		movs	r1, #1
 366              	.LVL32:
 687:boards/TMC4330_eval.c **** 		if(!*value)
 367              		.loc 1 687 12 view .LVU98
 368 011e FFF7FEFF 		bl	tmc4330_calibrateClosedLoop
 369              	.LVL33:
 687:boards/TMC4330_eval.c **** 		if(!*value)
 370              		.loc 1 687 10 view .LVU99
 371 0122 2060     		str	r0, [r4]
 688:boards/TMC4330_eval.c **** 			errors |= TMC_ERROR_NOT_DONE;
 372              		.loc 1 688 3 is_stmt 1 view .LVU100
 688:boards/TMC4330_eval.c **** 			errors |= TMC_ERROR_NOT_DONE;
 373              		.loc 1 688 5 is_stmt 0 view .LVU101
 374 0124 0028     		cmp	r0, #0
 375 0126 CCD1     		bne	.L24
 689:boards/TMC4330_eval.c **** 		break;
 376              		.loc 1 689 11 view .LVU102
 377 0128 2024     		movs	r4, #32
 378              	.LVL34:
 699:boards/TMC4330_eval.c **** }
 379              		.loc 1 699 2 is_stmt 1 view .LVU103
 699:boards/TMC4330_eval.c **** }
 380              		.loc 1 699 9 is_stmt 0 view .LVU104
 381 012a B3E7     		b	.L7
 382              	.LVL35:
 383              	.L14:
 692:boards/TMC4330_eval.c **** 		Evalboards.ch1.config->reset();
 384              		.loc 1 692 3 is_stmt 1 view .LVU105
 692:boards/TMC4330_eval.c **** 		Evalboards.ch1.config->reset();
 385              		.loc 1 692 17 is_stmt 0 view .LVU106
 386 012c 084C     		ldr	r4, .L28+12
 692:boards/TMC4330_eval.c **** 		Evalboards.ch1.config->reset();
 387              		.loc 1 692 24 view .LVU107
 388 012e D4F89030 		ldr	r3, [r4, #144]
 692:boards/TMC4330_eval.c **** 		Evalboards.ch1.config->reset();
 389              		.loc 1 692 3 view .LVU108
 390 0132 D3F80432 		ldr	r3, [r3, #516]
 391 0136 9847     		blx	r3
 392              	.LVL36:
 693:boards/TMC4330_eval.c **** 		break;
 393              		.loc 1 693 3 is_stmt 1 view .LVU109
 693:boards/TMC4330_eval.c **** 		break;
 394              		.loc 1 693 24 is_stmt 0 view .LVU110
 395 0138 A369     		ldr	r3, [r4, #24]
 693:boards/TMC4330_eval.c **** 		break;
 396              		.loc 1 693 3 view .LVU111
 397 013a D3F80432 		ldr	r3, [r3, #516]
 398 013e 9847     		blx	r3
 399              	.LVL37:
 400 0140 BFE7     		b	.L24
 401              	.L29:
 402 0142 00BF     		.align	2
 403              	.L28:
 404 0144 00000000 		.word	HAL
 405 0148 00000000 		.word	.LANCHOR0
 406 014c 24000000 		.word	.LANCHOR0+36
 407 0150 00000000 		.word	Evalboards
 408              		.cfi_endproc
 409              	.LFE17:
 411              		.align	1
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu softvfp
 417              	periodicJob:
 418              	.LVL38:
 419              	.LFB15:
 610:boards/TMC4330_eval.c **** 	tmc4330_periodicJob(&TMC4330, tick);
 420              		.loc 1 610 1 is_stmt 1 view -0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 611:boards/TMC4330_eval.c **** }
 425              		.loc 1 611 2 view .LVU113
 610:boards/TMC4330_eval.c **** 	tmc4330_periodicJob(&TMC4330, tick);
 426              		.loc 1 610 1 is_stmt 0 view .LVU114
 427 0154 0146     		mov	r1, r0
 611:boards/TMC4330_eval.c **** }
 428              		.loc 1 611 2 view .LVU115
 429 0156 0148     		ldr	r0, .L31
 430              	.LVL39:
 611:boards/TMC4330_eval.c **** }
 431              		.loc 1 611 2 view .LVU116
 432 0158 FFF7FEBF 		b	tmc4330_periodicJob
 433              	.LVL40:
 434              	.L32:
 611:boards/TMC4330_eval.c **** }
 435              		.loc 1 611 2 view .LVU117
 436              		.align	2
 437              	.L31:
 438 015c 24000000 		.word	.LANCHOR0+36
 439              		.cfi_endproc
 440              	.LFE15:
 442              		.align	1
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu softvfp
 448              	readRegister:
 449              	.LVL41:
 450              	.LFB14:
 605:boards/TMC4330_eval.c **** 	*value	= tmc4330_readInt(motorToIC(motor), address);
 451              		.loc 1 605 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 606:boards/TMC4330_eval.c **** }
 455              		.loc 1 606 2 view .LVU119
 456              	.LBB204:
 457              	.LBI204:
  46:boards/TMC4330_eval.c **** {
 458              		.loc 1 46 31 view .LVU120
  46:boards/TMC4330_eval.c **** {
 459              		.loc 1 46 31 is_stmt 0 view .LVU121
 460              	.LBE204:
  48:boards/TMC4330_eval.c **** 
 461              		.loc 1 48 2 is_stmt 1 view .LVU122
  50:boards/TMC4330_eval.c **** }
 462              		.loc 1 50 2 view .LVU123
 605:boards/TMC4330_eval.c **** 	*value	= tmc4330_readInt(motorToIC(motor), address);
 463              		.loc 1 605 1 is_stmt 0 view .LVU124
 464 0160 10B5     		push	{r4, lr}
 465              	.LCFI3:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 4, -8
 468              		.cfi_offset 14, -4
 606:boards/TMC4330_eval.c **** }
 469              		.loc 1 606 11 view .LVU125
 470 0162 0348     		ldr	r0, .L34
 471              	.LVL42:
 605:boards/TMC4330_eval.c **** 	*value	= tmc4330_readInt(motorToIC(motor), address);
 472              		.loc 1 605 1 view .LVU126
 473 0164 1446     		mov	r4, r2
 606:boards/TMC4330_eval.c **** }
 474              		.loc 1 606 11 view .LVU127
 475 0166 FFF7FEFF 		bl	tmc4330_readInt
 476              	.LVL43:
 606:boards/TMC4330_eval.c **** }
 477              		.loc 1 606 9 view .LVU128
 478 016a 2060     		str	r0, [r4]
 607:boards/TMC4330_eval.c **** 
 479              		.loc 1 607 1 view .LVU129
 480 016c 10BD     		pop	{r4, pc}
 481              	.LVL44:
 482              	.L35:
 607:boards/TMC4330_eval.c **** 
 483              		.loc 1 607 1 view .LVU130
 484 016e 00BF     		.align	2
 485              	.L34:
 486 0170 24000000 		.word	.LANCHOR0+36
 487              		.cfi_endproc
 488              	.LFE14:
 490              		.align	1
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu softvfp
 496              	writeRegister:
 497              	.LVL45:
 498              	.LFB13:
 600:boards/TMC4330_eval.c **** 	tmc4330_writeInt(motorToIC(motor), address, value);
 499              		.loc 1 600 1 is_stmt 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 601:boards/TMC4330_eval.c **** }
 504              		.loc 1 601 2 view .LVU132
 505              	.LBB205:
 506              	.LBI205:
  46:boards/TMC4330_eval.c **** {
 507              		.loc 1 46 31 view .LVU133
  46:boards/TMC4330_eval.c **** {
 508              		.loc 1 46 31 is_stmt 0 view .LVU134
 509              	.LBE205:
  48:boards/TMC4330_eval.c **** 
 510              		.loc 1 48 2 is_stmt 1 view .LVU135
  50:boards/TMC4330_eval.c **** }
 511              		.loc 1 50 2 view .LVU136
 601:boards/TMC4330_eval.c **** }
 512              		.loc 1 601 2 is_stmt 0 view .LVU137
 513 0174 0148     		ldr	r0, .L37
 514              	.LVL46:
 601:boards/TMC4330_eval.c **** }
 515              		.loc 1 601 2 view .LVU138
 516 0176 FFF7FEBF 		b	tmc4330_writeInt
 517              	.LVL47:
 518              	.L38:
 601:boards/TMC4330_eval.c **** }
 519              		.loc 1 601 2 view .LVU139
 520 017a 00BF     		.align	2
 521              	.L37:
 522 017c 24000000 		.word	.LANCHOR0+36
 523              		.cfi_endproc
 524              	.LFE13:
 526              		.align	1
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu softvfp
 532              	moveBy:
 533              	.LVL48:
 534              	.LFB9:
 107:boards/TMC4330_eval.c **** 	tmc4330_moveBy(motorToIC(motor), ticks, vmax_position);
 535              		.loc 1 107 1 is_stmt 1 view -0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 108:boards/TMC4330_eval.c **** 
 539              		.loc 1 108 2 view .LVU141
 540              	.LBB206:
 541              	.LBI206:
  46:boards/TMC4330_eval.c **** {
 542              		.loc 1 46 31 view .LVU142
  46:boards/TMC4330_eval.c **** {
 543              		.loc 1 46 31 is_stmt 0 view .LVU143
 544              	.LBE206:
  48:boards/TMC4330_eval.c **** 
 545              		.loc 1 48 2 is_stmt 1 view .LVU144
  50:boards/TMC4330_eval.c **** }
 546              		.loc 1 50 2 view .LVU145
 107:boards/TMC4330_eval.c **** 	tmc4330_moveBy(motorToIC(motor), ticks, vmax_position);
 547              		.loc 1 107 1 is_stmt 0 view .LVU146
 548 0180 08B5     		push	{r3, lr}
 549              	.LCFI4:
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 3, -8
 552              		.cfi_offset 14, -4
 108:boards/TMC4330_eval.c **** 
 553              		.loc 1 108 2 view .LVU147
 554 0182 0448     		ldr	r0, .L40
 555              	.LVL49:
 108:boards/TMC4330_eval.c **** 
 556              		.loc 1 108 2 view .LVU148
 557 0184 D0F8B822 		ldr	r2, [r0, #696]
 558 0188 2430     		adds	r0, r0, #36
 559 018a FFF7FEFF 		bl	tmc4330_moveBy
 560              	.LVL50:
 110:boards/TMC4330_eval.c **** }
 561              		.loc 1 110 2 is_stmt 1 view .LVU149
 111:boards/TMC4330_eval.c **** // <= Functions forwarded to API
 562              		.loc 1 111 1 is_stmt 0 view .LVU150
 563 018e 0020     		movs	r0, #0
 564 0190 08BD     		pop	{r3, pc}
 565              	.L41:
 566 0192 00BF     		.align	2
 567              	.L40:
 568 0194 00000000 		.word	.LANCHOR0
 569              		.cfi_endproc
 570              	.LFE9:
 572              		.align	1
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu softvfp
 578              	moveTo:
 579              	.LVL51:
 580              	.LFB8:
 100:boards/TMC4330_eval.c **** 	tmc4330_moveTo(motorToIC(motor), position, vmax_position);
 581              		.loc 1 100 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 101:boards/TMC4330_eval.c **** 
 585              		.loc 1 101 2 view .LVU152
 586              	.LBB207:
 587              	.LBI207:
  46:boards/TMC4330_eval.c **** {
 588              		.loc 1 46 31 view .LVU153
  46:boards/TMC4330_eval.c **** {
 589              		.loc 1 46 31 is_stmt 0 view .LVU154
 590              	.LBE207:
  48:boards/TMC4330_eval.c **** 
 591              		.loc 1 48 2 is_stmt 1 view .LVU155
  50:boards/TMC4330_eval.c **** }
 592              		.loc 1 50 2 view .LVU156
 100:boards/TMC4330_eval.c **** 	tmc4330_moveTo(motorToIC(motor), position, vmax_position);
 593              		.loc 1 100 1 is_stmt 0 view .LVU157
 594 0198 08B5     		push	{r3, lr}
 595              	.LCFI5:
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 3, -8
 598              		.cfi_offset 14, -4
 101:boards/TMC4330_eval.c **** 
 599              		.loc 1 101 2 view .LVU158
 600 019a 0448     		ldr	r0, .L43
 601              	.LVL52:
 101:boards/TMC4330_eval.c **** 
 602              		.loc 1 101 2 view .LVU159
 603 019c D0F8B822 		ldr	r2, [r0, #696]
 604 01a0 2430     		adds	r0, r0, #36
 605 01a2 FFF7FEFF 		bl	tmc4330_moveTo
 606              	.LVL53:
 103:boards/TMC4330_eval.c **** }
 607              		.loc 1 103 2 is_stmt 1 view .LVU160
 104:boards/TMC4330_eval.c **** 
 608              		.loc 1 104 1 is_stmt 0 view .LVU161
 609 01a6 0020     		movs	r0, #0
 610 01a8 08BD     		pop	{r3, pc}
 611              	.L44:
 612 01aa 00BF     		.align	2
 613              	.L43:
 614 01ac 00000000 		.word	.LANCHOR0
 615              		.cfi_endproc
 616              	.LFE8:
 618              		.align	1
 619              		.syntax unified
 620              		.thumb
 621              		.thumb_func
 622              		.fpu softvfp
 624              	handleParameter:
 625              	.LVL54:
 626              	.LFB10:
 115:boards/TMC4330_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 627              		.loc 1 115 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 631              		.loc 1 116 2 view .LVU163
 117:boards/TMC4330_eval.c **** 
 632              		.loc 1 117 2 view .LVU164
 119:boards/TMC4330_eval.c **** 		return TMC_ERROR_MOTOR;
 633              		.loc 1 119 2 view .LVU165
 115:boards/TMC4330_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 634              		.loc 1 115 1 is_stmt 0 view .LVU166
 635 01b0 70B5     		push	{r4, r5, r6, lr}
 636              	.LCFI6:
 637              		.cfi_def_cfa_offset 16
 638              		.cfi_offset 4, -16
 639              		.cfi_offset 5, -12
 640              		.cfi_offset 6, -8
 641              		.cfi_offset 14, -4
 115:boards/TMC4330_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 642              		.loc 1 115 1 view .LVU167
 643 01b2 0546     		mov	r5, r0
 644 01b4 1E46     		mov	r6, r3
 119:boards/TMC4330_eval.c **** 		return TMC_ERROR_MOTOR;
 645              		.loc 1 119 4 view .LVU168
 646 01b6 0C46     		mov	r4, r1
 647 01b8 0029     		cmp	r1, #0
 648 01ba 40F06C83 		bne	.L143
 122:boards/TMC4330_eval.c **** 	{
 649              		.loc 1 122 2 is_stmt 1 view .LVU169
 650 01be 8A2A     		cmp	r2, #138
 651 01c0 4BD8     		bhi	.L47
 652 01c2 6B2A     		cmp	r2, #107
 653 01c4 03D8     		bhi	.L48
 654 01c6 1B2A     		cmp	r2, #27
 655 01c8 26D9     		bls	.L166
 656 01ca 0425     		movs	r5, #4
 657 01cc 50E0     		b	.L45
 658              	.L48:
 659 01ce 6C3A     		subs	r2, r2, #108
 660              	.LVL55:
 122:boards/TMC4330_eval.c **** 	{
 661              		.loc 1 122 2 is_stmt 0 view .LVU170
 662 01d0 1E2A     		cmp	r2, #30
 663 01d2 00F26283 		bhi	.L145
 664 01d6 DFE812F0 		tbh	[pc, r2, lsl #1]
 665              	.LVL56:
 666              	.L51:
 667 01da A701     		.2byte	(.L72-.L51)/2
 668 01dc B501     		.2byte	(.L71-.L51)/2
 669 01de C301     		.2byte	(.L70-.L51)/2
 670 01e0 D801     		.2byte	(.L69-.L51)/2
 671 01e2 EE01     		.2byte	(.L68-.L51)/2
 672 01e4 FC01     		.2byte	(.L67-.L51)/2
 673 01e6 1002     		.2byte	(.L66-.L51)/2
 674 01e8 2702     		.2byte	(.L65-.L51)/2
 675 01ea 3502     		.2byte	(.L64-.L51)/2
 676 01ec 4302     		.2byte	(.L63-.L51)/2
 677 01ee 5A02     		.2byte	(.L62-.L51)/2
 678 01f0 7002     		.2byte	(.L61-.L51)/2
 679 01f2 6003     		.2byte	(.L145-.L51)/2
 680 01f4 6003     		.2byte	(.L145-.L51)/2
 681 01f6 6003     		.2byte	(.L145-.L51)/2
 682 01f8 6003     		.2byte	(.L145-.L51)/2
 683 01fa 7E02     		.2byte	(.L60-.L51)/2
 684 01fc 8C02     		.2byte	(.L59-.L51)/2
 685 01fe 9A02     		.2byte	(.L58-.L51)/2
 686 0200 6003     		.2byte	(.L145-.L51)/2
 687 0202 6003     		.2byte	(.L145-.L51)/2
 688 0204 B202     		.2byte	(.L57-.L51)/2
 689 0206 6003     		.2byte	(.L145-.L51)/2
 690 0208 6003     		.2byte	(.L145-.L51)/2
 691 020a CA02     		.2byte	(.L56-.L51)/2
 692 020c D302     		.2byte	(.L55-.L51)/2
 693 020e E502     		.2byte	(.L54-.L51)/2
 694 0210 6003     		.2byte	(.L145-.L51)/2
 695 0212 F302     		.2byte	(.L53-.L51)/2
 696 0214 0703     		.2byte	(.L52-.L51)/2
 697 0216 1D03     		.2byte	(.L50-.L51)/2
 698              		.p2align 1
 699              	.L166:
 122:boards/TMC4330_eval.c **** 	{
 700              		.loc 1 122 2 view .LVU171
 701 0218 1B2A     		cmp	r2, #27
 702 021a 00F24083 		bhi	.L146
 703 021e DFE812F0 		tbh	[pc, r2, lsl #1]
 704              	.LVL57:
 705              	.L74:
 706 0222 2E00     		.2byte	(.L94-.L74)/2
 707 0224 3C00     		.2byte	(.L93-.L74)/2
 708 0226 4A00     		.2byte	(.L92-.L74)/2
 709 0228 5C00     		.2byte	(.L91-.L74)/2
 710 022a 6500     		.2byte	(.L90-.L74)/2
 711 022c 8100     		.2byte	(.L89-.L74)/2
 712 022e 3E03     		.2byte	(.L146-.L74)/2
 713 0230 3E03     		.2byte	(.L146-.L74)/2
 714 0232 9500     		.2byte	(.L88-.L74)/2
 715 0234 3E03     		.2byte	(.L146-.L74)/2
 716 0236 3E03     		.2byte	(.L146-.L74)/2
 717 0238 3E03     		.2byte	(.L146-.L74)/2
 718 023a 3E03     		.2byte	(.L146-.L74)/2
 719 023c 3E03     		.2byte	(.L146-.L74)/2
 720 023e A000     		.2byte	(.L87-.L74)/2
 721 0240 B300     		.2byte	(.L86-.L74)/2
 722 0242 C100     		.2byte	(.L85-.L74)/2
 723 0244 D500     		.2byte	(.L84-.L74)/2
 724 0246 E900     		.2byte	(.L83-.L74)/2
 725 0248 F700     		.2byte	(.L82-.L74)/2
 726 024a 0B01     		.2byte	(.L81-.L74)/2
 727 024c 1901     		.2byte	(.L80-.L74)/2
 728 024e 2B01     		.2byte	(.L79-.L74)/2
 729 0250 3901     		.2byte	(.L78-.L74)/2
 730 0252 4701     		.2byte	(.L77-.L74)/2
 731 0254 5501     		.2byte	(.L76-.L74)/2
 732 0256 6301     		.2byte	(.L75-.L74)/2
 733 0258 7501     		.2byte	(.L73-.L74)/2
 734              		.p2align 1
 735              	.L47:
 122:boards/TMC4330_eval.c **** 	{
 736              		.loc 1 122 2 view .LVU172
 737 025a D42A     		cmp	r2, #212
 738 025c 00F0FE82 		beq	.L95
 739 0260 08D8     		bhi	.L96
 740 0262 C82A     		cmp	r2, #200
 741 0264 00F0B581 		beq	.L67
 742 0268 D12A     		cmp	r2, #209
 743 026a 00F0E982 		beq	.L97
 744 026e 0425     		movs	r5, #4
 745              	.LVL58:
 746              	.L45:
 587:boards/TMC4330_eval.c **** 
 747              		.loc 1 587 1 view .LVU173
 748 0270 2846     		mov	r0, r5
 749 0272 70BD     		pop	{r4, r5, r6, pc}
 750              	.LVL59:
 751              	.L96:
 122:boards/TMC4330_eval.c **** 	{
 752              		.loc 1 122 2 view .LVU174
 753 0274 D62A     		cmp	r2, #214
 754 0276 00F0FE82 		beq	.L98
 755 027a 0425     		movs	r5, #4
 756 027c F8E7     		b	.L45
 757              	.LVL60:
 758              	.L94:
 126:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_X_TARGET);
 759              		.loc 1 126 3 is_stmt 1 view .LVU175
 126:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_X_TARGET);
 760              		.loc 1 126 5 is_stmt 0 view .LVU176
 761 027e 28B9     		cbnz	r0, .L99
 127:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 762              		.loc 1 127 4 is_stmt 1 view .LVU177
 763              	.LBB208:
 764              	.LBI208:
  46:boards/TMC4330_eval.c **** {
 765              		.loc 1 46 31 view .LVU178
 766              	.LVL61:
  46:boards/TMC4330_eval.c **** {
 767              		.loc 1 46 31 is_stmt 0 view .LVU179
 768              	.LBE208:
  48:boards/TMC4330_eval.c **** 
 769              		.loc 1 48 2 is_stmt 1 view .LVU180
  50:boards/TMC4330_eval.c **** }
 770              		.loc 1 50 2 view .LVU181
 127:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 771              		.loc 1 127 13 is_stmt 0 view .LVU182
 772 0280 A048     		ldr	r0, .L167
 773              	.LVL62:
 127:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 774              		.loc 1 127 13 view .LVU183
 775 0282 3721     		movs	r1, #55
 776              	.LVL63:
 127:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 777              		.loc 1 127 13 view .LVU184
 778 0284 FFF7FEFF 		bl	tmc4330_readInt
 779              	.LVL64:
 127:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 780              		.loc 1 127 11 view .LVU185
 781 0288 3060     		str	r0, [r6]
 782 028a F1E7     		b	.L45
 783              	.LVL65:
 784              	.L99:
 128:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_X_TARGET, *value);
 785              		.loc 1 128 10 is_stmt 1 view .LVU186
 129:boards/TMC4330_eval.c **** 		}
 786              		.loc 1 129 4 view .LVU187
 787              	.LBB209:
 788              	.LBI209:
  46:boards/TMC4330_eval.c **** {
 789              		.loc 1 46 31 view .LVU188
  46:boards/TMC4330_eval.c **** {
 790              		.loc 1 46 31 is_stmt 0 view .LVU189
 791              	.LBE209:
  48:boards/TMC4330_eval.c **** 
 792              		.loc 1 48 2 is_stmt 1 view .LVU190
  50:boards/TMC4330_eval.c **** }
 793              		.loc 1 50 2 view .LVU191
 129:boards/TMC4330_eval.c **** 		}
 794              		.loc 1 129 4 is_stmt 0 view .LVU192
 795 028c 3268     		ldr	r2, [r6]
 796              	.LVL66:
 129:boards/TMC4330_eval.c **** 		}
 797              		.loc 1 129 4 view .LVU193
 798 028e 9D48     		ldr	r0, .L167
 799              	.LVL67:
 129:boards/TMC4330_eval.c **** 		}
 800              		.loc 1 129 4 view .LVU194
 801 0290 3721     		movs	r1, #55
 802              	.LVL68:
 129:boards/TMC4330_eval.c **** 		}
 803              		.loc 1 129 4 view .LVU195
 804 0292 FFF7FEFF 		bl	tmc4330_writeInt
 805              	.LVL69:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 806              		.loc 1 116 11 view .LVU196
 807 0296 0025     		movs	r5, #0
 808 0298 EAE7     		b	.L45
 809              	.LVL70:
 810              	.L93:
 134:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_XACTUAL);
 811              		.loc 1 134 3 is_stmt 1 view .LVU197
 134:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_XACTUAL);
 812              		.loc 1 134 5 is_stmt 0 view .LVU198
 813 029a 28B9     		cbnz	r0, .L100
 135:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 814              		.loc 1 135 4 is_stmt 1 view .LVU199
 815              	.LBB210:
 816              	.LBI210:
  46:boards/TMC4330_eval.c **** {
 817              		.loc 1 46 31 view .LVU200
 818              	.LVL71:
  46:boards/TMC4330_eval.c **** {
 819              		.loc 1 46 31 is_stmt 0 view .LVU201
 820              	.LBE210:
  48:boards/TMC4330_eval.c **** 
 821              		.loc 1 48 2 is_stmt 1 view .LVU202
  50:boards/TMC4330_eval.c **** }
 822              		.loc 1 50 2 view .LVU203
 135:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 823              		.loc 1 135 13 is_stmt 0 view .LVU204
 824 029c 9948     		ldr	r0, .L167
 825              	.LVL72:
 135:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 826              		.loc 1 135 13 view .LVU205
 827 029e 2121     		movs	r1, #33
 828              	.LVL73:
 135:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 829              		.loc 1 135 13 view .LVU206
 830 02a0 FFF7FEFF 		bl	tmc4330_readInt
 831              	.LVL74:
 135:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 832              		.loc 1 135 11 view .LVU207
 833 02a4 3060     		str	r0, [r6]
 834 02a6 E3E7     		b	.L45
 835              	.LVL75:
 836              	.L100:
 136:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_XACTUAL, *value);
 837              		.loc 1 136 10 is_stmt 1 view .LVU208
 137:boards/TMC4330_eval.c **** 		}
 838              		.loc 1 137 4 view .LVU209
 839              	.LBB211:
 840              	.LBI211:
  46:boards/TMC4330_eval.c **** {
 841              		.loc 1 46 31 view .LVU210
  46:boards/TMC4330_eval.c **** {
 842              		.loc 1 46 31 is_stmt 0 view .LVU211
 843              	.LBE211:
  48:boards/TMC4330_eval.c **** 
 844              		.loc 1 48 2 is_stmt 1 view .LVU212
  50:boards/TMC4330_eval.c **** }
 845              		.loc 1 50 2 view .LVU213
 137:boards/TMC4330_eval.c **** 		}
 846              		.loc 1 137 4 is_stmt 0 view .LVU214
 847 02a8 3268     		ldr	r2, [r6]
 848              	.LVL76:
 137:boards/TMC4330_eval.c **** 		}
 849              		.loc 1 137 4 view .LVU215
 850 02aa 9648     		ldr	r0, .L167
 851              	.LVL77:
 137:boards/TMC4330_eval.c **** 		}
 852              		.loc 1 137 4 view .LVU216
 853 02ac 2121     		movs	r1, #33
 854              	.LVL78:
 137:boards/TMC4330_eval.c **** 		}
 855              		.loc 1 137 4 view .LVU217
 856 02ae FFF7FEFF 		bl	tmc4330_writeInt
 857              	.LVL79:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 858              		.loc 1 116 11 view .LVU218
 859 02b2 0025     		movs	r5, #0
 860 02b4 DCE7     		b	.L45
 861              	.LVL80:
 862              	.L92:
 142:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VMAX) >> 8;
 863              		.loc 1 142 3 is_stmt 1 view .LVU219
 142:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VMAX) >> 8;
 864              		.loc 1 142 5 is_stmt 0 view .LVU220
 865 02b6 30B9     		cbnz	r0, .L101
 143:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 866              		.loc 1 143 4 is_stmt 1 view .LVU221
 867              	.LBB212:
 868              	.LBI212:
  46:boards/TMC4330_eval.c **** {
 869              		.loc 1 46 31 view .LVU222
 870              	.LVL81:
  46:boards/TMC4330_eval.c **** {
 871              		.loc 1 46 31 is_stmt 0 view .LVU223
 872              	.LBE212:
  48:boards/TMC4330_eval.c **** 
 873              		.loc 1 48 2 is_stmt 1 view .LVU224
  50:boards/TMC4330_eval.c **** }
 874              		.loc 1 50 2 view .LVU225
 143:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 875              		.loc 1 143 13 is_stmt 0 view .LVU226
 876 02b8 9248     		ldr	r0, .L167
 877              	.LVL82:
 143:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 878              		.loc 1 143 13 view .LVU227
 879 02ba 2421     		movs	r1, #36
 880              	.LVL83:
 143:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 881              		.loc 1 143 13 view .LVU228
 882 02bc FFF7FEFF 		bl	tmc4330_readInt
 883              	.LVL84:
 143:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 884              		.loc 1 143 61 view .LVU229
 885 02c0 0012     		asrs	r0, r0, #8
 143:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 886              		.loc 1 143 11 view .LVU230
 887 02c2 3060     		str	r0, [r6]
 888 02c4 D4E7     		b	.L45
 889              	.LVL85:
 890              	.L101:
 144:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VMAX, tmc4330_discardVelocityDecimals(*value));
 891              		.loc 1 144 10 is_stmt 1 view .LVU231
 145:boards/TMC4330_eval.c **** 		}
 892              		.loc 1 145 4 view .LVU232
 893              	.LBB213:
 894              	.LBI213:
  46:boards/TMC4330_eval.c **** {
 895              		.loc 1 46 31 view .LVU233
  46:boards/TMC4330_eval.c **** {
 896              		.loc 1 46 31 is_stmt 0 view .LVU234
 897              	.LBE213:
  48:boards/TMC4330_eval.c **** 
 898              		.loc 1 48 2 is_stmt 1 view .LVU235
  50:boards/TMC4330_eval.c **** }
 899              		.loc 1 50 2 view .LVU236
 145:boards/TMC4330_eval.c **** 		}
 900              		.loc 1 145 4 is_stmt 0 view .LVU237
 901 02c6 3068     		ldr	r0, [r6]
 902              	.LVL86:
 145:boards/TMC4330_eval.c **** 		}
 903              		.loc 1 145 4 view .LVU238
 904 02c8 FFF7FEFF 		bl	tmc4330_discardVelocityDecimals
 905              	.LVL87:
 145:boards/TMC4330_eval.c **** 		}
 906              		.loc 1 145 4 view .LVU239
 907 02cc 2421     		movs	r1, #36
 908 02ce 0246     		mov	r2, r0
 909 02d0 8C48     		ldr	r0, .L167
 910 02d2 FFF7FEFF 		bl	tmc4330_writeInt
 911              	.LVL88:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 912              		.loc 1 116 11 view .LVU240
 913 02d6 0025     		movs	r5, #0
 914 02d8 CAE7     		b	.L45
 915              	.LVL89:
 916              	.L91:
 150:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VACTUAL);
 917              		.loc 1 150 3 is_stmt 1 view .LVU241
 150:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VACTUAL);
 918              		.loc 1 150 5 is_stmt 0 view .LVU242
 919 02da 0028     		cmp	r0, #0
 920 02dc 40F0E182 		bne	.L147
 151:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 921              		.loc 1 151 4 is_stmt 1 view .LVU243
 922              	.LBB214:
 923              	.LBI214:
  46:boards/TMC4330_eval.c **** {
 924              		.loc 1 46 31 view .LVU244
 925              	.LVL90:
  46:boards/TMC4330_eval.c **** {
 926              		.loc 1 46 31 is_stmt 0 view .LVU245
 927              	.LBE214:
  48:boards/TMC4330_eval.c **** 
 928              		.loc 1 48 2 is_stmt 1 view .LVU246
  50:boards/TMC4330_eval.c **** }
 929              		.loc 1 50 2 view .LVU247
 151:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 930              		.loc 1 151 13 is_stmt 0 view .LVU248
 931 02e0 8848     		ldr	r0, .L167
 932              	.LVL91:
 151:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 933              		.loc 1 151 13 view .LVU249
 934 02e2 2221     		movs	r1, #34
 935              	.LVL92:
 151:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 936              		.loc 1 151 13 view .LVU250
 937 02e4 FFF7FEFF 		bl	tmc4330_readInt
 938              	.LVL93:
 151:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 939              		.loc 1 151 11 view .LVU251
 940 02e8 3060     		str	r0, [r6]
 941 02ea C1E7     		b	.L45
 942              	.LVL94:
 943              	.L90:
 158:boards/TMC4330_eval.c **** 			*value = vmax_position;
 944              		.loc 1 158 3 is_stmt 1 view .LVU252
 945 02ec 864C     		ldr	r4, .L167+4
 158:boards/TMC4330_eval.c **** 			*value = vmax_position;
 946              		.loc 1 158 5 is_stmt 0 view .LVU253
 947 02ee 18B9     		cbnz	r0, .L102
 159:boards/TMC4330_eval.c **** 			//*value = tmc4330_readInt(motorToIC(motor), TMC4330_VMAX) >> 8;
 948              		.loc 1 159 4 is_stmt 1 view .LVU254
 159:boards/TMC4330_eval.c **** 			//*value = tmc4330_readInt(motorToIC(motor), TMC4330_VMAX) >> 8;
 949              		.loc 1 159 11 is_stmt 0 view .LVU255
 950 02f0 D4F8B832 		ldr	r3, [r4, #696]
 951 02f4 3360     		str	r3, [r6]
 952 02f6 BBE7     		b	.L45
 953              	.L102:
 161:boards/TMC4330_eval.c **** 			vmax_position = *value;
 954              		.loc 1 161 10 is_stmt 1 view .LVU256
 162:boards/TMC4330_eval.c **** 			// Write VMAX if already in position mode
 955              		.loc 1 162 4 view .LVU257
 162:boards/TMC4330_eval.c **** 			// Write VMAX if already in position mode
 956              		.loc 1 162 18 is_stmt 0 view .LVU258
 957 02f8 3368     		ldr	r3, [r6]
 958 02fa C4F8B832 		str	r3, [r4, #696]
 164:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_VMAX, tmc4330_discardVelocityDecimals(vmax_position)
 959              		.loc 1 164 4 is_stmt 1 view .LVU259
 960              	.LBB215:
 961              	.LBI215:
  46:boards/TMC4330_eval.c **** {
 962              		.loc 1 46 31 view .LVU260
 963              	.LVL95:
  46:boards/TMC4330_eval.c **** {
 964              		.loc 1 46 31 is_stmt 0 view .LVU261
 965              	.LBE215:
  48:boards/TMC4330_eval.c **** 
 966              		.loc 1 48 2 is_stmt 1 view .LVU262
  50:boards/TMC4330_eval.c **** }
 967              		.loc 1 50 2 view .LVU263
 164:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_VMAX, tmc4330_discardVelocityDecimals(vmax_position)
 968              		.loc 1 164 7 is_stmt 0 view .LVU264
 969 02fe 2021     		movs	r1, #32
 970              	.LVL96:
 164:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_VMAX, tmc4330_discardVelocityDecimals(vmax_position)
 971              		.loc 1 164 7 view .LVU265
 972 0300 04F12400 		add	r0, r4, #36
 973              	.LVL97:
 164:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_VMAX, tmc4330_discardVelocityDecimals(vmax_position)
 974              		.loc 1 164 7 view .LVU266
 975 0304 FFF7FEFF 		bl	tmc4330_readInt
 976              	.LVL98:
 164:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_VMAX, tmc4330_discardVelocityDecimals(vmax_position)
 977              		.loc 1 164 6 view .LVU267
 978 0308 4207     		lsls	r2, r0, #29
 979 030a 40F12382 		bpl	.L103
 165:boards/TMC4330_eval.c **** 		}
 980              		.loc 1 165 5 is_stmt 1 view .LVU268
 981              	.LBB216:
 982              	.LBI216:
  46:boards/TMC4330_eval.c **** {
 983              		.loc 1 46 31 view .LVU269
 984              	.LVL99:
  46:boards/TMC4330_eval.c **** {
 985              		.loc 1 46 31 is_stmt 0 view .LVU270
 986              	.LBE216:
  48:boards/TMC4330_eval.c **** 
 987              		.loc 1 48 2 is_stmt 1 view .LVU271
  50:boards/TMC4330_eval.c **** }
 988              		.loc 1 50 2 view .LVU272
 165:boards/TMC4330_eval.c **** 		}
 989              		.loc 1 165 5 is_stmt 0 view .LVU273
 990 030e D4F8B802 		ldr	r0, [r4, #696]
 991 0312 FFF7FEFF 		bl	tmc4330_discardVelocityDecimals
 992              	.LVL100:
 993 0316 2421     		movs	r1, #36
 994 0318 0246     		mov	r2, r0
 995 031a 6018     		adds	r0, r4, r1
 996 031c FFF7FEFF 		bl	tmc4330_writeInt
 997              	.LVL101:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 998              		.loc 1 116 11 view .LVU274
 999 0320 0025     		movs	r5, #0
 1000 0322 A5E7     		b	.L45
 1001              	.LVL102:
 1002              	.L89:
 170:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_AMAX)>>2;
 1003              		.loc 1 170 3 is_stmt 1 view .LVU275
 170:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_AMAX)>>2;
 1004              		.loc 1 170 5 is_stmt 0 view .LVU276
 1005 0324 30B9     		cbnz	r0, .L104
 171:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1006              		.loc 1 171 4 is_stmt 1 view .LVU277
 1007              	.LBB217:
 1008              	.LBI217:
  46:boards/TMC4330_eval.c **** {
 1009              		.loc 1 46 31 view .LVU278
 1010              	.LVL103:
  46:boards/TMC4330_eval.c **** {
 1011              		.loc 1 46 31 is_stmt 0 view .LVU279
 1012              	.LBE217:
  48:boards/TMC4330_eval.c **** 
 1013              		.loc 1 48 2 is_stmt 1 view .LVU280
  50:boards/TMC4330_eval.c **** }
 1014              		.loc 1 50 2 view .LVU281
 171:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1015              		.loc 1 171 13 is_stmt 0 view .LVU282
 1016 0326 7748     		ldr	r0, .L167
 1017              	.LVL104:
 171:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1018              		.loc 1 171 13 view .LVU283
 1019 0328 2821     		movs	r1, #40
 1020              	.LVL105:
 171:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1021              		.loc 1 171 13 view .LVU284
 1022 032a FFF7FEFF 		bl	tmc4330_readInt
 1023              	.LVL106:
 171:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1024              		.loc 1 171 60 view .LVU285
 1025 032e 8010     		asrs	r0, r0, #2
 171:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1026              		.loc 1 171 11 view .LVU286
 1027 0330 3060     		str	r0, [r6]
 1028 0332 9DE7     		b	.L45
 1029              	.LVL107:
 1030              	.L104:
 172:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 1031              		.loc 1 172 10 is_stmt 1 view .LVU287
 173:boards/TMC4330_eval.c **** 			{
 1032              		.loc 1 173 4 view .LVU288
 173:boards/TMC4330_eval.c **** 			{
 1033              		.loc 1 173 7 is_stmt 0 view .LVU289
 1034 0334 3268     		ldr	r2, [r6]
 1035              	.LVL108:
 173:boards/TMC4330_eval.c **** 			{
 1036              		.loc 1 173 14 view .LVU290
 1037 0336 950D     		lsrs	r5, r2, #22
 1038 0338 AD05     		lsls	r5, r5, #22
 173:boards/TMC4330_eval.c **** 			{
 1039              		.loc 1 173 6 view .LVU291
 1040 033a 002D     		cmp	r5, #0
 1041 033c 40F0B382 		bne	.L148
 179:boards/TMC4330_eval.c **** 			}
 1042              		.loc 1 179 5 is_stmt 1 view .LVU292
 1043              	.LBB218:
 1044              	.LBI218:
  46:boards/TMC4330_eval.c **** {
 1045              		.loc 1 46 31 view .LVU293
 1046              	.LVL109:
  46:boards/TMC4330_eval.c **** {
 1047              		.loc 1 46 31 is_stmt 0 view .LVU294
 1048              	.LBE218:
  48:boards/TMC4330_eval.c **** 
 1049              		.loc 1 48 2 is_stmt 1 view .LVU295
  50:boards/TMC4330_eval.c **** }
 1050              		.loc 1 50 2 view .LVU296
 179:boards/TMC4330_eval.c **** 			}
 1051              		.loc 1 179 5 is_stmt 0 view .LVU297
 1052 0340 7048     		ldr	r0, .L167
 1053              	.LVL110:
 179:boards/TMC4330_eval.c **** 			}
 1054              		.loc 1 179 5 view .LVU298
 1055 0342 9200     		lsls	r2, r2, #2
 1056 0344 2821     		movs	r1, #40
 1057              	.LVL111:
 179:boards/TMC4330_eval.c **** 			}
 1058              		.loc 1 179 5 view .LVU299
 1059 0346 FFF7FEFF 		bl	tmc4330_writeInt
 1060              	.LVL112:
 1061 034a 91E7     		b	.L45
 1062              	.LVL113:
 1063              	.L88:
 185:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_STATUS) & (1<<0))? 1:0;
 1064              		.loc 1 185 3 is_stmt 1 view .LVU300
 185:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_STATUS) & (1<<0))? 1:0;
 1065              		.loc 1 185 5 is_stmt 0 view .LVU301
 1066 034c 0028     		cmp	r0, #0
 1067 034e 40F0AC82 		bne	.L149
 186:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 1068              		.loc 1 186 4 is_stmt 1 view .LVU302
 1069              	.LBB219:
 1070              	.LBI219:
  46:boards/TMC4330_eval.c **** {
 1071              		.loc 1 46 31 view .LVU303
 1072              	.LVL114:
  46:boards/TMC4330_eval.c **** {
 1073              		.loc 1 46 31 is_stmt 0 view .LVU304
 1074              	.LBE219:
  48:boards/TMC4330_eval.c **** 
 1075              		.loc 1 48 2 is_stmt 1 view .LVU305
  50:boards/TMC4330_eval.c **** }
 1076              		.loc 1 50 2 view .LVU306
 186:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 1077              		.loc 1 186 14 is_stmt 0 view .LVU307
 1078 0352 6C48     		ldr	r0, .L167
 1079              	.LVL115:
 186:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 1080              		.loc 1 186 14 view .LVU308
 1081 0354 0F21     		movs	r1, #15
 1082              	.LVL116:
 186:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 1083              		.loc 1 186 14 view .LVU309
 1084 0356 FFF7FEFF 		bl	tmc4330_readInt
 1085              	.LVL117:
 186:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 1086              		.loc 1 186 11 view .LVU310
 1087 035a 00F00100 		and	r0, r0, #1
 1088 035e 3060     		str	r0, [r6]
 1089 0360 86E7     		b	.L45
 1090              	.LVL118:
 1091              	.L87:
 192:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_RAMPMODE)<<1;
 1092              		.loc 1 192 3 is_stmt 1 view .LVU311
 192:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_RAMPMODE)<<1;
 1093              		.loc 1 192 5 is_stmt 0 view .LVU312
 1094 0362 30B9     		cbnz	r0, .L105
 193:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1095              		.loc 1 193 4 is_stmt 1 view .LVU313
 1096              	.LBB220:
 1097              	.LBI220:
  46:boards/TMC4330_eval.c **** {
 1098              		.loc 1 46 31 view .LVU314
 1099              	.LVL119:
  46:boards/TMC4330_eval.c **** {
 1100              		.loc 1 46 31 is_stmt 0 view .LVU315
 1101              	.LBE220:
  48:boards/TMC4330_eval.c **** 
 1102              		.loc 1 48 2 is_stmt 1 view .LVU316
  50:boards/TMC4330_eval.c **** }
 1103              		.loc 1 50 2 view .LVU317
 193:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1104              		.loc 1 193 13 is_stmt 0 view .LVU318
 1105 0364 6748     		ldr	r0, .L167
 1106              	.LVL120:
 193:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1107              		.loc 1 193 13 view .LVU319
 1108 0366 2021     		movs	r1, #32
 1109              	.LVL121:
 193:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1110              		.loc 1 193 13 view .LVU320
 1111 0368 FFF7FEFF 		bl	tmc4330_readInt
 1112              	.LVL122:
 193:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1113              		.loc 1 193 64 view .LVU321
 1114 036c 4000     		lsls	r0, r0, #1
 193:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1115              		.loc 1 193 11 view .LVU322
 1116 036e 3060     		str	r0, [r6]
 1117 0370 7EE7     		b	.L45
 1118              	.LVL123:
 1119              	.L105:
 194:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_RAMPMODE, (*value) ? TMC4330_RAMP_SSHAPE : TMC4330_RA
 1120              		.loc 1 194 10 is_stmt 1 view .LVU323
 195:boards/TMC4330_eval.c **** 		}
 1121              		.loc 1 195 4 view .LVU324
 1122              	.LBB221:
 1123              	.LBI221:
  46:boards/TMC4330_eval.c **** {
 1124              		.loc 1 46 31 view .LVU325
  46:boards/TMC4330_eval.c **** {
 1125              		.loc 1 46 31 is_stmt 0 view .LVU326
 1126              	.LBE221:
  48:boards/TMC4330_eval.c **** 
 1127              		.loc 1 48 2 is_stmt 1 view .LVU327
  50:boards/TMC4330_eval.c **** }
 1128              		.loc 1 50 2 view .LVU328
 195:boards/TMC4330_eval.c **** 		}
 1129              		.loc 1 195 4 is_stmt 0 view .LVU329
 1130 0372 3368     		ldr	r3, [r6]
 1131 0374 6348     		ldr	r0, .L167
 1132              	.LVL124:
 195:boards/TMC4330_eval.c **** 		}
 1133              		.loc 1 195 4 view .LVU330
 1134 0376 002B     		cmp	r3, #0
 1135 0378 14BF     		ite	ne
 1136 037a 0222     		movne	r2, #2
 1137              	.LVL125:
 195:boards/TMC4330_eval.c **** 		}
 1138              		.loc 1 195 4 view .LVU331
 1139 037c 0122     		moveq	r2, #1
 1140 037e 2021     		movs	r1, #32
 1141              	.LVL126:
 195:boards/TMC4330_eval.c **** 		}
 1142              		.loc 1 195 4 view .LVU332
 1143 0380 FFF7FEFF 		bl	tmc4330_writeInt
 1144              	.LVL127:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1145              		.loc 1 116 11 view .LVU333
 1146 0384 0025     		movs	r5, #0
 1147 0386 73E7     		b	.L45
 1148              	.LVL128:
 1149              	.L86:
 200:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VSTART);
 1150              		.loc 1 200 3 is_stmt 1 view .LVU334
 200:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VSTART);
 1151              		.loc 1 200 5 is_stmt 0 view .LVU335
 1152 0388 28B9     		cbnz	r0, .L107
 201:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1153              		.loc 1 201 4 is_stmt 1 view .LVU336
 1154              	.LBB222:
 1155              	.LBI222:
  46:boards/TMC4330_eval.c **** {
 1156              		.loc 1 46 31 view .LVU337
 1157              	.LVL129:
  46:boards/TMC4330_eval.c **** {
 1158              		.loc 1 46 31 is_stmt 0 view .LVU338
 1159              	.LBE222:
  48:boards/TMC4330_eval.c **** 
 1160              		.loc 1 48 2 is_stmt 1 view .LVU339
  50:boards/TMC4330_eval.c **** }
 1161              		.loc 1 50 2 view .LVU340
 201:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1162              		.loc 1 201 13 is_stmt 0 view .LVU341
 1163 038a 5E48     		ldr	r0, .L167
 1164              	.LVL130:
 201:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1165              		.loc 1 201 13 view .LVU342
 1166 038c 2521     		movs	r1, #37
 1167              	.LVL131:
 201:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1168              		.loc 1 201 13 view .LVU343
 1169 038e FFF7FEFF 		bl	tmc4330_readInt
 1170              	.LVL132:
 201:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1171              		.loc 1 201 11 view .LVU344
 1172 0392 3060     		str	r0, [r6]
 1173 0394 6CE7     		b	.L45
 1174              	.LVL133:
 1175              	.L107:
 202:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VSTART, *value);
 1176              		.loc 1 202 10 is_stmt 1 view .LVU345
 203:boards/TMC4330_eval.c **** 		}
 1177              		.loc 1 203 4 view .LVU346
 1178              	.LBB223:
 1179              	.LBI223:
  46:boards/TMC4330_eval.c **** {
 1180              		.loc 1 46 31 view .LVU347
  46:boards/TMC4330_eval.c **** {
 1181              		.loc 1 46 31 is_stmt 0 view .LVU348
 1182              	.LBE223:
  48:boards/TMC4330_eval.c **** 
 1183              		.loc 1 48 2 is_stmt 1 view .LVU349
  50:boards/TMC4330_eval.c **** }
 1184              		.loc 1 50 2 view .LVU350
 203:boards/TMC4330_eval.c **** 		}
 1185              		.loc 1 203 4 is_stmt 0 view .LVU351
 1186 0396 3268     		ldr	r2, [r6]
 1187              	.LVL134:
 203:boards/TMC4330_eval.c **** 		}
 1188              		.loc 1 203 4 view .LVU352
 1189 0398 5A48     		ldr	r0, .L167
 1190              	.LVL135:
 203:boards/TMC4330_eval.c **** 		}
 1191              		.loc 1 203 4 view .LVU353
 1192 039a 2521     		movs	r1, #37
 1193              	.LVL136:
 203:boards/TMC4330_eval.c **** 		}
 1194              		.loc 1 203 4 view .LVU354
 1195 039c FFF7FEFF 		bl	tmc4330_writeInt
 1196              	.LVL137:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1197              		.loc 1 116 11 view .LVU355
 1198 03a0 0025     		movs	r5, #0
 1199 03a2 65E7     		b	.L45
 1200              	.LVL138:
 1201              	.L85:
 208:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_ASTART)>>2;
 1202              		.loc 1 208 3 is_stmt 1 view .LVU356
 208:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_ASTART)>>2;
 1203              		.loc 1 208 5 is_stmt 0 view .LVU357
 1204 03a4 30B9     		cbnz	r0, .L108
 209:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1205              		.loc 1 209 4 is_stmt 1 view .LVU358
 1206              	.LBB224:
 1207              	.LBI224:
  46:boards/TMC4330_eval.c **** {
 1208              		.loc 1 46 31 view .LVU359
 1209              	.LVL139:
  46:boards/TMC4330_eval.c **** {
 1210              		.loc 1 46 31 is_stmt 0 view .LVU360
 1211              	.LBE224:
  48:boards/TMC4330_eval.c **** 
 1212              		.loc 1 48 2 is_stmt 1 view .LVU361
  50:boards/TMC4330_eval.c **** }
 1213              		.loc 1 50 2 view .LVU362
 209:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1214              		.loc 1 209 13 is_stmt 0 view .LVU363
 1215 03a6 5748     		ldr	r0, .L167
 1216              	.LVL140:
 209:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1217              		.loc 1 209 13 view .LVU364
 1218 03a8 2A21     		movs	r1, #42
 1219              	.LVL141:
 209:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1220              		.loc 1 209 13 view .LVU365
 1221 03aa FFF7FEFF 		bl	tmc4330_readInt
 1222              	.LVL142:
 209:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1223              		.loc 1 209 62 view .LVU366
 1224 03ae 8010     		asrs	r0, r0, #2
 209:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1225              		.loc 1 209 11 view .LVU367
 1226 03b0 3060     		str	r0, [r6]
 1227 03b2 5DE7     		b	.L45
 1228              	.LVL143:
 1229              	.L108:
 210:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 1230              		.loc 1 210 10 is_stmt 1 view .LVU368
 211:boards/TMC4330_eval.c **** 			{
 1231              		.loc 1 211 4 view .LVU369
 211:boards/TMC4330_eval.c **** 			{
 1232              		.loc 1 211 7 is_stmt 0 view .LVU370
 1233 03b4 3268     		ldr	r2, [r6]
 1234              	.LVL144:
 211:boards/TMC4330_eval.c **** 			{
 1235              		.loc 1 211 14 view .LVU371
 1236 03b6 950D     		lsrs	r5, r2, #22
 1237 03b8 AD05     		lsls	r5, r5, #22
 211:boards/TMC4330_eval.c **** 			{
 1238              		.loc 1 211 6 view .LVU372
 1239 03ba 002D     		cmp	r5, #0
 1240 03bc 40F07782 		bne	.L151
 217:boards/TMC4330_eval.c **** 			}
 1241              		.loc 1 217 5 is_stmt 1 view .LVU373
 1242              	.LBB225:
 1243              	.LBI225:
  46:boards/TMC4330_eval.c **** {
 1244              		.loc 1 46 31 view .LVU374
 1245              	.LVL145:
  46:boards/TMC4330_eval.c **** {
 1246              		.loc 1 46 31 is_stmt 0 view .LVU375
 1247              	.LBE225:
  48:boards/TMC4330_eval.c **** 
 1248              		.loc 1 48 2 is_stmt 1 view .LVU376
  50:boards/TMC4330_eval.c **** }
 1249              		.loc 1 50 2 view .LVU377
 217:boards/TMC4330_eval.c **** 			}
 1250              		.loc 1 217 5 is_stmt 0 view .LVU378
 1251 03c0 5048     		ldr	r0, .L167
 1252              	.LVL146:
 217:boards/TMC4330_eval.c **** 			}
 1253              		.loc 1 217 5 view .LVU379
 1254 03c2 9200     		lsls	r2, r2, #2
 1255 03c4 2A21     		movs	r1, #42
 1256              	.LVL147:
 217:boards/TMC4330_eval.c **** 			}
 1257              		.loc 1 217 5 view .LVU380
 1258 03c6 FFF7FEFF 		bl	tmc4330_writeInt
 1259              	.LVL148:
 1260 03ca 51E7     		b	.L45
 1261              	.LVL149:
 1262              	.L84:
 223:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_DMAX)>>2;
 1263              		.loc 1 223 3 is_stmt 1 view .LVU381
 223:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_DMAX)>>2;
 1264              		.loc 1 223 5 is_stmt 0 view .LVU382
 1265 03cc 30B9     		cbnz	r0, .L109
 224:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1266              		.loc 1 224 4 is_stmt 1 view .LVU383
 1267              	.LBB226:
 1268              	.LBI226:
  46:boards/TMC4330_eval.c **** {
 1269              		.loc 1 46 31 view .LVU384
 1270              	.LVL150:
  46:boards/TMC4330_eval.c **** {
 1271              		.loc 1 46 31 is_stmt 0 view .LVU385
 1272              	.LBE226:
  48:boards/TMC4330_eval.c **** 
 1273              		.loc 1 48 2 is_stmt 1 view .LVU386
  50:boards/TMC4330_eval.c **** }
 1274              		.loc 1 50 2 view .LVU387
 224:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1275              		.loc 1 224 13 is_stmt 0 view .LVU388
 1276 03ce 4D48     		ldr	r0, .L167
 1277              	.LVL151:
 224:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1278              		.loc 1 224 13 view .LVU389
 1279 03d0 2921     		movs	r1, #41
 1280              	.LVL152:
 224:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1281              		.loc 1 224 13 view .LVU390
 1282 03d2 FFF7FEFF 		bl	tmc4330_readInt
 1283              	.LVL153:
 224:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1284              		.loc 1 224 60 view .LVU391
 1285 03d6 8010     		asrs	r0, r0, #2
 224:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1286              		.loc 1 224 11 view .LVU392
 1287 03d8 3060     		str	r0, [r6]
 1288 03da 49E7     		b	.L45
 1289              	.LVL154:
 1290              	.L109:
 225:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 1291              		.loc 1 225 10 is_stmt 1 view .LVU393
 226:boards/TMC4330_eval.c **** 			{
 1292              		.loc 1 226 4 view .LVU394
 226:boards/TMC4330_eval.c **** 			{
 1293              		.loc 1 226 7 is_stmt 0 view .LVU395
 1294 03dc 3268     		ldr	r2, [r6]
 1295              	.LVL155:
 226:boards/TMC4330_eval.c **** 			{
 1296              		.loc 1 226 14 view .LVU396
 1297 03de 950D     		lsrs	r5, r2, #22
 1298 03e0 AD05     		lsls	r5, r5, #22
 226:boards/TMC4330_eval.c **** 			{
 1299              		.loc 1 226 6 view .LVU397
 1300 03e2 002D     		cmp	r5, #0
 1301 03e4 40F06582 		bne	.L152
 232:boards/TMC4330_eval.c **** 			}
 1302              		.loc 1 232 5 is_stmt 1 view .LVU398
 1303              	.LBB227:
 1304              	.LBI227:
  46:boards/TMC4330_eval.c **** {
 1305              		.loc 1 46 31 view .LVU399
 1306              	.LVL156:
  46:boards/TMC4330_eval.c **** {
 1307              		.loc 1 46 31 is_stmt 0 view .LVU400
 1308              	.LBE227:
  48:boards/TMC4330_eval.c **** 
 1309              		.loc 1 48 2 is_stmt 1 view .LVU401
  50:boards/TMC4330_eval.c **** }
 1310              		.loc 1 50 2 view .LVU402
 232:boards/TMC4330_eval.c **** 			}
 1311              		.loc 1 232 5 is_stmt 0 view .LVU403
 1312 03e8 4648     		ldr	r0, .L167
 1313              	.LVL157:
 232:boards/TMC4330_eval.c **** 			}
 1314              		.loc 1 232 5 view .LVU404
 1315 03ea 9200     		lsls	r2, r2, #2
 1316 03ec 2921     		movs	r1, #41
 1317              	.LVL158:
 232:boards/TMC4330_eval.c **** 			}
 1318              		.loc 1 232 5 view .LVU405
 1319 03ee FFF7FEFF 		bl	tmc4330_writeInt
 1320              	.LVL159:
 1321 03f2 3DE7     		b	.L45
 1322              	.LVL160:
 1323              	.L83:
 238:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VBREAK);
 1324              		.loc 1 238 3 is_stmt 1 view .LVU406
 238:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VBREAK);
 1325              		.loc 1 238 5 is_stmt 0 view .LVU407
 1326 03f4 28B9     		cbnz	r0, .L110
 239:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1327              		.loc 1 239 4 is_stmt 1 view .LVU408
 1328              	.LBB228:
 1329              	.LBI228:
  46:boards/TMC4330_eval.c **** {
 1330              		.loc 1 46 31 view .LVU409
 1331              	.LVL161:
  46:boards/TMC4330_eval.c **** {
 1332              		.loc 1 46 31 is_stmt 0 view .LVU410
 1333              	.LBE228:
  48:boards/TMC4330_eval.c **** 
 1334              		.loc 1 48 2 is_stmt 1 view .LVU411
  50:boards/TMC4330_eval.c **** }
 1335              		.loc 1 50 2 view .LVU412
 239:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1336              		.loc 1 239 13 is_stmt 0 view .LVU413
 1337 03f6 4348     		ldr	r0, .L167
 1338              	.LVL162:
 239:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1339              		.loc 1 239 13 view .LVU414
 1340 03f8 2721     		movs	r1, #39
 1341              	.LVL163:
 239:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1342              		.loc 1 239 13 view .LVU415
 1343 03fa FFF7FEFF 		bl	tmc4330_readInt
 1344              	.LVL164:
 239:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1345              		.loc 1 239 11 view .LVU416
 1346 03fe 3060     		str	r0, [r6]
 1347 0400 36E7     		b	.L45
 1348              	.LVL165:
 1349              	.L110:
 240:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VBREAK, *value);
 1350              		.loc 1 240 10 is_stmt 1 view .LVU417
 241:boards/TMC4330_eval.c **** 		}
 1351              		.loc 1 241 4 view .LVU418
 1352              	.LBB229:
 1353              	.LBI229:
  46:boards/TMC4330_eval.c **** {
 1354              		.loc 1 46 31 view .LVU419
  46:boards/TMC4330_eval.c **** {
 1355              		.loc 1 46 31 is_stmt 0 view .LVU420
 1356              	.LBE229:
  48:boards/TMC4330_eval.c **** 
 1357              		.loc 1 48 2 is_stmt 1 view .LVU421
  50:boards/TMC4330_eval.c **** }
 1358              		.loc 1 50 2 view .LVU422
 241:boards/TMC4330_eval.c **** 		}
 1359              		.loc 1 241 4 is_stmt 0 view .LVU423
 1360 0402 3268     		ldr	r2, [r6]
 1361              	.LVL166:
 241:boards/TMC4330_eval.c **** 		}
 1362              		.loc 1 241 4 view .LVU424
 1363 0404 3F48     		ldr	r0, .L167
 1364              	.LVL167:
 241:boards/TMC4330_eval.c **** 		}
 1365              		.loc 1 241 4 view .LVU425
 1366 0406 2721     		movs	r1, #39
 1367              	.LVL168:
 241:boards/TMC4330_eval.c **** 		}
 1368              		.loc 1 241 4 view .LVU426
 1369 0408 FFF7FEFF 		bl	tmc4330_writeInt
 1370              	.LVL169:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1371              		.loc 1 116 11 view .LVU427
 1372 040c 0025     		movs	r5, #0
 1373 040e 2FE7     		b	.L45
 1374              	.LVL170:
 1375              	.L82:
 246:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_DFINAL) >> 2;
 1376              		.loc 1 246 3 is_stmt 1 view .LVU428
 246:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_DFINAL) >> 2;
 1377              		.loc 1 246 5 is_stmt 0 view .LVU429
 1378 0410 30B9     		cbnz	r0, .L111
 247:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1379              		.loc 1 247 4 is_stmt 1 view .LVU430
 1380              	.LBB230:
 1381              	.LBI230:
  46:boards/TMC4330_eval.c **** {
 1382              		.loc 1 46 31 view .LVU431
 1383              	.LVL171:
  46:boards/TMC4330_eval.c **** {
 1384              		.loc 1 46 31 is_stmt 0 view .LVU432
 1385              	.LBE230:
  48:boards/TMC4330_eval.c **** 
 1386              		.loc 1 48 2 is_stmt 1 view .LVU433
  50:boards/TMC4330_eval.c **** }
 1387              		.loc 1 50 2 view .LVU434
 247:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1388              		.loc 1 247 13 is_stmt 0 view .LVU435
 1389 0412 3C48     		ldr	r0, .L167
 1390              	.LVL172:
 247:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1391              		.loc 1 247 13 view .LVU436
 1392 0414 2B21     		movs	r1, #43
 1393              	.LVL173:
 247:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1394              		.loc 1 247 13 view .LVU437
 1395 0416 FFF7FEFF 		bl	tmc4330_readInt
 1396              	.LVL174:
 247:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1397              		.loc 1 247 63 view .LVU438
 1398 041a 8010     		asrs	r0, r0, #2
 247:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1399              		.loc 1 247 11 view .LVU439
 1400 041c 3060     		str	r0, [r6]
 1401 041e 27E7     		b	.L45
 1402              	.LVL175:
 1403              	.L111:
 248:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 1404              		.loc 1 248 10 is_stmt 1 view .LVU440
 249:boards/TMC4330_eval.c **** 			{
 1405              		.loc 1 249 4 view .LVU441
 249:boards/TMC4330_eval.c **** 			{
 1406              		.loc 1 249 7 is_stmt 0 view .LVU442
 1407 0420 3268     		ldr	r2, [r6]
 1408              	.LVL176:
 249:boards/TMC4330_eval.c **** 			{
 1409              		.loc 1 249 14 view .LVU443
 1410 0422 950D     		lsrs	r5, r2, #22
 1411 0424 AD05     		lsls	r5, r5, #22
 249:boards/TMC4330_eval.c **** 			{
 1412              		.loc 1 249 6 view .LVU444
 1413 0426 002D     		cmp	r5, #0
 1414 0428 40F04582 		bne	.L153
 255:boards/TMC4330_eval.c **** 			}
 1415              		.loc 1 255 5 is_stmt 1 view .LVU445
 1416              	.LBB231:
 1417              	.LBI231:
  46:boards/TMC4330_eval.c **** {
 1418              		.loc 1 46 31 view .LVU446
 1419              	.LVL177:
  46:boards/TMC4330_eval.c **** {
 1420              		.loc 1 46 31 is_stmt 0 view .LVU447
 1421              	.LBE231:
  48:boards/TMC4330_eval.c **** 
 1422              		.loc 1 48 2 is_stmt 1 view .LVU448
  50:boards/TMC4330_eval.c **** }
 1423              		.loc 1 50 2 view .LVU449
 255:boards/TMC4330_eval.c **** 			}
 1424              		.loc 1 255 5 is_stmt 0 view .LVU450
 1425 042c 3548     		ldr	r0, .L167
 1426              	.LVL178:
 255:boards/TMC4330_eval.c **** 			}
 1427              		.loc 1 255 5 view .LVU451
 1428 042e 9200     		lsls	r2, r2, #2
 1429 0430 2B21     		movs	r1, #43
 1430              	.LVL179:
 255:boards/TMC4330_eval.c **** 			}
 1431              		.loc 1 255 5 view .LVU452
 1432 0432 FFF7FEFF 		bl	tmc4330_writeInt
 1433              	.LVL180:
 1434 0436 1BE7     		b	.L45
 1435              	.LVL181:
 1436              	.L81:
 261:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VSTOP);
 1437              		.loc 1 261 3 is_stmt 1 view .LVU453
 261:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VSTOP);
 1438              		.loc 1 261 5 is_stmt 0 view .LVU454
 1439 0438 28B9     		cbnz	r0, .L112
 262:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1440              		.loc 1 262 4 is_stmt 1 view .LVU455
 1441              	.LBB232:
 1442              	.LBI232:
  46:boards/TMC4330_eval.c **** {
 1443              		.loc 1 46 31 view .LVU456
 1444              	.LVL182:
  46:boards/TMC4330_eval.c **** {
 1445              		.loc 1 46 31 is_stmt 0 view .LVU457
 1446              	.LBE232:
  48:boards/TMC4330_eval.c **** 
 1447              		.loc 1 48 2 is_stmt 1 view .LVU458
  50:boards/TMC4330_eval.c **** }
 1448              		.loc 1 50 2 view .LVU459
 262:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1449              		.loc 1 262 13 is_stmt 0 view .LVU460
 1450 043a 3248     		ldr	r0, .L167
 1451              	.LVL183:
 262:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1452              		.loc 1 262 13 view .LVU461
 1453 043c 2621     		movs	r1, #38
 1454              	.LVL184:
 262:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1455              		.loc 1 262 13 view .LVU462
 1456 043e FFF7FEFF 		bl	tmc4330_readInt
 1457              	.LVL185:
 262:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1458              		.loc 1 262 11 view .LVU463
 1459 0442 3060     		str	r0, [r6]
 1460 0444 14E7     		b	.L45
 1461              	.LVL186:
 1462              	.L112:
 263:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VSTOP, *value);
 1463              		.loc 1 263 10 is_stmt 1 view .LVU464
 264:boards/TMC4330_eval.c **** 		}
 1464              		.loc 1 264 4 view .LVU465
 1465              	.LBB233:
 1466              	.LBI233:
  46:boards/TMC4330_eval.c **** {
 1467              		.loc 1 46 31 view .LVU466
  46:boards/TMC4330_eval.c **** {
 1468              		.loc 1 46 31 is_stmt 0 view .LVU467
 1469              	.LBE233:
  48:boards/TMC4330_eval.c **** 
 1470              		.loc 1 48 2 is_stmt 1 view .LVU468
  50:boards/TMC4330_eval.c **** }
 1471              		.loc 1 50 2 view .LVU469
 264:boards/TMC4330_eval.c **** 		}
 1472              		.loc 1 264 4 is_stmt 0 view .LVU470
 1473 0446 3268     		ldr	r2, [r6]
 1474              	.LVL187:
 264:boards/TMC4330_eval.c **** 		}
 1475              		.loc 1 264 4 view .LVU471
 1476 0448 2E48     		ldr	r0, .L167
 1477              	.LVL188:
 264:boards/TMC4330_eval.c **** 		}
 1478              		.loc 1 264 4 view .LVU472
 1479 044a 2621     		movs	r1, #38
 1480              	.LVL189:
 264:boards/TMC4330_eval.c **** 		}
 1481              		.loc 1 264 4 view .LVU473
 1482 044c FFF7FEFF 		bl	tmc4330_writeInt
 1483              	.LVL190:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1484              		.loc 1 116 11 view .LVU474
 1485 0450 0025     		movs	r5, #0
 1486 0452 0DE7     		b	.L45
 1487              	.LVL191:
 1488              	.L80:
 269:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_DSTOP);
 1489              		.loc 1 269 3 is_stmt 1 view .LVU475
 269:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_DSTOP);
 1490              		.loc 1 269 5 is_stmt 0 view .LVU476
 1491 0454 28B9     		cbnz	r0, .L113
 270:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1492              		.loc 1 270 4 is_stmt 1 view .LVU477
 1493              	.LBB234:
 1494              	.LBI234:
  46:boards/TMC4330_eval.c **** {
 1495              		.loc 1 46 31 view .LVU478
 1496              	.LVL192:
  46:boards/TMC4330_eval.c **** {
 1497              		.loc 1 46 31 is_stmt 0 view .LVU479
 1498              	.LBE234:
  48:boards/TMC4330_eval.c **** 
 1499              		.loc 1 48 2 is_stmt 1 view .LVU480
  50:boards/TMC4330_eval.c **** }
 1500              		.loc 1 50 2 view .LVU481
 270:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1501              		.loc 1 270 13 is_stmt 0 view .LVU482
 1502 0456 2B48     		ldr	r0, .L167
 1503              	.LVL193:
 270:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1504              		.loc 1 270 13 view .LVU483
 1505 0458 2C21     		movs	r1, #44
 1506              	.LVL194:
 270:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1507              		.loc 1 270 13 view .LVU484
 1508 045a FFF7FEFF 		bl	tmc4330_readInt
 1509              	.LVL195:
 270:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1510              		.loc 1 270 11 view .LVU485
 1511 045e 3060     		str	r0, [r6]
 1512 0460 06E7     		b	.L45
 1513              	.LVL196:
 1514              	.L113:
 271:boards/TMC4330_eval.c **** 			if(*value & ~0x3FFFFF)
 1515              		.loc 1 271 10 is_stmt 1 view .LVU486
 272:boards/TMC4330_eval.c **** 			{
 1516              		.loc 1 272 4 view .LVU487
 272:boards/TMC4330_eval.c **** 			{
 1517              		.loc 1 272 7 is_stmt 0 view .LVU488
 1518 0462 3268     		ldr	r2, [r6]
 1519              	.LVL197:
 272:boards/TMC4330_eval.c **** 			{
 1520              		.loc 1 272 14 view .LVU489
 1521 0464 950D     		lsrs	r5, r2, #22
 1522 0466 AD05     		lsls	r5, r5, #22
 272:boards/TMC4330_eval.c **** 			{
 1523              		.loc 1 272 6 view .LVU490
 1524 0468 002D     		cmp	r5, #0
 1525 046a 40F02682 		bne	.L154
 278:boards/TMC4330_eval.c **** 			}
 1526              		.loc 1 278 5 is_stmt 1 view .LVU491
 1527              	.LBB235:
 1528              	.LBI235:
  46:boards/TMC4330_eval.c **** {
 1529              		.loc 1 46 31 view .LVU492
 1530              	.LVL198:
  46:boards/TMC4330_eval.c **** {
 1531              		.loc 1 46 31 is_stmt 0 view .LVU493
 1532              	.LBE235:
  48:boards/TMC4330_eval.c **** 
 1533              		.loc 1 48 2 is_stmt 1 view .LVU494
  50:boards/TMC4330_eval.c **** }
 1534              		.loc 1 50 2 view .LVU495
 278:boards/TMC4330_eval.c **** 			}
 1535              		.loc 1 278 5 is_stmt 0 view .LVU496
 1536 046e 2548     		ldr	r0, .L167
 1537              	.LVL199:
 278:boards/TMC4330_eval.c **** 			}
 1538              		.loc 1 278 5 view .LVU497
 1539 0470 2C21     		movs	r1, #44
 1540              	.LVL200:
 278:boards/TMC4330_eval.c **** 			}
 1541              		.loc 1 278 5 view .LVU498
 1542 0472 FFF7FEFF 		bl	tmc4330_writeInt
 1543              	.LVL201:
 1544 0476 FBE6     		b	.L45
 1545              	.LVL202:
 1546              	.L79:
 284:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW1);
 1547              		.loc 1 284 3 is_stmt 1 view .LVU499
 284:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW1);
 1548              		.loc 1 284 5 is_stmt 0 view .LVU500
 1549 0478 28B9     		cbnz	r0, .L114
 285:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1550              		.loc 1 285 4 is_stmt 1 view .LVU501
 1551              	.LBB236:
 1552              	.LBI236:
  46:boards/TMC4330_eval.c **** {
 1553              		.loc 1 46 31 view .LVU502
 1554              	.LVL203:
  46:boards/TMC4330_eval.c **** {
 1555              		.loc 1 46 31 is_stmt 0 view .LVU503
 1556              	.LBE236:
  48:boards/TMC4330_eval.c **** 
 1557              		.loc 1 48 2 is_stmt 1 view .LVU504
  50:boards/TMC4330_eval.c **** }
 1558              		.loc 1 50 2 view .LVU505
 285:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1559              		.loc 1 285 13 is_stmt 0 view .LVU506
 1560 047a 2248     		ldr	r0, .L167
 1561              	.LVL204:
 285:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1562              		.loc 1 285 13 view .LVU507
 1563 047c 2D21     		movs	r1, #45
 1564              	.LVL205:
 285:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1565              		.loc 1 285 13 view .LVU508
 1566 047e FFF7FEFF 		bl	tmc4330_readInt
 1567              	.LVL206:
 285:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1568              		.loc 1 285 11 view .LVU509
 1569 0482 3060     		str	r0, [r6]
 1570 0484 F4E6     		b	.L45
 1571              	.LVL207:
 1572              	.L114:
 286:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_BOW1, *value);
 1573              		.loc 1 286 10 is_stmt 1 view .LVU510
 287:boards/TMC4330_eval.c **** 		}
 1574              		.loc 1 287 4 view .LVU511
 1575              	.LBB237:
 1576              	.LBI237:
  46:boards/TMC4330_eval.c **** {
 1577              		.loc 1 46 31 view .LVU512
  46:boards/TMC4330_eval.c **** {
 1578              		.loc 1 46 31 is_stmt 0 view .LVU513
 1579              	.LBE237:
  48:boards/TMC4330_eval.c **** 
 1580              		.loc 1 48 2 is_stmt 1 view .LVU514
  50:boards/TMC4330_eval.c **** }
 1581              		.loc 1 50 2 view .LVU515
 287:boards/TMC4330_eval.c **** 		}
 1582              		.loc 1 287 4 is_stmt 0 view .LVU516
 1583 0486 3268     		ldr	r2, [r6]
 1584              	.LVL208:
 287:boards/TMC4330_eval.c **** 		}
 1585              		.loc 1 287 4 view .LVU517
 1586 0488 1E48     		ldr	r0, .L167
 1587              	.LVL209:
 287:boards/TMC4330_eval.c **** 		}
 1588              		.loc 1 287 4 view .LVU518
 1589 048a 2D21     		movs	r1, #45
 1590              	.LVL210:
 287:boards/TMC4330_eval.c **** 		}
 1591              		.loc 1 287 4 view .LVU519
 1592 048c FFF7FEFF 		bl	tmc4330_writeInt
 1593              	.LVL211:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1594              		.loc 1 116 11 view .LVU520
 1595 0490 0025     		movs	r5, #0
 1596 0492 EDE6     		b	.L45
 1597              	.LVL212:
 1598              	.L78:
 292:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW2);
 1599              		.loc 1 292 3 is_stmt 1 view .LVU521
 292:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW2);
 1600              		.loc 1 292 5 is_stmt 0 view .LVU522
 1601 0494 28B9     		cbnz	r0, .L115
 293:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1602              		.loc 1 293 4 is_stmt 1 view .LVU523
 1603              	.LBB238:
 1604              	.LBI238:
  46:boards/TMC4330_eval.c **** {
 1605              		.loc 1 46 31 view .LVU524
 1606              	.LVL213:
  46:boards/TMC4330_eval.c **** {
 1607              		.loc 1 46 31 is_stmt 0 view .LVU525
 1608              	.LBE238:
  48:boards/TMC4330_eval.c **** 
 1609              		.loc 1 48 2 is_stmt 1 view .LVU526
  50:boards/TMC4330_eval.c **** }
 1610              		.loc 1 50 2 view .LVU527
 293:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1611              		.loc 1 293 13 is_stmt 0 view .LVU528
 1612 0496 1B48     		ldr	r0, .L167
 1613              	.LVL214:
 293:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1614              		.loc 1 293 13 view .LVU529
 1615 0498 2E21     		movs	r1, #46
 1616              	.LVL215:
 293:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1617              		.loc 1 293 13 view .LVU530
 1618 049a FFF7FEFF 		bl	tmc4330_readInt
 1619              	.LVL216:
 293:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1620              		.loc 1 293 11 view .LVU531
 1621 049e 3060     		str	r0, [r6]
 1622 04a0 E6E6     		b	.L45
 1623              	.LVL217:
 1624              	.L115:
 294:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_BOW2, *value);
 1625              		.loc 1 294 10 is_stmt 1 view .LVU532
 295:boards/TMC4330_eval.c **** 		}
 1626              		.loc 1 295 4 view .LVU533
 1627              	.LBB239:
 1628              	.LBI239:
  46:boards/TMC4330_eval.c **** {
 1629              		.loc 1 46 31 view .LVU534
  46:boards/TMC4330_eval.c **** {
 1630              		.loc 1 46 31 is_stmt 0 view .LVU535
 1631              	.LBE239:
  48:boards/TMC4330_eval.c **** 
 1632              		.loc 1 48 2 is_stmt 1 view .LVU536
  50:boards/TMC4330_eval.c **** }
 1633              		.loc 1 50 2 view .LVU537
 295:boards/TMC4330_eval.c **** 		}
 1634              		.loc 1 295 4 is_stmt 0 view .LVU538
 1635 04a2 3268     		ldr	r2, [r6]
 1636              	.LVL218:
 295:boards/TMC4330_eval.c **** 		}
 1637              		.loc 1 295 4 view .LVU539
 1638 04a4 1748     		ldr	r0, .L167
 1639              	.LVL219:
 295:boards/TMC4330_eval.c **** 		}
 1640              		.loc 1 295 4 view .LVU540
 1641 04a6 2E21     		movs	r1, #46
 1642              	.LVL220:
 295:boards/TMC4330_eval.c **** 		}
 1643              		.loc 1 295 4 view .LVU541
 1644 04a8 FFF7FEFF 		bl	tmc4330_writeInt
 1645              	.LVL221:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1646              		.loc 1 116 11 view .LVU542
 1647 04ac 0025     		movs	r5, #0
 1648 04ae DFE6     		b	.L45
 1649              	.LVL222:
 1650              	.L77:
 300:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW3);
 1651              		.loc 1 300 3 is_stmt 1 view .LVU543
 300:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW3);
 1652              		.loc 1 300 5 is_stmt 0 view .LVU544
 1653 04b0 28B9     		cbnz	r0, .L116
 301:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1654              		.loc 1 301 4 is_stmt 1 view .LVU545
 1655              	.LBB240:
 1656              	.LBI240:
  46:boards/TMC4330_eval.c **** {
 1657              		.loc 1 46 31 view .LVU546
 1658              	.LVL223:
  46:boards/TMC4330_eval.c **** {
 1659              		.loc 1 46 31 is_stmt 0 view .LVU547
 1660              	.LBE240:
  48:boards/TMC4330_eval.c **** 
 1661              		.loc 1 48 2 is_stmt 1 view .LVU548
  50:boards/TMC4330_eval.c **** }
 1662              		.loc 1 50 2 view .LVU549
 301:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1663              		.loc 1 301 13 is_stmt 0 view .LVU550
 1664 04b2 1448     		ldr	r0, .L167
 1665              	.LVL224:
 301:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1666              		.loc 1 301 13 view .LVU551
 1667 04b4 2F21     		movs	r1, #47
 1668              	.LVL225:
 301:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1669              		.loc 1 301 13 view .LVU552
 1670 04b6 FFF7FEFF 		bl	tmc4330_readInt
 1671              	.LVL226:
 301:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1672              		.loc 1 301 11 view .LVU553
 1673 04ba 3060     		str	r0, [r6]
 1674 04bc D8E6     		b	.L45
 1675              	.LVL227:
 1676              	.L116:
 302:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_BOW3, *value);
 1677              		.loc 1 302 10 is_stmt 1 view .LVU554
 303:boards/TMC4330_eval.c **** 		}
 1678              		.loc 1 303 4 view .LVU555
 1679              	.LBB241:
 1680              	.LBI241:
  46:boards/TMC4330_eval.c **** {
 1681              		.loc 1 46 31 view .LVU556
  46:boards/TMC4330_eval.c **** {
 1682              		.loc 1 46 31 is_stmt 0 view .LVU557
 1683              	.LBE241:
  48:boards/TMC4330_eval.c **** 
 1684              		.loc 1 48 2 is_stmt 1 view .LVU558
  50:boards/TMC4330_eval.c **** }
 1685              		.loc 1 50 2 view .LVU559
 303:boards/TMC4330_eval.c **** 		}
 1686              		.loc 1 303 4 is_stmt 0 view .LVU560
 1687 04be 3268     		ldr	r2, [r6]
 1688              	.LVL228:
 303:boards/TMC4330_eval.c **** 		}
 1689              		.loc 1 303 4 view .LVU561
 1690 04c0 1048     		ldr	r0, .L167
 1691              	.LVL229:
 303:boards/TMC4330_eval.c **** 		}
 1692              		.loc 1 303 4 view .LVU562
 1693 04c2 2F21     		movs	r1, #47
 1694              	.LVL230:
 303:boards/TMC4330_eval.c **** 		}
 1695              		.loc 1 303 4 view .LVU563
 1696 04c4 FFF7FEFF 		bl	tmc4330_writeInt
 1697              	.LVL231:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1698              		.loc 1 116 11 view .LVU564
 1699 04c8 0025     		movs	r5, #0
 1700 04ca D1E6     		b	.L45
 1701              	.LVL232:
 1702              	.L76:
 308:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW4);
 1703              		.loc 1 308 3 is_stmt 1 view .LVU565
 308:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_BOW4);
 1704              		.loc 1 308 5 is_stmt 0 view .LVU566
 1705 04cc 28B9     		cbnz	r0, .L117
 309:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1706              		.loc 1 309 4 is_stmt 1 view .LVU567
 1707              	.LBB242:
 1708              	.LBI242:
  46:boards/TMC4330_eval.c **** {
 1709              		.loc 1 46 31 view .LVU568
 1710              	.LVL233:
  46:boards/TMC4330_eval.c **** {
 1711              		.loc 1 46 31 is_stmt 0 view .LVU569
 1712              	.LBE242:
  48:boards/TMC4330_eval.c **** 
 1713              		.loc 1 48 2 is_stmt 1 view .LVU570
  50:boards/TMC4330_eval.c **** }
 1714              		.loc 1 50 2 view .LVU571
 309:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1715              		.loc 1 309 13 is_stmt 0 view .LVU572
 1716 04ce 0D48     		ldr	r0, .L167
 1717              	.LVL234:
 309:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1718              		.loc 1 309 13 view .LVU573
 1719 04d0 3021     		movs	r1, #48
 1720              	.LVL235:
 309:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1721              		.loc 1 309 13 view .LVU574
 1722 04d2 FFF7FEFF 		bl	tmc4330_readInt
 1723              	.LVL236:
 309:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1724              		.loc 1 309 11 view .LVU575
 1725 04d6 3060     		str	r0, [r6]
 1726 04d8 CAE6     		b	.L45
 1727              	.LVL237:
 1728              	.L117:
 310:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_BOW4, *value);
 1729              		.loc 1 310 10 is_stmt 1 view .LVU576
 311:boards/TMC4330_eval.c **** 		}
 1730              		.loc 1 311 4 view .LVU577
 1731              	.LBB243:
 1732              	.LBI243:
  46:boards/TMC4330_eval.c **** {
 1733              		.loc 1 46 31 view .LVU578
  46:boards/TMC4330_eval.c **** {
 1734              		.loc 1 46 31 is_stmt 0 view .LVU579
 1735              	.LBE243:
  48:boards/TMC4330_eval.c **** 
 1736              		.loc 1 48 2 is_stmt 1 view .LVU580
  50:boards/TMC4330_eval.c **** }
 1737              		.loc 1 50 2 view .LVU581
 311:boards/TMC4330_eval.c **** 		}
 1738              		.loc 1 311 4 is_stmt 0 view .LVU582
 1739 04da 3268     		ldr	r2, [r6]
 1740              	.LVL238:
 311:boards/TMC4330_eval.c **** 		}
 1741              		.loc 1 311 4 view .LVU583
 1742 04dc 0948     		ldr	r0, .L167
 1743              	.LVL239:
 311:boards/TMC4330_eval.c **** 		}
 1744              		.loc 1 311 4 view .LVU584
 1745 04de 3021     		movs	r1, #48
 1746              	.LVL240:
 311:boards/TMC4330_eval.c **** 		}
 1747              		.loc 1 311 4 view .LVU585
 1748 04e0 FFF7FEFF 		bl	tmc4330_writeInt
 1749              	.LVL241:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1750              		.loc 1 116 11 view .LVU586
 1751 04e4 0025     		movs	r5, #0
 1752 04e6 C3E6     		b	.L45
 1753              	.LVL242:
 1754              	.L75:
 316:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VIRT_STOP_LEFT);
 1755              		.loc 1 316 3 is_stmt 1 view .LVU587
 316:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VIRT_STOP_LEFT);
 1756              		.loc 1 316 5 is_stmt 0 view .LVU588
 1757 04e8 28B9     		cbnz	r0, .L118
 317:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1758              		.loc 1 317 4 is_stmt 1 view .LVU589
 1759              	.LBB244:
 1760              	.LBI244:
  46:boards/TMC4330_eval.c **** {
 1761              		.loc 1 46 31 view .LVU590
 1762              	.LVL243:
  46:boards/TMC4330_eval.c **** {
 1763              		.loc 1 46 31 is_stmt 0 view .LVU591
 1764              	.LBE244:
  48:boards/TMC4330_eval.c **** 
 1765              		.loc 1 48 2 is_stmt 1 view .LVU592
  50:boards/TMC4330_eval.c **** }
 1766              		.loc 1 50 2 view .LVU593
 317:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1767              		.loc 1 317 13 is_stmt 0 view .LVU594
 1768 04ea 0648     		ldr	r0, .L167
 1769              	.LVL244:
 317:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1770              		.loc 1 317 13 view .LVU595
 1771 04ec 3321     		movs	r1, #51
 1772              	.LVL245:
 317:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1773              		.loc 1 317 13 view .LVU596
 1774 04ee FFF7FEFF 		bl	tmc4330_readInt
 1775              	.LVL246:
 317:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1776              		.loc 1 317 11 view .LVU597
 1777 04f2 3060     		str	r0, [r6]
 1778 04f4 BCE6     		b	.L45
 1779              	.LVL247:
 1780              	.L118:
 318:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VIRT_STOP_LEFT, *value);
 1781              		.loc 1 318 10 is_stmt 1 view .LVU598
 319:boards/TMC4330_eval.c **** 		}
 1782              		.loc 1 319 4 view .LVU599
 1783              	.LBB245:
 1784              	.LBI245:
  46:boards/TMC4330_eval.c **** {
 1785              		.loc 1 46 31 view .LVU600
  46:boards/TMC4330_eval.c **** {
 1786              		.loc 1 46 31 is_stmt 0 view .LVU601
 1787              	.LBE245:
  48:boards/TMC4330_eval.c **** 
 1788              		.loc 1 48 2 is_stmt 1 view .LVU602
  50:boards/TMC4330_eval.c **** }
 1789              		.loc 1 50 2 view .LVU603
 319:boards/TMC4330_eval.c **** 		}
 1790              		.loc 1 319 4 is_stmt 0 view .LVU604
 1791 04f6 3268     		ldr	r2, [r6]
 1792              	.LVL248:
 319:boards/TMC4330_eval.c **** 		}
 1793              		.loc 1 319 4 view .LVU605
 1794 04f8 0248     		ldr	r0, .L167
 1795              	.LVL249:
 319:boards/TMC4330_eval.c **** 		}
 1796              		.loc 1 319 4 view .LVU606
 1797 04fa 3321     		movs	r1, #51
 1798              	.LVL250:
 319:boards/TMC4330_eval.c **** 		}
 1799              		.loc 1 319 4 view .LVU607
 1800 04fc FFF7FEFF 		bl	tmc4330_writeInt
 1801              	.LVL251:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1802              		.loc 1 116 11 view .LVU608
 1803 0500 0025     		movs	r5, #0
 1804 0502 B5E6     		b	.L45
 1805              	.L168:
 1806              		.align	2
 1807              	.L167:
 1808 0504 24000000 		.word	.LANCHOR0+36
 1809 0508 00000000 		.word	.LANCHOR0
 1810              	.LVL252:
 1811              	.L73:
 324:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VIRT_STOP_RIGHT);
 1812              		.loc 1 324 3 is_stmt 1 view .LVU609
 324:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_VIRT_STOP_RIGHT);
 1813              		.loc 1 324 5 is_stmt 0 view .LVU610
 1814 050c 28B9     		cbnz	r0, .L119
 325:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1815              		.loc 1 325 4 is_stmt 1 view .LVU611
 1816              	.LBB246:
 1817              	.LBI246:
  46:boards/TMC4330_eval.c **** {
 1818              		.loc 1 46 31 view .LVU612
 1819              	.LVL253:
  46:boards/TMC4330_eval.c **** {
 1820              		.loc 1 46 31 is_stmt 0 view .LVU613
 1821              	.LBE246:
  48:boards/TMC4330_eval.c **** 
 1822              		.loc 1 48 2 is_stmt 1 view .LVU614
  50:boards/TMC4330_eval.c **** }
 1823              		.loc 1 50 2 view .LVU615
 325:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1824              		.loc 1 325 13 is_stmt 0 view .LVU616
 1825 050e A348     		ldr	r0, .L169
 1826              	.LVL254:
 325:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1827              		.loc 1 325 13 view .LVU617
 1828 0510 3421     		movs	r1, #52
 1829              	.LVL255:
 325:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1830              		.loc 1 325 13 view .LVU618
 1831 0512 FFF7FEFF 		bl	tmc4330_readInt
 1832              	.LVL256:
 325:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1833              		.loc 1 325 11 view .LVU619
 1834 0516 3060     		str	r0, [r6]
 1835 0518 AAE6     		b	.L45
 1836              	.LVL257:
 1837              	.L119:
 326:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_VIRT_STOP_RIGHT, *value);
 1838              		.loc 1 326 10 is_stmt 1 view .LVU620
 327:boards/TMC4330_eval.c **** 		}
 1839              		.loc 1 327 4 view .LVU621
 1840              	.LBB247:
 1841              	.LBI247:
  46:boards/TMC4330_eval.c **** {
 1842              		.loc 1 46 31 view .LVU622
  46:boards/TMC4330_eval.c **** {
 1843              		.loc 1 46 31 is_stmt 0 view .LVU623
 1844              	.LBE247:
  48:boards/TMC4330_eval.c **** 
 1845              		.loc 1 48 2 is_stmt 1 view .LVU624
  50:boards/TMC4330_eval.c **** }
 1846              		.loc 1 50 2 view .LVU625
 327:boards/TMC4330_eval.c **** 		}
 1847              		.loc 1 327 4 is_stmt 0 view .LVU626
 1848 051a 3268     		ldr	r2, [r6]
 1849              	.LVL258:
 327:boards/TMC4330_eval.c **** 		}
 1850              		.loc 1 327 4 view .LVU627
 1851 051c 9F48     		ldr	r0, .L169
 1852              	.LVL259:
 327:boards/TMC4330_eval.c **** 		}
 1853              		.loc 1 327 4 view .LVU628
 1854 051e 3421     		movs	r1, #52
 1855              	.LVL260:
 327:boards/TMC4330_eval.c **** 		}
 1856              		.loc 1 327 4 view .LVU629
 1857 0520 FFF7FEFF 		bl	tmc4330_writeInt
 1858              	.LVL261:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1859              		.loc 1 116 11 view .LVU630
 1860 0524 0025     		movs	r5, #0
 1861 0526 A3E6     		b	.L45
 1862              	.LVL262:
 1863              	.L72:
 332:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_VMIN_EMF_WR);		// read from shadow registe
 1864              		.loc 1 332 3 is_stmt 1 view .LVU631
 332:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_VMIN_EMF_WR);		// read from shadow registe
 1865              		.loc 1 332 5 is_stmt 0 view .LVU632
 1866 0528 28B9     		cbnz	r0, .L120
 333:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1867              		.loc 1 333 4 is_stmt 1 view .LVU633
 1868              	.LBB248:
 1869              	.LBI248:
  46:boards/TMC4330_eval.c **** {
 1870              		.loc 1 46 31 view .LVU634
 1871              	.LVL263:
  46:boards/TMC4330_eval.c **** {
 1872              		.loc 1 46 31 is_stmt 0 view .LVU635
 1873              	.LBE248:
  48:boards/TMC4330_eval.c **** 
 1874              		.loc 1 48 2 is_stmt 1 view .LVU636
  50:boards/TMC4330_eval.c **** }
 1875              		.loc 1 50 2 view .LVU637
 333:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1876              		.loc 1 333 13 is_stmt 0 view .LVU638
 1877 052a 9C48     		ldr	r0, .L169
 1878              	.LVL264:
 333:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1879              		.loc 1 333 13 view .LVU639
 1880 052c 6021     		movs	r1, #96
 1881              	.LVL265:
 333:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1882              		.loc 1 333 13 view .LVU640
 1883 052e FFF7FEFF 		bl	tmc4330_readInt
 1884              	.LVL266:
 333:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1885              		.loc 1 333 11 view .LVU641
 1886 0532 3060     		str	r0, [r6]
 1887 0534 9CE6     		b	.L45
 1888              	.LVL267:
 1889              	.L120:
 334:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_VMIN_EMF_WR, *value);
 1890              		.loc 1 334 10 is_stmt 1 view .LVU642
 335:boards/TMC4330_eval.c **** 		}
 1891              		.loc 1 335 4 view .LVU643
 1892              	.LBB249:
 1893              	.LBI249:
  46:boards/TMC4330_eval.c **** {
 1894              		.loc 1 46 31 view .LVU644
  46:boards/TMC4330_eval.c **** {
 1895              		.loc 1 46 31 is_stmt 0 view .LVU645
 1896              	.LBE249:
  48:boards/TMC4330_eval.c **** 
 1897              		.loc 1 48 2 is_stmt 1 view .LVU646
  50:boards/TMC4330_eval.c **** }
 1898              		.loc 1 50 2 view .LVU647
 335:boards/TMC4330_eval.c **** 		}
 1899              		.loc 1 335 4 is_stmt 0 view .LVU648
 1900 0536 3268     		ldr	r2, [r6]
 1901 0538 9848     		ldr	r0, .L169
 1902              	.LVL268:
 335:boards/TMC4330_eval.c **** 		}
 1903              		.loc 1 335 4 view .LVU649
 1904 053a 6021     		movs	r1, #96
 1905              	.LVL269:
 335:boards/TMC4330_eval.c **** 		}
 1906              		.loc 1 335 4 view .LVU650
 1907 053c FFF7FEFF 		bl	tmc4330_writeInt
 1908              	.LVL270:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1909              		.loc 1 116 11 view .LVU651
 1910 0540 0025     		movs	r5, #0
 1911 0542 95E6     		b	.L45
 1912              	.LVL271:
 1913              	.L71:
 340:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_VADD_EMF); 	// read from shadow register
 1914              		.loc 1 340 3 is_stmt 1 view .LVU652
 340:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_VADD_EMF); 	// read from shadow register
 1915              		.loc 1 340 5 is_stmt 0 view .LVU653
 1916 0544 28B9     		cbnz	r0, .L121
 341:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1917              		.loc 1 341 4 is_stmt 1 view .LVU654
 1918              	.LBB250:
 1919              	.LBI250:
  46:boards/TMC4330_eval.c **** {
 1920              		.loc 1 46 31 view .LVU655
 1921              	.LVL272:
  46:boards/TMC4330_eval.c **** {
 1922              		.loc 1 46 31 is_stmt 0 view .LVU656
 1923              	.LBE250:
  48:boards/TMC4330_eval.c **** 
 1924              		.loc 1 48 2 is_stmt 1 view .LVU657
  50:boards/TMC4330_eval.c **** }
 1925              		.loc 1 50 2 view .LVU658
 341:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1926              		.loc 1 341 13 is_stmt 0 view .LVU659
 1927 0546 9548     		ldr	r0, .L169
 1928              	.LVL273:
 341:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1929              		.loc 1 341 13 view .LVU660
 1930 0548 6121     		movs	r1, #97
 1931              	.LVL274:
 341:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1932              		.loc 1 341 13 view .LVU661
 1933 054a FFF7FEFF 		bl	tmc4330_readInt
 1934              	.LVL275:
 341:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1935              		.loc 1 341 11 view .LVU662
 1936 054e 3060     		str	r0, [r6]
 1937 0550 8EE6     		b	.L45
 1938              	.LVL276:
 1939              	.L121:
 342:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_VADD_EMF, *value);
 1940              		.loc 1 342 10 is_stmt 1 view .LVU663
 343:boards/TMC4330_eval.c **** 		}
 1941              		.loc 1 343 4 view .LVU664
 1942              	.LBB251:
 1943              	.LBI251:
  46:boards/TMC4330_eval.c **** {
 1944              		.loc 1 46 31 view .LVU665
  46:boards/TMC4330_eval.c **** {
 1945              		.loc 1 46 31 is_stmt 0 view .LVU666
 1946              	.LBE251:
  48:boards/TMC4330_eval.c **** 
 1947              		.loc 1 48 2 is_stmt 1 view .LVU667
  50:boards/TMC4330_eval.c **** }
 1948              		.loc 1 50 2 view .LVU668
 343:boards/TMC4330_eval.c **** 		}
 1949              		.loc 1 343 4 is_stmt 0 view .LVU669
 1950 0552 3268     		ldr	r2, [r6]
 1951 0554 9148     		ldr	r0, .L169
 1952              	.LVL277:
 343:boards/TMC4330_eval.c **** 		}
 1953              		.loc 1 343 4 view .LVU670
 1954 0556 6121     		movs	r1, #97
 1955              	.LVL278:
 343:boards/TMC4330_eval.c **** 		}
 1956              		.loc 1 343 4 view .LVU671
 1957 0558 FFF7FEFF 		bl	tmc4330_writeInt
 1958              	.LVL279:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 1959              		.loc 1 116 11 view .LVU672
 1960 055c 0025     		movs	r5, #0
 1961 055e 87E6     		b	.L45
 1962              	.LVL280:
 1963              	.L70:
 348:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_BETA) >> 16;
 1964              		.loc 1 348 3 is_stmt 1 view .LVU673
 349:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1965              		.loc 1 349 13 is_stmt 0 view .LVU674
 1966 0560 8E48     		ldr	r0, .L169
 1967              	.LVL281:
 349:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1968              		.loc 1 349 13 view .LVU675
 1969 0562 1C21     		movs	r1, #28
 1970              	.LVL282:
 348:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_BETA) >> 16;
 1971              		.loc 1 348 5 view .LVU676
 1972 0564 25B9     		cbnz	r5, .L122
 349:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1973              		.loc 1 349 4 is_stmt 1 view .LVU677
 1974              	.LBB252:
 1975              	.LBI252:
  46:boards/TMC4330_eval.c **** {
 1976              		.loc 1 46 31 view .LVU678
 1977              	.LVL283:
  46:boards/TMC4330_eval.c **** {
 1978              		.loc 1 46 31 is_stmt 0 view .LVU679
 1979              	.LBE252:
  48:boards/TMC4330_eval.c **** 
 1980              		.loc 1 48 2 is_stmt 1 view .LVU680
  50:boards/TMC4330_eval.c **** }
 1981              		.loc 1 50 2 view .LVU681
 349:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1982              		.loc 1 349 13 is_stmt 0 view .LVU682
 1983 0566 FFF7FEFF 		bl	tmc4330_readInt
 1984              	.LVL284:
 349:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1985              		.loc 1 349 64 view .LVU683
 1986 056a 0014     		asrs	r0, r0, #16
 349:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 1987              		.loc 1 349 11 view .LVU684
 1988 056c 3060     		str	r0, [r6]
 1989 056e 7FE6     		b	.L45
 1990              	.LVL285:
 1991              	.L122:
 350:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor),  TMC4330_CL_BETA) & 0x000001FF;
 1992              		.loc 1 350 10 is_stmt 1 view .LVU685
 351:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_BETA, uvalue | (*value<<16));
 1993              		.loc 1 351 4 view .LVU686
 1994              	.LBB253:
 1995              	.LBI253:
  46:boards/TMC4330_eval.c **** {
 1996              		.loc 1 46 31 view .LVU687
  46:boards/TMC4330_eval.c **** {
 1997              		.loc 1 46 31 is_stmt 0 view .LVU688
 1998              	.LBE253:
  48:boards/TMC4330_eval.c **** 
 1999              		.loc 1 48 2 is_stmt 1 view .LVU689
  50:boards/TMC4330_eval.c **** }
 2000              		.loc 1 50 2 view .LVU690
 351:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_BETA, uvalue | (*value<<16));
 2001              		.loc 1 351 13 is_stmt 0 view .LVU691
 2002 0570 FFF7FEFF 		bl	tmc4330_readInt
 2003              	.LVL286:
 352:boards/TMC4330_eval.c **** 		}
 2004              		.loc 1 352 4 is_stmt 1 view .LVU692
 2005              	.LBB254:
 2006              	.LBI254:
  46:boards/TMC4330_eval.c **** {
 2007              		.loc 1 46 31 view .LVU693
  46:boards/TMC4330_eval.c **** {
 2008              		.loc 1 46 31 is_stmt 0 view .LVU694
 2009              	.LBE254:
  48:boards/TMC4330_eval.c **** 
 2010              		.loc 1 48 2 is_stmt 1 view .LVU695
  50:boards/TMC4330_eval.c **** }
 2011              		.loc 1 50 2 view .LVU696
 352:boards/TMC4330_eval.c **** 		}
 2012              		.loc 1 352 72 is_stmt 0 view .LVU697
 2013 0574 3268     		ldr	r2, [r6]
 351:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_BETA, uvalue | (*value<<16));
 2014              		.loc 1 351 11 view .LVU698
 2015 0576 C0F30800 		ubfx	r0, r0, #0, #9
 2016              	.LVL287:
 352:boards/TMC4330_eval.c **** 		}
 2017              		.loc 1 352 4 view .LVU699
 2018 057a 40EA0242 		orr	r2, r0, r2, lsl #16
 2019 057e 1C21     		movs	r1, #28
 2020 0580 8648     		ldr	r0, .L169
 2021 0582 FFF7FEFF 		bl	tmc4330_writeInt
 2022              	.LVL288:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2023              		.loc 1 116 11 view .LVU700
 2024 0586 0025     		movs	r5, #0
 2025 0588 72E6     		b	.L45
 2026              	.LVL289:
 2027              	.L69:
 357:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_BETA) & 0xFF;
 2028              		.loc 1 357 3 is_stmt 1 view .LVU701
 358:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2029              		.loc 1 358 13 is_stmt 0 view .LVU702
 2030 058a 8448     		ldr	r0, .L169
 2031              	.LVL290:
 358:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2032              		.loc 1 358 13 view .LVU703
 2033 058c 1C21     		movs	r1, #28
 2034              	.LVL291:
 357:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_BETA) & 0xFF;
 2035              		.loc 1 357 5 view .LVU704
 2036 058e 25B9     		cbnz	r5, .L123
 358:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2037              		.loc 1 358 4 is_stmt 1 view .LVU705
 2038              	.LBB255:
 2039              	.LBI255:
  46:boards/TMC4330_eval.c **** {
 2040              		.loc 1 46 31 view .LVU706
 2041              	.LVL292:
  46:boards/TMC4330_eval.c **** {
 2042              		.loc 1 46 31 is_stmt 0 view .LVU707
 2043              	.LBE255:
  48:boards/TMC4330_eval.c **** 
 2044              		.loc 1 48 2 is_stmt 1 view .LVU708
  50:boards/TMC4330_eval.c **** }
 2045              		.loc 1 50 2 view .LVU709
 358:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2046              		.loc 1 358 13 is_stmt 0 view .LVU710
 2047 0590 FFF7FEFF 		bl	tmc4330_readInt
 2048              	.LVL293:
 358:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2049              		.loc 1 358 64 view .LVU711
 2050 0594 C0B2     		uxtb	r0, r0
 358:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2051              		.loc 1 358 11 view .LVU712
 2052 0596 3060     		str	r0, [r6]
 2053 0598 6AE6     		b	.L45
 2054              	.LVL294:
 2055              	.L123:
 359:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor),  TMC4330_CL_BETA) & 0x00FF0000;
 2056              		.loc 1 359 10 is_stmt 1 view .LVU713
 360:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_BETA, uvalue | (*value & 0x1FF));
 2057              		.loc 1 360 4 view .LVU714
 2058              	.LBB256:
 2059              	.LBI256:
  46:boards/TMC4330_eval.c **** {
 2060              		.loc 1 46 31 view .LVU715
  46:boards/TMC4330_eval.c **** {
 2061              		.loc 1 46 31 is_stmt 0 view .LVU716
 2062              	.LBE256:
  48:boards/TMC4330_eval.c **** 
 2063              		.loc 1 48 2 is_stmt 1 view .LVU717
  50:boards/TMC4330_eval.c **** }
 2064              		.loc 1 50 2 view .LVU718
 360:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_BETA, uvalue | (*value & 0x1FF));
 2065              		.loc 1 360 13 is_stmt 0 view .LVU719
 2066 059a FFF7FEFF 		bl	tmc4330_readInt
 2067              	.LVL295:
 361:boards/TMC4330_eval.c **** 		}
 2068              		.loc 1 361 4 is_stmt 1 view .LVU720
 2069              	.LBB257:
 2070              	.LBI257:
  46:boards/TMC4330_eval.c **** {
 2071              		.loc 1 46 31 view .LVU721
  46:boards/TMC4330_eval.c **** {
 2072              		.loc 1 46 31 is_stmt 0 view .LVU722
 2073              	.LBE257:
  48:boards/TMC4330_eval.c **** 
 2074              		.loc 1 48 2 is_stmt 1 view .LVU723
  50:boards/TMC4330_eval.c **** }
 2075              		.loc 1 50 2 view .LVU724
 361:boards/TMC4330_eval.c **** 		}
 2076              		.loc 1 361 73 is_stmt 0 view .LVU725
 2077 059e 3268     		ldr	r2, [r6]
 360:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_BETA, uvalue | (*value & 0x1FF));
 2078              		.loc 1 360 11 view .LVU726
 2079 05a0 00F47F00 		and	r0, r0, #16711680
 2080              	.LVL296:
 361:boards/TMC4330_eval.c **** 		}
 2081              		.loc 1 361 73 view .LVU727
 2082 05a4 C2F30802 		ubfx	r2, r2, #0, #9
 361:boards/TMC4330_eval.c **** 		}
 2083              		.loc 1 361 4 view .LVU728
 2084 05a8 0243     		orrs	r2, r2, r0
 2085 05aa 1C21     		movs	r1, #28
 2086 05ac 7B48     		ldr	r0, .L169
 2087              	.LVL297:
 361:boards/TMC4330_eval.c **** 		}
 2088              		.loc 1 361 4 view .LVU729
 2089 05ae FFF7FEFF 		bl	tmc4330_writeInt
 2090              	.LVL298:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2091              		.loc 1 116 11 view .LVU730
 2092 05b2 0025     		movs	r5, #0
 2093 05b4 5CE6     		b	.L45
 2094              	.LVL299:
 2095              	.L68:
 366:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_OFFSET);
 2096              		.loc 1 366 3 is_stmt 1 view .LVU731
 366:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_OFFSET);
 2097              		.loc 1 366 5 is_stmt 0 view .LVU732
 2098 05b6 28B9     		cbnz	r0, .L124
 367:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2099              		.loc 1 367 4 is_stmt 1 view .LVU733
 2100              	.LBB258:
 2101              	.LBI258:
  46:boards/TMC4330_eval.c **** {
 2102              		.loc 1 46 31 view .LVU734
 2103              	.LVL300:
  46:boards/TMC4330_eval.c **** {
 2104              		.loc 1 46 31 is_stmt 0 view .LVU735
 2105              	.LBE258:
  48:boards/TMC4330_eval.c **** 
 2106              		.loc 1 48 2 is_stmt 1 view .LVU736
  50:boards/TMC4330_eval.c **** }
 2107              		.loc 1 50 2 view .LVU737
 367:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2108              		.loc 1 367 13 is_stmt 0 view .LVU738
 2109 05b8 7848     		ldr	r0, .L169
 2110              	.LVL301:
 367:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2111              		.loc 1 367 13 view .LVU739
 2112 05ba 5921     		movs	r1, #89
 2113              	.LVL302:
 367:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2114              		.loc 1 367 13 view .LVU740
 2115 05bc FFF7FEFF 		bl	tmc4330_readInt
 2116              	.LVL303:
 367:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2117              		.loc 1 367 11 view .LVU741
 2118 05c0 3060     		str	r0, [r6]
 2119 05c2 55E6     		b	.L45
 2120              	.LVL304:
 2121              	.L124:
 368:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_OFFSET, *value);
 2122              		.loc 1 368 10 is_stmt 1 view .LVU742
 369:boards/TMC4330_eval.c **** 		}
 2123              		.loc 1 369 4 view .LVU743
 2124              	.LBB259:
 2125              	.LBI259:
  46:boards/TMC4330_eval.c **** {
 2126              		.loc 1 46 31 view .LVU744
  46:boards/TMC4330_eval.c **** {
 2127              		.loc 1 46 31 is_stmt 0 view .LVU745
 2128              	.LBE259:
  48:boards/TMC4330_eval.c **** 
 2129              		.loc 1 48 2 is_stmt 1 view .LVU746
  50:boards/TMC4330_eval.c **** }
 2130              		.loc 1 50 2 view .LVU747
 369:boards/TMC4330_eval.c **** 		}
 2131              		.loc 1 369 4 is_stmt 0 view .LVU748
 2132 05c4 3268     		ldr	r2, [r6]
 2133 05c6 7548     		ldr	r0, .L169
 2134              	.LVL305:
 369:boards/TMC4330_eval.c **** 		}
 2135              		.loc 1 369 4 view .LVU749
 2136 05c8 5921     		movs	r1, #89
 2137              	.LVL306:
 369:boards/TMC4330_eval.c **** 		}
 2138              		.loc 1 369 4 view .LVU750
 2139 05ca FFF7FEFF 		bl	tmc4330_writeInt
 2140              	.LVL307:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2141              		.loc 1 116 11 view .LVU751
 2142 05ce 0025     		movs	r5, #0
 2143 05d0 4EE6     		b	.L45
 2144              	.LVL308:
 2145              	.L67:
 374:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 0) & 0xFF;
 2146              		.loc 1 374 3 is_stmt 1 view .LVU752
 375:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2147              		.loc 1 375 70 is_stmt 0 view .LVU753
 2148 05d2 7248     		ldr	r0, .L169
 2149              	.LVL309:
 375:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2150              		.loc 1 375 70 view .LVU754
 2151 05d4 0521     		movs	r1, #5
 2152              	.LVL310:
 374:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 0) & 0xFF;
 2153              		.loc 1 374 5 view .LVU755
 2154 05d6 25B9     		cbnz	r5, .L125
 375:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2155              		.loc 1 375 4 is_stmt 1 view .LVU756
 2156              	.LBB260:
 2157              	.LBI260:
  46:boards/TMC4330_eval.c **** {
 2158              		.loc 1 46 31 view .LVU757
 2159              	.LVL311:
  46:boards/TMC4330_eval.c **** {
 2160              		.loc 1 46 31 is_stmt 0 view .LVU758
 2161              	.LBE260:
  48:boards/TMC4330_eval.c **** 
 2162              		.loc 1 48 2 is_stmt 1 view .LVU759
  50:boards/TMC4330_eval.c **** }
 2163              		.loc 1 50 2 view .LVU760
 375:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2164              		.loc 1 375 70 is_stmt 0 view .LVU761
 2165 05d8 FFF7FEFF 		bl	tmc4330_readInt
 2166              	.LVL312:
 375:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2167              		.loc 1 375 76 view .LVU762
 2168 05dc C0B2     		uxtb	r0, r0
 375:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2169              		.loc 1 375 11 view .LVU763
 2170 05de 3060     		str	r0, [r6]
 2171 05e0 46E6     		b	.L45
 2172              	.LVL313:
 2173              	.L125:
 376:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) & ~(0xFF<<0);
 2174              		.loc 1 376 10 is_stmt 1 view .LVU764
 377:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 0;
 2175              		.loc 1 377 4 view .LVU765
 2176              	.LBB261:
 2177              	.LBI261:
  46:boards/TMC4330_eval.c **** {
 2178              		.loc 1 46 31 view .LVU766
  46:boards/TMC4330_eval.c **** {
 2179              		.loc 1 46 31 is_stmt 0 view .LVU767
 2180              	.LBE261:
  48:boards/TMC4330_eval.c **** 
 2181              		.loc 1 48 2 is_stmt 1 view .LVU768
  50:boards/TMC4330_eval.c **** }
 2182              		.loc 1 50 2 view .LVU769
 377:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 0;
 2183              		.loc 1 377 13 is_stmt 0 view .LVU770
 2184 05e2 FFF7FEFF 		bl	tmc4330_readInt
 2185              	.LVL314:
 378:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 2186              		.loc 1 378 30 view .LVU771
 2187 05e6 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 377:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 0;
 2188              		.loc 1 377 11 view .LVU772
 2189 05e8 20F0FF00 		bic	r0, r0, #255
 2190              	.LVL315:
 378:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 2191              		.loc 1 378 4 is_stmt 1 view .LVU773
 379:boards/TMC4330_eval.c **** 		}
 2192              		.loc 1 379 4 view .LVU774
 2193              	.LBB262:
 2194              	.LBI262:
  46:boards/TMC4330_eval.c **** {
 2195              		.loc 1 46 31 view .LVU775
  46:boards/TMC4330_eval.c **** {
 2196              		.loc 1 46 31 is_stmt 0 view .LVU776
 2197              	.LBE262:
  48:boards/TMC4330_eval.c **** 
 2198              		.loc 1 48 2 is_stmt 1 view .LVU777
  50:boards/TMC4330_eval.c **** }
 2199              		.loc 1 50 2 view .LVU778
 379:boards/TMC4330_eval.c **** 		}
 2200              		.loc 1 379 4 is_stmt 0 view .LVU779
 2201 05ec 0243     		orrs	r2, r2, r0
 2202 05ee 0521     		movs	r1, #5
 2203 05f0 6A48     		ldr	r0, .L169
 2204              	.LVL316:
 379:boards/TMC4330_eval.c **** 		}
 2205              		.loc 1 379 4 view .LVU780
 2206 05f2 FFF7FEFF 		bl	tmc4330_writeInt
 2207              	.LVL317:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2208              		.loc 1 116 11 view .LVU781
 2209 05f6 0025     		movs	r5, #0
 2210 05f8 3AE6     		b	.L45
 2211              	.LVL318:
 2212              	.L66:
 384:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 8) & 0xFF;
 2213              		.loc 1 384 3 is_stmt 1 view .LVU782
 385:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2214              		.loc 1 385 14 is_stmt 0 view .LVU783
 2215 05fa 6848     		ldr	r0, .L169
 2216              	.LVL319:
 385:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2217              		.loc 1 385 14 view .LVU784
 2218 05fc 0521     		movs	r1, #5
 2219              	.LVL320:
 384:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 8) & 0xFF;
 2220              		.loc 1 384 5 view .LVU785
 2221 05fe 2DB9     		cbnz	r5, .L126
 385:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2222              		.loc 1 385 4 is_stmt 1 view .LVU786
 2223              	.LBB263:
 2224              	.LBI263:
  46:boards/TMC4330_eval.c **** {
 2225              		.loc 1 46 31 view .LVU787
 2226              	.LVL321:
  46:boards/TMC4330_eval.c **** {
 2227              		.loc 1 46 31 is_stmt 0 view .LVU788
 2228              	.LBE263:
  48:boards/TMC4330_eval.c **** 
 2229              		.loc 1 48 2 is_stmt 1 view .LVU789
  50:boards/TMC4330_eval.c **** }
 2230              		.loc 1 50 2 view .LVU790
 385:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2231              		.loc 1 385 14 is_stmt 0 view .LVU791
 2232 0600 FFF7FEFF 		bl	tmc4330_readInt
 2233              	.LVL322:
 385:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2234              		.loc 1 385 76 view .LVU792
 2235 0604 C0F30720 		ubfx	r0, r0, #8, #8
 385:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2236              		.loc 1 385 11 view .LVU793
 2237 0608 3060     		str	r0, [r6]
 2238 060a 31E6     		b	.L45
 2239              	.LVL323:
 2240              	.L126:
 386:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) & ~(0xFF<<8);
 2241              		.loc 1 386 10 is_stmt 1 view .LVU794
 387:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 8;
 2242              		.loc 1 387 4 view .LVU795
 2243              	.LBB264:
 2244              	.LBI264:
  46:boards/TMC4330_eval.c **** {
 2245              		.loc 1 46 31 view .LVU796
  46:boards/TMC4330_eval.c **** {
 2246              		.loc 1 46 31 is_stmt 0 view .LVU797
 2247              	.LBE264:
  48:boards/TMC4330_eval.c **** 
 2248              		.loc 1 48 2 is_stmt 1 view .LVU798
  50:boards/TMC4330_eval.c **** }
 2249              		.loc 1 50 2 view .LVU799
 387:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 8;
 2250              		.loc 1 387 13 is_stmt 0 view .LVU800
 2251 060c FFF7FEFF 		bl	tmc4330_readInt
 2252              	.LVL324:
 388:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 2253              		.loc 1 388 30 view .LVU801
 2254 0610 3368     		ldr	r3, [r6]
 2255 0612 1B02     		lsls	r3, r3, #8
 387:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 8;
 2256              		.loc 1 387 11 view .LVU802
 2257 0614 20F47F42 		bic	r2, r0, #65280
 2258              	.LVL325:
 388:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 2259              		.loc 1 388 4 is_stmt 1 view .LVU803
 389:boards/TMC4330_eval.c **** 		}
 2260              		.loc 1 389 4 view .LVU804
 2261              	.LBB265:
 2262              	.LBI265:
  46:boards/TMC4330_eval.c **** {
 2263              		.loc 1 46 31 view .LVU805
  46:boards/TMC4330_eval.c **** {
 2264              		.loc 1 46 31 is_stmt 0 view .LVU806
 2265              	.LBE265:
  48:boards/TMC4330_eval.c **** 
 2266              		.loc 1 48 2 is_stmt 1 view .LVU807
  50:boards/TMC4330_eval.c **** }
 2267              		.loc 1 50 2 view .LVU808
 388:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 2268              		.loc 1 388 30 is_stmt 0 view .LVU809
 2269 0618 9BB2     		uxth	r3, r3
 389:boards/TMC4330_eval.c **** 		}
 2270              		.loc 1 389 4 view .LVU810
 2271 061a 6048     		ldr	r0, .L169
 2272 061c 1A43     		orrs	r2, r2, r3
 2273              	.LVL326:
 389:boards/TMC4330_eval.c **** 		}
 2274              		.loc 1 389 4 view .LVU811
 2275 061e 0521     		movs	r1, #5
 2276 0620 FFF7FEFF 		bl	tmc4330_writeInt
 2277              	.LVL327:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2278              		.loc 1 116 11 view .LVU812
 2279 0624 0025     		movs	r5, #0
 2280 0626 23E6     		b	.L45
 2281              	.LVL328:
 2282              	.L65:
 394:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_CL_VMAX_CALC_P_WR];
 2283              		.loc 1 394 3 is_stmt 1 view .LVU813
 394:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_CL_VMAX_CALC_P_WR];
 2284              		.loc 1 394 5 is_stmt 0 view .LVU814
 2285 0628 28B9     		cbnz	r0, .L127
 395:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2286              		.loc 1 395 4 is_stmt 1 view .LVU815
 395:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2287              		.loc 1 395 20 is_stmt 0 view .LVU816
 2288 062a 5D4B     		ldr	r3, .L169+4
 395:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2289              		.loc 1 395 43 view .LVU817
 2290 062c 5B6A     		ldr	r3, [r3, #36]
 2291 062e D3F86C31 		ldr	r3, [r3, #364]
 395:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2292              		.loc 1 395 11 view .LVU818
 2293 0632 3360     		str	r3, [r6]
 2294 0634 1CE6     		b	.L45
 2295              	.L127:
 396:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_VMAX_CALC_P_WR, *value);
 2296              		.loc 1 396 10 is_stmt 1 view .LVU819
 397:boards/TMC4330_eval.c **** 		}
 2297              		.loc 1 397 4 view .LVU820
 2298              	.LBB266:
 2299              	.LBI266:
  46:boards/TMC4330_eval.c **** {
 2300              		.loc 1 46 31 view .LVU821
 2301              	.LVL329:
  46:boards/TMC4330_eval.c **** {
 2302              		.loc 1 46 31 is_stmt 0 view .LVU822
 2303              	.LBE266:
  48:boards/TMC4330_eval.c **** 
 2304              		.loc 1 48 2 is_stmt 1 view .LVU823
  50:boards/TMC4330_eval.c **** }
 2305              		.loc 1 50 2 view .LVU824
 397:boards/TMC4330_eval.c **** 		}
 2306              		.loc 1 397 4 is_stmt 0 view .LVU825
 2307 0636 3268     		ldr	r2, [r6]
 2308 0638 5848     		ldr	r0, .L169
 2309              	.LVL330:
 397:boards/TMC4330_eval.c **** 		}
 2310              		.loc 1 397 4 view .LVU826
 2311 063a 5A21     		movs	r1, #90
 2312              	.LVL331:
 397:boards/TMC4330_eval.c **** 		}
 2313              		.loc 1 397 4 view .LVU827
 2314 063c FFF7FEFF 		bl	tmc4330_writeInt
 2315              	.LVL332:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2316              		.loc 1 116 11 view .LVU828
 2317 0640 0025     		movs	r5, #0
 2318 0642 15E6     		b	.L45
 2319              	.LVL333:
 2320              	.L64:
 402:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_CL_VMAX_CALC_I_WR];
 2321              		.loc 1 402 3 is_stmt 1 view .LVU829
 402:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_CL_VMAX_CALC_I_WR];
 2322              		.loc 1 402 5 is_stmt 0 view .LVU830
 2323 0644 28B9     		cbnz	r0, .L128
 403:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2324              		.loc 1 403 4 is_stmt 1 view .LVU831
 403:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2325              		.loc 1 403 20 is_stmt 0 view .LVU832
 2326 0646 564B     		ldr	r3, .L169+4
 403:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2327              		.loc 1 403 43 view .LVU833
 2328 0648 5B6A     		ldr	r3, [r3, #36]
 2329 064a D3F87031 		ldr	r3, [r3, #368]
 403:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2330              		.loc 1 403 11 view .LVU834
 2331 064e 3360     		str	r3, [r6]
 2332 0650 0EE6     		b	.L45
 2333              	.L128:
 404:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_VMAX_CALC_I_WR, *value);
 2334              		.loc 1 404 10 is_stmt 1 view .LVU835
 405:boards/TMC4330_eval.c **** 		}
 2335              		.loc 1 405 4 view .LVU836
 2336              	.LBB267:
 2337              	.LBI267:
  46:boards/TMC4330_eval.c **** {
 2338              		.loc 1 46 31 view .LVU837
 2339              	.LVL334:
  46:boards/TMC4330_eval.c **** {
 2340              		.loc 1 46 31 is_stmt 0 view .LVU838
 2341              	.LBE267:
  48:boards/TMC4330_eval.c **** 
 2342              		.loc 1 48 2 is_stmt 1 view .LVU839
  50:boards/TMC4330_eval.c **** }
 2343              		.loc 1 50 2 view .LVU840
 405:boards/TMC4330_eval.c **** 		}
 2344              		.loc 1 405 4 is_stmt 0 view .LVU841
 2345 0652 3268     		ldr	r2, [r6]
 2346 0654 5148     		ldr	r0, .L169
 2347              	.LVL335:
 405:boards/TMC4330_eval.c **** 		}
 2348              		.loc 1 405 4 view .LVU842
 2349 0656 5B21     		movs	r1, #91
 2350              	.LVL336:
 405:boards/TMC4330_eval.c **** 		}
 2351              		.loc 1 405 4 view .LVU843
 2352 0658 FFF7FEFF 		bl	tmc4330_writeInt
 2353              	.LVL337:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2354              		.loc 1 116 11 view .LVU844
 2355 065c 0025     		movs	r5, #0
 2356 065e 07E6     		b	.L45
 2357              	.LVL338:
 2358              	.L63:
 412:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_PID_I_WR] >> 0;
 2359              		.loc 1 412 3 is_stmt 1 view .LVU845
 2360 0660 4F48     		ldr	r0, .L169+4
 2361              	.LVL339:
 412:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_PID_I_WR] >> 0;
 2362              		.loc 1 412 3 is_stmt 0 view .LVU846
 2363 0662 436A     		ldr	r3, [r0, #36]
 2364 0664 D3F87031 		ldr	r3, [r3, #368]
 412:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_PID_I_WR] >> 0;
 2365              		.loc 1 412 5 view .LVU847
 2366 0668 1DB9     		cbnz	r5, .L129
 413:boards/TMC4330_eval.c **** 			*value &= 0x7FFF;
 2367              		.loc 1 413 4 is_stmt 1 view .LVU848
 414:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2368              		.loc 1 414 4 view .LVU849
 414:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2369              		.loc 1 414 11 is_stmt 0 view .LVU850
 2370 066a C3F30E03 		ubfx	r3, r3, #0, #15
 2371 066e 3360     		str	r3, [r6]
 2372 0670 FEE5     		b	.L45
 2373              	.L129:
 415:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_PID_I_WR];
 2374              		.loc 1 415 10 is_stmt 1 view .LVU851
 416:boards/TMC4330_eval.c **** 			uvalue &= ~(0x7FFF << 0);
 2375              		.loc 1 416 4 view .LVU852
 2376              	.LVL340:
 417:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x7FFF) << 0;
 2377              		.loc 1 417 4 view .LVU853
 418:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_PID_I_WR, uvalue);
 2378              		.loc 1 418 32 is_stmt 0 view .LVU854
 2379 0672 3268     		ldr	r2, [r6]
 417:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x7FFF) << 0;
 2380              		.loc 1 417 11 view .LVU855
 2381 0674 23F4FF43 		bic	r3, r3, #32640
 2382              	.LVL341:
 417:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x7FFF) << 0;
 2383              		.loc 1 417 11 view .LVU856
 2384 0678 23F07F03 		bic	r3, r3, #127
 2385              	.LVL342:
 418:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_PID_I_WR, uvalue);
 2386              		.loc 1 418 4 is_stmt 1 view .LVU857
 419:boards/TMC4330_eval.c **** 		}
 2387              		.loc 1 419 4 view .LVU858
 2388              	.LBB268:
 2389              	.LBI268:
  46:boards/TMC4330_eval.c **** {
 2390              		.loc 1 46 31 view .LVU859
  46:boards/TMC4330_eval.c **** {
 2391              		.loc 1 46 31 is_stmt 0 view .LVU860
 2392              	.LBE268:
  48:boards/TMC4330_eval.c **** 
 2393              		.loc 1 48 2 is_stmt 1 view .LVU861
  50:boards/TMC4330_eval.c **** }
 2394              		.loc 1 50 2 view .LVU862
 418:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_PID_I_WR, uvalue);
 2395              		.loc 1 418 32 is_stmt 0 view .LVU863
 2396 067c C2F30E02 		ubfx	r2, r2, #0, #15
 2397              	.LVL343:
 419:boards/TMC4330_eval.c **** 		}
 2398              		.loc 1 419 4 view .LVU864
 2399 0680 1A43     		orrs	r2, r2, r3
 2400 0682 5B21     		movs	r1, #91
 2401              	.LVL344:
 419:boards/TMC4330_eval.c **** 		}
 2402              		.loc 1 419 4 view .LVU865
 2403 0684 2430     		adds	r0, r0, #36
 2404 0686 FFF7FEFF 		bl	tmc4330_writeInt
 2405              	.LVL345:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2406              		.loc 1 116 11 view .LVU866
 2407 068a 0025     		movs	r5, #0
 2408 068c F0E5     		b	.L45
 2409              	.LVL346:
 2410              	.L62:
 426:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_PID_I_WR] >> 16;
 2411              		.loc 1 426 3 is_stmt 1 view .LVU867
 2412 068e 4448     		ldr	r0, .L169+4
 2413              	.LVL347:
 426:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_PID_I_WR] >> 16;
 2414              		.loc 1 426 3 is_stmt 0 view .LVU868
 2415 0690 436A     		ldr	r3, [r0, #36]
 2416 0692 D3F87021 		ldr	r2, [r3, #368]
 426:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_PID_I_WR] >> 16;
 2417              		.loc 1 426 5 view .LVU869
 2418 0696 1DB9     		cbnz	r5, .L130
 427:boards/TMC4330_eval.c **** 			*value &= 0xFF;
 2419              		.loc 1 427 4 is_stmt 1 view .LVU870
 428:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2420              		.loc 1 428 4 view .LVU871
 428:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2421              		.loc 1 428 11 is_stmt 0 view .LVU872
 2422 0698 C2F30742 		ubfx	r2, r2, #16, #8
 2423 069c 3260     		str	r2, [r6]
 2424 069e E7E5     		b	.L45
 2425              	.L130:
 429:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_PID_I_WR];
 2426              		.loc 1 429 10 is_stmt 1 view .LVU873
 430:boards/TMC4330_eval.c **** 			uvalue &= ~(0xFF << 16);
 2427              		.loc 1 430 4 view .LVU874
 2428              	.LVL348:
 431:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 16;
 2429              		.loc 1 431 4 view .LVU875
 432:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_PID_I_WR, uvalue);
 2430              		.loc 1 432 30 is_stmt 0 view .LVU876
 2431 06a0 3368     		ldr	r3, [r6]
 2432 06a2 1B04     		lsls	r3, r3, #16
 2433 06a4 03F47F03 		and	r3, r3, #16711680
 431:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 16;
 2434              		.loc 1 431 11 view .LVU877
 2435 06a8 22F47F02 		bic	r2, r2, #16711680
 2436              	.LVL349:
 432:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_PID_I_WR, uvalue);
 2437              		.loc 1 432 4 is_stmt 1 view .LVU878
 433:boards/TMC4330_eval.c **** 		}
 2438              		.loc 1 433 4 view .LVU879
 2439              	.LBB269:
 2440              	.LBI269:
  46:boards/TMC4330_eval.c **** {
 2441              		.loc 1 46 31 view .LVU880
  46:boards/TMC4330_eval.c **** {
 2442              		.loc 1 46 31 is_stmt 0 view .LVU881
 2443              	.LBE269:
  48:boards/TMC4330_eval.c **** 
 2444              		.loc 1 48 2 is_stmt 1 view .LVU882
  50:boards/TMC4330_eval.c **** }
 2445              		.loc 1 50 2 view .LVU883
 433:boards/TMC4330_eval.c **** 		}
 2446              		.loc 1 433 4 is_stmt 0 view .LVU884
 2447 06ac 1A43     		orrs	r2, r2, r3
 2448              	.LVL350:
 433:boards/TMC4330_eval.c **** 		}
 2449              		.loc 1 433 4 view .LVU885
 2450 06ae 5B21     		movs	r1, #91
 2451              	.LVL351:
 433:boards/TMC4330_eval.c **** 		}
 2452              		.loc 1 433 4 view .LVU886
 2453 06b0 2430     		adds	r0, r0, #36
 2454 06b2 FFF7FEFF 		bl	tmc4330_writeInt
 2455              	.LVL352:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2456              		.loc 1 116 11 view .LVU887
 2457 06b6 0025     		movs	r5, #0
 2458 06b8 DAE5     		b	.L45
 2459              	.LVL353:
 2460              	.L61:
 438:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_PID_DV_CLIP_WR);
 2461              		.loc 1 438 3 is_stmt 1 view .LVU888
 438:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_PID_DV_CLIP_WR);
 2462              		.loc 1 438 5 is_stmt 0 view .LVU889
 2463 06ba 28B9     		cbnz	r0, .L131
 439:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2464              		.loc 1 439 4 is_stmt 1 view .LVU890
 2465              	.LBB270:
 2466              	.LBI270:
  46:boards/TMC4330_eval.c **** {
 2467              		.loc 1 46 31 view .LVU891
 2468              	.LVL354:
  46:boards/TMC4330_eval.c **** {
 2469              		.loc 1 46 31 is_stmt 0 view .LVU892
 2470              	.LBE270:
  48:boards/TMC4330_eval.c **** 
 2471              		.loc 1 48 2 is_stmt 1 view .LVU893
  50:boards/TMC4330_eval.c **** }
 2472              		.loc 1 50 2 view .LVU894
 439:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2473              		.loc 1 439 13 is_stmt 0 view .LVU895
 2474 06bc 3748     		ldr	r0, .L169
 2475              	.LVL355:
 439:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2476              		.loc 1 439 13 view .LVU896
 2477 06be 5E21     		movs	r1, #94
 2478              	.LVL356:
 439:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2479              		.loc 1 439 13 view .LVU897
 2480 06c0 FFF7FEFF 		bl	tmc4330_readInt
 2481              	.LVL357:
 439:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2482              		.loc 1 439 11 view .LVU898
 2483 06c4 3060     		str	r0, [r6]
 2484 06c6 D3E5     		b	.L45
 2485              	.LVL358:
 2486              	.L131:
 440:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_PID_DV_CLIP_WR, *value);
 2487              		.loc 1 440 10 is_stmt 1 view .LVU899
 441:boards/TMC4330_eval.c **** 		}
 2488              		.loc 1 441 4 view .LVU900
 2489              	.LBB271:
 2490              	.LBI271:
  46:boards/TMC4330_eval.c **** {
 2491              		.loc 1 46 31 view .LVU901
  46:boards/TMC4330_eval.c **** {
 2492              		.loc 1 46 31 is_stmt 0 view .LVU902
 2493              	.LBE271:
  48:boards/TMC4330_eval.c **** 
 2494              		.loc 1 48 2 is_stmt 1 view .LVU903
  50:boards/TMC4330_eval.c **** }
 2495              		.loc 1 50 2 view .LVU904
 441:boards/TMC4330_eval.c **** 		}
 2496              		.loc 1 441 4 is_stmt 0 view .LVU905
 2497 06c8 3268     		ldr	r2, [r6]
 2498 06ca 3448     		ldr	r0, .L169
 2499              	.LVL359:
 441:boards/TMC4330_eval.c **** 		}
 2500              		.loc 1 441 4 view .LVU906
 2501 06cc 5E21     		movs	r1, #94
 2502              	.LVL360:
 441:boards/TMC4330_eval.c **** 		}
 2503              		.loc 1 441 4 view .LVU907
 2504 06ce FFF7FEFF 		bl	tmc4330_writeInt
 2505              	.LVL361:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2506              		.loc 1 116 11 view .LVU908
 2507 06d2 0025     		movs	r5, #0
 2508 06d4 CCE5     		b	.L45
 2509              	.LVL362:
 2510              	.L60:
 446:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_DELTA_P_WR);
 2511              		.loc 1 446 3 is_stmt 1 view .LVU909
 446:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_DELTA_P_WR);
 2512              		.loc 1 446 5 is_stmt 0 view .LVU910
 2513 06d6 28B9     		cbnz	r0, .L132
 447:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2514              		.loc 1 447 4 is_stmt 1 view .LVU911
 2515              	.LBB272:
 2516              	.LBI272:
  46:boards/TMC4330_eval.c **** {
 2517              		.loc 1 46 31 view .LVU912
 2518              	.LVL363:
  46:boards/TMC4330_eval.c **** {
 2519              		.loc 1 46 31 is_stmt 0 view .LVU913
 2520              	.LBE272:
  48:boards/TMC4330_eval.c **** 
 2521              		.loc 1 48 2 is_stmt 1 view .LVU914
  50:boards/TMC4330_eval.c **** }
 2522              		.loc 1 50 2 view .LVU915
 447:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2523              		.loc 1 447 13 is_stmt 0 view .LVU916
 2524 06d8 3048     		ldr	r0, .L169
 2525              	.LVL364:
 447:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2526              		.loc 1 447 13 view .LVU917
 2527 06da 5C21     		movs	r1, #92
 2528              	.LVL365:
 447:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2529              		.loc 1 447 13 view .LVU918
 2530 06dc FFF7FEFF 		bl	tmc4330_readInt
 2531              	.LVL366:
 447:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2532              		.loc 1 447 11 view .LVU919
 2533 06e0 3060     		str	r0, [r6]
 2534 06e2 C5E5     		b	.L45
 2535              	.LVL367:
 2536              	.L132:
 448:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_DELTA_P_WR, *value);
 2537              		.loc 1 448 10 is_stmt 1 view .LVU920
 449:boards/TMC4330_eval.c **** 		}
 2538              		.loc 1 449 4 view .LVU921
 2539              	.LBB273:
 2540              	.LBI273:
  46:boards/TMC4330_eval.c **** {
 2541              		.loc 1 46 31 view .LVU922
  46:boards/TMC4330_eval.c **** {
 2542              		.loc 1 46 31 is_stmt 0 view .LVU923
 2543              	.LBE273:
  48:boards/TMC4330_eval.c **** 
 2544              		.loc 1 48 2 is_stmt 1 view .LVU924
  50:boards/TMC4330_eval.c **** }
 2545              		.loc 1 50 2 view .LVU925
 449:boards/TMC4330_eval.c **** 		}
 2546              		.loc 1 449 4 is_stmt 0 view .LVU926
 2547 06e4 3268     		ldr	r2, [r6]
 2548 06e6 2D48     		ldr	r0, .L169
 2549              	.LVL368:
 449:boards/TMC4330_eval.c **** 		}
 2550              		.loc 1 449 4 view .LVU927
 2551 06e8 5C21     		movs	r1, #92
 2552              	.LVL369:
 449:boards/TMC4330_eval.c **** 		}
 2553              		.loc 1 449 4 view .LVU928
 2554 06ea FFF7FEFF 		bl	tmc4330_writeInt
 2555              	.LVL370:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2556              		.loc 1 116 11 view .LVU929
 2557 06ee 0025     		movs	r5, #0
 2558 06f0 BEE5     		b	.L45
 2559              	.LVL371:
 2560              	.L59:
 454:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_TOLERANCE_WR);
 2561              		.loc 1 454 3 is_stmt 1 view .LVU930
 454:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_CL_TOLERANCE_WR);
 2562              		.loc 1 454 5 is_stmt 0 view .LVU931
 2563 06f2 28B9     		cbnz	r0, .L133
 455:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2564              		.loc 1 455 4 is_stmt 1 view .LVU932
 2565              	.LBB274:
 2566              	.LBI274:
  46:boards/TMC4330_eval.c **** {
 2567              		.loc 1 46 31 view .LVU933
 2568              	.LVL372:
  46:boards/TMC4330_eval.c **** {
 2569              		.loc 1 46 31 is_stmt 0 view .LVU934
 2570              	.LBE274:
  48:boards/TMC4330_eval.c **** 
 2571              		.loc 1 48 2 is_stmt 1 view .LVU935
  50:boards/TMC4330_eval.c **** }
 2572              		.loc 1 50 2 view .LVU936
 455:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2573              		.loc 1 455 13 is_stmt 0 view .LVU937
 2574 06f4 2948     		ldr	r0, .L169
 2575              	.LVL373:
 455:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2576              		.loc 1 455 13 view .LVU938
 2577 06f6 5F21     		movs	r1, #95
 2578              	.LVL374:
 455:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2579              		.loc 1 455 13 view .LVU939
 2580 06f8 FFF7FEFF 		bl	tmc4330_readInt
 2581              	.LVL375:
 455:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2582              		.loc 1 455 11 view .LVU940
 2583 06fc 3060     		str	r0, [r6]
 2584 06fe B7E5     		b	.L45
 2585              	.LVL376:
 2586              	.L133:
 456:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_TOLERANCE_WR, *value);
 2587              		.loc 1 456 10 is_stmt 1 view .LVU941
 457:boards/TMC4330_eval.c **** 		}
 2588              		.loc 1 457 4 view .LVU942
 2589              	.LBB275:
 2590              	.LBI275:
  46:boards/TMC4330_eval.c **** {
 2591              		.loc 1 46 31 view .LVU943
  46:boards/TMC4330_eval.c **** {
 2592              		.loc 1 46 31 is_stmt 0 view .LVU944
 2593              	.LBE275:
  48:boards/TMC4330_eval.c **** 
 2594              		.loc 1 48 2 is_stmt 1 view .LVU945
  50:boards/TMC4330_eval.c **** }
 2595              		.loc 1 50 2 view .LVU946
 457:boards/TMC4330_eval.c **** 		}
 2596              		.loc 1 457 4 is_stmt 0 view .LVU947
 2597 0700 3268     		ldr	r2, [r6]
 2598 0702 2648     		ldr	r0, .L169
 2599              	.LVL377:
 457:boards/TMC4330_eval.c **** 		}
 2600              		.loc 1 457 4 view .LVU948
 2601 0704 5F21     		movs	r1, #95
 2602              	.LVL378:
 457:boards/TMC4330_eval.c **** 		}
 2603              		.loc 1 457 4 view .LVU949
 2604 0706 FFF7FEFF 		bl	tmc4330_writeInt
 2605              	.LVL379:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2606              		.loc 1 116 11 view .LVU950
 2607 070a 0025     		movs	r5, #0
 2608 070c B0E5     		b	.L45
 2609              	.LVL380:
 2610              	.L58:
 462:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 16) & 0xFF;
 2611              		.loc 1 462 3 is_stmt 1 view .LVU951
 463:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2612              		.loc 1 463 14 is_stmt 0 view .LVU952
 2613 070e 2348     		ldr	r0, .L169
 2614              	.LVL381:
 463:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2615              		.loc 1 463 14 view .LVU953
 2616 0710 0521     		movs	r1, #5
 2617              	.LVL382:
 462:boards/TMC4330_eval.c **** 			*value = (tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) >> 16) & 0xFF;
 2618              		.loc 1 462 5 view .LVU954
 2619 0712 2DB9     		cbnz	r5, .L134
 463:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2620              		.loc 1 463 4 is_stmt 1 view .LVU955
 2621              	.LBB276:
 2622              	.LBI276:
  46:boards/TMC4330_eval.c **** {
 2623              		.loc 1 46 31 view .LVU956
 2624              	.LVL383:
  46:boards/TMC4330_eval.c **** {
 2625              		.loc 1 46 31 is_stmt 0 view .LVU957
 2626              	.LBE276:
  48:boards/TMC4330_eval.c **** 
 2627              		.loc 1 48 2 is_stmt 1 view .LVU958
  50:boards/TMC4330_eval.c **** }
 2628              		.loc 1 50 2 view .LVU959
 463:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2629              		.loc 1 463 14 is_stmt 0 view .LVU960
 2630 0714 FFF7FEFF 		bl	tmc4330_readInt
 2631              	.LVL384:
 463:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2632              		.loc 1 463 77 view .LVU961
 2633 0718 C0F30740 		ubfx	r0, r0, #16, #8
 463:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2634              		.loc 1 463 11 view .LVU962
 2635 071c 3060     		str	r0, [r6]
 2636 071e A7E5     		b	.L45
 2637              	.LVL385:
 2638              	.L134:
 464:boards/TMC4330_eval.c **** 			uvalue = tmc4330_readInt(motorToIC(motor), TMC4330_SCALE_VALUES) & ~(0xFF<<16);
 2639              		.loc 1 464 10 is_stmt 1 view .LVU963
 465:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 16;
 2640              		.loc 1 465 4 view .LVU964
 2641              	.LBB277:
 2642              	.LBI277:
  46:boards/TMC4330_eval.c **** {
 2643              		.loc 1 46 31 view .LVU965
  46:boards/TMC4330_eval.c **** {
 2644              		.loc 1 46 31 is_stmt 0 view .LVU966
 2645              	.LBE277:
  48:boards/TMC4330_eval.c **** 
 2646              		.loc 1 48 2 is_stmt 1 view .LVU967
  50:boards/TMC4330_eval.c **** }
 2647              		.loc 1 50 2 view .LVU968
 465:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 16;
 2648              		.loc 1 465 13 is_stmt 0 view .LVU969
 2649 0720 FFF7FEFF 		bl	tmc4330_readInt
 2650              	.LVL386:
 466:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 2651              		.loc 1 466 30 view .LVU970
 2652 0724 3368     		ldr	r3, [r6]
 2653 0726 1B04     		lsls	r3, r3, #16
 465:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0xFF) << 16;
 2654              		.loc 1 465 11 view .LVU971
 2655 0728 20F47F02 		bic	r2, r0, #16711680
 2656              	.LVL387:
 466:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 2657              		.loc 1 466 4 is_stmt 1 view .LVU972
 467:boards/TMC4330_eval.c **** 		}
 2658              		.loc 1 467 4 view .LVU973
 2659              	.LBB278:
 2660              	.LBI278:
  46:boards/TMC4330_eval.c **** {
 2661              		.loc 1 46 31 view .LVU974
  46:boards/TMC4330_eval.c **** {
 2662              		.loc 1 46 31 is_stmt 0 view .LVU975
 2663              	.LBE278:
  48:boards/TMC4330_eval.c **** 
 2664              		.loc 1 48 2 is_stmt 1 view .LVU976
  50:boards/TMC4330_eval.c **** }
 2665              		.loc 1 50 2 view .LVU977
 466:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_SCALE_VALUES, uvalue);
 2666              		.loc 1 466 30 is_stmt 0 view .LVU978
 2667 072c 03F47F03 		and	r3, r3, #16711680
 467:boards/TMC4330_eval.c **** 		}
 2668              		.loc 1 467 4 view .LVU979
 2669 0730 1A48     		ldr	r0, .L169
 2670 0732 1A43     		orrs	r2, r2, r3
 2671              	.LVL388:
 467:boards/TMC4330_eval.c **** 		}
 2672              		.loc 1 467 4 view .LVU980
 2673 0734 0521     		movs	r1, #5
 2674 0736 FFF7FEFF 		bl	tmc4330_writeInt
 2675              	.LVL389:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2676              		.loc 1 116 11 view .LVU981
 2677 073a 0025     		movs	r5, #0
 2678 073c 98E5     		b	.L45
 2679              	.LVL390:
 2680              	.L57:
 472:boards/TMC4330_eval.c **** 			// Read for closed loop flag is implemented as AP 133
 2681              		.loc 1 472 3 is_stmt 1 view .LVU982
 472:boards/TMC4330_eval.c **** 			// Read for closed loop flag is implemented as AP 133
 2682              		.loc 1 472 5 is_stmt 0 view .LVU983
 2683 073e 48B1     		cbz	r0, .L103
 474:boards/TMC4330_eval.c **** 			//Closed loop on/off
 2684              		.loc 1 474 10 is_stmt 1 view .LVU984
 476:boards/TMC4330_eval.c **** 			{
 2685              		.loc 1 476 4 view .LVU985
 476:boards/TMC4330_eval.c **** 			{
 2686              		.loc 1 476 6 is_stmt 0 view .LVU986
 2687 0740 3568     		ldr	r5, [r6]
 2688 0742 4DB1     		cbz	r5, .L135
 478:boards/TMC4330_eval.c **** 				if(!*value)
 2689              		.loc 1 478 5 is_stmt 1 view .LVU987
 2690              	.LBB279:
 2691              	.LBI279:
  46:boards/TMC4330_eval.c **** {
 2692              		.loc 1 46 31 view .LVU988
 2693              	.LVL391:
  46:boards/TMC4330_eval.c **** {
 2694              		.loc 1 46 31 is_stmt 0 view .LVU989
 2695              	.LBE279:
  48:boards/TMC4330_eval.c **** 
 2696              		.loc 1 48 2 is_stmt 1 view .LVU990
  50:boards/TMC4330_eval.c **** }
 2697              		.loc 1 50 2 view .LVU991
 478:boards/TMC4330_eval.c **** 				if(!*value)
 2698              		.loc 1 478 14 is_stmt 0 view .LVU992
 2699 0744 1548     		ldr	r0, .L169
 2700              	.LVL392:
 478:boards/TMC4330_eval.c **** 				if(!*value)
 2701              		.loc 1 478 14 view .LVU993
 2702 0746 0121     		movs	r1, #1
 2703              	.LVL393:
 478:boards/TMC4330_eval.c **** 				if(!*value)
 2704              		.loc 1 478 14 view .LVU994
 2705 0748 FFF7FEFF 		bl	tmc4330_calibrateClosedLoop
 2706              	.LVL394:
 478:boards/TMC4330_eval.c **** 				if(!*value)
 2707              		.loc 1 478 12 view .LVU995
 2708 074c 3060     		str	r0, [r6]
 479:boards/TMC4330_eval.c **** 					errors |= TMC_ERROR_NOT_DONE;
 2709              		.loc 1 479 5 is_stmt 1 view .LVU996
 479:boards/TMC4330_eval.c **** 					errors |= TMC_ERROR_NOT_DONE;
 2710              		.loc 1 479 7 is_stmt 0 view .LVU997
 2711 074e 0028     		cmp	r0, #0
 2712 0750 00F0B580 		beq	.L155
 2713              	.LVL395:
 2714              	.L103:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2715              		.loc 1 116 11 view .LVU998
 2716 0754 0025     		movs	r5, #0
 2717 0756 8BE5     		b	.L45
 2718              	.LVL396:
 2719              	.L135:
 484:boards/TMC4330_eval.c **** 				uvalue 	&= ~(1<<22); // closed loop
 2720              		.loc 1 484 5 is_stmt 1 view .LVU999
 2721              	.LBB280:
 2722              	.LBI280:
  46:boards/TMC4330_eval.c **** {
 2723              		.loc 1 46 31 view .LVU1000
  46:boards/TMC4330_eval.c **** {
 2724              		.loc 1 46 31 is_stmt 0 view .LVU1001
 2725              	.LBE280:
  48:boards/TMC4330_eval.c **** 
 2726              		.loc 1 48 2 is_stmt 1 view .LVU1002
  50:boards/TMC4330_eval.c **** }
 2727              		.loc 1 50 2 view .LVU1003
 484:boards/TMC4330_eval.c **** 				uvalue 	&= ~(1<<22); // closed loop
 2728              		.loc 1 484 15 is_stmt 0 view .LVU1004
 2729 0758 0721     		movs	r1, #7
 2730              	.LVL397:
 484:boards/TMC4330_eval.c **** 				uvalue 	&= ~(1<<22); // closed loop
 2731              		.loc 1 484 15 view .LVU1005
 2732 075a 1048     		ldr	r0, .L169
 2733              	.LVL398:
 484:boards/TMC4330_eval.c **** 				uvalue 	&= ~(1<<22); // closed loop
 2734              		.loc 1 484 15 view .LVU1006
 2735 075c FFF7FEFF 		bl	tmc4330_readInt
 2736              	.LVL399:
 485:boards/TMC4330_eval.c **** 				tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_IN_CONF, uvalue);
 2737              		.loc 1 485 5 is_stmt 1 view .LVU1007
 486:boards/TMC4330_eval.c **** 			}
 2738              		.loc 1 486 5 view .LVU1008
 2739              	.LBB281:
 2740              	.LBI281:
  46:boards/TMC4330_eval.c **** {
 2741              		.loc 1 46 31 view .LVU1009
  46:boards/TMC4330_eval.c **** {
 2742              		.loc 1 46 31 is_stmt 0 view .LVU1010
 2743              	.LBE281:
  48:boards/TMC4330_eval.c **** 
 2744              		.loc 1 48 2 is_stmt 1 view .LVU1011
  50:boards/TMC4330_eval.c **** }
 2745              		.loc 1 50 2 view .LVU1012
 486:boards/TMC4330_eval.c **** 			}
 2746              		.loc 1 486 5 is_stmt 0 view .LVU1013
 2747 0760 0721     		movs	r1, #7
 2748 0762 20F48002 		bic	r2, r0, #4194304
 2749              	.LVL400:
 486:boards/TMC4330_eval.c **** 			}
 2750              		.loc 1 486 5 view .LVU1014
 2751 0766 0D48     		ldr	r0, .L169
 2752 0768 FFF7FEFF 		bl	tmc4330_writeInt
 2753              	.LVL401:
 486:boards/TMC4330_eval.c **** 			}
 2754              		.loc 1 486 5 view .LVU1015
 2755 076c 80E5     		b	.L45
 2756              	.LVL402:
 2757              	.L56:
 492:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_V_ENC_RD);
 2758              		.loc 1 492 3 is_stmt 1 view .LVU1016
 492:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_V_ENC_RD);
 2759              		.loc 1 492 5 is_stmt 0 view .LVU1017
 2760 076e 0028     		cmp	r0, #0
 2761 0770 40F0A780 		bne	.L156
 493:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 2762              		.loc 1 493 4 is_stmt 1 view .LVU1018
 2763              	.LBB282:
 2764              	.LBI282:
  46:boards/TMC4330_eval.c **** {
 2765              		.loc 1 46 31 view .LVU1019
 2766              	.LVL403:
  46:boards/TMC4330_eval.c **** {
 2767              		.loc 1 46 31 is_stmt 0 view .LVU1020
 2768              	.LBE282:
  48:boards/TMC4330_eval.c **** 
 2769              		.loc 1 48 2 is_stmt 1 view .LVU1021
  50:boards/TMC4330_eval.c **** }
 2770              		.loc 1 50 2 view .LVU1022
 493:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 2771              		.loc 1 493 13 is_stmt 0 view .LVU1023
 2772 0774 0948     		ldr	r0, .L169
 2773              	.LVL404:
 493:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 2774              		.loc 1 493 13 view .LVU1024
 2775 0776 6521     		movs	r1, #101
 2776              	.LVL405:
 493:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 2777              		.loc 1 493 13 view .LVU1025
 2778 0778 FFF7FEFF 		bl	tmc4330_readInt
 2779              	.LVL406:
 493:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE)
 2780              		.loc 1 493 11 view .LVU1026
 2781 077c 3060     		str	r0, [r6]
 2782 077e 77E5     		b	.L45
 2783              	.LVL407:
 2784              	.L55:
 499:boards/TMC4330_eval.c **** 			uvalue 	= tmc4330_readInt(motorToIC(motor), TMC4330_ENC_IN_CONF);
 2785              		.loc 1 499 3 is_stmt 1 view .LVU1027
 499:boards/TMC4330_eval.c **** 			uvalue 	= tmc4330_readInt(motorToIC(motor), TMC4330_ENC_IN_CONF);
 2786              		.loc 1 499 5 is_stmt 0 view .LVU1028
 2787 0780 0028     		cmp	r0, #0
 2788 0782 E7D1     		bne	.L103
 500:boards/TMC4330_eval.c **** 			*value = (((uvalue >> 22) & 3) == 1) ? 1 : 0;
 2789              		.loc 1 500 4 is_stmt 1 view .LVU1029
 2790              	.LBB283:
 2791              	.LBI283:
  46:boards/TMC4330_eval.c **** {
 2792              		.loc 1 46 31 view .LVU1030
 2793              	.LVL408:
  46:boards/TMC4330_eval.c **** {
 2794              		.loc 1 46 31 is_stmt 0 view .LVU1031
 2795              	.LBE283:
  48:boards/TMC4330_eval.c **** 
 2796              		.loc 1 48 2 is_stmt 1 view .LVU1032
  50:boards/TMC4330_eval.c **** }
 2797              		.loc 1 50 2 view .LVU1033
 500:boards/TMC4330_eval.c **** 			*value = (((uvalue >> 22) & 3) == 1) ? 1 : 0;
 2798              		.loc 1 500 14 is_stmt 0 view .LVU1034
 2799 0784 0548     		ldr	r0, .L169
 2800              	.LVL409:
 500:boards/TMC4330_eval.c **** 			*value = (((uvalue >> 22) & 3) == 1) ? 1 : 0;
 2801              		.loc 1 500 14 view .LVU1035
 2802 0786 0721     		movs	r1, #7
 2803              	.LVL410:
 500:boards/TMC4330_eval.c **** 			*value = (((uvalue >> 22) & 3) == 1) ? 1 : 0;
 2804              		.loc 1 500 14 view .LVU1036
 2805 0788 FFF7FEFF 		bl	tmc4330_readInt
 2806              	.LVL411:
 501:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2807              		.loc 1 501 4 is_stmt 1 view .LVU1037
 501:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2808              		.loc 1 501 30 is_stmt 0 view .LVU1038
 2809 078c C0F38150 		ubfx	r0, r0, #22, #2
 2810              	.LVL412:
 501:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2811              		.loc 1 501 45 view .LVU1039
 2812 0790 431E     		subs	r3, r0, #1
 2813 0792 5842     		rsbs	r0, r3, #0
 2814 0794 5841     		adcs	r0, r0, r3
 501:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2815              		.loc 1 501 11 view .LVU1040
 2816 0796 3060     		str	r0, [r6]
 2817 0798 6AE5     		b	.L45
 2818              	.L170:
 2819 079a 00BF     		.align	2
 2820              	.L169:
 2821 079c 24000000 		.word	.LANCHOR0+36
 2822 07a0 00000000 		.word	.LANCHOR0
 2823              	.LVL413:
 2824              	.L54:
 509:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_ENC_POS_DEV_RD);
 2825              		.loc 1 509 3 is_stmt 1 view .LVU1041
 509:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_ENC_POS_DEV_RD);
 2826              		.loc 1 509 5 is_stmt 0 view .LVU1042
 2827 07a4 28B9     		cbnz	r0, .L136
 510:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2828              		.loc 1 510 4 is_stmt 1 view .LVU1043
 2829              	.LBB284:
 2830              	.LBI284:
  46:boards/TMC4330_eval.c **** {
 2831              		.loc 1 46 31 view .LVU1044
 2832              	.LVL414:
  46:boards/TMC4330_eval.c **** {
 2833              		.loc 1 46 31 is_stmt 0 view .LVU1045
 2834              	.LBE284:
  48:boards/TMC4330_eval.c **** 
 2835              		.loc 1 48 2 is_stmt 1 view .LVU1046
  50:boards/TMC4330_eval.c **** }
 2836              		.loc 1 50 2 view .LVU1047
 510:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2837              		.loc 1 510 13 is_stmt 0 view .LVU1048
 2838 07a6 4848     		ldr	r0, .L171
 2839              	.LVL415:
 510:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2840              		.loc 1 510 13 view .LVU1049
 2841 07a8 5221     		movs	r1, #82
 2842              	.LVL416:
 510:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2843              		.loc 1 510 13 view .LVU1050
 2844 07aa FFF7FEFF 		bl	tmc4330_readInt
 2845              	.LVL417:
 510:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2846              		.loc 1 510 11 view .LVU1051
 2847 07ae 3060     		str	r0, [r6]
 2848 07b0 5EE5     		b	.L45
 2849              	.LVL418:
 2850              	.L136:
 511:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_CL_TR_TOLERANCE_WR, *value);
 2851              		.loc 1 511 10 is_stmt 1 view .LVU1052
 512:boards/TMC4330_eval.c **** 		}
 2852              		.loc 1 512 4 view .LVU1053
 2853              	.LBB285:
 2854              	.LBI285:
  46:boards/TMC4330_eval.c **** {
 2855              		.loc 1 46 31 view .LVU1054
  46:boards/TMC4330_eval.c **** {
 2856              		.loc 1 46 31 is_stmt 0 view .LVU1055
 2857              	.LBE285:
  48:boards/TMC4330_eval.c **** 
 2858              		.loc 1 48 2 is_stmt 1 view .LVU1056
  50:boards/TMC4330_eval.c **** }
 2859              		.loc 1 50 2 view .LVU1057
 512:boards/TMC4330_eval.c **** 		}
 2860              		.loc 1 512 4 is_stmt 0 view .LVU1058
 2861 07b2 3268     		ldr	r2, [r6]
 2862 07b4 4448     		ldr	r0, .L171
 2863              	.LVL419:
 512:boards/TMC4330_eval.c **** 		}
 2864              		.loc 1 512 4 view .LVU1059
 2865 07b6 5221     		movs	r1, #82
 2866              	.LVL420:
 512:boards/TMC4330_eval.c **** 		}
 2867              		.loc 1 512 4 view .LVU1060
 2868 07b8 FFF7FEFF 		bl	tmc4330_writeInt
 2869              	.LVL421:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2870              		.loc 1 116 11 view .LVU1061
 2871 07bc 0025     		movs	r5, #0
 2872 07be 57E5     		b	.L45
 2873              	.LVL422:
 2874              	.L53:
 517:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 0) &  0xFF;
 2875              		.loc 1 517 3 is_stmt 1 view .LVU1062
 2876 07c0 4248     		ldr	r0, .L171+4
 2877              	.LVL423:
 517:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 0) &  0xFF;
 2878              		.loc 1 517 3 is_stmt 0 view .LVU1063
 2879 07c2 436A     		ldr	r3, [r0, #36]
 2880 07c4 D3F89021 		ldr	r2, [r3, #400]
 517:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 0) &  0xFF;
 2881              		.loc 1 517 5 view .LVU1064
 2882 07c8 15B9     		cbnz	r5, .L137
 518:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2883              		.loc 1 518 4 is_stmt 1 view .LVU1065
 518:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2884              		.loc 1 518 78 is_stmt 0 view .LVU1066
 2885 07ca D2B2     		uxtb	r2, r2
 518:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2886              		.loc 1 518 11 view .LVU1067
 2887 07cc 3260     		str	r2, [r6]
 2888 07ce 4FE5     		b	.L45
 2889              	.L137:
 519:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR];
 2890              		.loc 1 519 10 is_stmt 1 view .LVU1068
 520:boards/TMC4330_eval.c **** 			uvalue &= ~(0xFF << 0);
 2891              		.loc 1 520 4 view .LVU1069
 2892              	.LVL424:
 521:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x0F) << 0;
 2893              		.loc 1 521 4 view .LVU1070
 522:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 2894              		.loc 1 522 30 is_stmt 0 view .LVU1071
 2895 07d0 3368     		ldr	r3, [r6]
 521:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x0F) << 0;
 2896              		.loc 1 521 11 view .LVU1072
 2897 07d2 22F0FF02 		bic	r2, r2, #255
 2898              	.LVL425:
 522:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 2899              		.loc 1 522 4 is_stmt 1 view .LVU1073
 523:boards/TMC4330_eval.c **** 		}
 2900              		.loc 1 523 4 view .LVU1074
 2901              	.LBB286:
 2902              	.LBI286:
  46:boards/TMC4330_eval.c **** {
 2903              		.loc 1 46 31 view .LVU1075
  46:boards/TMC4330_eval.c **** {
 2904              		.loc 1 46 31 is_stmt 0 view .LVU1076
 2905              	.LBE286:
  48:boards/TMC4330_eval.c **** 
 2906              		.loc 1 48 2 is_stmt 1 view .LVU1077
  50:boards/TMC4330_eval.c **** }
 2907              		.loc 1 50 2 view .LVU1078
 522:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 2908              		.loc 1 522 30 is_stmt 0 view .LVU1079
 2909 07d6 03F00F03 		and	r3, r3, #15
 2910              	.LVL426:
 523:boards/TMC4330_eval.c **** 		}
 2911              		.loc 1 523 4 view .LVU1080
 2912 07da 1A43     		orrs	r2, r2, r3
 2913              	.LVL427:
 523:boards/TMC4330_eval.c **** 		}
 2914              		.loc 1 523 4 view .LVU1081
 2915 07dc 6321     		movs	r1, #99
 2916              	.LVL428:
 523:boards/TMC4330_eval.c **** 		}
 2917              		.loc 1 523 4 view .LVU1082
 2918 07de 2430     		adds	r0, r0, #36
 2919 07e0 FFF7FEFF 		bl	tmc4330_writeInt
 2920              	.LVL429:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2921              		.loc 1 116 11 view .LVU1083
 2922 07e4 0025     		movs	r5, #0
 2923 07e6 43E5     		b	.L45
 2924              	.LVL430:
 2925              	.L52:
 528:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 8) &  0xF;
 2926              		.loc 1 528 3 is_stmt 1 view .LVU1084
 2927 07e8 3848     		ldr	r0, .L171+4
 2928              	.LVL431:
 528:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 8) &  0xF;
 2929              		.loc 1 528 3 is_stmt 0 view .LVU1085
 2930 07ea 436A     		ldr	r3, [r0, #36]
 2931 07ec D3F89021 		ldr	r2, [r3, #400]
 528:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 8) &  0xF;
 2932              		.loc 1 528 5 view .LVU1086
 2933 07f0 1DB9     		cbnz	r5, .L138
 529:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2934              		.loc 1 529 4 is_stmt 1 view .LVU1087
 529:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2935              		.loc 1 529 78 is_stmt 0 view .LVU1088
 2936 07f2 C2F30322 		ubfx	r2, r2, #8, #4
 529:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2937              		.loc 1 529 11 view .LVU1089
 2938 07f6 3260     		str	r2, [r6]
 2939 07f8 3AE5     		b	.L45
 2940              	.L138:
 530:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR];
 2941              		.loc 1 530 10 is_stmt 1 view .LVU1090
 531:boards/TMC4330_eval.c **** 			uvalue &= ~(0xF << 8);
 2942              		.loc 1 531 4 view .LVU1091
 2943              	.LVL432:
 532:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x0F) << 8;
 2944              		.loc 1 532 4 view .LVU1092
 533:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 2945              		.loc 1 533 30 is_stmt 0 view .LVU1093
 2946 07fa 3368     		ldr	r3, [r6]
 2947 07fc 1B02     		lsls	r3, r3, #8
 2948 07fe 03F47063 		and	r3, r3, #3840
 532:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x0F) << 8;
 2949              		.loc 1 532 11 view .LVU1094
 2950 0802 22F47062 		bic	r2, r2, #3840
 2951              	.LVL433:
 533:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 2952              		.loc 1 533 4 is_stmt 1 view .LVU1095
 534:boards/TMC4330_eval.c **** 		}
 2953              		.loc 1 534 4 view .LVU1096
 2954              	.LBB287:
 2955              	.LBI287:
  46:boards/TMC4330_eval.c **** {
 2956              		.loc 1 46 31 view .LVU1097
  46:boards/TMC4330_eval.c **** {
 2957              		.loc 1 46 31 is_stmt 0 view .LVU1098
 2958              	.LBE287:
  48:boards/TMC4330_eval.c **** 
 2959              		.loc 1 48 2 is_stmt 1 view .LVU1099
  50:boards/TMC4330_eval.c **** }
 2960              		.loc 1 50 2 view .LVU1100
 534:boards/TMC4330_eval.c **** 		}
 2961              		.loc 1 534 4 is_stmt 0 view .LVU1101
 2962 0806 1A43     		orrs	r2, r2, r3
 2963              	.LVL434:
 534:boards/TMC4330_eval.c **** 		}
 2964              		.loc 1 534 4 view .LVU1102
 2965 0808 6321     		movs	r1, #99
 2966              	.LVL435:
 534:boards/TMC4330_eval.c **** 		}
 2967              		.loc 1 534 4 view .LVU1103
 2968 080a 2430     		adds	r0, r0, #36
 2969 080c FFF7FEFF 		bl	tmc4330_writeInt
 2970              	.LVL436:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 2971              		.loc 1 116 11 view .LVU1104
 2972 0810 0025     		movs	r5, #0
 2973 0812 2DE5     		b	.L45
 2974              	.LVL437:
 2975              	.L50:
 539:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 16) &  0xFF;
 2976              		.loc 1 539 3 is_stmt 1 view .LVU1105
 2977 0814 2D48     		ldr	r0, .L171+4
 2978              	.LVL438:
 539:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 16) &  0xFF;
 2979              		.loc 1 539 3 is_stmt 0 view .LVU1106
 2980 0816 436A     		ldr	r3, [r0, #36]
 2981 0818 D3F89021 		ldr	r2, [r3, #400]
 539:boards/TMC4330_eval.c **** 			*value = (TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR] >> 16) &  0xFF;
 2982              		.loc 1 539 5 view .LVU1107
 2983 081c 1DB9     		cbnz	r5, .L139
 540:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2984              		.loc 1 540 4 is_stmt 1 view .LVU1108
 540:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2985              		.loc 1 540 79 is_stmt 0 view .LVU1109
 2986 081e C2F30742 		ubfx	r2, r2, #16, #8
 540:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 2987              		.loc 1 540 11 view .LVU1110
 2988 0822 3260     		str	r2, [r6]
 2989 0824 24E5     		b	.L45
 2990              	.L139:
 541:boards/TMC4330_eval.c **** 			uvalue = TMC4330.config->shadowRegister[TMC4330_ENC_VMEAN_WAIT_WR];
 2991              		.loc 1 541 10 is_stmt 1 view .LVU1111
 542:boards/TMC4330_eval.c **** 			uvalue &= ~(0xFF << 16);
 2992              		.loc 1 542 4 view .LVU1112
 2993              	.LVL439:
 543:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x0FF) << 16;
 2994              		.loc 1 543 4 view .LVU1113
 544:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 2995              		.loc 1 544 31 is_stmt 0 view .LVU1114
 2996 0826 3368     		ldr	r3, [r6]
 2997 0828 1B04     		lsls	r3, r3, #16
 2998 082a 03F47F03 		and	r3, r3, #16711680
 543:boards/TMC4330_eval.c **** 			uvalue |= (*value & 0x0FF) << 16;
 2999              		.loc 1 543 11 view .LVU1115
 3000 082e 22F47F02 		bic	r2, r2, #16711680
 3001              	.LVL440:
 544:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_VMEAN_WAIT_WR, uvalue);
 3002              		.loc 1 544 4 is_stmt 1 view .LVU1116
 545:boards/TMC4330_eval.c **** 		}
 3003              		.loc 1 545 4 view .LVU1117
 3004              	.LBB288:
 3005              	.LBI288:
  46:boards/TMC4330_eval.c **** {
 3006              		.loc 1 46 31 view .LVU1118
  46:boards/TMC4330_eval.c **** {
 3007              		.loc 1 46 31 is_stmt 0 view .LVU1119
 3008              	.LBE288:
  48:boards/TMC4330_eval.c **** 
 3009              		.loc 1 48 2 is_stmt 1 view .LVU1120
  50:boards/TMC4330_eval.c **** }
 3010              		.loc 1 50 2 view .LVU1121
 545:boards/TMC4330_eval.c **** 		}
 3011              		.loc 1 545 4 is_stmt 0 view .LVU1122
 3012 0832 1A43     		orrs	r2, r2, r3
 3013              	.LVL441:
 545:boards/TMC4330_eval.c **** 		}
 3014              		.loc 1 545 4 view .LVU1123
 3015 0834 6321     		movs	r1, #99
 3016              	.LVL442:
 545:boards/TMC4330_eval.c **** 		}
 3017              		.loc 1 545 4 view .LVU1124
 3018 0836 2430     		adds	r0, r0, #36
 3019 0838 FFF7FEFF 		bl	tmc4330_writeInt
 3020              	.LVL443:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 3021              		.loc 1 116 11 view .LVU1125
 3022 083c 0025     		movs	r5, #0
 3023 083e 17E5     		b	.L45
 3024              	.LVL444:
 3025              	.L97:
 560:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_ENC_POS);
 3026              		.loc 1 560 3 is_stmt 1 view .LVU1126
 560:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_ENC_POS);
 3027              		.loc 1 560 5 is_stmt 0 view .LVU1127
 3028 0840 28B9     		cbnz	r0, .L140
 561:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3029              		.loc 1 561 4 is_stmt 1 view .LVU1128
 3030              	.LBB289:
 3031              	.LBI289:
  46:boards/TMC4330_eval.c **** {
 3032              		.loc 1 46 31 view .LVU1129
 3033              	.LVL445:
  46:boards/TMC4330_eval.c **** {
 3034              		.loc 1 46 31 is_stmt 0 view .LVU1130
 3035              	.LBE289:
  48:boards/TMC4330_eval.c **** 
 3036              		.loc 1 48 2 is_stmt 1 view .LVU1131
  50:boards/TMC4330_eval.c **** }
 3037              		.loc 1 50 2 view .LVU1132
 561:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3038              		.loc 1 561 13 is_stmt 0 view .LVU1133
 3039 0842 2148     		ldr	r0, .L171
 3040              	.LVL446:
 561:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3041              		.loc 1 561 13 view .LVU1134
 3042 0844 5021     		movs	r1, #80
 3043              	.LVL447:
 561:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3044              		.loc 1 561 13 view .LVU1135
 3045 0846 FFF7FEFF 		bl	tmc4330_readInt
 3046              	.LVL448:
 561:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3047              		.loc 1 561 11 view .LVU1136
 3048 084a 3060     		str	r0, [r6]
 3049 084c 10E5     		b	.L45
 3050              	.LVL449:
 3051              	.L140:
 562:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_POS, *value);
 3052              		.loc 1 562 10 is_stmt 1 view .LVU1137
 563:boards/TMC4330_eval.c **** 		}
 3053              		.loc 1 563 4 view .LVU1138
 3054              	.LBB290:
 3055              	.LBI290:
  46:boards/TMC4330_eval.c **** {
 3056              		.loc 1 46 31 view .LVU1139
  46:boards/TMC4330_eval.c **** {
 3057              		.loc 1 46 31 is_stmt 0 view .LVU1140
 3058              	.LBE290:
  48:boards/TMC4330_eval.c **** 
 3059              		.loc 1 48 2 is_stmt 1 view .LVU1141
  50:boards/TMC4330_eval.c **** }
 3060              		.loc 1 50 2 view .LVU1142
 563:boards/TMC4330_eval.c **** 		}
 3061              		.loc 1 563 4 is_stmt 0 view .LVU1143
 3062 084e 1A68     		ldr	r2, [r3]
 3063              	.LVL450:
 563:boards/TMC4330_eval.c **** 		}
 3064              		.loc 1 563 4 view .LVU1144
 3065 0850 1D48     		ldr	r0, .L171
 3066              	.LVL451:
 563:boards/TMC4330_eval.c **** 		}
 3067              		.loc 1 563 4 view .LVU1145
 3068 0852 5021     		movs	r1, #80
 3069              	.LVL452:
 563:boards/TMC4330_eval.c **** 		}
 3070              		.loc 1 563 4 view .LVU1146
 3071 0854 FFF7FEFF 		bl	tmc4330_writeInt
 3072              	.LVL453:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 3073              		.loc 1 116 11 view .LVU1147
 3074 0858 2546     		mov	r5, r4
 3075 085a 09E5     		b	.L45
 3076              	.LVL454:
 3077              	.L95:
 568:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_SCALE_VALUES]; // todo CHECK 3: shouldn't this r
 3078              		.loc 1 568 3 is_stmt 1 view .LVU1148
 568:boards/TMC4330_eval.c **** 			*value = TMC4330.config->shadowRegister[TMC4330_SCALE_VALUES]; // todo CHECK 3: shouldn't this r
 3079              		.loc 1 568 5 is_stmt 0 view .LVU1149
 3080 085c 20B9     		cbnz	r0, .L141
 569:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3081              		.loc 1 569 4 is_stmt 1 view .LVU1150
 569:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3082              		.loc 1 569 20 is_stmt 0 view .LVU1151
 3083 085e 1B4B     		ldr	r3, .L171+4
 3084              	.LVL455:
 569:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3085              		.loc 1 569 43 view .LVU1152
 3086 0860 5B6A     		ldr	r3, [r3, #36]
 3087 0862 9B69     		ldr	r3, [r3, #24]
 569:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3088              		.loc 1 569 11 view .LVU1153
 3089 0864 3360     		str	r3, [r6]
 3090 0866 03E5     		b	.L45
 3091              	.LVL456:
 3092              	.L141:
 570:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_ENC_POS_DEV_TOL_WR, *value);
 3093              		.loc 1 570 10 is_stmt 1 view .LVU1154
 571:boards/TMC4330_eval.c **** 		}
 3094              		.loc 1 571 4 view .LVU1155
 3095              	.LBB291:
 3096              	.LBI291:
  46:boards/TMC4330_eval.c **** {
 3097              		.loc 1 46 31 view .LVU1156
  46:boards/TMC4330_eval.c **** {
 3098              		.loc 1 46 31 is_stmt 0 view .LVU1157
 3099              	.LBE291:
  48:boards/TMC4330_eval.c **** 
 3100              		.loc 1 48 2 is_stmt 1 view .LVU1158
  50:boards/TMC4330_eval.c **** }
 3101              		.loc 1 50 2 view .LVU1159
 571:boards/TMC4330_eval.c **** 		}
 3102              		.loc 1 571 4 is_stmt 0 view .LVU1160
 3103 0868 1A68     		ldr	r2, [r3]
 3104              	.LVL457:
 571:boards/TMC4330_eval.c **** 		}
 3105              		.loc 1 571 4 view .LVU1161
 3106 086a 1748     		ldr	r0, .L171
 3107              	.LVL458:
 571:boards/TMC4330_eval.c **** 		}
 3108              		.loc 1 571 4 view .LVU1162
 3109 086c 5321     		movs	r1, #83
 3110              	.LVL459:
 571:boards/TMC4330_eval.c **** 		}
 3111              		.loc 1 571 4 view .LVU1163
 3112 086e FFF7FEFF 		bl	tmc4330_writeInt
 3113              	.LVL460:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 3114              		.loc 1 116 11 view .LVU1164
 3115 0872 2546     		mov	r5, r4
 3116 0874 FCE4     		b	.L45
 3117              	.LVL461:
 3118              	.L98:
 576:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_STDBY_DELAY);
 3119              		.loc 1 576 3 is_stmt 1 view .LVU1165
 576:boards/TMC4330_eval.c **** 			*value = tmc4330_readInt(motorToIC(motor), TMC4330_STDBY_DELAY);
 3120              		.loc 1 576 5 is_stmt 0 view .LVU1166
 3121 0876 28B9     		cbnz	r0, .L142
 577:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3122              		.loc 1 577 4 is_stmt 1 view .LVU1167
 3123              	.LBB292:
 3124              	.LBI292:
  46:boards/TMC4330_eval.c **** {
 3125              		.loc 1 46 31 view .LVU1168
 3126              	.LVL462:
  46:boards/TMC4330_eval.c **** {
 3127              		.loc 1 46 31 is_stmt 0 view .LVU1169
 3128              	.LBE292:
  48:boards/TMC4330_eval.c **** 
 3129              		.loc 1 48 2 is_stmt 1 view .LVU1170
  50:boards/TMC4330_eval.c **** }
 3130              		.loc 1 50 2 view .LVU1171
 577:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3131              		.loc 1 577 13 is_stmt 0 view .LVU1172
 3132 0878 1348     		ldr	r0, .L171
 3133              	.LVL463:
 577:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3134              		.loc 1 577 13 view .LVU1173
 3135 087a 1521     		movs	r1, #21
 3136              	.LVL464:
 577:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3137              		.loc 1 577 13 view .LVU1174
 3138 087c FFF7FEFF 		bl	tmc4330_readInt
 3139              	.LVL465:
 577:boards/TMC4330_eval.c **** 		} else if(readWrite == WRITE) {
 3140              		.loc 1 577 11 view .LVU1175
 3141 0880 3060     		str	r0, [r6]
 3142 0882 F5E4     		b	.L45
 3143              	.LVL466:
 3144              	.L142:
 578:boards/TMC4330_eval.c **** 			tmc4330_writeInt(motorToIC(motor), TMC4330_STDBY_DELAY, *value*160000);
 3145              		.loc 1 578 10 is_stmt 1 view .LVU1176
 579:boards/TMC4330_eval.c **** 		}
 3146              		.loc 1 579 4 view .LVU1177
 3147              	.LBB293:
 3148              	.LBI293:
  46:boards/TMC4330_eval.c **** {
 3149              		.loc 1 46 31 view .LVU1178
  46:boards/TMC4330_eval.c **** {
 3150              		.loc 1 46 31 is_stmt 0 view .LVU1179
 3151              	.LBE293:
  48:boards/TMC4330_eval.c **** 
 3152              		.loc 1 48 2 is_stmt 1 view .LVU1180
  50:boards/TMC4330_eval.c **** }
 3153              		.loc 1 50 2 view .LVU1181
 579:boards/TMC4330_eval.c **** 		}
 3154              		.loc 1 579 4 is_stmt 0 view .LVU1182
 3155 0884 1B68     		ldr	r3, [r3]
 3156              	.LVL467:
 579:boards/TMC4330_eval.c **** 		}
 3157              		.loc 1 579 4 view .LVU1183
 3158 0886 124A     		ldr	r2, .L171+8
 3159              	.LVL468:
 579:boards/TMC4330_eval.c **** 		}
 3160              		.loc 1 579 4 view .LVU1184
 3161 0888 0F48     		ldr	r0, .L171
 3162              	.LVL469:
 579:boards/TMC4330_eval.c **** 		}
 3163              		.loc 1 579 4 view .LVU1185
 3164 088a 5A43     		muls	r2, r3, r2
 3165 088c 1521     		movs	r1, #21
 3166              	.LVL470:
 579:boards/TMC4330_eval.c **** 		}
 3167              		.loc 1 579 4 view .LVU1186
 3168 088e FFF7FEFF 		bl	tmc4330_writeInt
 3169              	.LVL471:
 116:boards/TMC4330_eval.c **** 	uint32_t uvalue;
 3170              		.loc 1 116 11 view .LVU1187
 3171 0892 2546     		mov	r5, r4
 3172 0894 ECE4     		b	.L45
 3173              	.LVL472:
 3174              	.L143:
 120:boards/TMC4330_eval.c **** 
 3175              		.loc 1 120 10 view .LVU1188
 3176 0896 0825     		movs	r5, #8
 3177 0898 EAE4     		b	.L45
 3178              	.LVL473:
 3179              	.L145:
 122:boards/TMC4330_eval.c **** 	{
 3180              		.loc 1 122 2 view .LVU1189
 3181 089a 0425     		movs	r5, #4
 3182 089c E8E4     		b	.L45
 3183              	.LVL474:
 3184              	.L146:
 122:boards/TMC4330_eval.c **** 	{
 3185              		.loc 1 122 2 view .LVU1190
 3186 089e 0425     		movs	r5, #4
 3187 08a0 E6E4     		b	.L45
 3188              	.L147:
 153:boards/TMC4330_eval.c **** 		}
 3189              		.loc 1 153 11 view .LVU1191
 3190 08a2 0425     		movs	r5, #4
 3191 08a4 E4E4     		b	.L45
 3192              	.LVL475:
 3193              	.L148:
 175:boards/TMC4330_eval.c **** 			}
 3194              		.loc 1 175 12 view .LVU1192
 3195 08a6 1025     		movs	r5, #16
 3196 08a8 E2E4     		b	.L45
 3197              	.LVL476:
 3198              	.L149:
 153:boards/TMC4330_eval.c **** 		}
 3199              		.loc 1 153 11 view .LVU1193
 3200 08aa 0425     		movs	r5, #4
 3201 08ac E0E4     		b	.L45
 3202              	.LVL477:
 3203              	.L151:
 175:boards/TMC4330_eval.c **** 			}
 3204              		.loc 1 175 12 view .LVU1194
 3205 08ae 1025     		movs	r5, #16
 3206 08b0 DEE4     		b	.L45
 3207              	.L152:
 175:boards/TMC4330_eval.c **** 			}
 3208              		.loc 1 175 12 view .LVU1195
 3209 08b2 1025     		movs	r5, #16
 3210 08b4 DCE4     		b	.L45
 3211              	.L153:
 175:boards/TMC4330_eval.c **** 			}
 3212              		.loc 1 175 12 view .LVU1196
 3213 08b6 1025     		movs	r5, #16
 3214 08b8 DAE4     		b	.L45
 3215              	.L154:
 175:boards/TMC4330_eval.c **** 			}
 3216              		.loc 1 175 12 view .LVU1197
 3217 08ba 1025     		movs	r5, #16
 3218 08bc D8E4     		b	.L45
 3219              	.LVL478:
 3220              	.L155:
 480:boards/TMC4330_eval.c **** 			}
 3221              		.loc 1 480 13 view .LVU1198
 3222 08be 2025     		movs	r5, #32
 3223 08c0 D6E4     		b	.L45
 3224              	.LVL479:
 3225              	.L156:
 153:boards/TMC4330_eval.c **** 		}
 3226              		.loc 1 153 11 view .LVU1199
 3227 08c2 0425     		movs	r5, #4
 3228              	.LVL480:
 153:boards/TMC4330_eval.c **** 		}
 3229              		.loc 1 153 11 view .LVU1200
 3230 08c4 D4E4     		b	.L45
 3231              	.L172:
 3232 08c6 00BF     		.align	2
 3233              	.L171:
 3234 08c8 24000000 		.word	.LANCHOR0+36
 3235 08cc 00000000 		.word	.LANCHOR0
 3236 08d0 00710200 		.word	160000
 3237              		.cfi_endproc
 3238              	.LFE10:
 3240              		.align	1
 3241              		.syntax unified
 3242              		.thumb
 3243              		.thumb_func
 3244              		.fpu softvfp
 3246              	SAP:
 3247              	.LVL481:
 3248              	.LFB11:
 590:boards/TMC4330_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3249              		.loc 1 590 1 is_stmt 1 view -0
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 8
 3252              		@ frame_needed = 0, uses_anonymous_args = 0
 591:boards/TMC4330_eval.c **** }
 3253              		.loc 1 591 2 view .LVU1202
 590:boards/TMC4330_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3254              		.loc 1 590 1 is_stmt 0 view .LVU1203
 3255 08d4 07B5     		push	{r0, r1, r2, lr}
 3256              	.LCFI7:
 3257              		.cfi_def_cfa_offset 16
 3258              		.cfi_offset 14, -4
 590:boards/TMC4330_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3259              		.loc 1 590 1 view .LVU1204
 3260 08d6 0192     		str	r2, [sp, #4]
 591:boards/TMC4330_eval.c **** }
 3261              		.loc 1 591 9 view .LVU1205
 3262 08d8 01AB     		add	r3, sp, #4
 3263 08da 0246     		mov	r2, r0
 3264              	.LVL482:
 591:boards/TMC4330_eval.c **** }
 3265              		.loc 1 591 9 view .LVU1206
 3266 08dc 0120     		movs	r0, #1
 3267              	.LVL483:
 591:boards/TMC4330_eval.c **** }
 3268              		.loc 1 591 9 view .LVU1207
 3269 08de FFF767FC 		bl	handleParameter
 3270              	.LVL484:
 592:boards/TMC4330_eval.c **** 
 3271              		.loc 1 592 1 view .LVU1208
 3272 08e2 03B0     		add	sp, sp, #12
 3273              	.LCFI8:
 3274              		.cfi_def_cfa_offset 4
 3275              		@ sp needed
 3276 08e4 5DF804FB 		ldr	pc, [sp], #4
 3277              		.cfi_endproc
 3278              	.LFE11:
 3280              		.align	1
 3281              		.syntax unified
 3282              		.thumb
 3283              		.thumb_func
 3284              		.fpu softvfp
 3286              	GAP:
 3287              	.LVL485:
 3288              	.LFB12:
 595:boards/TMC4330_eval.c **** 	return handleParameter(READ, motor, type, value);
 3289              		.loc 1 595 1 is_stmt 1 view -0
 3290              		.cfi_startproc
 3291              		@ args = 0, pretend = 0, frame = 0
 3292              		@ frame_needed = 0, uses_anonymous_args = 0
 3293              		@ link register save eliminated.
 596:boards/TMC4330_eval.c **** }
 3294              		.loc 1 596 2 view .LVU1210
 595:boards/TMC4330_eval.c **** 	return handleParameter(READ, motor, type, value);
 3295              		.loc 1 595 1 is_stmt 0 view .LVU1211
 3296 08e8 1346     		mov	r3, r2
 596:boards/TMC4330_eval.c **** }
 3297              		.loc 1 596 9 view .LVU1212
 3298 08ea 0246     		mov	r2, r0
 3299              	.LVL486:
 596:boards/TMC4330_eval.c **** }
 3300              		.loc 1 596 9 view .LVU1213
 3301 08ec 0020     		movs	r0, #0
 3302              	.LVL487:
 596:boards/TMC4330_eval.c **** }
 3303              		.loc 1 596 9 view .LVU1214
 3304 08ee 5FE4     		b	handleParameter
 3305              	.LVL488:
 596:boards/TMC4330_eval.c **** }
 3306              		.loc 1 596 9 view .LVU1215
 3307              		.cfi_endproc
 3308              	.LFE12:
 3310              		.align	1
 3311              		.syntax unified
 3312              		.thumb
 3313              		.thumb_func
 3314              		.fpu softvfp
 3316              	stop:
 3317              	.LVL489:
 3318              	.LFB7:
  93:boards/TMC4330_eval.c **** 	rotate(motor, 0);
 3319              		.loc 1 93 1 is_stmt 1 view -0
 3320              		.cfi_startproc
 3321              		@ args = 0, pretend = 0, frame = 0
 3322              		@ frame_needed = 0, uses_anonymous_args = 0
  94:boards/TMC4330_eval.c **** 
 3323              		.loc 1 94 2 view .LVU1217
 3324              	.LBB294:
 3325              	.LBI294:
  70:boards/TMC4330_eval.c **** {
 3326              		.loc 1 70 17 view .LVU1218
 3327              	.LBB295:
  72:boards/TMC4330_eval.c **** 	tmc4330_rotate(motorToIC(motor), velocity);
 3328              		.loc 1 72 2 view .LVU1219
  73:boards/TMC4330_eval.c **** 
 3329              		.loc 1 73 2 view .LVU1220
 3330              	.LBB296:
 3331              	.LBI296:
  46:boards/TMC4330_eval.c **** {
 3332              		.loc 1 46 31 view .LVU1221
  46:boards/TMC4330_eval.c **** {
 3333              		.loc 1 46 31 is_stmt 0 view .LVU1222
 3334              	.LBE296:
 3335              	.LBE295:
 3336              	.LBE294:
  48:boards/TMC4330_eval.c **** 
 3337              		.loc 1 48 2 is_stmt 1 view .LVU1223
  50:boards/TMC4330_eval.c **** }
 3338              		.loc 1 50 2 view .LVU1224
  93:boards/TMC4330_eval.c **** 	rotate(motor, 0);
 3339              		.loc 1 93 1 is_stmt 0 view .LVU1225
 3340 08f0 08B5     		push	{r3, lr}
 3341              	.LCFI9:
 3342              		.cfi_def_cfa_offset 8
 3343              		.cfi_offset 3, -8
 3344              		.cfi_offset 14, -4
 3345              	.LBB298:
 3346              	.LBB297:
  73:boards/TMC4330_eval.c **** 
 3347              		.loc 1 73 2 view .LVU1226
 3348 08f2 0348     		ldr	r0, .L176
 3349              	.LVL490:
  73:boards/TMC4330_eval.c **** 
 3350              		.loc 1 73 2 view .LVU1227
 3351 08f4 0021     		movs	r1, #0
 3352 08f6 FFF7FEFF 		bl	tmc4330_rotate
 3353              	.LVL491:
  75:boards/TMC4330_eval.c **** }
 3354              		.loc 1 75 2 is_stmt 1 view .LVU1228
  75:boards/TMC4330_eval.c **** }
 3355              		.loc 1 75 2 is_stmt 0 view .LVU1229
 3356              	.LBE297:
 3357              	.LBE298:
  96:boards/TMC4330_eval.c **** }
 3358              		.loc 1 96 2 is_stmt 1 view .LVU1230
  97:boards/TMC4330_eval.c **** 
 3359              		.loc 1 97 1 is_stmt 0 view .LVU1231
 3360 08fa 0020     		movs	r0, #0
 3361 08fc 08BD     		pop	{r3, pc}
 3362              	.L177:
 3363 08fe 00BF     		.align	2
 3364              	.L176:
 3365 0900 24000000 		.word	.LANCHOR0+36
 3366              		.cfi_endproc
 3367              	.LFE7:
 3369              		.align	1
 3370              		.syntax unified
 3371              		.thumb
 3372              		.thumb_func
 3373              		.fpu softvfp
 3375              	left:
 3376              	.LVL492:
 3377              	.LFB6:
  86:boards/TMC4330_eval.c **** 	rotate(motor, -velocity);
 3378              		.loc 1 86 1 is_stmt 1 view -0
 3379              		.cfi_startproc
 3380              		@ args = 0, pretend = 0, frame = 0
 3381              		@ frame_needed = 0, uses_anonymous_args = 0
  87:boards/TMC4330_eval.c **** 
 3382              		.loc 1 87 2 view .LVU1233
 3383              	.LBB299:
 3384              	.LBI299:
  70:boards/TMC4330_eval.c **** {
 3385              		.loc 1 70 17 view .LVU1234
 3386              	.LBB300:
  72:boards/TMC4330_eval.c **** 	tmc4330_rotate(motorToIC(motor), velocity);
 3387              		.loc 1 72 2 view .LVU1235
  73:boards/TMC4330_eval.c **** 
 3388              		.loc 1 73 2 view .LVU1236
 3389              	.LBB301:
 3390              	.LBI301:
  46:boards/TMC4330_eval.c **** {
 3391              		.loc 1 46 31 view .LVU1237
  46:boards/TMC4330_eval.c **** {
 3392              		.loc 1 46 31 is_stmt 0 view .LVU1238
 3393              	.LBE301:
 3394              	.LBE300:
 3395              	.LBE299:
  48:boards/TMC4330_eval.c **** 
 3396              		.loc 1 48 2 is_stmt 1 view .LVU1239
  50:boards/TMC4330_eval.c **** }
 3397              		.loc 1 50 2 view .LVU1240
  86:boards/TMC4330_eval.c **** 	rotate(motor, -velocity);
 3398              		.loc 1 86 1 is_stmt 0 view .LVU1241
 3399 0904 08B5     		push	{r3, lr}
 3400              	.LCFI10:
 3401              		.cfi_def_cfa_offset 8
 3402              		.cfi_offset 3, -8
 3403              		.cfi_offset 14, -4
 3404              	.LBB303:
 3405              	.LBB302:
  73:boards/TMC4330_eval.c **** 
 3406              		.loc 1 73 2 view .LVU1242
 3407 0906 0348     		ldr	r0, .L179
 3408              	.LVL493:
  73:boards/TMC4330_eval.c **** 
 3409              		.loc 1 73 2 view .LVU1243
 3410 0908 4942     		rsbs	r1, r1, #0
 3411              	.LVL494:
  73:boards/TMC4330_eval.c **** 
 3412              		.loc 1 73 2 view .LVU1244
 3413 090a FFF7FEFF 		bl	tmc4330_rotate
 3414              	.LVL495:
  75:boards/TMC4330_eval.c **** }
 3415              		.loc 1 75 2 is_stmt 1 view .LVU1245
  75:boards/TMC4330_eval.c **** }
 3416              		.loc 1 75 2 is_stmt 0 view .LVU1246
 3417              	.LBE302:
 3418              	.LBE303:
  89:boards/TMC4330_eval.c **** }
 3419              		.loc 1 89 2 is_stmt 1 view .LVU1247
  90:boards/TMC4330_eval.c **** 
 3420              		.loc 1 90 1 is_stmt 0 view .LVU1248
 3421 090e 0020     		movs	r0, #0
 3422 0910 08BD     		pop	{r3, pc}
 3423              	.L180:
 3424 0912 00BF     		.align	2
 3425              	.L179:
 3426 0914 24000000 		.word	.LANCHOR0+36
 3427              		.cfi_endproc
 3428              	.LFE6:
 3430              		.align	1
 3431              		.syntax unified
 3432              		.thumb
 3433              		.thumb_func
 3434              		.fpu softvfp
 3436              	right:
 3437              	.LVL496:
 3438              	.LFB5:
  79:boards/TMC4330_eval.c **** 	rotate(motor, velocity);
 3439              		.loc 1 79 1 is_stmt 1 view -0
 3440              		.cfi_startproc
 3441              		@ args = 0, pretend = 0, frame = 0
 3442              		@ frame_needed = 0, uses_anonymous_args = 0
  80:boards/TMC4330_eval.c **** 
 3443              		.loc 1 80 2 view .LVU1250
 3444              	.LBB307:
 3445              	.LBI307:
  70:boards/TMC4330_eval.c **** {
 3446              		.loc 1 70 17 view .LVU1251
 3447              	.LBB308:
  72:boards/TMC4330_eval.c **** 	tmc4330_rotate(motorToIC(motor), velocity);
 3448              		.loc 1 72 2 view .LVU1252
  73:boards/TMC4330_eval.c **** 
 3449              		.loc 1 73 2 view .LVU1253
 3450              	.LBB309:
 3451              	.LBI309:
  46:boards/TMC4330_eval.c **** {
 3452              		.loc 1 46 31 view .LVU1254
  46:boards/TMC4330_eval.c **** {
 3453              		.loc 1 46 31 is_stmt 0 view .LVU1255
 3454              	.LBE309:
 3455              	.LBE308:
 3456              	.LBE307:
  48:boards/TMC4330_eval.c **** 
 3457              		.loc 1 48 2 is_stmt 1 view .LVU1256
  50:boards/TMC4330_eval.c **** }
 3458              		.loc 1 50 2 view .LVU1257
  79:boards/TMC4330_eval.c **** 	rotate(motor, velocity);
 3459              		.loc 1 79 1 is_stmt 0 view .LVU1258
 3460 0918 08B5     		push	{r3, lr}
 3461              	.LCFI11:
 3462              		.cfi_def_cfa_offset 8
 3463              		.cfi_offset 3, -8
 3464              		.cfi_offset 14, -4
 3465              	.LBB311:
 3466              	.LBB310:
  73:boards/TMC4330_eval.c **** 
 3467              		.loc 1 73 2 view .LVU1259
 3468 091a 0248     		ldr	r0, .L182
 3469              	.LVL497:
  73:boards/TMC4330_eval.c **** 
 3470              		.loc 1 73 2 view .LVU1260
 3471 091c FFF7FEFF 		bl	tmc4330_rotate
 3472              	.LVL498:
  75:boards/TMC4330_eval.c **** }
 3473              		.loc 1 75 2 is_stmt 1 view .LVU1261
  75:boards/TMC4330_eval.c **** }
 3474              		.loc 1 75 2 is_stmt 0 view .LVU1262
 3475              	.LBE310:
 3476              	.LBE311:
  82:boards/TMC4330_eval.c **** }
 3477              		.loc 1 82 2 is_stmt 1 view .LVU1263
  83:boards/TMC4330_eval.c **** 
 3478              		.loc 1 83 1 is_stmt 0 view .LVU1264
 3479 0920 0020     		movs	r0, #0
 3480 0922 08BD     		pop	{r3, pc}
 3481              	.L183:
 3482              		.align	2
 3483              	.L182:
 3484 0924 24000000 		.word	.LANCHOR0+36
 3485              		.cfi_endproc
 3486              	.LFE5:
 3488              		.align	1
 3489              		.syntax unified
 3490              		.thumb
 3491              		.thumb_func
 3492              		.fpu softvfp
 3494              	restore:
 3495              	.LFB20:
 718:boards/TMC4330_eval.c **** 
 719:boards/TMC4330_eval.c **** static uint8_t reset()
 720:boards/TMC4330_eval.c **** {
 721:boards/TMC4330_eval.c **** 	// Pulse the low-active hardware reset pin
 722:boards/TMC4330_eval.c **** 	HAL.IOs->config->setLow(Pins.NRST);
 723:boards/TMC4330_eval.c **** 	wait(1);
 724:boards/TMC4330_eval.c **** 	HAL.IOs->config->setHigh(Pins.NRST);
 725:boards/TMC4330_eval.c **** 
 726:boards/TMC4330_eval.c **** 	tmc4330_reset(&TMC4330);
 727:boards/TMC4330_eval.c **** 
 728:boards/TMC4330_eval.c **** 	return 1;
 729:boards/TMC4330_eval.c **** }
 730:boards/TMC4330_eval.c **** 
 731:boards/TMC4330_eval.c **** static uint8_t restore()
 732:boards/TMC4330_eval.c **** {
 3496              		.loc 1 732 1 is_stmt 1 view -0
 3497              		.cfi_startproc
 3498              		@ args = 0, pretend = 0, frame = 0
 3499              		@ frame_needed = 0, uses_anonymous_args = 0
 733:boards/TMC4330_eval.c **** 	// Pulse the low-active hardware reset pin
 734:boards/TMC4330_eval.c **** 	HAL.IOs->config->setLow(Pins.NRST);
 3500              		.loc 1 734 2 view .LVU1266
 732:boards/TMC4330_eval.c **** 	// Pulse the low-active hardware reset pin
 3501              		.loc 1 732 1 is_stmt 0 view .LVU1267
 3502 0928 38B5     		push	{r3, r4, r5, lr}
 3503              	.LCFI12:
 3504              		.cfi_def_cfa_offset 16
 3505              		.cfi_offset 3, -16
 3506              		.cfi_offset 4, -12
 3507              		.cfi_offset 5, -8
 3508              		.cfi_offset 14, -4
 3509              		.loc 1 734 5 view .LVU1268
 3510 092a 0A4B     		ldr	r3, .L185
 3511              		.loc 1 734 2 view .LVU1269
 3512 092c 0A4C     		ldr	r4, .L185+4
 3513              		.loc 1 734 5 view .LVU1270
 3514 092e DD68     		ldr	r5, [r3, #12]
 3515              		.loc 1 734 2 view .LVU1271
 3516 0930 6068     		ldr	r0, [r4, #4]
 3517              		.loc 1 734 17 view .LVU1272
 3518 0932 2B68     		ldr	r3, [r5]
 3519              		.loc 1 734 2 view .LVU1273
 3520 0934 9B69     		ldr	r3, [r3, #24]
 3521 0936 9847     		blx	r3
 3522              	.LVL499:
 735:boards/TMC4330_eval.c **** 	wait(1);
 3523              		.loc 1 735 2 is_stmt 1 view .LVU1274
 3524 0938 0120     		movs	r0, #1
 3525 093a FFF7FEFF 		bl	wait
 3526              	.LVL500:
 736:boards/TMC4330_eval.c **** 	HAL.IOs->config->setHigh(Pins.NRST);
 3527              		.loc 1 736 2 view .LVU1275
 3528              		.loc 1 736 17 is_stmt 0 view .LVU1276
 3529 093e 2B68     		ldr	r3, [r5]
 3530              		.loc 1 736 2 view .LVU1277
 3531 0940 6068     		ldr	r0, [r4, #4]
 3532 0942 5B69     		ldr	r3, [r3, #20]
 3533 0944 9847     		blx	r3
 3534              	.LVL501:
 737:boards/TMC4330_eval.c **** 
 738:boards/TMC4330_eval.c **** 	tmc4330_restore(&TMC4330);
 3535              		.loc 1 738 2 is_stmt 1 view .LVU1278
 3536 0946 04F12400 		add	r0, r4, #36
 3537 094a FFF7FEFF 		bl	tmc4330_restore
 3538              	.LVL502:
 739:boards/TMC4330_eval.c **** 
 740:boards/TMC4330_eval.c **** 	return 1;
 3539              		.loc 1 740 2 view .LVU1279
 741:boards/TMC4330_eval.c **** }
 3540              		.loc 1 741 1 is_stmt 0 view .LVU1280
 3541 094e 0120     		movs	r0, #1
 3542 0950 38BD     		pop	{r3, r4, r5, pc}
 3543              	.L186:
 3544 0952 00BF     		.align	2
 3545              	.L185:
 3546 0954 00000000 		.word	HAL
 3547 0958 00000000 		.word	.LANCHOR0
 3548              		.cfi_endproc
 3549              	.LFE20:
 3551              		.align	1
 3552              		.syntax unified
 3553              		.thumb
 3554              		.thumb_func
 3555              		.fpu softvfp
 3557              	reset:
 3558              	.LFB19:
 720:boards/TMC4330_eval.c **** 	// Pulse the low-active hardware reset pin
 3559              		.loc 1 720 1 is_stmt 1 view -0
 3560              		.cfi_startproc
 3561              		@ args = 0, pretend = 0, frame = 0
 3562              		@ frame_needed = 0, uses_anonymous_args = 0
 722:boards/TMC4330_eval.c **** 	wait(1);
 3563              		.loc 1 722 2 view .LVU1282
 720:boards/TMC4330_eval.c **** 	// Pulse the low-active hardware reset pin
 3564              		.loc 1 720 1 is_stmt 0 view .LVU1283
 3565 095c 38B5     		push	{r3, r4, r5, lr}
 3566              	.LCFI13:
 3567              		.cfi_def_cfa_offset 16
 3568              		.cfi_offset 3, -16
 3569              		.cfi_offset 4, -12
 3570              		.cfi_offset 5, -8
 3571              		.cfi_offset 14, -4
 722:boards/TMC4330_eval.c **** 	wait(1);
 3572              		.loc 1 722 5 view .LVU1284
 3573 095e 0A4B     		ldr	r3, .L188
 722:boards/TMC4330_eval.c **** 	wait(1);
 3574              		.loc 1 722 2 view .LVU1285
 3575 0960 0A4C     		ldr	r4, .L188+4
 722:boards/TMC4330_eval.c **** 	wait(1);
 3576              		.loc 1 722 5 view .LVU1286
 3577 0962 DD68     		ldr	r5, [r3, #12]
 722:boards/TMC4330_eval.c **** 	wait(1);
 3578              		.loc 1 722 2 view .LVU1287
 3579 0964 6068     		ldr	r0, [r4, #4]
 722:boards/TMC4330_eval.c **** 	wait(1);
 3580              		.loc 1 722 17 view .LVU1288
 3581 0966 2B68     		ldr	r3, [r5]
 722:boards/TMC4330_eval.c **** 	wait(1);
 3582              		.loc 1 722 2 view .LVU1289
 3583 0968 9B69     		ldr	r3, [r3, #24]
 3584 096a 9847     		blx	r3
 3585              	.LVL503:
 723:boards/TMC4330_eval.c **** 	HAL.IOs->config->setHigh(Pins.NRST);
 3586              		.loc 1 723 2 is_stmt 1 view .LVU1290
 3587 096c 0120     		movs	r0, #1
 3588 096e FFF7FEFF 		bl	wait
 3589              	.LVL504:
 724:boards/TMC4330_eval.c **** 
 3590              		.loc 1 724 2 view .LVU1291
 724:boards/TMC4330_eval.c **** 
 3591              		.loc 1 724 17 is_stmt 0 view .LVU1292
 3592 0972 2B68     		ldr	r3, [r5]
 724:boards/TMC4330_eval.c **** 
 3593              		.loc 1 724 2 view .LVU1293
 3594 0974 6068     		ldr	r0, [r4, #4]
 3595 0976 5B69     		ldr	r3, [r3, #20]
 3596 0978 9847     		blx	r3
 3597              	.LVL505:
 726:boards/TMC4330_eval.c **** 
 3598              		.loc 1 726 2 is_stmt 1 view .LVU1294
 3599 097a 04F12400 		add	r0, r4, #36
 3600 097e FFF7FEFF 		bl	tmc4330_reset
 3601              	.LVL506:
 728:boards/TMC4330_eval.c **** }
 3602              		.loc 1 728 2 view .LVU1295
 729:boards/TMC4330_eval.c **** 
 3603              		.loc 1 729 1 is_stmt 0 view .LVU1296
 3604 0982 0120     		movs	r0, #1
 3605 0984 38BD     		pop	{r3, r4, r5, pc}
 3606              	.L189:
 3607 0986 00BF     		.align	2
 3608              	.L188:
 3609 0988 00000000 		.word	HAL
 3610 098c 00000000 		.word	.LANCHOR0
 3611              		.cfi_endproc
 3612              	.LFE19:
 3614              		.align	1
 3615              		.syntax unified
 3616              		.thumb
 3617              		.thumb_func
 3618              		.fpu softvfp
 3620              	rotate:
 3621              	.LFB25:
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 0
 3624              		@ frame_needed = 0, uses_anonymous_args = 0
 3625 0990 08B5     		push	{r3, lr}
 3626              	.LCFI14:
 3627              		.cfi_def_cfa_offset 8
 3628              		.cfi_offset 3, -8
 3629              		.cfi_offset 14, -4
 3630 0992 0248     		ldr	r0, .L191
 3631 0994 FFF7FEFF 		bl	tmc4330_rotate
 3632 0998 0020     		movs	r0, #0
 3633 099a 08BD     		pop	{r3, pc}
 3634              	.L192:
 3635              		.align	2
 3636              	.L191:
 3637 099c 24000000 		.word	.LANCHOR0+36
 3638              		.cfi_endproc
 3639              	.LFE25:
 3641              		.align	1
 3642              		.global	tmc4330_readWriteArray
 3643              		.syntax unified
 3644              		.thumb
 3645              		.thumb_func
 3646              		.fpu softvfp
 3648              	tmc4330_readWriteArray:
 3649              	.LVL507:
 3650              	.LFB3:
  64:boards/TMC4330_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
 3651              		.loc 1 64 1 is_stmt 1 view -0
 3652              		.cfi_startproc
 3653              		@ args = 0, pretend = 0, frame = 0
 3654              		@ frame_needed = 0, uses_anonymous_args = 0
 3655              		@ link register save eliminated.
  65:boards/TMC4330_eval.c **** }
 3656              		.loc 1 65 2 view .LVU1298
 3657              	.LBB312:
 3658              	.LBI312:
  55:boards/TMC4330_eval.c **** {
 3659              		.loc 1 55 34 view .LVU1299
 3660              	.LBB313:
  57:boards/TMC4330_eval.c **** 
 3661              		.loc 1 57 2 view .LVU1300
  59:boards/TMC4330_eval.c **** }
 3662              		.loc 1 59 2 view .LVU1301
  59:boards/TMC4330_eval.c **** }
 3663              		.loc 1 59 9 is_stmt 0 view .LVU1302
 3664 09a0 034B     		ldr	r3, .L194
 3665              	.LBE313:
 3666              	.LBE312:
  65:boards/TMC4330_eval.c **** }
 3667              		.loc 1 65 23 view .LVU1303
 3668 09a2 D3F8BC32 		ldr	r3, [r3, #700]
  64:boards/TMC4330_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
 3669              		.loc 1 64 1 view .LVU1304
 3670 09a6 0846     		mov	r0, r1
 3671              	.LVL508:
  65:boards/TMC4330_eval.c **** }
 3672              		.loc 1 65 2 view .LVU1305
 3673 09a8 DB68     		ldr	r3, [r3, #12]
 3674 09aa 1146     		mov	r1, r2
 3675              	.LVL509:
  65:boards/TMC4330_eval.c **** }
 3676              		.loc 1 65 2 view .LVU1306
 3677 09ac 1847     		bx	r3	@ indirect register sibling call
 3678              	.LVL510:
 3679              	.L195:
  65:boards/TMC4330_eval.c **** }
 3680              		.loc 1 65 2 view .LVU1307
 3681 09ae 00BF     		.align	2
 3682              	.L194:
 3683 09b0 00000000 		.word	.LANCHOR0
 3684              		.cfi_endproc
 3685              	.LFE3:
 3687              		.align	1
 3688              		.global	TMC4330_init
 3689              		.syntax unified
 3690              		.thumb
 3691              		.thumb_func
 3692              		.fpu softvfp
 3694              	TMC4330_init:
 3695              	.LFB21:
 742:boards/TMC4330_eval.c **** 
 743:boards/TMC4330_eval.c **** void TMC4330_init(void)
 744:boards/TMC4330_eval.c **** {
 3696              		.loc 1 744 1 is_stmt 1 view -0
 3697              		.cfi_startproc
 3698              		@ args = 0, pretend = 0, frame = 0
 3699              		@ frame_needed = 0, uses_anonymous_args = 0
 745:boards/TMC4330_eval.c **** 	tmc4330_init(&TMC4330, 0, Evalboards.ch1.config, &tmc4330_defaultRegisterResetState[0]);
 3700              		.loc 1 745 2 view .LVU1309
 744:boards/TMC4330_eval.c **** 	tmc4330_init(&TMC4330, 0, Evalboards.ch1.config, &tmc4330_defaultRegisterResetState[0]);
 3701              		.loc 1 744 1 is_stmt 0 view .LVU1310
 3702 09b4 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3703              	.LCFI15:
 3704              		.cfi_def_cfa_offset 24
 3705              		.cfi_offset 3, -24
 3706              		.cfi_offset 4, -20
 3707              		.cfi_offset 5, -16
 3708              		.cfi_offset 6, -12
 3709              		.cfi_offset 7, -8
 3710              		.cfi_offset 14, -4
 3711              		.loc 1 745 2 view .LVU1311
 3712 09b6 484C     		ldr	r4, .L197
 3713 09b8 484D     		ldr	r5, .L197+4
 746:boards/TMC4330_eval.c **** 
 747:boards/TMC4330_eval.c **** 	Pins.STANDBY_CLK     = &HAL.IOs->pins->DIO4;
 3714              		.loc 1 747 29 view .LVU1312
 3715 09ba 494F     		ldr	r7, .L197+8
 745:boards/TMC4330_eval.c **** 
 3716              		.loc 1 745 2 view .LVU1313
 3717 09bc 494B     		ldr	r3, .L197+12
 3718 09be AA69     		ldr	r2, [r5, #24]
 3719 09c0 0021     		movs	r1, #0
 3720 09c2 04F12400 		add	r0, r4, #36
 3721 09c6 FFF7FEFF 		bl	tmc4330_init
 3722              	.LVL511:
 3723              		.loc 1 747 2 is_stmt 1 view .LVU1314
 3724              		.loc 1 747 29 is_stmt 0 view .LVU1315
 3725 09ca FE68     		ldr	r6, [r7, #12]
 3726              		.loc 1 747 33 view .LVU1316
 3727 09cc 7368     		ldr	r3, [r6, #4]
 3728              		.loc 1 747 25 view .LVU1317
 3729 09ce 03F1E802 		add	r2, r3, #232
 3730              		.loc 1 747 23 view .LVU1318
 3731 09d2 2262     		str	r2, [r4, #32]
 748:boards/TMC4330_eval.c **** 	Pins.INTR            = &HAL.IOs->pins->DIO5;
 3732              		.loc 1 748 2 is_stmt 1 view .LVU1319
 3733              		.loc 1 748 25 is_stmt 0 view .LVU1320
 3734 09d4 03F58472 		add	r2, r3, #264
 3735              		.loc 1 748 23 view .LVU1321
 3736 09d8 E261     		str	r2, [r4, #28]
 749:boards/TMC4330_eval.c **** 	Pins.STOP_L          = &HAL.IOs->pins->DIO12;
 3737              		.loc 1 749 2 is_stmt 1 view .LVU1322
 3738              		.loc 1 749 25 is_stmt 0 view .LVU1323
 3739 09da 03F55272 		add	r2, r3, #840
 3740              		.loc 1 749 23 view .LVU1324
 3741 09de A261     		str	r2, [r4, #24]
 750:boards/TMC4330_eval.c **** 	Pins.STOP_R          = &HAL.IOs->pins->DIO13;
 3742              		.loc 1 750 2 is_stmt 1 view .LVU1325
 3743              		.loc 1 750 25 is_stmt 0 view .LVU1326
 3744 09e0 03F55A72 		add	r2, r3, #872
 3745              		.loc 1 750 23 view .LVU1327
 3746 09e4 6261     		str	r2, [r4, #20]
 751:boards/TMC4330_eval.c **** 	Pins.HOME_REF        = &HAL.IOs->pins->DIO14;
 3747              		.loc 1 751 2 is_stmt 1 view .LVU1328
 3748              		.loc 1 751 25 is_stmt 0 view .LVU1329
 3749 09e6 03F56272 		add	r2, r3, #904
 3750              		.loc 1 751 23 view .LVU1330
 3751 09ea 2261     		str	r2, [r4, #16]
 752:boards/TMC4330_eval.c **** 	Pins.START           = &HAL.IOs->pins->DIO15;
 3752              		.loc 1 752 2 is_stmt 1 view .LVU1331
 3753              		.loc 1 752 25 is_stmt 0 view .LVU1332
 3754 09ec 03F56A72 		add	r2, r3, #936
 753:boards/TMC4330_eval.c **** 	Pins.FREEZE          = &HAL.IOs->pins->DIO16;
 754:boards/TMC4330_eval.c **** 	Pins.NRST            = &HAL.IOs->pins->DIO17;
 3755              		.loc 1 754 25 view .LVU1333
 3756 09f0 03F57A70 		add	r0, r3, #1000
 752:boards/TMC4330_eval.c **** 	Pins.START           = &HAL.IOs->pins->DIO15;
 3757              		.loc 1 752 23 view .LVU1334
 3758 09f4 E260     		str	r2, [r4, #12]
 753:boards/TMC4330_eval.c **** 	Pins.FREEZE          = &HAL.IOs->pins->DIO16;
 3759              		.loc 1 753 2 is_stmt 1 view .LVU1335
 753:boards/TMC4330_eval.c **** 	Pins.FREEZE          = &HAL.IOs->pins->DIO16;
 3760              		.loc 1 753 25 is_stmt 0 view .LVU1336
 3761 09f6 03F57272 		add	r2, r3, #968
 755:boards/TMC4330_eval.c **** 	Pins.TARGET_REACHED  = &HAL.IOs->pins->DIO18;
 3762              		.loc 1 755 25 view .LVU1337
 3763 09fa 03F58163 		add	r3, r3, #1032
 3764              		.loc 1 755 23 view .LVU1338
 3765 09fe 2360     		str	r3, [r4]
 756:boards/TMC4330_eval.c **** 
 757:boards/TMC4330_eval.c **** 	HAL.IOs->config->toOutput(Pins.NRST);
 3766              		.loc 1 757 17 view .LVU1339
 3767 0a00 3368     		ldr	r3, [r6]
 753:boards/TMC4330_eval.c **** 	Pins.NRST            = &HAL.IOs->pins->DIO17;
 3768              		.loc 1 753 23 view .LVU1340
 3769 0a02 A260     		str	r2, [r4, #8]
 754:boards/TMC4330_eval.c **** 	Pins.TARGET_REACHED  = &HAL.IOs->pins->DIO18;
 3770              		.loc 1 754 2 is_stmt 1 view .LVU1341
 3771              		.loc 1 757 2 is_stmt 0 view .LVU1342
 3772 0a04 DB68     		ldr	r3, [r3, #12]
 754:boards/TMC4330_eval.c **** 	Pins.TARGET_REACHED  = &HAL.IOs->pins->DIO18;
 3773              		.loc 1 754 23 view .LVU1343
 3774 0a06 6060     		str	r0, [r4, #4]
 755:boards/TMC4330_eval.c **** 
 3775              		.loc 1 755 2 is_stmt 1 view .LVU1344
 3776              		.loc 1 757 2 view .LVU1345
 3777 0a08 9847     		blx	r3
 3778              	.LVL512:
 758:boards/TMC4330_eval.c **** 	HAL.IOs->config->toOutput(Pins.STOP_L);
 3779              		.loc 1 758 2 view .LVU1346
 3780              		.loc 1 758 17 is_stmt 0 view .LVU1347
 3781 0a0a 3368     		ldr	r3, [r6]
 3782              		.loc 1 758 2 view .LVU1348
 3783 0a0c A069     		ldr	r0, [r4, #24]
 3784 0a0e DB68     		ldr	r3, [r3, #12]
 3785 0a10 9847     		blx	r3
 3786              	.LVL513:
 759:boards/TMC4330_eval.c **** 	HAL.IOs->config->toOutput(Pins.STOP_R);
 3787              		.loc 1 759 2 is_stmt 1 view .LVU1349
 3788              		.loc 1 759 17 is_stmt 0 view .LVU1350
 3789 0a12 3368     		ldr	r3, [r6]
 3790              		.loc 1 759 2 view .LVU1351
 3791 0a14 6069     		ldr	r0, [r4, #20]
 3792 0a16 DB68     		ldr	r3, [r3, #12]
 3793 0a18 9847     		blx	r3
 3794              	.LVL514:
 760:boards/TMC4330_eval.c **** 	HAL.IOs->config->toOutput(Pins.HOME_REF);
 3795              		.loc 1 760 2 is_stmt 1 view .LVU1352
 3796              		.loc 1 760 17 is_stmt 0 view .LVU1353
 3797 0a1a 3368     		ldr	r3, [r6]
 3798              		.loc 1 760 2 view .LVU1354
 3799 0a1c 2069     		ldr	r0, [r4, #16]
 3800 0a1e DB68     		ldr	r3, [r3, #12]
 3801 0a20 9847     		blx	r3
 3802              	.LVL515:
 761:boards/TMC4330_eval.c **** 	HAL.IOs->config->toOutput(Pins.START);
 3803              		.loc 1 761 2 is_stmt 1 view .LVU1355
 3804              		.loc 1 761 17 is_stmt 0 view .LVU1356
 3805 0a22 3368     		ldr	r3, [r6]
 3806              		.loc 1 761 2 view .LVU1357
 3807 0a24 E068     		ldr	r0, [r4, #12]
 3808 0a26 DB68     		ldr	r3, [r3, #12]
 3809 0a28 9847     		blx	r3
 3810              	.LVL516:
 762:boards/TMC4330_eval.c **** 	HAL.IOs->config->toOutput(Pins.FREEZE);
 3811              		.loc 1 762 2 is_stmt 1 view .LVU1358
 3812              		.loc 1 762 17 is_stmt 0 view .LVU1359
 3813 0a2a 3368     		ldr	r3, [r6]
 3814              		.loc 1 762 2 view .LVU1360
 3815 0a2c A068     		ldr	r0, [r4, #8]
 3816 0a2e DB68     		ldr	r3, [r3, #12]
 3817 0a30 9847     		blx	r3
 3818              	.LVL517:
 763:boards/TMC4330_eval.c **** 
 764:boards/TMC4330_eval.c **** 	HAL.IOs->config->setHigh(Pins.NRST);
 3819              		.loc 1 764 2 is_stmt 1 view .LVU1361
 3820              		.loc 1 764 17 is_stmt 0 view .LVU1362
 3821 0a32 3368     		ldr	r3, [r6]
 3822              		.loc 1 764 2 view .LVU1363
 3823 0a34 6068     		ldr	r0, [r4, #4]
 3824 0a36 5B69     		ldr	r3, [r3, #20]
 3825 0a38 9847     		blx	r3
 3826              	.LVL518:
 765:boards/TMC4330_eval.c **** 
 766:boards/TMC4330_eval.c **** 	HAL.IOs->config->setHigh(Pins.STOP_L);
 3827              		.loc 1 766 2 is_stmt 1 view .LVU1364
 3828              		.loc 1 766 17 is_stmt 0 view .LVU1365
 3829 0a3a 3368     		ldr	r3, [r6]
 3830              		.loc 1 766 2 view .LVU1366
 3831 0a3c A069     		ldr	r0, [r4, #24]
 3832 0a3e 5B69     		ldr	r3, [r3, #20]
 3833 0a40 9847     		blx	r3
 3834              	.LVL519:
 767:boards/TMC4330_eval.c **** 	HAL.IOs->config->setHigh(Pins.STOP_R);
 3835              		.loc 1 767 2 is_stmt 1 view .LVU1367
 3836              		.loc 1 767 17 is_stmt 0 view .LVU1368
 3837 0a42 3368     		ldr	r3, [r6]
 3838              		.loc 1 767 2 view .LVU1369
 3839 0a44 6069     		ldr	r0, [r4, #20]
 3840 0a46 5B69     		ldr	r3, [r3, #20]
 3841 0a48 9847     		blx	r3
 3842              	.LVL520:
 768:boards/TMC4330_eval.c **** 	HAL.IOs->config->setHigh(Pins.HOME_REF);
 3843              		.loc 1 768 2 is_stmt 1 view .LVU1370
 3844              		.loc 1 768 17 is_stmt 0 view .LVU1371
 3845 0a4a 3368     		ldr	r3, [r6]
 3846              		.loc 1 768 2 view .LVU1372
 3847 0a4c 2069     		ldr	r0, [r4, #16]
 3848 0a4e 5B69     		ldr	r3, [r3, #20]
 3849 0a50 9847     		blx	r3
 3850              	.LVL521:
 769:boards/TMC4330_eval.c **** 	HAL.IOs->config->setHigh(Pins.START);
 3851              		.loc 1 769 2 is_stmt 1 view .LVU1373
 3852              		.loc 1 769 17 is_stmt 0 view .LVU1374
 3853 0a52 3368     		ldr	r3, [r6]
 3854              		.loc 1 769 2 view .LVU1375
 3855 0a54 E068     		ldr	r0, [r4, #12]
 3856 0a56 5B69     		ldr	r3, [r3, #20]
 3857 0a58 9847     		blx	r3
 3858              	.LVL522:
 770:boards/TMC4330_eval.c **** 	HAL.IOs->config->setHigh(Pins.FREEZE);
 3859              		.loc 1 770 2 is_stmt 1 view .LVU1376
 3860              		.loc 1 770 17 is_stmt 0 view .LVU1377
 3861 0a5a 3368     		ldr	r3, [r6]
 3862              		.loc 1 770 2 view .LVU1378
 3863 0a5c A068     		ldr	r0, [r4, #8]
 3864 0a5e 5B69     		ldr	r3, [r3, #20]
 3865 0a60 9847     		blx	r3
 3866              	.LVL523:
 771:boards/TMC4330_eval.c **** 
 772:boards/TMC4330_eval.c **** 	HAL.IOs->config->toInput(Pins.STANDBY_CLK);
 3867              		.loc 1 772 2 is_stmt 1 view .LVU1379
 3868              		.loc 1 772 17 is_stmt 0 view .LVU1380
 3869 0a62 3368     		ldr	r3, [r6]
 3870              		.loc 1 772 2 view .LVU1381
 3871 0a64 206A     		ldr	r0, [r4, #32]
 3872 0a66 1B69     		ldr	r3, [r3, #16]
 3873 0a68 9847     		blx	r3
 3874              	.LVL524:
 773:boards/TMC4330_eval.c **** 	HAL.IOs->config->toInput(Pins.INTR);
 3875              		.loc 1 773 2 is_stmt 1 view .LVU1382
 3876              		.loc 1 773 17 is_stmt 0 view .LVU1383
 3877 0a6a 3368     		ldr	r3, [r6]
 3878              		.loc 1 773 2 view .LVU1384
 3879 0a6c E069     		ldr	r0, [r4, #28]
 3880 0a6e 1B69     		ldr	r3, [r3, #16]
 3881 0a70 9847     		blx	r3
 3882              	.LVL525:
 774:boards/TMC4330_eval.c **** 	HAL.IOs->config->toInput(Pins.TARGET_REACHED);
 3883              		.loc 1 774 2 is_stmt 1 view .LVU1385
 3884              		.loc 1 774 17 is_stmt 0 view .LVU1386
 3885 0a72 3368     		ldr	r3, [r6]
 3886              		.loc 1 774 2 view .LVU1387
 3887 0a74 2068     		ldr	r0, [r4]
 3888 0a76 1B69     		ldr	r3, [r3, #16]
 3889 0a78 9847     		blx	r3
 3890              	.LVL526:
 775:boards/TMC4330_eval.c **** 
 776:boards/TMC4330_eval.c **** 	TMC4330_SPIChannel = &HAL.SPI->ch1;
 3891              		.loc 1 776 2 is_stmt 1 view .LVU1388
 777:boards/TMC4330_eval.c **** 	TMC4330_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 3892              		.loc 1 777 28 is_stmt 0 view .LVU1389
 3893 0a7a 7368     		ldr	r3, [r6, #4]
 776:boards/TMC4330_eval.c **** 	TMC4330_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 3894              		.loc 1 776 27 view .LVU1390
 3895 0a7c 3A69     		ldr	r2, [r7, #16]
 778:boards/TMC4330_eval.c **** 
 779:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 780:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 781:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 3896              		.loc 1 781 38 view .LVU1391
 3897 0a7e 1A49     		ldr	r1, .L197+16
 776:boards/TMC4330_eval.c **** 	TMC4330_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 3898              		.loc 1 776 21 view .LVU1392
 3899 0a80 C4F8BC22 		str	r2, [r4, #700]
 777:boards/TMC4330_eval.c **** 
 3900              		.loc 1 777 2 is_stmt 1 view .LVU1393
 777:boards/TMC4330_eval.c **** 
 3901              		.loc 1 777 28 is_stmt 0 view .LVU1394
 3902 0a84 03F53273 		add	r3, r3, #712
 777:boards/TMC4330_eval.c **** 
 3903              		.loc 1 777 26 view .LVU1395
 3904 0a88 5360     		str	r3, [r2, #4]
 779:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 3905              		.loc 1 779 2 is_stmt 1 view .LVU1396
 779:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 3906              		.loc 1 779 16 is_stmt 0 view .LVU1397
 3907 0a8a AB69     		ldr	r3, [r5, #24]
 780:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 3908              		.loc 1 780 2 is_stmt 1 view .LVU1398
 779:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 3909              		.loc 1 779 38 is_stmt 0 view .LVU1399
 3910 0a8c 0122     		movs	r2, #1
 3911              		.loc 1 781 38 view .LVU1400
 3912 0a8e C3F80412 		str	r1, [r3, #516]
 782:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 3913              		.loc 1 782 38 view .LVU1401
 3914 0a92 1649     		ldr	r1, .L197+20
 779:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 3915              		.loc 1 779 38 view .LVU1402
 3916 0a94 1A80     		strh	r2, [r3]	@ movhi
 781:boards/TMC4330_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 3917              		.loc 1 781 2 is_stmt 1 view .LVU1403
 3918              		.loc 1 782 2 view .LVU1404
 3919              		.loc 1 782 38 is_stmt 0 view .LVU1405
 3920 0a96 C3F80812 		str	r1, [r3, #520]
 783:boards/TMC4330_eval.c **** 
 784:boards/TMC4330_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 3921              		.loc 1 784 2 is_stmt 1 view .LVU1406
 3922              		.loc 1 784 38 is_stmt 0 view .LVU1407
 3923 0a9a 154B     		ldr	r3, .L197+24
 3924 0a9c 6B62     		str	r3, [r5, #36]
 785:boards/TMC4330_eval.c **** 	Evalboards.ch1.right                = right;
 3925              		.loc 1 785 2 is_stmt 1 view .LVU1408
 3926              		.loc 1 785 38 is_stmt 0 view .LVU1409
 3927 0a9e 154B     		ldr	r3, .L197+28
 3928 0aa0 2B62     		str	r3, [r5, #32]
 786:boards/TMC4330_eval.c **** 	Evalboards.ch1.left                 = left;
 3929              		.loc 1 786 2 is_stmt 1 view .LVU1410
 3930              		.loc 1 786 38 is_stmt 0 view .LVU1411
 3931 0aa2 154B     		ldr	r3, .L197+32
 3932 0aa4 EB61     		str	r3, [r5, #28]
 787:boards/TMC4330_eval.c **** 	Evalboards.ch1.stop                 = stop;
 3933              		.loc 1 787 2 is_stmt 1 view .LVU1412
 3934              		.loc 1 787 38 is_stmt 0 view .LVU1413
 3935 0aa6 154B     		ldr	r3, .L197+36
 3936 0aa8 AB62     		str	r3, [r5, #40]
 788:boards/TMC4330_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 3937              		.loc 1 788 2 is_stmt 1 view .LVU1414
 3938              		.loc 1 788 38 is_stmt 0 view .LVU1415
 3939 0aaa 154B     		ldr	r3, .L197+40
 3940 0aac EB63     		str	r3, [r5, #60]
 789:boards/TMC4330_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 3941              		.loc 1 789 2 is_stmt 1 view .LVU1416
 3942              		.loc 1 789 38 is_stmt 0 view .LVU1417
 3943 0aae 154B     		ldr	r3, .L197+44
 3944 0ab0 AB63     		str	r3, [r5, #56]
 790:boards/TMC4330_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 3945              		.loc 1 790 2 is_stmt 1 view .LVU1418
 3946              		.loc 1 790 38 is_stmt 0 view .LVU1419
 3947 0ab2 154B     		ldr	r3, .L197+48
 3948 0ab4 EB62     		str	r3, [r5, #44]
 791:boards/TMC4330_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 3949              		.loc 1 791 2 is_stmt 1 view .LVU1420
 3950              		.loc 1 791 38 is_stmt 0 view .LVU1421
 3951 0ab6 154B     		ldr	r3, .L197+52
 3952 0ab8 2B63     		str	r3, [r5, #48]
 792:boards/TMC4330_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 3953              		.loc 1 792 2 is_stmt 1 view .LVU1422
 3954              		.loc 1 792 38 is_stmt 0 view .LVU1423
 3955 0aba 154B     		ldr	r3, .L197+56
 3956 0abc EB64     		str	r3, [r5, #76]
 793:boards/TMC4330_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 3957              		.loc 1 793 2 is_stmt 1 view .LVU1424
 3958              		.loc 1 793 38 is_stmt 0 view .LVU1425
 3959 0abe 154B     		ldr	r3, .L197+60
 3960 0ac0 AB64     		str	r3, [r5, #72]
 794:boards/TMC4330_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 3961              		.loc 1 794 2 is_stmt 1 view .LVU1426
 3962              		.loc 1 794 38 is_stmt 0 view .LVU1427
 3963 0ac2 154B     		ldr	r3, .L197+64
 3964 0ac4 AB65     		str	r3, [r5, #88]
 795:boards/TMC4330_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 3965              		.loc 1 795 2 is_stmt 1 view .LVU1428
 3966              		.loc 1 795 38 is_stmt 0 view .LVU1429
 3967 0ac6 154B     		ldr	r3, .L197+68
 3968 0ac8 6B65     		str	r3, [r5, #84]
 796:boards/TMC4330_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 3969              		.loc 1 796 2 is_stmt 1 view .LVU1430
 3970              		.loc 1 796 38 is_stmt 0 view .LVU1431
 3971 0aca 154B     		ldr	r3, .L197+72
 3972 0acc 2B66     		str	r3, [r5, #96]
 797:boards/TMC4330_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC4330_MOTORS;
 3973              		.loc 1 797 2 is_stmt 1 view .LVU1432
 798:boards/TMC4330_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 3974              		.loc 1 798 38 is_stmt 0 view .LVU1433
 3975 0ace 154B     		ldr	r3, .L197+76
 797:boards/TMC4330_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC4330_MOTORS;
 3976              		.loc 1 797 38 view .LVU1434
 3977 0ad0 2A75     		strb	r2, [r5, #20]
 3978              		.loc 1 798 2 is_stmt 1 view .LVU1435
 3979              		.loc 1 798 38 is_stmt 0 view .LVU1436
 3980 0ad2 EB65     		str	r3, [r5, #92]
 799:boards/TMC4330_eval.c **** };
 3981              		.loc 1 799 1 view .LVU1437
 3982 0ad4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3983              	.L198:
 3984 0ad6 00BF     		.align	2
 3985              	.L197:
 3986 0ad8 00000000 		.word	.LANCHOR0
 3987 0adc 00000000 		.word	Evalboards
 3988 0ae0 00000000 		.word	HAL
 3989 0ae4 00000000 		.word	.LANCHOR1
 3990 0ae8 00000000 		.word	reset
 3991 0aec 00000000 		.word	restore
 3992 0af0 00000000 		.word	rotate
 3993 0af4 00000000 		.word	right
 3994 0af8 00000000 		.word	left
 3995 0afc 00000000 		.word	stop
 3996 0b00 00000000 		.word	GAP
 3997 0b04 00000000 		.word	SAP
 3998 0b08 00000000 		.word	moveTo
 3999 0b0c 00000000 		.word	moveBy
 4000 0b10 00000000 		.word	writeRegister
 4001 0b14 00000000 		.word	readRegister
 4002 0b18 00000000 		.word	periodicJob
 4003 0b1c 00000000 		.word	userFunction
 4004 0b20 00000000 		.word	checkErrors
 4005 0b24 00000000 		.word	deInit
 4006              		.cfi_endproc
 4007              	.LFE21:
 4009              		.comm	IdState,40,4
 4010              		.comm	TMCMotionController,532,4
 4011              		.comm	TMCDriver,532,4
 4012              		.comm	Evalboards,244,4
 4013              		.comm	VitalSignsMonitor,20,4
 4014              		.comm	hwid,1,1
 4015              		.comm	HAL,48,4
 4016              		.comm	UART,40,4
 4017              		.comm	Timer,16,4
 4018              		.comm	WLAN,36,4
 4019              		.comm	RS232,36,4
 4020              		.comm	LEDs,28,4
 4021              		.comm	USB,36,4
 4022              		.comm	uart0_interrupt,1,1
 4023              		.comm	ADCs,32,4
 4024              		.comm	SPI,44,4
 4025              		.comm	IOMap,2088,4
 4026              		.comm	IOs,52,4
 4027              		.comm	Cpu,8,4
 4028              		.section	.rodata
 4029              		.align	2
 4030              		.set	.LANCHOR1,. + 0
 4033              	tmc4330_defaultRegisterResetState:
 4034 0000 00000000 		.word	0
 4035 0004 00000000 		.word	0
 4036 0008 00000000 		.word	0
 4037 000c 00000000 		.word	0
 4038 0010 00000000 		.word	0
 4039 0014 00000000 		.word	0
 4040 0018 00000000 		.word	0
 4041 001c 00000000 		.word	0
 4042 0020 00000000 		.word	0
 4043 0024 00000000 		.word	0
 4044 0028 00000000 		.word	0
 4045 002c 00000000 		.word	0
 4046 0030 00000000 		.word	0
 4047 0034 00000000 		.word	0
 4048 0038 00000000 		.word	0
 4049 003c 00000000 		.word	0
 4050 0040 01000400 		.word	262145
 4051 0044 00000000 		.word	0
 4052 0048 00000000 		.word	0
 4053 004c 00000000 		.word	0
 4054 0050 00000000 		.word	0
 4055 0054 00000000 		.word	0
 4056 0058 00000000 		.word	0
 4057 005c 00000000 		.word	0
 4058 0060 00000000 		.word	0
 4059 0064 00000000 		.word	0
 4060 0068 00000000 		.word	0
 4061 006c 00000000 		.word	0
 4062 0070 00000000 		.word	0
 4063 0074 00000000 		.word	0
 4064 0078 00000000 		.word	0
 4065 007c 00000000 		.word	0
 4066 0080 01000000 		.word	1
 4067 0084 00000000 		.word	0
 4068 0088 00000000 		.word	0
 4069 008c 00000000 		.word	0
 4070 0090 00000000 		.word	0
 4071 0094 00000000 		.word	0
 4072 0098 00000000 		.word	0
 4073 009c 00000000 		.word	0
 4074 00a0 00000000 		.word	0
 4075 00a4 00000000 		.word	0
 4076 00a8 00000000 		.word	0
 4077 00ac 00000000 		.word	0
 4078 00b0 00000000 		.word	0
 4079 00b4 00000000 		.word	0
 4080 00b8 00000000 		.word	0
 4081 00bc 00000000 		.word	0
 4082 00c0 00000000 		.word	0
 4083 00c4 00000000 		.word	0
 4084 00c8 00000000 		.word	0
 4085 00cc 00000000 		.word	0
 4086 00d0 00000000 		.word	0
 4087 00d4 00000000 		.word	0
 4088 00d8 00000000 		.word	0
 4089 00dc 00000000 		.word	0
 4090 00e0 00000000 		.word	0
 4091 00e4 00000000 		.word	0
 4092 00e8 00000000 		.word	0
 4093 00ec 00000000 		.word	0
 4094 00f0 00000000 		.word	0
 4095 00f4 00000000 		.word	0
 4096 00f8 00000000 		.word	0
 4097 00fc 00000000 		.word	0
 4098 0100 00000000 		.word	0
 4099 0104 00000000 		.word	0
 4100 0108 00000000 		.word	0
 4101 010c 00000000 		.word	0
 4102 0110 00000000 		.word	0
 4103 0114 00000000 		.word	0
 4104 0118 00000000 		.word	0
 4105 011c 00000000 		.word	0
 4106 0120 00000000 		.word	0
 4107 0124 00000000 		.word	0
 4108 0128 00000000 		.word	0
 4109 012c 00000000 		.word	0
 4110 0130 00000000 		.word	0
 4111 0134 00000000 		.word	0
 4112 0138 00000000 		.word	0
 4113 013c 00000000 		.word	0
 4114 0140 00000000 		.word	0
 4115 0144 00000000 		.word	0
 4116 0148 00000000 		.word	0
 4117 014c 00000000 		.word	0
 4118 0150 00000000 		.word	0
 4119 0154 00000000 		.word	0
 4120 0158 00000000 		.word	0
 4121 015c 00000000 		.word	0
 4122 0160 00000000 		.word	0
 4123 0164 00000000 		.word	0
 4124 0168 00000000 		.word	0
 4125 016c 00000000 		.word	0
 4126 0170 00000000 		.word	0
 4127 0174 00000000 		.word	0
 4128 0178 00000000 		.word	0
 4129 017c 00000000 		.word	0
 4130 0180 00000000 		.word	0
 4131 0184 00000000 		.word	0
 4132 0188 00000000 		.word	0
 4133 018c 00000000 		.word	0
 4134 0190 00000000 		.word	0
 4135 0194 00000000 		.word	0
 4136 0198 00000000 		.word	0
 4137 019c 00000000 		.word	0
 4138 01a0 00000000 		.word	0
 4139 01a4 00000000 		.word	0
 4140 01a8 00000000 		.word	0
 4141 01ac 00000000 		.word	0
 4142 01b0 00000000 		.word	0
 4143 01b4 00000000 		.word	0
 4144 01b8 00000000 		.word	0
 4145 01bc 00000000 		.word	0
 4146 01c0 00000000 		.word	0
 4147 01c4 00000000 		.word	0
 4148 01c8 00000000 		.word	0
 4149 01cc 00000000 		.word	0
 4150 01d0 00000000 		.word	0
 4151 01d4 00000000 		.word	0
 4152 01d8 00000000 		.word	0
 4153 01dc 00000000 		.word	0
 4154 01e0 00000000 		.word	0
 4155 01e4 00000000 		.word	0
 4156 01e8 00000000 		.word	0
 4157 01ec 00000000 		.word	0
 4158 01f0 00000000 		.word	0
 4159 01f4 00000000 		.word	0
 4160 01f8 00000000 		.word	0
 4161 01fc 00000000 		.word	0
 4162              		.bss
 4163              		.align	2
 4164              		.set	.LANCHOR0,. + 0
 4167              	Pins:
 4168 0000 00000000 		.space	36
 4168      00000000 
 4168      00000000 
 4168      00000000 
 4168      00000000 
 4171              	TMC4330:
 4172 0024 00000000 		.space	660
 4172      00000000 
 4172      00000000 
 4172      00000000 
 4172      00000000 
 4175              	vmax_position:
 4176 02b8 00000000 		.space	4
 4179              	TMC4330_SPIChannel:
 4180 02bc 00000000 		.space	4
 4183              	ADCValue:
 4184 02c0 00000000 		.space	12
 4184      00000000 
 4184      00000000 
 4185              		.text
 4186              	.Letext0:
 4187              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 4188              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4189              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4190              		.file 5 "TMC-API/tmc/helpers/Types.h"
 4191              		.file 6 "TMC-API/tmc/helpers/Config.h"
 4192              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4193              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4194              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4195              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 4196              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 4197              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 4198              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 4199              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 4200              		.file 15 "./hal/IOs.h"
 4201              		.file 16 "./hal/IOMap.h"
 4202              		.file 17 "./hal/SPI.h"
 4203              		.file 18 "./hal/ADCs.h"
 4204              		.file 19 "./hal/RXTX.h"
 4205              		.file 20 "./hal/USB.h"
 4206              		.file 21 "./hal/LEDs.h"
 4207              		.file 22 "./hal/RS232.h"
 4208              		.file 23 "./hal/WLAN.h"
 4209              		.file 24 "./hal/Timer.h"
 4210              		.file 25 "./hal/UART.h"
 4211              		.file 26 "./hal/HAL.h"
 4212              		.file 27 "./tmc/VitalSignsMonitor.h"
 4213              		.file 28 "boards/Board.h"
 4214              		.file 29 "boards/TMCDriver.h"
 4215              		.file 30 "boards/TMCMotionController.h"
 4216              		.file 31 "./tmc/BoardAssignment.h"
 4217              		.file 32 "TMC-API/tmc/ic/TMC4330/TMC4330.h"
 4218              		.file 33 "./hal/SysTick.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC4330_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:22     .text:00000000 checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:42     .text:00000008 $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:46     .text:0000000c $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:52     .text:0000000c deInit
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:171    .text:00000070 $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:176    .text:00000078 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:182    .text:00000078 userFunction
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:211    .text:0000008a $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:404    .text:00000144 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:411    .text:00000154 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:417    .text:00000154 periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:438    .text:0000015c $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:442    .text:00000160 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:448    .text:00000160 readRegister
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:486    .text:00000170 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:490    .text:00000174 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:496    .text:00000174 writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:522    .text:0000017c $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:526    .text:00000180 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:532    .text:00000180 moveBy
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:568    .text:00000194 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:572    .text:00000198 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:578    .text:00000198 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:614    .text:000001ac $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:618    .text:000001b0 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:624    .text:000001b0 handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:667    .text:000001da $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:698    .text:00000218 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:706    .text:00000222 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:734    .text:0000025a $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:1808   .text:00000504 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:1814   .text:0000050c $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:2821   .text:0000079c $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:2827   .text:000007a4 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3234   .text:000008c8 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3240   .text:000008d4 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3246   .text:000008d4 SAP
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3286   .text:000008e8 GAP
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3316   .text:000008f0 stop
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3365   .text:00000900 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3369   .text:00000904 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3375   .text:00000904 left
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3426   .text:00000914 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3430   .text:00000918 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3436   .text:00000918 right
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3484   .text:00000924 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3488   .text:00000928 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3494   .text:00000928 restore
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3546   .text:00000954 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3551   .text:0000095c $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3557   .text:0000095c reset
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3609   .text:00000988 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3614   .text:00000990 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3620   .text:00000990 rotate
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3637   .text:0000099c $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3641   .text:000009a0 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3648   .text:000009a0 tmc4330_readWriteArray
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3683   .text:000009b0 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3687   .text:000009b4 $t
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3694   .text:000009b4 TMC4330_init
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:3986   .text:00000ad8 $d
                            *COM*:00000028 IdState
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:4029   .rodata:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:4033   .rodata:00000000 tmc4330_defaultRegisterResetState
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:4163   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:4167   .bss:00000000 Pins
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:4171   .bss:00000024 TMC4330
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:4175   .bss:000002b8 vmax_position
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:4179   .bss:000002bc TMC4330_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:4183   .bss:000002c0 ADCValue
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:215    .text:0000008d $d
C:\Users\Shubham\AppData\Local\Temp\ccaZVbvJ.s:215    .text:0000008e $t

UNDEFINED SYMBOLS
tmc4330_calibrateClosedLoop
tmc4330_periodicJob
tmc4330_readInt
tmc4330_writeInt
tmc4330_moveBy
tmc4330_moveTo
tmc4330_discardVelocityDecimals
tmc4330_rotate
wait
tmc4330_restore
tmc4330_reset
tmc4330_init
