   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC2209_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	checkErrors:
  23              	.LVL0:
  24              	.LFB16:
  25              		.file 1 "boards/TMC2209_eval.c"
   1:boards/TMC2209_eval.c **** #include "Board.h"
   2:boards/TMC2209_eval.c **** #include "tmc/ic/TMC2209/TMC2209.h"
   3:boards/TMC2209_eval.c **** #include "tmc/StepDir.h"
   4:boards/TMC2209_eval.c **** 
   5:boards/TMC2209_eval.c **** #undef  TMC2209_MAX_VELOCITY
   6:boards/TMC2209_eval.c **** #define TMC2209_MAX_VELOCITY  STEPDIR_MAX_VELOCITY
   7:boards/TMC2209_eval.c **** 
   8:boards/TMC2209_eval.c **** // Stepdir precision: 2^17 -> 17 digits of precision
   9:boards/TMC2209_eval.c **** #define STEPDIR_PRECISION 131072
  10:boards/TMC2209_eval.c **** 
  11:boards/TMC2209_eval.c **** #define ERRORS_VM        (1<<0)
  12:boards/TMC2209_eval.c **** #define ERRORS_VM_UNDER  (1<<1)
  13:boards/TMC2209_eval.c **** #define ERRORS_VM_OVER   (1<<2)
  14:boards/TMC2209_eval.c **** 
  15:boards/TMC2209_eval.c **** #define VM_MIN  50   // VM[V/10] min
  16:boards/TMC2209_eval.c **** #define VM_MAX  390  // VM[V/10] max
  17:boards/TMC2209_eval.c **** 
  18:boards/TMC2209_eval.c **** #define MOTORS 1
  19:boards/TMC2209_eval.c **** 
  20:boards/TMC2209_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
  21:boards/TMC2209_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
  22:boards/TMC2209_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
  23:boards/TMC2209_eval.c **** static uint32_t stop(uint8_t motor);
  24:boards/TMC2209_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  25:boards/TMC2209_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  26:boards/TMC2209_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  27:boards/TMC2209_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  28:boards/TMC2209_eval.c **** 
  29:boards/TMC2209_eval.c **** static void checkErrors (uint32_t tick);
  30:boards/TMC2209_eval.c **** static void deInit(void);
  31:boards/TMC2209_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  32:boards/TMC2209_eval.c **** 
  33:boards/TMC2209_eval.c **** static void periodicJob(uint32_t tick);
  34:boards/TMC2209_eval.c **** static uint8_t reset(void);
  35:boards/TMC2209_eval.c **** static uint8_t restore(void);
  36:boards/TMC2209_eval.c **** static void enableDriver(DriverState state);
  37:boards/TMC2209_eval.c **** 
  38:boards/TMC2209_eval.c **** static UART_Config *TMC2209_UARTChannel;
  39:boards/TMC2209_eval.c **** static TMC2209TypeDef TMC2209;
  40:boards/TMC2209_eval.c **** static ConfigurationTypeDef *TMC2209_config;
  41:boards/TMC2209_eval.c **** 
  42:boards/TMC2209_eval.c **** static int32_t thigh;
  43:boards/TMC2209_eval.c **** 
  44:boards/TMC2209_eval.c **** // Helper macro - index is always 1 here (channel 1 <-> index 0, channel 2 <-> index 1)
  45:boards/TMC2209_eval.c **** #define TMC2209_CRC(data, length) tmc_CRC8(data, length, 1)
  46:boards/TMC2209_eval.c **** 
  47:boards/TMC2209_eval.c **** typedef struct
  48:boards/TMC2209_eval.c **** {
  49:boards/TMC2209_eval.c **** 	IOPinTypeDef  *ENN;
  50:boards/TMC2209_eval.c **** 	IOPinTypeDef  *SPREAD;
  51:boards/TMC2209_eval.c **** 	IOPinTypeDef  *STEP;
  52:boards/TMC2209_eval.c **** 	IOPinTypeDef  *DIR;
  53:boards/TMC2209_eval.c **** 	IOPinTypeDef  *MS1_AD0;
  54:boards/TMC2209_eval.c **** 	IOPinTypeDef  *MS2_AD1;
  55:boards/TMC2209_eval.c **** 	IOPinTypeDef  *DIAG;
  56:boards/TMC2209_eval.c **** 	IOPinTypeDef  *INDEX;
  57:boards/TMC2209_eval.c **** 	IOPinTypeDef  *UC_PWM;
  58:boards/TMC2209_eval.c **** 	IOPinTypeDef  *STDBY;
  59:boards/TMC2209_eval.c **** } PinsTypeDef;
  60:boards/TMC2209_eval.c **** 
  61:boards/TMC2209_eval.c **** static PinsTypeDef Pins;
  62:boards/TMC2209_eval.c **** 
  63:boards/TMC2209_eval.c **** static inline TMC2209TypeDef *motorToIC(uint8_t motor)
  64:boards/TMC2209_eval.c **** {
  65:boards/TMC2209_eval.c **** 	UNUSED(motor);
  66:boards/TMC2209_eval.c **** 
  67:boards/TMC2209_eval.c **** 	return &TMC2209;
  68:boards/TMC2209_eval.c **** }
  69:boards/TMC2209_eval.c **** 
  70:boards/TMC2209_eval.c **** static inline UART_Config *channelToUART(uint8_t channel)
  71:boards/TMC2209_eval.c **** {
  72:boards/TMC2209_eval.c **** 	UNUSED(channel);
  73:boards/TMC2209_eval.c **** 
  74:boards/TMC2209_eval.c **** 	return TMC2209_UARTChannel;
  75:boards/TMC2209_eval.c **** }
  76:boards/TMC2209_eval.c **** 
  77:boards/TMC2209_eval.c **** // => UART wrapper
  78:boards/TMC2209_eval.c **** // Write [writeLength] bytes from the [data] array.
  79:boards/TMC2209_eval.c **** // If [readLength] is greater than zero, read [readLength] bytes from the
  80:boards/TMC2209_eval.c **** // [data] array.
  81:boards/TMC2209_eval.c **** void tmc2209_readWriteArray(uint8_t channel, uint8_t *data, size_t writeLength, size_t readLength)
  82:boards/TMC2209_eval.c **** {
  83:boards/TMC2209_eval.c **** 	UART_readWrite(channelToUART(channel), data, writeLength, readLength);
  84:boards/TMC2209_eval.c **** }
  85:boards/TMC2209_eval.c **** // <= UART wrapper
  86:boards/TMC2209_eval.c **** 
  87:boards/TMC2209_eval.c **** // => CRC wrapper
  88:boards/TMC2209_eval.c **** // Return the CRC8 of [length] bytes of data stored in the [data] array.
  89:boards/TMC2209_eval.c **** uint8_t tmc2209_CRC8(uint8_t *data, size_t length)
  90:boards/TMC2209_eval.c **** {
  91:boards/TMC2209_eval.c **** 	return TMC2209_CRC(data, length);
  92:boards/TMC2209_eval.c **** }
  93:boards/TMC2209_eval.c **** // <= CRC wrapper
  94:boards/TMC2209_eval.c **** 
  95:boards/TMC2209_eval.c **** void tmc2209_writeRegister(uint8_t motor, uint8_t address, int32_t value)
  96:boards/TMC2209_eval.c **** {
  97:boards/TMC2209_eval.c **** 	tmc2209_writeInt(motorToIC(motor), address, value);
  98:boards/TMC2209_eval.c **** 
  99:boards/TMC2209_eval.c **** }
 100:boards/TMC2209_eval.c **** 
 101:boards/TMC2209_eval.c **** void tmc2209_readRegister(uint8_t motor, uint8_t address, int32_t *value)
 102:boards/TMC2209_eval.c **** {
 103:boards/TMC2209_eval.c **** 	*value = tmc2209_readInt(motorToIC(motor), address);
 104:boards/TMC2209_eval.c **** }
 105:boards/TMC2209_eval.c **** 
 106:boards/TMC2209_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
 107:boards/TMC2209_eval.c **** {
 108:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 109:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 110:boards/TMC2209_eval.c **** 
 111:boards/TMC2209_eval.c **** 	StepDir_rotate(motor, velocity);
 112:boards/TMC2209_eval.c **** 
 113:boards/TMC2209_eval.c **** 	return TMC_ERROR_NONE;
 114:boards/TMC2209_eval.c **** }
 115:boards/TMC2209_eval.c **** 
 116:boards/TMC2209_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
 117:boards/TMC2209_eval.c **** {
 118:boards/TMC2209_eval.c **** 	return rotate(motor, velocity);
 119:boards/TMC2209_eval.c **** }
 120:boards/TMC2209_eval.c **** 
 121:boards/TMC2209_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
 122:boards/TMC2209_eval.c **** {
 123:boards/TMC2209_eval.c **** 	return rotate(motor, -velocity);
 124:boards/TMC2209_eval.c **** }
 125:boards/TMC2209_eval.c **** 
 126:boards/TMC2209_eval.c **** static uint32_t stop(uint8_t motor)
 127:boards/TMC2209_eval.c **** {
 128:boards/TMC2209_eval.c **** 	return rotate(motor, 0);
 129:boards/TMC2209_eval.c **** }
 130:boards/TMC2209_eval.c **** 
 131:boards/TMC2209_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
 132:boards/TMC2209_eval.c **** {
 133:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 134:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 135:boards/TMC2209_eval.c **** 
 136:boards/TMC2209_eval.c **** 	StepDir_moveTo(motor, position);
 137:boards/TMC2209_eval.c **** 
 138:boards/TMC2209_eval.c **** 	return TMC_ERROR_NONE;
 139:boards/TMC2209_eval.c **** }
 140:boards/TMC2209_eval.c **** 
 141:boards/TMC2209_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 142:boards/TMC2209_eval.c **** {
 143:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 144:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 145:boards/TMC2209_eval.c **** 
 146:boards/TMC2209_eval.c **** 	// determine actual position and add numbers of ticks to move
 147:boards/TMC2209_eval.c **** 	*ticks += StepDir_getActualPosition(motor);
 148:boards/TMC2209_eval.c **** 
 149:boards/TMC2209_eval.c **** 	return moveTo(motor, *ticks);
 150:boards/TMC2209_eval.c **** }
 151:boards/TMC2209_eval.c **** 
 152:boards/TMC2209_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 153:boards/TMC2209_eval.c **** {
 154:boards/TMC2209_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 155:boards/TMC2209_eval.c **** 	int32_t buffer = 0;
 156:boards/TMC2209_eval.c **** 
 157:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 158:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 159:boards/TMC2209_eval.c **** 
 160:boards/TMC2209_eval.c **** 	switch(type)
 161:boards/TMC2209_eval.c **** 	{
 162:boards/TMC2209_eval.c **** 	case 0:
 163:boards/TMC2209_eval.c **** 		// Target position
 164:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 165:boards/TMC2209_eval.c **** 			*value = StepDir_getTargetPosition(motor);
 166:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 167:boards/TMC2209_eval.c **** 			StepDir_moveTo(motor, *value);
 168:boards/TMC2209_eval.c **** 		}
 169:boards/TMC2209_eval.c **** 		break;
 170:boards/TMC2209_eval.c **** 	case 1:
 171:boards/TMC2209_eval.c **** 		// Actual position
 172:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 173:boards/TMC2209_eval.c **** 			*value = StepDir_getActualPosition(motor);
 174:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 175:boards/TMC2209_eval.c **** 			StepDir_setActualPosition(motor, *value);
 176:boards/TMC2209_eval.c **** 		}
 177:boards/TMC2209_eval.c **** 		break;
 178:boards/TMC2209_eval.c **** 	case 2:
 179:boards/TMC2209_eval.c **** 		// Target speed
 180:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 181:boards/TMC2209_eval.c **** 			*value = StepDir_getTargetVelocity(motor);
 182:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 183:boards/TMC2209_eval.c **** 			StepDir_rotate(motor, *value);
 184:boards/TMC2209_eval.c **** 		}
 185:boards/TMC2209_eval.c **** 		break;
 186:boards/TMC2209_eval.c **** 	case 3:
 187:boards/TMC2209_eval.c **** 		// Actual speed
 188:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 189:boards/TMC2209_eval.c **** 			*value = StepDir_getActualVelocity(motor);
 190:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 191:boards/TMC2209_eval.c **** 			errors |= TMC_ERROR_TYPE;
 192:boards/TMC2209_eval.c **** 		}
 193:boards/TMC2209_eval.c **** 		break;
 194:boards/TMC2209_eval.c **** 	case 4:
 195:boards/TMC2209_eval.c **** 		// Maximum speed
 196:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 197:boards/TMC2209_eval.c **** 			*value = StepDir_getVelocityMax(motor);
 198:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 199:boards/TMC2209_eval.c **** 			StepDir_setVelocityMax(motor, abs(*value));
 200:boards/TMC2209_eval.c **** 		}
 201:boards/TMC2209_eval.c **** 		break;
 202:boards/TMC2209_eval.c **** 	case 5:
 203:boards/TMC2209_eval.c **** 		// Maximum acceleration
 204:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 205:boards/TMC2209_eval.c **** 			*value = StepDir_getAcceleration(motor);
 206:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 207:boards/TMC2209_eval.c **** 			StepDir_setAcceleration(motor, *value);
 208:boards/TMC2209_eval.c **** 		}
 209:boards/TMC2209_eval.c **** 		break;
 210:boards/TMC2209_eval.c **** 	case 6:
 211:boards/TMC2209_eval.c **** 		// Maximum current
 212:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 213:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IRUN_MASK, TMC2209_IRU
 214:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 215:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IRUN_MASK, TMC2209_IRUN_SHIFT
 216:boards/TMC2209_eval.c **** 		}
 217:boards/TMC2209_eval.c **** 		break;
 218:boards/TMC2209_eval.c **** 	case 7:
 219:boards/TMC2209_eval.c **** 		// Standby current
 220:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 221:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IHOLD_MASK, TMC2209_IH
 222:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 223:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IHOLD_MASK, TMC2209_IHOLD_SHI
 224:boards/TMC2209_eval.c **** 		}
 225:boards/TMC2209_eval.c **** 		break;
 226:boards/TMC2209_eval.c **** 	case 8:
 227:boards/TMC2209_eval.c **** 		// Position reached flag
 228:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 229:boards/TMC2209_eval.c **** 			*value = (StepDir_getStatus(motor) & STATUS_TARGET_REACHED)? 1:0;
 230:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 231:boards/TMC2209_eval.c **** 			errors |= TMC_ERROR_TYPE;
 232:boards/TMC2209_eval.c **** 		}
 233:boards/TMC2209_eval.c **** 		break;
 234:boards/TMC2209_eval.c **** 	case 23:
 235:boards/TMC2209_eval.c **** 		// Speed threshold for high speed mode
 236:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 237:boards/TMC2209_eval.c **** 			buffer = thigh;
 238:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 239:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 240:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value) ? *value : 1));
 241:boards/TMC2209_eval.c **** 			thigh = *value;
 242:boards/TMC2209_eval.c **** 		}
 243:boards/TMC2209_eval.c **** 		break;
 244:boards/TMC2209_eval.c **** 	case 28:
 245:boards/TMC2209_eval.c **** 		// Internal RSense
 246:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 247:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_GCONF, TMC2209_INTERNAL_RSENSE_MASK, TMC22
 248:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 249:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_GCONF, TMC2209_INTERNAL_RSENSE_MASK, TMC2209_INTE
 250:boards/TMC2209_eval.c **** 		}
 251:boards/TMC2209_eval.c **** 		break;
 252:boards/TMC2209_eval.c **** 	case 29:
 253:boards/TMC2209_eval.c **** 		// Measured Speed
 254:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 255:boards/TMC2209_eval.c **** 			buffer = (int32_t)(((int64_t)StepDir_getFrequency(motor) * (int64_t)122) / (int64_t)TMC2209_FIEL
 256:boards/TMC2209_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 257:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 258:boards/TMC2209_eval.c **** 			errors |= TMC_ERROR_TYPE;
 259:boards/TMC2209_eval.c **** 		}
 260:boards/TMC2209_eval.c **** 		break;
 261:boards/TMC2209_eval.c **** 	case 50: // StepDir internal(0)/external(1)
 262:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 263:boards/TMC2209_eval.c **** 			*value = StepDir_getMode(motor);
 264:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 265:boards/TMC2209_eval.c **** 			StepDir_setMode(motor, *value);
 266:boards/TMC2209_eval.c **** 		}
 267:boards/TMC2209_eval.c **** 		break;
 268:boards/TMC2209_eval.c **** 	case 51: // StepDir interrupt frequency
 269:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 270:boards/TMC2209_eval.c **** 			*value = StepDir_getFrequency(motor);
 271:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 272:boards/TMC2209_eval.c **** 			StepDir_setFrequency(motor, *value);
 273:boards/TMC2209_eval.c **** 		}
 274:boards/TMC2209_eval.c **** 		break;
 275:boards/TMC2209_eval.c **** 	case 140:
 276:boards/TMC2209_eval.c **** 		// Microstep Resolution
 277:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 278:boards/TMC2209_eval.c **** 			*value = 256 >> TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_MRES_MASK, TMC220
 279:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 280:boards/TMC2209_eval.c **** 			switch(*value)
 281:boards/TMC2209_eval.c **** 			{
 282:boards/TMC2209_eval.c **** 			case 1:    *value = 8;   break;
 283:boards/TMC2209_eval.c **** 			case 2:    *value = 7;   break;
 284:boards/TMC2209_eval.c **** 			case 4:    *value = 6;   break;
 285:boards/TMC2209_eval.c **** 			case 8:    *value = 5;   break;
 286:boards/TMC2209_eval.c **** 			case 16:   *value = 4;   break;
 287:boards/TMC2209_eval.c **** 			case 32:   *value = 3;   break;
 288:boards/TMC2209_eval.c **** 			case 64:   *value = 2;   break;
 289:boards/TMC2209_eval.c **** 			case 128:  *value = 1;   break;
 290:boards/TMC2209_eval.c **** 			case 256:  *value = 0;   break;
 291:boards/TMC2209_eval.c **** 			default:   *value = -1;  break;
 292:boards/TMC2209_eval.c **** 			}
 293:boards/TMC2209_eval.c **** 
 294:boards/TMC2209_eval.c **** 			if(*value != -1)
 295:boards/TMC2209_eval.c **** 			{
 296:boards/TMC2209_eval.c **** 				TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_MRES_MASK, TMC2209_MRES_SHIFT,
 297:boards/TMC2209_eval.c **** 			}
 298:boards/TMC2209_eval.c **** 			else
 299:boards/TMC2209_eval.c **** 			{
 300:boards/TMC2209_eval.c **** 				errors |= TMC_ERROR_VALUE;
 301:boards/TMC2209_eval.c **** 			}
 302:boards/TMC2209_eval.c **** 		}
 303:boards/TMC2209_eval.c **** 		break;
 304:boards/TMC2209_eval.c **** 	case 162:
 305:boards/TMC2209_eval.c **** 		// Chopper blank time
 306:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 307:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TBL_MASK, TMC2209_TBL_SH
 308:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 309:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TBL_MASK, TMC2209_TBL_SHIFT, *v
 310:boards/TMC2209_eval.c **** 		}
 311:boards/TMC2209_eval.c **** 		break;
 312:boards/TMC2209_eval.c **** 	case 165:
 313:boards/TMC2209_eval.c **** 		// Chopper hysteresis end / fast decay time
 314:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 315:boards/TMC2209_eval.c **** 			if(tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) & (1<<14))
 316:boards/TMC2209_eval.c **** 			{
 317:boards/TMC2209_eval.c **** 				*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_HEND_MASK, TMC2209_HEND
 318:boards/TMC2209_eval.c **** 			}
 319:boards/TMC2209_eval.c **** 			else
 320:boards/TMC2209_eval.c **** 			{
 321:boards/TMC2209_eval.c **** 				buffer = tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF);
 322:boards/TMC2209_eval.c **** 				*value = (tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) >> 4) & 0x07;
 323:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 324:boards/TMC2209_eval.c **** 					*value |= 1<<3;
 325:boards/TMC2209_eval.c **** 			}
 326:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 327:boards/TMC2209_eval.c **** 			errors |= TMC_ERROR_TYPE;
 328:boards/TMC2209_eval.c **** 		}
 329:boards/TMC2209_eval.c **** 		break;
 330:boards/TMC2209_eval.c **** 	case 166:
 331:boards/TMC2209_eval.c **** 		// Chopper hysteresis start / sine wave offset
 332:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 333:boards/TMC2209_eval.c **** 			if(tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) & (1<<14))
 334:boards/TMC2209_eval.c **** 			{
 335:boards/TMC2209_eval.c **** 				*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_HSTRT_MASK, TMC2209_HST
 336:boards/TMC2209_eval.c **** 			}
 337:boards/TMC2209_eval.c **** 			else
 338:boards/TMC2209_eval.c **** 			{
 339:boards/TMC2209_eval.c **** 				buffer = tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF);
 340:boards/TMC2209_eval.c **** 				*value = (tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) >> 7) & 0x0F;
 341:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 342:boards/TMC2209_eval.c **** 					*value |= 1<<3;
 343:boards/TMC2209_eval.c **** 			}
 344:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 345:boards/TMC2209_eval.c **** 			if(tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) & (1<<14))
 346:boards/TMC2209_eval.c **** 			{
 347:boards/TMC2209_eval.c **** 				TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_HSTRT_MASK, TMC2209_HSTRT_SHIF
 348:boards/TMC2209_eval.c **** 			}
 349:boards/TMC2209_eval.c **** 			else
 350:boards/TMC2209_eval.c **** 			{
 351:boards/TMC2209_eval.c **** 				TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_HEND_MASK, TMC2209_HEND_SHIFT,
 352:boards/TMC2209_eval.c **** 			}
 353:boards/TMC2209_eval.c **** 		}
 354:boards/TMC2209_eval.c **** 		break;
 355:boards/TMC2209_eval.c **** 	case 167:
 356:boards/TMC2209_eval.c **** 		// Chopper off time
 357:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 358:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TOFF_MASK, TMC2209_TOFF_
 359:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 360:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TOFF_MASK, TMC2209_TOFF_SHIFT, 
 361:boards/TMC2209_eval.c **** 		}
 362:boards/TMC2209_eval.c **** 		break;
 363:boards/TMC2209_eval.c **** 	case 168:
 364:boards/TMC2209_eval.c **** 		// smartEnergy current minimum (SEIMIN)
 365:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 366:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEIMIN_MASK, TMC2209_SEI
 367:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 368:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEIMIN_MASK, TMC2209_SEIMIN_SHI
 369:boards/TMC2209_eval.c **** 		}
 370:boards/TMC2209_eval.c **** 		break;
 371:boards/TMC2209_eval.c **** 	case 169:
 372:boards/TMC2209_eval.c **** 		// smartEnergy current down step
 373:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 374:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEDN_MASK, TMC2209_SEDN_
 375:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 376:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEDN_MASK, TMC2209_SEDN_SHIFT, 
 377:boards/TMC2209_eval.c **** 		}
 378:boards/TMC2209_eval.c **** 		break;
 379:boards/TMC2209_eval.c **** 	case 170:
 380:boards/TMC2209_eval.c **** 		// smartEnergy hysteresis
 381:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 382:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMAX_MASK, TMC2209_SEMA
 383:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 384:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMAX_MASK, TMC2209_SEMAX_SHIFT
 385:boards/TMC2209_eval.c **** 		}
 386:boards/TMC2209_eval.c **** 		break;
 387:boards/TMC2209_eval.c **** 	case 171:
 388:boards/TMC2209_eval.c **** 		// smartEnergy current up step
 389:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 390:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEUP_MASK, TMC2209_SEUP_
 391:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 392:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEUP_MASK, TMC2209_SEUP_SHIFT, 
 393:boards/TMC2209_eval.c **** 		}
 394:boards/TMC2209_eval.c **** 		break;
 395:boards/TMC2209_eval.c **** 	case 172:
 396:boards/TMC2209_eval.c **** 		// smartEnergy hysteresis start
 397:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 398:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMIN_MASK, TMC2209_SEMI
 399:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 400:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMIN_MASK, TMC2209_SEMIN_SHIFT
 401:boards/TMC2209_eval.c **** 		}
 402:boards/TMC2209_eval.c **** 		break;
 403:boards/TMC2209_eval.c **** 	case 174:
 404:boards/TMC2209_eval.c **** 		// stallGuard2 threshold
 405:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 406:boards/TMC2209_eval.c **** 			*value = tmc2209_readInt(motorToIC(motor), TMC2209_SGTHRS);
 407:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 408:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_SGTHRS, *value);
 409:boards/TMC2209_eval.c **** 		}
 410:boards/TMC2209_eval.c **** 		break;
 411:boards/TMC2209_eval.c **** 	case 179:
 412:boards/TMC2209_eval.c **** 		// VSense
 413:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 414:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_VSENSE_MASK, TMC2209_VSE
 415:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 416:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_VSENSE_MASK, TMC2209_VSENSE_SHI
 417:boards/TMC2209_eval.c **** 		}
 418:boards/TMC2209_eval.c **** 		break;
 419:boards/TMC2209_eval.c **** 	case 180:
 420:boards/TMC2209_eval.c **** 		// smartEnergy actual current
 421:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 422:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_DRVSTATUS, TMC2209_CS_ACTUAL_MASK, TMC2209
 423:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 424:boards/TMC2209_eval.c **** 			errors |= TMC_ERROR_TYPE;
 425:boards/TMC2209_eval.c **** 		}
 426:boards/TMC2209_eval.c **** 		break;
 427:boards/TMC2209_eval.c **** 	case 181:
 428:boards/TMC2209_eval.c **** 		// smartEnergy stall velocity
 429:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 430:boards/TMC2209_eval.c **** 			*value = StepDir_getStallGuardThreshold(motor);
 431:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 432:boards/TMC2209_eval.c **** 			// Store the threshold value in the internal StepDir generator
 433:boards/TMC2209_eval.c **** 			StepDir_setStallGuardThreshold(motor, *value);
 434:boards/TMC2209_eval.c **** 
 435:boards/TMC2209_eval.c **** 			// Convert the value for the TCOOLTHRS register
 436:boards/TMC2209_eval.c **** 			// The IC only sends out Stallguard errors while TCOOLTHRS >= TSTEP >= TPWMTHRS
 437:boards/TMC2209_eval.c **** 			// The TSTEP value is measured. To prevent measurement inaccuracies hiding
 438:boards/TMC2209_eval.c **** 			// a stall signal, we decrease the needed velocity by roughly 12% before converting it.
 439:boards/TMC2209_eval.c **** 			*value -= (*value) >> 3;
 440:boards/TMC2209_eval.c **** 			if (*value)
 441:boards/TMC2209_eval.c **** 			{
 442:boards/TMC2209_eval.c **** 				*value = MIN(0x000FFFFF, (1<<24) / (*value));
 443:boards/TMC2209_eval.c **** 			}
 444:boards/TMC2209_eval.c **** 			else
 445:boards/TMC2209_eval.c **** 			{
 446:boards/TMC2209_eval.c **** 				*value = 0x000FFFFF;
 447:boards/TMC2209_eval.c **** 			}
 448:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_TCOOLTHRS, *value);
 449:boards/TMC2209_eval.c **** 		}
 450:boards/TMC2209_eval.c **** 		break;
 451:boards/TMC2209_eval.c **** 	case 182:
 452:boards/TMC2209_eval.c **** 		// smartEnergy threshold speed
 453:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 454:boards/TMC2209_eval.c **** 			buffer = tmc2209_readInt(motorToIC(motor), TMC2209_TCOOLTHRS);
 455:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 456:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 457:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value) ? *value : 1));
 458:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_TCOOLTHRS, *value);
 459:boards/TMC2209_eval.c **** 		}
 460:boards/TMC2209_eval.c **** 		break;
 461:boards/TMC2209_eval.c **** 	case 186:
 462:boards/TMC2209_eval.c **** 		// PWM threshold speed
 463:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 464:boards/TMC2209_eval.c **** 			buffer = tmc2209_readInt(motorToIC(motor), TMC2209_TPWMTHRS);
 465:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 466:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 467:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value) ? *value : 1));
 468:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_TPWMTHRS, *value);
 469:boards/TMC2209_eval.c **** 		}
 470:boards/TMC2209_eval.c **** 		break;
 471:boards/TMC2209_eval.c **** 	case 187:
 472:boards/TMC2209_eval.c **** 		// PWM gradient
 473:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 474:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_GRAD_MASK, TMC2209_PW
 475:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 476:boards/TMC2209_eval.c **** 			// Set gradient
 477:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_GRAD_MASK, TMC2209_PWM_GRAD_
 478:boards/TMC2209_eval.c **** 
 479:boards/TMC2209_eval.c **** 			// Enable/disable stealthChop accordingly
 480:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_GCONF, TMC2209_EN_SPREADCYCLE_MASK, TMC2209_EN_SP
 481:boards/TMC2209_eval.c **** 		}
 482:boards/TMC2209_eval.c **** 		break;
 483:boards/TMC2209_eval.c **** 	case 191:
 484:boards/TMC2209_eval.c **** 		// PWM frequency
 485:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 486:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_FREQ_MASK, TMC2209_PW
 487:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 488:boards/TMC2209_eval.c **** 			if(*value >= 0 && *value < 4)
 489:boards/TMC2209_eval.c **** 			{
 490:boards/TMC2209_eval.c **** 				TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_FREQ_MASK, TMC2209_PWM_FREQ
 491:boards/TMC2209_eval.c **** 			}
 492:boards/TMC2209_eval.c **** 			else
 493:boards/TMC2209_eval.c **** 			{
 494:boards/TMC2209_eval.c **** 				errors |= TMC_ERROR_VALUE;
 495:boards/TMC2209_eval.c **** 			}
 496:boards/TMC2209_eval.c **** 		}
 497:boards/TMC2209_eval.c **** 		break;
 498:boards/TMC2209_eval.c **** 	case 192:
 499:boards/TMC2209_eval.c **** 		// PWM autoscale
 500:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 501:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_AUTOSCALE_MASK, TMC22
 502:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 503:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_AUTOSCALE_MASK, TMC2209_PWM_
 504:boards/TMC2209_eval.c **** 		}
 505:boards/TMC2209_eval.c **** 		break;
 506:boards/TMC2209_eval.c **** 	case 204:
 507:boards/TMC2209_eval.c **** 		// Freewheeling mode
 508:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 509:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_FREEWHEEL_MASK, TMC2209_F
 510:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 511:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_PWMCONF, TMC2209_FREEWHEEL_MASK, TMC2209_FREEWHEE
 512:boards/TMC2209_eval.c **** 		}
 513:boards/TMC2209_eval.c **** 		break;
 514:boards/TMC2209_eval.c **** 	case 206:
 515:boards/TMC2209_eval.c **** 		// Load value
 516:boards/TMC2209_eval.c **** 		if(readWrite == READ) {
 517:boards/TMC2209_eval.c **** 			*value = tmc2209_readInt(motorToIC(motor), TMC2209_SG_RESULT);
 518:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 519:boards/TMC2209_eval.c **** 			errors |= TMC_ERROR_TYPE;
 520:boards/TMC2209_eval.c **** 		}
 521:boards/TMC2209_eval.c **** 		break;
 522:boards/TMC2209_eval.c **** 	default:
 523:boards/TMC2209_eval.c **** 		errors |= TMC_ERROR_TYPE;
 524:boards/TMC2209_eval.c **** 		break;
 525:boards/TMC2209_eval.c **** 	}
 526:boards/TMC2209_eval.c **** 
 527:boards/TMC2209_eval.c **** 	return errors;
 528:boards/TMC2209_eval.c **** }
 529:boards/TMC2209_eval.c **** 
 530:boards/TMC2209_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 531:boards/TMC2209_eval.c **** {
 532:boards/TMC2209_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 533:boards/TMC2209_eval.c **** }
 534:boards/TMC2209_eval.c **** 
 535:boards/TMC2209_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 536:boards/TMC2209_eval.c **** {
 537:boards/TMC2209_eval.c **** 	return handleParameter(READ, motor, type, value);
 538:boards/TMC2209_eval.c **** }
 539:boards/TMC2209_eval.c **** 
 540:boards/TMC2209_eval.c **** static void checkErrors(uint32_t tick)
 541:boards/TMC2209_eval.c **** {
  26              		.loc 1 541 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 542:boards/TMC2209_eval.c **** 	UNUSED(tick);
  31              		.loc 1 542 2 view .LVU1
 543:boards/TMC2209_eval.c **** 	Evalboards.ch2.errors = 0;
  32              		.loc 1 543 2 view .LVU2
  33              		.loc 1 543 24 is_stmt 0 view .LVU3
  34 0000 024B     		ldr	r3, .L2
  35 0002 0022     		movs	r2, #0
  36 0004 C3F88020 		str	r2, [r3, #128]
 544:boards/TMC2209_eval.c **** }
  37              		.loc 1 544 1 view .LVU4
  38 0008 7047     		bx	lr
  39              	.L3:
  40 000a 00BF     		.align	2
  41              	.L2:
  42 000c 00000000 		.word	Evalboards
  43              		.cfi_endproc
  44              	.LFE16:
  46              		.align	1
  47              		.global	tmc2209_writeRegister
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu softvfp
  53              	tmc2209_writeRegister:
  54              	.LVL1:
  55              	.LFB5:
  96:boards/TMC2209_eval.c **** 	tmc2209_writeInt(motorToIC(motor), address, value);
  56              		.loc 1 96 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  97:boards/TMC2209_eval.c **** 
  61              		.loc 1 97 2 view .LVU6
  62              	.LBB158:
  63              	.LBI158:
  63:boards/TMC2209_eval.c **** {
  64              		.loc 1 63 31 view .LVU7
  63:boards/TMC2209_eval.c **** {
  65              		.loc 1 63 31 is_stmt 0 view .LVU8
  66              	.LBE158:
  65:boards/TMC2209_eval.c **** 
  67              		.loc 1 65 2 is_stmt 1 view .LVU9
  67:boards/TMC2209_eval.c **** }
  68              		.loc 1 67 2 view .LVU10
  97:boards/TMC2209_eval.c **** 
  69              		.loc 1 97 2 is_stmt 0 view .LVU11
  70 0010 0148     		ldr	r0, .L5
  71              	.LVL2:
  97:boards/TMC2209_eval.c **** 
  72              		.loc 1 97 2 view .LVU12
  73 0012 FFF7FEBF 		b	tmc2209_writeInt
  74              	.LVL3:
  75              	.L6:
  97:boards/TMC2209_eval.c **** 
  76              		.loc 1 97 2 view .LVU13
  77 0016 00BF     		.align	2
  78              	.L5:
  79 0018 00000000 		.word	.LANCHOR0
  80              		.cfi_endproc
  81              	.LFE5:
  83              		.align	1
  84              		.global	tmc2209_readRegister
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
  90              	tmc2209_readRegister:
  91              	.LVL4:
  92              	.LFB6:
 102:boards/TMC2209_eval.c **** 	*value = tmc2209_readInt(motorToIC(motor), address);
  93              		.loc 1 102 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
 103:boards/TMC2209_eval.c **** }
  97              		.loc 1 103 2 view .LVU15
  98              	.LBB159:
  99              	.LBI159:
  63:boards/TMC2209_eval.c **** {
 100              		.loc 1 63 31 view .LVU16
  63:boards/TMC2209_eval.c **** {
 101              		.loc 1 63 31 is_stmt 0 view .LVU17
 102              	.LBE159:
  65:boards/TMC2209_eval.c **** 
 103              		.loc 1 65 2 is_stmt 1 view .LVU18
  67:boards/TMC2209_eval.c **** }
 104              		.loc 1 67 2 view .LVU19
 102:boards/TMC2209_eval.c **** 	*value = tmc2209_readInt(motorToIC(motor), address);
 105              		.loc 1 102 1 is_stmt 0 view .LVU20
 106 001c 10B5     		push	{r4, lr}
 107              	.LCFI0:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 103:boards/TMC2209_eval.c **** }
 111              		.loc 1 103 11 view .LVU21
 112 001e 0348     		ldr	r0, .L8
 113              	.LVL5:
 102:boards/TMC2209_eval.c **** 	*value = tmc2209_readInt(motorToIC(motor), address);
 114              		.loc 1 102 1 view .LVU22
 115 0020 1446     		mov	r4, r2
 103:boards/TMC2209_eval.c **** }
 116              		.loc 1 103 11 view .LVU23
 117 0022 FFF7FEFF 		bl	tmc2209_readInt
 118              	.LVL6:
 103:boards/TMC2209_eval.c **** }
 119              		.loc 1 103 9 view .LVU24
 120 0026 2060     		str	r0, [r4]
 104:boards/TMC2209_eval.c **** 
 121              		.loc 1 104 1 view .LVU25
 122 0028 10BD     		pop	{r4, pc}
 123              	.LVL7:
 124              	.L9:
 104:boards/TMC2209_eval.c **** 
 125              		.loc 1 104 1 view .LVU26
 126 002a 00BF     		.align	2
 127              	.L8:
 128 002c 00000000 		.word	.LANCHOR0
 129              		.cfi_endproc
 130              	.LFE6:
 132              		.align	1
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu softvfp
 138              	periodicJob:
 139              	.LVL8:
 140              	.LFB22:
 545:boards/TMC2209_eval.c **** 
 546:boards/TMC2209_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 547:boards/TMC2209_eval.c **** {
 548:boards/TMC2209_eval.c **** 	uint32_t errors = 0;
 549:boards/TMC2209_eval.c **** 	uint8_t state;
 550:boards/TMC2209_eval.c **** 	IOPinTypeDef *pin;
 551:boards/TMC2209_eval.c **** 
 552:boards/TMC2209_eval.c **** 	switch(type)
 553:boards/TMC2209_eval.c **** 	{
 554:boards/TMC2209_eval.c **** 	case 0:  // Read StepDir status bits
 555:boards/TMC2209_eval.c **** 		*value = StepDir_getStatus(motor);
 556:boards/TMC2209_eval.c **** 		break;
 557:boards/TMC2209_eval.c **** 	case 1:
 558:boards/TMC2209_eval.c **** 		tmc2209_set_slave(motorToIC(motor), (*value) & 0xFF);
 559:boards/TMC2209_eval.c **** 		break;
 560:boards/TMC2209_eval.c **** 	case 2:
 561:boards/TMC2209_eval.c **** 		*value = tmc2209_get_slave(motorToIC(motor));
 562:boards/TMC2209_eval.c **** 		break;
 563:boards/TMC2209_eval.c **** 	case 3:
 564:boards/TMC2209_eval.c **** 		*value = Timer.getDuty(TIMER_CHANNEL_3) * 100 / TIMER_MAX;
 565:boards/TMC2209_eval.c **** 		break;
 566:boards/TMC2209_eval.c **** 	case 4:
 567:boards/TMC2209_eval.c **** 		Timer.setDuty(TIMER_CHANNEL_3, (uint32_t) ((uint32_t)(*value) * (uint32_t)TIMER_MAX) / (uint32_t)
 568:boards/TMC2209_eval.c **** 		break;
 569:boards/TMC2209_eval.c **** 	case 5: // Set pin state
 570:boards/TMC2209_eval.c **** 		state = (*value) & 0x03;
 571:boards/TMC2209_eval.c **** 		pin = Pins.ENN;
 572:boards/TMC2209_eval.c **** 		switch(motor) {
 573:boards/TMC2209_eval.c **** 		case 0:
 574:boards/TMC2209_eval.c **** 			pin = Pins.ENN;
 575:boards/TMC2209_eval.c **** 			break;
 576:boards/TMC2209_eval.c **** 		case 1:
 577:boards/TMC2209_eval.c **** 			pin = Pins.SPREAD;
 578:boards/TMC2209_eval.c **** 			break;
 579:boards/TMC2209_eval.c **** 		case 2:
 580:boards/TMC2209_eval.c **** 			pin = Pins.MS1_AD0;
 581:boards/TMC2209_eval.c **** 			break;
 582:boards/TMC2209_eval.c **** 		case 3:
 583:boards/TMC2209_eval.c **** 			pin = Pins.MS2_AD1;
 584:boards/TMC2209_eval.c **** 			break;
 585:boards/TMC2209_eval.c **** 		case 4:
 586:boards/TMC2209_eval.c **** 			pin = Pins.UC_PWM;
 587:boards/TMC2209_eval.c **** 			break;
 588:boards/TMC2209_eval.c **** 		case 5:
 589:boards/TMC2209_eval.c **** 			pin = Pins.STDBY;
 590:boards/TMC2209_eval.c **** 			break;
 591:boards/TMC2209_eval.c **** 		}
 592:boards/TMC2209_eval.c **** 		HAL.IOs->config->setToState(pin, state);
 593:boards/TMC2209_eval.c **** 		break;
 594:boards/TMC2209_eval.c **** 	case 6: // Get pin state
 595:boards/TMC2209_eval.c **** 		pin = Pins.ENN;
 596:boards/TMC2209_eval.c **** 		switch(motor) {
 597:boards/TMC2209_eval.c **** 		case 0:
 598:boards/TMC2209_eval.c **** 			pin = Pins.ENN;
 599:boards/TMC2209_eval.c **** 			break;
 600:boards/TMC2209_eval.c **** 		case 1:
 601:boards/TMC2209_eval.c **** 			pin = Pins.SPREAD;
 602:boards/TMC2209_eval.c **** 			break;
 603:boards/TMC2209_eval.c **** 		case 2:
 604:boards/TMC2209_eval.c **** 			pin = Pins.MS1_AD0;
 605:boards/TMC2209_eval.c **** 			break;
 606:boards/TMC2209_eval.c **** 		case 3:
 607:boards/TMC2209_eval.c **** 			pin = Pins.MS2_AD1;
 608:boards/TMC2209_eval.c **** 			break;
 609:boards/TMC2209_eval.c **** 		case 4:
 610:boards/TMC2209_eval.c **** 			pin = Pins.UC_PWM;
 611:boards/TMC2209_eval.c **** 			break;
 612:boards/TMC2209_eval.c **** 		case 5:
 613:boards/TMC2209_eval.c **** 			pin = Pins.STDBY;
 614:boards/TMC2209_eval.c **** 			break;
 615:boards/TMC2209_eval.c **** 		}
 616:boards/TMC2209_eval.c **** 		*value = (uint32_t) HAL.IOs->config->getState(pin);
 617:boards/TMC2209_eval.c **** 		break;
 618:boards/TMC2209_eval.c **** 	default:
 619:boards/TMC2209_eval.c **** 		errors |= TMC_ERROR_TYPE;
 620:boards/TMC2209_eval.c **** 		break;
 621:boards/TMC2209_eval.c **** 	}
 622:boards/TMC2209_eval.c **** 
 623:boards/TMC2209_eval.c **** 	return errors;
 624:boards/TMC2209_eval.c **** }
 625:boards/TMC2209_eval.c **** 
 626:boards/TMC2209_eval.c **** static void deInit(void)
 627:boards/TMC2209_eval.c **** {
 628:boards/TMC2209_eval.c **** 	enableDriver(DRIVER_DISABLE);
 629:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.ENN);
 630:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.SPREAD);
 631:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.STEP);
 632:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 633:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.MS1_AD0);
 634:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.MS2_AD1);
 635:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.DIAG);
 636:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.INDEX);
 637:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.STDBY);
 638:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.UC_PWM);
 639:boards/TMC2209_eval.c **** 
 640:boards/TMC2209_eval.c **** 	StepDir_deInit();
 641:boards/TMC2209_eval.c **** 	Timer.deInit();
 642:boards/TMC2209_eval.c **** }
 643:boards/TMC2209_eval.c **** 
 644:boards/TMC2209_eval.c **** static uint8_t reset()
 645:boards/TMC2209_eval.c **** {
 646:boards/TMC2209_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 647:boards/TMC2209_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, Pins.DIAG);
 648:boards/TMC2209_eval.c **** 
 649:boards/TMC2209_eval.c **** 	return tmc2209_reset(&TMC2209);
 650:boards/TMC2209_eval.c **** }
 651:boards/TMC2209_eval.c **** 
 652:boards/TMC2209_eval.c **** static uint8_t restore()
 653:boards/TMC2209_eval.c **** {
 654:boards/TMC2209_eval.c **** 	return tmc2209_restore(&TMC2209);
 655:boards/TMC2209_eval.c **** }
 656:boards/TMC2209_eval.c **** 
 657:boards/TMC2209_eval.c **** static void enableDriver(DriverState state)
 658:boards/TMC2209_eval.c **** {
 659:boards/TMC2209_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 660:boards/TMC2209_eval.c **** 		state = Evalboards.driverEnable;
 661:boards/TMC2209_eval.c **** 
 662:boards/TMC2209_eval.c **** 	if(state == DRIVER_DISABLE)
 663:boards/TMC2209_eval.c **** 		HAL.IOs->config->setHigh(Pins.ENN);
 664:boards/TMC2209_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 665:boards/TMC2209_eval.c **** 		HAL.IOs->config->setLow(Pins.ENN);
 666:boards/TMC2209_eval.c **** }
 667:boards/TMC2209_eval.c **** 
 668:boards/TMC2209_eval.c **** static void periodicJob(uint32_t tick)
 669:boards/TMC2209_eval.c **** {
 141              		.loc 1 669 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 670:boards/TMC2209_eval.c **** 	tmc2209_periodicJob(&TMC2209, tick);
 145              		.loc 1 670 2 view .LVU28
 669:boards/TMC2209_eval.c **** 	tmc2209_periodicJob(&TMC2209, tick);
 146              		.loc 1 669 1 is_stmt 0 view .LVU29
 147 0030 08B5     		push	{r3, lr}
 148              	.LCFI1:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
 669:boards/TMC2209_eval.c **** 	tmc2209_periodicJob(&TMC2209, tick);
 152              		.loc 1 669 1 view .LVU30
 153 0032 0146     		mov	r1, r0
 154              		.loc 1 670 2 view .LVU31
 155 0034 0348     		ldr	r0, .L11
 156              	.LVL9:
 157              		.loc 1 670 2 view .LVU32
 158 0036 FFF7FEFF 		bl	tmc2209_periodicJob
 159              	.LVL10:
 671:boards/TMC2209_eval.c **** 	StepDir_periodicJob(0);
 160              		.loc 1 671 2 is_stmt 1 view .LVU33
 672:boards/TMC2209_eval.c **** }
 161              		.loc 1 672 1 is_stmt 0 view .LVU34
 162 003a BDE80840 		pop	{r3, lr}
 163              	.LCFI2:
 164              		.cfi_restore 14
 165              		.cfi_restore 3
 166              		.cfi_def_cfa_offset 0
 671:boards/TMC2209_eval.c **** 	StepDir_periodicJob(0);
 167              		.loc 1 671 2 view .LVU35
 168 003e 0020     		movs	r0, #0
 169 0040 FFF7FEBF 		b	StepDir_periodicJob
 170              	.LVL11:
 171              	.L12:
 172              		.align	2
 173              	.L11:
 174 0044 00000000 		.word	.LANCHOR0
 175              		.cfi_endproc
 176              	.LFE22:
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu softvfp
 184              	userFunction:
 185              	.LVL12:
 186              	.LFB17:
 547:boards/TMC2209_eval.c **** 	uint32_t errors = 0;
 187              		.loc 1 547 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 548:boards/TMC2209_eval.c **** 	uint8_t state;
 191              		.loc 1 548 2 view .LVU37
 549:boards/TMC2209_eval.c **** 	IOPinTypeDef *pin;
 192              		.loc 1 549 2 view .LVU38
 550:boards/TMC2209_eval.c **** 
 193              		.loc 1 550 2 view .LVU39
 552:boards/TMC2209_eval.c **** 	{
 194              		.loc 1 552 2 view .LVU40
 547:boards/TMC2209_eval.c **** 	uint32_t errors = 0;
 195              		.loc 1 547 1 is_stmt 0 view .LVU41
 196 0048 10B5     		push	{r4, lr}
 197              	.LCFI3:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 547:boards/TMC2209_eval.c **** 	uint32_t errors = 0;
 201              		.loc 1 547 1 view .LVU42
 202 004a 0B46     		mov	r3, r1
 203 004c 1446     		mov	r4, r2
 204 004e 0628     		cmp	r0, #6
 205 0050 6AD8     		bhi	.L37
 206 0052 DFE800F0 		tbb	[pc, r0]
 207              	.LVL13:
 208              	.L16:
 209 0056 04       		.byte	(.L22-.L16)/2
 210 0057 09       		.byte	(.L21-.L16)/2
 211 0058 0F       		.byte	(.L20-.L16)/2
 212 0059 13       		.byte	(.L19-.L16)/2
 213 005a 1B       		.byte	(.L18-.L16)/2
 214 005b 28       		.byte	(.L17-.L16)/2
 215 005c 4A       		.byte	(.L15-.L16)/2
 216 005d 00       		.p2align 1
 217              	.L22:
 555:boards/TMC2209_eval.c **** 		break;
 218              		.loc 1 555 3 is_stmt 1 view .LVU43
 555:boards/TMC2209_eval.c **** 		break;
 219              		.loc 1 555 12 is_stmt 0 view .LVU44
 220 005e 0846     		mov	r0, r1
 221              	.LVL14:
 555:boards/TMC2209_eval.c **** 		break;
 222              		.loc 1 555 12 view .LVU45
 223 0060 FFF7FEFF 		bl	StepDir_getStatus
 224              	.LVL15:
 225              	.L39:
 616:boards/TMC2209_eval.c **** 		break;
 226              		.loc 1 616 12 view .LVU46
 227 0064 2060     		str	r0, [r4]
 228 0066 03E0     		b	.L38
 229              	.LVL16:
 230              	.L21:
 558:boards/TMC2209_eval.c **** 		break;
 231              		.loc 1 558 3 is_stmt 1 view .LVU47
 232              	.LBB160:
 233              	.LBI160:
  63:boards/TMC2209_eval.c **** {
 234              		.loc 1 63 31 view .LVU48
  63:boards/TMC2209_eval.c **** {
 235              		.loc 1 63 31 is_stmt 0 view .LVU49
 236              	.LBE160:
  65:boards/TMC2209_eval.c **** 
 237              		.loc 1 65 2 is_stmt 1 view .LVU50
  67:boards/TMC2209_eval.c **** }
 238              		.loc 1 67 2 view .LVU51
 558:boards/TMC2209_eval.c **** 		break;
 239              		.loc 1 558 3 is_stmt 0 view .LVU52
 240 0068 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 241              	.LVL17:
 558:boards/TMC2209_eval.c **** 		break;
 242              		.loc 1 558 3 view .LVU53
 243 006a 3048     		ldr	r0, .L40
 244              	.LVL18:
 558:boards/TMC2209_eval.c **** 		break;
 245              		.loc 1 558 3 view .LVU54
 246 006c FFF7FEFF 		bl	tmc2209_set_slave
 247              	.LVL19:
 559:boards/TMC2209_eval.c **** 	case 2:
 248              		.loc 1 559 3 is_stmt 1 view .LVU55
 249              	.L38:
 617:boards/TMC2209_eval.c **** 	default:
 250              		.loc 1 617 3 view .LVU56
 548:boards/TMC2209_eval.c **** 	uint8_t state;
 251              		.loc 1 548 11 is_stmt 0 view .LVU57
 252 0070 0020     		movs	r0, #0
 253              	.LVL20:
 254              	.L13:
 624:boards/TMC2209_eval.c **** 
 255              		.loc 1 624 1 view .LVU58
 256 0072 10BD     		pop	{r4, pc}
 257              	.LVL21:
 258              	.L20:
 561:boards/TMC2209_eval.c **** 		break;
 259              		.loc 1 561 3 is_stmt 1 view .LVU59
 260              	.LBB161:
 261              	.LBI161:
  63:boards/TMC2209_eval.c **** {
 262              		.loc 1 63 31 view .LVU60
  63:boards/TMC2209_eval.c **** {
 263              		.loc 1 63 31 is_stmt 0 view .LVU61
 264              	.LBE161:
  65:boards/TMC2209_eval.c **** 
 265              		.loc 1 65 2 is_stmt 1 view .LVU62
  67:boards/TMC2209_eval.c **** }
 266              		.loc 1 67 2 view .LVU63
 561:boards/TMC2209_eval.c **** 		break;
 267              		.loc 1 561 12 is_stmt 0 view .LVU64
 268 0074 2D48     		ldr	r0, .L40
 269              	.LVL22:
 561:boards/TMC2209_eval.c **** 		break;
 270              		.loc 1 561 12 view .LVU65
 271 0076 FFF7FEFF 		bl	tmc2209_get_slave
 272              	.LVL23:
 561:boards/TMC2209_eval.c **** 		break;
 273              		.loc 1 561 12 view .LVU66
 274 007a F3E7     		b	.L39
 275              	.LVL24:
 276              	.L19:
 564:boards/TMC2209_eval.c **** 		break;
 277              		.loc 1 564 3 is_stmt 1 view .LVU67
 564:boards/TMC2209_eval.c **** 		break;
 278              		.loc 1 564 17 is_stmt 0 view .LVU68
 279 007c 2C4B     		ldr	r3, .L40+4
 564:boards/TMC2209_eval.c **** 		break;
 280              		.loc 1 564 12 view .LVU69
 281 007e 0220     		movs	r0, #2
 282              	.LVL25:
 564:boards/TMC2209_eval.c **** 		break;
 283              		.loc 1 564 12 view .LVU70
 284 0080 DB68     		ldr	r3, [r3, #12]
 285 0082 9847     		blx	r3
 286              	.LVL26:
 564:boards/TMC2209_eval.c **** 		break;
 287              		.loc 1 564 49 view .LVU71
 288 0084 5023     		movs	r3, #80
 289 0086 B0FBF3F0 		udiv	r0, r0, r3
 290 008a EBE7     		b	.L39
 291              	.LVL27:
 292              	.L18:
 567:boards/TMC2209_eval.c **** 		break;
 293              		.loc 1 567 3 is_stmt 1 view .LVU72
 567:boards/TMC2209_eval.c **** 		break;
 294              		.loc 1 567 34 is_stmt 0 view .LVU73
 295 008c 2368     		ldr	r3, [r4]
 296 008e 4FF4FA51 		mov	r1, #8000
 297              	.LVL28:
 567:boards/TMC2209_eval.c **** 		break;
 298              		.loc 1 567 34 view .LVU74
 299 0092 5943     		muls	r1, r3, r1
 567:boards/TMC2209_eval.c **** 		break;
 300              		.loc 1 567 88 view .LVU75
 301 0094 6423     		movs	r3, #100
 302 0096 B1FBF3F1 		udiv	r1, r1, r3
 567:boards/TMC2209_eval.c **** 		break;
 303              		.loc 1 567 8 view .LVU76
 304 009a 254B     		ldr	r3, .L40+4
 567:boards/TMC2209_eval.c **** 		break;
 305              		.loc 1 567 3 view .LVU77
 306 009c 89B2     		uxth	r1, r1
 307 009e 9B68     		ldr	r3, [r3, #8]
 308 00a0 0220     		movs	r0, #2
 309              	.LVL29:
 567:boards/TMC2209_eval.c **** 		break;
 310              		.loc 1 567 3 view .LVU78
 311 00a2 9847     		blx	r3
 312              	.LVL30:
 568:boards/TMC2209_eval.c **** 	case 5: // Set pin state
 313              		.loc 1 568 3 is_stmt 1 view .LVU79
 314 00a4 E4E7     		b	.L38
 315              	.LVL31:
 316              	.L17:
 570:boards/TMC2209_eval.c **** 		pin = Pins.ENN;
 317              		.loc 1 570 3 view .LVU80
 570:boards/TMC2209_eval.c **** 		pin = Pins.ENN;
 318              		.loc 1 570 20 is_stmt 0 view .LVU81
 319 00a6 2168     		ldr	r1, [r4]
 320              	.LVL32:
 571:boards/TMC2209_eval.c **** 		switch(motor) {
 321              		.loc 1 571 7 view .LVU82
 322 00a8 204A     		ldr	r2, .L40
 323 00aa 013B     		subs	r3, r3, #1
 324 00ac D2F88802 		ldr	r0, [r2, #648]
 325              	.LVL33:
 570:boards/TMC2209_eval.c **** 		pin = Pins.ENN;
 326              		.loc 1 570 9 view .LVU83
 327 00b0 01F00301 		and	r1, r1, #3
 328              	.LVL34:
 571:boards/TMC2209_eval.c **** 		switch(motor) {
 329              		.loc 1 571 3 is_stmt 1 view .LVU84
 572:boards/TMC2209_eval.c **** 		case 0:
 330              		.loc 1 572 3 view .LVU85
 331 00b4 042B     		cmp	r3, #4
 332 00b6 06D8     		bhi	.L23
 333 00b8 DFE803F0 		tbb	[pc, r3]
 334              	.LVL35:
 335              	.L25:
 336 00bc 03       		.byte	(.L29-.L25)/2
 337 00bd 0B       		.byte	(.L28-.L25)/2
 338 00be 0E       		.byte	(.L27-.L25)/2
 339 00bf 11       		.byte	(.L26-.L25)/2
 340 00c0 14       		.byte	(.L24-.L25)/2
 341 00c1 00       		.p2align 1
 342              	.L29:
 577:boards/TMC2209_eval.c **** 			break;
 343              		.loc 1 577 4 view .LVU86
 577:boards/TMC2209_eval.c **** 			break;
 344              		.loc 1 577 8 is_stmt 0 view .LVU87
 345 00c2 D2F88C02 		ldr	r0, [r2, #652]
 346              	.LVL36:
 578:boards/TMC2209_eval.c **** 		case 2:
 347              		.loc 1 578 4 is_stmt 1 view .LVU88
 348              	.L23:
 592:boards/TMC2209_eval.c **** 		break;
 349              		.loc 1 592 3 view .LVU89
 592:boards/TMC2209_eval.c **** 		break;
 350              		.loc 1 592 6 is_stmt 0 view .LVU90
 351 00c6 1B4B     		ldr	r3, .L40+8
 592:boards/TMC2209_eval.c **** 		break;
 352              		.loc 1 592 10 view .LVU91
 353 00c8 DB68     		ldr	r3, [r3, #12]
 592:boards/TMC2209_eval.c **** 		break;
 354              		.loc 1 592 18 view .LVU92
 355 00ca 1B68     		ldr	r3, [r3]
 592:boards/TMC2209_eval.c **** 		break;
 356              		.loc 1 592 3 view .LVU93
 357 00cc DB69     		ldr	r3, [r3, #28]
 358 00ce 9847     		blx	r3
 359              	.LVL37:
 593:boards/TMC2209_eval.c **** 	case 6: // Get pin state
 360              		.loc 1 593 3 is_stmt 1 view .LVU94
 361 00d0 CEE7     		b	.L38
 362              	.LVL38:
 363              	.L28:
 580:boards/TMC2209_eval.c **** 			break;
 364              		.loc 1 580 4 view .LVU95
 580:boards/TMC2209_eval.c **** 			break;
 365              		.loc 1 580 8 is_stmt 0 view .LVU96
 366 00d2 D2F89802 		ldr	r0, [r2, #664]
 367              	.LVL39:
 581:boards/TMC2209_eval.c **** 		case 3:
 368              		.loc 1 581 4 is_stmt 1 view .LVU97
 369 00d6 F6E7     		b	.L23
 370              	.L27:
 583:boards/TMC2209_eval.c **** 			break;
 371              		.loc 1 583 4 view .LVU98
 583:boards/TMC2209_eval.c **** 			break;
 372              		.loc 1 583 8 is_stmt 0 view .LVU99
 373 00d8 D2F89C02 		ldr	r0, [r2, #668]
 374              	.LVL40:
 584:boards/TMC2209_eval.c **** 		case 4:
 375              		.loc 1 584 4 is_stmt 1 view .LVU100
 376 00dc F3E7     		b	.L23
 377              	.L26:
 586:boards/TMC2209_eval.c **** 			break;
 378              		.loc 1 586 4 view .LVU101
 586:boards/TMC2209_eval.c **** 			break;
 379              		.loc 1 586 8 is_stmt 0 view .LVU102
 380 00de D2F8A802 		ldr	r0, [r2, #680]
 381              	.LVL41:
 587:boards/TMC2209_eval.c **** 		case 5:
 382              		.loc 1 587 4 is_stmt 1 view .LVU103
 383 00e2 F0E7     		b	.L23
 384              	.L24:
 589:boards/TMC2209_eval.c **** 			break;
 385              		.loc 1 589 4 view .LVU104
 589:boards/TMC2209_eval.c **** 			break;
 386              		.loc 1 589 8 is_stmt 0 view .LVU105
 387 00e4 D2F8AC02 		ldr	r0, [r2, #684]
 388              	.LVL42:
 590:boards/TMC2209_eval.c **** 		}
 389              		.loc 1 590 4 is_stmt 1 view .LVU106
 390 00e8 EDE7     		b	.L23
 391              	.LVL43:
 392              	.L15:
 595:boards/TMC2209_eval.c **** 		switch(motor) {
 393              		.loc 1 595 3 view .LVU107
 595:boards/TMC2209_eval.c **** 		switch(motor) {
 394              		.loc 1 595 7 is_stmt 0 view .LVU108
 395 00ea 104A     		ldr	r2, .L40
 396 00ec 4B1E     		subs	r3, r1, #1
 397 00ee D2F88802 		ldr	r0, [r2, #648]
 398              	.LVL44:
 596:boards/TMC2209_eval.c **** 		case 0:
 399              		.loc 1 596 3 is_stmt 1 view .LVU109
 400 00f2 042B     		cmp	r3, #4
 401 00f4 06D8     		bhi	.L30
 402 00f6 DFE803F0 		tbb	[pc, r3]
 403              	.LVL45:
 404              	.L32:
 405 00fa 03       		.byte	(.L36-.L32)/2
 406 00fb 0B       		.byte	(.L35-.L32)/2
 407 00fc 0E       		.byte	(.L34-.L32)/2
 408 00fd 11       		.byte	(.L33-.L32)/2
 409 00fe 14       		.byte	(.L31-.L32)/2
 410 00ff 00       		.p2align 1
 411              	.L36:
 601:boards/TMC2209_eval.c **** 			break;
 412              		.loc 1 601 4 view .LVU110
 601:boards/TMC2209_eval.c **** 			break;
 413              		.loc 1 601 8 is_stmt 0 view .LVU111
 414 0100 D2F88C02 		ldr	r0, [r2, #652]
 415              	.LVL46:
 602:boards/TMC2209_eval.c **** 		case 2:
 416              		.loc 1 602 4 is_stmt 1 view .LVU112
 417              	.L30:
 616:boards/TMC2209_eval.c **** 		break;
 418              		.loc 1 616 3 view .LVU113
 616:boards/TMC2209_eval.c **** 		break;
 419              		.loc 1 616 26 is_stmt 0 view .LVU114
 420 0104 0B4B     		ldr	r3, .L40+8
 616:boards/TMC2209_eval.c **** 		break;
 421              		.loc 1 616 30 view .LVU115
 422 0106 DB68     		ldr	r3, [r3, #12]
 616:boards/TMC2209_eval.c **** 		break;
 423              		.loc 1 616 38 view .LVU116
 424 0108 1B68     		ldr	r3, [r3]
 616:boards/TMC2209_eval.c **** 		break;
 425              		.loc 1 616 23 view .LVU117
 426 010a 1B6A     		ldr	r3, [r3, #32]
 427 010c 9847     		blx	r3
 428              	.LVL47:
 616:boards/TMC2209_eval.c **** 		break;
 429              		.loc 1 616 23 view .LVU118
 430 010e A9E7     		b	.L39
 431              	.LVL48:
 432              	.L35:
 604:boards/TMC2209_eval.c **** 			break;
 433              		.loc 1 604 4 is_stmt 1 view .LVU119
 604:boards/TMC2209_eval.c **** 			break;
 434              		.loc 1 604 8 is_stmt 0 view .LVU120
 435 0110 D2F89802 		ldr	r0, [r2, #664]
 436              	.LVL49:
 605:boards/TMC2209_eval.c **** 		case 3:
 437              		.loc 1 605 4 is_stmt 1 view .LVU121
 438 0114 F6E7     		b	.L30
 439              	.L34:
 607:boards/TMC2209_eval.c **** 			break;
 440              		.loc 1 607 4 view .LVU122
 607:boards/TMC2209_eval.c **** 			break;
 441              		.loc 1 607 8 is_stmt 0 view .LVU123
 442 0116 D2F89C02 		ldr	r0, [r2, #668]
 443              	.LVL50:
 608:boards/TMC2209_eval.c **** 		case 4:
 444              		.loc 1 608 4 is_stmt 1 view .LVU124
 445 011a F3E7     		b	.L30
 446              	.L33:
 610:boards/TMC2209_eval.c **** 			break;
 447              		.loc 1 610 4 view .LVU125
 610:boards/TMC2209_eval.c **** 			break;
 448              		.loc 1 610 8 is_stmt 0 view .LVU126
 449 011c D2F8A802 		ldr	r0, [r2, #680]
 450              	.LVL51:
 611:boards/TMC2209_eval.c **** 		case 5:
 451              		.loc 1 611 4 is_stmt 1 view .LVU127
 452 0120 F0E7     		b	.L30
 453              	.L31:
 613:boards/TMC2209_eval.c **** 			break;
 454              		.loc 1 613 4 view .LVU128
 613:boards/TMC2209_eval.c **** 			break;
 455              		.loc 1 613 8 is_stmt 0 view .LVU129
 456 0122 D2F8AC02 		ldr	r0, [r2, #684]
 457              	.LVL52:
 614:boards/TMC2209_eval.c **** 		}
 458              		.loc 1 614 4 is_stmt 1 view .LVU130
 459 0126 EDE7     		b	.L30
 460              	.LVL53:
 461              	.L37:
 548:boards/TMC2209_eval.c **** 	uint8_t state;
 462              		.loc 1 548 11 is_stmt 0 view .LVU131
 463 0128 0420     		movs	r0, #4
 464              	.LVL54:
 623:boards/TMC2209_eval.c **** }
 465              		.loc 1 623 2 is_stmt 1 view .LVU132
 623:boards/TMC2209_eval.c **** }
 466              		.loc 1 623 9 is_stmt 0 view .LVU133
 467 012a A2E7     		b	.L13
 468              	.L41:
 469              		.align	2
 470              	.L40:
 471 012c 00000000 		.word	.LANCHOR0
 472 0130 00000000 		.word	Timer
 473 0134 00000000 		.word	HAL
 474              		.cfi_endproc
 475              	.LFE17:
 477              		.align	1
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 481              		.fpu softvfp
 483              	moveTo:
 484              	.LVL55:
 485              	.LFB11:
 132:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 486              		.loc 1 132 1 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 133:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 490              		.loc 1 133 2 view .LVU135
 132:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 491              		.loc 1 132 1 is_stmt 0 view .LVU136
 492 0138 10B5     		push	{r4, lr}
 493              	.LCFI4:
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 4, -8
 496              		.cfi_offset 14, -4
 133:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 497              		.loc 1 133 4 view .LVU137
 498 013a 0446     		mov	r4, r0
 499 013c 18B9     		cbnz	r0, .L44
 136:boards/TMC2209_eval.c **** 
 500              		.loc 1 136 2 is_stmt 1 view .LVU138
 501 013e FFF7FEFF 		bl	StepDir_moveTo
 502              	.LVL56:
 138:boards/TMC2209_eval.c **** }
 503              		.loc 1 138 2 view .LVU139
 138:boards/TMC2209_eval.c **** }
 504              		.loc 1 138 9 is_stmt 0 view .LVU140
 505 0142 2046     		mov	r0, r4
 506              	.L42:
 139:boards/TMC2209_eval.c **** 
 507              		.loc 1 139 1 view .LVU141
 508 0144 10BD     		pop	{r4, pc}
 509              	.LVL57:
 510              	.L44:
 134:boards/TMC2209_eval.c **** 
 511              		.loc 1 134 10 view .LVU142
 512 0146 0820     		movs	r0, #8
 513              	.LVL58:
 134:boards/TMC2209_eval.c **** 
 514              		.loc 1 134 10 view .LVU143
 515 0148 FCE7     		b	.L42
 516              		.cfi_endproc
 517              	.LFE11:
 519              		.align	1
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu softvfp
 525              	rotate:
 526              	.LVL59:
 527              	.LFB7:
 107:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 528              		.loc 1 107 1 is_stmt 1 view -0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 108:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 532              		.loc 1 108 2 view .LVU145
 107:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 533              		.loc 1 107 1 is_stmt 0 view .LVU146
 534 014a 10B5     		push	{r4, lr}
 535              	.LCFI5:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 4, -8
 538              		.cfi_offset 14, -4
 108:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 539              		.loc 1 108 4 view .LVU147
 540 014c 0446     		mov	r4, r0
 541 014e 18B9     		cbnz	r0, .L47
 111:boards/TMC2209_eval.c **** 
 542              		.loc 1 111 2 is_stmt 1 view .LVU148
 543 0150 FFF7FEFF 		bl	StepDir_rotate
 544              	.LVL60:
 113:boards/TMC2209_eval.c **** }
 545              		.loc 1 113 2 view .LVU149
 113:boards/TMC2209_eval.c **** }
 546              		.loc 1 113 9 is_stmt 0 view .LVU150
 547 0154 2046     		mov	r0, r4
 548              	.L45:
 114:boards/TMC2209_eval.c **** 
 549              		.loc 1 114 1 view .LVU151
 550 0156 10BD     		pop	{r4, pc}
 551              	.LVL61:
 552              	.L47:
 109:boards/TMC2209_eval.c **** 
 553              		.loc 1 109 10 view .LVU152
 554 0158 0820     		movs	r0, #8
 555              	.LVL62:
 109:boards/TMC2209_eval.c **** 
 556              		.loc 1 109 10 view .LVU153
 557 015a FCE7     		b	.L45
 558              		.cfi_endproc
 559              	.LFE7:
 561              		.align	1
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu softvfp
 567              	stop:
 568              	.LVL63:
 569              	.LFB10:
 127:boards/TMC2209_eval.c **** 	return rotate(motor, 0);
 570              		.loc 1 127 1 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 128:boards/TMC2209_eval.c **** }
 575              		.loc 1 128 2 view .LVU155
 128:boards/TMC2209_eval.c **** }
 576              		.loc 1 128 9 is_stmt 0 view .LVU156
 577 015c 0021     		movs	r1, #0
 578 015e F4E7     		b	rotate
 579              	.LVL64:
 128:boards/TMC2209_eval.c **** }
 580              		.loc 1 128 9 view .LVU157
 581              		.cfi_endproc
 582              	.LFE10:
 584              		.align	1
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu softvfp
 590              	left:
 591              	.LVL65:
 592              	.LFB9:
 122:boards/TMC2209_eval.c **** 	return rotate(motor, -velocity);
 593              		.loc 1 122 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 123:boards/TMC2209_eval.c **** }
 598              		.loc 1 123 2 view .LVU159
 123:boards/TMC2209_eval.c **** }
 599              		.loc 1 123 9 is_stmt 0 view .LVU160
 600 0160 4942     		rsbs	r1, r1, #0
 601              	.LVL66:
 123:boards/TMC2209_eval.c **** }
 602              		.loc 1 123 9 view .LVU161
 603 0162 F2E7     		b	rotate
 604              	.LVL67:
 123:boards/TMC2209_eval.c **** }
 605              		.loc 1 123 9 view .LVU162
 606              		.cfi_endproc
 607              	.LFE9:
 609              		.align	1
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 613              		.fpu softvfp
 615              	right:
 616              	.LVL68:
 617              	.LFB8:
 117:boards/TMC2209_eval.c **** 	return rotate(motor, velocity);
 618              		.loc 1 117 1 is_stmt 1 view -0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 118:boards/TMC2209_eval.c **** }
 623              		.loc 1 118 2 view .LVU164
 118:boards/TMC2209_eval.c **** }
 624              		.loc 1 118 9 is_stmt 0 view .LVU165
 625 0164 F1E7     		b	rotate
 626              	.LVL69:
 118:boards/TMC2209_eval.c **** }
 627              		.loc 1 118 9 view .LVU166
 628              		.cfi_endproc
 629              	.LFE8:
 631              		.global	__aeabi_uldivmod
 632              		.global	__aeabi_ldivmod
 633              		.align	1
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu softvfp
 639              	handleParameter:
 640              	.LVL70:
 641              	.LFB13:
 153:boards/TMC2209_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 642              		.loc 1 153 1 is_stmt 1 view -0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 154:boards/TMC2209_eval.c **** 	int32_t buffer = 0;
 646              		.loc 1 154 2 view .LVU168
 155:boards/TMC2209_eval.c **** 
 647              		.loc 1 155 2 view .LVU169
 157:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 648              		.loc 1 157 2 view .LVU170
 153:boards/TMC2209_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 649              		.loc 1 153 1 is_stmt 0 view .LVU171
 650 0166 70B5     		push	{r4, r5, r6, lr}
 651              	.LCFI6:
 652              		.cfi_def_cfa_offset 16
 653              		.cfi_offset 4, -16
 654              		.cfi_offset 5, -12
 655              		.cfi_offset 6, -8
 656              		.cfi_offset 14, -4
 153:boards/TMC2209_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 657              		.loc 1 153 1 view .LVU172
 658 0168 0446     		mov	r4, r0
 659 016a 1D46     		mov	r5, r3
 157:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 660              		.loc 1 157 4 view .LVU173
 661 016c 0E46     		mov	r6, r1
 662 016e 0029     		cmp	r1, #0
 663 0170 40F06483 		bne	.L152
 160:boards/TMC2209_eval.c **** 	{
 664              		.loc 1 160 2 is_stmt 1 view .LVU174
 665 0174 CE2A     		cmp	r2, #206
 666 0176 0CD8     		bhi	.L168
 667 0178 A12A     		cmp	r2, #161
 668 017a 0CD8     		bhi	.L53
 669 017c 1D2A     		cmp	r2, #29
 670 017e 6BD9     		bls	.L169
 671 0180 332A     		cmp	r2, #51
 672 0182 00F06981 		beq	.L90
 673 0186 8C2A     		cmp	r2, #140
 674 0188 00F06F81 		beq	.L91
 675 018c 322A     		cmp	r2, #50
 676 018e 00F05A81 		beq	.L92
 677              	.LVL71:
 678              	.L168:
 191:boards/TMC2209_eval.c **** 		}
 679              		.loc 1 191 11 is_stmt 0 view .LVU175
 680 0192 0424     		movs	r4, #4
 681              	.LVL72:
 191:boards/TMC2209_eval.c **** 		}
 682              		.loc 1 191 11 view .LVU176
 683 0194 A6E0     		b	.L51
 684              	.LVL73:
 685              	.L53:
 191:boards/TMC2209_eval.c **** 		}
 686              		.loc 1 191 11 view .LVU177
 687 0196 A23A     		subs	r2, r2, #162
 688              	.LVL74:
 191:boards/TMC2209_eval.c **** 		}
 689              		.loc 1 191 11 view .LVU178
 690 0198 2C2A     		cmp	r2, #44
 691 019a FAD8     		bhi	.L168
 692 019c 01A3     		adr	r3, .L57
 693 019e 53F822F0 		ldr	pc, [r3, r2, lsl #2]
 694              	.LVL75:
 695 01a2 00BF     		.p2align 2
 696              	.L57:
 697 01a4 F9040000 		.word	.L76+1
 698 01a8 93010000 		.word	.L168+1
 699 01ac 93010000 		.word	.L168+1
 700 01b0 1B050000 		.word	.L75+1
 701 01b4 59050000 		.word	.L74+1
 702 01b8 D3050000 		.word	.L73+1
 703 01bc F7050000 		.word	.L72+1
 704 01c0 25060000 		.word	.L71+1
 705 01c4 47060000 		.word	.L70+1
 706 01c8 69060000 		.word	.L69+1
 707 01cc 8B060000 		.word	.L68+1
 708 01d0 93010000 		.word	.L168+1
 709 01d4 A5060000 		.word	.L67+1
 710 01d8 93010000 		.word	.L168+1
 711 01dc 93010000 		.word	.L168+1
 712 01e0 93010000 		.word	.L168+1
 713 01e4 93010000 		.word	.L168+1
 714 01e8 B7060000 		.word	.L66+1
 715 01ec D9060000 		.word	.L65+1
 716 01f0 ED060000 		.word	.L64+1
 717 01f4 1F070000 		.word	.L63+1
 718 01f8 93010000 		.word	.L168+1
 719 01fc 93010000 		.word	.L168+1
 720 0200 93010000 		.word	.L168+1
 721 0204 55070000 		.word	.L62+1
 722 0208 79070000 		.word	.L61+1
 723 020c 93010000 		.word	.L168+1
 724 0210 93010000 		.word	.L168+1
 725 0214 93010000 		.word	.L168+1
 726 0218 BB070000 		.word	.L60+1
 727 021c ED070000 		.word	.L59+1
 728 0220 93010000 		.word	.L168+1
 729 0224 93010000 		.word	.L168+1
 730 0228 93010000 		.word	.L168+1
 731 022c 93010000 		.word	.L168+1
 732 0230 93010000 		.word	.L168+1
 733 0234 93010000 		.word	.L168+1
 734 0238 93010000 		.word	.L168+1
 735 023c 93010000 		.word	.L168+1
 736 0240 93010000 		.word	.L168+1
 737 0244 93010000 		.word	.L168+1
 738 0248 93010000 		.word	.L168+1
 739 024c 11080000 		.word	.L58+1
 740 0250 93010000 		.word	.L168+1
 741 0254 33080000 		.word	.L56+1
 742              		.p2align 1
 743              	.L169:
 191:boards/TMC2209_eval.c **** 		}
 744              		.loc 1 191 11 view .LVU179
 745 0258 1D2A     		cmp	r2, #29
 746 025a 9AD8     		bhi	.L168
 747 025c 01A3     		adr	r3, .L78
 748 025e 53F822F0 		ldr	pc, [r3, r2, lsl #2]
 749              	.LVL76:
 750 0262 00BF     		.p2align 2
 751              	.L78:
 752 0264 DD020000 		.word	.L89+1
 753 0268 F5020000 		.word	.L88+1
 754 026c 07030000 		.word	.L87+1
 755 0270 19030000 		.word	.L86+1
 756 0274 25030000 		.word	.L85+1
 757 0278 3D030000 		.word	.L84+1
 758 027c 4F030000 		.word	.L83+1
 759 0280 7B030000 		.word	.L82+1
 760 0284 9D030000 		.word	.L81+1
 761 0288 93010000 		.word	.L168+1
 762 028c 93010000 		.word	.L168+1
 763 0290 93010000 		.word	.L168+1
 764 0294 93010000 		.word	.L168+1
 765 0298 93010000 		.word	.L168+1
 766 029c 93010000 		.word	.L168+1
 767 02a0 93010000 		.word	.L168+1
 768 02a4 93010000 		.word	.L168+1
 769 02a8 93010000 		.word	.L168+1
 770 02ac 93010000 		.word	.L168+1
 771 02b0 93010000 		.word	.L168+1
 772 02b4 93010000 		.word	.L168+1
 773 02b8 93010000 		.word	.L168+1
 774 02bc 93010000 		.word	.L168+1
 775 02c0 AD030000 		.word	.L80+1
 776 02c4 93010000 		.word	.L168+1
 777 02c8 93010000 		.word	.L168+1
 778 02cc 93010000 		.word	.L168+1
 779 02d0 93010000 		.word	.L168+1
 780 02d4 ED030000 		.word	.L79+1
 781 02d8 17040000 		.word	.L77+1
 782              		.p2align 1
 783              	.L89:
 164:boards/TMC2209_eval.c **** 			*value = StepDir_getTargetPosition(motor);
 784              		.loc 1 164 3 is_stmt 1 view .LVU180
 164:boards/TMC2209_eval.c **** 			*value = StepDir_getTargetPosition(motor);
 785              		.loc 1 164 5 is_stmt 0 view .LVU181
 786 02dc 20B9     		cbnz	r0, .L93
 165:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 787              		.loc 1 165 4 is_stmt 1 view .LVU182
 165:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 788              		.loc 1 165 13 is_stmt 0 view .LVU183
 789 02de FFF7FEFF 		bl	StepDir_getTargetPosition
 790              	.LVL77:
 791              	.L172:
 173:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 792              		.loc 1 173 11 view .LVU184
 793 02e2 2860     		str	r0, [r5]
 794              	.LVL78:
 795              	.L51:
 528:boards/TMC2209_eval.c **** 
 796              		.loc 1 528 1 view .LVU185
 797 02e4 2046     		mov	r0, r4
 798 02e6 70BD     		pop	{r4, r5, r6, pc}
 799              	.LVL79:
 800              	.L93:
 166:boards/TMC2209_eval.c **** 			StepDir_moveTo(motor, *value);
 801              		.loc 1 166 10 is_stmt 1 view .LVU186
 167:boards/TMC2209_eval.c **** 		}
 802              		.loc 1 167 4 view .LVU187
 803 02e8 2968     		ldr	r1, [r5]
 804              	.LVL80:
 167:boards/TMC2209_eval.c **** 		}
 805              		.loc 1 167 4 is_stmt 0 view .LVU188
 806 02ea 0020     		movs	r0, #0
 807              	.LVL81:
 167:boards/TMC2209_eval.c **** 		}
 808              		.loc 1 167 4 view .LVU189
 809 02ec FFF7FEFF 		bl	StepDir_moveTo
 810              	.LVL82:
 811              	.L173:
 154:boards/TMC2209_eval.c **** 	int32_t buffer = 0;
 812              		.loc 1 154 11 view .LVU190
 813 02f0 0024     		movs	r4, #0
 814 02f2 F7E7     		b	.L51
 815              	.LVL83:
 816              	.L88:
 172:boards/TMC2209_eval.c **** 			*value = StepDir_getActualPosition(motor);
 817              		.loc 1 172 3 is_stmt 1 view .LVU191
 172:boards/TMC2209_eval.c **** 			*value = StepDir_getActualPosition(motor);
 818              		.loc 1 172 5 is_stmt 0 view .LVU192
 819 02f4 10B9     		cbnz	r0, .L94
 173:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 820              		.loc 1 173 4 is_stmt 1 view .LVU193
 173:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 821              		.loc 1 173 13 is_stmt 0 view .LVU194
 822 02f6 FFF7FEFF 		bl	StepDir_getActualPosition
 823              	.LVL84:
 173:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 824              		.loc 1 173 13 view .LVU195
 825 02fa F2E7     		b	.L172
 826              	.LVL85:
 827              	.L94:
 174:boards/TMC2209_eval.c **** 			StepDir_setActualPosition(motor, *value);
 828              		.loc 1 174 10 is_stmt 1 view .LVU196
 175:boards/TMC2209_eval.c **** 		}
 829              		.loc 1 175 4 view .LVU197
 830 02fc 2968     		ldr	r1, [r5]
 831              	.LVL86:
 175:boards/TMC2209_eval.c **** 		}
 832              		.loc 1 175 4 is_stmt 0 view .LVU198
 833 02fe 0020     		movs	r0, #0
 834              	.LVL87:
 175:boards/TMC2209_eval.c **** 		}
 835              		.loc 1 175 4 view .LVU199
 836 0300 FFF7FEFF 		bl	StepDir_setActualPosition
 837              	.LVL88:
 175:boards/TMC2209_eval.c **** 		}
 838              		.loc 1 175 4 view .LVU200
 839 0304 F4E7     		b	.L173
 840              	.LVL89:
 841              	.L87:
 180:boards/TMC2209_eval.c **** 			*value = StepDir_getTargetVelocity(motor);
 842              		.loc 1 180 3 is_stmt 1 view .LVU201
 180:boards/TMC2209_eval.c **** 			*value = StepDir_getTargetVelocity(motor);
 843              		.loc 1 180 5 is_stmt 0 view .LVU202
 844 0306 10B9     		cbnz	r0, .L95
 181:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 845              		.loc 1 181 4 is_stmt 1 view .LVU203
 181:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 846              		.loc 1 181 13 is_stmt 0 view .LVU204
 847 0308 FFF7FEFF 		bl	StepDir_getTargetVelocity
 848              	.LVL90:
 181:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 849              		.loc 1 181 13 view .LVU205
 850 030c E9E7     		b	.L172
 851              	.LVL91:
 852              	.L95:
 182:boards/TMC2209_eval.c **** 			StepDir_rotate(motor, *value);
 853              		.loc 1 182 10 is_stmt 1 view .LVU206
 183:boards/TMC2209_eval.c **** 		}
 854              		.loc 1 183 4 view .LVU207
 855 030e 2968     		ldr	r1, [r5]
 856              	.LVL92:
 183:boards/TMC2209_eval.c **** 		}
 857              		.loc 1 183 4 is_stmt 0 view .LVU208
 858 0310 0020     		movs	r0, #0
 859              	.LVL93:
 183:boards/TMC2209_eval.c **** 		}
 860              		.loc 1 183 4 view .LVU209
 861 0312 FFF7FEFF 		bl	StepDir_rotate
 862              	.LVL94:
 183:boards/TMC2209_eval.c **** 		}
 863              		.loc 1 183 4 view .LVU210
 864 0316 EBE7     		b	.L173
 865              	.LVL95:
 866              	.L86:
 188:boards/TMC2209_eval.c **** 			*value = StepDir_getActualVelocity(motor);
 867              		.loc 1 188 3 is_stmt 1 view .LVU211
 188:boards/TMC2209_eval.c **** 			*value = StepDir_getActualVelocity(motor);
 868              		.loc 1 188 5 is_stmt 0 view .LVU212
 869 0318 0028     		cmp	r0, #0
 870 031a 7FF43AAF 		bne	.L168
 189:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 871              		.loc 1 189 4 is_stmt 1 view .LVU213
 189:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 872              		.loc 1 189 13 is_stmt 0 view .LVU214
 873 031e FFF7FEFF 		bl	StepDir_getActualVelocity
 874              	.LVL96:
 189:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 875              		.loc 1 189 13 view .LVU215
 876 0322 DEE7     		b	.L172
 877              	.LVL97:
 878              	.L85:
 196:boards/TMC2209_eval.c **** 			*value = StepDir_getVelocityMax(motor);
 879              		.loc 1 196 3 is_stmt 1 view .LVU216
 196:boards/TMC2209_eval.c **** 			*value = StepDir_getVelocityMax(motor);
 880              		.loc 1 196 5 is_stmt 0 view .LVU217
 881 0324 10B9     		cbnz	r0, .L96
 197:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 882              		.loc 1 197 4 is_stmt 1 view .LVU218
 197:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 883              		.loc 1 197 13 is_stmt 0 view .LVU219
 884 0326 FFF7FEFF 		bl	StepDir_getVelocityMax
 885              	.LVL98:
 197:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 886              		.loc 1 197 13 view .LVU220
 887 032a DAE7     		b	.L172
 888              	.LVL99:
 889              	.L96:
 198:boards/TMC2209_eval.c **** 			StepDir_setVelocityMax(motor, abs(*value));
 890              		.loc 1 198 10 is_stmt 1 view .LVU221
 199:boards/TMC2209_eval.c **** 		}
 891              		.loc 1 199 4 view .LVU222
 892 032c 2968     		ldr	r1, [r5]
 893              	.LVL100:
 199:boards/TMC2209_eval.c **** 		}
 894              		.loc 1 199 4 is_stmt 0 view .LVU223
 895 032e 0029     		cmp	r1, #0
 896 0330 B8BF     		it	lt
 897 0332 4942     		rsblt	r1, r1, #0
 898 0334 0020     		movs	r0, #0
 899              	.LVL101:
 199:boards/TMC2209_eval.c **** 		}
 900              		.loc 1 199 4 view .LVU224
 901 0336 FFF7FEFF 		bl	StepDir_setVelocityMax
 902              	.LVL102:
 199:boards/TMC2209_eval.c **** 		}
 903              		.loc 1 199 4 view .LVU225
 904 033a D9E7     		b	.L173
 905              	.LVL103:
 906              	.L84:
 204:boards/TMC2209_eval.c **** 			*value = StepDir_getAcceleration(motor);
 907              		.loc 1 204 3 is_stmt 1 view .LVU226
 204:boards/TMC2209_eval.c **** 			*value = StepDir_getAcceleration(motor);
 908              		.loc 1 204 5 is_stmt 0 view .LVU227
 909 033c 10B9     		cbnz	r0, .L97
 205:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 910              		.loc 1 205 4 is_stmt 1 view .LVU228
 205:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 911              		.loc 1 205 13 is_stmt 0 view .LVU229
 912 033e FFF7FEFF 		bl	StepDir_getAcceleration
 913              	.LVL104:
 205:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 914              		.loc 1 205 13 view .LVU230
 915 0342 CEE7     		b	.L172
 916              	.LVL105:
 917              	.L97:
 206:boards/TMC2209_eval.c **** 			StepDir_setAcceleration(motor, *value);
 918              		.loc 1 206 10 is_stmt 1 view .LVU231
 207:boards/TMC2209_eval.c **** 		}
 919              		.loc 1 207 4 view .LVU232
 920 0344 2968     		ldr	r1, [r5]
 921              	.LVL106:
 207:boards/TMC2209_eval.c **** 		}
 922              		.loc 1 207 4 is_stmt 0 view .LVU233
 923 0346 0020     		movs	r0, #0
 924              	.LVL107:
 207:boards/TMC2209_eval.c **** 		}
 925              		.loc 1 207 4 view .LVU234
 926 0348 FFF7FEFF 		bl	StepDir_setAcceleration
 927              	.LVL108:
 207:boards/TMC2209_eval.c **** 		}
 928              		.loc 1 207 4 view .LVU235
 929 034c D0E7     		b	.L173
 930              	.LVL109:
 931              	.L83:
 212:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IRUN_MASK, TMC2209_IRU
 932              		.loc 1 212 3 is_stmt 1 view .LVU236
 213:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 933              		.loc 1 213 13 is_stmt 0 view .LVU237
 934 034e B348     		ldr	r0, .L189
 935              	.LVL110:
 213:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 936              		.loc 1 213 13 view .LVU238
 937 0350 1021     		movs	r1, #16
 938              	.LVL111:
 212:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IRUN_MASK, TMC2209_IRU
 939              		.loc 1 212 5 view .LVU239
 940 0352 24B9     		cbnz	r4, .L98
 213:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 941              		.loc 1 213 4 is_stmt 1 view .LVU240
 942              	.LBB162:
 943              	.LBI162:
  63:boards/TMC2209_eval.c **** {
 944              		.loc 1 63 31 view .LVU241
 945              	.LVL112:
  63:boards/TMC2209_eval.c **** {
 946              		.loc 1 63 31 is_stmt 0 view .LVU242
 947              	.LBE162:
  65:boards/TMC2209_eval.c **** 
 948              		.loc 1 65 2 is_stmt 1 view .LVU243
  67:boards/TMC2209_eval.c **** }
 949              		.loc 1 67 2 view .LVU244
 213:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 950              		.loc 1 213 13 is_stmt 0 view .LVU245
 951 0354 FFF7FEFF 		bl	tmc2209_readInt
 952              	.LVL113:
 213:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 953              		.loc 1 213 13 view .LVU246
 954 0358 C0F30420 		ubfx	r0, r0, #8, #5
 955 035c C1E7     		b	.L172
 956              	.LVL114:
 957              	.L98:
 214:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IRUN_MASK, TMC2209_IRUN_SHIFT
 958              		.loc 1 214 10 is_stmt 1 view .LVU247
 215:boards/TMC2209_eval.c **** 		}
 959              		.loc 1 215 4 view .LVU248
 960              	.LBB163:
 961              	.LBI163:
  63:boards/TMC2209_eval.c **** {
 962              		.loc 1 63 31 view .LVU249
  63:boards/TMC2209_eval.c **** {
 963              		.loc 1 63 31 is_stmt 0 view .LVU250
 964              	.LBE163:
  65:boards/TMC2209_eval.c **** 
 965              		.loc 1 65 2 is_stmt 1 view .LVU251
  67:boards/TMC2209_eval.c **** }
 966              		.loc 1 67 2 view .LVU252
 967              	.LBB164:
 968              	.LBI164:
  63:boards/TMC2209_eval.c **** {
 969              		.loc 1 63 31 view .LVU253
  63:boards/TMC2209_eval.c **** {
 970              		.loc 1 63 31 is_stmt 0 view .LVU254
 971              	.LBE164:
  65:boards/TMC2209_eval.c **** 
 972              		.loc 1 65 2 is_stmt 1 view .LVU255
  67:boards/TMC2209_eval.c **** }
 973              		.loc 1 67 2 view .LVU256
 215:boards/TMC2209_eval.c **** 		}
 974              		.loc 1 215 4 is_stmt 0 view .LVU257
 975 035e FFF7FEFF 		bl	tmc2209_readInt
 976              	.LVL115:
 215:boards/TMC2209_eval.c **** 		}
 977              		.loc 1 215 4 view .LVU258
 978 0362 2B68     		ldr	r3, [r5]
 979 0364 1B02     		lsls	r3, r3, #8
 980 0366 03F4F853 		and	r3, r3, #7936
 981 036a 20F4F852 		bic	r2, r0, #7936
 982 036e 1A43     		orrs	r2, r2, r3
 983              	.LVL116:
 984              	.L184:
 223:boards/TMC2209_eval.c **** 		}
 985              		.loc 1 223 4 view .LVU259
 986 0370 1021     		movs	r1, #16
 987              	.L174:
 296:boards/TMC2209_eval.c **** 			}
 988              		.loc 1 296 5 view .LVU260
 989 0372 AA48     		ldr	r0, .L189
 990 0374 FFF7FEFF 		bl	tmc2209_writeInt
 991              	.LVL117:
 992 0378 BAE7     		b	.L173
 993              	.LVL118:
 994              	.L82:
 220:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IHOLD_MASK, TMC2209_IH
 995              		.loc 1 220 3 is_stmt 1 view .LVU261
 221:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 996              		.loc 1 221 13 is_stmt 0 view .LVU262
 997 037a A848     		ldr	r0, .L189
 998              	.LVL119:
 221:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 999              		.loc 1 221 13 view .LVU263
 1000 037c 1021     		movs	r1, #16
 1001              	.LVL120:
 220:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IHOLD_MASK, TMC2209_IH
 1002              		.loc 1 220 5 view .LVU264
 1003 037e 24B9     		cbnz	r4, .L99
 221:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1004              		.loc 1 221 4 is_stmt 1 view .LVU265
 1005              	.LBB165:
 1006              	.LBI165:
  63:boards/TMC2209_eval.c **** {
 1007              		.loc 1 63 31 view .LVU266
 1008              	.LVL121:
  63:boards/TMC2209_eval.c **** {
 1009              		.loc 1 63 31 is_stmt 0 view .LVU267
 1010              	.LBE165:
  65:boards/TMC2209_eval.c **** 
 1011              		.loc 1 65 2 is_stmt 1 view .LVU268
  67:boards/TMC2209_eval.c **** }
 1012              		.loc 1 67 2 view .LVU269
 221:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1013              		.loc 1 221 13 is_stmt 0 view .LVU270
 1014 0380 FFF7FEFF 		bl	tmc2209_readInt
 1015              	.LVL122:
 221:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1016              		.loc 1 221 13 view .LVU271
 1017 0384 00F01F00 		and	r0, r0, #31
 1018 0388 ABE7     		b	.L172
 1019              	.LVL123:
 1020              	.L99:
 222:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_IHOLD_IRUN, TMC2209_IHOLD_MASK, TMC2209_IHOLD_SHI
 1021              		.loc 1 222 10 is_stmt 1 view .LVU272
 223:boards/TMC2209_eval.c **** 		}
 1022              		.loc 1 223 4 view .LVU273
 1023              	.LBB166:
 1024              	.LBI166:
  63:boards/TMC2209_eval.c **** {
 1025              		.loc 1 63 31 view .LVU274
  63:boards/TMC2209_eval.c **** {
 1026              		.loc 1 63 31 is_stmt 0 view .LVU275
 1027              	.LBE166:
  65:boards/TMC2209_eval.c **** 
 1028              		.loc 1 65 2 is_stmt 1 view .LVU276
  67:boards/TMC2209_eval.c **** }
 1029              		.loc 1 67 2 view .LVU277
 1030              	.LBB167:
 1031              	.LBI167:
  63:boards/TMC2209_eval.c **** {
 1032              		.loc 1 63 31 view .LVU278
  63:boards/TMC2209_eval.c **** {
 1033              		.loc 1 63 31 is_stmt 0 view .LVU279
 1034              	.LBE167:
  65:boards/TMC2209_eval.c **** 
 1035              		.loc 1 65 2 is_stmt 1 view .LVU280
  67:boards/TMC2209_eval.c **** }
 1036              		.loc 1 67 2 view .LVU281
 223:boards/TMC2209_eval.c **** 		}
 1037              		.loc 1 223 4 is_stmt 0 view .LVU282
 1038 038a FFF7FEFF 		bl	tmc2209_readInt
 1039              	.LVL124:
 223:boards/TMC2209_eval.c **** 		}
 1040              		.loc 1 223 4 view .LVU283
 1041 038e 2A68     		ldr	r2, [r5]
 1042 0390 20F01F00 		bic	r0, r0, #31
 1043 0394 02F01F02 		and	r2, r2, #31
 1044 0398 0243     		orrs	r2, r2, r0
 1045 039a E9E7     		b	.L184
 1046              	.LVL125:
 1047              	.L81:
 228:boards/TMC2209_eval.c **** 			*value = (StepDir_getStatus(motor) & STATUS_TARGET_REACHED)? 1:0;
 1048              		.loc 1 228 3 is_stmt 1 view .LVU284
 228:boards/TMC2209_eval.c **** 			*value = (StepDir_getStatus(motor) & STATUS_TARGET_REACHED)? 1:0;
 1049              		.loc 1 228 5 is_stmt 0 view .LVU285
 1050 039c 0028     		cmp	r0, #0
 1051 039e 7FF4F8AE 		bne	.L168
 229:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1052              		.loc 1 229 4 is_stmt 1 view .LVU286
 229:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1053              		.loc 1 229 14 is_stmt 0 view .LVU287
 1054 03a2 FFF7FEFF 		bl	StepDir_getStatus
 1055              	.LVL126:
 229:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1056              		.loc 1 229 66 view .LVU288
 1057 03a6 C0F30010 		ubfx	r0, r0, #4, #1
 1058 03aa 9AE7     		b	.L172
 1059              	.LVL127:
 1060              	.L80:
 236:boards/TMC2209_eval.c **** 			buffer = thigh;
 1061              		.loc 1 236 3 is_stmt 1 view .LVU289
 1062 03ac 9B49     		ldr	r1, .L189
 1063              	.LVL128:
 236:boards/TMC2209_eval.c **** 			buffer = thigh;
 1064              		.loc 1 236 3 is_stmt 0 view .LVU290
 1065 03ae 9C48     		ldr	r0, .L189+4
 1066              	.LVL129:
 236:boards/TMC2209_eval.c **** 			buffer = thigh;
 1067              		.loc 1 236 5 view .LVU291
 1068 03b0 6CB9     		cbnz	r4, .L100
 237:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 1069              		.loc 1 237 4 is_stmt 1 view .LVU292
 237:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 1070              		.loc 1 237 11 is_stmt 0 view .LVU293
 1071 03b2 D1F8B032 		ldr	r3, [r1, #688]
 1072              	.LVL130:
 238:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1073              		.loc 1 238 4 is_stmt 1 view .LVU294
 238:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1074              		.loc 1 238 13 is_stmt 0 view .LVU295
 1075 03b6 002B     		cmp	r3, #0
 1076 03b8 08BF     		it	eq
 1077 03ba 0123     		moveq	r3, #1
 1078              	.LVL131:
 238:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1079              		.loc 1 238 13 view .LVU296
 1080 03bc 4FF08072 		mov	r2, #16777216
 1081              	.LVL132:
 238:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1082              		.loc 1 238 13 view .LVU297
 1083 03c0 92FBF3F3 		sdiv	r3, r2, r3
 1084              	.LVL133:
 1085              	.L178:
 465:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1086              		.loc 1 465 11 view .LVU298
 1087 03c4 9842     		cmp	r0, r3
 1088 03c6 D4BF     		ite	le
 1089 03c8 2860     		strle	r0, [r5]
 1090 03ca 2B60     		strgt	r3, [r5]
 1091 03cc 8AE7     		b	.L51
 1092              	.LVL134:
 1093              	.L100:
 239:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value) ? *value : 1));
 1094              		.loc 1 239 10 is_stmt 1 view .LVU299
 240:boards/TMC2209_eval.c **** 			thigh = *value;
 1095              		.loc 1 240 4 view .LVU300
 240:boards/TMC2209_eval.c **** 			thigh = *value;
 1096              		.loc 1 240 13 is_stmt 0 view .LVU301
 1097 03ce 2A68     		ldr	r2, [r5]
 1098              	.LVL135:
 240:boards/TMC2209_eval.c **** 			thigh = *value;
 1099              		.loc 1 240 13 view .LVU302
 1100 03d0 002A     		cmp	r2, #0
 1101 03d2 08BF     		it	eq
 1102 03d4 0122     		moveq	r2, #1
 1103 03d6 4FF08073 		mov	r3, #16777216
 1104 03da 93FBF2F3 		sdiv	r3, r3, r2
 1105 03de 8342     		cmp	r3, r0
 1106 03e0 A8BF     		it	ge
 1107 03e2 0346     		movge	r3, r0
 240:boards/TMC2209_eval.c **** 			thigh = *value;
 1108              		.loc 1 240 11 view .LVU303
 1109 03e4 2B60     		str	r3, [r5]
 241:boards/TMC2209_eval.c **** 		}
 1110              		.loc 1 241 4 is_stmt 1 view .LVU304
 241:boards/TMC2209_eval.c **** 		}
 1111              		.loc 1 241 10 is_stmt 0 view .LVU305
 1112 03e6 C1F8B032 		str	r3, [r1, #688]
 1113 03ea 81E7     		b	.L173
 1114              	.LVL136:
 1115              	.L79:
 246:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_GCONF, TMC2209_INTERNAL_RSENSE_MASK, TMC22
 1116              		.loc 1 246 3 is_stmt 1 view .LVU306
 246:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_GCONF, TMC2209_INTERNAL_RSENSE_MASK, TMC22
 1117              		.loc 1 246 5 is_stmt 0 view .LVU307
 1118 03ec 30B9     		cbnz	r0, .L103
 247:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1119              		.loc 1 247 4 is_stmt 1 view .LVU308
 1120              	.LBB168:
 1121              	.LBI168:
  63:boards/TMC2209_eval.c **** {
 1122              		.loc 1 63 31 view .LVU309
 1123              	.LVL137:
  63:boards/TMC2209_eval.c **** {
 1124              		.loc 1 63 31 is_stmt 0 view .LVU310
 1125              	.LBE168:
  65:boards/TMC2209_eval.c **** 
 1126              		.loc 1 65 2 is_stmt 1 view .LVU311
  67:boards/TMC2209_eval.c **** }
 1127              		.loc 1 67 2 view .LVU312
 247:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1128              		.loc 1 247 13 is_stmt 0 view .LVU313
 1129 03ee 0146     		mov	r1, r0
 1130              	.LVL138:
 247:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1131              		.loc 1 247 13 view .LVU314
 1132 03f0 8A48     		ldr	r0, .L189
 1133              	.LVL139:
 247:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1134              		.loc 1 247 13 view .LVU315
 1135 03f2 FFF7FEFF 		bl	tmc2209_readInt
 1136              	.LVL140:
 247:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1137              		.loc 1 247 13 view .LVU316
 1138 03f6 C0F34000 		ubfx	r0, r0, #1, #1
 1139 03fa 72E7     		b	.L172
 1140              	.LVL141:
 1141              	.L103:
 248:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_GCONF, TMC2209_INTERNAL_RSENSE_MASK, TMC2209_INTE
 1142              		.loc 1 248 10 is_stmt 1 view .LVU317
 249:boards/TMC2209_eval.c **** 		}
 1143              		.loc 1 249 4 view .LVU318
 1144              	.LBB169:
 1145              	.LBI169:
  63:boards/TMC2209_eval.c **** {
 1146              		.loc 1 63 31 view .LVU319
  63:boards/TMC2209_eval.c **** {
 1147              		.loc 1 63 31 is_stmt 0 view .LVU320
 1148              	.LBE169:
  65:boards/TMC2209_eval.c **** 
 1149              		.loc 1 65 2 is_stmt 1 view .LVU321
  67:boards/TMC2209_eval.c **** }
 1150              		.loc 1 67 2 view .LVU322
 1151              	.LBB170:
 1152              	.LBI170:
  63:boards/TMC2209_eval.c **** {
 1153              		.loc 1 63 31 view .LVU323
  63:boards/TMC2209_eval.c **** {
 1154              		.loc 1 63 31 is_stmt 0 view .LVU324
 1155              	.LBE170:
  65:boards/TMC2209_eval.c **** 
 1156              		.loc 1 65 2 is_stmt 1 view .LVU325
  67:boards/TMC2209_eval.c **** }
 1157              		.loc 1 67 2 view .LVU326
 249:boards/TMC2209_eval.c **** 		}
 1158              		.loc 1 249 4 is_stmt 0 view .LVU327
 1159 03fc 8748     		ldr	r0, .L189
 1160              	.LVL142:
 249:boards/TMC2209_eval.c **** 		}
 1161              		.loc 1 249 4 view .LVU328
 1162 03fe 0021     		movs	r1, #0
 1163              	.LVL143:
 249:boards/TMC2209_eval.c **** 		}
 1164              		.loc 1 249 4 view .LVU329
 1165 0400 FFF7FEFF 		bl	tmc2209_readInt
 1166              	.LVL144:
 249:boards/TMC2209_eval.c **** 		}
 1167              		.loc 1 249 4 view .LVU330
 1168 0404 2B68     		ldr	r3, [r5]
 1169 0406 5B00     		lsls	r3, r3, #1
 1170 0408 03F00203 		and	r3, r3, #2
 1171 040c 20F00202 		bic	r2, r0, #2
 1172 0410 1A43     		orrs	r2, r2, r3
 1173              	.LVL145:
 1174              	.L185:
 480:boards/TMC2209_eval.c **** 		}
 1175              		.loc 1 480 4 view .LVU331
 1176 0412 0021     		movs	r1, #0
 1177 0414 ADE7     		b	.L174
 1178              	.LVL146:
 1179              	.L77:
 254:boards/TMC2209_eval.c **** 			buffer = (int32_t)(((int64_t)StepDir_getFrequency(motor) * (int64_t)122) / (int64_t)TMC2209_FIEL
 1180              		.loc 1 254 3 is_stmt 1 view .LVU332
 254:boards/TMC2209_eval.c **** 			buffer = (int32_t)(((int64_t)StepDir_getFrequency(motor) * (int64_t)122) / (int64_t)TMC2209_FIEL
 1181              		.loc 1 254 5 is_stmt 0 view .LVU333
 1182 0416 0028     		cmp	r0, #0
 1183 0418 7FF4BBAE 		bne	.L168
 255:boards/TMC2209_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 1184              		.loc 1 255 4 is_stmt 1 view .LVU334
 255:boards/TMC2209_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 1185              		.loc 1 255 33 is_stmt 0 view .LVU335
 1186 041c FFF7FEFF 		bl	StepDir_getFrequency
 1187              	.LVL147:
 255:boards/TMC2209_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 1188              		.loc 1 255 88 view .LVU336
 1189 0420 1221     		movs	r1, #18
 255:boards/TMC2209_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 1190              		.loc 1 255 33 view .LVU337
 1191 0422 0646     		mov	r6, r0
 1192              	.LBB171:
 1193              	.LBI171:
  63:boards/TMC2209_eval.c **** {
 1194              		.loc 1 63 31 is_stmt 1 view .LVU338
 1195              	.LVL148:
  63:boards/TMC2209_eval.c **** {
 1196              		.loc 1 63 31 is_stmt 0 view .LVU339
 1197              	.LBE171:
  65:boards/TMC2209_eval.c **** 
 1198              		.loc 1 65 2 is_stmt 1 view .LVU340
  67:boards/TMC2209_eval.c **** }
 1199              		.loc 1 67 2 view .LVU341
 255:boards/TMC2209_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 1200              		.loc 1 255 88 is_stmt 0 view .LVU342
 1201 0424 7D48     		ldr	r0, .L189
 1202 0426 FFF7FEFF 		bl	tmc2209_readInt
 1203              	.LVL149:
 255:boards/TMC2209_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 1204              		.loc 1 255 79 view .LVU343
 1205 042a C0F31302 		ubfx	r2, r0, #0, #20
 255:boards/TMC2209_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 1206              		.loc 1 255 77 view .LVU344
 1207 042e 7A20     		movs	r0, #122
 1208 0430 D317     		asrs	r3, r2, #31
 1209 0432 A6FB0001 		umull	r0, r1, r6, r0
 1210 0436 FFF7FEFF 		bl	__aeabi_ldivmod
 1211              	.LVL150:
 256:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1212              		.loc 1 256 4 is_stmt 1 view .LVU345
 256:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1213              		.loc 1 256 26 is_stmt 0 view .LVU346
 1214 043a 00F11303 		add	r3, r0, #19
 256:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1215              		.loc 1 256 36 view .LVU347
 1216 043e 262B     		cmp	r3, #38
 1217 0440 98BF     		it	ls
 1218 0442 0020     		movls	r0, #0
 1219              	.LVL151:
 256:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1220              		.loc 1 256 36 view .LVU348
 1221 0444 4DE7     		b	.L172
 1222              	.LVL152:
 1223              	.L92:
 262:boards/TMC2209_eval.c **** 			*value = StepDir_getMode(motor);
 1224              		.loc 1 262 3 is_stmt 1 view .LVU349
 262:boards/TMC2209_eval.c **** 			*value = StepDir_getMode(motor);
 1225              		.loc 1 262 5 is_stmt 0 view .LVU350
 1226 0446 10B9     		cbnz	r0, .L105
 263:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1227              		.loc 1 263 4 is_stmt 1 view .LVU351
 263:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1228              		.loc 1 263 13 is_stmt 0 view .LVU352
 1229 0448 FFF7FEFF 		bl	StepDir_getMode
 1230              	.LVL153:
 263:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1231              		.loc 1 263 13 view .LVU353
 1232 044c 49E7     		b	.L172
 1233              	.LVL154:
 1234              	.L105:
 264:boards/TMC2209_eval.c **** 			StepDir_setMode(motor, *value);
 1235              		.loc 1 264 10 is_stmt 1 view .LVU354
 265:boards/TMC2209_eval.c **** 		}
 1236              		.loc 1 265 4 view .LVU355
 1237 044e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1238              	.LVL155:
 265:boards/TMC2209_eval.c **** 		}
 1239              		.loc 1 265 4 is_stmt 0 view .LVU356
 1240 0450 3046     		mov	r0, r6
 1241              	.LVL156:
 265:boards/TMC2209_eval.c **** 		}
 1242              		.loc 1 265 4 view .LVU357
 1243 0452 FFF7FEFF 		bl	StepDir_setMode
 1244              	.LVL157:
 265:boards/TMC2209_eval.c **** 		}
 1245              		.loc 1 265 4 view .LVU358
 1246 0456 4BE7     		b	.L173
 1247              	.LVL158:
 1248              	.L90:
 269:boards/TMC2209_eval.c **** 			*value = StepDir_getFrequency(motor);
 1249              		.loc 1 269 3 is_stmt 1 view .LVU359
 269:boards/TMC2209_eval.c **** 			*value = StepDir_getFrequency(motor);
 1250              		.loc 1 269 5 is_stmt 0 view .LVU360
 1251 0458 10B9     		cbnz	r0, .L106
 270:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1252              		.loc 1 270 4 is_stmt 1 view .LVU361
 270:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1253              		.loc 1 270 13 is_stmt 0 view .LVU362
 1254 045a FFF7FEFF 		bl	StepDir_getFrequency
 1255              	.LVL159:
 270:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1256              		.loc 1 270 13 view .LVU363
 1257 045e 40E7     		b	.L172
 1258              	.LVL160:
 1259              	.L106:
 271:boards/TMC2209_eval.c **** 			StepDir_setFrequency(motor, *value);
 1260              		.loc 1 271 10 is_stmt 1 view .LVU364
 272:boards/TMC2209_eval.c **** 		}
 1261              		.loc 1 272 4 view .LVU365
 1262 0460 1968     		ldr	r1, [r3]
 1263              	.LVL161:
 272:boards/TMC2209_eval.c **** 		}
 1264              		.loc 1 272 4 is_stmt 0 view .LVU366
 1265 0462 3046     		mov	r0, r6
 1266              	.LVL162:
 272:boards/TMC2209_eval.c **** 		}
 1267              		.loc 1 272 4 view .LVU367
 1268 0464 FFF7FEFF 		bl	StepDir_setFrequency
 1269              	.LVL163:
 272:boards/TMC2209_eval.c **** 		}
 1270              		.loc 1 272 4 view .LVU368
 1271 0468 42E7     		b	.L173
 1272              	.LVL164:
 1273              	.L91:
 277:boards/TMC2209_eval.c **** 			*value = 256 >> TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_MRES_MASK, TMC220
 1274              		.loc 1 277 3 is_stmt 1 view .LVU369
 277:boards/TMC2209_eval.c **** 			*value = 256 >> TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_MRES_MASK, TMC220
 1275              		.loc 1 277 5 is_stmt 0 view .LVU370
 1276 046a 48B9     		cbnz	r0, .L107
 278:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1277              		.loc 1 278 4 is_stmt 1 view .LVU371
 1278              	.LBB172:
 1279              	.LBI172:
  63:boards/TMC2209_eval.c **** {
 1280              		.loc 1 63 31 view .LVU372
 1281              	.LVL165:
  63:boards/TMC2209_eval.c **** {
 1282              		.loc 1 63 31 is_stmt 0 view .LVU373
 1283              	.LBE172:
  65:boards/TMC2209_eval.c **** 
 1284              		.loc 1 65 2 is_stmt 1 view .LVU374
  67:boards/TMC2209_eval.c **** }
 1285              		.loc 1 67 2 view .LVU375
 278:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1286              		.loc 1 278 20 is_stmt 0 view .LVU376
 1287 046c 6B48     		ldr	r0, .L189
 1288              	.LVL166:
 278:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1289              		.loc 1 278 20 view .LVU377
 1290 046e 6C21     		movs	r1, #108
 1291              	.LVL167:
 278:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1292              		.loc 1 278 20 view .LVU378
 1293 0470 FFF7FEFF 		bl	tmc2209_readInt
 1294              	.LVL168:
 278:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1295              		.loc 1 278 20 view .LVU379
 1296 0474 C0F30363 		ubfx	r3, r0, #24, #4
 278:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1297              		.loc 1 278 17 view .LVU380
 1298 0478 4FF48070 		mov	r0, #256
 1299 047c 1841     		asrs	r0, r0, r3
 1300 047e 30E7     		b	.L172
 1301              	.LVL169:
 1302              	.L107:
 279:boards/TMC2209_eval.c **** 			switch(*value)
 1303              		.loc 1 279 10 is_stmt 1 view .LVU381
 280:boards/TMC2209_eval.c **** 			{
 1304              		.loc 1 280 4 view .LVU382
 280:boards/TMC2209_eval.c **** 			{
 1305              		.loc 1 280 11 is_stmt 0 view .LVU383
 1306 0480 1B68     		ldr	r3, [r3]
 1307              	.LVL170:
 280:boards/TMC2209_eval.c **** 			{
 1308              		.loc 1 280 11 view .LVU384
 1309 0482 102B     		cmp	r3, #16
 1310 0484 30D0     		beq	.L108
 1311 0486 0ADC     		bgt	.L109
 1312 0488 013B     		subs	r3, r3, #1
 1313 048a 072B     		cmp	r3, #7
 1314 048c 0ED8     		bhi	.L110
 1315 048e 072B     		cmp	r3, #7
 1316 0490 0CD8     		bhi	.L110
 1317 0492 DFE803F0 		tbb	[pc, r3]
 1318              	.LVL171:
 1319              	.L112:
 1320 0496 15       		.byte	(.L115-.L112)/2
 1321 0497 23       		.byte	(.L114-.L112)/2
 1322 0498 0B       		.byte	(.L110-.L112)/2
 1323 0499 25       		.byte	(.L113-.L112)/2
 1324 049a 0B       		.byte	(.L110-.L112)/2
 1325 049b 0B       		.byte	(.L110-.L112)/2
 1326 049c 0B       		.byte	(.L110-.L112)/2
 1327 049d 27       		.byte	(.L111-.L112)/2
 1328              		.p2align 1
 1329              	.L109:
 280:boards/TMC2209_eval.c **** 			{
 1330              		.loc 1 280 11 view .LVU385
 1331 049e 802B     		cmp	r3, #128
 1332 04a0 28D0     		beq	.L116
 1333 04a2 08DC     		bgt	.L117
 1334 04a4 202B     		cmp	r3, #32
 1335 04a6 21D0     		beq	.L118
 1336 04a8 402B     		cmp	r3, #64
 1337 04aa 21D0     		beq	.L119
 1338              	.LVL172:
 1339              	.L110:
 291:boards/TMC2209_eval.c **** 			}
 1340              		.loc 1 291 15 is_stmt 1 view .LVU386
 291:boards/TMC2209_eval.c **** 			}
 1341              		.loc 1 291 22 is_stmt 0 view .LVU387
 1342 04ac 4FF0FF33 		mov	r3, #-1
 1343 04b0 2B60     		str	r3, [r5]
 291:boards/TMC2209_eval.c **** 			}
 1344              		.loc 1 291 29 is_stmt 1 view .LVU388
 294:boards/TMC2209_eval.c **** 			{
 1345              		.loc 1 294 4 view .LVU389
 1346              	.L166:
 494:boards/TMC2209_eval.c **** 			}
 1347              		.loc 1 494 12 is_stmt 0 view .LVU390
 1348 04b2 1024     		movs	r4, #16
 1349 04b4 16E7     		b	.L51
 1350              	.LVL173:
 1351              	.L117:
 494:boards/TMC2209_eval.c **** 			}
 1352              		.loc 1 494 12 view .LVU391
 1353 04b6 B3F5807F 		cmp	r3, #256
 1354 04ba F7D1     		bne	.L110
 290:boards/TMC2209_eval.c **** 			default:   *value = -1;  break;
 1355              		.loc 1 290 15 is_stmt 1 view .LVU392
 290:boards/TMC2209_eval.c **** 			default:   *value = -1;  break;
 1356              		.loc 1 290 22 is_stmt 0 view .LVU393
 1357 04bc 0023     		movs	r3, #0
 1358 04be 00E0     		b	.L171
 1359              	.LVL174:
 1360              	.L115:
 282:boards/TMC2209_eval.c **** 			case 2:    *value = 7;   break;
 1361              		.loc 1 282 15 is_stmt 1 view .LVU394
 282:boards/TMC2209_eval.c **** 			case 2:    *value = 7;   break;
 1362              		.loc 1 282 22 is_stmt 0 view .LVU395
 1363 04c0 0823     		movs	r3, #8
 1364              	.L171:
 290:boards/TMC2209_eval.c **** 			default:   *value = -1;  break;
 1365              		.loc 1 290 22 view .LVU396
 1366 04c2 2B60     		str	r3, [r5]
 290:boards/TMC2209_eval.c **** 			default:   *value = -1;  break;
 1367              		.loc 1 290 29 is_stmt 1 view .LVU397
 294:boards/TMC2209_eval.c **** 			{
 1368              		.loc 1 294 4 view .LVU398
 296:boards/TMC2209_eval.c **** 			}
 1369              		.loc 1 296 5 view .LVU399
 1370              	.LBB173:
 1371              	.LBI173:
  63:boards/TMC2209_eval.c **** {
 1372              		.loc 1 63 31 view .LVU400
 1373              	.LVL175:
  63:boards/TMC2209_eval.c **** {
 1374              		.loc 1 63 31 is_stmt 0 view .LVU401
 1375              	.LBE173:
  65:boards/TMC2209_eval.c **** 
 1376              		.loc 1 65 2 is_stmt 1 view .LVU402
  67:boards/TMC2209_eval.c **** }
 1377              		.loc 1 67 2 view .LVU403
 1378              	.LBB174:
 1379              	.LBI174:
  63:boards/TMC2209_eval.c **** {
 1380              		.loc 1 63 31 view .LVU404
  63:boards/TMC2209_eval.c **** {
 1381              		.loc 1 63 31 is_stmt 0 view .LVU405
 1382              	.LBE174:
  65:boards/TMC2209_eval.c **** 
 1383              		.loc 1 65 2 is_stmt 1 view .LVU406
  67:boards/TMC2209_eval.c **** }
 1384              		.loc 1 67 2 view .LVU407
 296:boards/TMC2209_eval.c **** 			}
 1385              		.loc 1 296 5 is_stmt 0 view .LVU408
 1386 04c4 5548     		ldr	r0, .L189
 1387              	.LVL176:
 296:boards/TMC2209_eval.c **** 			}
 1388              		.loc 1 296 5 view .LVU409
 1389 04c6 6C21     		movs	r1, #108
 1390              	.LVL177:
 296:boards/TMC2209_eval.c **** 			}
 1391              		.loc 1 296 5 view .LVU410
 1392 04c8 FFF7FEFF 		bl	tmc2209_readInt
 1393              	.LVL178:
 1394 04cc 2B68     		ldr	r3, [r5]
 1395 04ce 1B06     		lsls	r3, r3, #24
 1396 04d0 03F07063 		and	r3, r3, #251658240
 1397 04d4 20F07062 		bic	r2, r0, #251658240
 1398              	.LVL179:
 1399              	.L176:
 296:boards/TMC2209_eval.c **** 			}
 1400              		.loc 1 296 5 view .LVU411
 1401 04d8 1A43     		orrs	r2, r2, r3
 1402 04da 8AE0     		b	.L177
 1403              	.LVL180:
 1404              	.L114:
 283:boards/TMC2209_eval.c **** 			case 4:    *value = 6;   break;
 1405              		.loc 1 283 15 is_stmt 1 view .LVU412
 283:boards/TMC2209_eval.c **** 			case 4:    *value = 6;   break;
 1406              		.loc 1 283 22 is_stmt 0 view .LVU413
 1407 04dc 0723     		movs	r3, #7
 1408 04de F0E7     		b	.L171
 1409              	.L113:
 284:boards/TMC2209_eval.c **** 			case 8:    *value = 5;   break;
 1410              		.loc 1 284 15 is_stmt 1 view .LVU414
 284:boards/TMC2209_eval.c **** 			case 8:    *value = 5;   break;
 1411              		.loc 1 284 22 is_stmt 0 view .LVU415
 1412 04e0 0623     		movs	r3, #6
 1413 04e2 EEE7     		b	.L171
 1414              	.L111:
 285:boards/TMC2209_eval.c **** 			case 16:   *value = 4;   break;
 1415              		.loc 1 285 15 is_stmt 1 view .LVU416
 285:boards/TMC2209_eval.c **** 			case 16:   *value = 4;   break;
 1416              		.loc 1 285 22 is_stmt 0 view .LVU417
 1417 04e4 0523     		movs	r3, #5
 1418 04e6 ECE7     		b	.L171
 1419              	.LVL181:
 1420              	.L108:
 286:boards/TMC2209_eval.c **** 			case 32:   *value = 3;   break;
 1421              		.loc 1 286 15 is_stmt 1 view .LVU418
 286:boards/TMC2209_eval.c **** 			case 32:   *value = 3;   break;
 1422              		.loc 1 286 22 is_stmt 0 view .LVU419
 1423 04e8 0423     		movs	r3, #4
 1424 04ea EAE7     		b	.L171
 1425              	.L118:
 287:boards/TMC2209_eval.c **** 			case 64:   *value = 2;   break;
 1426              		.loc 1 287 15 is_stmt 1 view .LVU420
 287:boards/TMC2209_eval.c **** 			case 64:   *value = 2;   break;
 1427              		.loc 1 287 22 is_stmt 0 view .LVU421
 1428 04ec 0323     		movs	r3, #3
 1429 04ee E8E7     		b	.L171
 1430              	.L119:
 288:boards/TMC2209_eval.c **** 			case 128:  *value = 1;   break;
 1431              		.loc 1 288 15 is_stmt 1 view .LVU422
 288:boards/TMC2209_eval.c **** 			case 128:  *value = 1;   break;
 1432              		.loc 1 288 22 is_stmt 0 view .LVU423
 1433 04f0 0223     		movs	r3, #2
 1434 04f2 E6E7     		b	.L171
 1435              	.L116:
 289:boards/TMC2209_eval.c **** 			case 256:  *value = 0;   break;
 1436              		.loc 1 289 15 is_stmt 1 view .LVU424
 289:boards/TMC2209_eval.c **** 			case 256:  *value = 0;   break;
 1437              		.loc 1 289 22 is_stmt 0 view .LVU425
 1438 04f4 0123     		movs	r3, #1
 1439 04f6 E4E7     		b	.L171
 1440              	.LVL182:
 1441              	.L76:
 306:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TBL_MASK, TMC2209_TBL_SH
 1442              		.loc 1 306 3 is_stmt 1 view .LVU426
 307:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1443              		.loc 1 307 13 is_stmt 0 view .LVU427
 1444 04f8 4848     		ldr	r0, .L189
 1445              	.LVL183:
 307:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1446              		.loc 1 307 13 view .LVU428
 1447 04fa 6C21     		movs	r1, #108
 1448              	.LVL184:
 306:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TBL_MASK, TMC2209_TBL_SH
 1449              		.loc 1 306 5 view .LVU429
 1450 04fc 24B9     		cbnz	r4, .L122
 307:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1451              		.loc 1 307 4 is_stmt 1 view .LVU430
 1452              	.LBB175:
 1453              	.LBI175:
  63:boards/TMC2209_eval.c **** {
 1454              		.loc 1 63 31 view .LVU431
 1455              	.LVL185:
  63:boards/TMC2209_eval.c **** {
 1456              		.loc 1 63 31 is_stmt 0 view .LVU432
 1457              	.LBE175:
  65:boards/TMC2209_eval.c **** 
 1458              		.loc 1 65 2 is_stmt 1 view .LVU433
  67:boards/TMC2209_eval.c **** }
 1459              		.loc 1 67 2 view .LVU434
 307:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1460              		.loc 1 307 13 is_stmt 0 view .LVU435
 1461 04fe FFF7FEFF 		bl	tmc2209_readInt
 1462              	.LVL186:
 1463 0502 C0F3C130 		ubfx	r0, r0, #15, #2
 1464 0506 ECE6     		b	.L172
 1465              	.LVL187:
 1466              	.L122:
 308:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TBL_MASK, TMC2209_TBL_SHIFT, *v
 1467              		.loc 1 308 10 is_stmt 1 view .LVU436
 309:boards/TMC2209_eval.c **** 		}
 1468              		.loc 1 309 4 view .LVU437
 1469              	.LBB176:
 1470              	.LBI176:
  63:boards/TMC2209_eval.c **** {
 1471              		.loc 1 63 31 view .LVU438
  63:boards/TMC2209_eval.c **** {
 1472              		.loc 1 63 31 is_stmt 0 view .LVU439
 1473              	.LBE176:
  65:boards/TMC2209_eval.c **** 
 1474              		.loc 1 65 2 is_stmt 1 view .LVU440
  67:boards/TMC2209_eval.c **** }
 1475              		.loc 1 67 2 view .LVU441
 1476              	.LBB177:
 1477              	.LBI177:
  63:boards/TMC2209_eval.c **** {
 1478              		.loc 1 63 31 view .LVU442
  63:boards/TMC2209_eval.c **** {
 1479              		.loc 1 63 31 is_stmt 0 view .LVU443
 1480              	.LBE177:
  65:boards/TMC2209_eval.c **** 
 1481              		.loc 1 65 2 is_stmt 1 view .LVU444
  67:boards/TMC2209_eval.c **** }
 1482              		.loc 1 67 2 view .LVU445
 309:boards/TMC2209_eval.c **** 		}
 1483              		.loc 1 309 4 is_stmt 0 view .LVU446
 1484 0508 FFF7FEFF 		bl	tmc2209_readInt
 1485              	.LVL188:
 1486 050c 2B68     		ldr	r3, [r5]
 1487 050e DB03     		lsls	r3, r3, #15
 1488 0510 03F4C033 		and	r3, r3, #98304
 1489 0514 20F4C032 		bic	r2, r0, #98304
 1490 0518 DEE7     		b	.L176
 1491              	.LVL189:
 1492              	.L75:
 314:boards/TMC2209_eval.c **** 			if(tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) & (1<<14))
 1493              		.loc 1 314 3 is_stmt 1 view .LVU447
 314:boards/TMC2209_eval.c **** 			if(tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) & (1<<14))
 1494              		.loc 1 314 5 is_stmt 0 view .LVU448
 1495 051a 0028     		cmp	r0, #0
 1496 051c 7FF439AE 		bne	.L168
 315:boards/TMC2209_eval.c **** 			{
 1497              		.loc 1 315 4 is_stmt 1 view .LVU449
 1498              	.LBB178:
 1499              	.LBI178:
  63:boards/TMC2209_eval.c **** {
 1500              		.loc 1 63 31 view .LVU450
 1501              	.LVL190:
  63:boards/TMC2209_eval.c **** {
 1502              		.loc 1 63 31 is_stmt 0 view .LVU451
 1503              	.LBE178:
  65:boards/TMC2209_eval.c **** 
 1504              		.loc 1 65 2 is_stmt 1 view .LVU452
  67:boards/TMC2209_eval.c **** }
 1505              		.loc 1 67 2 view .LVU453
 315:boards/TMC2209_eval.c **** 			{
 1506              		.loc 1 315 7 is_stmt 0 view .LVU454
 1507 0520 6C21     		movs	r1, #108
 1508              	.LVL191:
 315:boards/TMC2209_eval.c **** 			{
 1509              		.loc 1 315 7 view .LVU455
 1510 0522 3E48     		ldr	r0, .L189
 1511              	.LVL192:
 315:boards/TMC2209_eval.c **** 			{
 1512              		.loc 1 315 7 view .LVU456
 1513 0524 FFF7FEFF 		bl	tmc2209_readInt
 1514              	.LVL193:
 315:boards/TMC2209_eval.c **** 			{
 1515              		.loc 1 315 6 view .LVU457
 1516 0528 10F4804F 		tst	r0, #16384
 317:boards/TMC2209_eval.c **** 			}
 1517              		.loc 1 317 14 view .LVU458
 1518 052c 4FF06C01 		mov	r1, #108
 1519 0530 3A48     		ldr	r0, .L189
 315:boards/TMC2209_eval.c **** 			{
 1520              		.loc 1 315 6 view .LVU459
 1521 0532 04D0     		beq	.L123
 317:boards/TMC2209_eval.c **** 			}
 1522              		.loc 1 317 5 is_stmt 1 view .LVU460
 1523              	.LBB179:
 1524              	.LBI179:
  63:boards/TMC2209_eval.c **** {
 1525              		.loc 1 63 31 view .LVU461
 1526              	.LVL194:
  63:boards/TMC2209_eval.c **** {
 1527              		.loc 1 63 31 is_stmt 0 view .LVU462
 1528              	.LBE179:
  65:boards/TMC2209_eval.c **** 
 1529              		.loc 1 65 2 is_stmt 1 view .LVU463
  67:boards/TMC2209_eval.c **** }
 1530              		.loc 1 67 2 view .LVU464
 317:boards/TMC2209_eval.c **** 			}
 1531              		.loc 1 317 14 is_stmt 0 view .LVU465
 1532 0534 FFF7FEFF 		bl	tmc2209_readInt
 1533              	.LVL195:
 1534 0538 C0F3C310 		ubfx	r0, r0, #7, #4
 1535 053c D1E6     		b	.L172
 1536              	.LVL196:
 1537              	.L123:
 321:boards/TMC2209_eval.c **** 				*value = (tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) >> 4) & 0x07;
 1538              		.loc 1 321 5 is_stmt 1 view .LVU466
 1539              	.LBB180:
 1540              	.LBI180:
  63:boards/TMC2209_eval.c **** {
 1541              		.loc 1 63 31 view .LVU467
  63:boards/TMC2209_eval.c **** {
 1542              		.loc 1 63 31 is_stmt 0 view .LVU468
 1543              	.LBE180:
  65:boards/TMC2209_eval.c **** 
 1544              		.loc 1 65 2 is_stmt 1 view .LVU469
  67:boards/TMC2209_eval.c **** }
 1545              		.loc 1 67 2 view .LVU470
 321:boards/TMC2209_eval.c **** 				*value = (tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) >> 4) & 0x07;
 1546              		.loc 1 321 14 is_stmt 0 view .LVU471
 1547 053e FFF7FEFF 		bl	tmc2209_readInt
 1548              	.LVL197:
 322:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1549              		.loc 1 322 15 view .LVU472
 1550 0542 6C21     		movs	r1, #108
 321:boards/TMC2209_eval.c **** 				*value = (tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) >> 4) & 0x07;
 1551              		.loc 1 321 14 view .LVU473
 1552 0544 0646     		mov	r6, r0
 1553              	.LVL198:
 322:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1554              		.loc 1 322 5 is_stmt 1 view .LVU474
 1555              	.LBB181:
 1556              	.LBI181:
  63:boards/TMC2209_eval.c **** {
 1557              		.loc 1 63 31 view .LVU475
  63:boards/TMC2209_eval.c **** {
 1558              		.loc 1 63 31 is_stmt 0 view .LVU476
 1559              	.LBE181:
  65:boards/TMC2209_eval.c **** 
 1560              		.loc 1 65 2 is_stmt 1 view .LVU477
  67:boards/TMC2209_eval.c **** }
 1561              		.loc 1 67 2 view .LVU478
 322:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1562              		.loc 1 322 15 is_stmt 0 view .LVU479
 1563 0546 3548     		ldr	r0, .L189
 1564              	.LVL199:
 322:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1565              		.loc 1 322 15 view .LVU480
 1566 0548 FFF7FEFF 		bl	tmc2209_readInt
 1567              	.LVL200:
 322:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1568              		.loc 1 322 73 view .LVU481
 1569 054c C0F30213 		ubfx	r3, r0, #4, #3
 1570              	.LVL201:
 1571              	.L182:
 323:boards/TMC2209_eval.c **** 					*value |= 1<<3;
 1572              		.loc 1 323 5 is_stmt 1 view .LVU482
 323:boards/TMC2209_eval.c **** 					*value |= 1<<3;
 1573              		.loc 1 323 7 is_stmt 0 view .LVU483
 1574 0550 3205     		lsls	r2, r6, #20
 1575 0552 1BD4     		bmi	.L127
 322:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1576              		.loc 1 322 12 view .LVU484
 1577 0554 2B60     		str	r3, [r5]
 1578 0556 CBE6     		b	.L173
 1579              	.LVL202:
 1580              	.L74:
 332:boards/TMC2209_eval.c **** 			if(tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) & (1<<14))
 1581              		.loc 1 332 3 is_stmt 1 view .LVU485
 333:boards/TMC2209_eval.c **** 			{
 1582              		.loc 1 333 7 is_stmt 0 view .LVU486
 1583 0558 3048     		ldr	r0, .L189
 1584              	.LVL203:
 333:boards/TMC2209_eval.c **** 			{
 1585              		.loc 1 333 7 view .LVU487
 1586 055a 6C21     		movs	r1, #108
 1587              	.LVL204:
 332:boards/TMC2209_eval.c **** 			if(tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) & (1<<14))
 1588              		.loc 1 332 5 view .LVU488
 1589 055c D4B9     		cbnz	r4, .L125
 333:boards/TMC2209_eval.c **** 			{
 1590              		.loc 1 333 4 is_stmt 1 view .LVU489
 1591              	.LBB182:
 1592              	.LBI182:
  63:boards/TMC2209_eval.c **** {
 1593              		.loc 1 63 31 view .LVU490
 1594              	.LVL205:
  63:boards/TMC2209_eval.c **** {
 1595              		.loc 1 63 31 is_stmt 0 view .LVU491
 1596              	.LBE182:
  65:boards/TMC2209_eval.c **** 
 1597              		.loc 1 65 2 is_stmt 1 view .LVU492
  67:boards/TMC2209_eval.c **** }
 1598              		.loc 1 67 2 view .LVU493
 333:boards/TMC2209_eval.c **** 			{
 1599              		.loc 1 333 7 is_stmt 0 view .LVU494
 1600 055e FFF7FEFF 		bl	tmc2209_readInt
 1601              	.LVL206:
 333:boards/TMC2209_eval.c **** 			{
 1602              		.loc 1 333 6 view .LVU495
 1603 0562 10F4804F 		tst	r0, #16384
 335:boards/TMC2209_eval.c **** 			}
 1604              		.loc 1 335 14 view .LVU496
 1605 0566 4FF06C01 		mov	r1, #108
 1606 056a 2C48     		ldr	r0, .L189
 333:boards/TMC2209_eval.c **** 			{
 1607              		.loc 1 333 6 view .LVU497
 1608 056c 04D0     		beq	.L126
 335:boards/TMC2209_eval.c **** 			}
 1609              		.loc 1 335 5 is_stmt 1 view .LVU498
 1610              	.LBB183:
 1611              	.LBI183:
  63:boards/TMC2209_eval.c **** {
 1612              		.loc 1 63 31 view .LVU499
 1613              	.LVL207:
  63:boards/TMC2209_eval.c **** {
 1614              		.loc 1 63 31 is_stmt 0 view .LVU500
 1615              	.LBE183:
  65:boards/TMC2209_eval.c **** 
 1616              		.loc 1 65 2 is_stmt 1 view .LVU501
  67:boards/TMC2209_eval.c **** }
 1617              		.loc 1 67 2 view .LVU502
 335:boards/TMC2209_eval.c **** 			}
 1618              		.loc 1 335 14 is_stmt 0 view .LVU503
 1619 056e FFF7FEFF 		bl	tmc2209_readInt
 1620              	.LVL208:
 1621 0572 C0F30210 		ubfx	r0, r0, #4, #3
 1622 0576 B4E6     		b	.L172
 1623              	.LVL209:
 1624              	.L126:
 339:boards/TMC2209_eval.c **** 				*value = (tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) >> 7) & 0x0F;
 1625              		.loc 1 339 5 is_stmt 1 view .LVU504
 1626              	.LBB184:
 1627              	.LBI184:
  63:boards/TMC2209_eval.c **** {
 1628              		.loc 1 63 31 view .LVU505
  63:boards/TMC2209_eval.c **** {
 1629              		.loc 1 63 31 is_stmt 0 view .LVU506
 1630              	.LBE184:
  65:boards/TMC2209_eval.c **** 
 1631              		.loc 1 65 2 is_stmt 1 view .LVU507
  67:boards/TMC2209_eval.c **** }
 1632              		.loc 1 67 2 view .LVU508
 339:boards/TMC2209_eval.c **** 				*value = (tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) >> 7) & 0x0F;
 1633              		.loc 1 339 14 is_stmt 0 view .LVU509
 1634 0578 FFF7FEFF 		bl	tmc2209_readInt
 1635              	.LVL210:
 340:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1636              		.loc 1 340 15 view .LVU510
 1637 057c 6C21     		movs	r1, #108
 339:boards/TMC2209_eval.c **** 				*value = (tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) >> 7) & 0x0F;
 1638              		.loc 1 339 14 view .LVU511
 1639 057e 0646     		mov	r6, r0
 1640              	.LVL211:
 340:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1641              		.loc 1 340 5 is_stmt 1 view .LVU512
 1642              	.LBB185:
 1643              	.LBI185:
  63:boards/TMC2209_eval.c **** {
 1644              		.loc 1 63 31 view .LVU513
  63:boards/TMC2209_eval.c **** {
 1645              		.loc 1 63 31 is_stmt 0 view .LVU514
 1646              	.LBE185:
  65:boards/TMC2209_eval.c **** 
 1647              		.loc 1 65 2 is_stmt 1 view .LVU515
  67:boards/TMC2209_eval.c **** }
 1648              		.loc 1 67 2 view .LVU516
 340:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1649              		.loc 1 340 15 is_stmt 0 view .LVU517
 1650 0580 2648     		ldr	r0, .L189
 1651              	.LVL212:
 340:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1652              		.loc 1 340 15 view .LVU518
 1653 0582 FFF7FEFF 		bl	tmc2209_readInt
 1654              	.LVL213:
 340:boards/TMC2209_eval.c **** 				if(buffer & (1<<11))
 1655              		.loc 1 340 73 view .LVU519
 1656 0586 C0F3C313 		ubfx	r3, r0, #7, #4
 341:boards/TMC2209_eval.c **** 					*value |= 1<<3;
 1657              		.loc 1 341 5 is_stmt 1 view .LVU520
 1658 058a E1E7     		b	.L182
 1659              	.LVL214:
 1660              	.L127:
 342:boards/TMC2209_eval.c **** 			}
 1661              		.loc 1 342 6 view .LVU521
 342:boards/TMC2209_eval.c **** 			}
 1662              		.loc 1 342 13 is_stmt 0 view .LVU522
 1663 058c 43F00803 		orr	r3, r3, #8
 1664 0590 2B60     		str	r3, [r5]
 1665 0592 A7E6     		b	.L51
 1666              	.LVL215:
 1667              	.L125:
 344:boards/TMC2209_eval.c **** 			if(tmc2209_readInt(motorToIC(motor), TMC2209_CHOPCONF) & (1<<14))
 1668              		.loc 1 344 10 is_stmt 1 view .LVU523
 345:boards/TMC2209_eval.c **** 			{
 1669              		.loc 1 345 4 view .LVU524
 1670              	.LBB186:
 1671              	.LBI186:
  63:boards/TMC2209_eval.c **** {
 1672              		.loc 1 63 31 view .LVU525
  63:boards/TMC2209_eval.c **** {
 1673              		.loc 1 63 31 is_stmt 0 view .LVU526
 1674              	.LBE186:
  65:boards/TMC2209_eval.c **** 
 1675              		.loc 1 65 2 is_stmt 1 view .LVU527
  67:boards/TMC2209_eval.c **** }
 1676              		.loc 1 67 2 view .LVU528
 345:boards/TMC2209_eval.c **** 			{
 1677              		.loc 1 345 7 is_stmt 0 view .LVU529
 1678 0594 FFF7FEFF 		bl	tmc2209_readInt
 1679              	.LVL216:
 345:boards/TMC2209_eval.c **** 			{
 1680              		.loc 1 345 6 view .LVU530
 1681 0598 10F48044 		ands	r4, r0, #16384
 347:boards/TMC2209_eval.c **** 			}
 1682              		.loc 1 347 5 view .LVU531
 1683 059c 4FF06C01 		mov	r1, #108
 1684 05a0 1E48     		ldr	r0, .L189
 345:boards/TMC2209_eval.c **** 			{
 1685              		.loc 1 345 6 view .LVU532
 1686 05a2 08D0     		beq	.L129
 347:boards/TMC2209_eval.c **** 			}
 1687              		.loc 1 347 5 is_stmt 1 view .LVU533
 1688              	.LBB187:
 1689              	.LBI187:
  63:boards/TMC2209_eval.c **** {
 1690              		.loc 1 63 31 view .LVU534
 1691              	.LVL217:
  63:boards/TMC2209_eval.c **** {
 1692              		.loc 1 63 31 is_stmt 0 view .LVU535
 1693              	.LBE187:
  65:boards/TMC2209_eval.c **** 
 1694              		.loc 1 65 2 is_stmt 1 view .LVU536
  67:boards/TMC2209_eval.c **** }
 1695              		.loc 1 67 2 view .LVU537
 1696              	.LBB188:
 1697              	.LBI188:
  63:boards/TMC2209_eval.c **** {
 1698              		.loc 1 63 31 view .LVU538
  63:boards/TMC2209_eval.c **** {
 1699              		.loc 1 63 31 is_stmt 0 view .LVU539
 1700              	.LBE188:
  65:boards/TMC2209_eval.c **** 
 1701              		.loc 1 65 2 is_stmt 1 view .LVU540
  67:boards/TMC2209_eval.c **** }
 1702              		.loc 1 67 2 view .LVU541
 347:boards/TMC2209_eval.c **** 			}
 1703              		.loc 1 347 5 is_stmt 0 view .LVU542
 1704 05a4 FFF7FEFF 		bl	tmc2209_readInt
 1705              	.LVL218:
 1706 05a8 2B68     		ldr	r3, [r5]
 1707 05aa 1B01     		lsls	r3, r3, #4
 1708 05ac 03F07003 		and	r3, r3, #112
 1709 05b0 20F07002 		bic	r2, r0, #112
 1710 05b4 90E7     		b	.L176
 1711              	.LVL219:
 1712              	.L129:
 351:boards/TMC2209_eval.c **** 			}
 1713              		.loc 1 351 5 is_stmt 1 view .LVU543
 1714              	.LBB189:
 1715              	.LBI189:
  63:boards/TMC2209_eval.c **** {
 1716              		.loc 1 63 31 view .LVU544
  63:boards/TMC2209_eval.c **** {
 1717              		.loc 1 63 31 is_stmt 0 view .LVU545
 1718              	.LBE189:
  65:boards/TMC2209_eval.c **** 
 1719              		.loc 1 65 2 is_stmt 1 view .LVU546
  67:boards/TMC2209_eval.c **** }
 1720              		.loc 1 67 2 view .LVU547
 1721              	.LBB190:
 1722              	.LBI190:
  63:boards/TMC2209_eval.c **** {
 1723              		.loc 1 63 31 view .LVU548
  63:boards/TMC2209_eval.c **** {
 1724              		.loc 1 63 31 is_stmt 0 view .LVU549
 1725              	.LBE190:
  65:boards/TMC2209_eval.c **** 
 1726              		.loc 1 65 2 is_stmt 1 view .LVU550
  67:boards/TMC2209_eval.c **** }
 1727              		.loc 1 67 2 view .LVU551
 351:boards/TMC2209_eval.c **** 			}
 1728              		.loc 1 351 5 is_stmt 0 view .LVU552
 1729 05b6 FFF7FEFF 		bl	tmc2209_readInt
 1730              	.LVL220:
 1731 05ba 2B68     		ldr	r3, [r5]
 1732 05bc DB01     		lsls	r3, r3, #7
 1733 05be 03F4F063 		and	r3, r3, #1920
 1734 05c2 20F4F062 		bic	r2, r0, #1920
 1735 05c6 1A43     		orrs	r2, r2, r3
 1736 05c8 1448     		ldr	r0, .L189
 1737 05ca 6C21     		movs	r1, #108
 1738 05cc FFF7FEFF 		bl	tmc2209_writeInt
 1739              	.LVL221:
 1740 05d0 88E6     		b	.L51
 1741              	.LVL222:
 1742              	.L73:
 357:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TOFF_MASK, TMC2209_TOFF_
 1743              		.loc 1 357 3 is_stmt 1 view .LVU553
 358:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1744              		.loc 1 358 13 is_stmt 0 view .LVU554
 1745 05d2 1248     		ldr	r0, .L189
 1746              	.LVL223:
 358:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1747              		.loc 1 358 13 view .LVU555
 1748 05d4 6C21     		movs	r1, #108
 1749              	.LVL224:
 357:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TOFF_MASK, TMC2209_TOFF_
 1750              		.loc 1 357 5 view .LVU556
 1751 05d6 24B9     		cbnz	r4, .L130
 1752              	.L180:
 398:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1753              		.loc 1 398 4 is_stmt 1 view .LVU557
 1754              	.LBB191:
 1755              	.LBI191:
  63:boards/TMC2209_eval.c **** {
 1756              		.loc 1 63 31 view .LVU558
 1757              	.LVL225:
  63:boards/TMC2209_eval.c **** {
 1758              		.loc 1 63 31 is_stmt 0 view .LVU559
 1759              	.LBE191:
  65:boards/TMC2209_eval.c **** 
 1760              		.loc 1 65 2 is_stmt 1 view .LVU560
  67:boards/TMC2209_eval.c **** }
 1761              		.loc 1 67 2 view .LVU561
 398:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1762              		.loc 1 398 13 is_stmt 0 view .LVU562
 1763 05d8 FFF7FEFF 		bl	tmc2209_readInt
 1764              	.LVL226:
 1765 05dc 00F00F00 		and	r0, r0, #15
 1766 05e0 7FE6     		b	.L172
 1767              	.LVL227:
 1768              	.L130:
 359:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_TOFF_MASK, TMC2209_TOFF_SHIFT, 
 1769              		.loc 1 359 10 is_stmt 1 view .LVU563
 360:boards/TMC2209_eval.c **** 		}
 1770              		.loc 1 360 4 view .LVU564
 1771              	.LBB192:
 1772              	.LBI192:
  63:boards/TMC2209_eval.c **** {
 1773              		.loc 1 63 31 view .LVU565
  63:boards/TMC2209_eval.c **** {
 1774              		.loc 1 63 31 is_stmt 0 view .LVU566
 1775              	.LBE192:
  65:boards/TMC2209_eval.c **** 
 1776              		.loc 1 65 2 is_stmt 1 view .LVU567
  67:boards/TMC2209_eval.c **** }
 1777              		.loc 1 67 2 view .LVU568
 1778              	.LBB193:
 1779              	.LBI193:
  63:boards/TMC2209_eval.c **** {
 1780              		.loc 1 63 31 view .LVU569
  63:boards/TMC2209_eval.c **** {
 1781              		.loc 1 63 31 is_stmt 0 view .LVU570
 1782              	.LBE193:
  65:boards/TMC2209_eval.c **** 
 1783              		.loc 1 65 2 is_stmt 1 view .LVU571
  67:boards/TMC2209_eval.c **** }
 1784              		.loc 1 67 2 view .LVU572
 360:boards/TMC2209_eval.c **** 		}
 1785              		.loc 1 360 4 is_stmt 0 view .LVU573
 1786 05e2 FFF7FEFF 		bl	tmc2209_readInt
 1787              	.LVL228:
 1788 05e6 2A68     		ldr	r2, [r5]
 1789 05e8 20F00F00 		bic	r0, r0, #15
 1790 05ec 02F00F02 		and	r2, r2, #15
 1791 05f0 0243     		orrs	r2, r2, r0
 1792              	.LVL229:
 1793              	.L177:
 296:boards/TMC2209_eval.c **** 			}
 1794              		.loc 1 296 5 view .LVU574
 1795 05f2 6C21     		movs	r1, #108
 1796 05f4 BDE6     		b	.L174
 1797              	.LVL230:
 1798              	.L72:
 365:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEIMIN_MASK, TMC2209_SEI
 1799              		.loc 1 365 3 is_stmt 1 view .LVU575
 366:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1800              		.loc 1 366 13 is_stmt 0 view .LVU576
 1801 05f6 0948     		ldr	r0, .L189
 1802              	.LVL231:
 366:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1803              		.loc 1 366 13 view .LVU577
 1804 05f8 4221     		movs	r1, #66
 1805              	.LVL232:
 365:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEIMIN_MASK, TMC2209_SEI
 1806              		.loc 1 365 5 view .LVU578
 1807 05fa 24B9     		cbnz	r4, .L131
 366:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1808              		.loc 1 366 4 is_stmt 1 view .LVU579
 1809              	.LBB194:
 1810              	.LBI194:
  63:boards/TMC2209_eval.c **** {
 1811              		.loc 1 63 31 view .LVU580
 1812              	.LVL233:
  63:boards/TMC2209_eval.c **** {
 1813              		.loc 1 63 31 is_stmt 0 view .LVU581
 1814              	.LBE194:
  65:boards/TMC2209_eval.c **** 
 1815              		.loc 1 65 2 is_stmt 1 view .LVU582
  67:boards/TMC2209_eval.c **** }
 1816              		.loc 1 67 2 view .LVU583
 366:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1817              		.loc 1 366 13 is_stmt 0 view .LVU584
 1818 05fc FFF7FEFF 		bl	tmc2209_readInt
 1819              	.LVL234:
 1820 0600 C0F3C030 		ubfx	r0, r0, #15, #1
 1821 0604 6DE6     		b	.L172
 1822              	.LVL235:
 1823              	.L131:
 367:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEIMIN_MASK, TMC2209_SEIMIN_SHI
 1824              		.loc 1 367 10 is_stmt 1 view .LVU585
 368:boards/TMC2209_eval.c **** 		}
 1825              		.loc 1 368 4 view .LVU586
 1826              	.LBB195:
 1827              	.LBI195:
  63:boards/TMC2209_eval.c **** {
 1828              		.loc 1 63 31 view .LVU587
  63:boards/TMC2209_eval.c **** {
 1829              		.loc 1 63 31 is_stmt 0 view .LVU588
 1830              	.LBE195:
  65:boards/TMC2209_eval.c **** 
 1831              		.loc 1 65 2 is_stmt 1 view .LVU589
  67:boards/TMC2209_eval.c **** }
 1832              		.loc 1 67 2 view .LVU590
 1833              	.LBB196:
 1834              	.LBI196:
  63:boards/TMC2209_eval.c **** {
 1835              		.loc 1 63 31 view .LVU591
  63:boards/TMC2209_eval.c **** {
 1836              		.loc 1 63 31 is_stmt 0 view .LVU592
 1837              	.LBE196:
  65:boards/TMC2209_eval.c **** 
 1838              		.loc 1 65 2 is_stmt 1 view .LVU593
  67:boards/TMC2209_eval.c **** }
 1839              		.loc 1 67 2 view .LVU594
 368:boards/TMC2209_eval.c **** 		}
 1840              		.loc 1 368 4 is_stmt 0 view .LVU595
 1841 0606 FFF7FEFF 		bl	tmc2209_readInt
 1842              	.LVL236:
 1843 060a 2B68     		ldr	r3, [r5]
 1844 060c DB03     		lsls	r3, r3, #15
 1845 060e 9BB2     		uxth	r3, r3
 1846 0610 20F40042 		bic	r2, r0, #32768
 1847              	.LVL237:
 1848              	.L188:
 376:boards/TMC2209_eval.c **** 		}
 1849              		.loc 1 376 4 view .LVU596
 1850 0614 1A43     		orrs	r2, r2, r3
 1851              	.L186:
 400:boards/TMC2209_eval.c **** 		}
 1852              		.loc 1 400 4 view .LVU597
 1853 0616 4221     		movs	r1, #66
 1854 0618 ABE6     		b	.L174
 1855              	.L190:
 1856 061a 00BF     		.align	2
 1857              	.L189:
 1858 061c 00000000 		.word	.LANCHOR0
 1859 0620 FFFF0F00 		.word	1048575
 1860              	.LVL238:
 1861              	.L71:
 373:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEDN_MASK, TMC2209_SEDN_
 1862              		.loc 1 373 3 is_stmt 1 view .LVU598
 374:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1863              		.loc 1 374 13 is_stmt 0 view .LVU599
 1864 0624 8648     		ldr	r0, .L191
 1865              	.LVL239:
 374:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1866              		.loc 1 374 13 view .LVU600
 1867 0626 4221     		movs	r1, #66
 1868              	.LVL240:
 373:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEDN_MASK, TMC2209_SEDN_
 1869              		.loc 1 373 5 view .LVU601
 1870 0628 24B9     		cbnz	r4, .L132
 374:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1871              		.loc 1 374 4 is_stmt 1 view .LVU602
 1872              	.LBB197:
 1873              	.LBI197:
  63:boards/TMC2209_eval.c **** {
 1874              		.loc 1 63 31 view .LVU603
 1875              	.LVL241:
  63:boards/TMC2209_eval.c **** {
 1876              		.loc 1 63 31 is_stmt 0 view .LVU604
 1877              	.LBE197:
  65:boards/TMC2209_eval.c **** 
 1878              		.loc 1 65 2 is_stmt 1 view .LVU605
  67:boards/TMC2209_eval.c **** }
 1879              		.loc 1 67 2 view .LVU606
 374:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1880              		.loc 1 374 13 is_stmt 0 view .LVU607
 1881 062a FFF7FEFF 		bl	tmc2209_readInt
 1882              	.LVL242:
 1883 062e C0F34130 		ubfx	r0, r0, #13, #2
 1884 0632 56E6     		b	.L172
 1885              	.LVL243:
 1886              	.L132:
 375:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEDN_MASK, TMC2209_SEDN_SHIFT, 
 1887              		.loc 1 375 10 is_stmt 1 view .LVU608
 376:boards/TMC2209_eval.c **** 		}
 1888              		.loc 1 376 4 view .LVU609
 1889              	.LBB198:
 1890              	.LBI198:
  63:boards/TMC2209_eval.c **** {
 1891              		.loc 1 63 31 view .LVU610
  63:boards/TMC2209_eval.c **** {
 1892              		.loc 1 63 31 is_stmt 0 view .LVU611
 1893              	.LBE198:
  65:boards/TMC2209_eval.c **** 
 1894              		.loc 1 65 2 is_stmt 1 view .LVU612
  67:boards/TMC2209_eval.c **** }
 1895              		.loc 1 67 2 view .LVU613
 1896              	.LBB199:
 1897              	.LBI199:
  63:boards/TMC2209_eval.c **** {
 1898              		.loc 1 63 31 view .LVU614
  63:boards/TMC2209_eval.c **** {
 1899              		.loc 1 63 31 is_stmt 0 view .LVU615
 1900              	.LBE199:
  65:boards/TMC2209_eval.c **** 
 1901              		.loc 1 65 2 is_stmt 1 view .LVU616
  67:boards/TMC2209_eval.c **** }
 1902              		.loc 1 67 2 view .LVU617
 376:boards/TMC2209_eval.c **** 		}
 1903              		.loc 1 376 4 is_stmt 0 view .LVU618
 1904 0634 FFF7FEFF 		bl	tmc2209_readInt
 1905              	.LVL244:
 1906 0638 2B68     		ldr	r3, [r5]
 1907 063a 5B03     		lsls	r3, r3, #13
 1908 063c 03F4C043 		and	r3, r3, #24576
 1909 0640 20F4C042 		bic	r2, r0, #24576
 1910 0644 E6E7     		b	.L188
 1911              	.LVL245:
 1912              	.L70:
 381:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMAX_MASK, TMC2209_SEMA
 1913              		.loc 1 381 3 is_stmt 1 view .LVU619
 382:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1914              		.loc 1 382 13 is_stmt 0 view .LVU620
 1915 0646 7E48     		ldr	r0, .L191
 1916              	.LVL246:
 382:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1917              		.loc 1 382 13 view .LVU621
 1918 0648 4221     		movs	r1, #66
 1919              	.LVL247:
 381:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMAX_MASK, TMC2209_SEMA
 1920              		.loc 1 381 5 view .LVU622
 1921 064a 24B9     		cbnz	r4, .L133
 382:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1922              		.loc 1 382 4 is_stmt 1 view .LVU623
 1923              	.LBB200:
 1924              	.LBI200:
  63:boards/TMC2209_eval.c **** {
 1925              		.loc 1 63 31 view .LVU624
 1926              	.LVL248:
  63:boards/TMC2209_eval.c **** {
 1927              		.loc 1 63 31 is_stmt 0 view .LVU625
 1928              	.LBE200:
  65:boards/TMC2209_eval.c **** 
 1929              		.loc 1 65 2 is_stmt 1 view .LVU626
  67:boards/TMC2209_eval.c **** }
 1930              		.loc 1 67 2 view .LVU627
 382:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1931              		.loc 1 382 13 is_stmt 0 view .LVU628
 1932 064c FFF7FEFF 		bl	tmc2209_readInt
 1933              	.LVL249:
 1934 0650 C0F30320 		ubfx	r0, r0, #8, #4
 1935 0654 45E6     		b	.L172
 1936              	.LVL250:
 1937              	.L133:
 383:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMAX_MASK, TMC2209_SEMAX_SHIFT
 1938              		.loc 1 383 10 is_stmt 1 view .LVU629
 384:boards/TMC2209_eval.c **** 		}
 1939              		.loc 1 384 4 view .LVU630
 1940              	.LBB201:
 1941              	.LBI201:
  63:boards/TMC2209_eval.c **** {
 1942              		.loc 1 63 31 view .LVU631
  63:boards/TMC2209_eval.c **** {
 1943              		.loc 1 63 31 is_stmt 0 view .LVU632
 1944              	.LBE201:
  65:boards/TMC2209_eval.c **** 
 1945              		.loc 1 65 2 is_stmt 1 view .LVU633
  67:boards/TMC2209_eval.c **** }
 1946              		.loc 1 67 2 view .LVU634
 1947              	.LBB202:
 1948              	.LBI202:
  63:boards/TMC2209_eval.c **** {
 1949              		.loc 1 63 31 view .LVU635
  63:boards/TMC2209_eval.c **** {
 1950              		.loc 1 63 31 is_stmt 0 view .LVU636
 1951              	.LBE202:
  65:boards/TMC2209_eval.c **** 
 1952              		.loc 1 65 2 is_stmt 1 view .LVU637
  67:boards/TMC2209_eval.c **** }
 1953              		.loc 1 67 2 view .LVU638
 384:boards/TMC2209_eval.c **** 		}
 1954              		.loc 1 384 4 is_stmt 0 view .LVU639
 1955 0656 FFF7FEFF 		bl	tmc2209_readInt
 1956              	.LVL251:
 1957 065a 2B68     		ldr	r3, [r5]
 1958 065c 1B02     		lsls	r3, r3, #8
 1959 065e 03F47063 		and	r3, r3, #3840
 1960 0662 20F47062 		bic	r2, r0, #3840
 1961 0666 D5E7     		b	.L188
 1962              	.LVL252:
 1963              	.L69:
 389:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEUP_MASK, TMC2209_SEUP_
 1964              		.loc 1 389 3 is_stmt 1 view .LVU640
 390:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1965              		.loc 1 390 13 is_stmt 0 view .LVU641
 1966 0668 7548     		ldr	r0, .L191
 1967              	.LVL253:
 390:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1968              		.loc 1 390 13 view .LVU642
 1969 066a 4221     		movs	r1, #66
 1970              	.LVL254:
 389:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEUP_MASK, TMC2209_SEUP_
 1971              		.loc 1 389 5 view .LVU643
 1972 066c 24B9     		cbnz	r4, .L134
 390:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1973              		.loc 1 390 4 is_stmt 1 view .LVU644
 1974              	.LBB203:
 1975              	.LBI203:
  63:boards/TMC2209_eval.c **** {
 1976              		.loc 1 63 31 view .LVU645
 1977              	.LVL255:
  63:boards/TMC2209_eval.c **** {
 1978              		.loc 1 63 31 is_stmt 0 view .LVU646
 1979              	.LBE203:
  65:boards/TMC2209_eval.c **** 
 1980              		.loc 1 65 2 is_stmt 1 view .LVU647
  67:boards/TMC2209_eval.c **** }
 1981              		.loc 1 67 2 view .LVU648
 390:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 1982              		.loc 1 390 13 is_stmt 0 view .LVU649
 1983 066e FFF7FEFF 		bl	tmc2209_readInt
 1984              	.LVL256:
 1985 0672 C0F34110 		ubfx	r0, r0, #5, #2
 1986 0676 34E6     		b	.L172
 1987              	.LVL257:
 1988              	.L134:
 391:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEUP_MASK, TMC2209_SEUP_SHIFT, 
 1989              		.loc 1 391 10 is_stmt 1 view .LVU650
 392:boards/TMC2209_eval.c **** 		}
 1990              		.loc 1 392 4 view .LVU651
 1991              	.LBB204:
 1992              	.LBI204:
  63:boards/TMC2209_eval.c **** {
 1993              		.loc 1 63 31 view .LVU652
  63:boards/TMC2209_eval.c **** {
 1994              		.loc 1 63 31 is_stmt 0 view .LVU653
 1995              	.LBE204:
  65:boards/TMC2209_eval.c **** 
 1996              		.loc 1 65 2 is_stmt 1 view .LVU654
  67:boards/TMC2209_eval.c **** }
 1997              		.loc 1 67 2 view .LVU655
 1998              	.LBB205:
 1999              	.LBI205:
  63:boards/TMC2209_eval.c **** {
 2000              		.loc 1 63 31 view .LVU656
  63:boards/TMC2209_eval.c **** {
 2001              		.loc 1 63 31 is_stmt 0 view .LVU657
 2002              	.LBE205:
  65:boards/TMC2209_eval.c **** 
 2003              		.loc 1 65 2 is_stmt 1 view .LVU658
  67:boards/TMC2209_eval.c **** }
 2004              		.loc 1 67 2 view .LVU659
 392:boards/TMC2209_eval.c **** 		}
 2005              		.loc 1 392 4 is_stmt 0 view .LVU660
 2006 0678 FFF7FEFF 		bl	tmc2209_readInt
 2007              	.LVL258:
 2008 067c 2B68     		ldr	r3, [r5]
 2009 067e 5B01     		lsls	r3, r3, #5
 2010 0680 03F06003 		and	r3, r3, #96
 2011 0684 20F06002 		bic	r2, r0, #96
 2012 0688 C4E7     		b	.L188
 2013              	.LVL259:
 2014              	.L68:
 397:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMIN_MASK, TMC2209_SEMI
 2015              		.loc 1 397 3 is_stmt 1 view .LVU661
 398:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2016              		.loc 1 398 13 is_stmt 0 view .LVU662
 2017 068a 6D48     		ldr	r0, .L191
 2018              	.LVL260:
 398:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2019              		.loc 1 398 13 view .LVU663
 2020 068c 4221     		movs	r1, #66
 2021              	.LVL261:
 397:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMIN_MASK, TMC2209_SEMI
 2022              		.loc 1 397 5 view .LVU664
 2023 068e 002C     		cmp	r4, #0
 2024 0690 A2D0     		beq	.L180
 399:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_COOLCONF, TMC2209_SEMIN_MASK, TMC2209_SEMIN_SHIFT
 2025              		.loc 1 399 10 is_stmt 1 view .LVU665
 400:boards/TMC2209_eval.c **** 		}
 2026              		.loc 1 400 4 view .LVU666
 2027              	.LBB206:
 2028              	.LBI206:
  63:boards/TMC2209_eval.c **** {
 2029              		.loc 1 63 31 view .LVU667
 2030              	.LVL262:
  63:boards/TMC2209_eval.c **** {
 2031              		.loc 1 63 31 is_stmt 0 view .LVU668
 2032              	.LBE206:
  65:boards/TMC2209_eval.c **** 
 2033              		.loc 1 65 2 is_stmt 1 view .LVU669
  67:boards/TMC2209_eval.c **** }
 2034              		.loc 1 67 2 view .LVU670
 2035              	.LBB207:
 2036              	.LBI207:
  63:boards/TMC2209_eval.c **** {
 2037              		.loc 1 63 31 view .LVU671
  63:boards/TMC2209_eval.c **** {
 2038              		.loc 1 63 31 is_stmt 0 view .LVU672
 2039              	.LBE207:
  65:boards/TMC2209_eval.c **** 
 2040              		.loc 1 65 2 is_stmt 1 view .LVU673
  67:boards/TMC2209_eval.c **** }
 2041              		.loc 1 67 2 view .LVU674
 400:boards/TMC2209_eval.c **** 		}
 2042              		.loc 1 400 4 is_stmt 0 view .LVU675
 2043 0692 FFF7FEFF 		bl	tmc2209_readInt
 2044              	.LVL263:
 2045 0696 2A68     		ldr	r2, [r5]
 2046 0698 20F00F00 		bic	r0, r0, #15
 2047 069c 02F00F02 		and	r2, r2, #15
 2048 06a0 0243     		orrs	r2, r2, r0
 2049 06a2 B8E7     		b	.L186
 2050              	.LVL264:
 2051              	.L67:
 405:boards/TMC2209_eval.c **** 			*value = tmc2209_readInt(motorToIC(motor), TMC2209_SGTHRS);
 2052              		.loc 1 405 3 is_stmt 1 view .LVU676
 405:boards/TMC2209_eval.c **** 			*value = tmc2209_readInt(motorToIC(motor), TMC2209_SGTHRS);
 2053              		.loc 1 405 5 is_stmt 0 view .LVU677
 2054 06a4 20B9     		cbnz	r0, .L136
 406:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2055              		.loc 1 406 4 is_stmt 1 view .LVU678
 2056              	.LBB208:
 2057              	.LBI208:
  63:boards/TMC2209_eval.c **** {
 2058              		.loc 1 63 31 view .LVU679
 2059              	.LVL265:
  63:boards/TMC2209_eval.c **** {
 2060              		.loc 1 63 31 is_stmt 0 view .LVU680
 2061              	.LBE208:
  65:boards/TMC2209_eval.c **** 
 2062              		.loc 1 65 2 is_stmt 1 view .LVU681
  67:boards/TMC2209_eval.c **** }
 2063              		.loc 1 67 2 view .LVU682
 406:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2064              		.loc 1 406 13 is_stmt 0 view .LVU683
 2065 06a6 4021     		movs	r1, #64
 2066              	.LVL266:
 2067              	.L179:
 517:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2068              		.loc 1 517 13 view .LVU684
 2069 06a8 6548     		ldr	r0, .L191
 2070              	.LVL267:
 517:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2071              		.loc 1 517 13 view .LVU685
 2072 06aa FFF7FEFF 		bl	tmc2209_readInt
 2073              	.LVL268:
 2074 06ae 18E6     		b	.L172
 2075              	.LVL269:
 2076              	.L136:
 407:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_SGTHRS, *value);
 2077              		.loc 1 407 10 is_stmt 1 view .LVU686
 408:boards/TMC2209_eval.c **** 		}
 2078              		.loc 1 408 4 view .LVU687
 2079              	.LBB209:
 2080              	.LBI209:
  63:boards/TMC2209_eval.c **** {
 2081              		.loc 1 63 31 view .LVU688
  63:boards/TMC2209_eval.c **** {
 2082              		.loc 1 63 31 is_stmt 0 view .LVU689
 2083              	.LBE209:
  65:boards/TMC2209_eval.c **** 
 2084              		.loc 1 65 2 is_stmt 1 view .LVU690
  67:boards/TMC2209_eval.c **** }
 2085              		.loc 1 67 2 view .LVU691
 408:boards/TMC2209_eval.c **** 		}
 2086              		.loc 1 408 4 is_stmt 0 view .LVU692
 2087 06b0 2A68     		ldr	r2, [r5]
 2088 06b2 4021     		movs	r1, #64
 2089              	.LVL270:
 408:boards/TMC2209_eval.c **** 		}
 2090              		.loc 1 408 4 view .LVU693
 2091 06b4 5DE6     		b	.L174
 2092              	.LVL271:
 2093              	.L66:
 413:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_VSENSE_MASK, TMC2209_VSE
 2094              		.loc 1 413 3 is_stmt 1 view .LVU694
 414:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2095              		.loc 1 414 13 is_stmt 0 view .LVU695
 2096 06b6 6248     		ldr	r0, .L191
 2097              	.LVL272:
 414:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2098              		.loc 1 414 13 view .LVU696
 2099 06b8 6C21     		movs	r1, #108
 2100              	.LVL273:
 413:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_VSENSE_MASK, TMC2209_VSE
 2101              		.loc 1 413 5 view .LVU697
 2102 06ba 24B9     		cbnz	r4, .L137
 414:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2103              		.loc 1 414 4 is_stmt 1 view .LVU698
 2104              	.LBB210:
 2105              	.LBI210:
  63:boards/TMC2209_eval.c **** {
 2106              		.loc 1 63 31 view .LVU699
 2107              	.LVL274:
  63:boards/TMC2209_eval.c **** {
 2108              		.loc 1 63 31 is_stmt 0 view .LVU700
 2109              	.LBE210:
  65:boards/TMC2209_eval.c **** 
 2110              		.loc 1 65 2 is_stmt 1 view .LVU701
  67:boards/TMC2209_eval.c **** }
 2111              		.loc 1 67 2 view .LVU702
 414:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2112              		.loc 1 414 13 is_stmt 0 view .LVU703
 2113 06bc FFF7FEFF 		bl	tmc2209_readInt
 2114              	.LVL275:
 2115 06c0 C0F34040 		ubfx	r0, r0, #17, #1
 2116 06c4 0DE6     		b	.L172
 2117              	.LVL276:
 2118              	.L137:
 415:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_CHOPCONF, TMC2209_VSENSE_MASK, TMC2209_VSENSE_SHI
 2119              		.loc 1 415 10 is_stmt 1 view .LVU704
 416:boards/TMC2209_eval.c **** 		}
 2120              		.loc 1 416 4 view .LVU705
 2121              	.LBB211:
 2122              	.LBI211:
  63:boards/TMC2209_eval.c **** {
 2123              		.loc 1 63 31 view .LVU706
  63:boards/TMC2209_eval.c **** {
 2124              		.loc 1 63 31 is_stmt 0 view .LVU707
 2125              	.LBE211:
  65:boards/TMC2209_eval.c **** 
 2126              		.loc 1 65 2 is_stmt 1 view .LVU708
  67:boards/TMC2209_eval.c **** }
 2127              		.loc 1 67 2 view .LVU709
 2128              	.LBB212:
 2129              	.LBI212:
  63:boards/TMC2209_eval.c **** {
 2130              		.loc 1 63 31 view .LVU710
  63:boards/TMC2209_eval.c **** {
 2131              		.loc 1 63 31 is_stmt 0 view .LVU711
 2132              	.LBE212:
  65:boards/TMC2209_eval.c **** 
 2133              		.loc 1 65 2 is_stmt 1 view .LVU712
  67:boards/TMC2209_eval.c **** }
 2134              		.loc 1 67 2 view .LVU713
 416:boards/TMC2209_eval.c **** 		}
 2135              		.loc 1 416 4 is_stmt 0 view .LVU714
 2136 06c6 FFF7FEFF 		bl	tmc2209_readInt
 2137              	.LVL277:
 2138 06ca 2B68     		ldr	r3, [r5]
 2139 06cc 5B04     		lsls	r3, r3, #17
 2140 06ce 03F40033 		and	r3, r3, #131072
 2141 06d2 20F40032 		bic	r2, r0, #131072
 2142 06d6 FFE6     		b	.L176
 2143              	.LVL278:
 2144              	.L65:
 421:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_DRVSTATUS, TMC2209_CS_ACTUAL_MASK, TMC2209
 2145              		.loc 1 421 3 is_stmt 1 view .LVU715
 421:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_DRVSTATUS, TMC2209_CS_ACTUAL_MASK, TMC2209
 2146              		.loc 1 421 5 is_stmt 0 view .LVU716
 2147 06d8 0028     		cmp	r0, #0
 2148 06da 7FF45AAD 		bne	.L168
 422:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2149              		.loc 1 422 4 is_stmt 1 view .LVU717
 2150              	.LBB213:
 2151              	.LBI213:
  63:boards/TMC2209_eval.c **** {
 2152              		.loc 1 63 31 view .LVU718
 2153              	.LVL279:
  63:boards/TMC2209_eval.c **** {
 2154              		.loc 1 63 31 is_stmt 0 view .LVU719
 2155              	.LBE213:
  65:boards/TMC2209_eval.c **** 
 2156              		.loc 1 65 2 is_stmt 1 view .LVU720
  67:boards/TMC2209_eval.c **** }
 2157              		.loc 1 67 2 view .LVU721
 422:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2158              		.loc 1 422 13 is_stmt 0 view .LVU722
 2159 06de 5848     		ldr	r0, .L191
 2160              	.LVL280:
 422:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2161              		.loc 1 422 13 view .LVU723
 2162 06e0 6F21     		movs	r1, #111
 2163              	.LVL281:
 422:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2164              		.loc 1 422 13 view .LVU724
 2165 06e2 FFF7FEFF 		bl	tmc2209_readInt
 2166              	.LVL282:
 2167 06e6 C0F30440 		ubfx	r0, r0, #16, #5
 2168 06ea FAE5     		b	.L172
 2169              	.LVL283:
 2170              	.L64:
 429:boards/TMC2209_eval.c **** 			*value = StepDir_getStallGuardThreshold(motor);
 2171              		.loc 1 429 3 is_stmt 1 view .LVU725
 429:boards/TMC2209_eval.c **** 			*value = StepDir_getStallGuardThreshold(motor);
 2172              		.loc 1 429 5 is_stmt 0 view .LVU726
 2173 06ec 10B9     		cbnz	r0, .L138
 430:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2174              		.loc 1 430 4 is_stmt 1 view .LVU727
 430:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2175              		.loc 1 430 13 is_stmt 0 view .LVU728
 2176 06ee FFF7FEFF 		bl	StepDir_getStallGuardThreshold
 2177              	.LVL284:
 430:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2178              		.loc 1 430 13 view .LVU729
 2179 06f2 F6E5     		b	.L172
 2180              	.LVL285:
 2181              	.L138:
 431:boards/TMC2209_eval.c **** 			// Store the threshold value in the internal StepDir generator
 2182              		.loc 1 431 10 is_stmt 1 view .LVU730
 433:boards/TMC2209_eval.c **** 
 2183              		.loc 1 433 4 view .LVU731
 2184 06f4 2968     		ldr	r1, [r5]
 2185              	.LVL286:
 433:boards/TMC2209_eval.c **** 
 2186              		.loc 1 433 4 is_stmt 0 view .LVU732
 2187 06f6 0020     		movs	r0, #0
 2188              	.LVL287:
 433:boards/TMC2209_eval.c **** 
 2189              		.loc 1 433 4 view .LVU733
 2190 06f8 FFF7FEFF 		bl	StepDir_setStallGuardThreshold
 2191              	.LVL288:
 439:boards/TMC2209_eval.c **** 			if (*value)
 2192              		.loc 1 439 4 is_stmt 1 view .LVU734
 440:boards/TMC2209_eval.c **** 			{
 2193              		.loc 1 440 4 view .LVU735
 439:boards/TMC2209_eval.c **** 			if (*value)
 2194              		.loc 1 439 11 is_stmt 0 view .LVU736
 2195 06fc 2B68     		ldr	r3, [r5]
 2196 06fe 5149     		ldr	r1, .L191+4
 440:boards/TMC2209_eval.c **** 			{
 2197              		.loc 1 440 7 view .LVU737
 2198 0700 B3EBE303 		subs	r3, r3, r3, asr #3
 2199 0704 09D0     		beq	.L162
 442:boards/TMC2209_eval.c **** 			}
 2200              		.loc 1 442 5 is_stmt 1 view .LVU738
 442:boards/TMC2209_eval.c **** 			}
 2201              		.loc 1 442 14 is_stmt 0 view .LVU739
 2202 0706 4FF08072 		mov	r2, #16777216
 2203 070a 92FBF3F2 		sdiv	r2, r2, r3
 2204 070e 8A42     		cmp	r2, r1
 2205 0710 A8BF     		it	ge
 2206 0712 0A46     		movge	r2, r1
 2207              	.L187:
 457:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_TCOOLTHRS, *value);
 2208              		.loc 1 457 11 view .LVU740
 2209 0714 2A60     		str	r2, [r5]
 458:boards/TMC2209_eval.c **** 		}
 2210              		.loc 1 458 4 is_stmt 1 view .LVU741
 2211              	.LBB214:
 2212              	.LBI214:
  63:boards/TMC2209_eval.c **** {
 2213              		.loc 1 63 31 view .LVU742
 2214              	.LVL289:
  63:boards/TMC2209_eval.c **** {
 2215              		.loc 1 63 31 is_stmt 0 view .LVU743
 2216              	.LBE214:
  65:boards/TMC2209_eval.c **** 
 2217              		.loc 1 65 2 is_stmt 1 view .LVU744
  67:boards/TMC2209_eval.c **** }
 2218              		.loc 1 67 2 view .LVU745
 458:boards/TMC2209_eval.c **** 		}
 2219              		.loc 1 458 4 is_stmt 0 view .LVU746
 2220 0716 1421     		movs	r1, #20
 2221 0718 2BE6     		b	.L174
 2222              	.LVL290:
 2223              	.L162:
 446:boards/TMC2209_eval.c **** 			}
 2224              		.loc 1 446 12 view .LVU747
 2225 071a 0A46     		mov	r2, r1
 2226 071c FAE7     		b	.L187
 2227              	.LVL291:
 2228              	.L63:
 453:boards/TMC2209_eval.c **** 			buffer = tmc2209_readInt(motorToIC(motor), TMC2209_TCOOLTHRS);
 2229              		.loc 1 453 3 is_stmt 1 view .LVU748
 453:boards/TMC2209_eval.c **** 			buffer = tmc2209_readInt(motorToIC(motor), TMC2209_TCOOLTHRS);
 2230              		.loc 1 453 5 is_stmt 0 view .LVU749
 2231 071e 60B9     		cbnz	r0, .L140
 454:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 2232              		.loc 1 454 4 is_stmt 1 view .LVU750
 2233              	.LBB215:
 2234              	.LBI215:
  63:boards/TMC2209_eval.c **** {
 2235              		.loc 1 63 31 view .LVU751
 2236              	.LVL292:
  63:boards/TMC2209_eval.c **** {
 2237              		.loc 1 63 31 is_stmt 0 view .LVU752
 2238              	.LBE215:
  65:boards/TMC2209_eval.c **** 
 2239              		.loc 1 65 2 is_stmt 1 view .LVU753
  67:boards/TMC2209_eval.c **** }
 2240              		.loc 1 67 2 view .LVU754
 454:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 2241              		.loc 1 454 13 is_stmt 0 view .LVU755
 2242 0720 1421     		movs	r1, #20
 2243              	.LVL293:
 2244              	.L175:
 464:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 2245              		.loc 1 464 13 view .LVU756
 2246 0722 4748     		ldr	r0, .L191
 2247              	.LVL294:
 464:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 2248              		.loc 1 464 13 view .LVU757
 2249 0724 FFF7FEFF 		bl	tmc2209_readInt
 2250              	.LVL295:
 465:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2251              		.loc 1 465 4 is_stmt 1 view .LVU758
 465:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2252              		.loc 1 465 13 is_stmt 0 view .LVU759
 2253 0728 0028     		cmp	r0, #0
 465:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2254              		.loc 1 465 13 view .LVU760
 2255 072a 4FF08073 		mov	r3, #16777216
 2256 072e 08BF     		it	eq
 2257 0730 0120     		moveq	r0, #1
 2258              	.LVL296:
 465:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2259              		.loc 1 465 13 view .LVU761
 2260 0732 93FBF0F0 		sdiv	r0, r3, r0
 465:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2261              		.loc 1 465 11 view .LVU762
 2262 0736 434B     		ldr	r3, .L191+4
 2263 0738 44E6     		b	.L178
 2264              	.LVL297:
 2265              	.L140:
 456:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value) ? *value : 1));
 2266              		.loc 1 456 10 is_stmt 1 view .LVU763
 457:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_TCOOLTHRS, *value);
 2267              		.loc 1 457 4 view .LVU764
 457:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_TCOOLTHRS, *value);
 2268              		.loc 1 457 13 is_stmt 0 view .LVU765
 2269 073a 2B68     		ldr	r3, [r5]
 2270 073c 002B     		cmp	r3, #0
 2271 073e 08BF     		it	eq
 2272 0740 0123     		moveq	r3, #1
 2273 0742 4FF08072 		mov	r2, #16777216
 2274 0746 92FBF3F2 		sdiv	r2, r2, r3
 2275 074a 3E4B     		ldr	r3, .L191+4
 2276 074c 9A42     		cmp	r2, r3
 2277 074e A8BF     		it	ge
 2278 0750 1A46     		movge	r2, r3
 2279 0752 DFE7     		b	.L187
 2280              	.L62:
 463:boards/TMC2209_eval.c **** 			buffer = tmc2209_readInt(motorToIC(motor), TMC2209_TPWMTHRS);
 2281              		.loc 1 463 3 is_stmt 1 view .LVU766
 463:boards/TMC2209_eval.c **** 			buffer = tmc2209_readInt(motorToIC(motor), TMC2209_TPWMTHRS);
 2282              		.loc 1 463 5 is_stmt 0 view .LVU767
 2283 0754 08B9     		cbnz	r0, .L143
 464:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 2284              		.loc 1 464 4 is_stmt 1 view .LVU768
 2285              	.LBB216:
 2286              	.LBI216:
  63:boards/TMC2209_eval.c **** {
 2287              		.loc 1 63 31 view .LVU769
 2288              	.LVL298:
  63:boards/TMC2209_eval.c **** {
 2289              		.loc 1 63 31 is_stmt 0 view .LVU770
 2290              	.LBE216:
  65:boards/TMC2209_eval.c **** 
 2291              		.loc 1 65 2 is_stmt 1 view .LVU771
  67:boards/TMC2209_eval.c **** }
 2292              		.loc 1 67 2 view .LVU772
 464:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 2293              		.loc 1 464 13 is_stmt 0 view .LVU773
 2294 0756 1321     		movs	r1, #19
 2295              	.LVL299:
 464:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 2296              		.loc 1 464 13 view .LVU774
 2297 0758 E3E7     		b	.L175
 2298              	.LVL300:
 2299              	.L143:
 466:boards/TMC2209_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value) ? *value : 1));
 2300              		.loc 1 466 10 is_stmt 1 view .LVU775
 467:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_TPWMTHRS, *value);
 2301              		.loc 1 467 4 view .LVU776
 467:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_TPWMTHRS, *value);
 2302              		.loc 1 467 13 is_stmt 0 view .LVU777
 2303 075a 2B68     		ldr	r3, [r5]
 2304 075c 002B     		cmp	r3, #0
 2305 075e 08BF     		it	eq
 2306 0760 0123     		moveq	r3, #1
 2307 0762 4FF08072 		mov	r2, #16777216
 2308 0766 92FBF3F2 		sdiv	r2, r2, r3
 2309 076a 364B     		ldr	r3, .L191+4
 2310 076c 9A42     		cmp	r2, r3
 2311 076e A8BF     		it	ge
 2312 0770 1A46     		movge	r2, r3
 467:boards/TMC2209_eval.c **** 			tmc2209_writeInt(motorToIC(motor), TMC2209_TPWMTHRS, *value);
 2313              		.loc 1 467 11 view .LVU778
 2314 0772 2A60     		str	r2, [r5]
 468:boards/TMC2209_eval.c **** 		}
 2315              		.loc 1 468 4 is_stmt 1 view .LVU779
 2316              	.LBB217:
 2317              	.LBI217:
  63:boards/TMC2209_eval.c **** {
 2318              		.loc 1 63 31 view .LVU780
 2319              	.LVL301:
  63:boards/TMC2209_eval.c **** {
 2320              		.loc 1 63 31 is_stmt 0 view .LVU781
 2321              	.LBE217:
  65:boards/TMC2209_eval.c **** 
 2322              		.loc 1 65 2 is_stmt 1 view .LVU782
  67:boards/TMC2209_eval.c **** }
 2323              		.loc 1 67 2 view .LVU783
 468:boards/TMC2209_eval.c **** 		}
 2324              		.loc 1 468 4 is_stmt 0 view .LVU784
 2325 0774 1321     		movs	r1, #19
 2326              	.LVL302:
 468:boards/TMC2209_eval.c **** 		}
 2327              		.loc 1 468 4 view .LVU785
 2328 0776 FCE5     		b	.L174
 2329              	.LVL303:
 2330              	.L61:
 473:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_GRAD_MASK, TMC2209_PW
 2331              		.loc 1 473 3 is_stmt 1 view .LVU786
 474:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2332              		.loc 1 474 13 is_stmt 0 view .LVU787
 2333 0778 3148     		ldr	r0, .L191
 2334              	.LVL304:
 474:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2335              		.loc 1 474 13 view .LVU788
 2336 077a 7021     		movs	r1, #112
 2337              	.LVL305:
 473:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_GRAD_MASK, TMC2209_PW
 2338              		.loc 1 473 5 view .LVU789
 2339 077c 24B9     		cbnz	r4, .L146
 474:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2340              		.loc 1 474 4 is_stmt 1 view .LVU790
 2341              	.LBB218:
 2342              	.LBI218:
  63:boards/TMC2209_eval.c **** {
 2343              		.loc 1 63 31 view .LVU791
 2344              	.LVL306:
  63:boards/TMC2209_eval.c **** {
 2345              		.loc 1 63 31 is_stmt 0 view .LVU792
 2346              	.LBE218:
  65:boards/TMC2209_eval.c **** 
 2347              		.loc 1 65 2 is_stmt 1 view .LVU793
  67:boards/TMC2209_eval.c **** }
 2348              		.loc 1 67 2 view .LVU794
 474:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2349              		.loc 1 474 13 is_stmt 0 view .LVU795
 2350 077e FFF7FEFF 		bl	tmc2209_readInt
 2351              	.LVL307:
 2352 0782 C0F30720 		ubfx	r0, r0, #8, #8
 2353 0786 ACE5     		b	.L172
 2354              	.LVL308:
 2355              	.L146:
 475:boards/TMC2209_eval.c **** 			// Set gradient
 2356              		.loc 1 475 10 is_stmt 1 view .LVU796
 477:boards/TMC2209_eval.c **** 
 2357              		.loc 1 477 4 view .LVU797
 2358              	.LBB219:
 2359              	.LBI219:
  63:boards/TMC2209_eval.c **** {
 2360              		.loc 1 63 31 view .LVU798
  63:boards/TMC2209_eval.c **** {
 2361              		.loc 1 63 31 is_stmt 0 view .LVU799
 2362              	.LBE219:
  65:boards/TMC2209_eval.c **** 
 2363              		.loc 1 65 2 is_stmt 1 view .LVU800
  67:boards/TMC2209_eval.c **** }
 2364              		.loc 1 67 2 view .LVU801
 2365              	.LBB220:
 2366              	.LBI220:
  63:boards/TMC2209_eval.c **** {
 2367              		.loc 1 63 31 view .LVU802
  63:boards/TMC2209_eval.c **** {
 2368              		.loc 1 63 31 is_stmt 0 view .LVU803
 2369              	.LBE220:
  65:boards/TMC2209_eval.c **** 
 2370              		.loc 1 65 2 is_stmt 1 view .LVU804
  67:boards/TMC2209_eval.c **** }
 2371              		.loc 1 67 2 view .LVU805
 477:boards/TMC2209_eval.c **** 
 2372              		.loc 1 477 4 is_stmt 0 view .LVU806
 2373 0788 FFF7FEFF 		bl	tmc2209_readInt
 2374              	.LVL309:
 2375 078c 2B68     		ldr	r3, [r5]
 2376 078e 1B02     		lsls	r3, r3, #8
 2377 0790 9BB2     		uxth	r3, r3
 2378 0792 20F47F42 		bic	r2, r0, #65280
 2379 0796 1A43     		orrs	r2, r2, r3
 2380 0798 2948     		ldr	r0, .L191
 2381 079a 7021     		movs	r1, #112
 2382 079c FFF7FEFF 		bl	tmc2209_writeInt
 2383              	.LVL310:
 480:boards/TMC2209_eval.c **** 		}
 2384              		.loc 1 480 4 is_stmt 1 view .LVU807
 2385              	.LBB221:
 2386              	.LBI221:
  63:boards/TMC2209_eval.c **** {
 2387              		.loc 1 63 31 view .LVU808
  63:boards/TMC2209_eval.c **** {
 2388              		.loc 1 63 31 is_stmt 0 view .LVU809
 2389              	.LBE221:
  65:boards/TMC2209_eval.c **** 
 2390              		.loc 1 65 2 is_stmt 1 view .LVU810
  67:boards/TMC2209_eval.c **** }
 2391              		.loc 1 67 2 view .LVU811
 2392              	.LBB222:
 2393              	.LBI222:
  63:boards/TMC2209_eval.c **** {
 2394              		.loc 1 63 31 view .LVU812
  63:boards/TMC2209_eval.c **** {
 2395              		.loc 1 63 31 is_stmt 0 view .LVU813
 2396              	.LBE222:
  65:boards/TMC2209_eval.c **** 
 2397              		.loc 1 65 2 is_stmt 1 view .LVU814
  67:boards/TMC2209_eval.c **** }
 2398              		.loc 1 67 2 view .LVU815
 480:boards/TMC2209_eval.c **** 		}
 2399              		.loc 1 480 4 is_stmt 0 view .LVU816
 2400 07a0 2748     		ldr	r0, .L191
 2401 07a2 0021     		movs	r1, #0
 2402 07a4 FFF7FEFF 		bl	tmc2209_readInt
 2403              	.LVL311:
 2404 07a8 2B68     		ldr	r3, [r5]
 2405 07aa 002B     		cmp	r3, #0
 2406 07ac 20F00400 		bic	r0, r0, #4
 2407 07b0 D4BF     		ite	le
 2408 07b2 0422     		movle	r2, #4
 2409 07b4 0022     		movgt	r2, #0
 2410 07b6 0243     		orrs	r2, r2, r0
 2411 07b8 2BE6     		b	.L185
 2412              	.LVL312:
 2413              	.L60:
 485:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_FREQ_MASK, TMC2209_PW
 2414              		.loc 1 485 3 is_stmt 1 view .LVU817
 485:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_FREQ_MASK, TMC2209_PW
 2415              		.loc 1 485 5 is_stmt 0 view .LVU818
 2416 07ba 30B9     		cbnz	r0, .L148
 486:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2417              		.loc 1 486 4 is_stmt 1 view .LVU819
 2418              	.LBB223:
 2419              	.LBI223:
  63:boards/TMC2209_eval.c **** {
 2420              		.loc 1 63 31 view .LVU820
 2421              	.LVL313:
  63:boards/TMC2209_eval.c **** {
 2422              		.loc 1 63 31 is_stmt 0 view .LVU821
 2423              	.LBE223:
  65:boards/TMC2209_eval.c **** 
 2424              		.loc 1 65 2 is_stmt 1 view .LVU822
  67:boards/TMC2209_eval.c **** }
 2425              		.loc 1 67 2 view .LVU823
 486:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2426              		.loc 1 486 13 is_stmt 0 view .LVU824
 2427 07bc 2048     		ldr	r0, .L191
 2428              	.LVL314:
 486:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2429              		.loc 1 486 13 view .LVU825
 2430 07be 7021     		movs	r1, #112
 2431              	.LVL315:
 486:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2432              		.loc 1 486 13 view .LVU826
 2433 07c0 FFF7FEFF 		bl	tmc2209_readInt
 2434              	.LVL316:
 2435 07c4 C0F30140 		ubfx	r0, r0, #16, #2
 2436 07c8 8BE5     		b	.L172
 2437              	.LVL317:
 2438              	.L148:
 487:boards/TMC2209_eval.c **** 			if(*value >= 0 && *value < 4)
 2439              		.loc 1 487 10 is_stmt 1 view .LVU827
 488:boards/TMC2209_eval.c **** 			{
 2440              		.loc 1 488 4 view .LVU828
 488:boards/TMC2209_eval.c **** 			{
 2441              		.loc 1 488 6 is_stmt 0 view .LVU829
 2442 07ca 2B68     		ldr	r3, [r5]
 2443 07cc 032B     		cmp	r3, #3
 2444 07ce 3FF670AE 		bhi	.L166
 490:boards/TMC2209_eval.c **** 			}
 2445              		.loc 1 490 5 is_stmt 1 view .LVU830
 2446              	.LBB224:
 2447              	.LBI224:
  63:boards/TMC2209_eval.c **** {
 2448              		.loc 1 63 31 view .LVU831
 2449              	.LVL318:
  63:boards/TMC2209_eval.c **** {
 2450              		.loc 1 63 31 is_stmt 0 view .LVU832
 2451              	.LBE224:
  65:boards/TMC2209_eval.c **** 
 2452              		.loc 1 65 2 is_stmt 1 view .LVU833
  67:boards/TMC2209_eval.c **** }
 2453              		.loc 1 67 2 view .LVU834
 2454              	.LBB225:
 2455              	.LBI225:
  63:boards/TMC2209_eval.c **** {
 2456              		.loc 1 63 31 view .LVU835
  63:boards/TMC2209_eval.c **** {
 2457              		.loc 1 63 31 is_stmt 0 view .LVU836
 2458              	.LBE225:
  65:boards/TMC2209_eval.c **** 
 2459              		.loc 1 65 2 is_stmt 1 view .LVU837
  67:boards/TMC2209_eval.c **** }
 2460              		.loc 1 67 2 view .LVU838
 490:boards/TMC2209_eval.c **** 			}
 2461              		.loc 1 490 5 is_stmt 0 view .LVU839
 2462 07d2 1B48     		ldr	r0, .L191
 2463              	.LVL319:
 490:boards/TMC2209_eval.c **** 			}
 2464              		.loc 1 490 5 view .LVU840
 2465 07d4 7021     		movs	r1, #112
 2466              	.LVL320:
 490:boards/TMC2209_eval.c **** 			}
 2467              		.loc 1 490 5 view .LVU841
 2468 07d6 FFF7FEFF 		bl	tmc2209_readInt
 2469              	.LVL321:
 2470 07da 2B68     		ldr	r3, [r5]
 2471 07dc 1B04     		lsls	r3, r3, #16
 2472 07de 03F44033 		and	r3, r3, #196608
 2473 07e2 20F44032 		bic	r2, r0, #196608
 2474              	.LVL322:
 2475              	.L183:
 511:boards/TMC2209_eval.c **** 		}
 2476              		.loc 1 511 4 view .LVU842
 2477 07e6 1A43     		orrs	r2, r2, r3
 2478 07e8 7021     		movs	r1, #112
 2479 07ea C2E5     		b	.L174
 2480              	.LVL323:
 2481              	.L59:
 500:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_AUTOSCALE_MASK, TMC22
 2482              		.loc 1 500 3 is_stmt 1 view .LVU843
 501:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2483              		.loc 1 501 13 is_stmt 0 view .LVU844
 2484 07ec 1448     		ldr	r0, .L191
 2485              	.LVL324:
 501:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2486              		.loc 1 501 13 view .LVU845
 2487 07ee 7021     		movs	r1, #112
 2488              	.LVL325:
 500:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_AUTOSCALE_MASK, TMC22
 2489              		.loc 1 500 5 view .LVU846
 2490 07f0 24B9     		cbnz	r4, .L149
 501:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2491              		.loc 1 501 4 is_stmt 1 view .LVU847
 2492              	.LBB226:
 2493              	.LBI226:
  63:boards/TMC2209_eval.c **** {
 2494              		.loc 1 63 31 view .LVU848
 2495              	.LVL326:
  63:boards/TMC2209_eval.c **** {
 2496              		.loc 1 63 31 is_stmt 0 view .LVU849
 2497              	.LBE226:
  65:boards/TMC2209_eval.c **** 
 2498              		.loc 1 65 2 is_stmt 1 view .LVU850
  67:boards/TMC2209_eval.c **** }
 2499              		.loc 1 67 2 view .LVU851
 501:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2500              		.loc 1 501 13 is_stmt 0 view .LVU852
 2501 07f2 FFF7FEFF 		bl	tmc2209_readInt
 2502              	.LVL327:
 2503 07f6 C0F38040 		ubfx	r0, r0, #18, #1
 2504 07fa 72E5     		b	.L172
 2505              	.LVL328:
 2506              	.L149:
 502:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_PWMCONF, TMC2209_PWM_AUTOSCALE_MASK, TMC2209_PWM_
 2507              		.loc 1 502 10 is_stmt 1 view .LVU853
 503:boards/TMC2209_eval.c **** 		}
 2508              		.loc 1 503 4 view .LVU854
 2509              	.LBB227:
 2510              	.LBI227:
  63:boards/TMC2209_eval.c **** {
 2511              		.loc 1 63 31 view .LVU855
  63:boards/TMC2209_eval.c **** {
 2512              		.loc 1 63 31 is_stmt 0 view .LVU856
 2513              	.LBE227:
  65:boards/TMC2209_eval.c **** 
 2514              		.loc 1 65 2 is_stmt 1 view .LVU857
  67:boards/TMC2209_eval.c **** }
 2515              		.loc 1 67 2 view .LVU858
 2516              	.LBB228:
 2517              	.LBI228:
  63:boards/TMC2209_eval.c **** {
 2518              		.loc 1 63 31 view .LVU859
  63:boards/TMC2209_eval.c **** {
 2519              		.loc 1 63 31 is_stmt 0 view .LVU860
 2520              	.LBE228:
  65:boards/TMC2209_eval.c **** 
 2521              		.loc 1 65 2 is_stmt 1 view .LVU861
  67:boards/TMC2209_eval.c **** }
 2522              		.loc 1 67 2 view .LVU862
 503:boards/TMC2209_eval.c **** 		}
 2523              		.loc 1 503 4 is_stmt 0 view .LVU863
 2524 07fc FFF7FEFF 		bl	tmc2209_readInt
 2525              	.LVL329:
 2526 0800 2B68     		ldr	r3, [r5]
 2527 0802 002B     		cmp	r3, #0
 2528 0804 20F48022 		bic	r2, r0, #262144
 2529 0808 18BF     		it	ne
 2530 080a 4FF48023 		movne	r3, #262144
 2531 080e EAE7     		b	.L183
 2532              	.LVL330:
 2533              	.L58:
 508:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_FREEWHEEL_MASK, TMC2209_F
 2534              		.loc 1 508 3 is_stmt 1 view .LVU864
 509:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2535              		.loc 1 509 13 is_stmt 0 view .LVU865
 2536 0810 0B48     		ldr	r0, .L191
 2537              	.LVL331:
 509:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2538              		.loc 1 509 13 view .LVU866
 2539 0812 7021     		movs	r1, #112
 2540              	.LVL332:
 508:boards/TMC2209_eval.c **** 			*value = TMC2209_FIELD_READ(motorToIC(motor), TMC2209_PWMCONF, TMC2209_FREEWHEEL_MASK, TMC2209_F
 2541              		.loc 1 508 5 view .LVU867
 2542 0814 24B9     		cbnz	r4, .L151
 509:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2543              		.loc 1 509 4 is_stmt 1 view .LVU868
 2544              	.LBB229:
 2545              	.LBI229:
  63:boards/TMC2209_eval.c **** {
 2546              		.loc 1 63 31 view .LVU869
 2547              	.LVL333:
  63:boards/TMC2209_eval.c **** {
 2548              		.loc 1 63 31 is_stmt 0 view .LVU870
 2549              	.LBE229:
  65:boards/TMC2209_eval.c **** 
 2550              		.loc 1 65 2 is_stmt 1 view .LVU871
  67:boards/TMC2209_eval.c **** }
 2551              		.loc 1 67 2 view .LVU872
 509:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2552              		.loc 1 509 13 is_stmt 0 view .LVU873
 2553 0816 FFF7FEFF 		bl	tmc2209_readInt
 2554              	.LVL334:
 2555 081a C0F30150 		ubfx	r0, r0, #20, #2
 2556 081e 60E5     		b	.L172
 2557              	.LVL335:
 2558              	.L151:
 510:boards/TMC2209_eval.c **** 			TMC2209_FIELD_UPDATE(motorToIC(motor), TMC2209_PWMCONF, TMC2209_FREEWHEEL_MASK, TMC2209_FREEWHEE
 2559              		.loc 1 510 10 is_stmt 1 view .LVU874
 511:boards/TMC2209_eval.c **** 		}
 2560              		.loc 1 511 4 view .LVU875
 2561              	.LBB230:
 2562              	.LBI230:
  63:boards/TMC2209_eval.c **** {
 2563              		.loc 1 63 31 view .LVU876
  63:boards/TMC2209_eval.c **** {
 2564              		.loc 1 63 31 is_stmt 0 view .LVU877
 2565              	.LBE230:
  65:boards/TMC2209_eval.c **** 
 2566              		.loc 1 65 2 is_stmt 1 view .LVU878
  67:boards/TMC2209_eval.c **** }
 2567              		.loc 1 67 2 view .LVU879
 2568              	.LBB231:
 2569              	.LBI231:
  63:boards/TMC2209_eval.c **** {
 2570              		.loc 1 63 31 view .LVU880
  63:boards/TMC2209_eval.c **** {
 2571              		.loc 1 63 31 is_stmt 0 view .LVU881
 2572              	.LBE231:
  65:boards/TMC2209_eval.c **** 
 2573              		.loc 1 65 2 is_stmt 1 view .LVU882
  67:boards/TMC2209_eval.c **** }
 2574              		.loc 1 67 2 view .LVU883
 511:boards/TMC2209_eval.c **** 		}
 2575              		.loc 1 511 4 is_stmt 0 view .LVU884
 2576 0820 FFF7FEFF 		bl	tmc2209_readInt
 2577              	.LVL336:
 2578 0824 2B68     		ldr	r3, [r5]
 2579 0826 1B05     		lsls	r3, r3, #20
 2580 0828 03F44013 		and	r3, r3, #3145728
 2581 082c 20F44012 		bic	r2, r0, #3145728
 2582 0830 D9E7     		b	.L183
 2583              	.LVL337:
 2584              	.L56:
 516:boards/TMC2209_eval.c **** 			*value = tmc2209_readInt(motorToIC(motor), TMC2209_SG_RESULT);
 2585              		.loc 1 516 3 is_stmt 1 view .LVU885
 516:boards/TMC2209_eval.c **** 			*value = tmc2209_readInt(motorToIC(motor), TMC2209_SG_RESULT);
 2586              		.loc 1 516 5 is_stmt 0 view .LVU886
 2587 0832 0028     		cmp	r0, #0
 2588 0834 7FF4ADAC 		bne	.L168
 517:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2589              		.loc 1 517 4 is_stmt 1 view .LVU887
 2590              	.LBB232:
 2591              	.LBI232:
  63:boards/TMC2209_eval.c **** {
 2592              		.loc 1 63 31 view .LVU888
 2593              	.LVL338:
  63:boards/TMC2209_eval.c **** {
 2594              		.loc 1 63 31 is_stmt 0 view .LVU889
 2595              	.LBE232:
  65:boards/TMC2209_eval.c **** 
 2596              		.loc 1 65 2 is_stmt 1 view .LVU890
  67:boards/TMC2209_eval.c **** }
 2597              		.loc 1 67 2 view .LVU891
 517:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2598              		.loc 1 517 13 is_stmt 0 view .LVU892
 2599 0838 4121     		movs	r1, #65
 2600              	.LVL339:
 517:boards/TMC2209_eval.c **** 		} else if(readWrite == WRITE) {
 2601              		.loc 1 517 13 view .LVU893
 2602 083a 35E7     		b	.L179
 2603              	.LVL340:
 2604              	.L152:
 158:boards/TMC2209_eval.c **** 
 2605              		.loc 1 158 10 view .LVU894
 2606 083c 0824     		movs	r4, #8
 2607 083e 51E5     		b	.L51
 2608              	.L192:
 2609              		.align	2
 2610              	.L191:
 2611 0840 00000000 		.word	.LANCHOR0
 2612 0844 FFFF0F00 		.word	1048575
 2613              		.cfi_endproc
 2614              	.LFE13:
 2616              		.align	1
 2617              		.syntax unified
 2618              		.thumb
 2619              		.thumb_func
 2620              		.fpu softvfp
 2622              	SAP:
 2623              	.LVL341:
 2624              	.LFB14:
 531:boards/TMC2209_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 2625              		.loc 1 531 1 is_stmt 1 view -0
 2626              		.cfi_startproc
 2627              		@ args = 0, pretend = 0, frame = 8
 2628              		@ frame_needed = 0, uses_anonymous_args = 0
 532:boards/TMC2209_eval.c **** }
 2629              		.loc 1 532 2 view .LVU896
 531:boards/TMC2209_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 2630              		.loc 1 531 1 is_stmt 0 view .LVU897
 2631 0848 07B5     		push	{r0, r1, r2, lr}
 2632              	.LCFI7:
 2633              		.cfi_def_cfa_offset 16
 2634              		.cfi_offset 14, -4
 531:boards/TMC2209_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 2635              		.loc 1 531 1 view .LVU898
 2636 084a 0192     		str	r2, [sp, #4]
 532:boards/TMC2209_eval.c **** }
 2637              		.loc 1 532 9 view .LVU899
 2638 084c 01AB     		add	r3, sp, #4
 2639 084e 0246     		mov	r2, r0
 2640              	.LVL342:
 532:boards/TMC2209_eval.c **** }
 2641              		.loc 1 532 9 view .LVU900
 2642 0850 0120     		movs	r0, #1
 2643              	.LVL343:
 532:boards/TMC2209_eval.c **** }
 2644              		.loc 1 532 9 view .LVU901
 2645 0852 FFF788FC 		bl	handleParameter
 2646              	.LVL344:
 533:boards/TMC2209_eval.c **** 
 2647              		.loc 1 533 1 view .LVU902
 2648 0856 03B0     		add	sp, sp, #12
 2649              	.LCFI8:
 2650              		.cfi_def_cfa_offset 4
 2651              		@ sp needed
 2652 0858 5DF804FB 		ldr	pc, [sp], #4
 2653              		.cfi_endproc
 2654              	.LFE14:
 2656              		.align	1
 2657              		.syntax unified
 2658              		.thumb
 2659              		.thumb_func
 2660              		.fpu softvfp
 2662              	GAP:
 2663              	.LVL345:
 2664              	.LFB15:
 536:boards/TMC2209_eval.c **** 	return handleParameter(READ, motor, type, value);
 2665              		.loc 1 536 1 is_stmt 1 view -0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              		@ link register save eliminated.
 537:boards/TMC2209_eval.c **** }
 2670              		.loc 1 537 2 view .LVU904
 536:boards/TMC2209_eval.c **** 	return handleParameter(READ, motor, type, value);
 2671              		.loc 1 536 1 is_stmt 0 view .LVU905
 2672 085c 1346     		mov	r3, r2
 537:boards/TMC2209_eval.c **** }
 2673              		.loc 1 537 9 view .LVU906
 2674 085e 0246     		mov	r2, r0
 2675              	.LVL346:
 537:boards/TMC2209_eval.c **** }
 2676              		.loc 1 537 9 view .LVU907
 2677 0860 0020     		movs	r0, #0
 2678              	.LVL347:
 537:boards/TMC2209_eval.c **** }
 2679              		.loc 1 537 9 view .LVU908
 2680 0862 80E4     		b	handleParameter
 2681              	.LVL348:
 537:boards/TMC2209_eval.c **** }
 2682              		.loc 1 537 9 view .LVU909
 2683              		.cfi_endproc
 2684              	.LFE15:
 2686              		.align	1
 2687              		.syntax unified
 2688              		.thumb
 2689              		.thumb_func
 2690              		.fpu softvfp
 2692              	restore:
 2693              	.LFB20:
 653:boards/TMC2209_eval.c **** 	return tmc2209_restore(&TMC2209);
 2694              		.loc 1 653 1 is_stmt 1 view -0
 2695              		.cfi_startproc
 2696              		@ args = 0, pretend = 0, frame = 0
 2697              		@ frame_needed = 0, uses_anonymous_args = 0
 2698              		@ link register save eliminated.
 654:boards/TMC2209_eval.c **** }
 2699              		.loc 1 654 2 view .LVU911
 654:boards/TMC2209_eval.c **** }
 2700              		.loc 1 654 9 is_stmt 0 view .LVU912
 2701 0864 0148     		ldr	r0, .L196
 2702 0866 FFF7FEBF 		b	tmc2209_restore
 2703              	.LVL349:
 2704              	.L197:
 2705 086a 00BF     		.align	2
 2706              	.L196:
 2707 086c 00000000 		.word	.LANCHOR0
 2708              		.cfi_endproc
 2709              	.LFE20:
 2711              		.align	1
 2712              		.syntax unified
 2713              		.thumb
 2714              		.thumb_func
 2715              		.fpu softvfp
 2717              	reset:
 2718              	.LFB19:
 645:boards/TMC2209_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 2719              		.loc 1 645 1 is_stmt 1 view -0
 2720              		.cfi_startproc
 2721              		@ args = 0, pretend = 0, frame = 0
 2722              		@ frame_needed = 0, uses_anonymous_args = 0
 646:boards/TMC2209_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, Pins.DIAG);
 2723              		.loc 1 646 2 view .LVU914
 645:boards/TMC2209_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 2724              		.loc 1 645 1 is_stmt 0 view .LVU915
 2725 0870 10B5     		push	{r4, lr}
 2726              	.LCFI9:
 2727              		.cfi_def_cfa_offset 8
 2728              		.cfi_offset 4, -8
 2729              		.cfi_offset 14, -4
 647:boards/TMC2209_eval.c **** 
 2730              		.loc 1 647 2 view .LVU916
 2731 0872 084C     		ldr	r4, .L199
 646:boards/TMC2209_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, Pins.DIAG);
 2732              		.loc 1 646 2 view .LVU917
 2733 0874 4FF40030 		mov	r0, #131072
 2734 0878 FFF7FEFF 		bl	StepDir_init
 2735              	.LVL350:
 647:boards/TMC2209_eval.c **** 
 2736              		.loc 1 647 2 is_stmt 1 view .LVU918
 2737 087c D4E9A412 		ldrd	r1, r2, [r4, #656]
 2738 0880 D4F8A032 		ldr	r3, [r4, #672]
 2739 0884 0020     		movs	r0, #0
 2740 0886 FFF7FEFF 		bl	StepDir_setPins
 2741              	.LVL351:
 649:boards/TMC2209_eval.c **** }
 2742              		.loc 1 649 2 view .LVU919
 649:boards/TMC2209_eval.c **** }
 2743              		.loc 1 649 9 is_stmt 0 view .LVU920
 2744 088a 2046     		mov	r0, r4
 650:boards/TMC2209_eval.c **** 
 2745              		.loc 1 650 1 view .LVU921
 2746 088c BDE81040 		pop	{r4, lr}
 2747              	.LCFI10:
 2748              		.cfi_restore 14
 2749              		.cfi_restore 4
 2750              		.cfi_def_cfa_offset 0
 649:boards/TMC2209_eval.c **** }
 2751              		.loc 1 649 9 view .LVU922
 2752 0890 FFF7FEBF 		b	tmc2209_reset
 2753              	.LVL352:
 2754              	.L200:
 2755              		.align	2
 2756              	.L199:
 2757 0894 00000000 		.word	.LANCHOR0
 2758              		.cfi_endproc
 2759              	.LFE19:
 2761              		.align	1
 2762              		.syntax unified
 2763              		.thumb
 2764              		.thumb_func
 2765              		.fpu softvfp
 2767              	enableDriver:
 2768              	.LVL353:
 2769              	.LFB21:
 658:boards/TMC2209_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 2770              		.loc 1 658 1 is_stmt 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 0, uses_anonymous_args = 0
 2774              		@ link register save eliminated.
 659:boards/TMC2209_eval.c **** 		state = Evalboards.driverEnable;
 2775              		.loc 1 659 2 view .LVU924
 659:boards/TMC2209_eval.c **** 		state = Evalboards.driverEnable;
 2776              		.loc 1 659 4 is_stmt 0 view .LVU925
 2777 0898 0228     		cmp	r0, #2
 660:boards/TMC2209_eval.c **** 
 2778              		.loc 1 660 3 is_stmt 1 view .LVU926
 660:boards/TMC2209_eval.c **** 
 2779              		.loc 1 660 9 is_stmt 0 view .LVU927
 2780 089a 04BF     		itt	eq
 2781 089c 0C4B     		ldreq	r3, .L206
 2782 089e 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 2783              	.LVL354:
 662:boards/TMC2209_eval.c **** 		HAL.IOs->config->setHigh(Pins.ENN);
 2784              		.loc 1 662 2 is_stmt 1 view .LVU928
 662:boards/TMC2209_eval.c **** 		HAL.IOs->config->setHigh(Pins.ENN);
 2785              		.loc 1 662 4 is_stmt 0 view .LVU929
 2786 08a2 38B9     		cbnz	r0, .L203
 663:boards/TMC2209_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2787              		.loc 1 663 3 is_stmt 1 view .LVU930
 663:boards/TMC2209_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2788              		.loc 1 663 6 is_stmt 0 view .LVU931
 2789 08a4 0B4B     		ldr	r3, .L206+4
 663:boards/TMC2209_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2790              		.loc 1 663 10 view .LVU932
 2791 08a6 DB68     		ldr	r3, [r3, #12]
 663:boards/TMC2209_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2792              		.loc 1 663 18 view .LVU933
 2793 08a8 1B68     		ldr	r3, [r3]
 663:boards/TMC2209_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2794              		.loc 1 663 3 view .LVU934
 2795 08aa 5B69     		ldr	r3, [r3, #20]
 2796              	.L205:
 2797              	.LBB235:
 2798              	.LBB236:
 665:boards/TMC2209_eval.c **** }
 2799              		.loc 1 665 3 view .LVU935
 2800 08ac 0A4A     		ldr	r2, .L206+8
 2801 08ae D2F88802 		ldr	r0, [r2, #648]
 2802 08b2 1847     		bx	r3	@ indirect register sibling call
 2803              	.LVL355:
 2804              	.L203:
 665:boards/TMC2209_eval.c **** }
 2805              		.loc 1 665 3 view .LVU936
 2806              	.LBE236:
 2807              	.LBE235:
 664:boards/TMC2209_eval.c **** 		HAL.IOs->config->setLow(Pins.ENN);
 2808              		.loc 1 664 7 is_stmt 1 view .LVU937
 664:boards/TMC2209_eval.c **** 		HAL.IOs->config->setLow(Pins.ENN);
 2809              		.loc 1 664 9 is_stmt 0 view .LVU938
 2810 08b4 0128     		cmp	r0, #1
 2811 08b6 09D1     		bne	.L201
 664:boards/TMC2209_eval.c **** 		HAL.IOs->config->setLow(Pins.ENN);
 2812              		.loc 1 664 49 discriminator 1 view .LVU939
 2813 08b8 054B     		ldr	r3, .L206
 664:boards/TMC2209_eval.c **** 		HAL.IOs->config->setLow(Pins.ENN);
 2814              		.loc 1 664 35 discriminator 1 view .LVU940
 2815 08ba 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 2816 08be 012B     		cmp	r3, #1
 2817 08c0 04D1     		bne	.L201
 2818              	.LBB238:
 2819              	.LBI235:
 657:boards/TMC2209_eval.c **** {
 2820              		.loc 1 657 13 is_stmt 1 view .LVU941
 2821              	.LVL356:
 2822              	.LBB237:
 665:boards/TMC2209_eval.c **** }
 2823              		.loc 1 665 3 view .LVU942
 665:boards/TMC2209_eval.c **** }
 2824              		.loc 1 665 6 is_stmt 0 view .LVU943
 2825 08c2 044B     		ldr	r3, .L206+4
 665:boards/TMC2209_eval.c **** }
 2826              		.loc 1 665 10 view .LVU944
 2827 08c4 DB68     		ldr	r3, [r3, #12]
 665:boards/TMC2209_eval.c **** }
 2828              		.loc 1 665 18 view .LVU945
 2829 08c6 1B68     		ldr	r3, [r3]
 665:boards/TMC2209_eval.c **** }
 2830              		.loc 1 665 3 view .LVU946
 2831 08c8 9B69     		ldr	r3, [r3, #24]
 2832 08ca EFE7     		b	.L205
 2833              	.LVL357:
 2834              	.L201:
 665:boards/TMC2209_eval.c **** }
 2835              		.loc 1 665 3 view .LVU947
 2836              	.LBE237:
 2837              	.LBE238:
 666:boards/TMC2209_eval.c **** 
 2838              		.loc 1 666 1 view .LVU948
 2839 08cc 7047     		bx	lr
 2840              	.L207:
 2841 08ce 00BF     		.align	2
 2842              	.L206:
 2843 08d0 00000000 		.word	Evalboards
 2844 08d4 00000000 		.word	HAL
 2845 08d8 00000000 		.word	.LANCHOR0
 2846              		.cfi_endproc
 2847              	.LFE21:
 2849              		.align	1
 2850              		.syntax unified
 2851              		.thumb
 2852              		.thumb_func
 2853              		.fpu softvfp
 2855              	deInit:
 2856              	.LFB18:
 627:boards/TMC2209_eval.c **** 	enableDriver(DRIVER_DISABLE);
 2857              		.loc 1 627 1 is_stmt 1 view -0
 2858              		.cfi_startproc
 2859              		@ args = 0, pretend = 0, frame = 0
 2860              		@ frame_needed = 0, uses_anonymous_args = 0
 628:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.ENN);
 2861              		.loc 1 628 2 view .LVU950
 627:boards/TMC2209_eval.c **** 	enableDriver(DRIVER_DISABLE);
 2862              		.loc 1 627 1 is_stmt 0 view .LVU951
 2863 08dc 70B5     		push	{r4, r5, r6, lr}
 2864              	.LCFI11:
 2865              		.cfi_def_cfa_offset 16
 2866              		.cfi_offset 4, -16
 2867              		.cfi_offset 5, -12
 2868              		.cfi_offset 6, -8
 2869              		.cfi_offset 14, -4
 628:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.ENN);
 2870              		.loc 1 628 2 view .LVU952
 2871 08de 0020     		movs	r0, #0
 2872 08e0 FFF7DAFF 		bl	enableDriver
 2873              	.LVL358:
 629:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.SPREAD);
 2874              		.loc 1 629 2 is_stmt 1 view .LVU953
 629:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.SPREAD);
 2875              		.loc 1 629 5 is_stmt 0 view .LVU954
 2876 08e4 1D4B     		ldr	r3, .L209
 629:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.SPREAD);
 2877              		.loc 1 629 2 view .LVU955
 2878 08e6 1E4C     		ldr	r4, .L209+4
 629:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.SPREAD);
 2879              		.loc 1 629 5 view .LVU956
 2880 08e8 DD68     		ldr	r5, [r3, #12]
 629:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.SPREAD);
 2881              		.loc 1 629 2 view .LVU957
 2882 08ea D4F88802 		ldr	r0, [r4, #648]
 629:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.SPREAD);
 2883              		.loc 1 629 17 view .LVU958
 2884 08ee 2B68     		ldr	r3, [r5]
 629:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.SPREAD);
 2885              		.loc 1 629 2 view .LVU959
 2886 08f0 9B68     		ldr	r3, [r3, #8]
 2887 08f2 9847     		blx	r3
 2888              	.LVL359:
 630:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.STEP);
 2889              		.loc 1 630 2 is_stmt 1 view .LVU960
 630:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.STEP);
 2890              		.loc 1 630 17 is_stmt 0 view .LVU961
 2891 08f4 2B68     		ldr	r3, [r5]
 630:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.STEP);
 2892              		.loc 1 630 2 view .LVU962
 2893 08f6 D4F88C02 		ldr	r0, [r4, #652]
 2894 08fa 9B68     		ldr	r3, [r3, #8]
 2895 08fc 9847     		blx	r3
 2896              	.LVL360:
 631:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 2897              		.loc 1 631 2 is_stmt 1 view .LVU963
 631:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 2898              		.loc 1 631 17 is_stmt 0 view .LVU964
 2899 08fe 2B68     		ldr	r3, [r5]
 631:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 2900              		.loc 1 631 2 view .LVU965
 2901 0900 D4F89002 		ldr	r0, [r4, #656]
 2902 0904 9B68     		ldr	r3, [r3, #8]
 2903 0906 9847     		blx	r3
 2904              	.LVL361:
 632:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.MS1_AD0);
 2905              		.loc 1 632 2 is_stmt 1 view .LVU966
 632:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.MS1_AD0);
 2906              		.loc 1 632 17 is_stmt 0 view .LVU967
 2907 0908 2B68     		ldr	r3, [r5]
 632:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.MS1_AD0);
 2908              		.loc 1 632 2 view .LVU968
 2909 090a D4F89402 		ldr	r0, [r4, #660]
 2910 090e 9B68     		ldr	r3, [r3, #8]
 2911 0910 9847     		blx	r3
 2912              	.LVL362:
 633:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.MS2_AD1);
 2913              		.loc 1 633 2 is_stmt 1 view .LVU969
 633:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.MS2_AD1);
 2914              		.loc 1 633 17 is_stmt 0 view .LVU970
 2915 0912 2B68     		ldr	r3, [r5]
 633:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.MS2_AD1);
 2916              		.loc 1 633 2 view .LVU971
 2917 0914 D4F89802 		ldr	r0, [r4, #664]
 2918 0918 9B68     		ldr	r3, [r3, #8]
 2919 091a 9847     		blx	r3
 2920              	.LVL363:
 634:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.DIAG);
 2921              		.loc 1 634 2 is_stmt 1 view .LVU972
 634:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.DIAG);
 2922              		.loc 1 634 17 is_stmt 0 view .LVU973
 2923 091c 2B68     		ldr	r3, [r5]
 634:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.DIAG);
 2924              		.loc 1 634 2 view .LVU974
 2925 091e D4F89C02 		ldr	r0, [r4, #668]
 2926 0922 9B68     		ldr	r3, [r3, #8]
 2927 0924 9847     		blx	r3
 2928              	.LVL364:
 635:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.INDEX);
 2929              		.loc 1 635 2 is_stmt 1 view .LVU975
 635:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.INDEX);
 2930              		.loc 1 635 17 is_stmt 0 view .LVU976
 2931 0926 2B68     		ldr	r3, [r5]
 635:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.INDEX);
 2932              		.loc 1 635 2 view .LVU977
 2933 0928 D4F8A002 		ldr	r0, [r4, #672]
 2934 092c 9B68     		ldr	r3, [r3, #8]
 2935 092e 9847     		blx	r3
 2936              	.LVL365:
 636:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.STDBY);
 2937              		.loc 1 636 2 is_stmt 1 view .LVU978
 636:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.STDBY);
 2938              		.loc 1 636 17 is_stmt 0 view .LVU979
 2939 0930 2B68     		ldr	r3, [r5]
 636:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.STDBY);
 2940              		.loc 1 636 2 view .LVU980
 2941 0932 D4F8A402 		ldr	r0, [r4, #676]
 2942 0936 9B68     		ldr	r3, [r3, #8]
 2943 0938 9847     		blx	r3
 2944              	.LVL366:
 637:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.UC_PWM);
 2945              		.loc 1 637 2 is_stmt 1 view .LVU981
 637:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.UC_PWM);
 2946              		.loc 1 637 17 is_stmt 0 view .LVU982
 2947 093a 2B68     		ldr	r3, [r5]
 637:boards/TMC2209_eval.c **** 	HAL.IOs->config->reset(Pins.UC_PWM);
 2948              		.loc 1 637 2 view .LVU983
 2949 093c D4F8AC02 		ldr	r0, [r4, #684]
 2950 0940 9B68     		ldr	r3, [r3, #8]
 2951 0942 9847     		blx	r3
 2952              	.LVL367:
 638:boards/TMC2209_eval.c **** 
 2953              		.loc 1 638 2 is_stmt 1 view .LVU984
 638:boards/TMC2209_eval.c **** 
 2954              		.loc 1 638 17 is_stmt 0 view .LVU985
 2955 0944 2B68     		ldr	r3, [r5]
 638:boards/TMC2209_eval.c **** 
 2956              		.loc 1 638 2 view .LVU986
 2957 0946 D4F8A802 		ldr	r0, [r4, #680]
 2958 094a 9B68     		ldr	r3, [r3, #8]
 2959 094c 9847     		blx	r3
 2960              	.LVL368:
 640:boards/TMC2209_eval.c **** 	Timer.deInit();
 2961              		.loc 1 640 2 is_stmt 1 view .LVU987
 2962 094e FFF7FEFF 		bl	StepDir_deInit
 2963              	.LVL369:
 641:boards/TMC2209_eval.c **** }
 2964              		.loc 1 641 2 view .LVU988
 641:boards/TMC2209_eval.c **** }
 2965              		.loc 1 641 7 is_stmt 0 view .LVU989
 2966 0952 044B     		ldr	r3, .L209+8
 642:boards/TMC2209_eval.c **** 
 2967              		.loc 1 642 1 view .LVU990
 2968 0954 BDE87040 		pop	{r4, r5, r6, lr}
 2969              	.LCFI12:
 2970              		.cfi_restore 14
 2971              		.cfi_restore 6
 2972              		.cfi_restore 5
 2973              		.cfi_restore 4
 2974              		.cfi_def_cfa_offset 0
 641:boards/TMC2209_eval.c **** }
 2975              		.loc 1 641 2 view .LVU991
 2976 0958 5B68     		ldr	r3, [r3, #4]
 2977 095a 1847     		bx	r3	@ indirect register sibling call
 2978              	.LVL370:
 2979              	.L210:
 2980              		.align	2
 2981              	.L209:
 2982 095c 00000000 		.word	HAL
 2983 0960 00000000 		.word	.LANCHOR0
 2984 0964 00000000 		.word	Timer
 2985              		.cfi_endproc
 2986              	.LFE18:
 2988              		.align	1
 2989              		.syntax unified
 2990              		.thumb
 2991              		.thumb_func
 2992              		.fpu softvfp
 2994              	moveBy:
 2995              	.LVL371:
 2996              	.LFB12:
 142:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 2997              		.loc 1 142 1 is_stmt 1 view -0
 2998              		.cfi_startproc
 2999              		@ args = 0, pretend = 0, frame = 0
 3000              		@ frame_needed = 0, uses_anonymous_args = 0
 143:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 3001              		.loc 1 143 2 view .LVU993
 142:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 3002              		.loc 1 142 1 is_stmt 0 view .LVU994
 3003 0968 38B5     		push	{r3, r4, r5, lr}
 3004              	.LCFI13:
 3005              		.cfi_def_cfa_offset 16
 3006              		.cfi_offset 3, -16
 3007              		.cfi_offset 4, -12
 3008              		.cfi_offset 5, -8
 3009              		.cfi_offset 14, -4
 142:boards/TMC2209_eval.c **** 	if(motor >= MOTORS)
 3010              		.loc 1 142 1 view .LVU995
 3011 096a 0D46     		mov	r5, r1
 143:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 3012              		.loc 1 143 4 view .LVU996
 3013 096c 0446     		mov	r4, r0
 3014 096e 48B9     		cbnz	r0, .L213
 3015              	.LVL372:
 3016              	.LBB243:
 3017              	.LBI243:
 141:boards/TMC2209_eval.c **** {
 3018              		.loc 1 141 17 is_stmt 1 view .LVU997
 3019              	.LBB244:
 147:boards/TMC2209_eval.c **** 
 3020              		.loc 1 147 2 view .LVU998
 147:boards/TMC2209_eval.c **** 
 3021              		.loc 1 147 12 is_stmt 0 view .LVU999
 3022 0970 FFF7FEFF 		bl	StepDir_getActualPosition
 3023              	.LVL373:
 147:boards/TMC2209_eval.c **** 
 3024              		.loc 1 147 9 view .LVU1000
 3025 0974 2968     		ldr	r1, [r5]
 3026 0976 0144     		add	r1, r1, r0
 3027 0978 2960     		str	r1, [r5]
 149:boards/TMC2209_eval.c **** }
 3028              		.loc 1 149 2 is_stmt 1 view .LVU1001
 3029              	.LVL374:
 3030              	.LBB245:
 3031              	.LBI245:
 131:boards/TMC2209_eval.c **** {
 3032              		.loc 1 131 17 view .LVU1002
 3033              	.LBB246:
 133:boards/TMC2209_eval.c **** 		return TMC_ERROR_MOTOR;
 3034              		.loc 1 133 2 view .LVU1003
 136:boards/TMC2209_eval.c **** 
 3035              		.loc 1 136 2 view .LVU1004
 3036 097a 2046     		mov	r0, r4
 3037 097c FFF7FEFF 		bl	StepDir_moveTo
 3038              	.LVL375:
 138:boards/TMC2209_eval.c **** }
 3039              		.loc 1 138 2 view .LVU1005
 136:boards/TMC2209_eval.c **** 
 3040              		.loc 1 136 2 is_stmt 0 view .LVU1006
 3041 0980 2046     		mov	r0, r4
 3042              	.L211:
 3043              	.LBE246:
 3044              	.LBE245:
 3045              	.LBE244:
 3046              	.LBE243:
 150:boards/TMC2209_eval.c **** 
 3047              		.loc 1 150 1 view .LVU1007
 3048 0982 38BD     		pop	{r3, r4, r5, pc}
 3049              	.LVL376:
 3050              	.L213:
 144:boards/TMC2209_eval.c **** 
 3051              		.loc 1 144 10 view .LVU1008
 3052 0984 0820     		movs	r0, #8
 3053              	.LVL377:
 144:boards/TMC2209_eval.c **** 
 3054              		.loc 1 144 10 view .LVU1009
 3055 0986 FCE7     		b	.L211
 3056              		.cfi_endproc
 3057              	.LFE12:
 3059              		.align	1
 3060              		.global	tmc2209_readWriteArray
 3061              		.syntax unified
 3062              		.thumb
 3063              		.thumb_func
 3064              		.fpu softvfp
 3066              	tmc2209_readWriteArray:
 3067              	.LVL378:
 3068              	.LFB3:
  82:boards/TMC2209_eval.c **** 	UART_readWrite(channelToUART(channel), data, writeLength, readLength);
 3069              		.loc 1 82 1 is_stmt 1 view -0
 3070              		.cfi_startproc
 3071              		@ args = 0, pretend = 0, frame = 0
 3072              		@ frame_needed = 0, uses_anonymous_args = 0
 3073              		@ link register save eliminated.
  83:boards/TMC2209_eval.c **** }
 3074              		.loc 1 83 2 view .LVU1011
 3075              	.LBB247:
 3076              	.LBI247:
  70:boards/TMC2209_eval.c **** {
 3077              		.loc 1 70 28 view .LVU1012
 3078              	.LBB248:
  72:boards/TMC2209_eval.c **** 
 3079              		.loc 1 72 2 view .LVU1013
  74:boards/TMC2209_eval.c **** }
 3080              		.loc 1 74 2 view .LVU1014
 3081              	.LBE248:
 3082              	.LBE247:
  83:boards/TMC2209_eval.c **** }
 3083              		.loc 1 83 2 is_stmt 0 view .LVU1015
 3084 0988 0248     		ldr	r0, .L215
 3085              	.LVL379:
  83:boards/TMC2209_eval.c **** }
 3086              		.loc 1 83 2 view .LVU1016
 3087 098a DBB2     		uxtb	r3, r3
 3088              	.LVL380:
  83:boards/TMC2209_eval.c **** }
 3089              		.loc 1 83 2 view .LVU1017
 3090 098c D0F8B402 		ldr	r0, [r0, #692]
 3091 0990 FFF7FEBF 		b	UART_readWrite
 3092              	.LVL381:
 3093              	.L216:
  83:boards/TMC2209_eval.c **** }
 3094              		.loc 1 83 2 view .LVU1018
 3095              		.align	2
 3096              	.L215:
 3097 0994 00000000 		.word	.LANCHOR0
 3098              		.cfi_endproc
 3099              	.LFE3:
 3101              		.align	1
 3102              		.global	tmc2209_CRC8
 3103              		.syntax unified
 3104              		.thumb
 3105              		.thumb_func
 3106              		.fpu softvfp
 3108              	tmc2209_CRC8:
 3109              	.LVL382:
 3110              	.LFB4:
  90:boards/TMC2209_eval.c **** 	return TMC2209_CRC(data, length);
 3111              		.loc 1 90 1 is_stmt 1 view -0
 3112              		.cfi_startproc
 3113              		@ args = 0, pretend = 0, frame = 0
 3114              		@ frame_needed = 0, uses_anonymous_args = 0
 3115              		@ link register save eliminated.
  91:boards/TMC2209_eval.c **** }
 3116              		.loc 1 91 2 view .LVU1020
  91:boards/TMC2209_eval.c **** }
 3117              		.loc 1 91 9 is_stmt 0 view .LVU1021
 3118 0998 0122     		movs	r2, #1
 3119 099a FFF7FEBF 		b	tmc_CRC8
 3120              	.LVL383:
  91:boards/TMC2209_eval.c **** }
 3121              		.loc 1 91 9 view .LVU1022
 3122              		.cfi_endproc
 3123              	.LFE4:
 3125              		.align	1
 3126              		.global	TMC2209_init
 3127              		.syntax unified
 3128              		.thumb
 3129              		.thumb_func
 3130              		.fpu softvfp
 3132              	TMC2209_init:
 3133              	.LFB23:
 673:boards/TMC2209_eval.c **** 
 674:boards/TMC2209_eval.c **** void TMC2209_init(void)
 675:boards/TMC2209_eval.c **** {
 3134              		.loc 1 675 1 is_stmt 1 view -0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 0
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
 676:boards/TMC2209_eval.c **** 	tmc_fillCRC8Table(0x07, true, 1);
 3138              		.loc 1 676 2 view .LVU1024
 675:boards/TMC2209_eval.c **** 	tmc_fillCRC8Table(0x07, true, 1);
 3139              		.loc 1 675 1 is_stmt 0 view .LVU1025
 3140 099e F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 3141              	.LCFI14:
 3142              		.cfi_def_cfa_offset 32
 3143              		.cfi_offset 4, -20
 3144              		.cfi_offset 5, -16
 3145              		.cfi_offset 6, -12
 3146              		.cfi_offset 7, -8
 3147              		.cfi_offset 14, -4
 677:boards/TMC2209_eval.c **** 	thigh = 0;
 678:boards/TMC2209_eval.c **** 
 679:boards/TMC2209_eval.c **** 	Pins.ENN      = &HAL.IOs->pins->DIO0;
 3148              		.loc 1 679 22 view .LVU1026
 3149 09a0 6B4F     		ldr	r7, .L219
 677:boards/TMC2209_eval.c **** 	thigh = 0;
 3150              		.loc 1 677 8 view .LVU1027
 3151 09a2 6C4C     		ldr	r4, .L219+4
 676:boards/TMC2209_eval.c **** 	thigh = 0;
 3152              		.loc 1 676 2 view .LVU1028
 3153 09a4 0122     		movs	r2, #1
 3154 09a6 1146     		mov	r1, r2
 3155 09a8 0720     		movs	r0, #7
 3156 09aa FFF7FEFF 		bl	tmc_fillCRC8Table
 3157              	.LVL384:
 677:boards/TMC2209_eval.c **** 	thigh = 0;
 3158              		.loc 1 677 2 is_stmt 1 view .LVU1029
 3159              		.loc 1 679 22 is_stmt 0 view .LVU1030
 3160 09ae FD68     		ldr	r5, [r7, #12]
 3161              		.loc 1 679 26 view .LVU1031
 3162 09b0 6B68     		ldr	r3, [r5, #4]
 680:boards/TMC2209_eval.c **** 	Pins.SPREAD   = &HAL.IOs->pins->DIO8;
 3163              		.loc 1 680 18 view .LVU1032
 3164 09b2 03F5B472 		add	r2, r3, #360
 3165              		.loc 1 680 16 view .LVU1033
 3166 09b6 C4F88C22 		str	r2, [r4, #652]
 681:boards/TMC2209_eval.c **** 	Pins.STEP     = &HAL.IOs->pins->DIO6;
 3167              		.loc 1 681 18 view .LVU1034
 3168 09ba 03F59472 		add	r2, r3, #296
 3169              		.loc 1 681 16 view .LVU1035
 3170 09be C4F89022 		str	r2, [r4, #656]
 682:boards/TMC2209_eval.c **** 	Pins.DIR      = &HAL.IOs->pins->DIO7;
 3171              		.loc 1 682 18 view .LVU1036
 3172 09c2 03F5A472 		add	r2, r3, #328
 3173              		.loc 1 682 16 view .LVU1037
 3174 09c6 C4F89422 		str	r2, [r4, #660]
 683:boards/TMC2209_eval.c **** 	Pins.MS1_AD0  = &HAL.IOs->pins->DIO3;
 3175              		.loc 1 683 18 view .LVU1038
 3176 09ca 03F1C802 		add	r2, r3, #200
 3177              		.loc 1 683 16 view .LVU1039
 3178 09ce C4F89822 		str	r2, [r4, #664]
 684:boards/TMC2209_eval.c **** 	Pins.MS2_AD1  = &HAL.IOs->pins->DIO4;
 3179              		.loc 1 684 18 view .LVU1040
 3180 09d2 03F1E802 		add	r2, r3, #232
 3181              		.loc 1 684 16 view .LVU1041
 3182 09d6 C4F89C22 		str	r2, [r4, #668]
 685:boards/TMC2209_eval.c **** 	Pins.DIAG     = &HAL.IOs->pins->DIO1;
 3183              		.loc 1 685 18 view .LVU1042
 3184 09da 03F18802 		add	r2, r3, #136
 679:boards/TMC2209_eval.c **** 	Pins.SPREAD   = &HAL.IOs->pins->DIO8;
 3185              		.loc 1 679 18 view .LVU1043
 3186 09de 03F16800 		add	r0, r3, #104
 3187              		.loc 1 685 16 view .LVU1044
 3188 09e2 C4F8A022 		str	r2, [r4, #672]
 686:boards/TMC2209_eval.c **** 	Pins.INDEX    = &HAL.IOs->pins->DIO2;
 3189              		.loc 1 686 18 view .LVU1045
 3190 09e6 03F1A802 		add	r2, r3, #168
 687:boards/TMC2209_eval.c **** 	Pins.UC_PWM   = &HAL.IOs->pins->DIO9;
 3191              		.loc 1 687 18 view .LVU1046
 3192 09ea 03F5C473 		add	r3, r3, #392
 688:boards/TMC2209_eval.c **** 	Pins.STDBY    = &HAL.IOs->pins->DIO0;
 3193              		.loc 1 688 16 view .LVU1047
 3194 09ee C4E9AA30 		strd	r3, r0, [r4, #680]
 689:boards/TMC2209_eval.c **** 
 690:boards/TMC2209_eval.c **** 	HAL.IOs->config->toOutput(Pins.ENN);
 3195              		.loc 1 690 17 view .LVU1048
 3196 09f2 2B68     		ldr	r3, [r5]
 686:boards/TMC2209_eval.c **** 	Pins.UC_PWM   = &HAL.IOs->pins->DIO9;
 3197              		.loc 1 686 16 view .LVU1049
 3198 09f4 C4F8A422 		str	r2, [r4, #676]
 677:boards/TMC2209_eval.c **** 
 3199              		.loc 1 677 8 view .LVU1050
 3200 09f8 0026     		movs	r6, #0
 3201              		.loc 1 690 2 view .LVU1051
 3202 09fa DB68     		ldr	r3, [r3, #12]
 677:boards/TMC2209_eval.c **** 
 3203              		.loc 1 677 8 view .LVU1052
 3204 09fc C4F8B062 		str	r6, [r4, #688]
 679:boards/TMC2209_eval.c **** 	Pins.SPREAD   = &HAL.IOs->pins->DIO8;
 3205              		.loc 1 679 2 is_stmt 1 view .LVU1053
 679:boards/TMC2209_eval.c **** 	Pins.SPREAD   = &HAL.IOs->pins->DIO8;
 3206              		.loc 1 679 16 is_stmt 0 view .LVU1054
 3207 0a00 C4F88802 		str	r0, [r4, #648]
 680:boards/TMC2209_eval.c **** 	Pins.STEP     = &HAL.IOs->pins->DIO6;
 3208              		.loc 1 680 2 is_stmt 1 view .LVU1055
 681:boards/TMC2209_eval.c **** 	Pins.DIR      = &HAL.IOs->pins->DIO7;
 3209              		.loc 1 681 2 view .LVU1056
 682:boards/TMC2209_eval.c **** 	Pins.MS1_AD0  = &HAL.IOs->pins->DIO3;
 3210              		.loc 1 682 2 view .LVU1057
 683:boards/TMC2209_eval.c **** 	Pins.MS2_AD1  = &HAL.IOs->pins->DIO4;
 3211              		.loc 1 683 2 view .LVU1058
 684:boards/TMC2209_eval.c **** 	Pins.DIAG     = &HAL.IOs->pins->DIO1;
 3212              		.loc 1 684 2 view .LVU1059
 685:boards/TMC2209_eval.c **** 	Pins.INDEX    = &HAL.IOs->pins->DIO2;
 3213              		.loc 1 685 2 view .LVU1060
 686:boards/TMC2209_eval.c **** 	Pins.UC_PWM   = &HAL.IOs->pins->DIO9;
 3214              		.loc 1 686 2 view .LVU1061
 687:boards/TMC2209_eval.c **** 	Pins.STDBY    = &HAL.IOs->pins->DIO0;
 3215              		.loc 1 687 2 view .LVU1062
 3216              		.loc 1 690 2 view .LVU1063
 3217 0a04 9847     		blx	r3
 3218              	.LVL385:
 691:boards/TMC2209_eval.c **** 	HAL.IOs->config->toOutput(Pins.SPREAD);
 3219              		.loc 1 691 2 view .LVU1064
 3220              		.loc 1 691 17 is_stmt 0 view .LVU1065
 3221 0a06 2B68     		ldr	r3, [r5]
 3222              		.loc 1 691 2 view .LVU1066
 3223 0a08 D4F88C02 		ldr	r0, [r4, #652]
 3224 0a0c DB68     		ldr	r3, [r3, #12]
 3225 0a0e 9847     		blx	r3
 3226              	.LVL386:
 692:boards/TMC2209_eval.c **** 	HAL.IOs->config->toOutput(Pins.STEP);
 3227              		.loc 1 692 2 is_stmt 1 view .LVU1067
 3228              		.loc 1 692 17 is_stmt 0 view .LVU1068
 3229 0a10 2B68     		ldr	r3, [r5]
 3230              		.loc 1 692 2 view .LVU1069
 3231 0a12 D4F89002 		ldr	r0, [r4, #656]
 3232 0a16 DB68     		ldr	r3, [r3, #12]
 3233 0a18 9847     		blx	r3
 3234              	.LVL387:
 693:boards/TMC2209_eval.c **** 	HAL.IOs->config->toOutput(Pins.DIR);
 3235              		.loc 1 693 2 is_stmt 1 view .LVU1070
 3236              		.loc 1 693 17 is_stmt 0 view .LVU1071
 3237 0a1a 2B68     		ldr	r3, [r5]
 3238              		.loc 1 693 2 view .LVU1072
 3239 0a1c D4F89402 		ldr	r0, [r4, #660]
 3240 0a20 DB68     		ldr	r3, [r3, #12]
 3241 0a22 9847     		blx	r3
 3242              	.LVL388:
 694:boards/TMC2209_eval.c **** 	HAL.IOs->config->toOutput(Pins.MS1_AD0);
 3243              		.loc 1 694 2 is_stmt 1 view .LVU1073
 3244              		.loc 1 694 17 is_stmt 0 view .LVU1074
 3245 0a24 2B68     		ldr	r3, [r5]
 3246              		.loc 1 694 2 view .LVU1075
 3247 0a26 D4F89802 		ldr	r0, [r4, #664]
 3248 0a2a DB68     		ldr	r3, [r3, #12]
 3249 0a2c 9847     		blx	r3
 3250              	.LVL389:
 695:boards/TMC2209_eval.c **** 	HAL.IOs->config->toOutput(Pins.MS2_AD1);
 3251              		.loc 1 695 2 is_stmt 1 view .LVU1076
 3252              		.loc 1 695 17 is_stmt 0 view .LVU1077
 3253 0a2e 2B68     		ldr	r3, [r5]
 3254              		.loc 1 695 2 view .LVU1078
 3255 0a30 D4F89C02 		ldr	r0, [r4, #668]
 3256 0a34 DB68     		ldr	r3, [r3, #12]
 3257 0a36 9847     		blx	r3
 3258              	.LVL390:
 696:boards/TMC2209_eval.c **** 	HAL.IOs->config->toInput(Pins.DIAG);
 3259              		.loc 1 696 2 is_stmt 1 view .LVU1079
 3260              		.loc 1 696 17 is_stmt 0 view .LVU1080
 3261 0a38 2B68     		ldr	r3, [r5]
 3262              		.loc 1 696 2 view .LVU1081
 3263 0a3a D4F8A002 		ldr	r0, [r4, #672]
 3264 0a3e 1B69     		ldr	r3, [r3, #16]
 3265 0a40 9847     		blx	r3
 3266              	.LVL391:
 697:boards/TMC2209_eval.c **** 	HAL.IOs->config->toInput(Pins.INDEX);
 3267              		.loc 1 697 2 is_stmt 1 view .LVU1082
 3268              		.loc 1 697 17 is_stmt 0 view .LVU1083
 3269 0a42 2B68     		ldr	r3, [r5]
 3270              		.loc 1 697 2 view .LVU1084
 3271 0a44 D4F8A402 		ldr	r0, [r4, #676]
 3272 0a48 1B69     		ldr	r3, [r3, #16]
 3273 0a4a 9847     		blx	r3
 3274              	.LVL392:
 698:boards/TMC2209_eval.c **** 
 699:boards/TMC2209_eval.c **** 	HAL.IOs->config->setLow(Pins.MS1_AD0);
 3275              		.loc 1 699 2 is_stmt 1 view .LVU1085
 3276              		.loc 1 699 17 is_stmt 0 view .LVU1086
 3277 0a4c 2B68     		ldr	r3, [r5]
 3278              		.loc 1 699 2 view .LVU1087
 3279 0a4e D4F89802 		ldr	r0, [r4, #664]
 3280 0a52 9B69     		ldr	r3, [r3, #24]
 3281 0a54 9847     		blx	r3
 3282              	.LVL393:
 700:boards/TMC2209_eval.c **** 	HAL.IOs->config->setLow(Pins.MS2_AD1);
 3283              		.loc 1 700 2 is_stmt 1 view .LVU1088
 3284              		.loc 1 700 17 is_stmt 0 view .LVU1089
 3285 0a56 2B68     		ldr	r3, [r5]
 3286              		.loc 1 700 2 view .LVU1090
 3287 0a58 D4F89C02 		ldr	r0, [r4, #668]
 3288 0a5c 9B69     		ldr	r3, [r3, #24]
 3289 0a5e 9847     		blx	r3
 3290              	.LVL394:
 701:boards/TMC2209_eval.c **** 
 702:boards/TMC2209_eval.c **** 	TMC2209_UARTChannel = HAL.UART;
 3291              		.loc 1 702 2 is_stmt 1 view .LVU1091
 3292              		.loc 1 702 27 is_stmt 0 view .LVU1092
 3293 0a60 FB6A     		ldr	r3, [r7, #44]
 3294              		.loc 1 702 22 view .LVU1093
 3295 0a62 C4F8B432 		str	r3, [r4, #692]
 703:boards/TMC2209_eval.c **** 	TMC2209_UARTChannel->pinout = UART_PINS_2;
 3296              		.loc 1 703 2 is_stmt 1 view .LVU1094
 3297              		.loc 1 703 30 is_stmt 0 view .LVU1095
 3298 0a66 0127     		movs	r7, #1
 3299 0a68 1F70     		strb	r7, [r3]
 704:boards/TMC2209_eval.c **** 	TMC2209_UARTChannel->rxtx.init();
 3300              		.loc 1 704 2 is_stmt 1 view .LVU1096
 3301 0a6a 5B68     		ldr	r3, [r3, #4]
 3302 0a6c 9847     		blx	r3
 3303              	.LVL395:
 705:boards/TMC2209_eval.c **** 
 706:boards/TMC2209_eval.c **** 	TMC2209_config = Evalboards.ch2.config;
 3304              		.loc 1 706 2 view .LVU1097
 3305              		.loc 1 706 33 is_stmt 0 view .LVU1098
 3306 0a6e 3A4A     		ldr	r2, .L219+8
 707:boards/TMC2209_eval.c **** 
 708:boards/TMC2209_eval.c **** 	Evalboards.ch2.config->reset        = reset;
 3307              		.loc 1 708 38 view .LVU1099
 3308 0a70 3A49     		ldr	r1, .L219+12
 706:boards/TMC2209_eval.c **** 
 3309              		.loc 1 706 33 view .LVU1100
 3310 0a72 D2F89030 		ldr	r3, [r2, #144]
 3311              		.loc 1 708 2 is_stmt 1 view .LVU1101
 709:boards/TMC2209_eval.c **** 	Evalboards.ch2.config->restore      = restore;
 710:boards/TMC2209_eval.c **** 
 711:boards/TMC2209_eval.c **** 	Evalboards.ch2.rotate               = rotate;
 712:boards/TMC2209_eval.c **** 	Evalboards.ch2.right                = right;
 713:boards/TMC2209_eval.c **** 	Evalboards.ch2.left                 = left;
 714:boards/TMC2209_eval.c **** 	Evalboards.ch2.stop                 = stop;
 715:boards/TMC2209_eval.c **** 	Evalboards.ch2.GAP                  = GAP;
 716:boards/TMC2209_eval.c **** 	Evalboards.ch2.SAP                  = SAP;
 717:boards/TMC2209_eval.c **** 	Evalboards.ch2.moveTo               = moveTo;
 718:boards/TMC2209_eval.c **** 	Evalboards.ch2.moveBy               = moveBy;
 719:boards/TMC2209_eval.c **** 	Evalboards.ch2.writeRegister        = tmc2209_writeRegister;
 720:boards/TMC2209_eval.c **** 	Evalboards.ch2.readRegister         = tmc2209_readRegister;
 721:boards/TMC2209_eval.c **** 	Evalboards.ch2.userFunction         = userFunction;
 722:boards/TMC2209_eval.c **** 	Evalboards.ch2.enableDriver         = enableDriver;
 723:boards/TMC2209_eval.c **** 	Evalboards.ch2.checkErrors          = checkErrors;
 724:boards/TMC2209_eval.c **** 	Evalboards.ch2.numberOfMotors       = MOTORS;
 3312              		.loc 1 724 38 is_stmt 0 view .LVU1102
 3313 0a76 82F88C70 		strb	r7, [r2, #140]
 708:boards/TMC2209_eval.c **** 	Evalboards.ch2.config->restore      = restore;
 3314              		.loc 1 708 38 view .LVU1103
 3315 0a7a C3F80412 		str	r1, [r3, #516]
 709:boards/TMC2209_eval.c **** 	Evalboards.ch2.config->restore      = restore;
 3316              		.loc 1 709 2 is_stmt 1 view .LVU1104
 709:boards/TMC2209_eval.c **** 	Evalboards.ch2.config->restore      = restore;
 3317              		.loc 1 709 38 is_stmt 0 view .LVU1105
 3318 0a7e 3849     		ldr	r1, .L219+16
 3319 0a80 C3F80812 		str	r1, [r3, #520]
 711:boards/TMC2209_eval.c **** 	Evalboards.ch2.right                = right;
 3320              		.loc 1 711 2 is_stmt 1 view .LVU1106
 711:boards/TMC2209_eval.c **** 	Evalboards.ch2.right                = right;
 3321              		.loc 1 711 38 is_stmt 0 view .LVU1107
 3322 0a84 3749     		ldr	r1, .L219+20
 3323 0a86 C2F89C10 		str	r1, [r2, #156]
 712:boards/TMC2209_eval.c **** 	Evalboards.ch2.left                 = left;
 3324              		.loc 1 712 2 is_stmt 1 view .LVU1108
 712:boards/TMC2209_eval.c **** 	Evalboards.ch2.left                 = left;
 3325              		.loc 1 712 38 is_stmt 0 view .LVU1109
 3326 0a8a 3749     		ldr	r1, .L219+24
 3327 0a8c C2F89810 		str	r1, [r2, #152]
 713:boards/TMC2209_eval.c **** 	Evalboards.ch2.stop                 = stop;
 3328              		.loc 1 713 2 is_stmt 1 view .LVU1110
 713:boards/TMC2209_eval.c **** 	Evalboards.ch2.stop                 = stop;
 3329              		.loc 1 713 38 is_stmt 0 view .LVU1111
 3330 0a90 3649     		ldr	r1, .L219+28
 3331 0a92 C2F89410 		str	r1, [r2, #148]
 714:boards/TMC2209_eval.c **** 	Evalboards.ch2.GAP                  = GAP;
 3332              		.loc 1 714 2 is_stmt 1 view .LVU1112
 714:boards/TMC2209_eval.c **** 	Evalboards.ch2.GAP                  = GAP;
 3333              		.loc 1 714 38 is_stmt 0 view .LVU1113
 3334 0a96 3649     		ldr	r1, .L219+32
 3335 0a98 C2F8A010 		str	r1, [r2, #160]
 715:boards/TMC2209_eval.c **** 	Evalboards.ch2.SAP                  = SAP;
 3336              		.loc 1 715 2 is_stmt 1 view .LVU1114
 715:boards/TMC2209_eval.c **** 	Evalboards.ch2.SAP                  = SAP;
 3337              		.loc 1 715 38 is_stmt 0 view .LVU1115
 3338 0a9c 3549     		ldr	r1, .L219+36
 3339 0a9e C2F8B410 		str	r1, [r2, #180]
 716:boards/TMC2209_eval.c **** 	Evalboards.ch2.moveTo               = moveTo;
 3340              		.loc 1 716 2 is_stmt 1 view .LVU1116
 716:boards/TMC2209_eval.c **** 	Evalboards.ch2.moveTo               = moveTo;
 3341              		.loc 1 716 38 is_stmt 0 view .LVU1117
 3342 0aa2 3549     		ldr	r1, .L219+40
 3343 0aa4 C2F8B010 		str	r1, [r2, #176]
 717:boards/TMC2209_eval.c **** 	Evalboards.ch2.moveBy               = moveBy;
 3344              		.loc 1 717 2 is_stmt 1 view .LVU1118
 717:boards/TMC2209_eval.c **** 	Evalboards.ch2.moveBy               = moveBy;
 3345              		.loc 1 717 38 is_stmt 0 view .LVU1119
 3346 0aa8 3449     		ldr	r1, .L219+44
 3347 0aaa C2F8A410 		str	r1, [r2, #164]
 718:boards/TMC2209_eval.c **** 	Evalboards.ch2.writeRegister        = tmc2209_writeRegister;
 3348              		.loc 1 718 2 is_stmt 1 view .LVU1120
 718:boards/TMC2209_eval.c **** 	Evalboards.ch2.writeRegister        = tmc2209_writeRegister;
 3349              		.loc 1 718 38 is_stmt 0 view .LVU1121
 3350 0aae 3449     		ldr	r1, .L219+48
 3351 0ab0 C2F8A810 		str	r1, [r2, #168]
 719:boards/TMC2209_eval.c **** 	Evalboards.ch2.readRegister         = tmc2209_readRegister;
 3352              		.loc 1 719 2 is_stmt 1 view .LVU1122
 719:boards/TMC2209_eval.c **** 	Evalboards.ch2.readRegister         = tmc2209_readRegister;
 3353              		.loc 1 719 38 is_stmt 0 view .LVU1123
 3354 0ab4 3349     		ldr	r1, .L219+52
 3355 0ab6 C2F8C410 		str	r1, [r2, #196]
 720:boards/TMC2209_eval.c **** 	Evalboards.ch2.userFunction         = userFunction;
 3356              		.loc 1 720 2 is_stmt 1 view .LVU1124
 720:boards/TMC2209_eval.c **** 	Evalboards.ch2.userFunction         = userFunction;
 3357              		.loc 1 720 38 is_stmt 0 view .LVU1125
 3358 0aba 3349     		ldr	r1, .L219+56
 3359 0abc C2F8C010 		str	r1, [r2, #192]
 721:boards/TMC2209_eval.c **** 	Evalboards.ch2.enableDriver         = enableDriver;
 3360              		.loc 1 721 2 is_stmt 1 view .LVU1126
 721:boards/TMC2209_eval.c **** 	Evalboards.ch2.enableDriver         = enableDriver;
 3361              		.loc 1 721 38 is_stmt 0 view .LVU1127
 3362 0ac0 3249     		ldr	r1, .L219+60
 3363 0ac2 C2F8CC10 		str	r1, [r2, #204]
 722:boards/TMC2209_eval.c **** 	Evalboards.ch2.checkErrors          = checkErrors;
 3364              		.loc 1 722 2 is_stmt 1 view .LVU1128
 722:boards/TMC2209_eval.c **** 	Evalboards.ch2.checkErrors          = checkErrors;
 3365              		.loc 1 722 38 is_stmt 0 view .LVU1129
 3366 0ac6 3249     		ldr	r1, .L219+64
 3367 0ac8 C2F8DC10 		str	r1, [r2, #220]
 723:boards/TMC2209_eval.c **** 	Evalboards.ch2.numberOfMotors       = MOTORS;
 3368              		.loc 1 723 2 is_stmt 1 view .LVU1130
 723:boards/TMC2209_eval.c **** 	Evalboards.ch2.numberOfMotors       = MOTORS;
 3369              		.loc 1 723 38 is_stmt 0 view .LVU1131
 3370 0acc 3149     		ldr	r1, .L219+68
 3371 0ace C2F8D810 		str	r1, [r2, #216]
 3372              		.loc 1 724 2 is_stmt 1 view .LVU1132
 725:boards/TMC2209_eval.c **** 	Evalboards.ch2.VMMin                = VM_MIN;
 3373              		.loc 1 725 2 view .LVU1133
 726:boards/TMC2209_eval.c **** 	Evalboards.ch2.VMMax                = VM_MAX;
 3374              		.loc 1 726 38 is_stmt 0 view .LVU1134
 3375 0ad2 3220     		movs	r0, #50
 3376 0ad4 4FF4C371 		mov	r1, #390
 3377 0ad8 C2E92110 		strd	r1, r0, [r2, #132]
 727:boards/TMC2209_eval.c **** 	Evalboards.ch2.deInit               = deInit;
 3378              		.loc 1 727 2 is_stmt 1 view .LVU1135
 3379              		.loc 1 727 38 is_stmt 0 view .LVU1136
 3380 0adc 2E49     		ldr	r1, .L219+72
 3381 0ade C2F8D410 		str	r1, [r2, #212]
 728:boards/TMC2209_eval.c **** 	Evalboards.ch2.periodicJob          = periodicJob;
 3382              		.loc 1 728 2 is_stmt 1 view .LVU1137
 3383              		.loc 1 728 38 is_stmt 0 view .LVU1138
 3384 0ae2 2E49     		ldr	r1, .L219+76
 3385 0ae4 C2F8D010 		str	r1, [r2, #208]
 729:boards/TMC2209_eval.c **** 
 730:boards/TMC2209_eval.c **** 	tmc2209_init(&TMC2209, 0, 0, TMC2209_config, &tmc2209_defaultRegisterResetState[0]);
 3386              		.loc 1 730 2 is_stmt 1 view .LVU1139
 3387 0ae8 2D4A     		ldr	r2, .L219+80
 3388 0aea 0092     		str	r2, [sp]
 3389 0aec 3146     		mov	r1, r6
 3390 0aee 3246     		mov	r2, r6
 3391 0af0 2046     		mov	r0, r4
 3392 0af2 FFF7FEFF 		bl	tmc2209_init
 3393              	.LVL396:
 731:boards/TMC2209_eval.c **** 
 732:boards/TMC2209_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 3394              		.loc 1 732 2 view .LVU1140
 3395 0af6 4FF40030 		mov	r0, #131072
 3396 0afa FFF7FEFF 		bl	StepDir_init
 3397              	.LVL397:
 733:boards/TMC2209_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, Pins.DIAG);
 3398              		.loc 1 733 2 view .LVU1141
 3399 0afe D4E9A412 		ldrd	r1, r2, [r4, #656]
 3400 0b02 D4F8A032 		ldr	r3, [r4, #672]
 3401 0b06 3046     		mov	r0, r6
 3402 0b08 FFF7FEFF 		bl	StepDir_setPins
 3403              	.LVL398:
 734:boards/TMC2209_eval.c **** 	StepDir_setVelocityMax(0, 51200);
 3404              		.loc 1 734 2 view .LVU1142
 3405 0b0c 3046     		mov	r0, r6
 3406 0b0e 4FF44841 		mov	r1, #51200
 3407 0b12 FFF7FEFF 		bl	StepDir_setVelocityMax
 3408              	.LVL399:
 735:boards/TMC2209_eval.c **** 	StepDir_setAcceleration(0, 51200);
 3409              		.loc 1 735 2 view .LVU1143
 3410 0b16 4FF44841 		mov	r1, #51200
 3411 0b1a 3046     		mov	r0, r6
 3412 0b1c FFF7FEFF 		bl	StepDir_setAcceleration
 3413              	.LVL400:
 736:boards/TMC2209_eval.c **** 
 737:boards/TMC2209_eval.c **** #if defined(Startrampe)
 738:boards/TMC2209_eval.c **** 	Pins.UC_PWM->configuration.GPIO_Mode = GPIO_Mode_AF;
 739:boards/TMC2209_eval.c **** 	GPIO_PinAFConfig(Pins.UC_PWM->port, Pins.UC_PWM->bit, GPIO_AF_TIM1);
 740:boards/TMC2209_eval.c **** #elif defined(Landungsbruecke)
 741:boards/TMC2209_eval.c **** 	HAL.IOs->config->toOutput(Pins.UC_PWM);
 3414              		.loc 1 741 2 view .LVU1144
 3415              		.loc 1 741 17 is_stmt 0 view .LVU1145
 3416 0b20 2B68     		ldr	r3, [r5]
 3417              		.loc 1 741 2 view .LVU1146
 3418 0b22 D4F8A802 		ldr	r0, [r4, #680]
 3419 0b26 DB68     		ldr	r3, [r3, #12]
 3420 0b28 9847     		blx	r3
 3421              	.LVL401:
 742:boards/TMC2209_eval.c **** 	Pins.UC_PWM->configuration.GPIO_Mode = GPIO_Mode_AF4;
 3422              		.loc 1 742 2 is_stmt 1 view .LVU1147
 3423              		.loc 1 742 6 is_stmt 0 view .LVU1148
 3424 0b2a D4F8A802 		ldr	r0, [r4, #680]
 743:boards/TMC2209_eval.c **** #endif
 744:boards/TMC2209_eval.c **** 
 745:boards/TMC2209_eval.c **** 	HAL.IOs->config->set(Pins.UC_PWM);
 746:boards/TMC2209_eval.c **** 	Timer.init();
 3425              		.loc 1 746 7 view .LVU1149
 3426 0b2e 1D4C     		ldr	r4, .L219+84
 742:boards/TMC2209_eval.c **** 	Pins.UC_PWM->configuration.GPIO_Mode = GPIO_Mode_AF4;
 3427              		.loc 1 742 39 view .LVU1150
 3428 0b30 0423     		movs	r3, #4
 3429 0b32 4375     		strb	r3, [r0, #21]
 745:boards/TMC2209_eval.c **** 	Timer.init();
 3430              		.loc 1 745 2 is_stmt 1 view .LVU1151
 745:boards/TMC2209_eval.c **** 	Timer.init();
 3431              		.loc 1 745 17 is_stmt 0 view .LVU1152
 3432 0b34 2B68     		ldr	r3, [r5]
 745:boards/TMC2209_eval.c **** 	Timer.init();
 3433              		.loc 1 745 2 view .LVU1153
 3434 0b36 1B68     		ldr	r3, [r3]
 3435 0b38 9847     		blx	r3
 3436              	.LVL402:
 3437              		.loc 1 746 2 is_stmt 1 view .LVU1154
 3438 0b3a 2368     		ldr	r3, [r4]
 3439 0b3c 9847     		blx	r3
 3440              	.LVL403:
 747:boards/TMC2209_eval.c **** 	Timer.setDuty(TIMER_CHANNEL_3, 0);
 3441              		.loc 1 747 2 view .LVU1155
 3442 0b3e A368     		ldr	r3, [r4, #8]
 3443 0b40 3146     		mov	r1, r6
 3444 0b42 0220     		movs	r0, #2
 3445 0b44 9847     		blx	r3
 3446              	.LVL404:
 748:boards/TMC2209_eval.c **** 
 749:boards/TMC2209_eval.c **** 	enableDriver(DRIVER_ENABLE);
 3447              		.loc 1 749 2 view .LVU1156
 3448 0b46 3846     		mov	r0, r7
 750:boards/TMC2209_eval.c **** };
 3449              		.loc 1 750 1 is_stmt 0 view .LVU1157
 3450 0b48 03B0     		add	sp, sp, #12
 3451              	.LCFI15:
 3452              		.cfi_def_cfa_offset 20
 3453              		@ sp needed
 3454 0b4a BDE8F040 		pop	{r4, r5, r6, r7, lr}
 3455              	.LCFI16:
 3456              		.cfi_restore 14
 3457              		.cfi_restore 7
 3458              		.cfi_restore 6
 3459              		.cfi_restore 5
 3460              		.cfi_restore 4
 3461              		.cfi_def_cfa_offset 0
 749:boards/TMC2209_eval.c **** };
 3462              		.loc 1 749 2 view .LVU1158
 3463 0b4e A3E6     		b	enableDriver
 3464              	.LVL405:
 3465              	.L220:
 3466              		.align	2
 3467              	.L219:
 3468 0b50 00000000 		.word	HAL
 3469 0b54 00000000 		.word	.LANCHOR0
 3470 0b58 00000000 		.word	Evalboards
 3471 0b5c 00000000 		.word	reset
 3472 0b60 00000000 		.word	restore
 3473 0b64 00000000 		.word	rotate
 3474 0b68 00000000 		.word	right
 3475 0b6c 00000000 		.word	left
 3476 0b70 00000000 		.word	stop
 3477 0b74 00000000 		.word	GAP
 3478 0b78 00000000 		.word	SAP
 3479 0b7c 00000000 		.word	moveTo
 3480 0b80 00000000 		.word	moveBy
 3481 0b84 00000000 		.word	tmc2209_writeRegister
 3482 0b88 00000000 		.word	tmc2209_readRegister
 3483 0b8c 00000000 		.word	userFunction
 3484 0b90 00000000 		.word	enableDriver
 3485 0b94 00000000 		.word	checkErrors
 3486 0b98 00000000 		.word	deInit
 3487 0b9c 00000000 		.word	periodicJob
 3488 0ba0 00000000 		.word	.LANCHOR1
 3489 0ba4 00000000 		.word	Timer
 3490              		.cfi_endproc
 3491              	.LFE23:
 3493              		.comm	TMCMotionController,532,4
 3494              		.comm	TMCDriver,532,4
 3495              		.comm	Evalboards,244,4
 3496              		.comm	VitalSignsMonitor,20,4
 3497              		.comm	hwid,1,1
 3498              		.comm	HAL,48,4
 3499              		.comm	UART,40,4
 3500              		.comm	Timer,16,4
 3501              		.comm	WLAN,36,4
 3502              		.comm	RS232,36,4
 3503              		.comm	LEDs,28,4
 3504              		.comm	USB,36,4
 3505              		.comm	uart0_interrupt,1,1
 3506              		.comm	ADCs,32,4
 3507              		.comm	SPI,44,4
 3508              		.comm	IOMap,2088,4
 3509              		.comm	IOs,52,4
 3510              		.comm	Cpu,8,4
 3511              		.section	.rodata
 3512              		.align	2
 3513              		.set	.LANCHOR1,. + 0
 3516              	tmc2209_defaultRegisterResetState:
 3517 0000 40000000 		.word	64
 3518 0004 00000000 		.word	0
 3519 0008 00000000 		.word	0
 3520 000c 00000000 		.word	0
 3521 0010 00000000 		.word	0
 3522 0014 00000000 		.word	0
 3523 0018 00000000 		.word	0
 3524 001c 00000000 		.word	0
 3525 0020 00000000 		.word	0
 3526 0024 00000000 		.word	0
 3527 0028 00000000 		.word	0
 3528 002c 00000000 		.word	0
 3529 0030 00000000 		.word	0
 3530 0034 00000000 		.word	0
 3531 0038 00000000 		.word	0
 3532 003c 00000000 		.word	0
 3533 0040 03170700 		.word	464643
 3534 0044 14000000 		.word	20
 3535 0048 00000000 		.word	0
 3536 004c 00000000 		.word	0
 3537 0050 00000000 		.word	0
 3538 0054 00000000 		.word	0
 3539 0058 00000000 		.word	0
 3540 005c 00000000 		.word	0
 3541 0060 00000000 		.word	0
 3542 0064 00000000 		.word	0
 3543 0068 00000000 		.word	0
 3544 006c 00000000 		.word	0
 3545 0070 00000000 		.word	0
 3546 0074 00000000 		.word	0
 3547 0078 00000000 		.word	0
 3548 007c 00000000 		.word	0
 3549 0080 00000000 		.word	0
 3550 0084 00000000 		.word	0
 3551 0088 00000000 		.word	0
 3552 008c 00000000 		.word	0
 3553 0090 00000000 		.word	0
 3554 0094 00000000 		.word	0
 3555 0098 00000000 		.word	0
 3556 009c 00000000 		.word	0
 3557 00a0 00000000 		.word	0
 3558 00a4 00000000 		.word	0
 3559 00a8 00000000 		.word	0
 3560 00ac 00000000 		.word	0
 3561 00b0 00000000 		.word	0
 3562 00b4 00000000 		.word	0
 3563 00b8 00000000 		.word	0
 3564 00bc 00000000 		.word	0
 3565 00c0 00000000 		.word	0
 3566 00c4 00000000 		.word	0
 3567 00c8 00000000 		.word	0
 3568 00cc 00000000 		.word	0
 3569 00d0 00000000 		.word	0
 3570 00d4 00000000 		.word	0
 3571 00d8 00000000 		.word	0
 3572 00dc 00000000 		.word	0
 3573 00e0 00000000 		.word	0
 3574 00e4 00000000 		.word	0
 3575 00e8 00000000 		.word	0
 3576 00ec 00000000 		.word	0
 3577 00f0 00000000 		.word	0
 3578 00f4 00000000 		.word	0
 3579 00f8 00000000 		.word	0
 3580 00fc 00000000 		.word	0
 3581 0100 00000000 		.word	0
 3582 0104 00000000 		.word	0
 3583 0108 00000000 		.word	0
 3584 010c 00000000 		.word	0
 3585 0110 00000000 		.word	0
 3586 0114 00000000 		.word	0
 3587 0118 00000000 		.word	0
 3588 011c 00000000 		.word	0
 3589 0120 00000000 		.word	0
 3590 0124 00000000 		.word	0
 3591 0128 00000000 		.word	0
 3592 012c 00000000 		.word	0
 3593 0130 00000000 		.word	0
 3594 0134 00000000 		.word	0
 3595 0138 00000000 		.word	0
 3596 013c 00000000 		.word	0
 3597 0140 00000000 		.word	0
 3598 0144 00000000 		.word	0
 3599 0148 00000000 		.word	0
 3600 014c 00000000 		.word	0
 3601 0150 00000000 		.word	0
 3602 0154 00000000 		.word	0
 3603 0158 00000000 		.word	0
 3604 015c 00000000 		.word	0
 3605 0160 00000000 		.word	0
 3606 0164 00000000 		.word	0
 3607 0168 00000000 		.word	0
 3608 016c 00000000 		.word	0
 3609 0170 00000000 		.word	0
 3610 0174 00000000 		.word	0
 3611 0178 00000000 		.word	0
 3612 017c 00000000 		.word	0
 3613 0180 00000000 		.word	0
 3614 0184 00000000 		.word	0
 3615 0188 00000000 		.word	0
 3616 018c 00000000 		.word	0
 3617 0190 00000000 		.word	0
 3618 0194 00000000 		.word	0
 3619 0198 00000000 		.word	0
 3620 019c 00000000 		.word	0
 3621 01a0 00000000 		.word	0
 3622 01a4 00000000 		.word	0
 3623 01a8 00000000 		.word	0
 3624 01ac 00000000 		.word	0
 3625 01b0 53000010 		.word	268435539
 3626 01b4 00000000 		.word	0
 3627 01b8 00000000 		.word	0
 3628 01bc 00000000 		.word	0
 3629 01c0 24000DC1 		.word	-1056112604
 3630 01c4 00000000 		.word	0
 3631 01c8 00000000 		.word	0
 3632 01cc 00000000 		.word	0
 3633 01d0 00000000 		.word	0
 3634 01d4 00000000 		.word	0
 3635 01d8 00000000 		.word	0
 3636 01dc 00000000 		.word	0
 3637 01e0 00000000 		.word	0
 3638 01e4 00000000 		.word	0
 3639 01e8 00000000 		.word	0
 3640 01ec 00000000 		.word	0
 3641 01f0 00000000 		.word	0
 3642 01f4 00000000 		.word	0
 3643 01f8 00000000 		.word	0
 3644 01fc 00000000 		.word	0
 3645              		.bss
 3646              		.align	2
 3647              		.set	.LANCHOR0,. + 0
 3650              	TMC2209:
 3651 0000 00000000 		.space	648
 3651      00000000 
 3651      00000000 
 3651      00000000 
 3651      00000000 
 3654              	Pins:
 3655 0288 00000000 		.space	40
 3655      00000000 
 3655      00000000 
 3655      00000000 
 3655      00000000 
 3658              	thigh:
 3659 02b0 00000000 		.space	4
 3662              	TMC2209_UARTChannel:
 3663 02b4 00000000 		.space	4
 3666              	ADCValue:
 3667 02b8 00000000 		.space	12
 3667      00000000 
 3667      00000000 
 3668              		.text
 3669              	.Letext0:
 3670              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 3671              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3672              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3673              		.file 5 "TMC-API/tmc/helpers/Types.h"
 3674              		.file 6 "TMC-API/tmc/helpers/Config.h"
 3675              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3676              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3677              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3678              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 3679              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 3680              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 3681              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 3682              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 3683              		.file 15 "./hal/IOs.h"
 3684              		.file 16 "./hal/IOMap.h"
 3685              		.file 17 "./hal/SPI.h"
 3686              		.file 18 "./hal/ADCs.h"
 3687              		.file 19 "./hal/RXTX.h"
 3688              		.file 20 "./hal/USB.h"
 3689              		.file 21 "./hal/LEDs.h"
 3690              		.file 22 "./hal/RS232.h"
 3691              		.file 23 "./hal/WLAN.h"
 3692              		.file 24 "./hal/Timer.h"
 3693              		.file 25 "./hal/UART.h"
 3694              		.file 26 "./hal/HAL.h"
 3695              		.file 27 "./tmc/VitalSignsMonitor.h"
 3696              		.file 28 "boards/Board.h"
 3697              		.file 29 "boards/TMCDriver.h"
 3698              		.file 30 "boards/TMCMotionController.h"
 3699              		.file 31 "TMC-API/tmc/ic/TMC2209/TMC2209.h"
 3700              		.file 32 "TMC-API/tmc/helpers/CRC.h"
 3701              		.file 33 "./tmc/StepDir.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC2209_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:22     .text:00000000 checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:42     .text:0000000c $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:46     .text:00000010 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:53     .text:00000010 tmc2209_writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:79     .text:00000018 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:83     .text:0000001c $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:90     .text:0000001c tmc2209_readRegister
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:128    .text:0000002c $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:132    .text:00000030 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:138    .text:00000030 periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:174    .text:00000044 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:178    .text:00000048 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:184    .text:00000048 userFunction
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:209    .text:00000056 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:336    .text:000000bc $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:405    .text:000000fa $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:471    .text:0000012c $d
                            *COM*:00000010 Timer
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:477    .text:00000138 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:483    .text:00000138 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:525    .text:0000014a rotate
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:567    .text:0000015c stop
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:590    .text:00000160 left
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:615    .text:00000164 right
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:639    .text:00000166 handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:697    .text:000001a4 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:742    .text:00000258 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:752    .text:00000264 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:782    .text:000002dc $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:1320   .text:00000496 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:1328   .text:0000049e $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:1858   .text:0000061c $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:1864   .text:00000624 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2611   .text:00000840 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2616   .text:00000848 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2622   .text:00000848 SAP
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2662   .text:0000085c GAP
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2692   .text:00000864 restore
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2707   .text:0000086c $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2711   .text:00000870 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2717   .text:00000870 reset
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2757   .text:00000894 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2761   .text:00000898 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2767   .text:00000898 enableDriver
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2843   .text:000008d0 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2849   .text:000008dc $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2855   .text:000008dc deInit
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2982   .text:0000095c $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2988   .text:00000968 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:2994   .text:00000968 moveBy
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3066   .text:00000988 tmc2209_readWriteArray
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3097   .text:00000994 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3101   .text:00000998 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3108   .text:00000998 tmc2209_CRC8
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3132   .text:0000099e TMC2209_init
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3468   .text:00000b50 $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3512   .rodata:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3516   .rodata:00000000 tmc2209_defaultRegisterResetState
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3646   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3650   .bss:00000000 TMC2209
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3654   .bss:00000288 Pins
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3658   .bss:000002b0 thigh
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3662   .bss:000002b4 TMC2209_UARTChannel
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:3666   .bss:000002b8 ADCValue
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:216    .text:0000005d $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:216    .text:0000005e $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:341    .text:000000c1 $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:341    .text:000000c2 $t
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:410    .text:000000ff $d
C:\Users\Shubham\AppData\Local\Temp\ccnusYSG.s:410    .text:00000100 $t

UNDEFINED SYMBOLS
tmc2209_writeInt
tmc2209_readInt
tmc2209_periodicJob
StepDir_periodicJob
StepDir_getStatus
tmc2209_set_slave
tmc2209_get_slave
StepDir_moveTo
StepDir_rotate
__aeabi_uldivmod
__aeabi_ldivmod
StepDir_getTargetPosition
StepDir_getActualPosition
StepDir_setActualPosition
StepDir_getTargetVelocity
StepDir_getActualVelocity
StepDir_getVelocityMax
StepDir_setVelocityMax
StepDir_getAcceleration
StepDir_setAcceleration
StepDir_getFrequency
StepDir_getMode
StepDir_setMode
StepDir_setFrequency
StepDir_getStallGuardThreshold
StepDir_setStallGuardThreshold
tmc2209_restore
StepDir_init
StepDir_setPins
tmc2209_reset
StepDir_deInit
UART_readWrite
tmc_CRC8
tmc_fillCRC8Table
tmc2209_init
