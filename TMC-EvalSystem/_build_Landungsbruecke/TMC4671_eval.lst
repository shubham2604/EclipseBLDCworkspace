   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC4671_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	userFunction:
  23              	.LVL0:
  24              	.LFB15:
  25              		.file 1 "boards/TMC4671_eval.c"
   1:boards/TMC4671_eval.c **** #include "Board.h"
   2:boards/TMC4671_eval.c **** #include "tmc/ic/TMC4671/TMC4671.h"
   3:boards/TMC4671_eval.c **** #include "tmc/ramp/LinearRamp.h"
   4:boards/TMC4671_eval.c **** 
   5:boards/TMC4671_eval.c **** #define DEFAULT_MOTOR  0
   6:boards/TMC4671_eval.c **** #define TMC4671_MOTORS 1
   7:boards/TMC4671_eval.c **** #define USE_LINEAR_RAMP
   8:boards/TMC4671_eval.c **** 
   9:boards/TMC4671_eval.c **** static IOPinTypeDef *PIN_DRV_ENN;
  10:boards/TMC4671_eval.c **** static ConfigurationTypeDef *TMC4671_config;
  11:boards/TMC4671_eval.c **** static SPIChannelTypeDef *TMC4671_SPIChannel;
  12:boards/TMC4671_eval.c **** 
  13:boards/TMC4671_eval.c **** typedef struct
  14:boards/TMC4671_eval.c **** {
  15:boards/TMC4671_eval.c **** 	uint16_t  startVoltage;
  16:boards/TMC4671_eval.c **** 	uint16_t  initWaitTime;
  17:boards/TMC4671_eval.c **** 	uint16_t  actualInitWaitTime;
  18:boards/TMC4671_eval.c **** 	uint8_t   initState;
  19:boards/TMC4671_eval.c **** 	uint8_t   initMode;
  20:boards/TMC4671_eval.c **** 	uint16_t  torqueMeasurementFactor;  // uint8_t.uint8_t
  21:boards/TMC4671_eval.c **** 	uint8_t	  motionMode;
  22:boards/TMC4671_eval.c **** 	int32_t   actualVelocityPT1;
  23:boards/TMC4671_eval.c **** 	int64_t	  akkuActualVelocity;
  24:boards/TMC4671_eval.c **** 	int16_t   actualTorquePT1;
  25:boards/TMC4671_eval.c **** 	int64_t   akkuActualTorque;
  26:boards/TMC4671_eval.c **** } TMinimalMotorConfig;
  27:boards/TMC4671_eval.c **** 
  28:boards/TMC4671_eval.c **** TMinimalMotorConfig motorConfig[TMC4671_MOTORS];
  29:boards/TMC4671_eval.c **** 
  30:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
  31:boards/TMC4671_eval.c **** 	TMC_LinearRamp rampGenerator[TMC4671_MOTORS];
  32:boards/TMC4671_eval.c **** 	uint8_t actualMotionMode[TMC4671_MOTORS];
  33:boards/TMC4671_eval.c **** 	int32_t lastRampTargetPosition[TMC4671_MOTORS];
  34:boards/TMC4671_eval.c **** 	int32_t lastRampTargetVelocity[TMC4671_MOTORS];
  35:boards/TMC4671_eval.c **** #endif
  36:boards/TMC4671_eval.c **** 
  37:boards/TMC4671_eval.c **** // => SPI wrapper
  38:boards/TMC4671_eval.c **** uint8_t tmc4671_readwriteByte(uint8_t motor, uint8_t data, uint8_t lastTransfer)
  39:boards/TMC4671_eval.c **** {
  40:boards/TMC4671_eval.c **** 	if (motor == DEFAULT_MOTOR)
  41:boards/TMC4671_eval.c **** 		return TMC4671_SPIChannel->readWrite(data, lastTransfer);
  42:boards/TMC4671_eval.c **** 	else
  43:boards/TMC4671_eval.c **** 		return 0;
  44:boards/TMC4671_eval.c **** }
  45:boards/TMC4671_eval.c **** // <= SPI wrapper
  46:boards/TMC4671_eval.c **** 
  47:boards/TMC4671_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
  48:boards/TMC4671_eval.c **** {
  49:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
  50:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
  51:boards/TMC4671_eval.c **** 
  52:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
  53:boards/TMC4671_eval.c **** 	if (rampGenerator[motor].rampEnabled)
  54:boards/TMC4671_eval.c **** 	{
  55:boards/TMC4671_eval.c **** 		// update velocity ramp before switching from torque to velocity mode
  56:boards/TMC4671_eval.c **** 		if (actualMotionMode[motor] == TMC4671_MOTION_MODE_TORQUE)
  57:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
  58:boards/TMC4671_eval.c **** 
  59:boards/TMC4671_eval.c **** 		// switch to velocity motion mode
  60:boards/TMC4671_eval.c **** 		actualMotionMode[motor] = TMC4671_MOTION_MODE_VELOCITY;
  61:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_VELOCITY);
  62:boards/TMC4671_eval.c **** 
  63:boards/TMC4671_eval.c **** 		// set target velocity for ramp generator
  64:boards/TMC4671_eval.c **** 		rampGenerator[motor].targetVelocity = velocity;
  65:boards/TMC4671_eval.c **** 	}
  66:boards/TMC4671_eval.c **** 	else
  67:boards/TMC4671_eval.c **** 	{
  68:boards/TMC4671_eval.c **** 		tmc4671_setTargetVelocity(motor, velocity);
  69:boards/TMC4671_eval.c **** 	}
  70:boards/TMC4671_eval.c **** #else
  71:boards/TMC4671_eval.c **** 	tmc4671_setTargetVelocity(motor, velocity);
  72:boards/TMC4671_eval.c **** #endif
  73:boards/TMC4671_eval.c **** 
  74:boards/TMC4671_eval.c **** 	return TMC_ERROR_NONE;
  75:boards/TMC4671_eval.c **** }
  76:boards/TMC4671_eval.c **** 
  77:boards/TMC4671_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
  78:boards/TMC4671_eval.c **** {
  79:boards/TMC4671_eval.c **** 	return rotate(motor, velocity);
  80:boards/TMC4671_eval.c **** }
  81:boards/TMC4671_eval.c **** 
  82:boards/TMC4671_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
  83:boards/TMC4671_eval.c **** {
  84:boards/TMC4671_eval.c **** 	return rotate(motor, -velocity);
  85:boards/TMC4671_eval.c **** }
  86:boards/TMC4671_eval.c **** 
  87:boards/TMC4671_eval.c **** static uint32_t stop(uint8_t motor)
  88:boards/TMC4671_eval.c **** {
  89:boards/TMC4671_eval.c **** 	return rotate(motor, 0);
  90:boards/TMC4671_eval.c **** }
  91:boards/TMC4671_eval.c **** 
  92:boards/TMC4671_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
  93:boards/TMC4671_eval.c **** {
  94:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
  95:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
  96:boards/TMC4671_eval.c **** 
  97:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
  98:boards/TMC4671_eval.c **** 	if (rampGenerator[motor].rampEnabled)
  99:boards/TMC4671_eval.c **** 	{
 100:boards/TMC4671_eval.c **** 		// update velocity ramp before switching from torque to position mode
 101:boards/TMC4671_eval.c **** 		if (actualMotionMode[motor] == TMC4671_MOTION_MODE_TORQUE)
 102:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 103:boards/TMC4671_eval.c **** 
 104:boards/TMC4671_eval.c **** 		// switch to position motion mode
 105:boards/TMC4671_eval.c **** 		actualMotionMode[motor] = TMC4671_MOTION_MODE_POSITION;
 106:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_POSITION);
 107:boards/TMC4671_eval.c **** 
 108:boards/TMC4671_eval.c **** 		// set target position for ramp generator
 109:boards/TMC4671_eval.c **** 		rampGenerator[motor].targetPosition = position;
 110:boards/TMC4671_eval.c **** 	}
 111:boards/TMC4671_eval.c **** 	else
 112:boards/TMC4671_eval.c **** 	{
 113:boards/TMC4671_eval.c **** 		tmc4671_setAbsolutTargetPosition(motor, position);
 114:boards/TMC4671_eval.c **** 	}
 115:boards/TMC4671_eval.c **** #else
 116:boards/TMC4671_eval.c **** 	tmc4671_setAbsolutTargetPosition(motor, position);
 117:boards/TMC4671_eval.c **** #endif
 118:boards/TMC4671_eval.c **** 
 119:boards/TMC4671_eval.c **** 	return TMC_ERROR_NONE;
 120:boards/TMC4671_eval.c **** }
 121:boards/TMC4671_eval.c **** 
 122:boards/TMC4671_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 123:boards/TMC4671_eval.c **** {
 124:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 125:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 126:boards/TMC4671_eval.c **** 
 127:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 128:boards/TMC4671_eval.c **** 	if (rampGenerator[motor].rampEnabled)
 129:boards/TMC4671_eval.c **** 	{
 130:boards/TMC4671_eval.c **** 		// update velocity ramp before switching from torque to position mode
 131:boards/TMC4671_eval.c **** 		if (actualMotionMode[motor] == TMC4671_MOTION_MODE_TORQUE)
 132:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 133:boards/TMC4671_eval.c **** 
 134:boards/TMC4671_eval.c **** 		// switch to position motion mode
 135:boards/TMC4671_eval.c **** 		actualMotionMode[motor] = TMC4671_MOTION_MODE_POSITION;
 136:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_POSITION);
 137:boards/TMC4671_eval.c **** 
 138:boards/TMC4671_eval.c **** 		// set target position for ramp generator
 139:boards/TMC4671_eval.c **** 		rampGenerator[motor].targetPosition = (int32_t) tmc4671_readInt(motor, TMC4671_PID_POSITION_ACTUA
 140:boards/TMC4671_eval.c **** 	}
 141:boards/TMC4671_eval.c **** 	else
 142:boards/TMC4671_eval.c **** 	{
 143:boards/TMC4671_eval.c **** 		tmc4671_setRelativeTargetPosition(motor, *ticks);
 144:boards/TMC4671_eval.c **** 	}
 145:boards/TMC4671_eval.c **** #else
 146:boards/TMC4671_eval.c **** 	tmc4671_setRelativeTargetPosition(motor, *ticks);
 147:boards/TMC4671_eval.c **** #endif
 148:boards/TMC4671_eval.c **** 
 149:boards/TMC4671_eval.c **** 	return TMC_ERROR_NONE;
 150:boards/TMC4671_eval.c **** }
 151:boards/TMC4671_eval.c **** 
 152:boards/TMC4671_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 153:boards/TMC4671_eval.c **** {
 154:boards/TMC4671_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 155:boards/TMC4671_eval.c **** 
 156:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 157:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 158:boards/TMC4671_eval.c **** 
 159:boards/TMC4671_eval.c **** 	switch(type)
 160:boards/TMC4671_eval.c **** 	{
 161:boards/TMC4671_eval.c **** 	case 4: // Maximum speed
 162:boards/TMC4671_eval.c **** 		if(readWrite == READ)
 163:boards/TMC4671_eval.c **** 		{
 164:boards/TMC4671_eval.c **** 			*value = (uint32_t) tmc4671_readInt(motor, TMC4671_PID_VELOCITY_LIMIT);
 165:boards/TMC4671_eval.c **** 
 166:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 167:boards/TMC4671_eval.c **** 			// update also ramp generator value
 168:boards/TMC4671_eval.c **** 			rampGenerator[motor].maxVelocity = *value;
 169:boards/TMC4671_eval.c **** #endif
 170:boards/TMC4671_eval.c **** 		}
 171:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 172:boards/TMC4671_eval.c **** 		{
 173:boards/TMC4671_eval.c **** 			tmc4671_writeInt(motor, TMC4671_PID_VELOCITY_LIMIT, *value);
 174:boards/TMC4671_eval.c **** 
 175:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 176:boards/TMC4671_eval.c **** 			// update also ramp generator value
 177:boards/TMC4671_eval.c **** 			rampGenerator[motor].maxVelocity = *value;
 178:boards/TMC4671_eval.c **** #endif
 179:boards/TMC4671_eval.c **** 		}
 180:boards/TMC4671_eval.c **** 		break;
 181:boards/TMC4671_eval.c **** 	case 11: // acceleration
 182:boards/TMC4671_eval.c **** 		if(readWrite == READ)
 183:boards/TMC4671_eval.c **** 		{
 184:boards/TMC4671_eval.c **** 			*value = (uint32_t) tmc4671_readInt(motor, TMC4671_PID_ACCELERATION_LIMIT);
 185:boards/TMC4671_eval.c **** 
 186:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 187:boards/TMC4671_eval.c **** 			// update also ramp generator value
 188:boards/TMC4671_eval.c **** 			rampGenerator[motor].acceleration = *value;
 189:boards/TMC4671_eval.c **** #endif
 190:boards/TMC4671_eval.c **** 		}
 191:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 192:boards/TMC4671_eval.c **** 		{
 193:boards/TMC4671_eval.c **** 			tmc4671_writeInt(motor, TMC4671_PID_ACCELERATION_LIMIT, *value);
 194:boards/TMC4671_eval.c **** 
 195:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 196:boards/TMC4671_eval.c **** 			// update also ramp generator value
 197:boards/TMC4671_eval.c **** 			rampGenerator[motor].acceleration = *value;
 198:boards/TMC4671_eval.c **** #endif
 199:boards/TMC4671_eval.c **** 		}
 200:boards/TMC4671_eval.c **** 		break;
 201:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 202:boards/TMC4671_eval.c **** 	case 12: // enable velocity ramp
 203:boards/TMC4671_eval.c **** 		if(readWrite == READ)
 204:boards/TMC4671_eval.c **** 			*value = rampGenerator[motor].rampEnabled;
 205:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 206:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampEnabled = *value;
 207:boards/TMC4671_eval.c **** 		break;
 208:boards/TMC4671_eval.c **** #endif
 209:boards/TMC4671_eval.c **** 	case 13: // ramp velocity
 210:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 211:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 212:boards/TMC4671_eval.c **** 			if (rampGenerator[motor].rampEnabled)
 213:boards/TMC4671_eval.c **** 				*value = rampGenerator[motor].rampVelocity;
 214:boards/TMC4671_eval.c **** 			else
 215:boards/TMC4671_eval.c **** 				*value = tmc4671_readInt(motor, TMC4671_PID_VELOCITY_TARGET);
 216:boards/TMC4671_eval.c **** #else
 217:boards/TMC4671_eval.c **** 			*value = tmc4671_readInt(motor, TMC4671_PID_VELOCITY_TARGET);
 218:boards/TMC4671_eval.c **** #endif
 219:boards/TMC4671_eval.c **** 		}
 220:boards/TMC4671_eval.c **** 		break;
 221:boards/TMC4671_eval.c **** 
 222:boards/TMC4671_eval.c **** 	case 171:
 223:boards/TMC4671_eval.c **** 		// PID_TORQUE_TARGET
 224:boards/TMC4671_eval.c **** 		if(readWrite == READ)
 225:boards/TMC4671_eval.c **** 			*value = (int16_t) tmc4671_readRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_16_
 226:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 227:boards/TMC4671_eval.c **** 			tmc4671_writeRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_16_TO_31, *value);
 228:boards/TMC4671_eval.c **** 		break;
 229:boards/TMC4671_eval.c **** 	case 172:
 230:boards/TMC4671_eval.c **** 		// PID_FLUX_TARGET
 231:boards/TMC4671_eval.c **** 		if(readWrite == READ)
 232:boards/TMC4671_eval.c **** 			*value = (int16_t) tmc4671_readRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_0_T
 233:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 234:boards/TMC4671_eval.c **** 			tmc4671_writeRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_0_TO_15, *value);
 235:boards/TMC4671_eval.c **** 		break;
 236:boards/TMC4671_eval.c **** 	case 173:
 237:boards/TMC4671_eval.c **** 		// PID_VELOCITY_TARGET
 238:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 239:boards/TMC4671_eval.c **** 			*value = (int32_t) tmc4671_readInt(motor, TMC4671_PID_VELOCITY_TARGET);
 240:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 241:boards/TMC4671_eval.c **** 			errors |= TMC_ERROR_TYPE;
 242:boards/TMC4671_eval.c **** 		}
 243:boards/TMC4671_eval.c **** 		break;
 244:boards/TMC4671_eval.c **** 	case 174:
 245:boards/TMC4671_eval.c **** 		// PID_POSITION_TARGET
 246:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 247:boards/TMC4671_eval.c **** 			*value = (int32_t) tmc4671_readInt(motor, TMC4671_PID_POSITION_TARGET);
 248:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 249:boards/TMC4671_eval.c **** 			errors |= TMC_ERROR_TYPE;
 250:boards/TMC4671_eval.c **** 		}
 251:boards/TMC4671_eval.c **** 		break;
 252:boards/TMC4671_eval.c **** 	case 176:
 253:boards/TMC4671_eval.c **** 		// PID_TORQUE_ACTUAL_mA
 254:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 255:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].actualTorquePT1;
 256:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 257:boards/TMC4671_eval.c **** 			errors |= TMC_ERROR_TYPE;
 258:boards/TMC4671_eval.c **** 		}
 259:boards/TMC4671_eval.c **** 		break;
 260:boards/TMC4671_eval.c **** 	case 178:
 261:boards/TMC4671_eval.c **** 		// PID_VELOCITY_ACTUAL
 262:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 263:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].actualVelocityPT1;
 264:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 265:boards/TMC4671_eval.c **** 			errors |= TMC_ERROR_TYPE;
 266:boards/TMC4671_eval.c **** 		}
 267:boards/TMC4671_eval.c **** 		break;
 268:boards/TMC4671_eval.c **** 	case 179:
 269:boards/TMC4671_eval.c **** 		// PID_POSITION_ACTUAL
 270:boards/TMC4671_eval.c **** 		if(readWrite == READ)
 271:boards/TMC4671_eval.c **** 			*value = tmc4671_getActualPosition(motor);
 272:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 273:boards/TMC4671_eval.c **** 		{
 274:boards/TMC4671_eval.c **** 			tmc4671_writeInt(motor, TMC4671_PID_POSITION_ACTUAL, *value);
 275:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 276:boards/TMC4671_eval.c **** 			// also update linear ramp during clear of actual position
 277:boards/TMC4671_eval.c **** 			if (actualMotionMode[motor] == TMC4671_MOTION_MODE_POSITION)
 278:boards/TMC4671_eval.c **** 			{
 279:boards/TMC4671_eval.c **** 				rampGenerator[motor].targetPosition = *value;
 280:boards/TMC4671_eval.c **** 				rampGenerator[motor].rampPosition = *value;
 281:boards/TMC4671_eval.c **** 				tmc4671_writeInt(motor, TMC4671_PID_POSITION_TARGET, *value);
 282:boards/TMC4671_eval.c **** 			}
 283:boards/TMC4671_eval.c **** #endif
 284:boards/TMC4671_eval.c **** 		}
 285:boards/TMC4671_eval.c **** 		break;
 286:boards/TMC4671_eval.c **** 	case 189:
 287:boards/TMC4671_eval.c **** 		// PIDIN_TARGET_TORQUE
 288:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 289:boards/TMC4671_eval.c **** 			*value = tmc4671_getTargetTorque_raw(motor);
 290:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 291:boards/TMC4671_eval.c **** 			tmc4671_setTargetTorque_raw(motor, *value);
 292:boards/TMC4671_eval.c **** 		}
 293:boards/TMC4671_eval.c **** 		break;
 294:boards/TMC4671_eval.c **** 	case 190:
 295:boards/TMC4671_eval.c **** 		// PIDIN_TARGET_TORQUE_mA
 296:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 297:boards/TMC4671_eval.c **** 			*value = tmc4671_getTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor);
 298:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 299:boards/TMC4671_eval.c **** 			tmc4671_setTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor, *value);
 300:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 301:boards/TMC4671_eval.c **** 			// remember switched motion mode by setTargetTorque_mA
 302:boards/TMC4671_eval.c **** 			actualMotionMode[motor] = TMC4671_MOTION_MODE_TORQUE;
 303:boards/TMC4671_eval.c **** #endif
 304:boards/TMC4671_eval.c **** 		}
 305:boards/TMC4671_eval.c **** 		break;
 306:boards/TMC4671_eval.c **** 	case 191:
 307:boards/TMC4671_eval.c **** 		// PIDIN_TARGET_FLUX
 308:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 309:boards/TMC4671_eval.c **** 			tmc4671_writeInt(motor, TMC4671_INTERIM_ADDR, 1);
 310:boards/TMC4671_eval.c **** 			*value = tmc4671_readInt(motor, TMC4671_INTERIM_DATA);
 311:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 312:boards/TMC4671_eval.c **** 			errors |= TMC_ERROR_TYPE;
 313:boards/TMC4671_eval.c **** 		}
 314:boards/TMC4671_eval.c **** 		break;
 315:boards/TMC4671_eval.c **** 	case 192:
 316:boards/TMC4671_eval.c **** 		// PIDIN_TARGET_VELOCITY
 317:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 318:boards/TMC4671_eval.c **** 			tmc4671_writeInt(motor, TMC4671_INTERIM_ADDR, 2);
 319:boards/TMC4671_eval.c **** 			*value = tmc4671_readInt(motor, TMC4671_INTERIM_DATA);
 320:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 321:boards/TMC4671_eval.c **** 			errors |= TMC_ERROR_TYPE;
 322:boards/TMC4671_eval.c **** 		}
 323:boards/TMC4671_eval.c **** 		break;
 324:boards/TMC4671_eval.c **** 	case 251:
 325:boards/TMC4671_eval.c **** 		// torque measurement factor
 326:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 327:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].torqueMeasurementFactor;
 328:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 329:boards/TMC4671_eval.c **** 			motorConfig[motor].torqueMeasurementFactor = *value;
 330:boards/TMC4671_eval.c **** 		}
 331:boards/TMC4671_eval.c **** 		break;
 332:boards/TMC4671_eval.c **** 	case 252:
 333:boards/TMC4671_eval.c **** 		// start encoder initialization
 334:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 335:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].initMode;
 336:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 337:boards/TMC4671_eval.c **** 			tmc4671_startEncoderInitialization(*value, &motorConfig[motor].initMode, &motorConfig[motor].ini
 338:boards/TMC4671_eval.c **** 		}
 339:boards/TMC4671_eval.c **** 		break;
 340:boards/TMC4671_eval.c **** 	case 253:
 341:boards/TMC4671_eval.c **** 		// encoder init state
 342:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 343:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].initState;
 344:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 345:boards/TMC4671_eval.c **** 			errors |= TMC_ERROR_TYPE;
 346:boards/TMC4671_eval.c **** 		}
 347:boards/TMC4671_eval.c **** 		break;
 348:boards/TMC4671_eval.c **** 	case 254:
 349:boards/TMC4671_eval.c **** 		// actual encoder wait time
 350:boards/TMC4671_eval.c **** 		if(readWrite == READ) {
 351:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].actualInitWaitTime;
 352:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 353:boards/TMC4671_eval.c **** 			errors |= TMC_ERROR_TYPE;
 354:boards/TMC4671_eval.c **** 		}
 355:boards/TMC4671_eval.c **** 		break;
 356:boards/TMC4671_eval.c **** 	default:
 357:boards/TMC4671_eval.c **** 		errors |= TMC_ERROR_TYPE;
 358:boards/TMC4671_eval.c **** 		break;
 359:boards/TMC4671_eval.c **** 	}
 360:boards/TMC4671_eval.c **** 	return errors;
 361:boards/TMC4671_eval.c **** }
 362:boards/TMC4671_eval.c **** 
 363:boards/TMC4671_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value)
 364:boards/TMC4671_eval.c **** {
 365:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 366:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 367:boards/TMC4671_eval.c **** 
 368:boards/TMC4671_eval.c **** 	*value = tmc4671_getActualVelocity(motor);
 369:boards/TMC4671_eval.c **** 
 370:boards/TMC4671_eval.c **** 	return TMC_ERROR_NONE;
 371:boards/TMC4671_eval.c **** }
 372:boards/TMC4671_eval.c **** 
 373:boards/TMC4671_eval.c **** static void periodicJob(uint32_t actualSystick)
 374:boards/TMC4671_eval.c **** {
 375:boards/TMC4671_eval.c **** 	int32_t motor;
 376:boards/TMC4671_eval.c **** 
 377:boards/TMC4671_eval.c **** 	// do encoder initialization if necessary
 378:boards/TMC4671_eval.c **** 	for(motor = 0; motor < TMC4671_MOTORS; motor++)
 379:boards/TMC4671_eval.c **** 	{
 380:boards/TMC4671_eval.c **** 		tmc4671_periodicJob(motor, actualSystick, motorConfig[motor].initMode,
 381:boards/TMC4671_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 382:boards/TMC4671_eval.c **** 				&(motorConfig[motor].actualInitWaitTime), motorConfig[motor].startVoltage);
 383:boards/TMC4671_eval.c **** 	}
 384:boards/TMC4671_eval.c **** 
 385:boards/TMC4671_eval.c **** 	// 1ms velocity ramp handling
 386:boards/TMC4671_eval.c **** 	static uint32_t lastSystick;
 387:boards/TMC4671_eval.c **** 	if (lastSystick != actualSystick)
 388:boards/TMC4671_eval.c **** 	{
 389:boards/TMC4671_eval.c **** 		for(motor = 0; motor < TMC4671_MOTORS; motor++)
 390:boards/TMC4671_eval.c **** 		{
 391:boards/TMC4671_eval.c **** 			// filter actual velocity
 392:boards/TMC4671_eval.c **** 			motorConfig[motor].actualVelocityPT1 = tmc_filterPT1(&motorConfig[motor].akkuActualVelocity, tmc
 393:boards/TMC4671_eval.c **** 
 394:boards/TMC4671_eval.c **** 			// filter actual current
 395:boards/TMC4671_eval.c **** 			int16_t actualCurrentRaw = 	tmc4671_readRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_ACTUAL
 396:boards/TMC4671_eval.c **** 			if ((actualCurrentRaw > -32000) && (actualCurrentRaw < 32000))
 397:boards/TMC4671_eval.c **** 			{
 398:boards/TMC4671_eval.c **** 				int32_t actualCurrent = ((int32_t)actualCurrentRaw * (int32_t)motorConfig[motor].torqueMeasurem
 399:boards/TMC4671_eval.c **** 				motorConfig[motor].actualTorquePT1 = tmc_filterPT1(&motorConfig[motor].akkuActualTorque , actua
 400:boards/TMC4671_eval.c **** 			}
 401:boards/TMC4671_eval.c **** 		}
 402:boards/TMC4671_eval.c **** 
 403:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 404:boards/TMC4671_eval.c **** 		// do velocity / position ramping for every motor
 405:boards/TMC4671_eval.c **** 		for (motor = 0; motor < TMC4671_MOTORS; motor++)
 406:boards/TMC4671_eval.c **** 		{
 407:boards/TMC4671_eval.c **** 			if (rampGenerator[motor].rampEnabled)
 408:boards/TMC4671_eval.c **** 			{
 409:boards/TMC4671_eval.c **** 				if (actualMotionMode[motor] == TMC4671_MOTION_MODE_POSITION)
 410:boards/TMC4671_eval.c **** 				{
 411:boards/TMC4671_eval.c **** 					tmc_linearRamp_computeRampPosition(&rampGenerator[motor]);
 412:boards/TMC4671_eval.c **** 
 413:boards/TMC4671_eval.c **** 					// set new target position (only if changed)
 414:boards/TMC4671_eval.c **** 					if (rampGenerator[motor].rampPosition != lastRampTargetPosition[motor])
 415:boards/TMC4671_eval.c **** 					{
 416:boards/TMC4671_eval.c **** 						tmc4671_writeInt(motor, TMC4671_PID_POSITION_TARGET, rampGenerator[motor].rampPosition);
 417:boards/TMC4671_eval.c **** 						lastRampTargetPosition[motor] = rampGenerator[motor].rampPosition;
 418:boards/TMC4671_eval.c **** 					}
 419:boards/TMC4671_eval.c **** 				}
 420:boards/TMC4671_eval.c **** 				else if (actualMotionMode[motor] == TMC4671_MOTION_MODE_VELOCITY)
 421:boards/TMC4671_eval.c **** 				{
 422:boards/TMC4671_eval.c **** 					tmc_linearRamp_computeRampVelocity(&rampGenerator[motor]);
 423:boards/TMC4671_eval.c **** 
 424:boards/TMC4671_eval.c **** 					// set new target velocity (only if changed)
 425:boards/TMC4671_eval.c **** 					if (rampGenerator[motor].rampVelocity != lastRampTargetVelocity[motor])
 426:boards/TMC4671_eval.c **** 					{
 427:boards/TMC4671_eval.c **** 						// set new target velocity
 428:boards/TMC4671_eval.c **** 						tmc4671_writeInt(motor, TMC4671_PID_VELOCITY_TARGET, rampGenerator[motor].rampVelocity);
 429:boards/TMC4671_eval.c **** 						lastRampTargetVelocity[motor] = rampGenerator[motor].rampVelocity;
 430:boards/TMC4671_eval.c **** 
 431:boards/TMC4671_eval.c **** 						// keep position ramp on track
 432:boards/TMC4671_eval.c **** 						rampGenerator[motor].rampPosition = tmc4671_readInt(motor, TMC4671_PID_POSITION_ACTUAL);
 433:boards/TMC4671_eval.c **** 						rampGenerator[motor].lastdXRest = 0;
 434:boards/TMC4671_eval.c **** 					}
 435:boards/TMC4671_eval.c **** 				}
 436:boards/TMC4671_eval.c **** 				else if (actualMotionMode[motor] == TMC4671_MOTION_MODE_TORQUE)
 437:boards/TMC4671_eval.c **** 				{
 438:boards/TMC4671_eval.c **** 					// only keep position ramp on track
 439:boards/TMC4671_eval.c **** 					rampGenerator[motor].rampPosition = tmc4671_readInt(motor, TMC4671_PID_POSITION_ACTUAL);
 440:boards/TMC4671_eval.c **** 					rampGenerator[motor].lastdXRest = 0;
 441:boards/TMC4671_eval.c **** 				}
 442:boards/TMC4671_eval.c **** 			}
 443:boards/TMC4671_eval.c **** 			else
 444:boards/TMC4671_eval.c **** 			{
 445:boards/TMC4671_eval.c **** 				// keep on track if ramp is disabled
 446:boards/TMC4671_eval.c **** 				rampGenerator[motor].rampPosition = tmc4671_readInt(motor, TMC4671_PID_POSITION_ACTUAL);
 447:boards/TMC4671_eval.c **** 				rampGenerator[motor].rampVelocity = 0;
 448:boards/TMC4671_eval.c **** 				rampGenerator[motor].lastdXRest = 0;
 449:boards/TMC4671_eval.c **** 			}
 450:boards/TMC4671_eval.c **** 		}
 451:boards/TMC4671_eval.c **** #endif
 452:boards/TMC4671_eval.c **** 		lastSystick = actualSystick;
 453:boards/TMC4671_eval.c **** 	}
 454:boards/TMC4671_eval.c **** }
 455:boards/TMC4671_eval.c **** 
 456:boards/TMC4671_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
 457:boards/TMC4671_eval.c **** {
 458:boards/TMC4671_eval.c **** 	UNUSED(motor);
 459:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, address, value);
 460:boards/TMC4671_eval.c **** }
 461:boards/TMC4671_eval.c **** 
 462:boards/TMC4671_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
 463:boards/TMC4671_eval.c **** {
 464:boards/TMC4671_eval.c **** 	UNUSED(motor);
 465:boards/TMC4671_eval.c **** 	*value = tmc4671_readInt(DEFAULT_MOTOR, address);
 466:boards/TMC4671_eval.c **** }
 467:boards/TMC4671_eval.c **** 
 468:boards/TMC4671_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 469:boards/TMC4671_eval.c **** {
 470:boards/TMC4671_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 471:boards/TMC4671_eval.c **** }
 472:boards/TMC4671_eval.c **** 
 473:boards/TMC4671_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 474:boards/TMC4671_eval.c **** {
 475:boards/TMC4671_eval.c **** 	return handleParameter(READ, motor, type, value);
 476:boards/TMC4671_eval.c **** }
 477:boards/TMC4671_eval.c **** 
 478:boards/TMC4671_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 479:boards/TMC4671_eval.c **** {
  26              		.loc 1 479 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 480:boards/TMC4671_eval.c **** 	UNUSED(type);
  31              		.loc 1 480 2 view .LVU1
 481:boards/TMC4671_eval.c **** 	UNUSED(motor);
  32              		.loc 1 481 2 view .LVU2
 482:boards/TMC4671_eval.c **** 	UNUSED(value);
  33              		.loc 1 482 2 view .LVU3
 483:boards/TMC4671_eval.c **** 	return 0;
  34              		.loc 1 483 2 view .LVU4
 484:boards/TMC4671_eval.c **** }
  35              		.loc 1 484 1 is_stmt 0 view .LVU5
  36 0000 0020     		movs	r0, #0
  37              	.LVL1:
  38              		.loc 1 484 1 view .LVU6
  39 0002 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE15:
  43              		.align	1
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu softvfp
  49              	checkErrors:
  50              	.LVL2:
  51              	.LFB20:
 485:boards/TMC4671_eval.c **** 
 486:boards/TMC4671_eval.c **** static void enableDriver(DriverState state)
 487:boards/TMC4671_eval.c **** {
 488:boards/TMC4671_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 489:boards/TMC4671_eval.c **** 		state = Evalboards.driverEnable;
 490:boards/TMC4671_eval.c **** 
 491:boards/TMC4671_eval.c **** 	if(state == DRIVER_DISABLE)
 492:boards/TMC4671_eval.c **** 		HAL.IOs->config->setLow(PIN_DRV_ENN);
 493:boards/TMC4671_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 494:boards/TMC4671_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
 495:boards/TMC4671_eval.c **** }
 496:boards/TMC4671_eval.c **** 
 497:boards/TMC4671_eval.c **** static void deInit(void)
 498:boards/TMC4671_eval.c **** {
 499:boards/TMC4671_eval.c **** 	enableDriver(DRIVER_DISABLE);
 500:boards/TMC4671_eval.c **** 	HAL.IOs->config->setLow(PIN_DRV_ENN);
 501:boards/TMC4671_eval.c **** };
 502:boards/TMC4671_eval.c **** 
 503:boards/TMC4671_eval.c **** static uint8_t reset()
 504:boards/TMC4671_eval.c **** {
 505:boards/TMC4671_eval.c **** 	// set default polarity for evaluation board's power stage after VW reset
 506:boards/TMC4671_eval.c **** 	for(size_t motor = 0; motor < TMC4671_MOTORS; motor++)
 507:boards/TMC4671_eval.c **** 	{
 508:boards/TMC4671_eval.c **** 		tmc4671_writeInt(motor, TMC4671_PWM_POLARITIES, 0);
 509:boards/TMC4671_eval.c **** 		tmc4671_writeInt(motor, TMC4671_PWM_SV_CHOP, 0x0);
 510:boards/TMC4671_eval.c **** 		tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PWM_BBM_H_BBM_L, 0x00001919);
 511:boards/TMC4671_eval.c **** 	}
 512:boards/TMC4671_eval.c **** 
 513:boards/TMC4671_eval.c **** 	return 1;
 514:boards/TMC4671_eval.c **** }
 515:boards/TMC4671_eval.c **** 
 516:boards/TMC4671_eval.c **** static uint8_t restore()
 517:boards/TMC4671_eval.c **** {
 518:boards/TMC4671_eval.c **** 	// set default polarity for evaluation board's power stage after VW reset
 519:boards/TMC4671_eval.c **** 	for(size_t motor = 0; motor < TMC4671_MOTORS; motor++)
 520:boards/TMC4671_eval.c **** 	{
 521:boards/TMC4671_eval.c **** 		tmc4671_writeInt(motor, TMC4671_PWM_POLARITIES, 0);
 522:boards/TMC4671_eval.c **** 		tmc4671_writeInt(motor, TMC4671_PWM_SV_CHOP, 0x0);
 523:boards/TMC4671_eval.c **** 		tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PWM_BBM_H_BBM_L, 0x00001919);
 524:boards/TMC4671_eval.c **** 	}
 525:boards/TMC4671_eval.c **** 
 526:boards/TMC4671_eval.c **** 	//enableDriver(DRIVER_DISABLE);
 527:boards/TMC4671_eval.c **** 	return 1;
 528:boards/TMC4671_eval.c **** }
 529:boards/TMC4671_eval.c **** 
 530:boards/TMC4671_eval.c **** static void checkErrors(uint32_t tick)
 531:boards/TMC4671_eval.c **** {
  52              		.loc 1 531 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
 532:boards/TMC4671_eval.c **** 	UNUSED(tick);
  57              		.loc 1 532 2 view .LVU8
 533:boards/TMC4671_eval.c **** 	Evalboards.ch1.errors = 0;
  58              		.loc 1 533 2 view .LVU9
  59              		.loc 1 533 24 is_stmt 0 view .LVU10
  60 0004 014B     		ldr	r3, .L3
  61 0006 0022     		movs	r2, #0
  62 0008 9A60     		str	r2, [r3, #8]
 534:boards/TMC4671_eval.c **** }
  63              		.loc 1 534 1 view .LVU11
  64 000a 7047     		bx	lr
  65              	.L4:
  66              		.align	2
  67              	.L3:
  68 000c 00000000 		.word	Evalboards
  69              		.cfi_endproc
  70              	.LFE20:
  72              		.align	1
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu softvfp
  78              	writeRegister:
  79              	.LVL3:
  80              	.LFB11:
 457:boards/TMC4671_eval.c **** 	UNUSED(motor);
  81              		.loc 1 457 1 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
 458:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, address, value);
  86              		.loc 1 458 2 view .LVU13
 459:boards/TMC4671_eval.c **** }
  87              		.loc 1 459 2 view .LVU14
  88 0010 0020     		movs	r0, #0
  89              	.LVL4:
 459:boards/TMC4671_eval.c **** }
  90              		.loc 1 459 2 is_stmt 0 view .LVU15
  91 0012 FFF7FEBF 		b	tmc4671_writeInt
  92              	.LVL5:
 459:boards/TMC4671_eval.c **** }
  93              		.loc 1 459 2 view .LVU16
  94              		.cfi_endproc
  95              	.LFE11:
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu softvfp
 103              	reset:
 104              	.LFB18:
 504:boards/TMC4671_eval.c **** 	// set default polarity for evaluation board's power stage after VW reset
 105              		.loc 1 504 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 506:boards/TMC4671_eval.c **** 	{
 109              		.loc 1 506 2 view .LVU18
 110              	.LBB4:
 506:boards/TMC4671_eval.c **** 	{
 111              		.loc 1 506 6 view .LVU19
 112              	.LVL6:
 506:boards/TMC4671_eval.c **** 	{
 113              		.loc 1 506 24 view .LVU20
 508:boards/TMC4671_eval.c **** 		tmc4671_writeInt(motor, TMC4671_PWM_SV_CHOP, 0x0);
 114              		.loc 1 508 3 view .LVU21
 115              	.LBE4:
 504:boards/TMC4671_eval.c **** 	// set default polarity for evaluation board's power stage after VW reset
 116              		.loc 1 504 1 is_stmt 0 view .LVU22
 117 0016 08B5     		push	{r3, lr}
 118              	.LCFI0:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 3, -8
 121              		.cfi_offset 14, -4
 122              	.LBB5:
 508:boards/TMC4671_eval.c **** 		tmc4671_writeInt(motor, TMC4671_PWM_SV_CHOP, 0x0);
 123              		.loc 1 508 3 view .LVU23
 124 0018 0022     		movs	r2, #0
 125 001a 1046     		mov	r0, r2
 126 001c 1721     		movs	r1, #23
 127 001e FFF7FEFF 		bl	tmc4671_writeInt
 128              	.LVL7:
 509:boards/TMC4671_eval.c **** 		tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PWM_BBM_H_BBM_L, 0x00001919);
 129              		.loc 1 509 3 is_stmt 1 view .LVU24
 130 0022 0022     		movs	r2, #0
 131 0024 1046     		mov	r0, r2
 132 0026 1A21     		movs	r1, #26
 133 0028 FFF7FEFF 		bl	tmc4671_writeInt
 134              	.LVL8:
 510:boards/TMC4671_eval.c **** 	}
 135              		.loc 1 510 3 view .LVU25
 136 002c 41F61912 		movw	r2, #6425
 137 0030 1921     		movs	r1, #25
 138 0032 0020     		movs	r0, #0
 139 0034 FFF7FEFF 		bl	tmc4671_writeInt
 140              	.LVL9:
 506:boards/TMC4671_eval.c **** 	{
 141              		.loc 1 506 48 view .LVU26
 506:boards/TMC4671_eval.c **** 	{
 142              		.loc 1 506 24 view .LVU27
 143              	.LBE5:
 513:boards/TMC4671_eval.c **** }
 144              		.loc 1 513 2 view .LVU28
 514:boards/TMC4671_eval.c **** 
 145              		.loc 1 514 1 is_stmt 0 view .LVU29
 146 0038 0120     		movs	r0, #1
 147 003a 08BD     		pop	{r3, pc}
 148              		.cfi_endproc
 149              	.LFE18:
 151              		.align	1
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu softvfp
 157              	restore:
 158              	.LFB29:
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163 003c EBE7     		b	reset
 164              		.cfi_endproc
 165              	.LFE29:
 167              		.align	1
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	readRegister:
 174              	.LVL10:
 175              	.LFB12:
 463:boards/TMC4671_eval.c **** 	UNUSED(motor);
 176              		.loc 1 463 1 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 464:boards/TMC4671_eval.c **** 	*value = tmc4671_readInt(DEFAULT_MOTOR, address);
 180              		.loc 1 464 2 view .LVU31
 465:boards/TMC4671_eval.c **** }
 181              		.loc 1 465 2 view .LVU32
 463:boards/TMC4671_eval.c **** 	UNUSED(motor);
 182              		.loc 1 463 1 is_stmt 0 view .LVU33
 183 003e 10B5     		push	{r4, lr}
 184              	.LCFI1:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 465:boards/TMC4671_eval.c **** }
 188              		.loc 1 465 11 view .LVU34
 189 0040 0020     		movs	r0, #0
 190              	.LVL11:
 463:boards/TMC4671_eval.c **** 	UNUSED(motor);
 191              		.loc 1 463 1 view .LVU35
 192 0042 1446     		mov	r4, r2
 465:boards/TMC4671_eval.c **** }
 193              		.loc 1 465 11 view .LVU36
 194 0044 FFF7FEFF 		bl	tmc4671_readInt
 195              	.LVL12:
 465:boards/TMC4671_eval.c **** }
 196              		.loc 1 465 9 view .LVU37
 197 0048 2060     		str	r0, [r4]
 466:boards/TMC4671_eval.c **** 
 198              		.loc 1 466 1 view .LVU38
 199 004a 10BD     		pop	{r4, pc}
 466:boards/TMC4671_eval.c **** 
 200              		.loc 1 466 1 view .LVU39
 201              		.cfi_endproc
 202              	.LFE12:
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	enableDriver:
 211              	.LVL13:
 212              	.LFB16:
 487:boards/TMC4671_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 213              		.loc 1 487 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 488:boards/TMC4671_eval.c **** 		state = Evalboards.driverEnable;
 218              		.loc 1 488 2 view .LVU41
 488:boards/TMC4671_eval.c **** 		state = Evalboards.driverEnable;
 219              		.loc 1 488 4 is_stmt 0 view .LVU42
 220 004c 0228     		cmp	r0, #2
 489:boards/TMC4671_eval.c **** 
 221              		.loc 1 489 3 is_stmt 1 view .LVU43
 489:boards/TMC4671_eval.c **** 
 222              		.loc 1 489 9 is_stmt 0 view .LVU44
 223 004e 04BF     		itt	eq
 224 0050 0B4B     		ldreq	r3, .L14
 225 0052 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 226              	.LVL14:
 491:boards/TMC4671_eval.c **** 		HAL.IOs->config->setLow(PIN_DRV_ENN);
 227              		.loc 1 491 2 is_stmt 1 view .LVU45
 491:boards/TMC4671_eval.c **** 		HAL.IOs->config->setLow(PIN_DRV_ENN);
 228              		.loc 1 491 4 is_stmt 0 view .LVU46
 229 0056 30B9     		cbnz	r0, .L11
 492:boards/TMC4671_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 230              		.loc 1 492 3 is_stmt 1 view .LVU47
 492:boards/TMC4671_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 231              		.loc 1 492 6 is_stmt 0 view .LVU48
 232 0058 0A4B     		ldr	r3, .L14+4
 492:boards/TMC4671_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 233              		.loc 1 492 10 view .LVU49
 234 005a DB68     		ldr	r3, [r3, #12]
 492:boards/TMC4671_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 235              		.loc 1 492 18 view .LVU50
 236 005c 1B68     		ldr	r3, [r3]
 492:boards/TMC4671_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 237              		.loc 1 492 3 view .LVU51
 238 005e 9B69     		ldr	r3, [r3, #24]
 239              	.L13:
 240              	.LBB8:
 241              	.LBB9:
 494:boards/TMC4671_eval.c **** }
 242              		.loc 1 494 3 view .LVU52
 243 0060 094A     		ldr	r2, .L14+8
 244 0062 1068     		ldr	r0, [r2]
 245 0064 1847     		bx	r3	@ indirect register sibling call
 246              	.LVL15:
 247              	.L11:
 494:boards/TMC4671_eval.c **** }
 248              		.loc 1 494 3 view .LVU53
 249              	.LBE9:
 250              	.LBE8:
 493:boards/TMC4671_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
 251              		.loc 1 493 7 is_stmt 1 view .LVU54
 493:boards/TMC4671_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
 252              		.loc 1 493 9 is_stmt 0 view .LVU55
 253 0066 0128     		cmp	r0, #1
 254 0068 09D1     		bne	.L9
 493:boards/TMC4671_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
 255              		.loc 1 493 49 discriminator 1 view .LVU56
 256 006a 054B     		ldr	r3, .L14
 493:boards/TMC4671_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
 257              		.loc 1 493 35 discriminator 1 view .LVU57
 258 006c 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 259 0070 012B     		cmp	r3, #1
 260 0072 04D1     		bne	.L9
 261              	.LBB11:
 262              	.LBI8:
 486:boards/TMC4671_eval.c **** {
 263              		.loc 1 486 13 is_stmt 1 view .LVU58
 264              	.LVL16:
 265              	.LBB10:
 494:boards/TMC4671_eval.c **** }
 266              		.loc 1 494 3 view .LVU59
 494:boards/TMC4671_eval.c **** }
 267              		.loc 1 494 6 is_stmt 0 view .LVU60
 268 0074 034B     		ldr	r3, .L14+4
 494:boards/TMC4671_eval.c **** }
 269              		.loc 1 494 10 view .LVU61
 270 0076 DB68     		ldr	r3, [r3, #12]
 494:boards/TMC4671_eval.c **** }
 271              		.loc 1 494 18 view .LVU62
 272 0078 1B68     		ldr	r3, [r3]
 494:boards/TMC4671_eval.c **** }
 273              		.loc 1 494 3 view .LVU63
 274 007a 5B69     		ldr	r3, [r3, #20]
 275 007c F0E7     		b	.L13
 276              	.LVL17:
 277              	.L9:
 494:boards/TMC4671_eval.c **** }
 278              		.loc 1 494 3 view .LVU64
 279              	.LBE10:
 280              	.LBE11:
 495:boards/TMC4671_eval.c **** 
 281              		.loc 1 495 1 view .LVU65
 282 007e 7047     		bx	lr
 283              	.L15:
 284              		.align	2
 285              	.L14:
 286 0080 00000000 		.word	Evalboards
 287 0084 00000000 		.word	HAL
 288 0088 00000000 		.word	.LANCHOR0
 289              		.cfi_endproc
 290              	.LFE16:
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	deInit:
 299              	.LFB17:
 498:boards/TMC4671_eval.c **** 	enableDriver(DRIVER_DISABLE);
 300              		.loc 1 498 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 499:boards/TMC4671_eval.c **** 	HAL.IOs->config->setLow(PIN_DRV_ENN);
 304              		.loc 1 499 2 view .LVU67
 498:boards/TMC4671_eval.c **** 	enableDriver(DRIVER_DISABLE);
 305              		.loc 1 498 1 is_stmt 0 view .LVU68
 306 008c 10B5     		push	{r4, lr}
 307              	.LCFI2:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 4, -8
 310              		.cfi_offset 14, -4
 499:boards/TMC4671_eval.c **** 	HAL.IOs->config->setLow(PIN_DRV_ENN);
 311              		.loc 1 499 2 view .LVU69
 312 008e 0020     		movs	r0, #0
 313 0090 FFF7DCFF 		bl	enableDriver
 314              	.LVL18:
 500:boards/TMC4671_eval.c **** };
 315              		.loc 1 500 2 is_stmt 1 view .LVU70
 500:boards/TMC4671_eval.c **** };
 316              		.loc 1 500 5 is_stmt 0 view .LVU71
 317 0094 044B     		ldr	r3, .L17
 500:boards/TMC4671_eval.c **** };
 318              		.loc 1 500 2 view .LVU72
 319 0096 054A     		ldr	r2, .L17+4
 500:boards/TMC4671_eval.c **** };
 320              		.loc 1 500 9 view .LVU73
 321 0098 DB68     		ldr	r3, [r3, #12]
 500:boards/TMC4671_eval.c **** };
 322              		.loc 1 500 2 view .LVU74
 323 009a 1068     		ldr	r0, [r2]
 500:boards/TMC4671_eval.c **** };
 324              		.loc 1 500 17 view .LVU75
 325 009c 1B68     		ldr	r3, [r3]
 501:boards/TMC4671_eval.c **** 
 326              		.loc 1 501 1 view .LVU76
 327 009e BDE81040 		pop	{r4, lr}
 328              	.LCFI3:
 329              		.cfi_restore 14
 330              		.cfi_restore 4
 331              		.cfi_def_cfa_offset 0
 500:boards/TMC4671_eval.c **** };
 332              		.loc 1 500 2 view .LVU77
 333 00a2 9B69     		ldr	r3, [r3, #24]
 334 00a4 1847     		bx	r3	@ indirect register sibling call
 335              	.LVL19:
 336              	.L18:
 337 00a6 00BF     		.align	2
 338              	.L17:
 339 00a8 00000000 		.word	HAL
 340 00ac 00000000 		.word	.LANCHOR0
 341              		.cfi_endproc
 342              	.LFE17:
 344              		.align	1
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu softvfp
 350              	getMeasuredSpeed:
 351              	.LVL20:
 352              	.LFB9:
 364:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 353              		.loc 1 364 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 365:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 357              		.loc 1 365 2 view .LVU79
 364:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 358              		.loc 1 364 1 is_stmt 0 view .LVU80
 359 00b0 38B5     		push	{r3, r4, r5, lr}
 360              	.LCFI4:
 361              		.cfi_def_cfa_offset 16
 362              		.cfi_offset 3, -16
 363              		.cfi_offset 4, -12
 364              		.cfi_offset 5, -8
 365              		.cfi_offset 14, -4
 364:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 366              		.loc 1 364 1 view .LVU81
 367 00b2 0D46     		mov	r5, r1
 365:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 368              		.loc 1 365 4 view .LVU82
 369 00b4 0446     		mov	r4, r0
 370 00b6 20B9     		cbnz	r0, .L21
 371              	.LVL21:
 372              	.LBB14:
 373              	.LBI14:
 363:boards/TMC4671_eval.c **** {
 374              		.loc 1 363 17 is_stmt 1 view .LVU83
 375              	.LBB15:
 368:boards/TMC4671_eval.c **** 
 376              		.loc 1 368 2 view .LVU84
 368:boards/TMC4671_eval.c **** 
 377              		.loc 1 368 11 is_stmt 0 view .LVU85
 378 00b8 FFF7FEFF 		bl	tmc4671_getActualVelocity
 379              	.LVL22:
 368:boards/TMC4671_eval.c **** 
 380              		.loc 1 368 9 view .LVU86
 381 00bc 2860     		str	r0, [r5]
 370:boards/TMC4671_eval.c **** }
 382              		.loc 1 370 2 is_stmt 1 view .LVU87
 383              	.LVL23:
 368:boards/TMC4671_eval.c **** 
 384              		.loc 1 368 9 is_stmt 0 view .LVU88
 385 00be 2046     		mov	r0, r4
 386              	.L19:
 387              	.LBE15:
 388              	.LBE14:
 371:boards/TMC4671_eval.c **** 
 389              		.loc 1 371 1 view .LVU89
 390 00c0 38BD     		pop	{r3, r4, r5, pc}
 391              	.LVL24:
 392              	.L21:
 366:boards/TMC4671_eval.c **** 
 393              		.loc 1 366 10 view .LVU90
 394 00c2 0820     		movs	r0, #8
 395              	.LVL25:
 366:boards/TMC4671_eval.c **** 
 396              		.loc 1 366 10 view .LVU91
 397 00c4 FCE7     		b	.L19
 398              		.cfi_endproc
 399              	.LFE9:
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu softvfp
 407              	periodicJob:
 408              	.LVL26:
 409              	.LFB10:
 374:boards/TMC4671_eval.c **** 	int32_t motor;
 410              		.loc 1 374 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 375:boards/TMC4671_eval.c **** 
 414              		.loc 1 375 2 view .LVU93
 378:boards/TMC4671_eval.c **** 	{
 415              		.loc 1 378 2 view .LVU94
 378:boards/TMC4671_eval.c **** 	{
 416              		.loc 1 378 17 view .LVU95
 380:boards/TMC4671_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 417              		.loc 1 380 3 view .LVU96
 374:boards/TMC4671_eval.c **** 	int32_t motor;
 418              		.loc 1 374 1 is_stmt 0 view .LVU97
 419 00c6 F0B5     		push	{r4, r5, r6, r7, lr}
 420              	.LCFI5:
 421              		.cfi_def_cfa_offset 20
 422              		.cfi_offset 4, -20
 423              		.cfi_offset 5, -16
 424              		.cfi_offset 6, -12
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 380:boards/TMC4671_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 427              		.loc 1 380 3 view .LVU98
 428 00c8 3D4B     		ldr	r3, .L35
 387:boards/TMC4671_eval.c **** 	{
 429              		.loc 1 387 18 view .LVU99
 430 00ca 3E4E     		ldr	r6, .L35+4
 380:boards/TMC4671_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 431              		.loc 1 380 3 view .LVU100
 432 00cc 33F8062C 		ldrh	r2, [r3, #-6]
 374:boards/TMC4671_eval.c **** 	int32_t motor;
 433              		.loc 1 374 1 view .LVU101
 434 00d0 85B0     		sub	sp, sp, #20
 435              	.LCFI6:
 436              		.cfi_def_cfa_offset 40
 374:boards/TMC4671_eval.c **** 	int32_t motor;
 437              		.loc 1 374 1 view .LVU102
 438 00d2 0546     		mov	r5, r0
 380:boards/TMC4671_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 439              		.loc 1 380 3 view .LVU103
 440 00d4 0292     		str	r2, [sp, #8]
 441 00d6 9A1E     		subs	r2, r3, #2
 442 00d8 0192     		str	r2, [sp, #4]
 443 00da 33F8042C 		ldrh	r2, [r3, #-4]
 444 00de 0092     		str	r2, [sp]
 445 00e0 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 446 00e2 0146     		mov	r1, r0
 447 00e4 0020     		movs	r0, #0
 448              	.LVL27:
 380:boards/TMC4671_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 449              		.loc 1 380 3 view .LVU104
 450 00e6 9C1F     		subs	r4, r3, #6
 451 00e8 FFF7FEFF 		bl	tmc4671_periodicJob
 452              	.LVL28:
 378:boards/TMC4671_eval.c **** 	{
 453              		.loc 1 378 41 is_stmt 1 view .LVU105
 378:boards/TMC4671_eval.c **** 	{
 454              		.loc 1 378 17 view .LVU106
 386:boards/TMC4671_eval.c **** 	if (lastSystick != actualSystick)
 455              		.loc 1 386 2 view .LVU107
 387:boards/TMC4671_eval.c **** 	{
 456              		.loc 1 387 2 view .LVU108
 387:boards/TMC4671_eval.c **** 	{
 457              		.loc 1 387 5 is_stmt 0 view .LVU109
 458 00ec 7368     		ldr	r3, [r6, #4]
 459 00ee AB42     		cmp	r3, r5
 460 00f0 24D1     		bne	.L23
 461              	.L22:
 454:boards/TMC4671_eval.c **** 
 462              		.loc 1 454 1 view .LVU110
 463 00f2 05B0     		add	sp, sp, #20
 464              	.LCFI7:
 465              		.cfi_remember_state
 466              		.cfi_def_cfa_offset 20
 467              		@ sp needed
 468 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 469              	.LVL29:
 470              	.L27:
 471              	.LCFI8:
 472              		.cfi_restore_state
 473              	.LBB20:
 474              	.LBB21:
 420:boards/TMC4671_eval.c **** 				{
 475              		.loc 1 420 10 is_stmt 1 view .LVU111
 420:boards/TMC4671_eval.c **** 				{
 476              		.loc 1 420 13 is_stmt 0 view .LVU112
 477 00f6 022B     		cmp	r3, #2
 478 00f8 15D1     		bne	.L30
 422:boards/TMC4671_eval.c **** 
 479              		.loc 1 422 6 is_stmt 1 view .LVU113
 425:boards/TMC4671_eval.c **** 					{
 480              		.loc 1 425 69 is_stmt 0 view .LVU114
 481 00fa 334F     		ldr	r7, .L35+8
 422:boards/TMC4671_eval.c **** 
 482              		.loc 1 422 6 view .LVU115
 483 00fc 2046     		mov	r0, r4
 484 00fe FFF7FEFF 		bl	tmc_linearRamp_computeRampVelocity
 485              	.LVL30:
 425:boards/TMC4671_eval.c **** 					{
 486              		.loc 1 425 6 is_stmt 1 view .LVU116
 425:boards/TMC4671_eval.c **** 					{
 487              		.loc 1 425 30 is_stmt 0 view .LVU117
 488 0102 2269     		ldr	r2, [r4, #16]
 425:boards/TMC4671_eval.c **** 					{
 489              		.loc 1 425 9 view .LVU118
 490 0104 3B68     		ldr	r3, [r7]
 491 0106 9A42     		cmp	r2, r3
 492 0108 58D0     		beq	.L29
 428:boards/TMC4671_eval.c **** 						lastRampTargetVelocity[motor] = rampGenerator[motor].rampVelocity;
 493              		.loc 1 428 7 is_stmt 1 view .LVU119
 494 010a 6621     		movs	r1, #102
 495 010c 0020     		movs	r0, #0
 496 010e FFF7FEFF 		bl	tmc4671_writeInt
 497              	.LVL31:
 429:boards/TMC4671_eval.c **** 
 498              		.loc 1 429 7 view .LVU120
 429:boards/TMC4671_eval.c **** 
 499              		.loc 1 429 37 is_stmt 0 view .LVU121
 500 0112 2369     		ldr	r3, [r4, #16]
 501 0114 3B60     		str	r3, [r7]
 432:boards/TMC4671_eval.c **** 						rampGenerator[motor].lastdXRest = 0;
 502              		.loc 1 432 7 is_stmt 1 view .LVU122
 503              	.L34:
 439:boards/TMC4671_eval.c **** 					rampGenerator[motor].lastdXRest = 0;
 504              		.loc 1 439 6 view .LVU123
 439:boards/TMC4671_eval.c **** 					rampGenerator[motor].lastdXRest = 0;
 505              		.loc 1 439 42 is_stmt 0 view .LVU124
 506 0116 6B21     		movs	r1, #107
 507 0118 0020     		movs	r0, #0
 508 011a FFF7FEFF 		bl	tmc4671_readInt
 509              	.LVL32:
 440:boards/TMC4671_eval.c **** 				}
 510              		.loc 1 440 38 view .LVU125
 511 011e 0023     		movs	r3, #0
 439:boards/TMC4671_eval.c **** 					rampGenerator[motor].lastdXRest = 0;
 512              		.loc 1 439 40 view .LVU126
 513 0120 A060     		str	r0, [r4, #8]
 440:boards/TMC4671_eval.c **** 				}
 514              		.loc 1 440 6 is_stmt 1 view .LVU127
 440:boards/TMC4671_eval.c **** 				}
 515              		.loc 1 440 38 is_stmt 0 view .LVU128
 516 0122 2362     		str	r3, [r4, #32]
 517              	.LVL33:
 405:boards/TMC4671_eval.c **** 		{
 518              		.loc 1 405 19 is_stmt 1 view .LVU129
 519 0124 4AE0     		b	.L29
 520              	.LVL34:
 521              	.L30:
 436:boards/TMC4671_eval.c **** 				{
 522              		.loc 1 436 10 view .LVU130
 436:boards/TMC4671_eval.c **** 				{
 523              		.loc 1 436 13 is_stmt 0 view .LVU131
 524 0126 012B     		cmp	r3, #1
 525 0128 48D1     		bne	.L29
 526 012a F4E7     		b	.L34
 527              	.L26:
 446:boards/TMC4671_eval.c **** 				rampGenerator[motor].rampVelocity = 0;
 528              		.loc 1 446 5 is_stmt 1 view .LVU132
 446:boards/TMC4671_eval.c **** 				rampGenerator[motor].rampVelocity = 0;
 529              		.loc 1 446 41 is_stmt 0 view .LVU133
 530 012c 6B21     		movs	r1, #107
 531 012e 3846     		mov	r0, r7
 532 0130 FFF7FEFF 		bl	tmc4671_readInt
 533              	.LVL35:
 447:boards/TMC4671_eval.c **** 				rampGenerator[motor].lastdXRest = 0;
 534              		.loc 1 447 39 view .LVU134
 535 0134 2761     		str	r7, [r4, #16]
 446:boards/TMC4671_eval.c **** 				rampGenerator[motor].rampVelocity = 0;
 536              		.loc 1 446 39 view .LVU135
 537 0136 A060     		str	r0, [r4, #8]
 447:boards/TMC4671_eval.c **** 				rampGenerator[motor].lastdXRest = 0;
 538              		.loc 1 447 5 is_stmt 1 view .LVU136
 448:boards/TMC4671_eval.c **** 			}
 539              		.loc 1 448 5 view .LVU137
 448:boards/TMC4671_eval.c **** 			}
 540              		.loc 1 448 37 is_stmt 0 view .LVU138
 541 0138 2762     		str	r7, [r4, #32]
 542              	.LVL36:
 405:boards/TMC4671_eval.c **** 		{
 543              		.loc 1 405 19 is_stmt 1 view .LVU139
 544 013a 3FE0     		b	.L29
 545              	.LVL37:
 546              	.L23:
 389:boards/TMC4671_eval.c **** 		{
 547              		.loc 1 389 18 view .LVU140
 548              	.LBB22:
 392:boards/TMC4671_eval.c **** 
 549              		.loc 1 392 4 view .LVU141
 392:boards/TMC4671_eval.c **** 
 550              		.loc 1 392 43 is_stmt 0 view .LVU142
 551 013c 0020     		movs	r0, #0
 552 013e FFF7FEFF 		bl	tmc4671_getActualVelocity
 553              	.LVL38:
 554 0142 0823     		movs	r3, #8
 555 0144 0093     		str	r3, [sp]
 556 0146 0146     		mov	r1, r0
 557 0148 0323     		movs	r3, #3
 558 014a E268     		ldr	r2, [r4, #12]
 559 014c 04F11000 		add	r0, r4, #16
 560 0150 FFF7FEFF 		bl	tmc_filterPT1
 561              	.LVL39:
 395:boards/TMC4671_eval.c **** 			if ((actualCurrentRaw > -32000) && (actualCurrentRaw < 32000))
 562              		.loc 1 395 32 view .LVU143
 563 0154 0122     		movs	r2, #1
 392:boards/TMC4671_eval.c **** 
 564              		.loc 1 392 41 view .LVU144
 565 0156 E060     		str	r0, [r4, #12]
 395:boards/TMC4671_eval.c **** 			if ((actualCurrentRaw > -32000) && (actualCurrentRaw < 32000))
 566              		.loc 1 395 4 is_stmt 1 view .LVU145
 395:boards/TMC4671_eval.c **** 			if ((actualCurrentRaw > -32000) && (actualCurrentRaw < 32000))
 567              		.loc 1 395 32 is_stmt 0 view .LVU146
 568 0158 6921     		movs	r1, #105
 569 015a 0020     		movs	r0, #0
 570 015c FFF7FEFF 		bl	tmc4671_readRegister16BitValue
 571              	.LVL40:
 396:boards/TMC4671_eval.c **** 			{
 572              		.loc 1 396 36 view .LVU147
 573 0160 00F5F943 		add	r3, r0, #31872
 574 0164 7F33     		adds	r3, r3, #127
 396:boards/TMC4671_eval.c **** 			{
 575              		.loc 1 396 7 view .LVU148
 576 0166 9BB2     		uxth	r3, r3
 577 0168 4FF6FE12 		movw	r2, #63998
 578 016c 9342     		cmp	r3, r2
 395:boards/TMC4671_eval.c **** 			if ((actualCurrentRaw > -32000) && (actualCurrentRaw < 32000))
 579              		.loc 1 395 12 view .LVU149
 580 016e 01B2     		sxth	r1, r0
 581              	.LVL41:
 396:boards/TMC4671_eval.c **** 			{
 582              		.loc 1 396 4 is_stmt 1 view .LVU150
 396:boards/TMC4671_eval.c **** 			{
 583              		.loc 1 396 7 is_stmt 0 view .LVU151
 584 0170 0DD8     		bhi	.L33
 585              	.LBB23:
 398:boards/TMC4671_eval.c **** 				motorConfig[motor].actualTorquePT1 = tmc_filterPT1(&motorConfig[motor].akkuActualTorque , actua
 586              		.loc 1 398 5 is_stmt 1 view .LVU152
 587              	.LVL42:
 399:boards/TMC4671_eval.c **** 			}
 588              		.loc 1 399 5 view .LVU153
 398:boards/TMC4671_eval.c **** 				motorConfig[motor].actualTorquePT1 = tmc_filterPT1(&motorConfig[motor].akkuActualTorque , actua
 589              		.loc 1 398 58 is_stmt 0 view .LVU154
 590 0172 2389     		ldrh	r3, [r4, #8]
 399:boards/TMC4671_eval.c **** 			}
 591              		.loc 1 399 42 view .LVU155
 592 0174 B4F91820 		ldrsh	r2, [r4, #24]
 593 0178 1448     		ldr	r0, .L35+12
 398:boards/TMC4671_eval.c **** 				motorConfig[motor].actualTorquePT1 = tmc_filterPT1(&motorConfig[motor].akkuActualTorque , actua
 594              		.loc 1 398 13 view .LVU156
 595 017a 5943     		muls	r1, r3, r1
 596              	.LVL43:
 398:boards/TMC4671_eval.c **** 				motorConfig[motor].actualTorquePT1 = tmc_filterPT1(&motorConfig[motor].akkuActualTorque , actua
 597              		.loc 1 398 13 view .LVU157
 598 017c 48BF     		it	mi
 599 017e FF31     		addmi	r1, r1, #255
 399:boards/TMC4671_eval.c **** 			}
 600              		.loc 1 399 42 view .LVU158
 601 0180 0823     		movs	r3, #8
 602 0182 0093     		str	r3, [sp]
 603 0184 0912     		asrs	r1, r1, #8
 604 0186 0423     		movs	r3, #4
 605 0188 FFF7FEFF 		bl	tmc_filterPT1
 606              	.LVL44:
 399:boards/TMC4671_eval.c **** 			}
 607              		.loc 1 399 40 view .LVU159
 608 018c 2083     		strh	r0, [r4, #24]	@ movhi
 609              	.LVL45:
 399:boards/TMC4671_eval.c **** 			}
 610              		.loc 1 399 40 view .LVU160
 611              	.LBE23:
 612              	.LBE22:
 389:boards/TMC4671_eval.c **** 		{
 613              		.loc 1 389 18 is_stmt 1 view .LVU161
 614              	.L33:
 405:boards/TMC4671_eval.c **** 		{
 615              		.loc 1 405 19 view .LVU162
 407:boards/TMC4671_eval.c **** 			{
 616              		.loc 1 407 4 view .LVU163
 407:boards/TMC4671_eval.c **** 			{
 617              		.loc 1 407 28 is_stmt 0 view .LVU164
 618 018e 104C     		ldr	r4, .L35+16
 407:boards/TMC4671_eval.c **** 			{
 619              		.loc 1 407 7 view .LVU165
 620 0190 94F82470 		ldrb	r7, [r4, #36]	@ zero_extendqisi2
 621 0194 002F     		cmp	r7, #0
 622 0196 C9D0     		beq	.L26
 409:boards/TMC4671_eval.c **** 				{
 623              		.loc 1 409 5 is_stmt 1 view .LVU166
 409:boards/TMC4671_eval.c **** 				{
 624              		.loc 1 409 25 is_stmt 0 view .LVU167
 625 0198 0E4B     		ldr	r3, .L35+20
 626 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 409:boards/TMC4671_eval.c **** 				{
 627              		.loc 1 409 8 view .LVU168
 628 019c 032B     		cmp	r3, #3
 629 019e AAD1     		bne	.L27
 411:boards/TMC4671_eval.c **** 
 630              		.loc 1 411 6 is_stmt 1 view .LVU169
 414:boards/TMC4671_eval.c **** 					{
 631              		.loc 1 414 69 is_stmt 0 view .LVU170
 632 01a0 0D4F     		ldr	r7, .L35+24
 411:boards/TMC4671_eval.c **** 
 633              		.loc 1 411 6 view .LVU171
 634 01a2 2046     		mov	r0, r4
 635 01a4 FFF7FEFF 		bl	tmc_linearRamp_computeRampPosition
 636              	.LVL46:
 414:boards/TMC4671_eval.c **** 					{
 637              		.loc 1 414 6 is_stmt 1 view .LVU172
 414:boards/TMC4671_eval.c **** 					{
 638              		.loc 1 414 30 is_stmt 0 view .LVU173
 639 01a8 A268     		ldr	r2, [r4, #8]
 414:boards/TMC4671_eval.c **** 					{
 640              		.loc 1 414 9 view .LVU174
 641 01aa 3B68     		ldr	r3, [r7]
 642 01ac 9A42     		cmp	r2, r3
 643 01ae 05D0     		beq	.L29
 416:boards/TMC4671_eval.c **** 						lastRampTargetPosition[motor] = rampGenerator[motor].rampPosition;
 644              		.loc 1 416 7 is_stmt 1 view .LVU175
 645 01b0 6821     		movs	r1, #104
 646 01b2 0020     		movs	r0, #0
 647 01b4 FFF7FEFF 		bl	tmc4671_writeInt
 648              	.LVL47:
 417:boards/TMC4671_eval.c **** 					}
 649              		.loc 1 417 7 view .LVU176
 417:boards/TMC4671_eval.c **** 					}
 650              		.loc 1 417 37 is_stmt 0 view .LVU177
 651 01b8 A368     		ldr	r3, [r4, #8]
 652 01ba 3B60     		str	r3, [r7]
 653              	.LVL48:
 405:boards/TMC4671_eval.c **** 		{
 654              		.loc 1 405 19 is_stmt 1 view .LVU178
 655              	.L29:
 452:boards/TMC4671_eval.c **** 	}
 656              		.loc 1 452 3 view .LVU179
 452:boards/TMC4671_eval.c **** 	}
 657              		.loc 1 452 15 is_stmt 0 view .LVU180
 658 01bc 7560     		str	r5, [r6, #4]
 452:boards/TMC4671_eval.c **** 	}
 659              		.loc 1 452 15 view .LVU181
 660              	.LBE21:
 661              	.LBE20:
 454:boards/TMC4671_eval.c **** 
 662              		.loc 1 454 1 view .LVU182
 663 01be 98E7     		b	.L22
 664              	.L36:
 665              		.align	2
 666              	.L35:
 667 01c0 06000000 		.word	motorConfig+6
 668 01c4 00000000 		.word	.LANCHOR0
 669 01c8 00000000 		.word	lastRampTargetVelocity
 670 01cc 20000000 		.word	motorConfig+32
 671 01d0 00000000 		.word	rampGenerator
 672 01d4 00000000 		.word	actualMotionMode
 673 01d8 00000000 		.word	lastRampTargetPosition
 674              		.cfi_endproc
 675              	.LFE10:
 677              		.align	1
 678              		.syntax unified
 679              		.thumb
 680              		.thumb_func
 681              		.fpu softvfp
 683              	moveBy:
 684              	.LVL49:
 685              	.LFB7:
 123:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 686              		.loc 1 123 1 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 124:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 690              		.loc 1 124 2 view .LVU184
 123:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 691              		.loc 1 123 1 is_stmt 0 view .LVU185
 692 01dc 70B5     		push	{r4, r5, r6, lr}
 693              	.LCFI9:
 694              		.cfi_def_cfa_offset 16
 695              		.cfi_offset 4, -16
 696              		.cfi_offset 5, -12
 697              		.cfi_offset 6, -8
 698              		.cfi_offset 14, -4
 123:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 699              		.loc 1 123 1 view .LVU186
 700 01de 0E46     		mov	r6, r1
 124:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 701              		.loc 1 124 4 view .LVU187
 702 01e0 E0B9     		cbnz	r0, .L41
 128:boards/TMC4671_eval.c **** 	{
 703              		.loc 1 128 2 is_stmt 1 view .LVU188
 128:boards/TMC4671_eval.c **** 	{
 704              		.loc 1 128 26 is_stmt 0 view .LVU189
 705 01e2 0F4D     		ldr	r5, .L43
 128:boards/TMC4671_eval.c **** 	{
 706              		.loc 1 128 5 view .LVU190
 707 01e4 95F82440 		ldrb	r4, [r5, #36]	@ zero_extendqisi2
 708 01e8 A4B1     		cbz	r4, .L39
 131:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 709              		.loc 1 131 3 is_stmt 1 view .LVU191
 131:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 710              		.loc 1 131 23 is_stmt 0 view .LVU192
 711 01ea 0E4C     		ldr	r4, .L43+4
 131:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 712              		.loc 1 131 6 view .LVU193
 713 01ec 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 714 01ee 012A     		cmp	r2, #1
 715 01f0 02D1     		bne	.L40
 132:boards/TMC4671_eval.c **** 
 716              		.loc 1 132 4 is_stmt 1 view .LVU194
 132:boards/TMC4671_eval.c **** 
 717              		.loc 1 132 40 is_stmt 0 view .LVU195
 718 01f2 FFF7FEFF 		bl	tmc4671_getActualVelocity
 719              	.LVL50:
 132:boards/TMC4671_eval.c **** 
 720              		.loc 1 132 38 view .LVU196
 721 01f6 2861     		str	r0, [r5, #16]
 722              	.L40:
 135:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_POSITION);
 723              		.loc 1 135 3 is_stmt 1 view .LVU197
 135:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_POSITION);
 724              		.loc 1 135 27 is_stmt 0 view .LVU198
 725 01f8 0321     		movs	r1, #3
 136:boards/TMC4671_eval.c **** 
 726              		.loc 1 136 3 view .LVU199
 727 01fa 0020     		movs	r0, #0
 135:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_POSITION);
 728              		.loc 1 135 27 view .LVU200
 729 01fc 2170     		strb	r1, [r4]
 136:boards/TMC4671_eval.c **** 
 730              		.loc 1 136 3 is_stmt 1 view .LVU201
 731 01fe FFF7FEFF 		bl	tmc4671_switchToMotionMode
 732              	.LVL51:
 139:boards/TMC4671_eval.c **** 	}
 733              		.loc 1 139 3 view .LVU202
 139:boards/TMC4671_eval.c **** 	}
 734              		.loc 1 139 51 is_stmt 0 view .LVU203
 735 0202 6B21     		movs	r1, #107
 736 0204 0020     		movs	r0, #0
 737 0206 FFF7FEFF 		bl	tmc4671_readInt
 738              	.LVL52:
 139:boards/TMC4671_eval.c **** 	}
 739              		.loc 1 139 103 view .LVU204
 740 020a 3368     		ldr	r3, [r6]
 741 020c 0344     		add	r3, r3, r0
 139:boards/TMC4671_eval.c **** 	}
 742              		.loc 1 139 39 view .LVU205
 743 020e 6B60     		str	r3, [r5, #4]
 744              	.L42:
 149:boards/TMC4671_eval.c **** }
 745              		.loc 1 149 9 view .LVU206
 746 0210 0020     		movs	r0, #0
 747              	.L37:
 150:boards/TMC4671_eval.c **** 
 748              		.loc 1 150 1 view .LVU207
 749 0212 70BD     		pop	{r4, r5, r6, pc}
 750              	.LVL53:
 751              	.L39:
 752              	.LBB26:
 753              	.LBI26:
 122:boards/TMC4671_eval.c **** {
 754              		.loc 1 122 17 is_stmt 1 view .LVU208
 755              	.LBB27:
 143:boards/TMC4671_eval.c **** 	}
 756              		.loc 1 143 3 view .LVU209
 757 0214 0968     		ldr	r1, [r1]
 758              	.LVL54:
 143:boards/TMC4671_eval.c **** 	}
 759              		.loc 1 143 3 is_stmt 0 view .LVU210
 760 0216 FFF7FEFF 		bl	tmc4671_setRelativeTargetPosition
 761              	.LVL55:
 143:boards/TMC4671_eval.c **** 	}
 762              		.loc 1 143 3 view .LVU211
 763 021a F9E7     		b	.L42
 764              	.LVL56:
 765              	.L41:
 143:boards/TMC4671_eval.c **** 	}
 766              		.loc 1 143 3 view .LVU212
 767              	.LBE27:
 768              	.LBE26:
 125:boards/TMC4671_eval.c **** 
 769              		.loc 1 125 10 view .LVU213
 770 021c 0820     		movs	r0, #8
 771              	.LVL57:
 125:boards/TMC4671_eval.c **** 
 772              		.loc 1 125 10 view .LVU214
 773 021e F8E7     		b	.L37
 774              	.L44:
 775              		.align	2
 776              	.L43:
 777 0220 00000000 		.word	rampGenerator
 778 0224 00000000 		.word	actualMotionMode
 779              		.cfi_endproc
 780              	.LFE7:
 782              		.align	1
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu softvfp
 788              	moveTo:
 789              	.LVL58:
 790              	.LFB6:
  93:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 791              		.loc 1 93 1 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
  94:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 795              		.loc 1 94 2 view .LVU216
  93:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 796              		.loc 1 93 1 is_stmt 0 view .LVU217
 797 0228 70B5     		push	{r4, r5, r6, lr}
 798              	.LCFI10:
 799              		.cfi_def_cfa_offset 16
 800              		.cfi_offset 4, -16
 801              		.cfi_offset 5, -12
 802              		.cfi_offset 6, -8
 803              		.cfi_offset 14, -4
  93:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 804              		.loc 1 93 1 view .LVU218
 805 022a 0E46     		mov	r6, r1
  94:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 806              		.loc 1 94 4 view .LVU219
 807 022c A8B9     		cbnz	r0, .L49
  98:boards/TMC4671_eval.c **** 	{
 808              		.loc 1 98 2 is_stmt 1 view .LVU220
  98:boards/TMC4671_eval.c **** 	{
 809              		.loc 1 98 26 is_stmt 0 view .LVU221
 810 022e 0C4D     		ldr	r5, .L51
  98:boards/TMC4671_eval.c **** 	{
 811              		.loc 1 98 5 view .LVU222
 812 0230 95F82440 		ldrb	r4, [r5, #36]	@ zero_extendqisi2
 813 0234 74B1     		cbz	r4, .L47
 814              	.LVL59:
 815              	.LBB30:
 816              	.LBI30:
  92:boards/TMC4671_eval.c **** {
 817              		.loc 1 92 17 is_stmt 1 view .LVU223
 818              	.LBB31:
 101:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 819              		.loc 1 101 3 view .LVU224
 101:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 820              		.loc 1 101 23 is_stmt 0 view .LVU225
 821 0236 0B4C     		ldr	r4, .L51+4
 101:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 822              		.loc 1 101 6 view .LVU226
 823 0238 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 824 023a 012A     		cmp	r2, #1
 825 023c 02D1     		bne	.L48
 102:boards/TMC4671_eval.c **** 
 826              		.loc 1 102 4 is_stmt 1 view .LVU227
 102:boards/TMC4671_eval.c **** 
 827              		.loc 1 102 40 is_stmt 0 view .LVU228
 828 023e FFF7FEFF 		bl	tmc4671_getActualVelocity
 829              	.LVL60:
 102:boards/TMC4671_eval.c **** 
 830              		.loc 1 102 38 view .LVU229
 831 0242 2861     		str	r0, [r5, #16]
 832              	.L48:
 105:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_POSITION);
 833              		.loc 1 105 3 is_stmt 1 view .LVU230
 105:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_POSITION);
 834              		.loc 1 105 27 is_stmt 0 view .LVU231
 835 0244 0321     		movs	r1, #3
 106:boards/TMC4671_eval.c **** 
 836              		.loc 1 106 3 view .LVU232
 837 0246 0020     		movs	r0, #0
 105:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_POSITION);
 838              		.loc 1 105 27 view .LVU233
 839 0248 2170     		strb	r1, [r4]
 106:boards/TMC4671_eval.c **** 
 840              		.loc 1 106 3 is_stmt 1 view .LVU234
 841 024a FFF7FEFF 		bl	tmc4671_switchToMotionMode
 842              	.LVL61:
 109:boards/TMC4671_eval.c **** 	}
 843              		.loc 1 109 3 view .LVU235
 109:boards/TMC4671_eval.c **** 	}
 844              		.loc 1 109 39 is_stmt 0 view .LVU236
 845 024e 6E60     		str	r6, [r5, #4]
 846              	.LVL62:
 847              	.L50:
 109:boards/TMC4671_eval.c **** 	}
 848              		.loc 1 109 39 view .LVU237
 849 0250 0020     		movs	r0, #0
 850              	.L45:
 851              	.LBE31:
 852              	.LBE30:
 120:boards/TMC4671_eval.c **** 
 853              		.loc 1 120 1 view .LVU238
 854 0252 70BD     		pop	{r4, r5, r6, pc}
 855              	.LVL63:
 856              	.L47:
 113:boards/TMC4671_eval.c **** 	}
 857              		.loc 1 113 3 is_stmt 1 view .LVU239
 858 0254 FFF7FEFF 		bl	tmc4671_setAbsolutTargetPosition
 859              	.LVL64:
 113:boards/TMC4671_eval.c **** 	}
 860              		.loc 1 113 3 is_stmt 0 view .LVU240
 861 0258 FAE7     		b	.L50
 862              	.LVL65:
 863              	.L49:
  95:boards/TMC4671_eval.c **** 
 864              		.loc 1 95 10 view .LVU241
 865 025a 0820     		movs	r0, #8
 866              	.LVL66:
  95:boards/TMC4671_eval.c **** 
 867              		.loc 1 95 10 view .LVU242
 868 025c F9E7     		b	.L45
 869              	.L52:
 870 025e 00BF     		.align	2
 871              	.L51:
 872 0260 00000000 		.word	rampGenerator
 873 0264 00000000 		.word	actualMotionMode
 874              		.cfi_endproc
 875              	.LFE6:
 877              		.align	1
 878              		.syntax unified
 879              		.thumb
 880              		.thumb_func
 881              		.fpu softvfp
 883              	rotate:
 884              	.LVL67:
 885              	.LFB2:
  48:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 886              		.loc 1 48 1 is_stmt 1 view -0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
  49:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 890              		.loc 1 49 2 view .LVU244
  48:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 891              		.loc 1 48 1 is_stmt 0 view .LVU245
 892 0268 70B5     		push	{r4, r5, r6, lr}
 893              	.LCFI11:
 894              		.cfi_def_cfa_offset 16
 895              		.cfi_offset 4, -16
 896              		.cfi_offset 5, -12
 897              		.cfi_offset 6, -8
 898              		.cfi_offset 14, -4
  48:boards/TMC4671_eval.c **** 	if(motor >= TMC4671_MOTORS)
 899              		.loc 1 48 1 view .LVU246
 900 026a 0E46     		mov	r6, r1
  49:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 901              		.loc 1 49 4 view .LVU247
 902 026c A8B9     		cbnz	r0, .L57
  53:boards/TMC4671_eval.c **** 	{
 903              		.loc 1 53 2 is_stmt 1 view .LVU248
  53:boards/TMC4671_eval.c **** 	{
 904              		.loc 1 53 26 is_stmt 0 view .LVU249
 905 026e 0C4D     		ldr	r5, .L59
  53:boards/TMC4671_eval.c **** 	{
 906              		.loc 1 53 5 view .LVU250
 907 0270 95F82440 		ldrb	r4, [r5, #36]	@ zero_extendqisi2
 908 0274 74B1     		cbz	r4, .L55
 909              	.LVL68:
 910              	.LBB34:
 911              	.LBI34:
  47:boards/TMC4671_eval.c **** {
 912              		.loc 1 47 17 is_stmt 1 view .LVU251
 913              	.LBB35:
  56:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 914              		.loc 1 56 3 view .LVU252
  56:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 915              		.loc 1 56 23 is_stmt 0 view .LVU253
 916 0276 0B4C     		ldr	r4, .L59+4
  56:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampVelocity = tmc4671_getActualVelocity(motor);
 917              		.loc 1 56 6 view .LVU254
 918 0278 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 919 027a 012A     		cmp	r2, #1
 920 027c 02D1     		bne	.L56
  57:boards/TMC4671_eval.c **** 
 921              		.loc 1 57 4 is_stmt 1 view .LVU255
  57:boards/TMC4671_eval.c **** 
 922              		.loc 1 57 40 is_stmt 0 view .LVU256
 923 027e FFF7FEFF 		bl	tmc4671_getActualVelocity
 924              	.LVL69:
  57:boards/TMC4671_eval.c **** 
 925              		.loc 1 57 38 view .LVU257
 926 0282 2861     		str	r0, [r5, #16]
 927              	.L56:
  60:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_VELOCITY);
 928              		.loc 1 60 3 is_stmt 1 view .LVU258
  60:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_VELOCITY);
 929              		.loc 1 60 27 is_stmt 0 view .LVU259
 930 0284 0221     		movs	r1, #2
  61:boards/TMC4671_eval.c **** 
 931              		.loc 1 61 3 view .LVU260
 932 0286 0020     		movs	r0, #0
  60:boards/TMC4671_eval.c **** 		tmc4671_switchToMotionMode(motor, TMC4671_MOTION_MODE_VELOCITY);
 933              		.loc 1 60 27 view .LVU261
 934 0288 2170     		strb	r1, [r4]
  61:boards/TMC4671_eval.c **** 
 935              		.loc 1 61 3 is_stmt 1 view .LVU262
 936 028a FFF7FEFF 		bl	tmc4671_switchToMotionMode
 937              	.LVL70:
  64:boards/TMC4671_eval.c **** 	}
 938              		.loc 1 64 3 view .LVU263
  64:boards/TMC4671_eval.c **** 	}
 939              		.loc 1 64 39 is_stmt 0 view .LVU264
 940 028e EE60     		str	r6, [r5, #12]
 941              	.LVL71:
 942              	.L58:
  64:boards/TMC4671_eval.c **** 	}
 943              		.loc 1 64 39 view .LVU265
 944 0290 0020     		movs	r0, #0
 945              	.L53:
 946              	.LBE35:
 947              	.LBE34:
  75:boards/TMC4671_eval.c **** 
 948              		.loc 1 75 1 view .LVU266
 949 0292 70BD     		pop	{r4, r5, r6, pc}
 950              	.LVL72:
 951              	.L55:
  68:boards/TMC4671_eval.c **** 	}
 952              		.loc 1 68 3 is_stmt 1 view .LVU267
 953 0294 FFF7FEFF 		bl	tmc4671_setTargetVelocity
 954              	.LVL73:
  68:boards/TMC4671_eval.c **** 	}
 955              		.loc 1 68 3 is_stmt 0 view .LVU268
 956 0298 FAE7     		b	.L58
 957              	.LVL74:
 958              	.L57:
  50:boards/TMC4671_eval.c **** 
 959              		.loc 1 50 10 view .LVU269
 960 029a 0820     		movs	r0, #8
 961              	.LVL75:
  50:boards/TMC4671_eval.c **** 
 962              		.loc 1 50 10 view .LVU270
 963 029c F9E7     		b	.L53
 964              	.L60:
 965 029e 00BF     		.align	2
 966              	.L59:
 967 02a0 00000000 		.word	rampGenerator
 968 02a4 00000000 		.word	actualMotionMode
 969              		.cfi_endproc
 970              	.LFE2:
 972              		.align	1
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu softvfp
 978              	stop:
 979              	.LVL76:
 980              	.LFB5:
  88:boards/TMC4671_eval.c **** 	return rotate(motor, 0);
 981              		.loc 1 88 1 is_stmt 1 view -0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              		@ link register save eliminated.
  89:boards/TMC4671_eval.c **** }
 986              		.loc 1 89 2 view .LVU272
  89:boards/TMC4671_eval.c **** }
 987              		.loc 1 89 9 is_stmt 0 view .LVU273
 988 02a8 0021     		movs	r1, #0
 989 02aa DDE7     		b	rotate
 990              	.LVL77:
  89:boards/TMC4671_eval.c **** }
 991              		.loc 1 89 9 view .LVU274
 992              		.cfi_endproc
 993              	.LFE5:
 995              		.align	1
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 999              		.fpu softvfp
 1001              	left:
 1002              	.LVL78:
 1003              	.LFB4:
  83:boards/TMC4671_eval.c **** 	return rotate(motor, -velocity);
 1004              		.loc 1 83 1 is_stmt 1 view -0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008              		@ link register save eliminated.
  84:boards/TMC4671_eval.c **** }
 1009              		.loc 1 84 2 view .LVU276
  84:boards/TMC4671_eval.c **** }
 1010              		.loc 1 84 9 is_stmt 0 view .LVU277
 1011 02ac 4942     		rsbs	r1, r1, #0
 1012              	.LVL79:
  84:boards/TMC4671_eval.c **** }
 1013              		.loc 1 84 9 view .LVU278
 1014 02ae DBE7     		b	rotate
 1015              	.LVL80:
  84:boards/TMC4671_eval.c **** }
 1016              		.loc 1 84 9 view .LVU279
 1017              		.cfi_endproc
 1018              	.LFE4:
 1020              		.align	1
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1024              		.fpu softvfp
 1026              	right:
 1027              	.LVL81:
 1028              	.LFB3:
  78:boards/TMC4671_eval.c **** 	return rotate(motor, velocity);
 1029              		.loc 1 78 1 is_stmt 1 view -0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              		@ link register save eliminated.
  79:boards/TMC4671_eval.c **** }
 1034              		.loc 1 79 2 view .LVU281
  79:boards/TMC4671_eval.c **** }
 1035              		.loc 1 79 9 is_stmt 0 view .LVU282
 1036 02b0 DAE7     		b	rotate
 1037              	.LVL82:
  79:boards/TMC4671_eval.c **** }
 1038              		.loc 1 79 9 view .LVU283
 1039              		.cfi_endproc
 1040              	.LFE3:
 1042              		.align	1
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu softvfp
 1048              	SAP:
 1049              	.LVL83:
 1050              	.LFB13:
 469:boards/TMC4671_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 1051              		.loc 1 469 1 is_stmt 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 470:boards/TMC4671_eval.c **** }
 1055              		.loc 1 470 2 view .LVU285
 1056              	.LBB38:
 1057              	.LBI38:
 152:boards/TMC4671_eval.c **** {
 1058              		.loc 1 152 17 view .LVU286
 1059              	.LBB39:
 154:boards/TMC4671_eval.c **** 
 1060              		.loc 1 154 2 view .LVU287
 156:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 1061              		.loc 1 156 2 view .LVU288
 1062              	.LBE39:
 1063              	.LBE38:
 469:boards/TMC4671_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 1064              		.loc 1 469 1 is_stmt 0 view .LVU289
 1065 02b2 70B5     		push	{r4, r5, r6, lr}
 1066              	.LCFI12:
 1067              		.cfi_def_cfa_offset 16
 1068              		.cfi_offset 4, -16
 1069              		.cfi_offset 5, -12
 1070              		.cfi_offset 6, -8
 1071              		.cfi_offset 14, -4
 469:boards/TMC4671_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 1072              		.loc 1 469 1 view .LVU290
 1073 02b4 1546     		mov	r5, r2
 1074              	.LBB42:
 1075              	.LBB40:
 156:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 1076              		.loc 1 156 4 view .LVU291
 1077 02b6 0C46     		mov	r4, r1
 1078 02b8 0029     		cmp	r1, #0
 1079 02ba 65D1     		bne	.L81
 159:boards/TMC4671_eval.c **** 	{
 1080              		.loc 1 159 2 is_stmt 1 view .LVU292
 1081 02bc AC28     		cmp	r0, #172
 1082 02be 43D0     		beq	.L66
 1083 02c0 11D8     		bhi	.L67
 1084 02c2 0D28     		cmp	r0, #13
 1085 02c4 0BD8     		bhi	.L68
 1086 02c6 0328     		cmp	r0, #3
 1087 02c8 0BD9     		bls	.L83
 1088 02ca 061F     		subs	r6, r0, #4
 1089 02cc 092E     		cmp	r6, #9
 1090 02ce 08D8     		bhi	.L83
 1091 02d0 DFE806F0 		tbb	[pc, r6]
 1092              	.L70:
 1093 02d4 1F       		.byte	(.L73-.L70)/2
 1094 02d5 07       		.byte	(.L83-.L70)/2
 1095 02d6 07       		.byte	(.L83-.L70)/2
 1096 02d7 07       		.byte	(.L83-.L70)/2
 1097 02d8 07       		.byte	(.L83-.L70)/2
 1098 02d9 07       		.byte	(.L83-.L70)/2
 1099 02da 07       		.byte	(.L83-.L70)/2
 1100 02db 28       		.byte	(.L72-.L70)/2
 1101 02dc 2F       		.byte	(.L71-.L70)/2
 1102 02dd 25       		.byte	(.L85-.L70)/2
 1103              		.p2align 1
 1104              	.L68:
 1105 02de AB28     		cmp	r0, #171
 1106 02e0 2BD0     		beq	.L74
 1107              	.L83:
 357:boards/TMC4671_eval.c **** 		break;
 1108              		.loc 1 357 10 is_stmt 0 view .LVU293
 1109 02e2 0424     		movs	r4, #4
 1110 02e4 1CE0     		b	.L64
 1111              	.L67:
 159:boards/TMC4671_eval.c **** 	{
 1112              		.loc 1 159 2 view .LVU294
 1113 02e6 BE28     		cmp	r0, #190
 1114 02e8 42D0     		beq	.L75
 1115 02ea 08D8     		bhi	.L76
 1116 02ec B328     		cmp	r0, #179
 1117 02ee 2ED0     		beq	.L77
 1118 02f0 BD28     		cmp	r0, #189
 1119 02f2 F6D1     		bne	.L83
 288:boards/TMC4671_eval.c **** 			*value = tmc4671_getTargetTorque_raw(motor);
 1120              		.loc 1 288 3 is_stmt 1 view .LVU295
 290:boards/TMC4671_eval.c **** 			tmc4671_setTargetTorque_raw(motor, *value);
 1121              		.loc 1 290 10 view .LVU296
 291:boards/TMC4671_eval.c **** 		}
 1122              		.loc 1 291 4 view .LVU297
 1123 02f4 1146     		mov	r1, r2
 1124              	.LVL84:
 291:boards/TMC4671_eval.c **** 		}
 1125              		.loc 1 291 4 is_stmt 0 view .LVU298
 1126 02f6 2046     		mov	r0, r4
 1127              	.LVL85:
 291:boards/TMC4671_eval.c **** 		}
 1128              		.loc 1 291 4 view .LVU299
 1129 02f8 FFF7FEFF 		bl	tmc4671_setTargetTorque_raw
 1130              	.LVL86:
 291:boards/TMC4671_eval.c **** 		}
 1131              		.loc 1 291 4 view .LVU300
 1132 02fc 10E0     		b	.L64
 1133              	.LVL87:
 1134              	.L76:
 159:boards/TMC4671_eval.c **** 	{
 1135              		.loc 1 159 2 view .LVU301
 1136 02fe FB28     		cmp	r0, #251
 1137 0300 3FD0     		beq	.L79
 1138 0302 FC28     		cmp	r0, #252
 1139 0304 EDD1     		bne	.L83
 334:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].initMode;
 1140              		.loc 1 334 3 is_stmt 1 view .LVU302
 336:boards/TMC4671_eval.c **** 			tmc4671_startEncoderInitialization(*value, &motorConfig[motor].initMode, &motorConfig[motor].ini
 1141              		.loc 1 336 10 view .LVU303
 337:boards/TMC4671_eval.c **** 		}
 1142              		.loc 1 337 4 view .LVU304
 1143 0306 214A     		ldr	r2, .L87
 1144              	.LVL88:
 337:boards/TMC4671_eval.c **** 		}
 1145              		.loc 1 337 4 is_stmt 0 view .LVU305
 1146 0308 E8B2     		uxtb	r0, r5
 1147              	.LVL89:
 337:boards/TMC4671_eval.c **** 		}
 1148              		.loc 1 337 4 view .LVU306
 1149 030a 511C     		adds	r1, r2, #1
 1150              	.LVL90:
 337:boards/TMC4671_eval.c **** 		}
 1151              		.loc 1 337 4 view .LVU307
 1152 030c FFF7FEFF 		bl	tmc4671_startEncoderInitialization
 1153              	.LVL91:
 1154 0310 06E0     		b	.L64
 1155              	.LVL92:
 1156              	.L73:
 162:boards/TMC4671_eval.c **** 		{
 1157              		.loc 1 162 3 is_stmt 1 view .LVU308
 171:boards/TMC4671_eval.c **** 		{
 1158              		.loc 1 171 8 view .LVU309
 173:boards/TMC4671_eval.c **** 
 1159              		.loc 1 173 4 view .LVU310
 1160 0312 6021     		movs	r1, #96
 1161              	.LVL93:
 173:boards/TMC4671_eval.c **** 
 1162              		.loc 1 173 4 is_stmt 0 view .LVU311
 1163 0314 0020     		movs	r0, #0
 1164              	.LVL94:
 173:boards/TMC4671_eval.c **** 
 1165              		.loc 1 173 4 view .LVU312
 1166 0316 FFF7FEFF 		bl	tmc4671_writeInt
 1167              	.LVL95:
 177:boards/TMC4671_eval.c **** #endif
 1168              		.loc 1 177 4 is_stmt 1 view .LVU313
 177:boards/TMC4671_eval.c **** #endif
 1169              		.loc 1 177 37 is_stmt 0 view .LVU314
 1170 031a 1D4B     		ldr	r3, .L87+4
 1171 031c 1D60     		str	r5, [r3]
 1172              	.L85:
 154:boards/TMC4671_eval.c **** 
 1173              		.loc 1 154 11 view .LVU315
 1174 031e 0024     		movs	r4, #0
 1175              	.L64:
 1176              	.LBE40:
 1177              	.LBE42:
 471:boards/TMC4671_eval.c **** 
 1178              		.loc 1 471 1 view .LVU316
 1179 0320 2046     		mov	r0, r4
 1180 0322 70BD     		pop	{r4, r5, r6, pc}
 1181              	.LVL96:
 1182              	.L72:
 1183              	.LBB43:
 1184              	.LBB41:
 182:boards/TMC4671_eval.c **** 		{
 1185              		.loc 1 182 3 is_stmt 1 view .LVU317
 191:boards/TMC4671_eval.c **** 		{
 1186              		.loc 1 191 8 view .LVU318
 193:boards/TMC4671_eval.c **** 
 1187              		.loc 1 193 4 view .LVU319
 1188 0324 5F21     		movs	r1, #95
 1189              	.LVL97:
 193:boards/TMC4671_eval.c **** 
 1190              		.loc 1 193 4 is_stmt 0 view .LVU320
 1191 0326 0020     		movs	r0, #0
 1192              	.LVL98:
 193:boards/TMC4671_eval.c **** 
 1193              		.loc 1 193 4 view .LVU321
 1194 0328 FFF7FEFF 		bl	tmc4671_writeInt
 1195              	.LVL99:
 197:boards/TMC4671_eval.c **** #endif
 1196              		.loc 1 197 4 is_stmt 1 view .LVU322
 197:boards/TMC4671_eval.c **** #endif
 1197              		.loc 1 197 38 is_stmt 0 view .LVU323
 1198 032c 184B     		ldr	r3, .L87+4
 1199 032e 5D61     		str	r5, [r3, #20]
 1200 0330 F5E7     		b	.L85
 1201              	.LVL100:
 1202              	.L71:
 203:boards/TMC4671_eval.c **** 			*value = rampGenerator[motor].rampEnabled;
 1203              		.loc 1 203 3 is_stmt 1 view .LVU324
 205:boards/TMC4671_eval.c **** 			rampGenerator[motor].rampEnabled = *value;
 1204              		.loc 1 205 8 view .LVU325
 206:boards/TMC4671_eval.c **** 		break;
 1205              		.loc 1 206 4 view .LVU326
 206:boards/TMC4671_eval.c **** 		break;
 1206              		.loc 1 206 37 is_stmt 0 view .LVU327
 1207 0332 174B     		ldr	r3, .L87+4
 1208 0334 83F82420 		strb	r2, [r3, #36]
 1209 0338 F1E7     		b	.L85
 1210              	.L74:
 224:boards/TMC4671_eval.c **** 			*value = (int16_t) tmc4671_readRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_16_
 1211              		.loc 1 224 3 is_stmt 1 view .LVU328
 226:boards/TMC4671_eval.c **** 			tmc4671_writeRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_16_TO_31, *value);
 1212              		.loc 1 226 8 view .LVU329
 227:boards/TMC4671_eval.c **** 		break;
 1213              		.loc 1 227 4 view .LVU330
 1214 033a 93B2     		uxth	r3, r2
 1215 033c 0122     		movs	r2, #1
 1216              	.LVL101:
 1217              	.L86:
 234:boards/TMC4671_eval.c **** 		break;
 1218              		.loc 1 234 4 is_stmt 0 view .LVU331
 1219 033e 6421     		movs	r1, #100
 1220              	.LVL102:
 234:boards/TMC4671_eval.c **** 		break;
 1221              		.loc 1 234 4 view .LVU332
 1222 0340 2046     		mov	r0, r4
 1223              	.LVL103:
 234:boards/TMC4671_eval.c **** 		break;
 1224              		.loc 1 234 4 view .LVU333
 1225 0342 FFF7FEFF 		bl	tmc4671_writeRegister16BitValue
 1226              	.LVL104:
 1227 0346 EBE7     		b	.L64
 1228              	.LVL105:
 1229              	.L66:
 231:boards/TMC4671_eval.c **** 			*value = (int16_t) tmc4671_readRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_0_T
 1230              		.loc 1 231 3 is_stmt 1 view .LVU334
 233:boards/TMC4671_eval.c **** 			tmc4671_writeRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_0_TO_15, *value);
 1231              		.loc 1 233 8 view .LVU335
 234:boards/TMC4671_eval.c **** 		break;
 1232              		.loc 1 234 4 view .LVU336
 1233 0348 93B2     		uxth	r3, r2
 1234 034a 0A46     		mov	r2, r1
 1235              	.LVL106:
 234:boards/TMC4671_eval.c **** 		break;
 1236              		.loc 1 234 4 is_stmt 0 view .LVU337
 1237 034c F7E7     		b	.L86
 1238              	.LVL107:
 1239              	.L77:
 270:boards/TMC4671_eval.c **** 			*value = tmc4671_getActualPosition(motor);
 1240              		.loc 1 270 3 is_stmt 1 view .LVU338
 272:boards/TMC4671_eval.c **** 		{
 1241              		.loc 1 272 8 view .LVU339
 274:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 1242              		.loc 1 274 4 view .LVU340
 1243 034e 6B21     		movs	r1, #107
 1244              	.LVL108:
 274:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 1245              		.loc 1 274 4 is_stmt 0 view .LVU341
 1246 0350 2046     		mov	r0, r4
 1247              	.LVL109:
 274:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 1248              		.loc 1 274 4 view .LVU342
 1249 0352 FFF7FEFF 		bl	tmc4671_writeInt
 1250              	.LVL110:
 277:boards/TMC4671_eval.c **** 			{
 1251              		.loc 1 277 4 is_stmt 1 view .LVU343
 277:boards/TMC4671_eval.c **** 			{
 1252              		.loc 1 277 24 is_stmt 0 view .LVU344
 1253 0356 0F4B     		ldr	r3, .L87+8
 277:boards/TMC4671_eval.c **** 			{
 1254              		.loc 1 277 7 view .LVU345
 1255 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 035a 032B     		cmp	r3, #3
 1257 035c E0D1     		bne	.L64
 279:boards/TMC4671_eval.c **** 				rampGenerator[motor].rampPosition = *value;
 1258              		.loc 1 279 5 is_stmt 1 view .LVU346
 279:boards/TMC4671_eval.c **** 				rampGenerator[motor].rampPosition = *value;
 1259              		.loc 1 279 41 is_stmt 0 view .LVU347
 1260 035e 0C4B     		ldr	r3, .L87+4
 281:boards/TMC4671_eval.c **** 			}
 1261              		.loc 1 281 5 view .LVU348
 1262 0360 2A46     		mov	r2, r5
 280:boards/TMC4671_eval.c **** 				tmc4671_writeInt(motor, TMC4671_PID_POSITION_TARGET, *value);
 1263              		.loc 1 280 39 view .LVU349
 1264 0362 C3E90155 		strd	r5, r5, [r3, #4]
 281:boards/TMC4671_eval.c **** 			}
 1265              		.loc 1 281 5 is_stmt 1 view .LVU350
 1266 0366 6821     		movs	r1, #104
 1267 0368 2046     		mov	r0, r4
 1268 036a FFF7FEFF 		bl	tmc4671_writeInt
 1269              	.LVL111:
 1270 036e D7E7     		b	.L64
 1271              	.LVL112:
 1272              	.L75:
 296:boards/TMC4671_eval.c **** 			*value = tmc4671_getTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor);
 1273              		.loc 1 296 3 view .LVU351
 298:boards/TMC4671_eval.c **** 			tmc4671_setTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor, *value);
 1274              		.loc 1 298 10 view .LVU352
 299:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 1275              		.loc 1 299 4 view .LVU353
 1276 0370 094B     		ldr	r3, .L87+12
 1277 0372 2046     		mov	r0, r4
 1278              	.LVL113:
 299:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 1279              		.loc 1 299 4 is_stmt 0 view .LVU354
 1280 0374 1989     		ldrh	r1, [r3, #8]
 1281              	.LVL114:
 299:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 1282              		.loc 1 299 4 view .LVU355
 1283 0376 FFF7FEFF 		bl	tmc4671_setTargetTorque_mA
 1284              	.LVL115:
 302:boards/TMC4671_eval.c **** #endif
 1285              		.loc 1 302 4 is_stmt 1 view .LVU356
 302:boards/TMC4671_eval.c **** #endif
 1286              		.loc 1 302 28 is_stmt 0 view .LVU357
 1287 037a 064B     		ldr	r3, .L87+8
 1288 037c 0122     		movs	r2, #1
 1289 037e 1A70     		strb	r2, [r3]
 1290 0380 CEE7     		b	.L64
 1291              	.LVL116:
 1292              	.L79:
 326:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].torqueMeasurementFactor;
 1293              		.loc 1 326 3 is_stmt 1 view .LVU358
 328:boards/TMC4671_eval.c **** 			motorConfig[motor].torqueMeasurementFactor = *value;
 1294              		.loc 1 328 10 view .LVU359
 329:boards/TMC4671_eval.c **** 		}
 1295              		.loc 1 329 4 view .LVU360
 329:boards/TMC4671_eval.c **** 		}
 1296              		.loc 1 329 47 is_stmt 0 view .LVU361
 1297 0382 054B     		ldr	r3, .L87+12
 1298 0384 1A81     		strh	r2, [r3, #8]	@ movhi
 1299 0386 CBE7     		b	.L64
 1300              	.L81:
 157:boards/TMC4671_eval.c **** 
 1301              		.loc 1 157 10 view .LVU362
 1302 0388 0824     		movs	r4, #8
 1303 038a C9E7     		b	.L64
 1304              	.L88:
 1305              		.align	2
 1306              	.L87:
 1307 038c 06000000 		.word	motorConfig+6
 1308 0390 00000000 		.word	rampGenerator
 1309 0394 00000000 		.word	actualMotionMode
 1310 0398 00000000 		.word	motorConfig
 1311              	.LBE41:
 1312              	.LBE43:
 1313              		.cfi_endproc
 1314              	.LFE13:
 1316              		.align	1
 1317              		.syntax unified
 1318              		.thumb
 1319              		.thumb_func
 1320              		.fpu softvfp
 1322              	GAP:
 1323              	.LVL117:
 1324              	.LFB14:
 474:boards/TMC4671_eval.c **** 	return handleParameter(READ, motor, type, value);
 1325              		.loc 1 474 1 is_stmt 1 view -0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 475:boards/TMC4671_eval.c **** }
 1329              		.loc 1 475 2 view .LVU364
 474:boards/TMC4671_eval.c **** 	return handleParameter(READ, motor, type, value);
 1330              		.loc 1 474 1 is_stmt 0 view .LVU365
 1331 039c 38B5     		push	{r3, r4, r5, lr}
 1332              	.LCFI13:
 1333              		.cfi_def_cfa_offset 16
 1334              		.cfi_offset 3, -16
 1335              		.cfi_offset 4, -12
 1336              		.cfi_offset 5, -8
 1337              		.cfi_offset 14, -4
 474:boards/TMC4671_eval.c **** 	return handleParameter(READ, motor, type, value);
 1338              		.loc 1 474 1 view .LVU366
 1339 039e 1546     		mov	r5, r2
 1340              	.LVL118:
 1341              	.LBB46:
 1342              	.LBI46:
 152:boards/TMC4671_eval.c **** {
 1343              		.loc 1 152 17 is_stmt 1 view .LVU367
 1344              	.LBB47:
 154:boards/TMC4671_eval.c **** 
 1345              		.loc 1 154 2 view .LVU368
 156:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 1346              		.loc 1 156 2 view .LVU369
 156:boards/TMC4671_eval.c **** 		return TMC_ERROR_MOTOR;
 1347              		.loc 1 156 4 is_stmt 0 view .LVU370
 1348 03a0 0029     		cmp	r1, #0
 1349 03a2 40F0B980 		bne	.L118
 159:boards/TMC4671_eval.c **** 	{
 1350              		.loc 1 159 2 is_stmt 1 view .LVU371
 1351 03a6 C028     		cmp	r0, #192
 1352 03a8 54D8     		bhi	.L91
 1353 03aa AA28     		cmp	r0, #170
 1354 03ac 05D8     		bhi	.L92
 1355 03ae 0438     		subs	r0, r0, #4
 1356              	.LVL119:
 159:boards/TMC4671_eval.c **** 	{
 1357              		.loc 1 159 2 is_stmt 0 view .LVU372
 1358 03b0 C3B2     		uxtb	r3, r0
 1359 03b2 092B     		cmp	r3, #9
 1360 03b4 34D9     		bls	.L93
 1361              	.L121:
 1362 03b6 0420     		movs	r0, #4
 1363              	.LVL120:
 159:boards/TMC4671_eval.c **** 	{
 1364              		.loc 1 159 2 view .LVU373
 1365              	.LBE47:
 1366              	.LBE46:
 475:boards/TMC4671_eval.c **** }
 1367              		.loc 1 475 9 view .LVU374
 1368 03b8 5FE0     		b	.L89
 1369              	.LVL121:
 1370              	.L92:
 475:boards/TMC4671_eval.c **** }
 1371              		.loc 1 475 9 view .LVU375
 1372 03ba AB38     		subs	r0, r0, #171
 1373              	.LVL122:
 475:boards/TMC4671_eval.c **** }
 1374              		.loc 1 475 9 view .LVU376
 1375 03bc 1528     		cmp	r0, #21
 1376 03be FAD8     		bhi	.L121
 1377 03c0 01A3     		adr	r3, .L100
 1378 03c2 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1379 03c6 00BF     		.p2align 2
 1380              	.L100:
 1381 03c8 A3040000 		.word	.L110+1
 1382 03cc B3040000 		.word	.L109+1
 1383 03d0 B7040000 		.word	.L108+1
 1384 03d4 C1040000 		.word	.L107+1
 1385 03d8 B7030000 		.word	.L121+1
 1386 03dc C5040000 		.word	.L106+1
 1387 03e0 B7030000 		.word	.L121+1
 1388 03e4 CD040000 		.word	.L105+1
 1389 03e8 D3040000 		.word	.L104+1
 1390 03ec B7030000 		.word	.L121+1
 1391 03f0 B7030000 		.word	.L121+1
 1392 03f4 B7030000 		.word	.L121+1
 1393 03f8 B7030000 		.word	.L121+1
 1394 03fc B7030000 		.word	.L121+1
 1395 0400 B7030000 		.word	.L121+1
 1396 0404 B7030000 		.word	.L121+1
 1397 0408 B7030000 		.word	.L121+1
 1398 040c B7030000 		.word	.L121+1
 1399 0410 DB040000 		.word	.L103+1
 1400 0414 E3040000 		.word	.L102+1
 1401 0418 EF040000 		.word	.L101+1
 1402 041c FD040000 		.word	.L99+1
 1403              		.p2align 1
 1404              	.L93:
 1405 0420 0928     		cmp	r0, #9
 1406 0422 C8D8     		bhi	.L121
 1407 0424 01A3     		adr	r3, .L112
 1408 0426 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1409 042a 00BF     		.p2align 2
 1410              	.L112:
 1411 042c 6B040000 		.word	.L115+1
 1412 0430 B7030000 		.word	.L121+1
 1413 0434 B7030000 		.word	.L121+1
 1414 0438 B7030000 		.word	.L121+1
 1415 043c B7030000 		.word	.L121+1
 1416 0440 B7030000 		.word	.L121+1
 1417 0444 B7030000 		.word	.L121+1
 1418 0448 7D040000 		.word	.L114+1
 1419 044c 8D040000 		.word	.L113+1
 1420 0450 97040000 		.word	.L111+1
 1421              	.LVL123:
 1422              		.p2align 1
 1423              	.L91:
 1424              	.LBB50:
 1425              	.LBB48:
 159:boards/TMC4671_eval.c **** 	{
 1426              		.loc 1 159 2 view .LVU377
 1427 0454 431D     		adds	r3, r0, #5
 1428 0456 DBB2     		uxtb	r3, r3
 1429 0458 032B     		cmp	r3, #3
 1430 045a ACD8     		bhi	.L121
 1431 045c FB38     		subs	r0, r0, #251
 1432              	.LVL124:
 159:boards/TMC4671_eval.c **** 	{
 1433              		.loc 1 159 2 view .LVU378
 1434 045e 0328     		cmp	r0, #3
 1435 0460 A9D8     		bhi	.L121
 1436 0462 DFE800F0 		tbb	[pc, r0]
 1437              	.L95:
 1438 0466 4D       		.byte	(.L98-.L95)/2
 1439 0467 50       		.byte	(.L97-.L95)/2
 1440 0468 53       		.byte	(.L96-.L95)/2
 1441 0469 56       		.byte	(.L94-.L95)/2
 1442              		.p2align 1
 1443              	.L115:
 162:boards/TMC4671_eval.c **** 		{
 1444              		.loc 1 162 3 is_stmt 1 view .LVU379
 164:boards/TMC4671_eval.c **** 
 1445              		.loc 1 164 4 view .LVU380
 164:boards/TMC4671_eval.c **** 
 1446              		.loc 1 164 24 is_stmt 0 view .LVU381
 1447 046a 6021     		movs	r1, #96
 1448              	.LVL125:
 164:boards/TMC4671_eval.c **** 
 1449              		.loc 1 164 24 view .LVU382
 1450 046c 0020     		movs	r0, #0
 1451 046e FFF7FEFF 		bl	tmc4671_readInt
 1452              	.LVL126:
 168:boards/TMC4671_eval.c **** #endif
 1453              		.loc 1 168 37 view .LVU383
 1454 0472 2A4B     		ldr	r3, .L128
 164:boards/TMC4671_eval.c **** 
 1455              		.loc 1 164 11 view .LVU384
 1456 0474 2860     		str	r0, [r5]
 168:boards/TMC4671_eval.c **** #endif
 1457              		.loc 1 168 4 is_stmt 1 view .LVU385
 168:boards/TMC4671_eval.c **** #endif
 1458              		.loc 1 168 37 is_stmt 0 view .LVU386
 1459 0476 1860     		str	r0, [r3]
 1460              	.L123:
 154:boards/TMC4671_eval.c **** 
 1461              		.loc 1 154 11 view .LVU387
 1462 0478 0020     		movs	r0, #0
 1463              	.LVL127:
 1464              	.L89:
 154:boards/TMC4671_eval.c **** 
 1465              		.loc 1 154 11 view .LVU388
 1466              	.LBE48:
 1467              	.LBE50:
 476:boards/TMC4671_eval.c **** 
 1468              		.loc 1 476 1 view .LVU389
 1469 047a 38BD     		pop	{r3, r4, r5, pc}
 1470              	.LVL128:
 1471              	.L114:
 1472              	.LBB51:
 1473              	.LBB49:
 182:boards/TMC4671_eval.c **** 		{
 1474              		.loc 1 182 3 is_stmt 1 view .LVU390
 184:boards/TMC4671_eval.c **** 
 1475              		.loc 1 184 4 view .LVU391
 184:boards/TMC4671_eval.c **** 
 1476              		.loc 1 184 24 is_stmt 0 view .LVU392
 1477 047c 5F21     		movs	r1, #95
 1478              	.LVL129:
 184:boards/TMC4671_eval.c **** 
 1479              		.loc 1 184 24 view .LVU393
 1480 047e 0020     		movs	r0, #0
 1481 0480 FFF7FEFF 		bl	tmc4671_readInt
 1482              	.LVL130:
 188:boards/TMC4671_eval.c **** #endif
 1483              		.loc 1 188 38 view .LVU394
 1484 0484 254B     		ldr	r3, .L128
 184:boards/TMC4671_eval.c **** 
 1485              		.loc 1 184 11 view .LVU395
 1486 0486 2860     		str	r0, [r5]
 188:boards/TMC4671_eval.c **** #endif
 1487              		.loc 1 188 4 is_stmt 1 view .LVU396
 188:boards/TMC4671_eval.c **** #endif
 1488              		.loc 1 188 38 is_stmt 0 view .LVU397
 1489 0488 5861     		str	r0, [r3, #20]
 1490 048a F5E7     		b	.L123
 1491              	.LVL131:
 1492              	.L113:
 203:boards/TMC4671_eval.c **** 			*value = rampGenerator[motor].rampEnabled;
 1493              		.loc 1 203 3 is_stmt 1 view .LVU398
 204:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1494              		.loc 1 204 4 view .LVU399
 204:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1495              		.loc 1 204 33 is_stmt 0 view .LVU400
 1496 048c 234B     		ldr	r3, .L128
 1497 048e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1498              	.L122:
 351:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1499              		.loc 1 351 31 view .LVU401
 1500 0492 2B60     		str	r3, [r5]
 1501 0494 F0E7     		b	.L123
 1502              	.L111:
 210:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 1503              		.loc 1 210 3 is_stmt 1 view .LVU402
 212:boards/TMC4671_eval.c **** 				*value = rampGenerator[motor].rampVelocity;
 1504              		.loc 1 212 4 view .LVU403
 212:boards/TMC4671_eval.c **** 				*value = rampGenerator[motor].rampVelocity;
 1505              		.loc 1 212 28 is_stmt 0 view .LVU404
 1506 0496 214B     		ldr	r3, .L128
 212:boards/TMC4671_eval.c **** 				*value = rampGenerator[motor].rampVelocity;
 1507              		.loc 1 212 7 view .LVU405
 1508 0498 93F82440 		ldrb	r4, [r3, #36]	@ zero_extendqisi2
 1509 049c 5CB1     		cbz	r4, .L108
 213:boards/TMC4671_eval.c **** 			else
 1510              		.loc 1 213 5 is_stmt 1 view .LVU406
 213:boards/TMC4671_eval.c **** 			else
 1511              		.loc 1 213 34 is_stmt 0 view .LVU407
 1512 049e 1B69     		ldr	r3, [r3, #16]
 1513 04a0 F7E7     		b	.L122
 1514              	.L110:
 224:boards/TMC4671_eval.c **** 			*value = (int16_t) tmc4671_readRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_16_
 1515              		.loc 1 224 3 is_stmt 1 view .LVU408
 225:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1516              		.loc 1 225 4 view .LVU409
 225:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1517              		.loc 1 225 23 is_stmt 0 view .LVU410
 1518 04a2 0122     		movs	r2, #1
 1519              	.LVL132:
 1520              	.L127:
 225:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1521              		.loc 1 225 23 view .LVU411
 1522 04a4 6421     		movs	r1, #100
 1523              	.LVL133:
 225:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1524              		.loc 1 225 23 view .LVU412
 1525 04a6 0020     		movs	r0, #0
 1526 04a8 FFF7FEFF 		bl	tmc4671_readRegister16BitValue
 1527              	.LVL134:
 225:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1528              		.loc 1 225 13 view .LVU413
 1529 04ac 00B2     		sxth	r0, r0
 1530              	.L125:
 319:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1531              		.loc 1 319 11 view .LVU414
 1532 04ae 2860     		str	r0, [r5]
 1533 04b0 E2E7     		b	.L123
 1534              	.LVL135:
 1535              	.L109:
 231:boards/TMC4671_eval.c **** 			*value = (int16_t) tmc4671_readRegister16BitValue(motor, TMC4671_PID_TORQUE_FLUX_TARGET, BIT_0_T
 1536              		.loc 1 231 3 is_stmt 1 view .LVU415
 232:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1537              		.loc 1 232 4 view .LVU416
 232:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1538              		.loc 1 232 23 is_stmt 0 view .LVU417
 1539 04b2 0022     		movs	r2, #0
 1540              	.LVL136:
 232:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1541              		.loc 1 232 23 view .LVU418
 1542 04b4 F6E7     		b	.L127
 1543              	.LVL137:
 1544              	.L108:
 238:boards/TMC4671_eval.c **** 			*value = (int32_t) tmc4671_readInt(motor, TMC4671_PID_VELOCITY_TARGET);
 1545              		.loc 1 238 3 is_stmt 1 view .LVU419
 239:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1546              		.loc 1 239 4 view .LVU420
 239:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1547              		.loc 1 239 23 is_stmt 0 view .LVU421
 1548 04b6 6621     		movs	r1, #102
 1549              	.LVL138:
 1550              	.L126:
 319:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1551              		.loc 1 319 13 view .LVU422
 1552 04b8 0020     		movs	r0, #0
 1553 04ba FFF7FEFF 		bl	tmc4671_readInt
 1554              	.LVL139:
 1555 04be F6E7     		b	.L125
 1556              	.LVL140:
 1557              	.L107:
 246:boards/TMC4671_eval.c **** 			*value = (int32_t) tmc4671_readInt(motor, TMC4671_PID_POSITION_TARGET);
 1558              		.loc 1 246 3 is_stmt 1 view .LVU423
 247:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1559              		.loc 1 247 4 view .LVU424
 247:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1560              		.loc 1 247 23 is_stmt 0 view .LVU425
 1561 04c0 6821     		movs	r1, #104
 1562              	.LVL141:
 247:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1563              		.loc 1 247 23 view .LVU426
 1564 04c2 F9E7     		b	.L126
 1565              	.LVL142:
 1566              	.L106:
 254:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].actualTorquePT1;
 1567              		.loc 1 254 3 is_stmt 1 view .LVU427
 255:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1568              		.loc 1 255 4 view .LVU428
 255:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1569              		.loc 1 255 31 is_stmt 0 view .LVU429
 1570 04c4 164B     		ldr	r3, .L128+4
 1571 04c6 B3F91830 		ldrsh	r3, [r3, #24]
 1572 04ca E2E7     		b	.L122
 1573              	.L105:
 262:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].actualVelocityPT1;
 1574              		.loc 1 262 3 is_stmt 1 view .LVU430
 263:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1575              		.loc 1 263 4 view .LVU431
 263:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1576              		.loc 1 263 31 is_stmt 0 view .LVU432
 1577 04cc 144B     		ldr	r3, .L128+4
 1578 04ce DB68     		ldr	r3, [r3, #12]
 1579 04d0 DFE7     		b	.L122
 1580              	.L104:
 270:boards/TMC4671_eval.c **** 			*value = tmc4671_getActualPosition(motor);
 1581              		.loc 1 270 3 is_stmt 1 view .LVU433
 271:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1582              		.loc 1 271 4 view .LVU434
 271:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1583              		.loc 1 271 13 is_stmt 0 view .LVU435
 1584 04d2 0020     		movs	r0, #0
 1585 04d4 FFF7FEFF 		bl	tmc4671_getActualPosition
 1586              	.LVL143:
 271:boards/TMC4671_eval.c **** 		else if(readWrite == WRITE)
 1587              		.loc 1 271 13 view .LVU436
 1588 04d8 E9E7     		b	.L125
 1589              	.LVL144:
 1590              	.L103:
 288:boards/TMC4671_eval.c **** 			*value = tmc4671_getTargetTorque_raw(motor);
 1591              		.loc 1 288 3 is_stmt 1 view .LVU437
 289:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1592              		.loc 1 289 4 view .LVU438
 289:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1593              		.loc 1 289 13 is_stmt 0 view .LVU439
 1594 04da 0020     		movs	r0, #0
 1595 04dc FFF7FEFF 		bl	tmc4671_getTargetTorque_raw
 1596              	.LVL145:
 289:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1597              		.loc 1 289 13 view .LVU440
 1598 04e0 E5E7     		b	.L125
 1599              	.LVL146:
 1600              	.L102:
 296:boards/TMC4671_eval.c **** 			*value = tmc4671_getTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor);
 1601              		.loc 1 296 3 is_stmt 1 view .LVU441
 297:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1602              		.loc 1 297 4 view .LVU442
 297:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1603              		.loc 1 297 13 is_stmt 0 view .LVU443
 1604 04e2 0F4B     		ldr	r3, .L128+4
 1605 04e4 0020     		movs	r0, #0
 1606 04e6 1989     		ldrh	r1, [r3, #8]
 1607              	.LVL147:
 297:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1608              		.loc 1 297 13 view .LVU444
 1609 04e8 FFF7FEFF 		bl	tmc4671_getTargetTorque_mA
 1610              	.LVL148:
 297:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1611              		.loc 1 297 13 view .LVU445
 1612 04ec DFE7     		b	.L125
 1613              	.LVL149:
 1614              	.L101:
 308:boards/TMC4671_eval.c **** 			tmc4671_writeInt(motor, TMC4671_INTERIM_ADDR, 1);
 1615              		.loc 1 308 3 is_stmt 1 view .LVU446
 309:boards/TMC4671_eval.c **** 			*value = tmc4671_readInt(motor, TMC4671_INTERIM_DATA);
 1616              		.loc 1 309 4 view .LVU447
 1617 04ee 0122     		movs	r2, #1
 1618              	.LVL150:
 1619              	.L124:
 318:boards/TMC4671_eval.c **** 			*value = tmc4671_readInt(motor, TMC4671_INTERIM_DATA);
 1620              		.loc 1 318 4 is_stmt 0 view .LVU448
 1621 04f0 6F21     		movs	r1, #111
 1622              	.LVL151:
 318:boards/TMC4671_eval.c **** 			*value = tmc4671_readInt(motor, TMC4671_INTERIM_DATA);
 1623              		.loc 1 318 4 view .LVU449
 1624 04f2 0020     		movs	r0, #0
 1625 04f4 FFF7FEFF 		bl	tmc4671_writeInt
 1626              	.LVL152:
 319:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1627              		.loc 1 319 4 is_stmt 1 view .LVU450
 319:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1628              		.loc 1 319 13 is_stmt 0 view .LVU451
 1629 04f8 6E21     		movs	r1, #110
 1630 04fa DDE7     		b	.L126
 1631              	.LVL153:
 1632              	.L99:
 317:boards/TMC4671_eval.c **** 			tmc4671_writeInt(motor, TMC4671_INTERIM_ADDR, 2);
 1633              		.loc 1 317 3 is_stmt 1 view .LVU452
 318:boards/TMC4671_eval.c **** 			*value = tmc4671_readInt(motor, TMC4671_INTERIM_DATA);
 1634              		.loc 1 318 4 view .LVU453
 1635 04fc 0222     		movs	r2, #2
 1636              	.LVL154:
 318:boards/TMC4671_eval.c **** 			*value = tmc4671_readInt(motor, TMC4671_INTERIM_DATA);
 1637              		.loc 1 318 4 is_stmt 0 view .LVU454
 1638 04fe F7E7     		b	.L124
 1639              	.LVL155:
 1640              	.L98:
 326:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].torqueMeasurementFactor;
 1641              		.loc 1 326 3 is_stmt 1 view .LVU455
 327:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1642              		.loc 1 327 4 view .LVU456
 327:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1643              		.loc 1 327 31 is_stmt 0 view .LVU457
 1644 0500 074B     		ldr	r3, .L128+4
 1645 0502 1B89     		ldrh	r3, [r3, #8]
 1646 0504 C5E7     		b	.L122
 1647              	.L97:
 334:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].initMode;
 1648              		.loc 1 334 3 is_stmt 1 view .LVU458
 335:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1649              		.loc 1 335 4 view .LVU459
 335:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1650              		.loc 1 335 31 is_stmt 0 view .LVU460
 1651 0506 064B     		ldr	r3, .L128+4
 1652 0508 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1653 050a C2E7     		b	.L122
 1654              	.L96:
 342:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].initState;
 1655              		.loc 1 342 3 is_stmt 1 view .LVU461
 343:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1656              		.loc 1 343 4 view .LVU462
 343:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1657              		.loc 1 343 31 is_stmt 0 view .LVU463
 1658 050c 044B     		ldr	r3, .L128+4
 1659 050e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1660 0510 BFE7     		b	.L122
 1661              	.L94:
 350:boards/TMC4671_eval.c **** 			*value = motorConfig[motor].actualInitWaitTime;
 1662              		.loc 1 350 3 is_stmt 1 view .LVU464
 351:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1663              		.loc 1 351 4 view .LVU465
 351:boards/TMC4671_eval.c **** 		} else if(readWrite == WRITE) {
 1664              		.loc 1 351 31 is_stmt 0 view .LVU466
 1665 0512 034B     		ldr	r3, .L128+4
 1666 0514 9B88     		ldrh	r3, [r3, #4]
 1667 0516 BCE7     		b	.L122
 1668              	.LVL156:
 1669              	.L118:
 157:boards/TMC4671_eval.c **** 
 1670              		.loc 1 157 10 view .LVU467
 1671 0518 0820     		movs	r0, #8
 1672              	.LVL157:
 157:boards/TMC4671_eval.c **** 
 1673              		.loc 1 157 10 view .LVU468
 1674 051a AEE7     		b	.L89
 1675              	.L129:
 1676              		.align	2
 1677              	.L128:
 1678 051c 00000000 		.word	rampGenerator
 1679 0520 00000000 		.word	motorConfig
 1680              	.LBE49:
 1681              	.LBE51:
 1682              		.cfi_endproc
 1683              	.LFE14:
 1685              		.align	1
 1686              		.global	tmc4671_readwriteByte
 1687              		.syntax unified
 1688              		.thumb
 1689              		.thumb_func
 1690              		.fpu softvfp
 1692              	tmc4671_readwriteByte:
 1693              	.LVL158:
 1694              	.LFB1:
  39:boards/TMC4671_eval.c **** 	if (motor == DEFAULT_MOTOR)
 1695              		.loc 1 39 1 is_stmt 1 view -0
 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 0
 1698              		@ frame_needed = 0, uses_anonymous_args = 0
 1699              		@ link register save eliminated.
  40:boards/TMC4671_eval.c **** 		return TMC4671_SPIChannel->readWrite(data, lastTransfer);
 1700              		.loc 1 40 2 view .LVU470
  39:boards/TMC4671_eval.c **** 	if (motor == DEFAULT_MOTOR)
 1701              		.loc 1 39 1 is_stmt 0 view .LVU471
 1702 0524 0346     		mov	r3, r0
 1703 0526 0846     		mov	r0, r1
 1704              	.LVL159:
  39:boards/TMC4671_eval.c **** 	if (motor == DEFAULT_MOTOR)
 1705              		.loc 1 39 1 view .LVU472
 1706 0528 1146     		mov	r1, r2
 1707              	.LVL160:
  40:boards/TMC4671_eval.c **** 		return TMC4671_SPIChannel->readWrite(data, lastTransfer);
 1708              		.loc 1 40 5 view .LVU473
 1709 052a 1BB9     		cbnz	r3, .L131
  41:boards/TMC4671_eval.c **** 	else
 1710              		.loc 1 41 3 is_stmt 1 view .LVU474
  41:boards/TMC4671_eval.c **** 	else
 1711              		.loc 1 41 28 is_stmt 0 view .LVU475
 1712 052c 024B     		ldr	r3, .L132
 1713 052e 9B68     		ldr	r3, [r3, #8]
  41:boards/TMC4671_eval.c **** 	else
 1714              		.loc 1 41 10 view .LVU476
 1715 0530 9B68     		ldr	r3, [r3, #8]
 1716 0532 1847     		bx	r3
 1717              	.LVL161:
 1718              	.L131:
  44:boards/TMC4671_eval.c **** // <= SPI wrapper
 1719              		.loc 1 44 1 view .LVU477
 1720 0534 0020     		movs	r0, #0
 1721 0536 7047     		bx	lr
 1722              	.L133:
 1723              		.align	2
 1724              	.L132:
 1725 0538 00000000 		.word	.LANCHOR0
 1726              		.cfi_endproc
 1727              	.LFE1:
 1729              		.align	1
 1730              		.global	TMC4671_init
 1731              		.syntax unified
 1732              		.thumb
 1733              		.thumb_func
 1734              		.fpu softvfp
 1736              	TMC4671_init:
 1737              	.LFB21:
 535:boards/TMC4671_eval.c **** 
 536:boards/TMC4671_eval.c **** void TMC4671_init(void)
 537:boards/TMC4671_eval.c **** {
 1738              		.loc 1 537 1 is_stmt 1 view -0
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 0
 1741              		@ frame_needed = 0, uses_anonymous_args = 0
 538:boards/TMC4671_eval.c **** 	// configure ENABLE-PIN for TMC4671
 539:boards/TMC4671_eval.c **** 	PIN_DRV_ENN = &HAL.IOs->pins->DIO0;
 1742              		.loc 1 539 2 view .LVU479
 537:boards/TMC4671_eval.c **** 	// configure ENABLE-PIN for TMC4671
 1743              		.loc 1 537 1 is_stmt 0 view .LVU480
 1744 053c 70B5     		push	{r4, r5, r6, lr}
 1745              	.LCFI14:
 1746              		.cfi_def_cfa_offset 16
 1747              		.cfi_offset 4, -16
 1748              		.cfi_offset 5, -12
 1749              		.cfi_offset 6, -8
 1750              		.cfi_offset 14, -4
 1751              		.loc 1 539 20 view .LVU481
 1752 053e 444E     		ldr	r6, .L135
 1753              		.loc 1 539 14 view .LVU482
 1754 0540 444D     		ldr	r5, .L135+4
 1755              		.loc 1 539 20 view .LVU483
 1756 0542 F468     		ldr	r4, [r6, #12]
 1757              		.loc 1 539 16 view .LVU484
 1758 0544 6068     		ldr	r0, [r4, #4]
 540:boards/TMC4671_eval.c **** 	HAL.IOs->config->toOutput(PIN_DRV_ENN);
 1759              		.loc 1 540 17 view .LVU485
 1760 0546 2368     		ldr	r3, [r4]
 539:boards/TMC4671_eval.c **** 	HAL.IOs->config->toOutput(PIN_DRV_ENN);
 1761              		.loc 1 539 16 view .LVU486
 1762 0548 6830     		adds	r0, r0, #104
 1763              		.loc 1 540 2 view .LVU487
 1764 054a DB68     		ldr	r3, [r3, #12]
 539:boards/TMC4671_eval.c **** 	HAL.IOs->config->toOutput(PIN_DRV_ENN);
 1765              		.loc 1 539 14 view .LVU488
 1766 054c 2860     		str	r0, [r5]
 1767              		.loc 1 540 2 is_stmt 1 view .LVU489
 1768 054e 9847     		blx	r3
 1769              	.LVL162:
 541:boards/TMC4671_eval.c **** 	enableDriver(DRIVER_ENABLE);
 1770              		.loc 1 541 2 view .LVU490
 1771 0550 0120     		movs	r0, #1
 1772 0552 FFF77BFD 		bl	enableDriver
 1773              	.LVL163:
 542:boards/TMC4671_eval.c **** 
 543:boards/TMC4671_eval.c **** 	TMC4671_SPIChannel = &HAL.SPI->ch1;
 1774              		.loc 1 543 2 view .LVU491
 544:boards/TMC4671_eval.c **** 	TMC4671_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 1775              		.loc 1 544 28 is_stmt 0 view .LVU492
 1776 0556 6368     		ldr	r3, [r4, #4]
 543:boards/TMC4671_eval.c **** 	TMC4671_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 1777              		.loc 1 543 27 view .LVU493
 1778 0558 3269     		ldr	r2, [r6, #16]
 543:boards/TMC4671_eval.c **** 	TMC4671_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 1779              		.loc 1 543 21 view .LVU494
 1780 055a AA60     		str	r2, [r5, #8]
 1781              		.loc 1 544 2 is_stmt 1 view .LVU495
 1782              		.loc 1 544 28 is_stmt 0 view .LVU496
 1783 055c 03F53273 		add	r3, r3, #712
 1784              		.loc 1 544 26 view .LVU497
 1785 0560 5360     		str	r3, [r2, #4]
 545:boards/TMC4671_eval.c **** 
 546:boards/TMC4671_eval.c **** 	TMC4671_config = Evalboards.ch1.config;
 1786              		.loc 1 546 2 is_stmt 1 view .LVU498
 1787              		.loc 1 546 33 is_stmt 0 view .LVU499
 1788 0562 3D4B     		ldr	r3, .L135+8
 547:boards/TMC4671_eval.c **** 
 548:boards/TMC4671_eval.c **** 	// connect evalboard functions
 549:boards/TMC4671_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 1789              		.loc 1 549 38 view .LVU500
 1790 0564 3D49     		ldr	r1, .L135+12
 546:boards/TMC4671_eval.c **** 
 1791              		.loc 1 546 33 view .LVU501
 1792 0566 9A69     		ldr	r2, [r3, #24]
 1793              		.loc 1 549 2 is_stmt 1 view .LVU502
 550:boards/TMC4671_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 551:boards/TMC4671_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 552:boards/TMC4671_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 553:boards/TMC4671_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 554:boards/TMC4671_eval.c **** 	Evalboards.ch1.right                = right;
 555:boards/TMC4671_eval.c **** 	Evalboards.ch1.left                 = left;
 556:boards/TMC4671_eval.c **** 	Evalboards.ch1.stop                 = stop;
 557:boards/TMC4671_eval.c **** 	Evalboards.ch1.getMeasuredSpeed     = getMeasuredSpeed;
 558:boards/TMC4671_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 559:boards/TMC4671_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 560:boards/TMC4671_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 561:boards/TMC4671_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 562:boards/TMC4671_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 563:boards/TMC4671_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 564:boards/TMC4671_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 565:boards/TMC4671_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 566:boards/TMC4671_eval.c **** 	Evalboards.ch1.enableDriver         = enableDriver;
 567:boards/TMC4671_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 568:boards/TMC4671_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC4671_MOTORS;
 569:boards/TMC4671_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 570:boards/TMC4671_eval.c **** 	Evalboards.ch1.VMMin                = 70;
 571:boards/TMC4671_eval.c **** 	Evalboards.ch1.VMMax                = 650;
 572:boards/TMC4671_eval.c **** 
 573:boards/TMC4671_eval.c **** 	// init motor config
 574:boards/TMC4671_eval.c **** 	int32_t motor;
 575:boards/TMC4671_eval.c **** 	for(motor = 0; motor < TMC4671_MOTORS; motor++)
 576:boards/TMC4671_eval.c **** 	{
 577:boards/TMC4671_eval.c **** 		motorConfig[motor].initWaitTime             = 1000;
 578:boards/TMC4671_eval.c **** 		motorConfig[motor].startVoltage             = 6000;
 579:boards/TMC4671_eval.c **** 		motorConfig[motor].initMode                 = 0;
 580:boards/TMC4671_eval.c **** 		motorConfig[motor].torqueMeasurementFactor  = 256;
 581:boards/TMC4671_eval.c **** 		motorConfig[motor].actualVelocityPT1		= 0;
 582:boards/TMC4671_eval.c **** 		motorConfig[motor].akkuActualVelocity       = 0;
 583:boards/TMC4671_eval.c **** 		motorConfig[motor].actualTorquePT1			= 0;
 584:boards/TMC4671_eval.c **** 		motorConfig[motor].akkuActualTorque         = 0;
 585:boards/TMC4671_eval.c **** 	}
 586:boards/TMC4671_eval.c **** 
 587:boards/TMC4671_eval.c **** 	// set default polarity for evaluation board's power stage on init
 588:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PWM_POLARITIES, 0x0);
 589:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PWM_SV_CHOP, 0x0);
 590:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PWM_BBM_H_BBM_L, 0x00001919);
 591:boards/TMC4671_eval.c **** 
 592:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_dsADC_MCLK_B, 0x0);
 593:boards/TMC4671_eval.c **** 
 594:boards/TMC4671_eval.c **** 	// set default acceleration and max velocity
 595:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PID_ACCELERATION_LIMIT, 2000);
 596:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PID_VELOCITY_LIMIT, 4000);
 597:boards/TMC4671_eval.c **** 
 598:boards/TMC4671_eval.c **** #ifdef USE_LINEAR_RAMP
 599:boards/TMC4671_eval.c **** 	// init ramp generator
 600:boards/TMC4671_eval.c **** 	for (motor = 0; motor < TMC4671_MOTORS; motor++)
 601:boards/TMC4671_eval.c **** 	{
 602:boards/TMC4671_eval.c **** 		tmc_linearRamp_init(&rampGenerator[motor]);
 1794              		.loc 1 602 3 is_stmt 0 view .LVU503
 1795 0568 3D4D     		ldr	r5, .L135+16
 549:boards/TMC4671_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 1796              		.loc 1 549 38 view .LVU504
 1797 056a C2F80412 		str	r1, [r2, #516]
 550:boards/TMC4671_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 1798              		.loc 1 550 2 is_stmt 1 view .LVU505
 550:boards/TMC4671_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 1799              		.loc 1 550 38 is_stmt 0 view .LVU506
 1800 056e 3D49     		ldr	r1, .L135+20
 1801 0570 C2F80812 		str	r1, [r2, #520]
 551:boards/TMC4671_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 1802              		.loc 1 551 2 is_stmt 1 view .LVU507
 552:boards/TMC4671_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 1803              		.loc 1 552 2 view .LVU508
 551:boards/TMC4671_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 1804              		.loc 1 551 38 is_stmt 0 view .LVU509
 1805 0574 0121     		movs	r1, #1
 1806 0576 1180     		strh	r1, [r2]	@ movhi
 553:boards/TMC4671_eval.c **** 	Evalboards.ch1.right                = right;
 1807              		.loc 1 553 2 is_stmt 1 view .LVU510
 553:boards/TMC4671_eval.c **** 	Evalboards.ch1.right                = right;
 1808              		.loc 1 553 38 is_stmt 0 view .LVU511
 1809 0578 3B4A     		ldr	r2, .L135+24
 1810 057a 5A62     		str	r2, [r3, #36]
 554:boards/TMC4671_eval.c **** 	Evalboards.ch1.left                 = left;
 1811              		.loc 1 554 2 is_stmt 1 view .LVU512
 554:boards/TMC4671_eval.c **** 	Evalboards.ch1.left                 = left;
 1812              		.loc 1 554 38 is_stmt 0 view .LVU513
 1813 057c 3B4A     		ldr	r2, .L135+28
 1814 057e 1A62     		str	r2, [r3, #32]
 555:boards/TMC4671_eval.c **** 	Evalboards.ch1.stop                 = stop;
 1815              		.loc 1 555 2 is_stmt 1 view .LVU514
 555:boards/TMC4671_eval.c **** 	Evalboards.ch1.stop                 = stop;
 1816              		.loc 1 555 38 is_stmt 0 view .LVU515
 1817 0580 3B4A     		ldr	r2, .L135+32
 1818 0582 DA61     		str	r2, [r3, #28]
 556:boards/TMC4671_eval.c **** 	Evalboards.ch1.getMeasuredSpeed     = getMeasuredSpeed;
 1819              		.loc 1 556 2 is_stmt 1 view .LVU516
 556:boards/TMC4671_eval.c **** 	Evalboards.ch1.getMeasuredSpeed     = getMeasuredSpeed;
 1820              		.loc 1 556 38 is_stmt 0 view .LVU517
 1821 0584 3B4A     		ldr	r2, .L135+36
 1822 0586 9A62     		str	r2, [r3, #40]
 557:boards/TMC4671_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 1823              		.loc 1 557 2 is_stmt 1 view .LVU518
 557:boards/TMC4671_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 1824              		.loc 1 557 38 is_stmt 0 view .LVU519
 1825 0588 3B4A     		ldr	r2, .L135+40
 1826 058a 1A65     		str	r2, [r3, #80]
 558:boards/TMC4671_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 1827              		.loc 1 558 2 is_stmt 1 view .LVU520
 558:boards/TMC4671_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 1828              		.loc 1 558 38 is_stmt 0 view .LVU521
 1829 058c 3B4A     		ldr	r2, .L135+44
 1830 058e DA63     		str	r2, [r3, #60]
 559:boards/TMC4671_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 1831              		.loc 1 559 2 is_stmt 1 view .LVU522
 559:boards/TMC4671_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 1832              		.loc 1 559 38 is_stmt 0 view .LVU523
 1833 0590 3B4A     		ldr	r2, .L135+48
 1834 0592 9A63     		str	r2, [r3, #56]
 560:boards/TMC4671_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 1835              		.loc 1 560 2 is_stmt 1 view .LVU524
 560:boards/TMC4671_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 1836              		.loc 1 560 38 is_stmt 0 view .LVU525
 1837 0594 3B4A     		ldr	r2, .L135+52
 1838 0596 DA62     		str	r2, [r3, #44]
 561:boards/TMC4671_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 1839              		.loc 1 561 2 is_stmt 1 view .LVU526
 561:boards/TMC4671_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 1840              		.loc 1 561 38 is_stmt 0 view .LVU527
 1841 0598 3B4A     		ldr	r2, .L135+56
 1842 059a 1A63     		str	r2, [r3, #48]
 562:boards/TMC4671_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 1843              		.loc 1 562 2 is_stmt 1 view .LVU528
 562:boards/TMC4671_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 1844              		.loc 1 562 38 is_stmt 0 view .LVU529
 1845 059c 3B4A     		ldr	r2, .L135+60
 1846 059e DA64     		str	r2, [r3, #76]
 563:boards/TMC4671_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 1847              		.loc 1 563 2 is_stmt 1 view .LVU530
 563:boards/TMC4671_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 1848              		.loc 1 563 38 is_stmt 0 view .LVU531
 1849 05a0 3B4A     		ldr	r2, .L135+64
 1850 05a2 9A64     		str	r2, [r3, #72]
 564:boards/TMC4671_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 1851              		.loc 1 564 2 is_stmt 1 view .LVU532
 564:boards/TMC4671_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 1852              		.loc 1 564 38 is_stmt 0 view .LVU533
 1853 05a4 3B4A     		ldr	r2, .L135+68
 1854 05a6 9A65     		str	r2, [r3, #88]
 565:boards/TMC4671_eval.c **** 	Evalboards.ch1.enableDriver         = enableDriver;
 1855              		.loc 1 565 2 is_stmt 1 view .LVU534
 565:boards/TMC4671_eval.c **** 	Evalboards.ch1.enableDriver         = enableDriver;
 1856              		.loc 1 565 38 is_stmt 0 view .LVU535
 1857 05a8 3B4A     		ldr	r2, .L135+72
 1858 05aa 5A65     		str	r2, [r3, #84]
 566:boards/TMC4671_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 1859              		.loc 1 566 2 is_stmt 1 view .LVU536
 566:boards/TMC4671_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 1860              		.loc 1 566 38 is_stmt 0 view .LVU537
 1861 05ac 3B4A     		ldr	r2, .L135+76
 1862 05ae 5A66     		str	r2, [r3, #100]
 567:boards/TMC4671_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC4671_MOTORS;
 1863              		.loc 1 567 2 is_stmt 1 view .LVU538
 567:boards/TMC4671_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC4671_MOTORS;
 1864              		.loc 1 567 38 is_stmt 0 view .LVU539
 1865 05b0 3B4A     		ldr	r2, .L135+80
 1866 05b2 1A66     		str	r2, [r3, #96]
 568:boards/TMC4671_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 1867              		.loc 1 568 2 is_stmt 1 view .LVU540
 569:boards/TMC4671_eval.c **** 	Evalboards.ch1.VMMin                = 70;
 1868              		.loc 1 569 38 is_stmt 0 view .LVU541
 1869 05b4 3B4A     		ldr	r2, .L135+84
 568:boards/TMC4671_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 1870              		.loc 1 568 38 view .LVU542
 1871 05b6 1975     		strb	r1, [r3, #20]
 569:boards/TMC4671_eval.c **** 	Evalboards.ch1.VMMin                = 70;
 1872              		.loc 1 569 2 is_stmt 1 view .LVU543
 569:boards/TMC4671_eval.c **** 	Evalboards.ch1.VMMin                = 70;
 1873              		.loc 1 569 38 is_stmt 0 view .LVU544
 1874 05b8 DA65     		str	r2, [r3, #92]
 570:boards/TMC4671_eval.c **** 	Evalboards.ch1.VMMax                = 650;
 1875              		.loc 1 570 2 is_stmt 1 view .LVU545
 571:boards/TMC4671_eval.c **** 
 1876              		.loc 1 571 38 is_stmt 0 view .LVU546
 1877 05ba 4621     		movs	r1, #70
 1878 05bc 40F28A22 		movw	r2, #650
 1879 05c0 C3E90321 		strd	r2, r1, [r3, #12]
 574:boards/TMC4671_eval.c **** 	for(motor = 0; motor < TMC4671_MOTORS; motor++)
 1880              		.loc 1 574 2 is_stmt 1 view .LVU547
 575:boards/TMC4671_eval.c **** 	{
 1881              		.loc 1 575 2 view .LVU548
 1882              	.LVL164:
 575:boards/TMC4671_eval.c **** 	{
 1883              		.loc 1 575 17 view .LVU549
 577:boards/TMC4671_eval.c **** 		motorConfig[motor].startVoltage             = 6000;
 1884              		.loc 1 577 3 view .LVU550
 578:boards/TMC4671_eval.c **** 		motorConfig[motor].initMode                 = 0;
 1885              		.loc 1 578 3 view .LVU551
 578:boards/TMC4671_eval.c **** 		motorConfig[motor].initMode                 = 0;
 1886              		.loc 1 578 47 is_stmt 0 view .LVU552
 1887 05c4 384B     		ldr	r3, .L135+88
 1888 05c6 394A     		ldr	r2, .L135+92
 1889 05c8 1A60     		str	r2, [r3]
 579:boards/TMC4671_eval.c **** 		motorConfig[motor].torqueMeasurementFactor  = 256;
 1890              		.loc 1 579 3 is_stmt 1 view .LVU553
 579:boards/TMC4671_eval.c **** 		motorConfig[motor].torqueMeasurementFactor  = 256;
 1891              		.loc 1 579 47 is_stmt 0 view .LVU554
 1892 05ca 0024     		movs	r4, #0
 582:boards/TMC4671_eval.c **** 		motorConfig[motor].actualTorquePT1			= 0;
 1893              		.loc 1 582 47 view .LVU555
 1894 05cc 0020     		movs	r0, #0
 1895 05ce 0021     		movs	r1, #0
 580:boards/TMC4671_eval.c **** 		motorConfig[motor].actualVelocityPT1		= 0;
 1896              		.loc 1 580 47 view .LVU556
 1897 05d0 4FF48072 		mov	r2, #256
 582:boards/TMC4671_eval.c **** 		motorConfig[motor].actualTorquePT1			= 0;
 1898              		.loc 1 582 47 view .LVU557
 1899 05d4 C3E90401 		strd	r0, [r3, #16]
 580:boards/TMC4671_eval.c **** 		motorConfig[motor].actualVelocityPT1		= 0;
 1900              		.loc 1 580 47 view .LVU558
 1901 05d8 1A81     		strh	r2, [r3, #8]	@ movhi
 579:boards/TMC4671_eval.c **** 		motorConfig[motor].torqueMeasurementFactor  = 256;
 1902              		.loc 1 579 47 view .LVU559
 1903 05da DC71     		strb	r4, [r3, #7]
 580:boards/TMC4671_eval.c **** 		motorConfig[motor].actualVelocityPT1		= 0;
 1904              		.loc 1 580 3 is_stmt 1 view .LVU560
 581:boards/TMC4671_eval.c **** 		motorConfig[motor].akkuActualVelocity       = 0;
 1905              		.loc 1 581 3 view .LVU561
 581:boards/TMC4671_eval.c **** 		motorConfig[motor].akkuActualVelocity       = 0;
 1906              		.loc 1 581 41 is_stmt 0 view .LVU562
 1907 05dc DC60     		str	r4, [r3, #12]
 582:boards/TMC4671_eval.c **** 		motorConfig[motor].actualTorquePT1			= 0;
 1908              		.loc 1 582 3 is_stmt 1 view .LVU563
 583:boards/TMC4671_eval.c **** 		motorConfig[motor].akkuActualTorque         = 0;
 1909              		.loc 1 583 3 view .LVU564
 588:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PWM_SV_CHOP, 0x0);
 1910              		.loc 1 588 2 is_stmt 0 view .LVU565
 1911 05de 2246     		mov	r2, r4
 583:boards/TMC4671_eval.c **** 		motorConfig[motor].akkuActualTorque         = 0;
 1912              		.loc 1 583 40 view .LVU566
 1913 05e0 1C83     		strh	r4, [r3, #24]	@ movhi
 584:boards/TMC4671_eval.c **** 	}
 1914              		.loc 1 584 3 is_stmt 1 view .LVU567
 584:boards/TMC4671_eval.c **** 	}
 1915              		.loc 1 584 47 is_stmt 0 view .LVU568
 1916 05e2 C3E90801 		strd	r0, [r3, #32]
 575:boards/TMC4671_eval.c **** 	{
 1917              		.loc 1 575 41 is_stmt 1 view .LVU569
 1918              	.LVL165:
 575:boards/TMC4671_eval.c **** 	{
 1919              		.loc 1 575 17 view .LVU570
 588:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PWM_SV_CHOP, 0x0);
 1920              		.loc 1 588 2 view .LVU571
 1921 05e6 1721     		movs	r1, #23
 1922 05e8 2046     		mov	r0, r4
 1923 05ea FFF7FEFF 		bl	tmc4671_writeInt
 1924              	.LVL166:
 589:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PWM_BBM_H_BBM_L, 0x00001919);
 1925              		.loc 1 589 2 view .LVU572
 1926 05ee 2246     		mov	r2, r4
 1927 05f0 1A21     		movs	r1, #26
 1928 05f2 2046     		mov	r0, r4
 1929 05f4 FFF7FEFF 		bl	tmc4671_writeInt
 1930              	.LVL167:
 590:boards/TMC4671_eval.c **** 
 1931              		.loc 1 590 2 view .LVU573
 1932 05f8 41F61912 		movw	r2, #6425
 1933 05fc 1921     		movs	r1, #25
 1934 05fe 2046     		mov	r0, r4
 1935 0600 FFF7FEFF 		bl	tmc4671_writeInt
 1936              	.LVL168:
 592:boards/TMC4671_eval.c **** 
 1937              		.loc 1 592 2 view .LVU574
 1938 0604 2246     		mov	r2, r4
 1939 0606 0621     		movs	r1, #6
 1940 0608 2046     		mov	r0, r4
 1941 060a FFF7FEFF 		bl	tmc4671_writeInt
 1942              	.LVL169:
 595:boards/TMC4671_eval.c **** 	tmc4671_writeInt(DEFAULT_MOTOR, TMC4671_PID_VELOCITY_LIMIT, 4000);
 1943              		.loc 1 595 2 view .LVU575
 1944 060e 4FF4FA62 		mov	r2, #2000
 1945 0612 5F21     		movs	r1, #95
 1946 0614 2046     		mov	r0, r4
 1947 0616 FFF7FEFF 		bl	tmc4671_writeInt
 1948              	.LVL170:
 596:boards/TMC4671_eval.c **** 
 1949              		.loc 1 596 2 view .LVU576
 1950 061a 4FF47A62 		mov	r2, #4000
 1951 061e 6021     		movs	r1, #96
 1952 0620 2046     		mov	r0, r4
 1953 0622 FFF7FEFF 		bl	tmc4671_writeInt
 1954              	.LVL171:
 600:boards/TMC4671_eval.c **** 	{
 1955              		.loc 1 600 2 view .LVU577
 600:boards/TMC4671_eval.c **** 	{
 1956              		.loc 1 600 18 view .LVU578
 1957              		.loc 1 602 3 view .LVU579
 1958 0626 2846     		mov	r0, r5
 1959 0628 FFF7FEFF 		bl	tmc_linearRamp_init
 1960              	.LVL172:
 603:boards/TMC4671_eval.c **** 		actualMotionMode[motor] = TMC4671_MOTION_MODE_STOPPED;
 1961              		.loc 1 603 3 view .LVU580
 1962              		.loc 1 603 27 is_stmt 0 view .LVU581
 1963 062c 204B     		ldr	r3, .L135+96
 1964 062e 1C70     		strb	r4, [r3]
 604:boards/TMC4671_eval.c **** 		lastRampTargetPosition[motor] = 0;
 1965              		.loc 1 604 3 is_stmt 1 view .LVU582
 1966              		.loc 1 604 33 is_stmt 0 view .LVU583
 1967 0630 204B     		ldr	r3, .L135+100
 1968 0632 1C60     		str	r4, [r3]
 605:boards/TMC4671_eval.c **** 		lastRampTargetVelocity[motor] = 0;
 1969              		.loc 1 605 3 is_stmt 1 view .LVU584
 1970              		.loc 1 605 33 is_stmt 0 view .LVU585
 1971 0634 204B     		ldr	r3, .L135+104
 606:boards/TMC4671_eval.c **** 
 607:boards/TMC4671_eval.c **** 		// update ramp generator default values
 608:boards/TMC4671_eval.c **** 		rampGenerator[motor].maxVelocity = (uint32_t)tmc4671_readInt(motor, TMC4671_PID_VELOCITY_LIMIT);
 1972              		.loc 1 608 48 view .LVU586
 1973 0636 6021     		movs	r1, #96
 1974 0638 2046     		mov	r0, r4
 605:boards/TMC4671_eval.c **** 		lastRampTargetVelocity[motor] = 0;
 1975              		.loc 1 605 33 view .LVU587
 1976 063a 1C60     		str	r4, [r3]
 1977              		.loc 1 608 3 is_stmt 1 view .LVU588
 1978              		.loc 1 608 48 is_stmt 0 view .LVU589
 1979 063c FFF7FEFF 		bl	tmc4671_readInt
 1980              	.LVL173:
 609:boards/TMC4671_eval.c **** 		rampGenerator[motor].acceleration = (uint32_t)tmc4671_readInt(motor, TMC4671_PID_ACCELERATION_LIM
 1981              		.loc 1 609 49 view .LVU590
 1982 0640 5F21     		movs	r1, #95
 608:boards/TMC4671_eval.c **** 		rampGenerator[motor].acceleration = (uint32_t)tmc4671_readInt(motor, TMC4671_PID_ACCELERATION_LIM
 1983              		.loc 1 608 36 view .LVU591
 1984 0642 2860     		str	r0, [r5]
 1985              		.loc 1 609 3 is_stmt 1 view .LVU592
 1986              		.loc 1 609 49 is_stmt 0 view .LVU593
 1987 0644 2046     		mov	r0, r4
 1988 0646 FFF7FEFF 		bl	tmc4671_readInt
 1989              	.LVL174:
 1990              		.loc 1 609 37 view .LVU594
 1991 064a 6861     		str	r0, [r5, #20]
 600:boards/TMC4671_eval.c **** 	{
 1992              		.loc 1 600 42 is_stmt 1 view .LVU595
 1993              	.LVL175:
 600:boards/TMC4671_eval.c **** 	{
 1994              		.loc 1 600 18 view .LVU596
 610:boards/TMC4671_eval.c **** 	}
 611:boards/TMC4671_eval.c **** #endif
 612:boards/TMC4671_eval.c **** }
 1995              		.loc 1 612 1 is_stmt 0 view .LVU597
 1996 064c 70BD     		pop	{r4, r5, r6, pc}
 1997              	.L136:
 1998 064e 00BF     		.align	2
 1999              	.L135:
 2000 0650 00000000 		.word	HAL
 2001 0654 00000000 		.word	.LANCHOR0
 2002 0658 00000000 		.word	Evalboards
 2003 065c 00000000 		.word	reset
 2004 0660 00000000 		.word	rampGenerator
 2005 0664 00000000 		.word	restore
 2006 0668 00000000 		.word	rotate
 2007 066c 00000000 		.word	right
 2008 0670 00000000 		.word	left
 2009 0674 00000000 		.word	stop
 2010 0678 00000000 		.word	getMeasuredSpeed
 2011 067c 00000000 		.word	GAP
 2012 0680 00000000 		.word	SAP
 2013 0684 00000000 		.word	moveTo
 2014 0688 00000000 		.word	moveBy
 2015 068c 00000000 		.word	writeRegister
 2016 0690 00000000 		.word	readRegister
 2017 0694 00000000 		.word	periodicJob
 2018 0698 00000000 		.word	userFunction
 2019 069c 00000000 		.word	enableDriver
 2020 06a0 00000000 		.word	checkErrors
 2021 06a4 00000000 		.word	deInit
 2022 06a8 00000000 		.word	motorConfig
 2023 06ac 7017E803 		.word	65542000
 2024 06b0 00000000 		.word	actualMotionMode
 2025 06b4 00000000 		.word	lastRampTargetPosition
 2026 06b8 00000000 		.word	lastRampTargetVelocity
 2027              		.cfi_endproc
 2028              	.LFE21:
 2030              		.comm	lastRampTargetVelocity,4,4
 2031              		.comm	lastRampTargetPosition,4,4
 2032              		.comm	actualMotionMode,1,1
 2033              		.comm	rampGenerator,40,4
 2034              		.comm	motorConfig,40,8
 2035              		.comm	TMCMotionController,532,4
 2036              		.comm	TMCDriver,532,4
 2037              		.comm	Evalboards,244,4
 2038              		.comm	VitalSignsMonitor,20,4
 2039              		.comm	hwid,1,1
 2040              		.comm	HAL,48,4
 2041              		.comm	UART,40,4
 2042              		.comm	Timer,16,4
 2043              		.comm	WLAN,36,4
 2044              		.comm	RS232,36,4
 2045              		.comm	LEDs,28,4
 2046              		.comm	USB,36,4
 2047              		.comm	uart0_interrupt,1,1
 2048              		.comm	ADCs,32,4
 2049              		.comm	SPI,44,4
 2050              		.comm	IOMap,2088,4
 2051              		.comm	IOs,52,4
 2052              		.comm	Cpu,8,4
 2053              		.bss
 2054              		.align	2
 2055              		.set	.LANCHOR0,. + 0
 2058              	PIN_DRV_ENN:
 2059 0000 00000000 		.space	4
 2062              	lastSystick.7744:
 2063 0004 00000000 		.space	4
 2066              	TMC4671_SPIChannel:
 2067 0008 00000000 		.space	4
 2070              	ADCValue:
 2071 000c 00000000 		.space	12
 2071      00000000 
 2071      00000000 
 2072              		.text
 2073              	.Letext0:
 2074              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 2075              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2076              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2077              		.file 5 "TMC-API/tmc/helpers/Types.h"
 2078              		.file 6 "TMC-API/tmc/helpers/Config.h"
 2079              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2080              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2081              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2082              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 2083              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 2084              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 2085              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 2086              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 2087              		.file 15 "./hal/IOs.h"
 2088              		.file 16 "./hal/IOMap.h"
 2089              		.file 17 "./hal/SPI.h"
 2090              		.file 18 "./hal/ADCs.h"
 2091              		.file 19 "./hal/RXTX.h"
 2092              		.file 20 "./hal/USB.h"
 2093              		.file 21 "./hal/LEDs.h"
 2094              		.file 22 "./hal/RS232.h"
 2095              		.file 23 "./hal/WLAN.h"
 2096              		.file 24 "./hal/Timer.h"
 2097              		.file 25 "./hal/UART.h"
 2098              		.file 26 "./hal/HAL.h"
 2099              		.file 27 "./tmc/VitalSignsMonitor.h"
 2100              		.file 28 "boards/Board.h"
 2101              		.file 29 "boards/TMCDriver.h"
 2102              		.file 30 "boards/TMCMotionController.h"
 2103              		.file 31 "TMC-API/tmc/ramp/LinearRamp.h"
 2104              		.file 32 "TMC-API/tmc/ic/TMC4671/TMC4671.h"
 2105              		.file 33 "TMC-API/tmc/helpers/Functions.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC4671_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:22     .text:00000000 userFunction
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:49     .text:00000004 checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:68     .text:0000000c $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:72     .text:00000010 $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:78     .text:00000010 writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:103    .text:00000016 reset
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:157    .text:0000003c restore
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:173    .text:0000003e readRegister
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:210    .text:0000004c enableDriver
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:286    .text:00000080 $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:292    .text:0000008c $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:298    .text:0000008c deInit
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:339    .text:000000a8 $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:344    .text:000000b0 $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:350    .text:000000b0 getMeasuredSpeed
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:407    .text:000000c6 periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:667    .text:000001c0 $d
                            *COM*:00000028 motorConfig
                            *COM*:00000004 lastRampTargetVelocity
                            *COM*:00000028 rampGenerator
                            *COM*:00000001 actualMotionMode
                            *COM*:00000004 lastRampTargetPosition
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:677    .text:000001dc $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:683    .text:000001dc moveBy
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:777    .text:00000220 $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:782    .text:00000228 $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:788    .text:00000228 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:872    .text:00000260 $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:877    .text:00000268 $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:883    .text:00000268 rotate
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:967    .text:000002a0 $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:972    .text:000002a8 $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:978    .text:000002a8 stop
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1001   .text:000002ac left
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1026   .text:000002b0 right
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1048   .text:000002b2 SAP
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1093   .text:000002d4 $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1103   .text:000002de $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1307   .text:0000038c $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1316   .text:0000039c $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1322   .text:0000039c GAP
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1381   .text:000003c8 $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1403   .text:00000420 $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1411   .text:0000042c $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1422   .text:00000454 $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1438   .text:00000466 $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1442   .text:0000046a $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1678   .text:0000051c $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1685   .text:00000524 $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1692   .text:00000524 tmc4671_readwriteByte
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1725   .text:00000538 $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1729   .text:0000053c $t
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:1736   .text:0000053c TMC4671_init
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:2000   .text:00000650 $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:2054   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:2058   .bss:00000000 PIN_DRV_ENN
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:2062   .bss:00000004 lastSystick.7744
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:2066   .bss:00000008 TMC4671_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\ccYdyytI.s:2070   .bss:0000000c ADCValue

UNDEFINED SYMBOLS
tmc4671_writeInt
tmc4671_readInt
tmc4671_getActualVelocity
tmc4671_periodicJob
tmc_linearRamp_computeRampVelocity
tmc_filterPT1
tmc4671_readRegister16BitValue
tmc_linearRamp_computeRampPosition
tmc4671_switchToMotionMode
tmc4671_setRelativeTargetPosition
tmc4671_setAbsolutTargetPosition
tmc4671_setTargetVelocity
tmc4671_setTargetTorque_raw
tmc4671_startEncoderInitialization
tmc4671_writeRegister16BitValue
tmc4671_setTargetTorque_mA
tmc4671_getActualPosition
tmc4671_getTargetTorque_raw
tmc4671_getTargetTorque_mA
tmc_linearRamp_init
