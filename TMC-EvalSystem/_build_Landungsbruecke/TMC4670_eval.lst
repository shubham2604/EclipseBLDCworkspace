   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC4670_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	userFunction:
  23              	.LVL0:
  24              	.LFB15:
  25              		.file 1 "boards/TMC4670_eval.c"
   1:boards/TMC4670_eval.c **** #include "Board.h"
   2:boards/TMC4670_eval.c **** #include "tmc/ic/TMC4670/TMC4670.h"
   3:boards/TMC4670_eval.c **** #include "hal/SPI.h"
   4:boards/TMC4670_eval.c **** 
   5:boards/TMC4670_eval.c **** #define DEFAULT_MOTOR 0
   6:boards/TMC4670_eval.c **** 
   7:boards/TMC4670_eval.c **** static IOPinTypeDef *PIN_DRV_ENN;
   8:boards/TMC4670_eval.c **** static ConfigurationTypeDef *TMC4670_config;
   9:boards/TMC4670_eval.c **** static SPIChannelTypeDef *TMC4670_SPIChannel;
  10:boards/TMC4670_eval.c **** 
  11:boards/TMC4670_eval.c **** typedef struct
  12:boards/TMC4670_eval.c **** {
  13:boards/TMC4670_eval.c **** 	uint32_t  startVoltage;
  14:boards/TMC4670_eval.c **** 	uint16_t  initWaitTime;
  15:boards/TMC4670_eval.c **** 	uint16_t  actualInitWaitTime;
  16:boards/TMC4670_eval.c **** 	uint8_t   initState;
  17:boards/TMC4670_eval.c **** 	uint8_t   initMode;
  18:boards/TMC4670_eval.c **** 	uint16_t  torqueMeasurementFactor; // u8.u8
  19:boards/TMC4670_eval.c **** 	uint8_t   motionMode;
  20:boards/TMC4670_eval.c **** } TMinimalMotorConfig;
  21:boards/TMC4670_eval.c **** 
  22:boards/TMC4670_eval.c **** TMinimalMotorConfig motorConfig[TMC4670_MOTORS];
  23:boards/TMC4670_eval.c **** 
  24:boards/TMC4670_eval.c **** // => SPI wrapper
  25:boards/TMC4670_eval.c **** uint8_t tmc4670_readwriteByte(uint8_t motor, uint8_t data, uint8_t lastTransfer)
  26:boards/TMC4670_eval.c **** {
  27:boards/TMC4670_eval.c **** 	if (motor == DEFAULT_MOTOR)
  28:boards/TMC4670_eval.c **** 		return TMC4670_SPIChannel->readWrite(data, lastTransfer);
  29:boards/TMC4670_eval.c **** 	else
  30:boards/TMC4670_eval.c **** 		return 0;
  31:boards/TMC4670_eval.c **** }
  32:boards/TMC4670_eval.c **** // <= SPI wrapper
  33:boards/TMC4670_eval.c **** 
  34:boards/TMC4670_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
  35:boards/TMC4670_eval.c **** {
  36:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
  37:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
  38:boards/TMC4670_eval.c **** 
  39:boards/TMC4670_eval.c **** 	tmc4670_setTargetVelocity(motor, velocity);
  40:boards/TMC4670_eval.c **** 
  41:boards/TMC4670_eval.c **** 	return TMC_ERROR_NONE;
  42:boards/TMC4670_eval.c **** }
  43:boards/TMC4670_eval.c **** 
  44:boards/TMC4670_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
  45:boards/TMC4670_eval.c **** {
  46:boards/TMC4670_eval.c **** 	return rotate(motor, velocity);
  47:boards/TMC4670_eval.c **** }
  48:boards/TMC4670_eval.c **** 
  49:boards/TMC4670_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
  50:boards/TMC4670_eval.c **** {
  51:boards/TMC4670_eval.c **** 	return rotate(motor, -velocity);
  52:boards/TMC4670_eval.c **** }
  53:boards/TMC4670_eval.c **** 
  54:boards/TMC4670_eval.c **** static uint32_t stop(uint8_t motor)
  55:boards/TMC4670_eval.c **** {
  56:boards/TMC4670_eval.c **** 	return rotate(motor, 0);
  57:boards/TMC4670_eval.c **** }
  58:boards/TMC4670_eval.c **** 
  59:boards/TMC4670_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
  60:boards/TMC4670_eval.c **** {
  61:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
  62:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
  63:boards/TMC4670_eval.c **** 
  64:boards/TMC4670_eval.c **** 	tmc4670_setAbsolutTargetPosition(motor, position);
  65:boards/TMC4670_eval.c **** 
  66:boards/TMC4670_eval.c **** 	return TMC_ERROR_NONE;
  67:boards/TMC4670_eval.c **** }
  68:boards/TMC4670_eval.c **** 
  69:boards/TMC4670_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
  70:boards/TMC4670_eval.c **** {
  71:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
  72:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
  73:boards/TMC4670_eval.c **** 
  74:boards/TMC4670_eval.c **** 	tmc4670_setRelativeTargetPosition(motor, *ticks);
  75:boards/TMC4670_eval.c **** 
  76:boards/TMC4670_eval.c **** 	return TMC_ERROR_NONE;
  77:boards/TMC4670_eval.c **** }
  78:boards/TMC4670_eval.c **** 
  79:boards/TMC4670_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
  80:boards/TMC4670_eval.c **** {
  81:boards/TMC4670_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
  82:boards/TMC4670_eval.c **** 
  83:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
  84:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
  85:boards/TMC4670_eval.c **** 
  86:boards/TMC4670_eval.c **** 	switch(type)
  87:boards/TMC4670_eval.c **** 	{
  88:boards/TMC4670_eval.c **** 	case 4:
  89:boards/TMC4670_eval.c **** 		// Maximum speed
  90:boards/TMC4670_eval.c **** 		if(readWrite == READ)
  91:boards/TMC4670_eval.c **** 			*value = (uint32_t)tmc4670_readInt(motor, TMC4670_PID_VELOCITY_LIMIT);
  92:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
  93:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_VELOCITY_LIMIT, *value);
  94:boards/TMC4670_eval.c **** 		break;
  95:boards/TMC4670_eval.c **** 	// ADC offsets
  96:boards/TMC4670_eval.c **** 	case 50:
  97:boards/TMC4670_eval.c **** 		// ADC_I1_OFFSET
  98:boards/TMC4670_eval.c **** 		if(readWrite == READ)
  99:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_0_TO_1
 100:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 101:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_0_TO_15, *value);
 102:boards/TMC4670_eval.c **** 		break;
 103:boards/TMC4670_eval.c **** 	case 51:
 104:boards/TMC4670_eval.c **** 		// ADC_I0_OFFSET
 105:boards/TMC4670_eval.c **** 		if(readWrite == READ)
 106:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_0_TO_1
 107:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 108:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_0_TO_15, *value);
 109:boards/TMC4670_eval.c **** 		break;
 110:boards/TMC4670_eval.c **** 		// ADC scaler values
 111:boards/TMC4670_eval.c **** 	case 53:
 112:boards/TMC4670_eval.c **** 		// ADC_I1_SCALE
 113:boards/TMC4670_eval.c **** 		if(readWrite == READ)
 114:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_16_TO_
 115:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 116:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_16_TO_31, *value);
 117:boards/TMC4670_eval.c **** 		break;
 118:boards/TMC4670_eval.c **** 	case 54:
 119:boards/TMC4670_eval.c **** 		// ADC_I0_SCALE
 120:boards/TMC4670_eval.c **** 		if(readWrite == READ)
 121:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_16_TO_
 122:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 123:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_16_TO_31, *value);
 124:boards/TMC4670_eval.c **** 		break;
 125:boards/TMC4670_eval.c **** 	case 100:
 126:boards/TMC4670_eval.c **** 		// ADC_I_U_RAW
 127:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 128:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 1);
 129:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 130:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 131:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 132:boards/TMC4670_eval.c **** 		}
 133:boards/TMC4670_eval.c **** 		break;
 134:boards/TMC4670_eval.c **** 	case 101:
 135:boards/TMC4670_eval.c **** 		// ADC_I_V_RAW
 136:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 137:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 1);
 138:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 139:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 140:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 141:boards/TMC4670_eval.c **** 		}
 142:boards/TMC4670_eval.c **** 		break;
 143:boards/TMC4670_eval.c **** 	case 102:
 144:boards/TMC4670_eval.c **** 		// ADC_IB_RAW
 145:boards/TMC4670_eval.c **** 		// ADC_I_B_RAW
 146:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 147:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 2);
 148:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 149:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 150:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 151:boards/TMC4670_eval.c **** 		}
 152:boards/TMC4670_eval.c **** 		break;
 153:boards/TMC4670_eval.c **** 	case 103:
 154:boards/TMC4670_eval.c **** 		// ADC_I_UX_RAW
 155:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 156:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 0);
 157:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 158:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 159:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 160:boards/TMC4670_eval.c **** 		}
 161:boards/TMC4670_eval.c **** 		break;
 162:boards/TMC4670_eval.c **** 	case 104:
 163:boards/TMC4670_eval.c **** 		// ADC_I_WY_RAW
 164:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 165:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 0);
 166:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 167:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 168:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 169:boards/TMC4670_eval.c **** 		}
 170:boards/TMC4670_eval.c **** 		break;
 171:boards/TMC4670_eval.c **** 	case 105:
 172:boards/TMC4670_eval.c **** 		// ADC_VM_RAW
 173:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 174:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 3);
 175:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 176:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 177:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 178:boards/TMC4670_eval.c **** 		}
 179:boards/TMC4670_eval.c **** 		break;
 180:boards/TMC4670_eval.c **** 	case 106:
 181:boards/TMC4670_eval.c **** 		// ADC_T_MOSFETS_RAW
 182:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 183:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 4);
 184:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 185:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 186:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 187:boards/TMC4670_eval.c **** 		}
 188:boards/TMC4670_eval.c **** 		break;
 189:boards/TMC4670_eval.c **** 	case 107:
 190:boards/TMC4670_eval.c **** 		// ADC_T_MOTOR_RAW
 191:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 192:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 4);
 193:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 194:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 195:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 196:boards/TMC4670_eval.c **** 		}
 197:boards/TMC4670_eval.c **** 		break;
 198:boards/TMC4670_eval.c **** 	case 108:
 199:boards/TMC4670_eval.c **** 		// ADC_U_UX_RAW
 200:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 201:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 5);
 202:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 203:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 204:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 205:boards/TMC4670_eval.c **** 		}
 206:boards/TMC4670_eval.c **** 		break;
 207:boards/TMC4670_eval.c **** 	case 109:
 208:boards/TMC4670_eval.c **** 		// ADC_U_WY_RAW
 209:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 210:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 5);
 211:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 212:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 213:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 214:boards/TMC4670_eval.c **** 		}
 215:boards/TMC4670_eval.c **** 		break;
 216:boards/TMC4670_eval.c **** 	case 110:
 217:boards/TMC4670_eval.c **** 		// ADC_U_V_RAW
 218:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 219:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 6);
 220:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 221:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 222:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 223:boards/TMC4670_eval.c **** 		}
 224:boards/TMC4670_eval.c **** 		break;
 225:boards/TMC4670_eval.c **** 	case 111:
 226:boards/TMC4670_eval.c **** 		// AENC_UX_RAW
 227:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 228:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 7);
 229:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 230:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 231:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 232:boards/TMC4670_eval.c **** 		}
 233:boards/TMC4670_eval.c **** 		break;
 234:boards/TMC4670_eval.c **** 	case 112:
 235:boards/TMC4670_eval.c **** 		// AENC_WY_RAW
 236:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 237:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 7);
 238:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 239:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 240:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 241:boards/TMC4670_eval.c **** 		}
 242:boards/TMC4670_eval.c **** 		break;
 243:boards/TMC4670_eval.c **** 	case 113:
 244:boards/TMC4670_eval.c **** 		// AENC_V_RAW
 245:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 246:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 8);
 247:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 248:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 249:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 250:boards/TMC4670_eval.c **** 		}
 251:boards/TMC4670_eval.c **** 		break;
 252:boards/TMC4670_eval.c **** 	case 114:
 253:boards/TMC4670_eval.c **** 		// AENC_N_RAW
 254:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 255:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 8);
 256:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 257:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 258:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 259:boards/TMC4670_eval.c **** 		}
 260:boards/TMC4670_eval.c **** 		break;
 261:boards/TMC4670_eval.c **** 	case 115:
 262:boards/TMC4670_eval.c **** 		// ANALOG_GPI_RAW
 263:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 264:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 9);
 265:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 266:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 267:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 268:boards/TMC4670_eval.c **** 		}
 269:boards/TMC4670_eval.c **** 		break;
 270:boards/TMC4670_eval.c **** 	case 116:
 271:boards/TMC4670_eval.c **** 		// ADC_I0_scaled
 272:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 273:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_IWY_IUX, BIT_0_TO_15);
 274:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 275:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 276:boards/TMC4670_eval.c **** 		}
 277:boards/TMC4670_eval.c **** 		break;
 278:boards/TMC4670_eval.c **** 	case 117:
 279:boards/TMC4670_eval.c **** 		// ADC_I2_scaled
 280:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 281:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_IWY_IUX, BIT_16_TO_31);
 282:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 283:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 284:boards/TMC4670_eval.c **** 		}
 285:boards/TMC4670_eval.c **** 		break;
 286:boards/TMC4670_eval.c **** 	case 118:
 287:boards/TMC4670_eval.c **** 		// ADC_I1_scaled
 288:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 289:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_IV, BIT_0_TO_15);
 290:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 291:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 292:boards/TMC4670_eval.c **** 		}
 293:boards/TMC4670_eval.c **** 		break;
 294:boards/TMC4670_eval.c **** 	case 120:
 295:boards/TMC4670_eval.c **** 		// AENC_UX
 296:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 297:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_WY_UX, BIT_0_TO_15);
 298:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 299:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 300:boards/TMC4670_eval.c **** 		}
 301:boards/TMC4670_eval.c **** 		break;
 302:boards/TMC4670_eval.c **** 	case 121:
 303:boards/TMC4670_eval.c **** 		// AENC_WY
 304:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 305:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_WY_UX, BIT_16_TO_31);
 306:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 307:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 308:boards/TMC4670_eval.c **** 		}
 309:boards/TMC4670_eval.c **** 		break;
 310:boards/TMC4670_eval.c **** 	case 122:
 311:boards/TMC4670_eval.c **** 		// AENC_VN
 312:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 313:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_N_VN, BIT_0_TO_15);
 314:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 315:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 316:boards/TMC4670_eval.c **** 		}
 317:boards/TMC4670_eval.c **** 		break;
 318:boards/TMC4670_eval.c **** 	case 123:
 319:boards/TMC4670_eval.c **** 		// AENC_N
 320:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 321:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_N_VN, BIT_16_TO_31);
 322:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 323:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 324:boards/TMC4670_eval.c **** 		}
 325:boards/TMC4670_eval.c **** 		break;
 326:boards/TMC4670_eval.c **** 	case 124:
 327:boards/TMC4670_eval.c **** 		// ADCSD_I0_RAW
 328:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 329:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 10);
 330:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 331:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 332:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 333:boards/TMC4670_eval.c **** 		}
 334:boards/TMC4670_eval.c **** 		break;
 335:boards/TMC4670_eval.c **** 	case 125:
 336:boards/TMC4670_eval.c **** 		// ADCSD_I1_RAW
 337:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 338:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 10);
 339:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 340:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 341:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 342:boards/TMC4670_eval.c **** 		}
 343:boards/TMC4670_eval.c **** 		break;
 344:boards/TMC4670_eval.c **** 	case 126:
 345:boards/TMC4670_eval.c **** 		// ADCSD_I_B_RAW
 346:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 347:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 11);
 348:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 349:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 350:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 351:boards/TMC4670_eval.c **** 		}
 352:boards/TMC4670_eval.c **** 		break;
 353:boards/TMC4670_eval.c **** 	case 127:
 354:boards/TMC4670_eval.c **** 		// ADC_I0_EXT
 355:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 356:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_I0_EXT, BIT_0_TO_15);
 357:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 358:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 359:boards/TMC4670_eval.c **** 		}
 360:boards/TMC4670_eval.c **** 		break;
 361:boards/TMC4670_eval.c **** 	case 128:
 362:boards/TMC4670_eval.c **** 		// ADC_I1_EXT
 363:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 364:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_I0_EXT, BIT_16_TO_31);
 365:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 366:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 367:boards/TMC4670_eval.c **** 		}
 368:boards/TMC4670_eval.c **** 		break;
 369:boards/TMC4670_eval.c **** 	case 132:
 370:boards/TMC4670_eval.c **** 		// AENC_DECODER_COUNT
 371:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 372:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_AENC_DECODER_COUNT);
 373:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 374:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 375:boards/TMC4670_eval.c **** 		}
 376:boards/TMC4670_eval.c **** 		break;
 377:boards/TMC4670_eval.c **** 	case 133:
 378:boards/TMC4670_eval.c **** 		// AENC_DECODER_COUNT_N
 379:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 380:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_AENC_DECODER_COUNT_N);
 381:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 382:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 383:boards/TMC4670_eval.c **** 		}
 384:boards/TMC4670_eval.c **** 		break;
 385:boards/TMC4670_eval.c **** 	case 134:
 386:boards/TMC4670_eval.c **** 		// AENC_DECODER_PHI_E
 387:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 388:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_E_PHI_M, BIT_1
 389:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 390:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 391:boards/TMC4670_eval.c **** 		}
 392:boards/TMC4670_eval.c **** 		break;
 393:boards/TMC4670_eval.c **** 	case 135:
 394:boards/TMC4670_eval.c **** 		// AENC_DECODER_PHI_M
 395:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 396:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_E_PHI_M, BIT_0
 397:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 398:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 399:boards/TMC4670_eval.c **** 		}
 400:boards/TMC4670_eval.c **** 		break;
 401:boards/TMC4670_eval.c **** 	case 136:
 402:boards/TMC4670_eval.c **** 		// AENC_DECODER_POSITION
 403:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 404:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_AENC_DECODER_POSITION);
 405:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 406:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 407:boards/TMC4670_eval.c **** 		}
 408:boards/TMC4670_eval.c **** 		break;
 409:boards/TMC4670_eval.c **** 	case 140:
 410:boards/TMC4670_eval.c **** 		// OPENLOOP_VELOCITY_TARGET
 411:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 412:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_OPENLOOP_VELOCITY_TARGET);
 413:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 414:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 415:boards/TMC4670_eval.c **** 		}
 416:boards/TMC4670_eval.c **** 		break;
 417:boards/TMC4670_eval.c **** 	case 141:
 418:boards/TMC4670_eval.c **** 		// OPENLOOP_VELOCITY_ACTUAL
 419:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 420:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_OPENLOOP_VELOCITY_ACTUAL);
 421:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 422:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 423:boards/TMC4670_eval.c **** 		}
 424:boards/TMC4670_eval.c **** 		break;
 425:boards/TMC4670_eval.c **** 	case 142:
 426:boards/TMC4670_eval.c **** 		// OPENLOOP_PHI
 427:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 428:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_OPENLOOP_PHI, BIT_0_TO_15);
 429:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 430:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 431:boards/TMC4670_eval.c **** 		}
 432:boards/TMC4670_eval.c **** 		break;
 433:boards/TMC4670_eval.c **** 	case 150:
 434:boards/TMC4670_eval.c **** 		// ABN_DECODER_COUNT
 435:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 436:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_ABN_DECODER_COUNT) & 0x00FFFFFF;
 437:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 438:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 439:boards/TMC4670_eval.c **** 		}
 440:boards/TMC4670_eval.c **** 		break;
 441:boards/TMC4670_eval.c **** 	case 151:
 442:boards/TMC4670_eval.c **** 		// ABN_DECODER_COUNT_N
 443:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 444:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_ABN_DECODER_COUNT_N) & 0x00FFFFFF;
 445:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 446:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 447:boards/TMC4670_eval.c **** 		}
 448:boards/TMC4670_eval.c **** 		break;
 449:boards/TMC4670_eval.c **** 	case 152:
 450:boards/TMC4670_eval.c **** 		// ABN_DECODER_PHI_E
 451:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 452:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ABN_DECODER_PHI_E_PHI_M, BIT_16
 453:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 454:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 455:boards/TMC4670_eval.c **** 		}
 456:boards/TMC4670_eval.c **** 		break;
 457:boards/TMC4670_eval.c **** 	case 153:
 458:boards/TMC4670_eval.c **** 		// ABN_DECODER_PHI_M
 459:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 460:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ABN_DECODER_PHI_E_PHI_M, BIT_0_
 461:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 462:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 463:boards/TMC4670_eval.c **** 		}
 464:boards/TMC4670_eval.c **** 		break;
 465:boards/TMC4670_eval.c **** 	case 160:
 466:boards/TMC4670_eval.c **** 		// HALL_PHI_E
 467:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 468:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_HALL_PHI_E_INTERPOLATED_PHI_E, 
 469:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 470:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 471:boards/TMC4670_eval.c **** 		}
 472:boards/TMC4670_eval.c **** 		break;
 473:boards/TMC4670_eval.c **** 	case 161:
 474:boards/TMC4670_eval.c **** 		// HALL_PHI_E_INTERPOLATED
 475:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 476:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_HALL_PHI_E_INTERPOLATED_PHI_E, 
 477:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 478:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 479:boards/TMC4670_eval.c **** 		}
 480:boards/TMC4670_eval.c **** 		break;
 481:boards/TMC4670_eval.c **** 	case 162:
 482:boards/TMC4670_eval.c **** 		// AENC_DECODER_PHI_A_RAW
 483:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 484:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_A_RAW, BIT_0_T
 485:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 486:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 487:boards/TMC4670_eval.c **** 		}
 488:boards/TMC4670_eval.c **** 		break;
 489:boards/TMC4670_eval.c **** 	case 163:
 490:boards/TMC4670_eval.c **** 		// AENC_DECODER_PHI_A
 491:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 492:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_A, BIT_0_TO_15
 493:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 494:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 495:boards/TMC4670_eval.c **** 		}
 496:boards/TMC4670_eval.c **** 		break;
 497:boards/TMC4670_eval.c **** 	case 164:
 498:boards/TMC4670_eval.c **** 		// HALL_PHI_M
 499:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 500:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_HALL_PHI_M, BIT_0_TO_15);
 501:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 502:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 503:boards/TMC4670_eval.c **** 		}
 504:boards/TMC4670_eval.c **** 		break;
 505:boards/TMC4670_eval.c **** 	case 170:
 506:boards/TMC4670_eval.c **** 		// PHI_E
 507:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 508:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PHI_E, BIT_0_TO_15);
 509:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 510:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 511:boards/TMC4670_eval.c **** 		}
 512:boards/TMC4670_eval.c **** 		break;
 513:boards/TMC4670_eval.c **** 	case 171:
 514:boards/TMC4670_eval.c **** 		// PID_TORQUE_TARGET
 515:boards/TMC4670_eval.c **** 		if(readWrite == READ)
 516:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_16_
 517:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 518:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_16_TO_31, *value);
 519:boards/TMC4670_eval.c **** 		break;
 520:boards/TMC4670_eval.c **** 	case 172:
 521:boards/TMC4670_eval.c **** 		// PID_FLUX_TARGET
 522:boards/TMC4670_eval.c **** 		if(readWrite == READ)
 523:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_0_T
 524:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 525:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_0_TO_15, *value);
 526:boards/TMC4670_eval.c **** 		break;
 527:boards/TMC4670_eval.c **** 	case 173:
 528:boards/TMC4670_eval.c **** 		// PID_VELOCITY_TARGET
 529:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 530:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_PID_VELOCITY_TARGET);
 531:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 532:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 533:boards/TMC4670_eval.c **** 		}
 534:boards/TMC4670_eval.c **** 		break;
 535:boards/TMC4670_eval.c **** 	case 174:
 536:boards/TMC4670_eval.c **** 		// PID_POSITION_TARGET
 537:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 538:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_PID_POSITION_TARGET);
 539:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 540:boards/TMC4670_eval.c **** 			tmc4670_setAbsolutTargetPosition(motor, *value);
 541:boards/TMC4670_eval.c **** 		}
 542:boards/TMC4670_eval.c **** 		break;
 543:boards/TMC4670_eval.c **** 	case 175:
 544:boards/TMC4670_eval.c **** 		// PID_TORQUE_ACTUAL
 545:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 546:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_ACTUAL, BIT_16_
 547:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 548:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 549:boards/TMC4670_eval.c **** 		}
 550:boards/TMC4670_eval.c **** 		break;
 551:boards/TMC4670_eval.c **** 	case 176:
 552:boards/TMC4670_eval.c **** 		// PID_TORQUE_ACTUAL_mA
 553:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 554:boards/TMC4670_eval.c **** 			*value = tmc4670_getActualTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor);
 555:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 556:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 557:boards/TMC4670_eval.c **** 		}
 558:boards/TMC4670_eval.c **** 		break;
 559:boards/TMC4670_eval.c **** 	case 177:
 560:boards/TMC4670_eval.c **** 		// PID_FLUX_ACTUAL
 561:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 562:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_ACTUAL, BIT_0_T
 563:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 564:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 565:boards/TMC4670_eval.c **** 		}
 566:boards/TMC4670_eval.c **** 		break;
 567:boards/TMC4670_eval.c **** 	case 178:
 568:boards/TMC4670_eval.c **** 		// PID_VELOCITY_ACTUAL
 569:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 570:boards/TMC4670_eval.c **** 			*value = tmc4670_getActualVelocity(motor);
 571:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 572:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 573:boards/TMC4670_eval.c **** 		}
 574:boards/TMC4670_eval.c **** 		break;
 575:boards/TMC4670_eval.c **** 	case 179:
 576:boards/TMC4670_eval.c **** 		// PID_POSITION_ACTUAL
 577:boards/TMC4670_eval.c **** 		if(readWrite == READ)
 578:boards/TMC4670_eval.c **** 			*value = tmc4670_getActualPosition(motor);
 579:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 580:boards/TMC4670_eval.c **** 			tmc4670_setActualPosition(motor, *value);
 581:boards/TMC4670_eval.c **** 		break;
 582:boards/TMC4670_eval.c **** 	case 180:
 583:boards/TMC4670_eval.c **** 		// PID_TORQUE_ERROR
 584:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 585:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 0);
 586:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 587:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 588:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 589:boards/TMC4670_eval.c **** 		}
 590:boards/TMC4670_eval.c **** 		break;
 591:boards/TMC4670_eval.c **** 	case 181:
 592:boards/TMC4670_eval.c **** 		// PID_FLUX_ERROR
 593:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 594:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 1);
 595:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 596:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 597:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 598:boards/TMC4670_eval.c **** 		}
 599:boards/TMC4670_eval.c **** 		break;
 600:boards/TMC4670_eval.c **** 	case 182:
 601:boards/TMC4670_eval.c **** 		// PID_VELOCITY_ERROR
 602:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 603:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 2);
 604:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 605:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 606:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 607:boards/TMC4670_eval.c **** 		}
 608:boards/TMC4670_eval.c **** 		break;
 609:boards/TMC4670_eval.c **** 	case 183:
 610:boards/TMC4670_eval.c **** 		// PID_POSITION_ERROR
 611:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 612:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 3);
 613:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 614:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 615:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 616:boards/TMC4670_eval.c **** 		}
 617:boards/TMC4670_eval.c **** 		break;
 618:boards/TMC4670_eval.c **** 	case 184:
 619:boards/TMC4670_eval.c **** 		// PID_TORQUE_ERROR_SUM
 620:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 621:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 4);
 622:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 623:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 624:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 625:boards/TMC4670_eval.c **** 		}
 626:boards/TMC4670_eval.c **** 		break;
 627:boards/TMC4670_eval.c **** 	case 185:
 628:boards/TMC4670_eval.c **** 		// PID_FLUX_ERROR_SUM
 629:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 630:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 5);
 631:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 632:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 633:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 634:boards/TMC4670_eval.c **** 		}
 635:boards/TMC4670_eval.c **** 		break;
 636:boards/TMC4670_eval.c **** 	case 186:
 637:boards/TMC4670_eval.c **** 		// PID_VELOCITY_ERROR_SUM
 638:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 639:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 6);
 640:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 641:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 642:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 643:boards/TMC4670_eval.c **** 		}
 644:boards/TMC4670_eval.c **** 		break;
 645:boards/TMC4670_eval.c **** 	case 187:
 646:boards/TMC4670_eval.c **** 		// PID_POSITION_ERROR_SUM
 647:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 648:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 7);
 649:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 650:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 651:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 652:boards/TMC4670_eval.c **** 		}
 653:boards/TMC4670_eval.c **** 		break;
 654:boards/TMC4670_eval.c **** 	case 189:
 655:boards/TMC4670_eval.c **** 		// PIDIN_TARGET_TORQUE
 656:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 657:boards/TMC4670_eval.c **** 			*value = tmc4670_getTargetTorque_raw(motor);
 658:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 659:boards/TMC4670_eval.c **** 			tmc4670_setTargetTorque_raw(motor, *value);
 660:boards/TMC4670_eval.c **** 		}
 661:boards/TMC4670_eval.c **** 		break;
 662:boards/TMC4670_eval.c **** 	case 190:
 663:boards/TMC4670_eval.c **** 		// PIDIN_TARGET_TORQUE_mA
 664:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 665:boards/TMC4670_eval.c **** 			*value = tmc4670_getTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor);
 666:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 667:boards/TMC4670_eval.c **** 			tmc4670_setTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor, *value);
 668:boards/TMC4670_eval.c **** 		}
 669:boards/TMC4670_eval.c **** 		break;
 670:boards/TMC4670_eval.c **** 	case 191:
 671:boards/TMC4670_eval.c **** 		// PIDIN_TARGET_FLUX
 672:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 673:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 1);
 674:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 675:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 676:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 677:boards/TMC4670_eval.c **** 		}
 678:boards/TMC4670_eval.c **** 		break;
 679:boards/TMC4670_eval.c **** 	case 192:
 680:boards/TMC4670_eval.c **** 		// PIDIN_TARGET_VELOCITY
 681:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 682:boards/TMC4670_eval.c **** 			*value = tmc4670_getTargetVelocity(motor);
 683:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 684:boards/TMC4670_eval.c **** 			tmc4670_setTargetVelocity(motor, *value);
 685:boards/TMC4670_eval.c **** 		}
 686:boards/TMC4670_eval.c **** 		break;
 687:boards/TMC4670_eval.c **** 	case 193:
 688:boards/TMC4670_eval.c **** 		// PIDIN_TARGET_POSITION
 689:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 690:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 3);
 691:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 692:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 693:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 694:boards/TMC4670_eval.c **** 		}
 695:boards/TMC4670_eval.c **** 		break;
 696:boards/TMC4670_eval.c **** 	case 194:
 697:boards/TMC4670_eval.c **** 		// PIDOUT_TARGET_TORQUE
 698:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 699:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 4);
 700:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 701:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 702:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 703:boards/TMC4670_eval.c **** 		}
 704:boards/TMC4670_eval.c **** 		break;
 705:boards/TMC4670_eval.c **** 	case 195:
 706:boards/TMC4670_eval.c **** 		// PIDOUT_TARGET_FLUX
 707:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 708:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 5);
 709:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 710:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 711:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 712:boards/TMC4670_eval.c **** 		}
 713:boards/TMC4670_eval.c **** 		break;
 714:boards/TMC4670_eval.c **** 	case 196:
 715:boards/TMC4670_eval.c **** 		// PIDOUT_TARGET_VELOCITY
 716:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 717:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 6);
 718:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 719:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 720:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 721:boards/TMC4670_eval.c **** 		}
 722:boards/TMC4670_eval.c **** 		break;
 723:boards/TMC4670_eval.c **** 	case 197:
 724:boards/TMC4670_eval.c **** 		// PIDOUT_TARGET_POSITION
 725:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 726:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 7);
 727:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 728:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 729:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 730:boards/TMC4670_eval.c **** 		}
 731:boards/TMC4670_eval.c **** 		break;
 732:boards/TMC4670_eval.c **** 	case 198:
 733:boards/TMC4670_eval.c **** 		// FOC_IUX
 734:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 735:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 8);
 736:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 737:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 738:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 739:boards/TMC4670_eval.c **** 		}
 740:boards/TMC4670_eval.c **** 		break;
 741:boards/TMC4670_eval.c **** 	case 199:
 742:boards/TMC4670_eval.c **** 		// FOC_IWY
 743:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 744:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 8);
 745:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 746:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 747:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 748:boards/TMC4670_eval.c **** 		}
 749:boards/TMC4670_eval.c **** 		break;
 750:boards/TMC4670_eval.c **** 	case 200:
 751:boards/TMC4670_eval.c **** 		// FOC_IV
 752:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 753:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 9);
 754:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 755:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 756:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 757:boards/TMC4670_eval.c **** 		}
 758:boards/TMC4670_eval.c **** 		break;
 759:boards/TMC4670_eval.c **** 	case 201:
 760:boards/TMC4670_eval.c **** 		// FOC_IA
 761:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 762:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 10);
 763:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 764:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 765:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 766:boards/TMC4670_eval.c **** 		}
 767:boards/TMC4670_eval.c **** 		break;
 768:boards/TMC4670_eval.c **** 	case 202:
 769:boards/TMC4670_eval.c **** 		// FOC_IB
 770:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 771:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 10);
 772:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 773:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 774:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 775:boards/TMC4670_eval.c **** 		}
 776:boards/TMC4670_eval.c **** 		break;
 777:boards/TMC4670_eval.c **** 	case 203:
 778:boards/TMC4670_eval.c **** 		// FOC_ID
 779:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 780:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 11);
 781:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 782:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 783:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 784:boards/TMC4670_eval.c **** 		}
 785:boards/TMC4670_eval.c **** 		break;
 786:boards/TMC4670_eval.c **** 	case 204:
 787:boards/TMC4670_eval.c **** 		// FOC_IQ
 788:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 789:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 11);
 790:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 791:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 792:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 793:boards/TMC4670_eval.c **** 		}
 794:boards/TMC4670_eval.c **** 		break;
 795:boards/TMC4670_eval.c **** 	case 205:
 796:boards/TMC4670_eval.c **** 		// FOC_UD
 797:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 798:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 12);
 799:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 800:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 801:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 802:boards/TMC4670_eval.c **** 		}
 803:boards/TMC4670_eval.c **** 		break;
 804:boards/TMC4670_eval.c **** 	case 206:
 805:boards/TMC4670_eval.c **** 		// FOC_UQ
 806:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 807:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 12);
 808:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 809:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 810:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 811:boards/TMC4670_eval.c **** 		}
 812:boards/TMC4670_eval.c **** 		break;
 813:boards/TMC4670_eval.c **** 	case 207:
 814:boards/TMC4670_eval.c **** 		// FOC_UD_LIMITED
 815:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 816:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 13);
 817:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 818:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 819:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 820:boards/TMC4670_eval.c **** 		}
 821:boards/TMC4670_eval.c **** 		break;
 822:boards/TMC4670_eval.c **** 	case 208:
 823:boards/TMC4670_eval.c **** 		// FOC_UQ_LIMITED
 824:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 825:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 13);
 826:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 827:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 828:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 829:boards/TMC4670_eval.c **** 		}
 830:boards/TMC4670_eval.c **** 		break;
 831:boards/TMC4670_eval.c **** 	case 209:
 832:boards/TMC4670_eval.c **** 		// FOC_UA
 833:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 834:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 14);
 835:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 836:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 837:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 838:boards/TMC4670_eval.c **** 		}
 839:boards/TMC4670_eval.c **** 		break;
 840:boards/TMC4670_eval.c **** 	case 210:
 841:boards/TMC4670_eval.c **** 		// FOC_UB
 842:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 843:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 14);
 844:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 845:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 846:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 847:boards/TMC4670_eval.c **** 		}
 848:boards/TMC4670_eval.c **** 		break;
 849:boards/TMC4670_eval.c **** 	case 211:
 850:boards/TMC4670_eval.c **** 		// FOC_UUX
 851:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 852:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 15);
 853:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 854:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 855:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 856:boards/TMC4670_eval.c **** 		}
 857:boards/TMC4670_eval.c **** 		break;
 858:boards/TMC4670_eval.c **** 	case 212:
 859:boards/TMC4670_eval.c **** 		// FOC_UWY
 860:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 861:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 15);
 862:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 863:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 864:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 865:boards/TMC4670_eval.c **** 		}
 866:boards/TMC4670_eval.c **** 		break;
 867:boards/TMC4670_eval.c **** 	case 213:
 868:boards/TMC4670_eval.c **** 		// FOC_UV
 869:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 870:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 16);
 871:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 872:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 873:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 874:boards/TMC4670_eval.c **** 		}
 875:boards/TMC4670_eval.c **** 		break;
 876:boards/TMC4670_eval.c **** 	case 214:
 877:boards/TMC4670_eval.c **** 		// PWM_UX
 878:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 879:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 17);
 880:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 881:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 882:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 883:boards/TMC4670_eval.c **** 		}
 884:boards/TMC4670_eval.c **** 		break;
 885:boards/TMC4670_eval.c **** 	case 215:
 886:boards/TMC4670_eval.c **** 		// PWM_WY
 887:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 888:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 17);
 889:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 890:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 891:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 892:boards/TMC4670_eval.c **** 		}
 893:boards/TMC4670_eval.c **** 		break;
 894:boards/TMC4670_eval.c **** 	case 216:
 895:boards/TMC4670_eval.c **** 		// PWM_UV
 896:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 897:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 18);
 898:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 899:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 900:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 901:boards/TMC4670_eval.c **** 		}
 902:boards/TMC4670_eval.c **** 		break;
 903:boards/TMC4670_eval.c **** 	case 217:
 904:boards/TMC4670_eval.c **** 		// ADC_I_0
 905:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 906:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 19);
 907:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 908:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 909:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 910:boards/TMC4670_eval.c **** 		}
 911:boards/TMC4670_eval.c **** 		break;
 912:boards/TMC4670_eval.c **** 	case 218:
 913:boards/TMC4670_eval.c **** 		// ADC_I_1
 914:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 915:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 19);
 916:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 917:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 918:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 919:boards/TMC4670_eval.c **** 		}
 920:boards/TMC4670_eval.c **** 		break;
 921:boards/TMC4670_eval.c **** 	case 230:
 922:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_0
 923:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 924:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 192);
 925:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 926:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 927:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 928:boards/TMC4670_eval.c **** 		}
 929:boards/TMC4670_eval.c **** 		break;
 930:boards/TMC4670_eval.c **** 	case 231:
 931:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_1
 932:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 933:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 192);
 934:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 935:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 936:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 937:boards/TMC4670_eval.c **** 		}
 938:boards/TMC4670_eval.c **** 		break;
 939:boards/TMC4670_eval.c **** 	case 232:
 940:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_2
 941:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 942:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 193);
 943:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 944:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 945:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 946:boards/TMC4670_eval.c **** 		}
 947:boards/TMC4670_eval.c **** 		break;
 948:boards/TMC4670_eval.c **** 	case 233:
 949:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_3
 950:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 951:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 193);
 952:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 953:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 954:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 955:boards/TMC4670_eval.c **** 		}
 956:boards/TMC4670_eval.c **** 		break;
 957:boards/TMC4670_eval.c **** 	case 234:
 958:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_4
 959:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 960:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 194);
 961:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 962:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 963:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 964:boards/TMC4670_eval.c **** 		}
 965:boards/TMC4670_eval.c **** 		break;
 966:boards/TMC4670_eval.c **** 	case 235:
 967:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_5
 968:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 969:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 194);
 970:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 971:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 972:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 973:boards/TMC4670_eval.c **** 		}
 974:boards/TMC4670_eval.c **** 		break;
 975:boards/TMC4670_eval.c **** 	case 236:
 976:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_6
 977:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 978:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 195);
 979:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 980:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 981:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 982:boards/TMC4670_eval.c **** 		}
 983:boards/TMC4670_eval.c **** 		break;
 984:boards/TMC4670_eval.c **** 	case 237:
 985:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_7
 986:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 987:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 195);
 988:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 989:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 990:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
 991:boards/TMC4670_eval.c **** 		}
 992:boards/TMC4670_eval.c **** 		break;
 993:boards/TMC4670_eval.c **** 	case 238:
 994:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_8
 995:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
 996:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 196);
 997:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 998:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 999:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1000:boards/TMC4670_eval.c **** 		}
1001:boards/TMC4670_eval.c **** 		break;
1002:boards/TMC4670_eval.c **** 	case 239:
1003:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_9
1004:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1005:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 196);
1006:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
1007:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1008:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1009:boards/TMC4670_eval.c **** 		}
1010:boards/TMC4670_eval.c **** 		break;
1011:boards/TMC4670_eval.c **** 	case 240:
1012:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_10
1013:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1014:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 197);
1015:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
1016:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1017:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1018:boards/TMC4670_eval.c **** 		}
1019:boards/TMC4670_eval.c **** 		break;
1020:boards/TMC4670_eval.c **** 	case 241:
1021:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_11
1022:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1023:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 197);
1024:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
1025:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1026:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1027:boards/TMC4670_eval.c **** 		}
1028:boards/TMC4670_eval.c **** 		break;
1029:boards/TMC4670_eval.c **** 	case 242:
1030:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_12
1031:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1032:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 198);
1033:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
1034:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1035:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1036:boards/TMC4670_eval.c **** 		}
1037:boards/TMC4670_eval.c **** 		break;
1038:boards/TMC4670_eval.c **** 	case 243:
1039:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_13
1040:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1041:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 198);
1042:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
1043:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1044:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1045:boards/TMC4670_eval.c **** 		}
1046:boards/TMC4670_eval.c **** 		break;
1047:boards/TMC4670_eval.c **** 	case 244:
1048:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_14
1049:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1050:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 199);
1051:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
1052:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1053:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1054:boards/TMC4670_eval.c **** 		}
1055:boards/TMC4670_eval.c **** 		break;
1056:boards/TMC4670_eval.c **** 	case 245:
1057:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_15
1058:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1059:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 199);
1060:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
1061:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1062:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1063:boards/TMC4670_eval.c **** 		}
1064:boards/TMC4670_eval.c **** 		break;
1065:boards/TMC4670_eval.c **** 	case 246:
1066:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_16
1067:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1068:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 200);
1069:boards/TMC4670_eval.c **** 			*value =  (int32_t)tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
1070:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1071:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1072:boards/TMC4670_eval.c **** 		}
1073:boards/TMC4670_eval.c **** 		break;
1074:boards/TMC4670_eval.c **** 	case 247:
1075:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_17
1076:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1077:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 201);
1078:boards/TMC4670_eval.c **** 			*value =  (int32_t)tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
1079:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1080:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1081:boards/TMC4670_eval.c **** 		}
1082:boards/TMC4670_eval.c **** 		break;
1083:boards/TMC4670_eval.c **** 	case 248:
1084:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_18
1085:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1086:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 202);
1087:boards/TMC4670_eval.c **** 			*value =  (int32_t) tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
1088:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1089:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1090:boards/TMC4670_eval.c **** 		}
1091:boards/TMC4670_eval.c **** 		break;
1092:boards/TMC4670_eval.c **** 	case 249:
1093:boards/TMC4670_eval.c **** 		// DEBUG_VALUE_19
1094:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1095:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 203);
1096:boards/TMC4670_eval.c **** 			*value =  (int32_t) tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
1097:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1098:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1099:boards/TMC4670_eval.c **** 		}
1100:boards/TMC4670_eval.c **** 		break;
1101:boards/TMC4670_eval.c **** 	case 251:
1102:boards/TMC4670_eval.c **** 		// Torque measurement factor
1103:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1104:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].torqueMeasurementFactor;
1105:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1106:boards/TMC4670_eval.c **** 			motorConfig[motor].torqueMeasurementFactor = *value;
1107:boards/TMC4670_eval.c **** 		}
1108:boards/TMC4670_eval.c **** 		break;
1109:boards/TMC4670_eval.c **** 	case 252:
1110:boards/TMC4670_eval.c **** 		// Start encoder initialization
1111:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1112:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].initMode;
1113:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1114:boards/TMC4670_eval.c **** 			tmc4670_startEncoderInitialization(*value, &motorConfig[motor].initMode, &motorConfig[motor].ini
1115:boards/TMC4670_eval.c **** 		}
1116:boards/TMC4670_eval.c **** 		break;
1117:boards/TMC4670_eval.c **** 	case 253:
1118:boards/TMC4670_eval.c **** 		// Encoder init state
1119:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1120:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].initState;
1121:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1122:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1123:boards/TMC4670_eval.c **** 		}
1124:boards/TMC4670_eval.c **** 		break;
1125:boards/TMC4670_eval.c **** 	case 254:
1126:boards/TMC4670_eval.c **** 		// Actual encoder wait time
1127:boards/TMC4670_eval.c **** 		if(readWrite == READ) {
1128:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].actualInitWaitTime;
1129:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
1130:boards/TMC4670_eval.c **** 			errors |= TMC_ERROR_TYPE;
1131:boards/TMC4670_eval.c **** 		}
1132:boards/TMC4670_eval.c **** 		break;
1133:boards/TMC4670_eval.c **** 	default:
1134:boards/TMC4670_eval.c **** 		errors |= TMC_ERROR_TYPE;
1135:boards/TMC4670_eval.c **** 		break;
1136:boards/TMC4670_eval.c **** 	}
1137:boards/TMC4670_eval.c **** 	return errors;
1138:boards/TMC4670_eval.c **** }
1139:boards/TMC4670_eval.c **** 
1140:boards/TMC4670_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value)
1141:boards/TMC4670_eval.c **** {
1142:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
1143:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
1144:boards/TMC4670_eval.c **** 
1145:boards/TMC4670_eval.c **** 	*value = tmc4670_getActualVelocity(motor);
1146:boards/TMC4670_eval.c **** 
1147:boards/TMC4670_eval.c **** 	return TMC_ERROR_NONE;
1148:boards/TMC4670_eval.c **** }
1149:boards/TMC4670_eval.c **** 
1150:boards/TMC4670_eval.c **** static void periodicJob(uint32_t actualSystick)
1151:boards/TMC4670_eval.c **** {
1152:boards/TMC4670_eval.c **** 	// do encoder initialization if necessary
1153:boards/TMC4670_eval.c **** 	int motor;
1154:boards/TMC4670_eval.c **** 	for(motor = 0; motor < TMC4670_MOTORS; motor++)
1155:boards/TMC4670_eval.c **** 	{
1156:boards/TMC4670_eval.c **** 		tmc4670_periodicJob(motor, actualSystick, motorConfig[motor].initMode,
1157:boards/TMC4670_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
1158:boards/TMC4670_eval.c **** 				&(motorConfig[motor].actualInitWaitTime), motorConfig[motor].startVoltage);
1159:boards/TMC4670_eval.c **** 	}
1160:boards/TMC4670_eval.c **** }
1161:boards/TMC4670_eval.c **** 
1162:boards/TMC4670_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
1163:boards/TMC4670_eval.c **** {
1164:boards/TMC4670_eval.c **** 	UNUSED(motor);
1165:boards/TMC4670_eval.c **** 	tmc4670_writeInt(DEFAULT_MOTOR, address, value);
1166:boards/TMC4670_eval.c **** }
1167:boards/TMC4670_eval.c **** 
1168:boards/TMC4670_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
1169:boards/TMC4670_eval.c **** {
1170:boards/TMC4670_eval.c **** 	UNUSED(motor);
1171:boards/TMC4670_eval.c **** 	*value = tmc4670_readInt(DEFAULT_MOTOR, address);
1172:boards/TMC4670_eval.c **** }
1173:boards/TMC4670_eval.c **** 
1174:boards/TMC4670_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
1175:boards/TMC4670_eval.c **** {
1176:boards/TMC4670_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
1177:boards/TMC4670_eval.c **** }
1178:boards/TMC4670_eval.c **** 
1179:boards/TMC4670_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
1180:boards/TMC4670_eval.c **** {
1181:boards/TMC4670_eval.c **** 	return handleParameter(READ, motor, type, value);
1182:boards/TMC4670_eval.c **** }
1183:boards/TMC4670_eval.c **** 
1184:boards/TMC4670_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
1185:boards/TMC4670_eval.c **** {
  26              		.loc 1 1185 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
1186:boards/TMC4670_eval.c **** 	UNUSED(type);
  31              		.loc 1 1186 2 view .LVU1
1187:boards/TMC4670_eval.c **** 	UNUSED(motor);
  32              		.loc 1 1187 2 view .LVU2
1188:boards/TMC4670_eval.c **** 	UNUSED(value);
  33              		.loc 1 1188 2 view .LVU3
1189:boards/TMC4670_eval.c **** 	return 0;
  34              		.loc 1 1189 2 view .LVU4
1190:boards/TMC4670_eval.c **** }
  35              		.loc 1 1190 1 is_stmt 0 view .LVU5
  36 0000 0020     		movs	r0, #0
  37              	.LVL1:
  38              		.loc 1 1190 1 view .LVU6
  39 0002 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE15:
  43              		.align	1
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu softvfp
  49              	reset:
  50              	.LFB18:
1191:boards/TMC4670_eval.c **** 
1192:boards/TMC4670_eval.c **** static void enableDriver(DriverState state)
1193:boards/TMC4670_eval.c **** {
1194:boards/TMC4670_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
1195:boards/TMC4670_eval.c **** 		state = Evalboards.driverEnable;
1196:boards/TMC4670_eval.c **** 
1197:boards/TMC4670_eval.c **** 	if(state == DRIVER_DISABLE)
1198:boards/TMC4670_eval.c **** 		HAL.IOs->config->setLow(PIN_DRV_ENN);
1199:boards/TMC4670_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
1200:boards/TMC4670_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
1201:boards/TMC4670_eval.c **** }
1202:boards/TMC4670_eval.c **** 
1203:boards/TMC4670_eval.c **** static void deInit(void)
1204:boards/TMC4670_eval.c **** {
1205:boards/TMC4670_eval.c **** 	enableDriver(DRIVER_DISABLE);
1206:boards/TMC4670_eval.c **** 	HAL.IOs->config->setLow(PIN_DRV_ENN);
1207:boards/TMC4670_eval.c **** };
1208:boards/TMC4670_eval.c **** 
1209:boards/TMC4670_eval.c **** static uint8_t reset()
1210:boards/TMC4670_eval.c **** {
  51              		.loc 1 1210 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
1211:boards/TMC4670_eval.c **** 	return 1;
  56              		.loc 1 1211 2 view .LVU8
1212:boards/TMC4670_eval.c **** }
  57              		.loc 1 1212 1 is_stmt 0 view .LVU9
  58 0004 0120     		movs	r0, #1
  59 0006 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE18:
  63              		.align	1
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	checkErrors:
  70              	.LVL2:
  71              	.LFB20:
1213:boards/TMC4670_eval.c **** 
1214:boards/TMC4670_eval.c **** static uint8_t restore()
1215:boards/TMC4670_eval.c **** {
1216:boards/TMC4670_eval.c **** 	return 1;
1217:boards/TMC4670_eval.c **** }
1218:boards/TMC4670_eval.c **** 
1219:boards/TMC4670_eval.c **** static void checkErrors(uint32_t tick)
1220:boards/TMC4670_eval.c **** {
  72              		.loc 1 1220 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
1221:boards/TMC4670_eval.c **** 	UNUSED(tick);
  77              		.loc 1 1221 2 view .LVU11
1222:boards/TMC4670_eval.c **** 	Evalboards.ch1.errors = 0;
  78              		.loc 1 1222 2 view .LVU12
  79              		.loc 1 1222 24 is_stmt 0 view .LVU13
  80 0008 014B     		ldr	r3, .L4
  81 000a 0022     		movs	r2, #0
  82 000c 9A60     		str	r2, [r3, #8]
1223:boards/TMC4670_eval.c **** }
  83              		.loc 1 1223 1 view .LVU14
  84 000e 7047     		bx	lr
  85              	.L5:
  86              		.align	2
  87              	.L4:
  88 0010 00000000 		.word	Evalboards
  89              		.cfi_endproc
  90              	.LFE20:
  92              		.align	1
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu softvfp
  98              	periodicJob:
  99              	.LVL3:
 100              	.LFB10:
1151:boards/TMC4670_eval.c **** 	// do encoder initialization if necessary
 101              		.loc 1 1151 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
1153:boards/TMC4670_eval.c **** 	for(motor = 0; motor < TMC4670_MOTORS; motor++)
 105              		.loc 1 1153 2 view .LVU16
1154:boards/TMC4670_eval.c **** 	{
 106              		.loc 1 1154 2 view .LVU17
1154:boards/TMC4670_eval.c **** 	{
 107              		.loc 1 1154 17 view .LVU18
1156:boards/TMC4670_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 108              		.loc 1 1156 3 view .LVU19
1151:boards/TMC4670_eval.c **** 	// do encoder initialization if necessary
 109              		.loc 1 1151 1 is_stmt 0 view .LVU20
 110 0014 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 24
 113              		.cfi_offset 14, -4
1156:boards/TMC4670_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 114              		.loc 1 1156 3 view .LVU21
 115 0016 084B     		ldr	r3, .L7
 116 0018 33F8082C 		ldrh	r2, [r3, #-8]
 117 001c 0292     		str	r2, [sp, #8]
 118 001e 9A1E     		subs	r2, r3, #2
 119 0020 0192     		str	r2, [sp, #4]
 120 0022 33F8042C 		ldrh	r2, [r3, #-4]
 121 0026 0092     		str	r2, [sp]
1151:boards/TMC4670_eval.c **** 	// do encoder initialization if necessary
 122              		.loc 1 1151 1 view .LVU22
 123 0028 0146     		mov	r1, r0
1156:boards/TMC4670_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 124              		.loc 1 1156 3 view .LVU23
 125 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 126 002c 0020     		movs	r0, #0
 127              	.LVL4:
1156:boards/TMC4670_eval.c **** 				&(motorConfig[motor].initState), motorConfig[motor].initWaitTime,
 128              		.loc 1 1156 3 view .LVU24
 129 002e FFF7FEFF 		bl	tmc4670_periodicJob
 130              	.LVL5:
1154:boards/TMC4670_eval.c **** 	{
 131              		.loc 1 1154 41 is_stmt 1 view .LVU25
1154:boards/TMC4670_eval.c **** 	{
 132              		.loc 1 1154 17 view .LVU26
1160:boards/TMC4670_eval.c **** 
 133              		.loc 1 1160 1 is_stmt 0 view .LVU27
 134 0032 05B0     		add	sp, sp, #20
 135              	.LCFI1:
 136              		.cfi_def_cfa_offset 4
 137              		@ sp needed
 138 0034 5DF804FB 		ldr	pc, [sp], #4
 139              	.L8:
 140              		.align	2
 141              	.L7:
 142 0038 08000000 		.word	motorConfig+8
 143              		.cfi_endproc
 144              	.LFE10:
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu softvfp
 152              	readRegister:
 153              	.LVL6:
 154              	.LFB12:
1169:boards/TMC4670_eval.c **** 	UNUSED(motor);
 155              		.loc 1 1169 1 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
1170:boards/TMC4670_eval.c **** 	*value = tmc4670_readInt(DEFAULT_MOTOR, address);
 159              		.loc 1 1170 2 view .LVU29
1171:boards/TMC4670_eval.c **** }
 160              		.loc 1 1171 2 view .LVU30
1169:boards/TMC4670_eval.c **** 	UNUSED(motor);
 161              		.loc 1 1169 1 is_stmt 0 view .LVU31
 162 003c 10B5     		push	{r4, lr}
 163              	.LCFI2:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
1171:boards/TMC4670_eval.c **** }
 167              		.loc 1 1171 11 view .LVU32
 168 003e 0020     		movs	r0, #0
 169              	.LVL7:
1169:boards/TMC4670_eval.c **** 	UNUSED(motor);
 170              		.loc 1 1169 1 view .LVU33
 171 0040 1446     		mov	r4, r2
1171:boards/TMC4670_eval.c **** }
 172              		.loc 1 1171 11 view .LVU34
 173 0042 FFF7FEFF 		bl	tmc4670_readInt
 174              	.LVL8:
1171:boards/TMC4670_eval.c **** }
 175              		.loc 1 1171 9 view .LVU35
 176 0046 2060     		str	r0, [r4]
1172:boards/TMC4670_eval.c **** 
 177              		.loc 1 1172 1 view .LVU36
 178 0048 10BD     		pop	{r4, pc}
1172:boards/TMC4670_eval.c **** 
 179              		.loc 1 1172 1 view .LVU37
 180              		.cfi_endproc
 181              	.LFE12:
 183              		.align	1
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu softvfp
 189              	writeRegister:
 190              	.LVL9:
 191              	.LFB11:
1163:boards/TMC4670_eval.c **** 	UNUSED(motor);
 192              		.loc 1 1163 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
1164:boards/TMC4670_eval.c **** 	tmc4670_writeInt(DEFAULT_MOTOR, address, value);
 197              		.loc 1 1164 2 view .LVU39
1165:boards/TMC4670_eval.c **** }
 198              		.loc 1 1165 2 view .LVU40
 199 004a 0020     		movs	r0, #0
 200              	.LVL10:
1165:boards/TMC4670_eval.c **** }
 201              		.loc 1 1165 2 is_stmt 0 view .LVU41
 202 004c FFF7FEBF 		b	tmc4670_writeInt
 203              	.LVL11:
1165:boards/TMC4670_eval.c **** }
 204              		.loc 1 1165 2 view .LVU42
 205              		.cfi_endproc
 206              	.LFE11:
 208              		.align	1
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu softvfp
 214              	moveTo:
 215              	.LVL12:
 216              	.LFB6:
  60:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
 217              		.loc 1 60 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
  61:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 221              		.loc 1 61 2 view .LVU44
  60:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
 222              		.loc 1 60 1 is_stmt 0 view .LVU45
 223 0050 10B5     		push	{r4, lr}
 224              	.LCFI3:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
  61:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 228              		.loc 1 61 4 view .LVU46
 229 0052 0446     		mov	r4, r0
 230 0054 18B9     		cbnz	r0, .L13
  64:boards/TMC4670_eval.c **** 
 231              		.loc 1 64 2 is_stmt 1 view .LVU47
 232 0056 FFF7FEFF 		bl	tmc4670_setAbsolutTargetPosition
 233              	.LVL13:
  66:boards/TMC4670_eval.c **** }
 234              		.loc 1 66 2 view .LVU48
  66:boards/TMC4670_eval.c **** }
 235              		.loc 1 66 9 is_stmt 0 view .LVU49
 236 005a 2046     		mov	r0, r4
 237              	.L11:
  67:boards/TMC4670_eval.c **** 
 238              		.loc 1 67 1 view .LVU50
 239 005c 10BD     		pop	{r4, pc}
 240              	.LVL14:
 241              	.L13:
  62:boards/TMC4670_eval.c **** 
 242              		.loc 1 62 10 view .LVU51
 243 005e 0820     		movs	r0, #8
 244              	.LVL15:
  62:boards/TMC4670_eval.c **** 
 245              		.loc 1 62 10 view .LVU52
 246 0060 FCE7     		b	.L11
 247              		.cfi_endproc
 248              	.LFE6:
 250              		.align	1
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu softvfp
 256              	rotate:
 257              	.LVL16:
 258              	.LFB2:
  35:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
 259              		.loc 1 35 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
  36:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 263              		.loc 1 36 2 view .LVU54
  35:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
 264              		.loc 1 35 1 is_stmt 0 view .LVU55
 265 0062 10B5     		push	{r4, lr}
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 4, -8
 269              		.cfi_offset 14, -4
  36:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 270              		.loc 1 36 4 view .LVU56
 271 0064 0446     		mov	r4, r0
 272 0066 18B9     		cbnz	r0, .L16
  39:boards/TMC4670_eval.c **** 
 273              		.loc 1 39 2 is_stmt 1 view .LVU57
 274 0068 FFF7FEFF 		bl	tmc4670_setTargetVelocity
 275              	.LVL17:
  41:boards/TMC4670_eval.c **** }
 276              		.loc 1 41 2 view .LVU58
  41:boards/TMC4670_eval.c **** }
 277              		.loc 1 41 9 is_stmt 0 view .LVU59
 278 006c 2046     		mov	r0, r4
 279              	.L14:
  42:boards/TMC4670_eval.c **** 
 280              		.loc 1 42 1 view .LVU60
 281 006e 10BD     		pop	{r4, pc}
 282              	.LVL18:
 283              	.L16:
  37:boards/TMC4670_eval.c **** 
 284              		.loc 1 37 10 view .LVU61
 285 0070 0820     		movs	r0, #8
 286              	.LVL19:
  37:boards/TMC4670_eval.c **** 
 287              		.loc 1 37 10 view .LVU62
 288 0072 FCE7     		b	.L14
 289              		.cfi_endproc
 290              	.LFE2:
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	stop:
 299              	.LVL20:
 300              	.LFB5:
  55:boards/TMC4670_eval.c **** 	return rotate(motor, 0);
 301              		.loc 1 55 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
  56:boards/TMC4670_eval.c **** }
 306              		.loc 1 56 2 view .LVU64
  56:boards/TMC4670_eval.c **** }
 307              		.loc 1 56 9 is_stmt 0 view .LVU65
 308 0074 0021     		movs	r1, #0
 309 0076 F4E7     		b	rotate
 310              	.LVL21:
  56:boards/TMC4670_eval.c **** }
 311              		.loc 1 56 9 view .LVU66
 312              		.cfi_endproc
 313              	.LFE5:
 315              		.align	1
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu softvfp
 321              	left:
 322              	.LVL22:
 323              	.LFB4:
  50:boards/TMC4670_eval.c **** 	return rotate(motor, -velocity);
 324              		.loc 1 50 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
  51:boards/TMC4670_eval.c **** }
 329              		.loc 1 51 2 view .LVU68
  51:boards/TMC4670_eval.c **** }
 330              		.loc 1 51 9 is_stmt 0 view .LVU69
 331 0078 4942     		rsbs	r1, r1, #0
 332              	.LVL23:
  51:boards/TMC4670_eval.c **** }
 333              		.loc 1 51 9 view .LVU70
 334 007a F2E7     		b	rotate
 335              	.LVL24:
  51:boards/TMC4670_eval.c **** }
 336              		.loc 1 51 9 view .LVU71
 337              		.cfi_endproc
 338              	.LFE4:
 340              		.align	1
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu softvfp
 346              	right:
 347              	.LVL25:
 348              	.LFB3:
  45:boards/TMC4670_eval.c **** 	return rotate(motor, velocity);
 349              		.loc 1 45 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
  46:boards/TMC4670_eval.c **** }
 354              		.loc 1 46 2 view .LVU73
  46:boards/TMC4670_eval.c **** }
 355              		.loc 1 46 9 is_stmt 0 view .LVU74
 356 007c F1E7     		b	rotate
 357              	.LVL26:
  46:boards/TMC4670_eval.c **** }
 358              		.loc 1 46 9 view .LVU75
 359              		.cfi_endproc
 360              	.LFE3:
 362              		.align	1
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu softvfp
 368              	handleParameter:
 369              	.LVL27:
 370              	.LFB8:
  80:boards/TMC4670_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 371              		.loc 1 80 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
  81:boards/TMC4670_eval.c **** 
 375              		.loc 1 81 2 view .LVU77
  83:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 376              		.loc 1 83 2 view .LVU78
  80:boards/TMC4670_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 377              		.loc 1 80 1 is_stmt 0 view .LVU79
 378 007e 38B5     		push	{r3, r4, r5, lr}
 379              	.LCFI5:
 380              		.cfi_def_cfa_offset 16
 381              		.cfi_offset 3, -16
 382              		.cfi_offset 4, -12
 383              		.cfi_offset 5, -8
 384              		.cfi_offset 14, -4
  80:boards/TMC4670_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 385              		.loc 1 80 1 view .LVU80
 386 0080 0446     		mov	r4, r0
 387 0082 1D46     		mov	r5, r3
  83:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 388              		.loc 1 83 4 view .LVU81
 389 0084 0029     		cmp	r1, #0
 390 0086 40F03C87 		bne	.L159
  86:boards/TMC4670_eval.c **** 	{
 391              		.loc 1 86 2 is_stmt 1 view .LVU82
 392 008a 043A     		subs	r2, r2, #4
 393              	.LVL28:
  86:boards/TMC4670_eval.c **** 	{
 394              		.loc 1 86 2 is_stmt 0 view .LVU83
 395 008c FA2A     		cmp	r2, #250
 396 008e 00F23B87 		bhi	.L160
 397 0092 DFE812F0 		tbh	[pc, r2, lsl #1]
 398              	.LVL29:
 399              	.L23:
 400 0096 FB00     		.2byte	(.L144-.L23)/2
 401 0098 3907     		.2byte	(.L160-.L23)/2
 402 009a 3907     		.2byte	(.L160-.L23)/2
 403 009c 3907     		.2byte	(.L160-.L23)/2
 404 009e 3907     		.2byte	(.L160-.L23)/2
 405 00a0 3907     		.2byte	(.L160-.L23)/2
 406 00a2 3907     		.2byte	(.L160-.L23)/2
 407 00a4 3907     		.2byte	(.L160-.L23)/2
 408 00a6 3907     		.2byte	(.L160-.L23)/2
 409 00a8 3907     		.2byte	(.L160-.L23)/2
 410 00aa 3907     		.2byte	(.L160-.L23)/2
 411 00ac 3907     		.2byte	(.L160-.L23)/2
 412 00ae 3907     		.2byte	(.L160-.L23)/2
 413 00b0 3907     		.2byte	(.L160-.L23)/2
 414 00b2 3907     		.2byte	(.L160-.L23)/2
 415 00b4 3907     		.2byte	(.L160-.L23)/2
 416 00b6 3907     		.2byte	(.L160-.L23)/2
 417 00b8 3907     		.2byte	(.L160-.L23)/2
 418 00ba 3907     		.2byte	(.L160-.L23)/2
 419 00bc 3907     		.2byte	(.L160-.L23)/2
 420 00be 3907     		.2byte	(.L160-.L23)/2
 421 00c0 3907     		.2byte	(.L160-.L23)/2
 422 00c2 3907     		.2byte	(.L160-.L23)/2
 423 00c4 3907     		.2byte	(.L160-.L23)/2
 424 00c6 3907     		.2byte	(.L160-.L23)/2
 425 00c8 3907     		.2byte	(.L160-.L23)/2
 426 00ca 3907     		.2byte	(.L160-.L23)/2
 427 00cc 3907     		.2byte	(.L160-.L23)/2
 428 00ce 3907     		.2byte	(.L160-.L23)/2
 429 00d0 3907     		.2byte	(.L160-.L23)/2
 430 00d2 3907     		.2byte	(.L160-.L23)/2
 431 00d4 3907     		.2byte	(.L160-.L23)/2
 432 00d6 3907     		.2byte	(.L160-.L23)/2
 433 00d8 3907     		.2byte	(.L160-.L23)/2
 434 00da 3907     		.2byte	(.L160-.L23)/2
 435 00dc 3907     		.2byte	(.L160-.L23)/2
 436 00de 3907     		.2byte	(.L160-.L23)/2
 437 00e0 3907     		.2byte	(.L160-.L23)/2
 438 00e2 3907     		.2byte	(.L160-.L23)/2
 439 00e4 3907     		.2byte	(.L160-.L23)/2
 440 00e6 3907     		.2byte	(.L160-.L23)/2
 441 00e8 3907     		.2byte	(.L160-.L23)/2
 442 00ea 3907     		.2byte	(.L160-.L23)/2
 443 00ec 3907     		.2byte	(.L160-.L23)/2
 444 00ee 3907     		.2byte	(.L160-.L23)/2
 445 00f0 3907     		.2byte	(.L160-.L23)/2
 446 00f2 0901     		.2byte	(.L143-.L23)/2
 447 00f4 1901     		.2byte	(.L142-.L23)/2
 448 00f6 3907     		.2byte	(.L160-.L23)/2
 449 00f8 2901     		.2byte	(.L141-.L23)/2
 450 00fa 3901     		.2byte	(.L140-.L23)/2
 451 00fc 3907     		.2byte	(.L160-.L23)/2
 452 00fe 3907     		.2byte	(.L160-.L23)/2
 453 0100 3907     		.2byte	(.L160-.L23)/2
 454 0102 3907     		.2byte	(.L160-.L23)/2
 455 0104 3907     		.2byte	(.L160-.L23)/2
 456 0106 3907     		.2byte	(.L160-.L23)/2
 457 0108 3907     		.2byte	(.L160-.L23)/2
 458 010a 3907     		.2byte	(.L160-.L23)/2
 459 010c 3907     		.2byte	(.L160-.L23)/2
 460 010e 3907     		.2byte	(.L160-.L23)/2
 461 0110 3907     		.2byte	(.L160-.L23)/2
 462 0112 3907     		.2byte	(.L160-.L23)/2
 463 0114 3907     		.2byte	(.L160-.L23)/2
 464 0116 3907     		.2byte	(.L160-.L23)/2
 465 0118 3907     		.2byte	(.L160-.L23)/2
 466 011a 3907     		.2byte	(.L160-.L23)/2
 467 011c 3907     		.2byte	(.L160-.L23)/2
 468 011e 3907     		.2byte	(.L160-.L23)/2
 469 0120 3907     		.2byte	(.L160-.L23)/2
 470 0122 3907     		.2byte	(.L160-.L23)/2
 471 0124 3907     		.2byte	(.L160-.L23)/2
 472 0126 3907     		.2byte	(.L160-.L23)/2
 473 0128 3907     		.2byte	(.L160-.L23)/2
 474 012a 3907     		.2byte	(.L160-.L23)/2
 475 012c 3907     		.2byte	(.L160-.L23)/2
 476 012e 3907     		.2byte	(.L160-.L23)/2
 477 0130 3907     		.2byte	(.L160-.L23)/2
 478 0132 3907     		.2byte	(.L160-.L23)/2
 479 0134 3907     		.2byte	(.L160-.L23)/2
 480 0136 3907     		.2byte	(.L160-.L23)/2
 481 0138 3907     		.2byte	(.L160-.L23)/2
 482 013a 3907     		.2byte	(.L160-.L23)/2
 483 013c 3907     		.2byte	(.L160-.L23)/2
 484 013e 3907     		.2byte	(.L160-.L23)/2
 485 0140 3907     		.2byte	(.L160-.L23)/2
 486 0142 3907     		.2byte	(.L160-.L23)/2
 487 0144 3907     		.2byte	(.L160-.L23)/2
 488 0146 3907     		.2byte	(.L160-.L23)/2
 489 0148 3907     		.2byte	(.L160-.L23)/2
 490 014a 3907     		.2byte	(.L160-.L23)/2
 491 014c 3907     		.2byte	(.L160-.L23)/2
 492 014e 3907     		.2byte	(.L160-.L23)/2
 493 0150 3907     		.2byte	(.L160-.L23)/2
 494 0152 3907     		.2byte	(.L160-.L23)/2
 495 0154 3907     		.2byte	(.L160-.L23)/2
 496 0156 4901     		.2byte	(.L139-.L23)/2
 497 0158 5701     		.2byte	(.L138-.L23)/2
 498 015a 6501     		.2byte	(.L137-.L23)/2
 499 015c 7301     		.2byte	(.L136-.L23)/2
 500 015e 8101     		.2byte	(.L135-.L23)/2
 501 0160 8F01     		.2byte	(.L134-.L23)/2
 502 0162 9D01     		.2byte	(.L133-.L23)/2
 503 0164 AB01     		.2byte	(.L132-.L23)/2
 504 0166 B901     		.2byte	(.L131-.L23)/2
 505 0168 C701     		.2byte	(.L130-.L23)/2
 506 016a D501     		.2byte	(.L129-.L23)/2
 507 016c E301     		.2byte	(.L128-.L23)/2
 508 016e F101     		.2byte	(.L127-.L23)/2
 509 0170 FF01     		.2byte	(.L126-.L23)/2
 510 0172 0D02     		.2byte	(.L125-.L23)/2
 511 0174 1B02     		.2byte	(.L124-.L23)/2
 512 0176 2902     		.2byte	(.L123-.L23)/2
 513 0178 3302     		.2byte	(.L122-.L23)/2
 514 017a 3D02     		.2byte	(.L121-.L23)/2
 515 017c 3907     		.2byte	(.L160-.L23)/2
 516 017e 4702     		.2byte	(.L120-.L23)/2
 517 0180 5102     		.2byte	(.L119-.L23)/2
 518 0182 5B02     		.2byte	(.L118-.L23)/2
 519 0184 6502     		.2byte	(.L117-.L23)/2
 520 0186 6F02     		.2byte	(.L116-.L23)/2
 521 0188 7E02     		.2byte	(.L115-.L23)/2
 522 018a 8D02     		.2byte	(.L114-.L23)/2
 523 018c 9C02     		.2byte	(.L113-.L23)/2
 524 018e A502     		.2byte	(.L112-.L23)/2
 525 0190 3907     		.2byte	(.L160-.L23)/2
 526 0192 3907     		.2byte	(.L160-.L23)/2
 527 0194 3907     		.2byte	(.L160-.L23)/2
 528 0196 AE02     		.2byte	(.L111-.L23)/2
 529 0198 B602     		.2byte	(.L110-.L23)/2
 530 019a BE02     		.2byte	(.L109-.L23)/2
 531 019c C802     		.2byte	(.L108-.L23)/2
 532 019e D202     		.2byte	(.L107-.L23)/2
 533 01a0 3907     		.2byte	(.L160-.L23)/2
 534 01a2 3907     		.2byte	(.L160-.L23)/2
 535 01a4 3907     		.2byte	(.L160-.L23)/2
 536 01a6 DA02     		.2byte	(.L106-.L23)/2
 537 01a8 E202     		.2byte	(.L105-.L23)/2
 538 01aa EA02     		.2byte	(.L104-.L23)/2
 539 01ac 3907     		.2byte	(.L160-.L23)/2
 540 01ae 3907     		.2byte	(.L160-.L23)/2
 541 01b0 3907     		.2byte	(.L160-.L23)/2
 542 01b2 3907     		.2byte	(.L160-.L23)/2
 543 01b4 3907     		.2byte	(.L160-.L23)/2
 544 01b6 3907     		.2byte	(.L160-.L23)/2
 545 01b8 3907     		.2byte	(.L160-.L23)/2
 546 01ba F402     		.2byte	(.L103-.L23)/2
 547 01bc FE02     		.2byte	(.L102-.L23)/2
 548 01be 0803     		.2byte	(.L101-.L23)/2
 549 01c0 1203     		.2byte	(.L100-.L23)/2
 550 01c2 3907     		.2byte	(.L160-.L23)/2
 551 01c4 3907     		.2byte	(.L160-.L23)/2
 552 01c6 3907     		.2byte	(.L160-.L23)/2
 553 01c8 3907     		.2byte	(.L160-.L23)/2
 554 01ca 3907     		.2byte	(.L160-.L23)/2
 555 01cc 3907     		.2byte	(.L160-.L23)/2
 556 01ce 1C03     		.2byte	(.L99-.L23)/2
 557 01d0 2603     		.2byte	(.L98-.L23)/2
 558 01d2 3003     		.2byte	(.L97-.L23)/2
 559 01d4 3A03     		.2byte	(.L96-.L23)/2
 560 01d6 4403     		.2byte	(.L95-.L23)/2
 561 01d8 3907     		.2byte	(.L160-.L23)/2
 562 01da 3907     		.2byte	(.L160-.L23)/2
 563 01dc 3907     		.2byte	(.L160-.L23)/2
 564 01de 3907     		.2byte	(.L160-.L23)/2
 565 01e0 3907     		.2byte	(.L160-.L23)/2
 566 01e2 4E03     		.2byte	(.L94-.L23)/2
 567 01e4 5803     		.2byte	(.L93-.L23)/2
 568 01e6 6803     		.2byte	(.L92-.L23)/2
 569 01e8 7803     		.2byte	(.L91-.L23)/2
 570 01ea 8003     		.2byte	(.L90-.L23)/2
 571 01ec 8C03     		.2byte	(.L89-.L23)/2
 572 01ee 9603     		.2byte	(.L88-.L23)/2
 573 01f0 9F03     		.2byte	(.L87-.L23)/2
 574 01f2 A903     		.2byte	(.L86-.L23)/2
 575 01f4 B003     		.2byte	(.L85-.L23)/2
 576 01f6 BB03     		.2byte	(.L84-.L23)/2
 577 01f8 C803     		.2byte	(.L83-.L23)/2
 578 01fa D503     		.2byte	(.L82-.L23)/2
 579 01fc E203     		.2byte	(.L81-.L23)/2
 580 01fe EF03     		.2byte	(.L80-.L23)/2
 581 0200 FC03     		.2byte	(.L79-.L23)/2
 582 0202 0904     		.2byte	(.L78-.L23)/2
 583 0204 1604     		.2byte	(.L77-.L23)/2
 584 0206 3907     		.2byte	(.L160-.L23)/2
 585 0208 2304     		.2byte	(.L76-.L23)/2
 586 020a 2E04     		.2byte	(.L75-.L23)/2
 587 020c 3B04     		.2byte	(.L74-.L23)/2
 588 020e 4804     		.2byte	(.L73-.L23)/2
 589 0210 5304     		.2byte	(.L72-.L23)/2
 590 0212 6004     		.2byte	(.L71-.L23)/2
 591 0214 6D04     		.2byte	(.L70-.L23)/2
 592 0216 7A04     		.2byte	(.L69-.L23)/2
 593 0218 8704     		.2byte	(.L68-.L23)/2
 594 021a 9404     		.2byte	(.L67-.L23)/2
 595 021c A304     		.2byte	(.L66-.L23)/2
 596 021e B204     		.2byte	(.L65-.L23)/2
 597 0220 C104     		.2byte	(.L64-.L23)/2
 598 0222 D004     		.2byte	(.L63-.L23)/2
 599 0224 DF04     		.2byte	(.L62-.L23)/2
 600 0226 EE04     		.2byte	(.L61-.L23)/2
 601 0228 FD04     		.2byte	(.L60-.L23)/2
 602 022a 0D05     		.2byte	(.L59-.L23)/2
 603 022c 1F05     		.2byte	(.L58-.L23)/2
 604 022e 2F05     		.2byte	(.L57-.L23)/2
 605 0230 3F05     		.2byte	(.L56-.L23)/2
 606 0232 4F05     		.2byte	(.L55-.L23)/2
 607 0234 5F05     		.2byte	(.L54-.L23)/2
 608 0236 6F05     		.2byte	(.L53-.L23)/2
 609 0238 7F05     		.2byte	(.L52-.L23)/2
 610 023a 8F05     		.2byte	(.L51-.L23)/2
 611 023c 9F05     		.2byte	(.L50-.L23)/2
 612 023e AF05     		.2byte	(.L49-.L23)/2
 613 0240 BF05     		.2byte	(.L48-.L23)/2
 614 0242 CE05     		.2byte	(.L47-.L23)/2
 615 0244 3907     		.2byte	(.L160-.L23)/2
 616 0246 3907     		.2byte	(.L160-.L23)/2
 617 0248 3907     		.2byte	(.L160-.L23)/2
 618 024a 3907     		.2byte	(.L160-.L23)/2
 619 024c 3907     		.2byte	(.L160-.L23)/2
 620 024e 3907     		.2byte	(.L160-.L23)/2
 621 0250 3907     		.2byte	(.L160-.L23)/2
 622 0252 3907     		.2byte	(.L160-.L23)/2
 623 0254 3907     		.2byte	(.L160-.L23)/2
 624 0256 3907     		.2byte	(.L160-.L23)/2
 625 0258 3907     		.2byte	(.L160-.L23)/2
 626 025a DD05     		.2byte	(.L46-.L23)/2
 627 025c ED05     		.2byte	(.L45-.L23)/2
 628 025e FD05     		.2byte	(.L44-.L23)/2
 629 0260 0D06     		.2byte	(.L43-.L23)/2
 630 0262 1D06     		.2byte	(.L42-.L23)/2
 631 0264 2D06     		.2byte	(.L41-.L23)/2
 632 0266 3D06     		.2byte	(.L40-.L23)/2
 633 0268 4D06     		.2byte	(.L39-.L23)/2
 634 026a 5D06     		.2byte	(.L38-.L23)/2
 635 026c 6C06     		.2byte	(.L37-.L23)/2
 636 026e 7B06     		.2byte	(.L36-.L23)/2
 637 0270 8A06     		.2byte	(.L35-.L23)/2
 638 0272 9906     		.2byte	(.L34-.L23)/2
 639 0274 A806     		.2byte	(.L33-.L23)/2
 640 0276 B706     		.2byte	(.L32-.L23)/2
 641 0278 C606     		.2byte	(.L31-.L23)/2
 642 027a D506     		.2byte	(.L30-.L23)/2
 643 027c E306     		.2byte	(.L29-.L23)/2
 644 027e F106     		.2byte	(.L28-.L23)/2
 645 0280 FF06     		.2byte	(.L27-.L23)/2
 646 0282 3907     		.2byte	(.L160-.L23)/2
 647 0284 0D07     		.2byte	(.L26-.L23)/2
 648 0286 1807     		.2byte	(.L25-.L23)/2
 649 0288 2607     		.2byte	(.L24-.L23)/2
 650 028a 2E07     		.2byte	(.L22-.L23)/2
 651              		.p2align 1
 652              	.L144:
  90:boards/TMC4670_eval.c **** 			*value = (uint32_t)tmc4670_readInt(motor, TMC4670_PID_VELOCITY_LIMIT);
 653              		.loc 1 90 3 is_stmt 1 view .LVU84
  90:boards/TMC4670_eval.c **** 			*value = (uint32_t)tmc4670_readInt(motor, TMC4670_PID_VELOCITY_LIMIT);
 654              		.loc 1 90 5 is_stmt 0 view .LVU85
 655 028c 28B9     		cbnz	r0, .L145
  91:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 656              		.loc 1 91 4 is_stmt 1 view .LVU86
  91:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 657              		.loc 1 91 23 is_stmt 0 view .LVU87
 658 028e 6021     		movs	r1, #96
 659              	.LVL30:
  91:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 660              		.loc 1 91 23 view .LVU88
 661 0290 FFF7FEFF 		bl	tmc4670_readInt
 662              	.LVL31:
  91:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 663              		.loc 1 91 11 view .LVU89
 664 0294 2860     		str	r0, [r5]
 665              	.LVL32:
 666              	.L20:
1138:boards/TMC4670_eval.c **** 
 667              		.loc 1 1138 1 view .LVU90
 668 0296 2046     		mov	r0, r4
 669 0298 38BD     		pop	{r3, r4, r5, pc}
 670              	.LVL33:
 671              	.L145:
  92:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_VELOCITY_LIMIT, *value);
 672              		.loc 1 92 8 is_stmt 1 view .LVU91
  93:boards/TMC4670_eval.c **** 		break;
 673              		.loc 1 93 4 view .LVU92
 674 029a 2A68     		ldr	r2, [r5]
 675 029c 6021     		movs	r1, #96
 676              	.LVL34:
  93:boards/TMC4670_eval.c **** 		break;
 677              		.loc 1 93 4 is_stmt 0 view .LVU93
 678 029e 0020     		movs	r0, #0
 679              	.LVL35:
  93:boards/TMC4670_eval.c **** 		break;
 680              		.loc 1 93 4 view .LVU94
 681 02a0 FFF7FEFF 		bl	tmc4670_writeInt
 682              	.LVL36:
  81:boards/TMC4670_eval.c **** 
 683              		.loc 1 81 11 view .LVU95
 684 02a4 0024     		movs	r4, #0
 685 02a6 F6E7     		b	.L20
 686              	.LVL37:
 687              	.L143:
  98:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_0_TO_1
 688              		.loc 1 98 3 is_stmt 1 view .LVU96
  98:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_0_TO_1
 689              		.loc 1 98 5 is_stmt 0 view .LVU97
 690 02a8 30B9     		cbnz	r0, .L146
  99:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 691              		.loc 1 99 4 is_stmt 1 view .LVU98
  99:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 692              		.loc 1 99 23 is_stmt 0 view .LVU99
 693 02aa 0246     		mov	r2, r0
 694 02ac 0821     		movs	r1, #8
 695              	.LVL38:
  99:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 696              		.loc 1 99 23 view .LVU100
 697 02ae FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 698              	.LVL39:
  99:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 699              		.loc 1 99 13 view .LVU101
 700 02b2 00B2     		sxth	r0, r0
 701 02b4 2860     		str	r0, [r5]
 702 02b6 EEE7     		b	.L20
 703              	.LVL40:
 704              	.L146:
 100:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_0_TO_15, *value);
 705              		.loc 1 100 8 is_stmt 1 view .LVU102
 101:boards/TMC4670_eval.c **** 		break;
 706              		.loc 1 101 4 view .LVU103
 707 02b8 0022     		movs	r2, #0
 708 02ba 2B88     		ldrh	r3, [r5]
 709 02bc 0821     		movs	r1, #8
 710              	.LVL41:
 101:boards/TMC4670_eval.c **** 		break;
 711              		.loc 1 101 4 is_stmt 0 view .LVU104
 712 02be 1046     		mov	r0, r2
 713              	.LVL42:
 101:boards/TMC4670_eval.c **** 		break;
 714              		.loc 1 101 4 view .LVU105
 715 02c0 FFF7FEFF 		bl	tmc4670_writeRegister16BitValue
 716              	.LVL43:
  81:boards/TMC4670_eval.c **** 
 717              		.loc 1 81 11 view .LVU106
 718 02c4 0024     		movs	r4, #0
 719 02c6 E6E7     		b	.L20
 720              	.LVL44:
 721              	.L142:
 105:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_0_TO_1
 722              		.loc 1 105 3 is_stmt 1 view .LVU107
 105:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_0_TO_1
 723              		.loc 1 105 5 is_stmt 0 view .LVU108
 724 02c8 30B9     		cbnz	r0, .L147
 106:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 725              		.loc 1 106 4 is_stmt 1 view .LVU109
 106:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 726              		.loc 1 106 23 is_stmt 0 view .LVU110
 727 02ca 0246     		mov	r2, r0
 728 02cc 0921     		movs	r1, #9
 729              	.LVL45:
 106:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 730              		.loc 1 106 23 view .LVU111
 731 02ce FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 732              	.LVL46:
 106:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 733              		.loc 1 106 13 view .LVU112
 734 02d2 00B2     		sxth	r0, r0
 735 02d4 2860     		str	r0, [r5]
 736 02d6 DEE7     		b	.L20
 737              	.LVL47:
 738              	.L147:
 107:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_0_TO_15, *value);
 739              		.loc 1 107 8 is_stmt 1 view .LVU113
 108:boards/TMC4670_eval.c **** 		break;
 740              		.loc 1 108 4 view .LVU114
 741 02d8 0022     		movs	r2, #0
 742 02da 2B88     		ldrh	r3, [r5]
 743 02dc 0921     		movs	r1, #9
 744              	.LVL48:
 108:boards/TMC4670_eval.c **** 		break;
 745              		.loc 1 108 4 is_stmt 0 view .LVU115
 746 02de 1046     		mov	r0, r2
 747              	.LVL49:
 108:boards/TMC4670_eval.c **** 		break;
 748              		.loc 1 108 4 view .LVU116
 749 02e0 FFF7FEFF 		bl	tmc4670_writeRegister16BitValue
 750              	.LVL50:
  81:boards/TMC4670_eval.c **** 
 751              		.loc 1 81 11 view .LVU117
 752 02e4 0024     		movs	r4, #0
 753 02e6 D6E7     		b	.L20
 754              	.LVL51:
 755              	.L141:
 113:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_16_TO_
 756              		.loc 1 113 3 is_stmt 1 view .LVU118
 113:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_16_TO_
 757              		.loc 1 113 5 is_stmt 0 view .LVU119
 758 02e8 30B9     		cbnz	r0, .L148
 114:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 759              		.loc 1 114 4 is_stmt 1 view .LVU120
 114:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 760              		.loc 1 114 23 is_stmt 0 view .LVU121
 761 02ea 0122     		movs	r2, #1
 762 02ec 0821     		movs	r1, #8
 763              	.LVL52:
 114:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 764              		.loc 1 114 23 view .LVU122
 765 02ee FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 766              	.LVL53:
 114:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 767              		.loc 1 114 13 view .LVU123
 768 02f2 00B2     		sxth	r0, r0
 769 02f4 2860     		str	r0, [r5]
 770 02f6 CEE7     		b	.L20
 771              	.LVL54:
 772              	.L148:
 115:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_ADC_I1_SCALE_OFFSET, BIT_16_TO_31, *value);
 773              		.loc 1 115 8 is_stmt 1 view .LVU124
 116:boards/TMC4670_eval.c **** 		break;
 774              		.loc 1 116 4 view .LVU125
 775 02f8 2B88     		ldrh	r3, [r5]
 776 02fa 0122     		movs	r2, #1
 777 02fc 0821     		movs	r1, #8
 778              	.LVL55:
 116:boards/TMC4670_eval.c **** 		break;
 779              		.loc 1 116 4 is_stmt 0 view .LVU126
 780 02fe 0020     		movs	r0, #0
 781              	.LVL56:
 116:boards/TMC4670_eval.c **** 		break;
 782              		.loc 1 116 4 view .LVU127
 783 0300 FFF7FEFF 		bl	tmc4670_writeRegister16BitValue
 784              	.LVL57:
  81:boards/TMC4670_eval.c **** 
 785              		.loc 1 81 11 view .LVU128
 786 0304 0024     		movs	r4, #0
 787 0306 C6E7     		b	.L20
 788              	.LVL58:
 789              	.L140:
 120:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_16_TO_
 790              		.loc 1 120 3 is_stmt 1 view .LVU129
 120:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_16_TO_
 791              		.loc 1 120 5 is_stmt 0 view .LVU130
 792 0308 30B9     		cbnz	r0, .L149
 121:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 793              		.loc 1 121 4 is_stmt 1 view .LVU131
 121:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 794              		.loc 1 121 23 is_stmt 0 view .LVU132
 795 030a 0122     		movs	r2, #1
 796 030c 0921     		movs	r1, #9
 797              	.LVL59:
 121:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 798              		.loc 1 121 23 view .LVU133
 799 030e FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 800              	.LVL60:
 121:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 801              		.loc 1 121 13 view .LVU134
 802 0312 00B2     		sxth	r0, r0
 803 0314 2860     		str	r0, [r5]
 804 0316 BEE7     		b	.L20
 805              	.LVL61:
 806              	.L149:
 122:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_ADC_I0_SCALE_OFFSET, BIT_16_TO_31, *value);
 807              		.loc 1 122 8 is_stmt 1 view .LVU135
 123:boards/TMC4670_eval.c **** 		break;
 808              		.loc 1 123 4 view .LVU136
 809 0318 2B88     		ldrh	r3, [r5]
 810 031a 0122     		movs	r2, #1
 811 031c 0921     		movs	r1, #9
 812              	.LVL62:
 123:boards/TMC4670_eval.c **** 		break;
 813              		.loc 1 123 4 is_stmt 0 view .LVU137
 814 031e 0020     		movs	r0, #0
 815              	.LVL63:
 123:boards/TMC4670_eval.c **** 		break;
 816              		.loc 1 123 4 view .LVU138
 817 0320 FFF7FEFF 		bl	tmc4670_writeRegister16BitValue
 818              	.LVL64:
  81:boards/TMC4670_eval.c **** 
 819              		.loc 1 81 11 view .LVU139
 820 0324 0024     		movs	r4, #0
 821 0326 B6E7     		b	.L20
 822              	.LVL65:
 823              	.L139:
 127:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 1);
 824              		.loc 1 127 3 is_stmt 1 view .LVU140
 127:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 1);
 825              		.loc 1 127 5 is_stmt 0 view .LVU141
 826 0328 0028     		cmp	r0, #0
 827 032a 40F0F085 		bne	.L161
 128:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 828              		.loc 1 128 4 is_stmt 1 view .LVU142
 829 032e 0122     		movs	r2, #1
 830 0330 0321     		movs	r1, #3
 831              	.LVL66:
 128:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 832              		.loc 1 128 4 is_stmt 0 view .LVU143
 833 0332 FFF7FEFF 		bl	tmc4670_writeInt
 834              	.LVL67:
 129:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 835              		.loc 1 129 4 is_stmt 1 view .LVU144
 129:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 836              		.loc 1 129 24 is_stmt 0 view .LVU145
 837 0336 2246     		mov	r2, r4
 838 0338 0221     		movs	r1, #2
 839 033a 2046     		mov	r0, r4
 840 033c FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 841              	.LVL68:
 129:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 842              		.loc 1 129 13 view .LVU146
 843 0340 2860     		str	r0, [r5]
 844 0342 A8E7     		b	.L20
 845              	.LVL69:
 846              	.L138:
 136:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 1);
 847              		.loc 1 136 3 is_stmt 1 view .LVU147
 136:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 1);
 848              		.loc 1 136 5 is_stmt 0 view .LVU148
 849 0344 0028     		cmp	r0, #0
 850 0346 40F0E585 		bne	.L162
 137:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 851              		.loc 1 137 4 is_stmt 1 view .LVU149
 852 034a 0122     		movs	r2, #1
 853 034c 0321     		movs	r1, #3
 854              	.LVL70:
 137:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 855              		.loc 1 137 4 is_stmt 0 view .LVU150
 856 034e FFF7FEFF 		bl	tmc4670_writeInt
 857              	.LVL71:
 138:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 858              		.loc 1 138 4 is_stmt 1 view .LVU151
 138:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 859              		.loc 1 138 24 is_stmt 0 view .LVU152
 860 0352 0122     		movs	r2, #1
 861 0354 0221     		movs	r1, #2
 862 0356 2046     		mov	r0, r4
 863 0358 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 864              	.LVL72:
 138:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 865              		.loc 1 138 13 view .LVU153
 866 035c 2860     		str	r0, [r5]
 867 035e 9AE7     		b	.L20
 868              	.LVL73:
 869              	.L137:
 146:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 2);
 870              		.loc 1 146 3 is_stmt 1 view .LVU154
 146:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 2);
 871              		.loc 1 146 5 is_stmt 0 view .LVU155
 872 0360 0028     		cmp	r0, #0
 873 0362 40F0DA85 		bne	.L163
 147:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 874              		.loc 1 147 4 is_stmt 1 view .LVU156
 875 0366 0222     		movs	r2, #2
 876 0368 0321     		movs	r1, #3
 877              	.LVL74:
 147:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 878              		.loc 1 147 4 is_stmt 0 view .LVU157
 879 036a FFF7FEFF 		bl	tmc4670_writeInt
 880              	.LVL75:
 148:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 881              		.loc 1 148 4 is_stmt 1 view .LVU158
 148:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 882              		.loc 1 148 24 is_stmt 0 view .LVU159
 883 036e 2246     		mov	r2, r4
 884 0370 0221     		movs	r1, #2
 885 0372 2046     		mov	r0, r4
 886 0374 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 887              	.LVL76:
 148:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 888              		.loc 1 148 13 view .LVU160
 889 0378 2860     		str	r0, [r5]
 890 037a 8CE7     		b	.L20
 891              	.LVL77:
 892              	.L136:
 155:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 0);
 893              		.loc 1 155 3 is_stmt 1 view .LVU161
 155:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 0);
 894              		.loc 1 155 5 is_stmt 0 view .LVU162
 895 037c 0028     		cmp	r0, #0
 896 037e 40F0CF85 		bne	.L164
 156:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 897              		.loc 1 156 4 is_stmt 1 view .LVU163
 898 0382 0246     		mov	r2, r0
 899 0384 0321     		movs	r1, #3
 900              	.LVL78:
 156:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 901              		.loc 1 156 4 is_stmt 0 view .LVU164
 902 0386 FFF7FEFF 		bl	tmc4670_writeInt
 903              	.LVL79:
 157:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 904              		.loc 1 157 4 is_stmt 1 view .LVU165
 157:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 905              		.loc 1 157 24 is_stmt 0 view .LVU166
 906 038a 2246     		mov	r2, r4
 907 038c 0221     		movs	r1, #2
 908 038e 2046     		mov	r0, r4
 909 0390 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 910              	.LVL80:
 157:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 911              		.loc 1 157 13 view .LVU167
 912 0394 2860     		str	r0, [r5]
 913 0396 7EE7     		b	.L20
 914              	.LVL81:
 915              	.L135:
 164:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 0);
 916              		.loc 1 164 3 is_stmt 1 view .LVU168
 164:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 0);
 917              		.loc 1 164 5 is_stmt 0 view .LVU169
 918 0398 0028     		cmp	r0, #0
 919 039a 40F0C485 		bne	.L165
 165:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 920              		.loc 1 165 4 is_stmt 1 view .LVU170
 921 039e 0246     		mov	r2, r0
 922 03a0 0321     		movs	r1, #3
 923              	.LVL82:
 165:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 924              		.loc 1 165 4 is_stmt 0 view .LVU171
 925 03a2 FFF7FEFF 		bl	tmc4670_writeInt
 926              	.LVL83:
 166:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 927              		.loc 1 166 4 is_stmt 1 view .LVU172
 166:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 928              		.loc 1 166 24 is_stmt 0 view .LVU173
 929 03a6 0122     		movs	r2, #1
 930 03a8 0221     		movs	r1, #2
 931 03aa 2046     		mov	r0, r4
 932 03ac FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 933              	.LVL84:
 166:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 934              		.loc 1 166 13 view .LVU174
 935 03b0 2860     		str	r0, [r5]
 936 03b2 70E7     		b	.L20
 937              	.LVL85:
 938              	.L134:
 173:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 3);
 939              		.loc 1 173 3 is_stmt 1 view .LVU175
 173:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 3);
 940              		.loc 1 173 5 is_stmt 0 view .LVU176
 941 03b4 0028     		cmp	r0, #0
 942 03b6 40F0B985 		bne	.L166
 174:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 943              		.loc 1 174 4 is_stmt 1 view .LVU177
 944 03ba 0322     		movs	r2, #3
 945 03bc 1146     		mov	r1, r2
 946              	.LVL86:
 174:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 947              		.loc 1 174 4 is_stmt 0 view .LVU178
 948 03be FFF7FEFF 		bl	tmc4670_writeInt
 949              	.LVL87:
 175:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 950              		.loc 1 175 4 is_stmt 1 view .LVU179
 175:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 951              		.loc 1 175 24 is_stmt 0 view .LVU180
 952 03c2 2246     		mov	r2, r4
 953 03c4 0221     		movs	r1, #2
 954 03c6 2046     		mov	r0, r4
 955 03c8 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 956              	.LVL88:
 175:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 957              		.loc 1 175 13 view .LVU181
 958 03cc 2860     		str	r0, [r5]
 959 03ce 62E7     		b	.L20
 960              	.LVL89:
 961              	.L133:
 182:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 4);
 962              		.loc 1 182 3 is_stmt 1 view .LVU182
 182:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 4);
 963              		.loc 1 182 5 is_stmt 0 view .LVU183
 964 03d0 0028     		cmp	r0, #0
 965 03d2 40F0AE85 		bne	.L167
 183:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 966              		.loc 1 183 4 is_stmt 1 view .LVU184
 967 03d6 0422     		movs	r2, #4
 968 03d8 0321     		movs	r1, #3
 969              	.LVL90:
 183:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 970              		.loc 1 183 4 is_stmt 0 view .LVU185
 971 03da FFF7FEFF 		bl	tmc4670_writeInt
 972              	.LVL91:
 184:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 973              		.loc 1 184 4 is_stmt 1 view .LVU186
 184:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 974              		.loc 1 184 24 is_stmt 0 view .LVU187
 975 03de 2246     		mov	r2, r4
 976 03e0 0221     		movs	r1, #2
 977 03e2 2046     		mov	r0, r4
 978 03e4 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 979              	.LVL92:
 184:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 980              		.loc 1 184 13 view .LVU188
 981 03e8 2860     		str	r0, [r5]
 982 03ea 54E7     		b	.L20
 983              	.LVL93:
 984              	.L132:
 191:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 4);
 985              		.loc 1 191 3 is_stmt 1 view .LVU189
 191:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 4);
 986              		.loc 1 191 5 is_stmt 0 view .LVU190
 987 03ec 0028     		cmp	r0, #0
 988 03ee 40F0A385 		bne	.L168
 192:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 989              		.loc 1 192 4 is_stmt 1 view .LVU191
 990 03f2 0422     		movs	r2, #4
 991 03f4 0321     		movs	r1, #3
 992              	.LVL94:
 192:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 993              		.loc 1 192 4 is_stmt 0 view .LVU192
 994 03f6 FFF7FEFF 		bl	tmc4670_writeInt
 995              	.LVL95:
 193:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 996              		.loc 1 193 4 is_stmt 1 view .LVU193
 193:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 997              		.loc 1 193 24 is_stmt 0 view .LVU194
 998 03fa 0122     		movs	r2, #1
 999 03fc 0221     		movs	r1, #2
 1000 03fe 2046     		mov	r0, r4
 1001 0400 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1002              	.LVL96:
 193:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1003              		.loc 1 193 13 view .LVU195
 1004 0404 2860     		str	r0, [r5]
 1005 0406 46E7     		b	.L20
 1006              	.LVL97:
 1007              	.L131:
 200:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 5);
 1008              		.loc 1 200 3 is_stmt 1 view .LVU196
 200:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 5);
 1009              		.loc 1 200 5 is_stmt 0 view .LVU197
 1010 0408 0028     		cmp	r0, #0
 1011 040a 40F09885 		bne	.L169
 201:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1012              		.loc 1 201 4 is_stmt 1 view .LVU198
 1013 040e 0522     		movs	r2, #5
 1014 0410 0321     		movs	r1, #3
 1015              	.LVL98:
 201:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1016              		.loc 1 201 4 is_stmt 0 view .LVU199
 1017 0412 FFF7FEFF 		bl	tmc4670_writeInt
 1018              	.LVL99:
 202:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1019              		.loc 1 202 4 is_stmt 1 view .LVU200
 202:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1020              		.loc 1 202 24 is_stmt 0 view .LVU201
 1021 0416 2246     		mov	r2, r4
 1022 0418 0221     		movs	r1, #2
 1023 041a 2046     		mov	r0, r4
 1024 041c FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1025              	.LVL100:
 202:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1026              		.loc 1 202 13 view .LVU202
 1027 0420 2860     		str	r0, [r5]
 1028 0422 38E7     		b	.L20
 1029              	.LVL101:
 1030              	.L130:
 209:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 5);
 1031              		.loc 1 209 3 is_stmt 1 view .LVU203
 209:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 5);
 1032              		.loc 1 209 5 is_stmt 0 view .LVU204
 1033 0424 0028     		cmp	r0, #0
 1034 0426 40F08D85 		bne	.L170
 210:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 1035              		.loc 1 210 4 is_stmt 1 view .LVU205
 1036 042a 0522     		movs	r2, #5
 1037 042c 0321     		movs	r1, #3
 1038              	.LVL102:
 210:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 1039              		.loc 1 210 4 is_stmt 0 view .LVU206
 1040 042e FFF7FEFF 		bl	tmc4670_writeInt
 1041              	.LVL103:
 211:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1042              		.loc 1 211 4 is_stmt 1 view .LVU207
 211:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1043              		.loc 1 211 24 is_stmt 0 view .LVU208
 1044 0432 0122     		movs	r2, #1
 1045 0434 0221     		movs	r1, #2
 1046 0436 2046     		mov	r0, r4
 1047 0438 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1048              	.LVL104:
 211:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1049              		.loc 1 211 13 view .LVU209
 1050 043c 2860     		str	r0, [r5]
 1051 043e 2AE7     		b	.L20
 1052              	.LVL105:
 1053              	.L129:
 218:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 6);
 1054              		.loc 1 218 3 is_stmt 1 view .LVU210
 218:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 6);
 1055              		.loc 1 218 5 is_stmt 0 view .LVU211
 1056 0440 0028     		cmp	r0, #0
 1057 0442 40F08285 		bne	.L171
 219:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1058              		.loc 1 219 4 is_stmt 1 view .LVU212
 1059 0446 0622     		movs	r2, #6
 1060 0448 0321     		movs	r1, #3
 1061              	.LVL106:
 219:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1062              		.loc 1 219 4 is_stmt 0 view .LVU213
 1063 044a FFF7FEFF 		bl	tmc4670_writeInt
 1064              	.LVL107:
 220:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1065              		.loc 1 220 4 is_stmt 1 view .LVU214
 220:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1066              		.loc 1 220 24 is_stmt 0 view .LVU215
 1067 044e 2246     		mov	r2, r4
 1068 0450 0221     		movs	r1, #2
 1069 0452 2046     		mov	r0, r4
 1070 0454 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1071              	.LVL108:
 220:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1072              		.loc 1 220 13 view .LVU216
 1073 0458 2860     		str	r0, [r5]
 1074 045a 1CE7     		b	.L20
 1075              	.LVL109:
 1076              	.L128:
 227:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 7);
 1077              		.loc 1 227 3 is_stmt 1 view .LVU217
 227:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 7);
 1078              		.loc 1 227 5 is_stmt 0 view .LVU218
 1079 045c 0028     		cmp	r0, #0
 1080 045e 40F07785 		bne	.L172
 228:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1081              		.loc 1 228 4 is_stmt 1 view .LVU219
 1082 0462 0722     		movs	r2, #7
 1083 0464 0321     		movs	r1, #3
 1084              	.LVL110:
 228:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1085              		.loc 1 228 4 is_stmt 0 view .LVU220
 1086 0466 FFF7FEFF 		bl	tmc4670_writeInt
 1087              	.LVL111:
 229:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1088              		.loc 1 229 4 is_stmt 1 view .LVU221
 229:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1089              		.loc 1 229 24 is_stmt 0 view .LVU222
 1090 046a 2246     		mov	r2, r4
 1091 046c 0221     		movs	r1, #2
 1092 046e 2046     		mov	r0, r4
 1093 0470 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1094              	.LVL112:
 229:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1095              		.loc 1 229 13 view .LVU223
 1096 0474 2860     		str	r0, [r5]
 1097 0476 0EE7     		b	.L20
 1098              	.LVL113:
 1099              	.L127:
 236:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 7);
 1100              		.loc 1 236 3 is_stmt 1 view .LVU224
 236:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 7);
 1101              		.loc 1 236 5 is_stmt 0 view .LVU225
 1102 0478 0028     		cmp	r0, #0
 1103 047a 40F06C85 		bne	.L173
 237:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 1104              		.loc 1 237 4 is_stmt 1 view .LVU226
 1105 047e 0722     		movs	r2, #7
 1106 0480 0321     		movs	r1, #3
 1107              	.LVL114:
 237:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 1108              		.loc 1 237 4 is_stmt 0 view .LVU227
 1109 0482 FFF7FEFF 		bl	tmc4670_writeInt
 1110              	.LVL115:
 238:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1111              		.loc 1 238 4 is_stmt 1 view .LVU228
 238:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1112              		.loc 1 238 24 is_stmt 0 view .LVU229
 1113 0486 0122     		movs	r2, #1
 1114 0488 0221     		movs	r1, #2
 1115 048a 2046     		mov	r0, r4
 1116 048c FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1117              	.LVL116:
 238:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1118              		.loc 1 238 13 view .LVU230
 1119 0490 2860     		str	r0, [r5]
 1120 0492 00E7     		b	.L20
 1121              	.LVL117:
 1122              	.L126:
 245:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 8);
 1123              		.loc 1 245 3 is_stmt 1 view .LVU231
 245:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 8);
 1124              		.loc 1 245 5 is_stmt 0 view .LVU232
 1125 0494 0028     		cmp	r0, #0
 1126 0496 40F06185 		bne	.L174
 246:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1127              		.loc 1 246 4 is_stmt 1 view .LVU233
 1128 049a 0822     		movs	r2, #8
 1129 049c 0321     		movs	r1, #3
 1130              	.LVL118:
 246:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1131              		.loc 1 246 4 is_stmt 0 view .LVU234
 1132 049e FFF7FEFF 		bl	tmc4670_writeInt
 1133              	.LVL119:
 247:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1134              		.loc 1 247 4 is_stmt 1 view .LVU235
 247:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1135              		.loc 1 247 24 is_stmt 0 view .LVU236
 1136 04a2 2246     		mov	r2, r4
 1137 04a4 0221     		movs	r1, #2
 1138 04a6 2046     		mov	r0, r4
 1139 04a8 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1140              	.LVL120:
 247:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1141              		.loc 1 247 13 view .LVU237
 1142 04ac 2860     		str	r0, [r5]
 1143 04ae F2E6     		b	.L20
 1144              	.LVL121:
 1145              	.L125:
 254:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 8);
 1146              		.loc 1 254 3 is_stmt 1 view .LVU238
 254:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 8);
 1147              		.loc 1 254 5 is_stmt 0 view .LVU239
 1148 04b0 0028     		cmp	r0, #0
 1149 04b2 40F05685 		bne	.L175
 255:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 1150              		.loc 1 255 4 is_stmt 1 view .LVU240
 1151 04b6 0822     		movs	r2, #8
 1152 04b8 0321     		movs	r1, #3
 1153              	.LVL122:
 255:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 1154              		.loc 1 255 4 is_stmt 0 view .LVU241
 1155 04ba FFF7FEFF 		bl	tmc4670_writeInt
 1156              	.LVL123:
 256:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1157              		.loc 1 256 4 is_stmt 1 view .LVU242
 256:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1158              		.loc 1 256 24 is_stmt 0 view .LVU243
 1159 04be 0122     		movs	r2, #1
 1160 04c0 0221     		movs	r1, #2
 1161 04c2 2046     		mov	r0, r4
 1162 04c4 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1163              	.LVL124:
 256:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1164              		.loc 1 256 13 view .LVU244
 1165 04c8 2860     		str	r0, [r5]
 1166 04ca E4E6     		b	.L20
 1167              	.LVL125:
 1168              	.L124:
 263:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 9);
 1169              		.loc 1 263 3 is_stmt 1 view .LVU245
 263:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 9);
 1170              		.loc 1 263 5 is_stmt 0 view .LVU246
 1171 04cc 0028     		cmp	r0, #0
 1172 04ce 40F04B85 		bne	.L176
 264:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1173              		.loc 1 264 4 is_stmt 1 view .LVU247
 1174 04d2 0922     		movs	r2, #9
 1175 04d4 0321     		movs	r1, #3
 1176              	.LVL126:
 264:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1177              		.loc 1 264 4 is_stmt 0 view .LVU248
 1178 04d6 FFF7FEFF 		bl	tmc4670_writeInt
 1179              	.LVL127:
 265:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1180              		.loc 1 265 4 is_stmt 1 view .LVU249
 265:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1181              		.loc 1 265 24 is_stmt 0 view .LVU250
 1182 04da 2246     		mov	r2, r4
 1183 04dc 0221     		movs	r1, #2
 1184 04de 2046     		mov	r0, r4
 1185 04e0 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1186              	.LVL128:
 265:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1187              		.loc 1 265 13 view .LVU251
 1188 04e4 2860     		str	r0, [r5]
 1189 04e6 D6E6     		b	.L20
 1190              	.LVL129:
 1191              	.L123:
 272:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_IWY_IUX, BIT_0_TO_15);
 1192              		.loc 1 272 3 is_stmt 1 view .LVU252
 272:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_IWY_IUX, BIT_0_TO_15);
 1193              		.loc 1 272 5 is_stmt 0 view .LVU253
 1194 04e8 0028     		cmp	r0, #0
 1195 04ea 40F04085 		bne	.L177
 273:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1196              		.loc 1 273 4 is_stmt 1 view .LVU254
 273:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1197              		.loc 1 273 23 is_stmt 0 view .LVU255
 1198 04ee 0246     		mov	r2, r0
 1199 04f0 1221     		movs	r1, #18
 1200              	.LVL130:
 273:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1201              		.loc 1 273 23 view .LVU256
 1202 04f2 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1203              	.LVL131:
 273:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1204              		.loc 1 273 13 view .LVU257
 1205 04f6 00B2     		sxth	r0, r0
 1206 04f8 2860     		str	r0, [r5]
 1207 04fa CCE6     		b	.L20
 1208              	.LVL132:
 1209              	.L122:
 280:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_IWY_IUX, BIT_16_TO_31);
 1210              		.loc 1 280 3 is_stmt 1 view .LVU258
 280:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_IWY_IUX, BIT_16_TO_31);
 1211              		.loc 1 280 5 is_stmt 0 view .LVU259
 1212 04fc 0028     		cmp	r0, #0
 1213 04fe 40F03985 		bne	.L178
 281:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1214              		.loc 1 281 4 is_stmt 1 view .LVU260
 281:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1215              		.loc 1 281 23 is_stmt 0 view .LVU261
 1216 0502 0122     		movs	r2, #1
 1217 0504 1221     		movs	r1, #18
 1218              	.LVL133:
 281:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1219              		.loc 1 281 23 view .LVU262
 1220 0506 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1221              	.LVL134:
 281:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1222              		.loc 1 281 13 view .LVU263
 1223 050a 00B2     		sxth	r0, r0
 1224 050c 2860     		str	r0, [r5]
 1225 050e C2E6     		b	.L20
 1226              	.LVL135:
 1227              	.L121:
 288:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_IV, BIT_0_TO_15);
 1228              		.loc 1 288 3 is_stmt 1 view .LVU264
 288:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_IV, BIT_0_TO_15);
 1229              		.loc 1 288 5 is_stmt 0 view .LVU265
 1230 0510 0028     		cmp	r0, #0
 1231 0512 40F03285 		bne	.L179
 289:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1232              		.loc 1 289 4 is_stmt 1 view .LVU266
 289:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1233              		.loc 1 289 23 is_stmt 0 view .LVU267
 1234 0516 0246     		mov	r2, r0
 1235 0518 1321     		movs	r1, #19
 1236              	.LVL136:
 289:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1237              		.loc 1 289 23 view .LVU268
 1238 051a FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1239              	.LVL137:
 289:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1240              		.loc 1 289 13 view .LVU269
 1241 051e 00B2     		sxth	r0, r0
 1242 0520 2860     		str	r0, [r5]
 1243 0522 B8E6     		b	.L20
 1244              	.LVL138:
 1245              	.L120:
 296:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_WY_UX, BIT_0_TO_15);
 1246              		.loc 1 296 3 is_stmt 1 view .LVU270
 296:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_WY_UX, BIT_0_TO_15);
 1247              		.loc 1 296 5 is_stmt 0 view .LVU271
 1248 0524 0028     		cmp	r0, #0
 1249 0526 40F02B85 		bne	.L180
 297:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1250              		.loc 1 297 4 is_stmt 1 view .LVU272
 297:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1251              		.loc 1 297 23 is_stmt 0 view .LVU273
 1252 052a 0246     		mov	r2, r0
 1253 052c 1521     		movs	r1, #21
 1254              	.LVL139:
 297:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1255              		.loc 1 297 23 view .LVU274
 1256 052e FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1257              	.LVL140:
 297:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1258              		.loc 1 297 13 view .LVU275
 1259 0532 00B2     		sxth	r0, r0
 1260 0534 2860     		str	r0, [r5]
 1261 0536 AEE6     		b	.L20
 1262              	.LVL141:
 1263              	.L119:
 304:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_WY_UX, BIT_16_TO_31);
 1264              		.loc 1 304 3 is_stmt 1 view .LVU276
 304:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_WY_UX, BIT_16_TO_31);
 1265              		.loc 1 304 5 is_stmt 0 view .LVU277
 1266 0538 0028     		cmp	r0, #0
 1267 053a 40F02485 		bne	.L181
 305:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1268              		.loc 1 305 4 is_stmt 1 view .LVU278
 305:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1269              		.loc 1 305 23 is_stmt 0 view .LVU279
 1270 053e 0122     		movs	r2, #1
 1271 0540 1521     		movs	r1, #21
 1272              	.LVL142:
 305:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1273              		.loc 1 305 23 view .LVU280
 1274 0542 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1275              	.LVL143:
 305:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1276              		.loc 1 305 13 view .LVU281
 1277 0546 00B2     		sxth	r0, r0
 1278 0548 2860     		str	r0, [r5]
 1279 054a A4E6     		b	.L20
 1280              	.LVL144:
 1281              	.L118:
 312:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_N_VN, BIT_0_TO_15);
 1282              		.loc 1 312 3 is_stmt 1 view .LVU282
 312:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_N_VN, BIT_0_TO_15);
 1283              		.loc 1 312 5 is_stmt 0 view .LVU283
 1284 054c 0028     		cmp	r0, #0
 1285 054e 40F01D85 		bne	.L182
 313:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1286              		.loc 1 313 4 is_stmt 1 view .LVU284
 313:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1287              		.loc 1 313 23 is_stmt 0 view .LVU285
 1288 0552 0246     		mov	r2, r0
 1289 0554 1621     		movs	r1, #22
 1290              	.LVL145:
 313:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1291              		.loc 1 313 23 view .LVU286
 1292 0556 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1293              	.LVL146:
 313:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1294              		.loc 1 313 13 view .LVU287
 1295 055a 00B2     		sxth	r0, r0
 1296 055c 2860     		str	r0, [r5]
 1297 055e 9AE6     		b	.L20
 1298              	.LVL147:
 1299              	.L117:
 320:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_N_VN, BIT_16_TO_31);
 1300              		.loc 1 320 3 is_stmt 1 view .LVU288
 320:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_N_VN, BIT_16_TO_31);
 1301              		.loc 1 320 5 is_stmt 0 view .LVU289
 1302 0560 0028     		cmp	r0, #0
 1303 0562 40F01685 		bne	.L183
 321:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1304              		.loc 1 321 4 is_stmt 1 view .LVU290
 321:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1305              		.loc 1 321 23 is_stmt 0 view .LVU291
 1306 0566 0122     		movs	r2, #1
 1307 0568 1621     		movs	r1, #22
 1308              	.LVL148:
 321:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1309              		.loc 1 321 23 view .LVU292
 1310 056a FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1311              	.LVL149:
 321:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1312              		.loc 1 321 13 view .LVU293
 1313 056e 00B2     		sxth	r0, r0
 1314 0570 2860     		str	r0, [r5]
 1315 0572 90E6     		b	.L20
 1316              	.LVL150:
 1317              	.L116:
 328:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 10);
 1318              		.loc 1 328 3 is_stmt 1 view .LVU294
 328:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 10);
 1319              		.loc 1 328 5 is_stmt 0 view .LVU295
 1320 0574 0028     		cmp	r0, #0
 1321 0576 40F00F85 		bne	.L184
 329:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1322              		.loc 1 329 4 is_stmt 1 view .LVU296
 1323 057a 0A22     		movs	r2, #10
 1324 057c 0321     		movs	r1, #3
 1325              	.LVL151:
 329:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1326              		.loc 1 329 4 is_stmt 0 view .LVU297
 1327 057e FFF7FEFF 		bl	tmc4670_writeInt
 1328              	.LVL152:
 330:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1329              		.loc 1 330 4 is_stmt 1 view .LVU298
 330:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1330              		.loc 1 330 23 is_stmt 0 view .LVU299
 1331 0582 2246     		mov	r2, r4
 1332 0584 0221     		movs	r1, #2
 1333 0586 2046     		mov	r0, r4
 1334 0588 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1335              	.LVL153:
 330:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1336              		.loc 1 330 13 view .LVU300
 1337 058c 00B2     		sxth	r0, r0
 1338 058e 2860     		str	r0, [r5]
 1339 0590 81E6     		b	.L20
 1340              	.LVL154:
 1341              	.L115:
 337:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 10);
 1342              		.loc 1 337 3 is_stmt 1 view .LVU301
 337:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 10);
 1343              		.loc 1 337 5 is_stmt 0 view .LVU302
 1344 0592 0028     		cmp	r0, #0
 1345 0594 40F00385 		bne	.L185
 338:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 1346              		.loc 1 338 4 is_stmt 1 view .LVU303
 1347 0598 0A22     		movs	r2, #10
 1348 059a 0321     		movs	r1, #3
 1349              	.LVL155:
 338:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_16_TO_31);
 1350              		.loc 1 338 4 is_stmt 0 view .LVU304
 1351 059c FFF7FEFF 		bl	tmc4670_writeInt
 1352              	.LVL156:
 339:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1353              		.loc 1 339 4 is_stmt 1 view .LVU305
 339:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1354              		.loc 1 339 23 is_stmt 0 view .LVU306
 1355 05a0 0122     		movs	r2, #1
 1356 05a2 0221     		movs	r1, #2
 1357 05a4 2046     		mov	r0, r4
 1358 05a6 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1359              	.LVL157:
 339:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1360              		.loc 1 339 13 view .LVU307
 1361 05aa 00B2     		sxth	r0, r0
 1362 05ac 2860     		str	r0, [r5]
 1363 05ae 72E6     		b	.L20
 1364              	.LVL158:
 1365              	.L114:
 346:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 11);
 1366              		.loc 1 346 3 is_stmt 1 view .LVU308
 346:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_ADC_RAW_ADDR, 11);
 1367              		.loc 1 346 5 is_stmt 0 view .LVU309
 1368 05b0 0028     		cmp	r0, #0
 1369 05b2 40F0F784 		bne	.L186
 347:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1370              		.loc 1 347 4 is_stmt 1 view .LVU310
 1371 05b6 0B22     		movs	r2, #11
 1372 05b8 0321     		movs	r1, #3
 1373              	.LVL159:
 347:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_RAW_DATA, BIT_0_TO_15);
 1374              		.loc 1 347 4 is_stmt 0 view .LVU311
 1375 05ba FFF7FEFF 		bl	tmc4670_writeInt
 1376              	.LVL160:
 348:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1377              		.loc 1 348 4 is_stmt 1 view .LVU312
 348:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1378              		.loc 1 348 23 is_stmt 0 view .LVU313
 1379 05be 2246     		mov	r2, r4
 1380 05c0 0221     		movs	r1, #2
 1381 05c2 2046     		mov	r0, r4
 1382 05c4 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1383              	.LVL161:
 348:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1384              		.loc 1 348 13 view .LVU314
 1385 05c8 00B2     		sxth	r0, r0
 1386 05ca 2860     		str	r0, [r5]
 1387 05cc 63E6     		b	.L20
 1388              	.LVL162:
 1389              	.L113:
 355:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_I0_EXT, BIT_0_TO_15);
 1390              		.loc 1 355 3 is_stmt 1 view .LVU315
 355:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_I0_EXT, BIT_0_TO_15);
 1391              		.loc 1 355 5 is_stmt 0 view .LVU316
 1392 05ce 0028     		cmp	r0, #0
 1393 05d0 40F0EB84 		bne	.L187
 356:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1394              		.loc 1 356 4 is_stmt 1 view .LVU317
 356:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1395              		.loc 1 356 24 is_stmt 0 view .LVU318
 1396 05d4 0246     		mov	r2, r0
 1397 05d6 0621     		movs	r1, #6
 1398              	.LVL163:
 356:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1399              		.loc 1 356 24 view .LVU319
 1400 05d8 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1401              	.LVL164:
 356:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1402              		.loc 1 356 13 view .LVU320
 1403 05dc 2860     		str	r0, [r5]
 1404 05de 5AE6     		b	.L20
 1405              	.LVL165:
 1406              	.L112:
 363:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_I0_EXT, BIT_16_TO_31);
 1407              		.loc 1 363 3 is_stmt 1 view .LVU321
 363:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ADC_I1_I0_EXT, BIT_16_TO_31);
 1408              		.loc 1 363 5 is_stmt 0 view .LVU322
 1409 05e0 0028     		cmp	r0, #0
 1410 05e2 40F0E584 		bne	.L188
 364:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1411              		.loc 1 364 4 is_stmt 1 view .LVU323
 364:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1412              		.loc 1 364 24 is_stmt 0 view .LVU324
 1413 05e6 0122     		movs	r2, #1
 1414 05e8 0621     		movs	r1, #6
 1415              	.LVL166:
 364:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1416              		.loc 1 364 24 view .LVU325
 1417 05ea FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1418              	.LVL167:
 364:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1419              		.loc 1 364 13 view .LVU326
 1420 05ee 2860     		str	r0, [r5]
 1421 05f0 51E6     		b	.L20
 1422              	.LVL168:
 1423              	.L111:
 371:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_AENC_DECODER_COUNT);
 1424              		.loc 1 371 3 is_stmt 1 view .LVU327
 371:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_AENC_DECODER_COUNT);
 1425              		.loc 1 371 5 is_stmt 0 view .LVU328
 1426 05f2 0028     		cmp	r0, #0
 1427 05f4 40F0DF84 		bne	.L189
 372:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1428              		.loc 1 372 4 is_stmt 1 view .LVU329
 372:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1429              		.loc 1 372 23 is_stmt 0 view .LVU330
 1430 05f8 4121     		movs	r1, #65
 1431              	.LVL169:
 372:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1432              		.loc 1 372 23 view .LVU331
 1433 05fa FFF7FEFF 		bl	tmc4670_readInt
 1434              	.LVL170:
 372:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1435              		.loc 1 372 11 view .LVU332
 1436 05fe 2860     		str	r0, [r5]
 1437 0600 49E6     		b	.L20
 1438              	.LVL171:
 1439              	.L110:
 379:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_AENC_DECODER_COUNT_N);
 1440              		.loc 1 379 3 is_stmt 1 view .LVU333
 379:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_AENC_DECODER_COUNT_N);
 1441              		.loc 1 379 5 is_stmt 0 view .LVU334
 1442 0602 0028     		cmp	r0, #0
 1443 0604 40F0DA84 		bne	.L190
 380:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1444              		.loc 1 380 4 is_stmt 1 view .LVU335
 380:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1445              		.loc 1 380 23 is_stmt 0 view .LVU336
 1446 0608 4221     		movs	r1, #66
 1447              	.LVL172:
 380:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1448              		.loc 1 380 23 view .LVU337
 1449 060a FFF7FEFF 		bl	tmc4670_readInt
 1450              	.LVL173:
 380:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1451              		.loc 1 380 11 view .LVU338
 1452 060e 2860     		str	r0, [r5]
 1453 0610 41E6     		b	.L20
 1454              	.LVL174:
 1455              	.L109:
 387:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_E_PHI_M, BIT_1
 1456              		.loc 1 387 3 is_stmt 1 view .LVU339
 387:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_E_PHI_M, BIT_1
 1457              		.loc 1 387 5 is_stmt 0 view .LVU340
 1458 0612 0028     		cmp	r0, #0
 1459 0614 40F0D584 		bne	.L191
 388:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1460              		.loc 1 388 4 is_stmt 1 view .LVU341
 388:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1461              		.loc 1 388 23 is_stmt 0 view .LVU342
 1462 0618 0122     		movs	r2, #1
 1463 061a 4621     		movs	r1, #70
 1464              	.LVL175:
 388:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1465              		.loc 1 388 23 view .LVU343
 1466 061c FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1467              	.LVL176:
 388:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1468              		.loc 1 388 13 view .LVU344
 1469 0620 00B2     		sxth	r0, r0
 1470 0622 2860     		str	r0, [r5]
 1471 0624 37E6     		b	.L20
 1472              	.LVL177:
 1473              	.L108:
 395:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_E_PHI_M, BIT_0
 1474              		.loc 1 395 3 is_stmt 1 view .LVU345
 395:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_E_PHI_M, BIT_0
 1475              		.loc 1 395 5 is_stmt 0 view .LVU346
 1476 0626 0028     		cmp	r0, #0
 1477 0628 40F0CE84 		bne	.L192
 396:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1478              		.loc 1 396 4 is_stmt 1 view .LVU347
 396:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1479              		.loc 1 396 23 is_stmt 0 view .LVU348
 1480 062c 0246     		mov	r2, r0
 1481 062e 4621     		movs	r1, #70
 1482              	.LVL178:
 396:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1483              		.loc 1 396 23 view .LVU349
 1484 0630 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1485              	.LVL179:
 396:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1486              		.loc 1 396 13 view .LVU350
 1487 0634 00B2     		sxth	r0, r0
 1488 0636 2860     		str	r0, [r5]
 1489 0638 2DE6     		b	.L20
 1490              	.LVL180:
 1491              	.L107:
 403:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_AENC_DECODER_POSITION);
 1492              		.loc 1 403 3 is_stmt 1 view .LVU351
 403:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_AENC_DECODER_POSITION);
 1493              		.loc 1 403 5 is_stmt 0 view .LVU352
 1494 063a 0028     		cmp	r0, #0
 1495 063c 40F0C784 		bne	.L193
 404:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1496              		.loc 1 404 4 is_stmt 1 view .LVU353
 404:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1497              		.loc 1 404 23 is_stmt 0 view .LVU354
 1498 0640 4721     		movs	r1, #71
 1499              	.LVL181:
 404:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1500              		.loc 1 404 23 view .LVU355
 1501 0642 FFF7FEFF 		bl	tmc4670_readInt
 1502              	.LVL182:
 404:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1503              		.loc 1 404 11 view .LVU356
 1504 0646 2860     		str	r0, [r5]
 1505 0648 25E6     		b	.L20
 1506              	.LVL183:
 1507              	.L106:
 411:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_OPENLOOP_VELOCITY_TARGET);
 1508              		.loc 1 411 3 is_stmt 1 view .LVU357
 411:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_OPENLOOP_VELOCITY_TARGET);
 1509              		.loc 1 411 5 is_stmt 0 view .LVU358
 1510 064a 0028     		cmp	r0, #0
 1511 064c 40F0C284 		bne	.L194
 412:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1512              		.loc 1 412 4 is_stmt 1 view .LVU359
 412:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1513              		.loc 1 412 23 is_stmt 0 view .LVU360
 1514 0650 2121     		movs	r1, #33
 1515              	.LVL184:
 412:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1516              		.loc 1 412 23 view .LVU361
 1517 0652 FFF7FEFF 		bl	tmc4670_readInt
 1518              	.LVL185:
 412:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1519              		.loc 1 412 11 view .LVU362
 1520 0656 2860     		str	r0, [r5]
 1521 0658 1DE6     		b	.L20
 1522              	.LVL186:
 1523              	.L105:
 419:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_OPENLOOP_VELOCITY_ACTUAL);
 1524              		.loc 1 419 3 is_stmt 1 view .LVU363
 419:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_OPENLOOP_VELOCITY_ACTUAL);
 1525              		.loc 1 419 5 is_stmt 0 view .LVU364
 1526 065a 0028     		cmp	r0, #0
 1527 065c 40F0BD84 		bne	.L195
 420:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1528              		.loc 1 420 4 is_stmt 1 view .LVU365
 420:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1529              		.loc 1 420 23 is_stmt 0 view .LVU366
 1530 0660 2221     		movs	r1, #34
 1531              	.LVL187:
 420:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1532              		.loc 1 420 23 view .LVU367
 1533 0662 FFF7FEFF 		bl	tmc4670_readInt
 1534              	.LVL188:
 420:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1535              		.loc 1 420 11 view .LVU368
 1536 0666 2860     		str	r0, [r5]
 1537 0668 15E6     		b	.L20
 1538              	.LVL189:
 1539              	.L104:
 427:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_OPENLOOP_PHI, BIT_0_TO_15);
 1540              		.loc 1 427 3 is_stmt 1 view .LVU369
 427:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_OPENLOOP_PHI, BIT_0_TO_15);
 1541              		.loc 1 427 5 is_stmt 0 view .LVU370
 1542 066a 0028     		cmp	r0, #0
 1543 066c 40F0B884 		bne	.L196
 428:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1544              		.loc 1 428 4 is_stmt 1 view .LVU371
 428:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1545              		.loc 1 428 23 is_stmt 0 view .LVU372
 1546 0670 0246     		mov	r2, r0
 1547 0672 2321     		movs	r1, #35
 1548              	.LVL190:
 428:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1549              		.loc 1 428 23 view .LVU373
 1550 0674 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1551              	.LVL191:
 428:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1552              		.loc 1 428 13 view .LVU374
 1553 0678 00B2     		sxth	r0, r0
 1554 067a 2860     		str	r0, [r5]
 1555 067c 0BE6     		b	.L20
 1556              	.LVL192:
 1557              	.L103:
 435:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_ABN_DECODER_COUNT) & 0x00FFFFFF;
 1558              		.loc 1 435 3 is_stmt 1 view .LVU375
 435:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_ABN_DECODER_COUNT) & 0x00FFFFFF;
 1559              		.loc 1 435 5 is_stmt 0 view .LVU376
 1560 067e 0028     		cmp	r0, #0
 1561 0680 40F0B184 		bne	.L197
 436:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1562              		.loc 1 436 4 is_stmt 1 view .LVU377
 436:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1563              		.loc 1 436 13 is_stmt 0 view .LVU378
 1564 0684 2721     		movs	r1, #39
 1565              	.LVL193:
 436:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1566              		.loc 1 436 13 view .LVU379
 1567 0686 FFF7FEFF 		bl	tmc4670_readInt
 1568              	.LVL194:
 436:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1569              		.loc 1 436 63 view .LVU380
 1570 068a 20F07F40 		bic	r0, r0, #-16777216
 436:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1571              		.loc 1 436 11 view .LVU381
 1572 068e 2860     		str	r0, [r5]
 1573 0690 01E6     		b	.L20
 1574              	.LVL195:
 1575              	.L102:
 443:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_ABN_DECODER_COUNT_N) & 0x00FFFFFF;
 1576              		.loc 1 443 3 is_stmt 1 view .LVU382
 443:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_ABN_DECODER_COUNT_N) & 0x00FFFFFF;
 1577              		.loc 1 443 5 is_stmt 0 view .LVU383
 1578 0692 0028     		cmp	r0, #0
 1579 0694 40F0AA84 		bne	.L198
 444:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1580              		.loc 1 444 4 is_stmt 1 view .LVU384
 444:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1581              		.loc 1 444 13 is_stmt 0 view .LVU385
 1582 0698 2821     		movs	r1, #40
 1583              	.LVL196:
 444:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1584              		.loc 1 444 13 view .LVU386
 1585 069a FFF7FEFF 		bl	tmc4670_readInt
 1586              	.LVL197:
 444:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1587              		.loc 1 444 65 view .LVU387
 1588 069e 20F07F40 		bic	r0, r0, #-16777216
 444:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1589              		.loc 1 444 11 view .LVU388
 1590 06a2 2860     		str	r0, [r5]
 1591 06a4 F7E5     		b	.L20
 1592              	.LVL198:
 1593              	.L101:
 451:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ABN_DECODER_PHI_E_PHI_M, BIT_16
 1594              		.loc 1 451 3 is_stmt 1 view .LVU389
 451:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ABN_DECODER_PHI_E_PHI_M, BIT_16
 1595              		.loc 1 451 5 is_stmt 0 view .LVU390
 1596 06a6 0028     		cmp	r0, #0
 1597 06a8 40F0A384 		bne	.L199
 452:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1598              		.loc 1 452 4 is_stmt 1 view .LVU391
 452:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1599              		.loc 1 452 23 is_stmt 0 view .LVU392
 1600 06ac 0122     		movs	r2, #1
 1601 06ae 2A21     		movs	r1, #42
 1602              	.LVL199:
 452:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1603              		.loc 1 452 23 view .LVU393
 1604 06b0 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1605              	.LVL200:
 452:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1606              		.loc 1 452 13 view .LVU394
 1607 06b4 00B2     		sxth	r0, r0
 1608 06b6 2860     		str	r0, [r5]
 1609 06b8 EDE5     		b	.L20
 1610              	.LVL201:
 1611              	.L100:
 459:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ABN_DECODER_PHI_E_PHI_M, BIT_0_
 1612              		.loc 1 459 3 is_stmt 1 view .LVU395
 459:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_ABN_DECODER_PHI_E_PHI_M, BIT_0_
 1613              		.loc 1 459 5 is_stmt 0 view .LVU396
 1614 06ba 0028     		cmp	r0, #0
 1615 06bc 40F09C84 		bne	.L200
 460:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1616              		.loc 1 460 4 is_stmt 1 view .LVU397
 460:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1617              		.loc 1 460 23 is_stmt 0 view .LVU398
 1618 06c0 0246     		mov	r2, r0
 1619 06c2 2A21     		movs	r1, #42
 1620              	.LVL202:
 460:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1621              		.loc 1 460 23 view .LVU399
 1622 06c4 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1623              	.LVL203:
 460:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1624              		.loc 1 460 13 view .LVU400
 1625 06c8 00B2     		sxth	r0, r0
 1626 06ca 2860     		str	r0, [r5]
 1627 06cc E3E5     		b	.L20
 1628              	.LVL204:
 1629              	.L99:
 467:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_HALL_PHI_E_INTERPOLATED_PHI_E, 
 1630              		.loc 1 467 3 is_stmt 1 view .LVU401
 467:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_HALL_PHI_E_INTERPOLATED_PHI_E, 
 1631              		.loc 1 467 5 is_stmt 0 view .LVU402
 1632 06ce 0028     		cmp	r0, #0
 1633 06d0 40F09584 		bne	.L201
 468:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1634              		.loc 1 468 4 is_stmt 1 view .LVU403
 468:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1635              		.loc 1 468 23 is_stmt 0 view .LVU404
 1636 06d4 0246     		mov	r2, r0
 1637 06d6 3921     		movs	r1, #57
 1638              	.LVL205:
 468:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1639              		.loc 1 468 23 view .LVU405
 1640 06d8 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1641              	.LVL206:
 468:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1642              		.loc 1 468 13 view .LVU406
 1643 06dc 00B2     		sxth	r0, r0
 1644 06de 2860     		str	r0, [r5]
 1645 06e0 D9E5     		b	.L20
 1646              	.LVL207:
 1647              	.L98:
 475:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_HALL_PHI_E_INTERPOLATED_PHI_E, 
 1648              		.loc 1 475 3 is_stmt 1 view .LVU407
 475:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_HALL_PHI_E_INTERPOLATED_PHI_E, 
 1649              		.loc 1 475 5 is_stmt 0 view .LVU408
 1650 06e2 0028     		cmp	r0, #0
 1651 06e4 40F08E84 		bne	.L202
 476:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1652              		.loc 1 476 4 is_stmt 1 view .LVU409
 476:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1653              		.loc 1 476 23 is_stmt 0 view .LVU410
 1654 06e8 0122     		movs	r2, #1
 1655 06ea 3921     		movs	r1, #57
 1656              	.LVL208:
 476:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1657              		.loc 1 476 23 view .LVU411
 1658 06ec FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1659              	.LVL209:
 476:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1660              		.loc 1 476 13 view .LVU412
 1661 06f0 00B2     		sxth	r0, r0
 1662 06f2 2860     		str	r0, [r5]
 1663 06f4 CFE5     		b	.L20
 1664              	.LVL210:
 1665              	.L97:
 483:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_A_RAW, BIT_0_T
 1666              		.loc 1 483 3 is_stmt 1 view .LVU413
 483:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_A_RAW, BIT_0_T
 1667              		.loc 1 483 5 is_stmt 0 view .LVU414
 1668 06f6 0028     		cmp	r0, #0
 1669 06f8 40F08784 		bne	.L203
 484:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1670              		.loc 1 484 4 is_stmt 1 view .LVU415
 484:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1671              		.loc 1 484 23 is_stmt 0 view .LVU416
 1672 06fc 0246     		mov	r2, r0
 1673 06fe 3D21     		movs	r1, #61
 1674              	.LVL211:
 484:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1675              		.loc 1 484 23 view .LVU417
 1676 0700 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1677              	.LVL212:
 484:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1678              		.loc 1 484 13 view .LVU418
 1679 0704 00B2     		sxth	r0, r0
 1680 0706 2860     		str	r0, [r5]
 1681 0708 C5E5     		b	.L20
 1682              	.LVL213:
 1683              	.L96:
 491:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_A, BIT_0_TO_15
 1684              		.loc 1 491 3 is_stmt 1 view .LVU419
 491:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_AENC_DECODER_PHI_A, BIT_0_TO_15
 1685              		.loc 1 491 5 is_stmt 0 view .LVU420
 1686 070a 0028     		cmp	r0, #0
 1687 070c 40F08084 		bne	.L204
 492:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1688              		.loc 1 492 4 is_stmt 1 view .LVU421
 492:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1689              		.loc 1 492 23 is_stmt 0 view .LVU422
 1690 0710 0246     		mov	r2, r0
 1691 0712 3F21     		movs	r1, #63
 1692              	.LVL214:
 492:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1693              		.loc 1 492 23 view .LVU423
 1694 0714 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1695              	.LVL215:
 492:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1696              		.loc 1 492 13 view .LVU424
 1697 0718 00B2     		sxth	r0, r0
 1698 071a 2860     		str	r0, [r5]
 1699 071c BBE5     		b	.L20
 1700              	.LVL216:
 1701              	.L95:
 499:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_HALL_PHI_M, BIT_0_TO_15);
 1702              		.loc 1 499 3 is_stmt 1 view .LVU425
 499:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_HALL_PHI_M, BIT_0_TO_15);
 1703              		.loc 1 499 5 is_stmt 0 view .LVU426
 1704 071e 0028     		cmp	r0, #0
 1705 0720 40F07984 		bne	.L205
 500:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1706              		.loc 1 500 4 is_stmt 1 view .LVU427
 500:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1707              		.loc 1 500 23 is_stmt 0 view .LVU428
 1708 0724 0246     		mov	r2, r0
 1709 0726 3A21     		movs	r1, #58
 1710              	.LVL217:
 500:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1711              		.loc 1 500 23 view .LVU429
 1712 0728 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1713              	.LVL218:
 500:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1714              		.loc 1 500 13 view .LVU430
 1715 072c 00B2     		sxth	r0, r0
 1716 072e 2860     		str	r0, [r5]
 1717 0730 B1E5     		b	.L20
 1718              	.LVL219:
 1719              	.L94:
 507:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PHI_E, BIT_0_TO_15);
 1720              		.loc 1 507 3 is_stmt 1 view .LVU431
 507:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PHI_E, BIT_0_TO_15);
 1721              		.loc 1 507 5 is_stmt 0 view .LVU432
 1722 0732 0028     		cmp	r0, #0
 1723 0734 40F07284 		bne	.L206
 508:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1724              		.loc 1 508 4 is_stmt 1 view .LVU433
 508:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1725              		.loc 1 508 23 is_stmt 0 view .LVU434
 1726 0738 0246     		mov	r2, r0
 1727 073a 5321     		movs	r1, #83
 1728              	.LVL220:
 508:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1729              		.loc 1 508 23 view .LVU435
 1730 073c FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1731              	.LVL221:
 508:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1732              		.loc 1 508 13 view .LVU436
 1733 0740 00B2     		sxth	r0, r0
 1734 0742 2860     		str	r0, [r5]
 1735 0744 A7E5     		b	.L20
 1736              	.LVL222:
 1737              	.L93:
 515:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_16_
 1738              		.loc 1 515 3 is_stmt 1 view .LVU437
 515:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_16_
 1739              		.loc 1 515 5 is_stmt 0 view .LVU438
 1740 0746 30B9     		cbnz	r0, .L150
 516:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1741              		.loc 1 516 4 is_stmt 1 view .LVU439
 516:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1742              		.loc 1 516 23 is_stmt 0 view .LVU440
 1743 0748 0122     		movs	r2, #1
 1744 074a 6421     		movs	r1, #100
 1745              	.LVL223:
 516:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1746              		.loc 1 516 23 view .LVU441
 1747 074c FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1748              	.LVL224:
 516:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1749              		.loc 1 516 13 view .LVU442
 1750 0750 00B2     		sxth	r0, r0
 1751 0752 2860     		str	r0, [r5]
 1752 0754 9FE5     		b	.L20
 1753              	.LVL225:
 1754              	.L150:
 517:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_16_TO_31, *value);
 1755              		.loc 1 517 8 is_stmt 1 view .LVU443
 518:boards/TMC4670_eval.c **** 		break;
 1756              		.loc 1 518 4 view .LVU444
 1757 0756 2B88     		ldrh	r3, [r5]
 1758 0758 0122     		movs	r2, #1
 1759 075a 6421     		movs	r1, #100
 1760              	.LVL226:
 518:boards/TMC4670_eval.c **** 		break;
 1761              		.loc 1 518 4 is_stmt 0 view .LVU445
 1762 075c 0020     		movs	r0, #0
 1763              	.LVL227:
 518:boards/TMC4670_eval.c **** 		break;
 1764              		.loc 1 518 4 view .LVU446
 1765 075e FFF7FEFF 		bl	tmc4670_writeRegister16BitValue
 1766              	.LVL228:
  81:boards/TMC4670_eval.c **** 
 1767              		.loc 1 81 11 view .LVU447
 1768 0762 0024     		movs	r4, #0
 1769 0764 97E5     		b	.L20
 1770              	.LVL229:
 1771              	.L92:
 522:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_0_T
 1772              		.loc 1 522 3 is_stmt 1 view .LVU448
 522:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_0_T
 1773              		.loc 1 522 5 is_stmt 0 view .LVU449
 1774 0766 30B9     		cbnz	r0, .L151
 523:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1775              		.loc 1 523 4 is_stmt 1 view .LVU450
 523:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1776              		.loc 1 523 23 is_stmt 0 view .LVU451
 1777 0768 0246     		mov	r2, r0
 1778 076a 6421     		movs	r1, #100
 1779              	.LVL230:
 523:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1780              		.loc 1 523 23 view .LVU452
 1781 076c FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1782              	.LVL231:
 523:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1783              		.loc 1 523 13 view .LVU453
 1784 0770 00B2     		sxth	r0, r0
 1785 0772 2860     		str	r0, [r5]
 1786 0774 8FE5     		b	.L20
 1787              	.LVL232:
 1788              	.L151:
 524:boards/TMC4670_eval.c **** 			tmc4670_writeRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_TARGET, BIT_0_TO_15, *value);
 1789              		.loc 1 524 8 is_stmt 1 view .LVU454
 525:boards/TMC4670_eval.c **** 		break;
 1790              		.loc 1 525 4 view .LVU455
 1791 0776 0022     		movs	r2, #0
 1792 0778 2B88     		ldrh	r3, [r5]
 1793 077a 6421     		movs	r1, #100
 1794              	.LVL233:
 525:boards/TMC4670_eval.c **** 		break;
 1795              		.loc 1 525 4 is_stmt 0 view .LVU456
 1796 077c 1046     		mov	r0, r2
 1797              	.LVL234:
 525:boards/TMC4670_eval.c **** 		break;
 1798              		.loc 1 525 4 view .LVU457
 1799 077e FFF7FEFF 		bl	tmc4670_writeRegister16BitValue
 1800              	.LVL235:
  81:boards/TMC4670_eval.c **** 
 1801              		.loc 1 81 11 view .LVU458
 1802 0782 0024     		movs	r4, #0
 1803 0784 87E5     		b	.L20
 1804              	.LVL236:
 1805              	.L91:
 529:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_PID_VELOCITY_TARGET);
 1806              		.loc 1 529 3 is_stmt 1 view .LVU459
 529:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_PID_VELOCITY_TARGET);
 1807              		.loc 1 529 5 is_stmt 0 view .LVU460
 1808 0786 0028     		cmp	r0, #0
 1809 0788 40F04B84 		bne	.L207
 530:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1810              		.loc 1 530 4 is_stmt 1 view .LVU461
 530:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1811              		.loc 1 530 23 is_stmt 0 view .LVU462
 1812 078c 6621     		movs	r1, #102
 1813              	.LVL237:
 530:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1814              		.loc 1 530 23 view .LVU463
 1815 078e FFF7FEFF 		bl	tmc4670_readInt
 1816              	.LVL238:
 530:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1817              		.loc 1 530 11 view .LVU464
 1818 0792 2860     		str	r0, [r5]
 1819 0794 7FE5     		b	.L20
 1820              	.LVL239:
 1821              	.L90:
 537:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_PID_POSITION_TARGET);
 1822              		.loc 1 537 3 is_stmt 1 view .LVU465
 537:boards/TMC4670_eval.c **** 			*value = (int32_t) tmc4670_readInt(motor, TMC4670_PID_POSITION_TARGET);
 1823              		.loc 1 537 5 is_stmt 0 view .LVU466
 1824 0796 20B9     		cbnz	r0, .L152
 538:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1825              		.loc 1 538 4 is_stmt 1 view .LVU467
 538:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1826              		.loc 1 538 23 is_stmt 0 view .LVU468
 1827 0798 6821     		movs	r1, #104
 1828              	.LVL240:
 538:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1829              		.loc 1 538 23 view .LVU469
 1830 079a FFF7FEFF 		bl	tmc4670_readInt
 1831              	.LVL241:
 538:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1832              		.loc 1 538 11 view .LVU470
 1833 079e 2860     		str	r0, [r5]
 1834 07a0 79E5     		b	.L20
 1835              	.LVL242:
 1836              	.L152:
 539:boards/TMC4670_eval.c **** 			tmc4670_setAbsolutTargetPosition(motor, *value);
 1837              		.loc 1 539 10 is_stmt 1 view .LVU471
 540:boards/TMC4670_eval.c **** 		}
 1838              		.loc 1 540 4 view .LVU472
 1839 07a2 2968     		ldr	r1, [r5]
 1840              	.LVL243:
 540:boards/TMC4670_eval.c **** 		}
 1841              		.loc 1 540 4 is_stmt 0 view .LVU473
 1842 07a4 0020     		movs	r0, #0
 1843              	.LVL244:
 540:boards/TMC4670_eval.c **** 		}
 1844              		.loc 1 540 4 view .LVU474
 1845 07a6 FFF7FEFF 		bl	tmc4670_setAbsolutTargetPosition
 1846              	.LVL245:
  81:boards/TMC4670_eval.c **** 
 1847              		.loc 1 81 11 view .LVU475
 1848 07aa 0024     		movs	r4, #0
 1849 07ac 73E5     		b	.L20
 1850              	.LVL246:
 1851              	.L89:
 545:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_ACTUAL, BIT_16_
 1852              		.loc 1 545 3 is_stmt 1 view .LVU476
 545:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_ACTUAL, BIT_16_
 1853              		.loc 1 545 5 is_stmt 0 view .LVU477
 1854 07ae 0028     		cmp	r0, #0
 1855 07b0 40F03A84 		bne	.L208
 546:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1856              		.loc 1 546 4 is_stmt 1 view .LVU478
 546:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1857              		.loc 1 546 23 is_stmt 0 view .LVU479
 1858 07b4 0122     		movs	r2, #1
 1859 07b6 6921     		movs	r1, #105
 1860              	.LVL247:
 546:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1861              		.loc 1 546 23 view .LVU480
 1862 07b8 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1863              	.LVL248:
 546:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1864              		.loc 1 546 13 view .LVU481
 1865 07bc 00B2     		sxth	r0, r0
 1866 07be 2860     		str	r0, [r5]
 1867 07c0 69E5     		b	.L20
 1868              	.LVL249:
 1869              	.L88:
 553:boards/TMC4670_eval.c **** 			*value = tmc4670_getActualTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor);
 1870              		.loc 1 553 3 is_stmt 1 view .LVU482
 553:boards/TMC4670_eval.c **** 			*value = tmc4670_getActualTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor);
 1871              		.loc 1 553 5 is_stmt 0 view .LVU483
 1872 07c2 0028     		cmp	r0, #0
 1873 07c4 40F03384 		bne	.L209
 554:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1874              		.loc 1 554 4 is_stmt 1 view .LVU484
 554:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1875              		.loc 1 554 13 is_stmt 0 view .LVU485
 1876 07c8 C14B     		ldr	r3, .L269
 1877 07ca 5989     		ldrh	r1, [r3, #10]
 1878              	.LVL250:
 554:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1879              		.loc 1 554 13 view .LVU486
 1880 07cc FFF7FEFF 		bl	tmc4670_getActualTorque_mA
 1881              	.LVL251:
 554:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1882              		.loc 1 554 11 view .LVU487
 1883 07d0 2860     		str	r0, [r5]
 1884 07d2 60E5     		b	.L20
 1885              	.LVL252:
 1886              	.L87:
 561:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_ACTUAL, BIT_0_T
 1887              		.loc 1 561 3 is_stmt 1 view .LVU488
 561:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_PID_TORQUE_FLUX_ACTUAL, BIT_0_T
 1888              		.loc 1 561 5 is_stmt 0 view .LVU489
 1889 07d4 0028     		cmp	r0, #0
 1890 07d6 40F02D84 		bne	.L210
 562:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1891              		.loc 1 562 4 is_stmt 1 view .LVU490
 562:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1892              		.loc 1 562 23 is_stmt 0 view .LVU491
 1893 07da 0246     		mov	r2, r0
 1894 07dc 6921     		movs	r1, #105
 1895              	.LVL253:
 562:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1896              		.loc 1 562 23 view .LVU492
 1897 07de FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 1898              	.LVL254:
 562:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1899              		.loc 1 562 13 view .LVU493
 1900 07e2 00B2     		sxth	r0, r0
 1901 07e4 2860     		str	r0, [r5]
 1902 07e6 56E5     		b	.L20
 1903              	.LVL255:
 1904              	.L86:
 569:boards/TMC4670_eval.c **** 			*value = tmc4670_getActualVelocity(motor);
 1905              		.loc 1 569 3 is_stmt 1 view .LVU494
 569:boards/TMC4670_eval.c **** 			*value = tmc4670_getActualVelocity(motor);
 1906              		.loc 1 569 5 is_stmt 0 view .LVU495
 1907 07e8 0028     		cmp	r0, #0
 1908 07ea 40F02684 		bne	.L211
 570:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1909              		.loc 1 570 4 is_stmt 1 view .LVU496
 570:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1910              		.loc 1 570 13 is_stmt 0 view .LVU497
 1911 07ee FFF7FEFF 		bl	tmc4670_getActualVelocity
 1912              	.LVL256:
 570:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1913              		.loc 1 570 11 view .LVU498
 1914 07f2 2860     		str	r0, [r5]
 1915 07f4 4FE5     		b	.L20
 1916              	.LVL257:
 1917              	.L85:
 577:boards/TMC4670_eval.c **** 			*value = tmc4670_getActualPosition(motor);
 1918              		.loc 1 577 3 is_stmt 1 view .LVU499
 577:boards/TMC4670_eval.c **** 			*value = tmc4670_getActualPosition(motor);
 1919              		.loc 1 577 5 is_stmt 0 view .LVU500
 1920 07f6 18B9     		cbnz	r0, .L153
 578:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1921              		.loc 1 578 4 is_stmt 1 view .LVU501
 578:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1922              		.loc 1 578 13 is_stmt 0 view .LVU502
 1923 07f8 FFF7FEFF 		bl	tmc4670_getActualPosition
 1924              	.LVL258:
 578:boards/TMC4670_eval.c **** 		else if(readWrite == WRITE)
 1925              		.loc 1 578 11 view .LVU503
 1926 07fc 2860     		str	r0, [r5]
 1927 07fe 4AE5     		b	.L20
 1928              	.LVL259:
 1929              	.L153:
 579:boards/TMC4670_eval.c **** 			tmc4670_setActualPosition(motor, *value);
 1930              		.loc 1 579 8 is_stmt 1 view .LVU504
 580:boards/TMC4670_eval.c **** 		break;
 1931              		.loc 1 580 4 view .LVU505
 1932 0800 2968     		ldr	r1, [r5]
 1933              	.LVL260:
 580:boards/TMC4670_eval.c **** 		break;
 1934              		.loc 1 580 4 is_stmt 0 view .LVU506
 1935 0802 0020     		movs	r0, #0
 1936              	.LVL261:
 580:boards/TMC4670_eval.c **** 		break;
 1937              		.loc 1 580 4 view .LVU507
 1938 0804 FFF7FEFF 		bl	tmc4670_setActualPosition
 1939              	.LVL262:
  81:boards/TMC4670_eval.c **** 
 1940              		.loc 1 81 11 view .LVU508
 1941 0808 0024     		movs	r4, #0
 1942 080a 44E5     		b	.L20
 1943              	.LVL263:
 1944              	.L84:
 584:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 0);
 1945              		.loc 1 584 3 is_stmt 1 view .LVU509
 584:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 0);
 1946              		.loc 1 584 5 is_stmt 0 view .LVU510
 1947 080c 0028     		cmp	r0, #0
 1948 080e 40F01784 		bne	.L212
 585:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 1949              		.loc 1 585 4 is_stmt 1 view .LVU511
 1950 0812 0246     		mov	r2, r0
 1951 0814 6D21     		movs	r1, #109
 1952              	.LVL264:
 585:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 1953              		.loc 1 585 4 is_stmt 0 view .LVU512
 1954 0816 FFF7FEFF 		bl	tmc4670_writeInt
 1955              	.LVL265:
 586:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1956              		.loc 1 586 4 is_stmt 1 view .LVU513
 586:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1957              		.loc 1 586 13 is_stmt 0 view .LVU514
 1958 081a 6C21     		movs	r1, #108
 1959 081c 2046     		mov	r0, r4
 1960 081e FFF7FEFF 		bl	tmc4670_readInt
 1961              	.LVL266:
 586:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1962              		.loc 1 586 11 view .LVU515
 1963 0822 2860     		str	r0, [r5]
 1964 0824 37E5     		b	.L20
 1965              	.LVL267:
 1966              	.L83:
 593:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 1);
 1967              		.loc 1 593 3 is_stmt 1 view .LVU516
 593:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 1);
 1968              		.loc 1 593 5 is_stmt 0 view .LVU517
 1969 0826 0028     		cmp	r0, #0
 1970 0828 40F00D84 		bne	.L213
 594:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 1971              		.loc 1 594 4 is_stmt 1 view .LVU518
 1972 082c 0122     		movs	r2, #1
 1973 082e 6D21     		movs	r1, #109
 1974              	.LVL268:
 594:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 1975              		.loc 1 594 4 is_stmt 0 view .LVU519
 1976 0830 FFF7FEFF 		bl	tmc4670_writeInt
 1977              	.LVL269:
 595:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1978              		.loc 1 595 4 is_stmt 1 view .LVU520
 595:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1979              		.loc 1 595 13 is_stmt 0 view .LVU521
 1980 0834 6C21     		movs	r1, #108
 1981 0836 2046     		mov	r0, r4
 1982 0838 FFF7FEFF 		bl	tmc4670_readInt
 1983              	.LVL270:
 595:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 1984              		.loc 1 595 11 view .LVU522
 1985 083c 2860     		str	r0, [r5]
 1986 083e 2AE5     		b	.L20
 1987              	.LVL271:
 1988              	.L82:
 602:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 2);
 1989              		.loc 1 602 3 is_stmt 1 view .LVU523
 602:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 2);
 1990              		.loc 1 602 5 is_stmt 0 view .LVU524
 1991 0840 0028     		cmp	r0, #0
 1992 0842 40F00384 		bne	.L214
 603:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 1993              		.loc 1 603 4 is_stmt 1 view .LVU525
 1994 0846 0222     		movs	r2, #2
 1995 0848 6D21     		movs	r1, #109
 1996              	.LVL272:
 603:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 1997              		.loc 1 603 4 is_stmt 0 view .LVU526
 1998 084a FFF7FEFF 		bl	tmc4670_writeInt
 1999              	.LVL273:
 604:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2000              		.loc 1 604 4 is_stmt 1 view .LVU527
 604:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2001              		.loc 1 604 13 is_stmt 0 view .LVU528
 2002 084e 6C21     		movs	r1, #108
 2003 0850 2046     		mov	r0, r4
 2004 0852 FFF7FEFF 		bl	tmc4670_readInt
 2005              	.LVL274:
 604:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2006              		.loc 1 604 11 view .LVU529
 2007 0856 2860     		str	r0, [r5]
 2008 0858 1DE5     		b	.L20
 2009              	.LVL275:
 2010              	.L81:
 611:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 3);
 2011              		.loc 1 611 3 is_stmt 1 view .LVU530
 611:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 3);
 2012              		.loc 1 611 5 is_stmt 0 view .LVU531
 2013 085a 0028     		cmp	r0, #0
 2014 085c 40F0F983 		bne	.L215
 612:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2015              		.loc 1 612 4 is_stmt 1 view .LVU532
 2016 0860 0322     		movs	r2, #3
 2017 0862 6D21     		movs	r1, #109
 2018              	.LVL276:
 612:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2019              		.loc 1 612 4 is_stmt 0 view .LVU533
 2020 0864 FFF7FEFF 		bl	tmc4670_writeInt
 2021              	.LVL277:
 613:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2022              		.loc 1 613 4 is_stmt 1 view .LVU534
 613:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2023              		.loc 1 613 13 is_stmt 0 view .LVU535
 2024 0868 6C21     		movs	r1, #108
 2025 086a 2046     		mov	r0, r4
 2026 086c FFF7FEFF 		bl	tmc4670_readInt
 2027              	.LVL278:
 613:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2028              		.loc 1 613 11 view .LVU536
 2029 0870 2860     		str	r0, [r5]
 2030 0872 10E5     		b	.L20
 2031              	.LVL279:
 2032              	.L80:
 620:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 4);
 2033              		.loc 1 620 3 is_stmt 1 view .LVU537
 620:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 4);
 2034              		.loc 1 620 5 is_stmt 0 view .LVU538
 2035 0874 0028     		cmp	r0, #0
 2036 0876 40F0EF83 		bne	.L216
 621:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2037              		.loc 1 621 4 is_stmt 1 view .LVU539
 2038 087a 0422     		movs	r2, #4
 2039 087c 6D21     		movs	r1, #109
 2040              	.LVL280:
 621:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2041              		.loc 1 621 4 is_stmt 0 view .LVU540
 2042 087e FFF7FEFF 		bl	tmc4670_writeInt
 2043              	.LVL281:
 622:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2044              		.loc 1 622 4 is_stmt 1 view .LVU541
 622:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2045              		.loc 1 622 13 is_stmt 0 view .LVU542
 2046 0882 6C21     		movs	r1, #108
 2047 0884 2046     		mov	r0, r4
 2048 0886 FFF7FEFF 		bl	tmc4670_readInt
 2049              	.LVL282:
 622:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2050              		.loc 1 622 11 view .LVU543
 2051 088a 2860     		str	r0, [r5]
 2052 088c 03E5     		b	.L20
 2053              	.LVL283:
 2054              	.L79:
 629:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 5);
 2055              		.loc 1 629 3 is_stmt 1 view .LVU544
 629:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 5);
 2056              		.loc 1 629 5 is_stmt 0 view .LVU545
 2057 088e 0028     		cmp	r0, #0
 2058 0890 40F0E583 		bne	.L217
 630:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2059              		.loc 1 630 4 is_stmt 1 view .LVU546
 2060 0894 0522     		movs	r2, #5
 2061 0896 6D21     		movs	r1, #109
 2062              	.LVL284:
 630:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2063              		.loc 1 630 4 is_stmt 0 view .LVU547
 2064 0898 FFF7FEFF 		bl	tmc4670_writeInt
 2065              	.LVL285:
 631:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2066              		.loc 1 631 4 is_stmt 1 view .LVU548
 631:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2067              		.loc 1 631 13 is_stmt 0 view .LVU549
 2068 089c 6C21     		movs	r1, #108
 2069 089e 2046     		mov	r0, r4
 2070 08a0 FFF7FEFF 		bl	tmc4670_readInt
 2071              	.LVL286:
 631:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2072              		.loc 1 631 11 view .LVU550
 2073 08a4 2860     		str	r0, [r5]
 2074 08a6 F6E4     		b	.L20
 2075              	.LVL287:
 2076              	.L78:
 638:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 6);
 2077              		.loc 1 638 3 is_stmt 1 view .LVU551
 638:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 6);
 2078              		.loc 1 638 5 is_stmt 0 view .LVU552
 2079 08a8 0028     		cmp	r0, #0
 2080 08aa 40F0DB83 		bne	.L218
 639:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2081              		.loc 1 639 4 is_stmt 1 view .LVU553
 2082 08ae 0622     		movs	r2, #6
 2083 08b0 6D21     		movs	r1, #109
 2084              	.LVL288:
 639:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2085              		.loc 1 639 4 is_stmt 0 view .LVU554
 2086 08b2 FFF7FEFF 		bl	tmc4670_writeInt
 2087              	.LVL289:
 640:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2088              		.loc 1 640 4 is_stmt 1 view .LVU555
 640:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2089              		.loc 1 640 13 is_stmt 0 view .LVU556
 2090 08b6 6C21     		movs	r1, #108
 2091 08b8 2046     		mov	r0, r4
 2092 08ba FFF7FEFF 		bl	tmc4670_readInt
 2093              	.LVL290:
 640:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2094              		.loc 1 640 11 view .LVU557
 2095 08be 2860     		str	r0, [r5]
 2096 08c0 E9E4     		b	.L20
 2097              	.LVL291:
 2098              	.L77:
 647:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 7);
 2099              		.loc 1 647 3 is_stmt 1 view .LVU558
 647:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_PID_ERROR_ADDR, 7);
 2100              		.loc 1 647 5 is_stmt 0 view .LVU559
 2101 08c2 0028     		cmp	r0, #0
 2102 08c4 40F0D183 		bne	.L219
 648:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2103              		.loc 1 648 4 is_stmt 1 view .LVU560
 2104 08c8 0722     		movs	r2, #7
 2105 08ca 6D21     		movs	r1, #109
 2106              	.LVL292:
 648:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_PID_ERROR_DATA);
 2107              		.loc 1 648 4 is_stmt 0 view .LVU561
 2108 08cc FFF7FEFF 		bl	tmc4670_writeInt
 2109              	.LVL293:
 649:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2110              		.loc 1 649 4 is_stmt 1 view .LVU562
 649:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2111              		.loc 1 649 13 is_stmt 0 view .LVU563
 2112 08d0 6C21     		movs	r1, #108
 2113 08d2 2046     		mov	r0, r4
 2114 08d4 FFF7FEFF 		bl	tmc4670_readInt
 2115              	.LVL294:
 649:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2116              		.loc 1 649 11 view .LVU564
 2117 08d8 2860     		str	r0, [r5]
 2118 08da DCE4     		b	.L20
 2119              	.LVL295:
 2120              	.L76:
 656:boards/TMC4670_eval.c **** 			*value = tmc4670_getTargetTorque_raw(motor);
 2121              		.loc 1 656 3 is_stmt 1 view .LVU565
 656:boards/TMC4670_eval.c **** 			*value = tmc4670_getTargetTorque_raw(motor);
 2122              		.loc 1 656 5 is_stmt 0 view .LVU566
 2123 08dc 18B9     		cbnz	r0, .L154
 657:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2124              		.loc 1 657 4 is_stmt 1 view .LVU567
 657:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2125              		.loc 1 657 13 is_stmt 0 view .LVU568
 2126 08de FFF7FEFF 		bl	tmc4670_getTargetTorque_raw
 2127              	.LVL296:
 657:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2128              		.loc 1 657 11 view .LVU569
 2129 08e2 2860     		str	r0, [r5]
 2130 08e4 D7E4     		b	.L20
 2131              	.LVL297:
 2132              	.L154:
 658:boards/TMC4670_eval.c **** 			tmc4670_setTargetTorque_raw(motor, *value);
 2133              		.loc 1 658 10 is_stmt 1 view .LVU570
 659:boards/TMC4670_eval.c **** 		}
 2134              		.loc 1 659 4 view .LVU571
 2135 08e6 2968     		ldr	r1, [r5]
 2136              	.LVL298:
 659:boards/TMC4670_eval.c **** 		}
 2137              		.loc 1 659 4 is_stmt 0 view .LVU572
 2138 08e8 0020     		movs	r0, #0
 2139              	.LVL299:
 659:boards/TMC4670_eval.c **** 		}
 2140              		.loc 1 659 4 view .LVU573
 2141 08ea FFF7FEFF 		bl	tmc4670_setTargetTorque_raw
 2142              	.LVL300:
  81:boards/TMC4670_eval.c **** 
 2143              		.loc 1 81 11 view .LVU574
 2144 08ee 0024     		movs	r4, #0
 2145 08f0 D1E4     		b	.L20
 2146              	.LVL301:
 2147              	.L75:
 664:boards/TMC4670_eval.c **** 			*value = tmc4670_getTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor);
 2148              		.loc 1 664 3 is_stmt 1 view .LVU575
 2149 08f2 774B     		ldr	r3, .L269
 2150 08f4 5989     		ldrh	r1, [r3, #10]
 2151              	.LVL302:
 664:boards/TMC4670_eval.c **** 			*value = tmc4670_getTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor);
 2152              		.loc 1 664 5 is_stmt 0 view .LVU576
 2153 08f6 18B9     		cbnz	r0, .L155
 665:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2154              		.loc 1 665 4 is_stmt 1 view .LVU577
 665:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2155              		.loc 1 665 13 is_stmt 0 view .LVU578
 2156 08f8 FFF7FEFF 		bl	tmc4670_getTargetTorque_mA
 2157              	.LVL303:
 665:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2158              		.loc 1 665 11 view .LVU579
 2159 08fc 2860     		str	r0, [r5]
 2160 08fe CAE4     		b	.L20
 2161              	.LVL304:
 2162              	.L155:
 666:boards/TMC4670_eval.c **** 			tmc4670_setTargetTorque_mA(motor, motorConfig[motor].torqueMeasurementFactor, *value);
 2163              		.loc 1 666 10 is_stmt 1 view .LVU580
 667:boards/TMC4670_eval.c **** 		}
 2164              		.loc 1 667 4 view .LVU581
 2165 0900 2A68     		ldr	r2, [r5]
 2166 0902 0020     		movs	r0, #0
 2167              	.LVL305:
 667:boards/TMC4670_eval.c **** 		}
 2168              		.loc 1 667 4 is_stmt 0 view .LVU582
 2169 0904 FFF7FEFF 		bl	tmc4670_setTargetTorque_mA
 2170              	.LVL306:
  81:boards/TMC4670_eval.c **** 
 2171              		.loc 1 81 11 view .LVU583
 2172 0908 0024     		movs	r4, #0
 2173 090a C4E4     		b	.L20
 2174              	.LVL307:
 2175              	.L74:
 672:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 1);
 2176              		.loc 1 672 3 is_stmt 1 view .LVU584
 672:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 1);
 2177              		.loc 1 672 5 is_stmt 0 view .LVU585
 2178 090c 0028     		cmp	r0, #0
 2179 090e 40F0AF83 		bne	.L220
 673:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2180              		.loc 1 673 4 is_stmt 1 view .LVU586
 2181 0912 0122     		movs	r2, #1
 2182 0914 6F21     		movs	r1, #111
 2183              	.LVL308:
 673:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2184              		.loc 1 673 4 is_stmt 0 view .LVU587
 2185 0916 FFF7FEFF 		bl	tmc4670_writeInt
 2186              	.LVL309:
 674:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2187              		.loc 1 674 4 is_stmt 1 view .LVU588
 674:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2188              		.loc 1 674 13 is_stmt 0 view .LVU589
 2189 091a 6E21     		movs	r1, #110
 2190 091c 2046     		mov	r0, r4
 2191 091e FFF7FEFF 		bl	tmc4670_readInt
 2192              	.LVL310:
 674:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2193              		.loc 1 674 11 view .LVU590
 2194 0922 2860     		str	r0, [r5]
 2195 0924 B7E4     		b	.L20
 2196              	.LVL311:
 2197              	.L73:
 681:boards/TMC4670_eval.c **** 			*value = tmc4670_getTargetVelocity(motor);
 2198              		.loc 1 681 3 is_stmt 1 view .LVU591
 681:boards/TMC4670_eval.c **** 			*value = tmc4670_getTargetVelocity(motor);
 2199              		.loc 1 681 5 is_stmt 0 view .LVU592
 2200 0926 18B9     		cbnz	r0, .L156
 682:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2201              		.loc 1 682 4 is_stmt 1 view .LVU593
 682:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2202              		.loc 1 682 13 is_stmt 0 view .LVU594
 2203 0928 FFF7FEFF 		bl	tmc4670_getTargetVelocity
 2204              	.LVL312:
 682:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2205              		.loc 1 682 11 view .LVU595
 2206 092c 2860     		str	r0, [r5]
 2207 092e B2E4     		b	.L20
 2208              	.LVL313:
 2209              	.L156:
 683:boards/TMC4670_eval.c **** 			tmc4670_setTargetVelocity(motor, *value);
 2210              		.loc 1 683 10 is_stmt 1 view .LVU596
 684:boards/TMC4670_eval.c **** 		}
 2211              		.loc 1 684 4 view .LVU597
 2212 0930 2968     		ldr	r1, [r5]
 2213              	.LVL314:
 684:boards/TMC4670_eval.c **** 		}
 2214              		.loc 1 684 4 is_stmt 0 view .LVU598
 2215 0932 0020     		movs	r0, #0
 2216              	.LVL315:
 684:boards/TMC4670_eval.c **** 		}
 2217              		.loc 1 684 4 view .LVU599
 2218 0934 FFF7FEFF 		bl	tmc4670_setTargetVelocity
 2219              	.LVL316:
  81:boards/TMC4670_eval.c **** 
 2220              		.loc 1 81 11 view .LVU600
 2221 0938 0024     		movs	r4, #0
 2222 093a ACE4     		b	.L20
 2223              	.LVL317:
 2224              	.L72:
 689:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 3);
 2225              		.loc 1 689 3 is_stmt 1 view .LVU601
 689:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 3);
 2226              		.loc 1 689 5 is_stmt 0 view .LVU602
 2227 093c 0028     		cmp	r0, #0
 2228 093e 40F09A83 		bne	.L221
 690:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2229              		.loc 1 690 4 is_stmt 1 view .LVU603
 2230 0942 0322     		movs	r2, #3
 2231 0944 6F21     		movs	r1, #111
 2232              	.LVL318:
 690:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2233              		.loc 1 690 4 is_stmt 0 view .LVU604
 2234 0946 FFF7FEFF 		bl	tmc4670_writeInt
 2235              	.LVL319:
 691:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2236              		.loc 1 691 4 is_stmt 1 view .LVU605
 691:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2237              		.loc 1 691 13 is_stmt 0 view .LVU606
 2238 094a 6E21     		movs	r1, #110
 2239 094c 2046     		mov	r0, r4
 2240 094e FFF7FEFF 		bl	tmc4670_readInt
 2241              	.LVL320:
 691:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2242              		.loc 1 691 11 view .LVU607
 2243 0952 2860     		str	r0, [r5]
 2244 0954 9FE4     		b	.L20
 2245              	.LVL321:
 2246              	.L71:
 698:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 4);
 2247              		.loc 1 698 3 is_stmt 1 view .LVU608
 698:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 4);
 2248              		.loc 1 698 5 is_stmt 0 view .LVU609
 2249 0956 0028     		cmp	r0, #0
 2250 0958 40F09083 		bne	.L222
 699:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2251              		.loc 1 699 4 is_stmt 1 view .LVU610
 2252 095c 0422     		movs	r2, #4
 2253 095e 6F21     		movs	r1, #111
 2254              	.LVL322:
 699:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2255              		.loc 1 699 4 is_stmt 0 view .LVU611
 2256 0960 FFF7FEFF 		bl	tmc4670_writeInt
 2257              	.LVL323:
 700:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2258              		.loc 1 700 4 is_stmt 1 view .LVU612
 700:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2259              		.loc 1 700 13 is_stmt 0 view .LVU613
 2260 0964 6E21     		movs	r1, #110
 2261 0966 2046     		mov	r0, r4
 2262 0968 FFF7FEFF 		bl	tmc4670_readInt
 2263              	.LVL324:
 700:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2264              		.loc 1 700 11 view .LVU614
 2265 096c 2860     		str	r0, [r5]
 2266 096e 92E4     		b	.L20
 2267              	.LVL325:
 2268              	.L70:
 707:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 5);
 2269              		.loc 1 707 3 is_stmt 1 view .LVU615
 707:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 5);
 2270              		.loc 1 707 5 is_stmt 0 view .LVU616
 2271 0970 0028     		cmp	r0, #0
 2272 0972 40F08683 		bne	.L223
 708:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2273              		.loc 1 708 4 is_stmt 1 view .LVU617
 2274 0976 0522     		movs	r2, #5
 2275 0978 6F21     		movs	r1, #111
 2276              	.LVL326:
 708:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2277              		.loc 1 708 4 is_stmt 0 view .LVU618
 2278 097a FFF7FEFF 		bl	tmc4670_writeInt
 2279              	.LVL327:
 709:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2280              		.loc 1 709 4 is_stmt 1 view .LVU619
 709:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2281              		.loc 1 709 13 is_stmt 0 view .LVU620
 2282 097e 6E21     		movs	r1, #110
 2283 0980 2046     		mov	r0, r4
 2284 0982 FFF7FEFF 		bl	tmc4670_readInt
 2285              	.LVL328:
 709:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2286              		.loc 1 709 11 view .LVU621
 2287 0986 2860     		str	r0, [r5]
 2288 0988 85E4     		b	.L20
 2289              	.LVL329:
 2290              	.L69:
 716:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 6);
 2291              		.loc 1 716 3 is_stmt 1 view .LVU622
 716:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 6);
 2292              		.loc 1 716 5 is_stmt 0 view .LVU623
 2293 098a 0028     		cmp	r0, #0
 2294 098c 40F07C83 		bne	.L224
 717:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2295              		.loc 1 717 4 is_stmt 1 view .LVU624
 2296 0990 0622     		movs	r2, #6
 2297 0992 6F21     		movs	r1, #111
 2298              	.LVL330:
 717:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2299              		.loc 1 717 4 is_stmt 0 view .LVU625
 2300 0994 FFF7FEFF 		bl	tmc4670_writeInt
 2301              	.LVL331:
 718:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2302              		.loc 1 718 4 is_stmt 1 view .LVU626
 718:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2303              		.loc 1 718 13 is_stmt 0 view .LVU627
 2304 0998 6E21     		movs	r1, #110
 2305 099a 2046     		mov	r0, r4
 2306 099c FFF7FEFF 		bl	tmc4670_readInt
 2307              	.LVL332:
 718:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2308              		.loc 1 718 11 view .LVU628
 2309 09a0 2860     		str	r0, [r5]
 2310 09a2 78E4     		b	.L20
 2311              	.LVL333:
 2312              	.L68:
 725:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 7);
 2313              		.loc 1 725 3 is_stmt 1 view .LVU629
 725:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 7);
 2314              		.loc 1 725 5 is_stmt 0 view .LVU630
 2315 09a4 0028     		cmp	r0, #0
 2316 09a6 40F07283 		bne	.L225
 726:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2317              		.loc 1 726 4 is_stmt 1 view .LVU631
 2318 09aa 0722     		movs	r2, #7
 2319 09ac 6F21     		movs	r1, #111
 2320              	.LVL334:
 726:boards/TMC4670_eval.c **** 			*value = tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 2321              		.loc 1 726 4 is_stmt 0 view .LVU632
 2322 09ae FFF7FEFF 		bl	tmc4670_writeInt
 2323              	.LVL335:
 727:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2324              		.loc 1 727 4 is_stmt 1 view .LVU633
 727:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2325              		.loc 1 727 13 is_stmt 0 view .LVU634
 2326 09b2 6E21     		movs	r1, #110
 2327 09b4 2046     		mov	r0, r4
 2328 09b6 FFF7FEFF 		bl	tmc4670_readInt
 2329              	.LVL336:
 727:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2330              		.loc 1 727 11 view .LVU635
 2331 09ba 2860     		str	r0, [r5]
 2332 09bc 6BE4     		b	.L20
 2333              	.LVL337:
 2334              	.L67:
 734:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 8);
 2335              		.loc 1 734 3 is_stmt 1 view .LVU636
 734:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 8);
 2336              		.loc 1 734 5 is_stmt 0 view .LVU637
 2337 09be 0028     		cmp	r0, #0
 2338 09c0 40F06883 		bne	.L226
 735:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2339              		.loc 1 735 4 is_stmt 1 view .LVU638
 2340 09c4 0822     		movs	r2, #8
 2341 09c6 6F21     		movs	r1, #111
 2342              	.LVL338:
 735:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2343              		.loc 1 735 4 is_stmt 0 view .LVU639
 2344 09c8 FFF7FEFF 		bl	tmc4670_writeInt
 2345              	.LVL339:
 736:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2346              		.loc 1 736 4 is_stmt 1 view .LVU640
 736:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2347              		.loc 1 736 23 is_stmt 0 view .LVU641
 2348 09cc 2246     		mov	r2, r4
 2349 09ce 6E21     		movs	r1, #110
 2350 09d0 2046     		mov	r0, r4
 2351 09d2 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2352              	.LVL340:
 736:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2353              		.loc 1 736 13 view .LVU642
 2354 09d6 00B2     		sxth	r0, r0
 2355 09d8 2860     		str	r0, [r5]
 2356 09da 5CE4     		b	.L20
 2357              	.LVL341:
 2358              	.L66:
 743:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 8);
 2359              		.loc 1 743 3 is_stmt 1 view .LVU643
 743:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 8);
 2360              		.loc 1 743 5 is_stmt 0 view .LVU644
 2361 09dc 0028     		cmp	r0, #0
 2362 09de 40F05C83 		bne	.L227
 744:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2363              		.loc 1 744 4 is_stmt 1 view .LVU645
 2364 09e2 0822     		movs	r2, #8
 2365 09e4 6F21     		movs	r1, #111
 2366              	.LVL342:
 744:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2367              		.loc 1 744 4 is_stmt 0 view .LVU646
 2368 09e6 FFF7FEFF 		bl	tmc4670_writeInt
 2369              	.LVL343:
 745:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2370              		.loc 1 745 4 is_stmt 1 view .LVU647
 745:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2371              		.loc 1 745 23 is_stmt 0 view .LVU648
 2372 09ea 0122     		movs	r2, #1
 2373 09ec 6E21     		movs	r1, #110
 2374 09ee 2046     		mov	r0, r4
 2375 09f0 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2376              	.LVL344:
 745:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2377              		.loc 1 745 13 view .LVU649
 2378 09f4 00B2     		sxth	r0, r0
 2379 09f6 2860     		str	r0, [r5]
 2380 09f8 4DE4     		b	.L20
 2381              	.LVL345:
 2382              	.L65:
 752:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 9);
 2383              		.loc 1 752 3 is_stmt 1 view .LVU650
 752:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 9);
 2384              		.loc 1 752 5 is_stmt 0 view .LVU651
 2385 09fa 0028     		cmp	r0, #0
 2386 09fc 40F05083 		bne	.L228
 753:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2387              		.loc 1 753 4 is_stmt 1 view .LVU652
 2388 0a00 0922     		movs	r2, #9
 2389 0a02 6F21     		movs	r1, #111
 2390              	.LVL346:
 753:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2391              		.loc 1 753 4 is_stmt 0 view .LVU653
 2392 0a04 FFF7FEFF 		bl	tmc4670_writeInt
 2393              	.LVL347:
 754:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2394              		.loc 1 754 4 is_stmt 1 view .LVU654
 754:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2395              		.loc 1 754 23 is_stmt 0 view .LVU655
 2396 0a08 2246     		mov	r2, r4
 2397 0a0a 6E21     		movs	r1, #110
 2398 0a0c 2046     		mov	r0, r4
 2399 0a0e FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2400              	.LVL348:
 754:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2401              		.loc 1 754 13 view .LVU656
 2402 0a12 00B2     		sxth	r0, r0
 2403 0a14 2860     		str	r0, [r5]
 2404 0a16 3EE4     		b	.L20
 2405              	.LVL349:
 2406              	.L64:
 761:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 10);
 2407              		.loc 1 761 3 is_stmt 1 view .LVU657
 761:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 10);
 2408              		.loc 1 761 5 is_stmt 0 view .LVU658
 2409 0a18 0028     		cmp	r0, #0
 2410 0a1a 40F04483 		bne	.L229
 762:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2411              		.loc 1 762 4 is_stmt 1 view .LVU659
 2412 0a1e 0A22     		movs	r2, #10
 2413 0a20 6F21     		movs	r1, #111
 2414              	.LVL350:
 762:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2415              		.loc 1 762 4 is_stmt 0 view .LVU660
 2416 0a22 FFF7FEFF 		bl	tmc4670_writeInt
 2417              	.LVL351:
 763:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2418              		.loc 1 763 4 is_stmt 1 view .LVU661
 763:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2419              		.loc 1 763 23 is_stmt 0 view .LVU662
 2420 0a26 2246     		mov	r2, r4
 2421 0a28 6E21     		movs	r1, #110
 2422 0a2a 2046     		mov	r0, r4
 2423 0a2c FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2424              	.LVL352:
 763:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2425              		.loc 1 763 13 view .LVU663
 2426 0a30 00B2     		sxth	r0, r0
 2427 0a32 2860     		str	r0, [r5]
 2428 0a34 2FE4     		b	.L20
 2429              	.LVL353:
 2430              	.L63:
 770:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 10);
 2431              		.loc 1 770 3 is_stmt 1 view .LVU664
 770:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 10);
 2432              		.loc 1 770 5 is_stmt 0 view .LVU665
 2433 0a36 0028     		cmp	r0, #0
 2434 0a38 40F03883 		bne	.L230
 771:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2435              		.loc 1 771 4 is_stmt 1 view .LVU666
 2436 0a3c 0A22     		movs	r2, #10
 2437 0a3e 6F21     		movs	r1, #111
 2438              	.LVL354:
 771:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2439              		.loc 1 771 4 is_stmt 0 view .LVU667
 2440 0a40 FFF7FEFF 		bl	tmc4670_writeInt
 2441              	.LVL355:
 772:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2442              		.loc 1 772 4 is_stmt 1 view .LVU668
 772:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2443              		.loc 1 772 23 is_stmt 0 view .LVU669
 2444 0a44 0122     		movs	r2, #1
 2445 0a46 6E21     		movs	r1, #110
 2446 0a48 2046     		mov	r0, r4
 2447 0a4a FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2448              	.LVL356:
 772:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2449              		.loc 1 772 13 view .LVU670
 2450 0a4e 00B2     		sxth	r0, r0
 2451 0a50 2860     		str	r0, [r5]
 2452 0a52 20E4     		b	.L20
 2453              	.LVL357:
 2454              	.L62:
 779:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 11);
 2455              		.loc 1 779 3 is_stmt 1 view .LVU671
 779:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 11);
 2456              		.loc 1 779 5 is_stmt 0 view .LVU672
 2457 0a54 0028     		cmp	r0, #0
 2458 0a56 40F02C83 		bne	.L231
 780:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2459              		.loc 1 780 4 is_stmt 1 view .LVU673
 2460 0a5a 0B22     		movs	r2, #11
 2461 0a5c 6F21     		movs	r1, #111
 2462              	.LVL358:
 780:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2463              		.loc 1 780 4 is_stmt 0 view .LVU674
 2464 0a5e FFF7FEFF 		bl	tmc4670_writeInt
 2465              	.LVL359:
 781:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2466              		.loc 1 781 4 is_stmt 1 view .LVU675
 781:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2467              		.loc 1 781 23 is_stmt 0 view .LVU676
 2468 0a62 2246     		mov	r2, r4
 2469 0a64 6E21     		movs	r1, #110
 2470 0a66 2046     		mov	r0, r4
 2471 0a68 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2472              	.LVL360:
 781:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2473              		.loc 1 781 13 view .LVU677
 2474 0a6c 00B2     		sxth	r0, r0
 2475 0a6e 2860     		str	r0, [r5]
 2476 0a70 11E4     		b	.L20
 2477              	.LVL361:
 2478              	.L61:
 788:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 11);
 2479              		.loc 1 788 3 is_stmt 1 view .LVU678
 788:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 11);
 2480              		.loc 1 788 5 is_stmt 0 view .LVU679
 2481 0a72 0028     		cmp	r0, #0
 2482 0a74 40F02083 		bne	.L232
 789:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2483              		.loc 1 789 4 is_stmt 1 view .LVU680
 2484 0a78 0B22     		movs	r2, #11
 2485 0a7a 6F21     		movs	r1, #111
 2486              	.LVL362:
 789:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2487              		.loc 1 789 4 is_stmt 0 view .LVU681
 2488 0a7c FFF7FEFF 		bl	tmc4670_writeInt
 2489              	.LVL363:
 790:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2490              		.loc 1 790 4 is_stmt 1 view .LVU682
 790:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2491              		.loc 1 790 23 is_stmt 0 view .LVU683
 2492 0a80 0122     		movs	r2, #1
 2493 0a82 6E21     		movs	r1, #110
 2494 0a84 2046     		mov	r0, r4
 2495 0a86 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2496              	.LVL364:
 790:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2497              		.loc 1 790 13 view .LVU684
 2498 0a8a 00B2     		sxth	r0, r0
 2499 0a8c 2860     		str	r0, [r5]
 2500 0a8e 02E4     		b	.L20
 2501              	.LVL365:
 2502              	.L60:
 797:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 12);
 2503              		.loc 1 797 3 is_stmt 1 view .LVU685
 797:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 12);
 2504              		.loc 1 797 5 is_stmt 0 view .LVU686
 2505 0a90 0028     		cmp	r0, #0
 2506 0a92 40F01483 		bne	.L233
 798:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2507              		.loc 1 798 4 is_stmt 1 view .LVU687
 2508 0a96 0C22     		movs	r2, #12
 2509 0a98 6F21     		movs	r1, #111
 2510              	.LVL366:
 798:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2511              		.loc 1 798 4 is_stmt 0 view .LVU688
 2512 0a9a FFF7FEFF 		bl	tmc4670_writeInt
 2513              	.LVL367:
 799:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2514              		.loc 1 799 4 is_stmt 1 view .LVU689
 799:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2515              		.loc 1 799 23 is_stmt 0 view .LVU690
 2516 0a9e 2246     		mov	r2, r4
 2517 0aa0 6E21     		movs	r1, #110
 2518 0aa2 2046     		mov	r0, r4
 2519 0aa4 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2520              	.LVL368:
 799:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2521              		.loc 1 799 13 view .LVU691
 2522 0aa8 00B2     		sxth	r0, r0
 2523 0aaa 2860     		str	r0, [r5]
 2524 0aac FFF7F3BB 		b	.L20
 2525              	.LVL369:
 2526              	.L59:
 806:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 12);
 2527              		.loc 1 806 3 is_stmt 1 view .LVU692
 806:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 12);
 2528              		.loc 1 806 5 is_stmt 0 view .LVU693
 2529 0ab0 0028     		cmp	r0, #0
 2530 0ab2 40F00783 		bne	.L234
 807:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2531              		.loc 1 807 4 is_stmt 1 view .LVU694
 2532 0ab6 0C22     		movs	r2, #12
 2533 0ab8 6F21     		movs	r1, #111
 2534              	.LVL370:
 807:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2535              		.loc 1 807 4 is_stmt 0 view .LVU695
 2536 0aba FFF7FEFF 		bl	tmc4670_writeInt
 2537              	.LVL371:
 808:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2538              		.loc 1 808 4 is_stmt 1 view .LVU696
 808:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2539              		.loc 1 808 23 is_stmt 0 view .LVU697
 2540 0abe 0122     		movs	r2, #1
 2541 0ac0 6E21     		movs	r1, #110
 2542 0ac2 2046     		mov	r0, r4
 2543 0ac4 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2544              	.LVL372:
 808:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2545              		.loc 1 808 13 view .LVU698
 2546 0ac8 00B2     		sxth	r0, r0
 2547 0aca 2860     		str	r0, [r5]
 2548 0acc FFF7E3BB 		b	.L20
 2549              	.L270:
 2550              		.align	2
 2551              	.L269:
 2552 0ad0 00000000 		.word	motorConfig
 2553              	.LVL373:
 2554              	.L58:
 815:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 13);
 2555              		.loc 1 815 3 is_stmt 1 view .LVU699
 815:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 13);
 2556              		.loc 1 815 5 is_stmt 0 view .LVU700
 2557 0ad4 0028     		cmp	r0, #0
 2558 0ad6 40F0F882 		bne	.L235
 816:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2559              		.loc 1 816 4 is_stmt 1 view .LVU701
 2560 0ada 0D22     		movs	r2, #13
 2561 0adc 6F21     		movs	r1, #111
 2562              	.LVL374:
 816:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2563              		.loc 1 816 4 is_stmt 0 view .LVU702
 2564 0ade FFF7FEFF 		bl	tmc4670_writeInt
 2565              	.LVL375:
 817:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2566              		.loc 1 817 4 is_stmt 1 view .LVU703
 817:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2567              		.loc 1 817 23 is_stmt 0 view .LVU704
 2568 0ae2 2246     		mov	r2, r4
 2569 0ae4 6E21     		movs	r1, #110
 2570 0ae6 2046     		mov	r0, r4
 2571 0ae8 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2572              	.LVL376:
 817:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2573              		.loc 1 817 13 view .LVU705
 2574 0aec 00B2     		sxth	r0, r0
 2575 0aee 2860     		str	r0, [r5]
 2576 0af0 FFF7D1BB 		b	.L20
 2577              	.LVL377:
 2578              	.L57:
 824:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 13);
 2579              		.loc 1 824 3 is_stmt 1 view .LVU706
 824:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 13);
 2580              		.loc 1 824 5 is_stmt 0 view .LVU707
 2581 0af4 0028     		cmp	r0, #0
 2582 0af6 40F0EB82 		bne	.L236
 825:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2583              		.loc 1 825 4 is_stmt 1 view .LVU708
 2584 0afa 0D22     		movs	r2, #13
 2585 0afc 6F21     		movs	r1, #111
 2586              	.LVL378:
 825:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2587              		.loc 1 825 4 is_stmt 0 view .LVU709
 2588 0afe FFF7FEFF 		bl	tmc4670_writeInt
 2589              	.LVL379:
 826:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2590              		.loc 1 826 4 is_stmt 1 view .LVU710
 826:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2591              		.loc 1 826 23 is_stmt 0 view .LVU711
 2592 0b02 0122     		movs	r2, #1
 2593 0b04 6E21     		movs	r1, #110
 2594 0b06 2046     		mov	r0, r4
 2595 0b08 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2596              	.LVL380:
 826:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2597              		.loc 1 826 13 view .LVU712
 2598 0b0c 00B2     		sxth	r0, r0
 2599 0b0e 2860     		str	r0, [r5]
 2600 0b10 FFF7C1BB 		b	.L20
 2601              	.LVL381:
 2602              	.L56:
 833:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 14);
 2603              		.loc 1 833 3 is_stmt 1 view .LVU713
 833:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 14);
 2604              		.loc 1 833 5 is_stmt 0 view .LVU714
 2605 0b14 0028     		cmp	r0, #0
 2606 0b16 40F0DE82 		bne	.L237
 834:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2607              		.loc 1 834 4 is_stmt 1 view .LVU715
 2608 0b1a 0E22     		movs	r2, #14
 2609 0b1c 6F21     		movs	r1, #111
 2610              	.LVL382:
 834:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2611              		.loc 1 834 4 is_stmt 0 view .LVU716
 2612 0b1e FFF7FEFF 		bl	tmc4670_writeInt
 2613              	.LVL383:
 835:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2614              		.loc 1 835 4 is_stmt 1 view .LVU717
 835:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2615              		.loc 1 835 23 is_stmt 0 view .LVU718
 2616 0b22 2246     		mov	r2, r4
 2617 0b24 6E21     		movs	r1, #110
 2618 0b26 2046     		mov	r0, r4
 2619 0b28 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2620              	.LVL384:
 835:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2621              		.loc 1 835 13 view .LVU719
 2622 0b2c 00B2     		sxth	r0, r0
 2623 0b2e 2860     		str	r0, [r5]
 2624 0b30 FFF7B1BB 		b	.L20
 2625              	.LVL385:
 2626              	.L55:
 842:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 14);
 2627              		.loc 1 842 3 is_stmt 1 view .LVU720
 842:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 14);
 2628              		.loc 1 842 5 is_stmt 0 view .LVU721
 2629 0b34 0028     		cmp	r0, #0
 2630 0b36 40F0D182 		bne	.L238
 843:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2631              		.loc 1 843 4 is_stmt 1 view .LVU722
 2632 0b3a 0E22     		movs	r2, #14
 2633 0b3c 6F21     		movs	r1, #111
 2634              	.LVL386:
 843:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2635              		.loc 1 843 4 is_stmt 0 view .LVU723
 2636 0b3e FFF7FEFF 		bl	tmc4670_writeInt
 2637              	.LVL387:
 844:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2638              		.loc 1 844 4 is_stmt 1 view .LVU724
 844:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2639              		.loc 1 844 23 is_stmt 0 view .LVU725
 2640 0b42 0122     		movs	r2, #1
 2641 0b44 6E21     		movs	r1, #110
 2642 0b46 2046     		mov	r0, r4
 2643 0b48 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2644              	.LVL388:
 844:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2645              		.loc 1 844 13 view .LVU726
 2646 0b4c 00B2     		sxth	r0, r0
 2647 0b4e 2860     		str	r0, [r5]
 2648 0b50 FFF7A1BB 		b	.L20
 2649              	.LVL389:
 2650              	.L54:
 851:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 15);
 2651              		.loc 1 851 3 is_stmt 1 view .LVU727
 851:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 15);
 2652              		.loc 1 851 5 is_stmt 0 view .LVU728
 2653 0b54 0028     		cmp	r0, #0
 2654 0b56 40F0C482 		bne	.L239
 852:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2655              		.loc 1 852 4 is_stmt 1 view .LVU729
 2656 0b5a 0F22     		movs	r2, #15
 2657 0b5c 6F21     		movs	r1, #111
 2658              	.LVL390:
 852:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2659              		.loc 1 852 4 is_stmt 0 view .LVU730
 2660 0b5e FFF7FEFF 		bl	tmc4670_writeInt
 2661              	.LVL391:
 853:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2662              		.loc 1 853 4 is_stmt 1 view .LVU731
 853:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2663              		.loc 1 853 23 is_stmt 0 view .LVU732
 2664 0b62 2246     		mov	r2, r4
 2665 0b64 6E21     		movs	r1, #110
 2666 0b66 2046     		mov	r0, r4
 2667 0b68 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2668              	.LVL392:
 853:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2669              		.loc 1 853 13 view .LVU733
 2670 0b6c 00B2     		sxth	r0, r0
 2671 0b6e 2860     		str	r0, [r5]
 2672 0b70 FFF791BB 		b	.L20
 2673              	.LVL393:
 2674              	.L53:
 860:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 15);
 2675              		.loc 1 860 3 is_stmt 1 view .LVU734
 860:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 15);
 2676              		.loc 1 860 5 is_stmt 0 view .LVU735
 2677 0b74 0028     		cmp	r0, #0
 2678 0b76 40F0B782 		bne	.L240
 861:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2679              		.loc 1 861 4 is_stmt 1 view .LVU736
 2680 0b7a 0F22     		movs	r2, #15
 2681 0b7c 6F21     		movs	r1, #111
 2682              	.LVL394:
 861:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2683              		.loc 1 861 4 is_stmt 0 view .LVU737
 2684 0b7e FFF7FEFF 		bl	tmc4670_writeInt
 2685              	.LVL395:
 862:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2686              		.loc 1 862 4 is_stmt 1 view .LVU738
 862:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2687              		.loc 1 862 23 is_stmt 0 view .LVU739
 2688 0b82 0122     		movs	r2, #1
 2689 0b84 6E21     		movs	r1, #110
 2690 0b86 2046     		mov	r0, r4
 2691 0b88 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2692              	.LVL396:
 862:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2693              		.loc 1 862 13 view .LVU740
 2694 0b8c 00B2     		sxth	r0, r0
 2695 0b8e 2860     		str	r0, [r5]
 2696 0b90 FFF781BB 		b	.L20
 2697              	.LVL397:
 2698              	.L52:
 869:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 16);
 2699              		.loc 1 869 3 is_stmt 1 view .LVU741
 869:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 16);
 2700              		.loc 1 869 5 is_stmt 0 view .LVU742
 2701 0b94 0028     		cmp	r0, #0
 2702 0b96 40F0AA82 		bne	.L241
 870:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2703              		.loc 1 870 4 is_stmt 1 view .LVU743
 2704 0b9a 1022     		movs	r2, #16
 2705 0b9c 6F21     		movs	r1, #111
 2706              	.LVL398:
 870:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2707              		.loc 1 870 4 is_stmt 0 view .LVU744
 2708 0b9e FFF7FEFF 		bl	tmc4670_writeInt
 2709              	.LVL399:
 871:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2710              		.loc 1 871 4 is_stmt 1 view .LVU745
 871:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2711              		.loc 1 871 23 is_stmt 0 view .LVU746
 2712 0ba2 2246     		mov	r2, r4
 2713 0ba4 6E21     		movs	r1, #110
 2714 0ba6 2046     		mov	r0, r4
 2715 0ba8 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2716              	.LVL400:
 871:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2717              		.loc 1 871 13 view .LVU747
 2718 0bac 00B2     		sxth	r0, r0
 2719 0bae 2860     		str	r0, [r5]
 2720 0bb0 FFF771BB 		b	.L20
 2721              	.LVL401:
 2722              	.L51:
 878:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 17);
 2723              		.loc 1 878 3 is_stmt 1 view .LVU748
 878:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 17);
 2724              		.loc 1 878 5 is_stmt 0 view .LVU749
 2725 0bb4 0028     		cmp	r0, #0
 2726 0bb6 40F09D82 		bne	.L242
 879:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2727              		.loc 1 879 4 is_stmt 1 view .LVU750
 2728 0bba 1122     		movs	r2, #17
 2729 0bbc 6F21     		movs	r1, #111
 2730              	.LVL402:
 879:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2731              		.loc 1 879 4 is_stmt 0 view .LVU751
 2732 0bbe FFF7FEFF 		bl	tmc4670_writeInt
 2733              	.LVL403:
 880:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2734              		.loc 1 880 4 is_stmt 1 view .LVU752
 880:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2735              		.loc 1 880 23 is_stmt 0 view .LVU753
 2736 0bc2 2246     		mov	r2, r4
 2737 0bc4 6E21     		movs	r1, #110
 2738 0bc6 2046     		mov	r0, r4
 2739 0bc8 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2740              	.LVL404:
 880:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2741              		.loc 1 880 13 view .LVU754
 2742 0bcc 00B2     		sxth	r0, r0
 2743 0bce 2860     		str	r0, [r5]
 2744 0bd0 FFF761BB 		b	.L20
 2745              	.LVL405:
 2746              	.L50:
 887:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 17);
 2747              		.loc 1 887 3 is_stmt 1 view .LVU755
 887:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 17);
 2748              		.loc 1 887 5 is_stmt 0 view .LVU756
 2749 0bd4 0028     		cmp	r0, #0
 2750 0bd6 40F09082 		bne	.L243
 888:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2751              		.loc 1 888 4 is_stmt 1 view .LVU757
 2752 0bda 1122     		movs	r2, #17
 2753 0bdc 6F21     		movs	r1, #111
 2754              	.LVL406:
 888:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2755              		.loc 1 888 4 is_stmt 0 view .LVU758
 2756 0bde FFF7FEFF 		bl	tmc4670_writeInt
 2757              	.LVL407:
 889:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2758              		.loc 1 889 4 is_stmt 1 view .LVU759
 889:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2759              		.loc 1 889 23 is_stmt 0 view .LVU760
 2760 0be2 0122     		movs	r2, #1
 2761 0be4 6E21     		movs	r1, #110
 2762 0be6 2046     		mov	r0, r4
 2763 0be8 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2764              	.LVL408:
 889:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2765              		.loc 1 889 13 view .LVU761
 2766 0bec 00B2     		sxth	r0, r0
 2767 0bee 2860     		str	r0, [r5]
 2768 0bf0 FFF751BB 		b	.L20
 2769              	.LVL409:
 2770              	.L49:
 896:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 18);
 2771              		.loc 1 896 3 is_stmt 1 view .LVU762
 896:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 18);
 2772              		.loc 1 896 5 is_stmt 0 view .LVU763
 2773 0bf4 0028     		cmp	r0, #0
 2774 0bf6 40F08382 		bne	.L244
 897:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2775              		.loc 1 897 4 is_stmt 1 view .LVU764
 2776 0bfa 1222     		movs	r2, #18
 2777 0bfc 6F21     		movs	r1, #111
 2778              	.LVL410:
 897:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2779              		.loc 1 897 4 is_stmt 0 view .LVU765
 2780 0bfe FFF7FEFF 		bl	tmc4670_writeInt
 2781              	.LVL411:
 898:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2782              		.loc 1 898 4 is_stmt 1 view .LVU766
 898:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2783              		.loc 1 898 23 is_stmt 0 view .LVU767
 2784 0c02 2246     		mov	r2, r4
 2785 0c04 6E21     		movs	r1, #110
 2786 0c06 2046     		mov	r0, r4
 2787 0c08 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2788              	.LVL412:
 898:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2789              		.loc 1 898 13 view .LVU768
 2790 0c0c 00B2     		sxth	r0, r0
 2791 0c0e 2860     		str	r0, [r5]
 2792 0c10 FFF741BB 		b	.L20
 2793              	.LVL413:
 2794              	.L48:
 905:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 19);
 2795              		.loc 1 905 3 is_stmt 1 view .LVU769
 905:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 19);
 2796              		.loc 1 905 5 is_stmt 0 view .LVU770
 2797 0c14 0028     		cmp	r0, #0
 2798 0c16 40F07682 		bne	.L245
 906:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2799              		.loc 1 906 4 is_stmt 1 view .LVU771
 2800 0c1a 1322     		movs	r2, #19
 2801 0c1c 6F21     		movs	r1, #111
 2802              	.LVL414:
 906:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2803              		.loc 1 906 4 is_stmt 0 view .LVU772
 2804 0c1e FFF7FEFF 		bl	tmc4670_writeInt
 2805              	.LVL415:
 907:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2806              		.loc 1 907 4 is_stmt 1 view .LVU773
 907:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2807              		.loc 1 907 24 is_stmt 0 view .LVU774
 2808 0c22 2246     		mov	r2, r4
 2809 0c24 6E21     		movs	r1, #110
 2810 0c26 2046     		mov	r0, r4
 2811 0c28 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2812              	.LVL416:
 907:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2813              		.loc 1 907 13 view .LVU775
 2814 0c2c 2860     		str	r0, [r5]
 2815 0c2e FFF732BB 		b	.L20
 2816              	.LVL417:
 2817              	.L47:
 914:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 19);
 2818              		.loc 1 914 3 is_stmt 1 view .LVU776
 914:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 19);
 2819              		.loc 1 914 5 is_stmt 0 view .LVU777
 2820 0c32 0028     		cmp	r0, #0
 2821 0c34 40F06A82 		bne	.L246
 915:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2822              		.loc 1 915 4 is_stmt 1 view .LVU778
 2823 0c38 1322     		movs	r2, #19
 2824 0c3a 6F21     		movs	r1, #111
 2825              	.LVL418:
 915:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2826              		.loc 1 915 4 is_stmt 0 view .LVU779
 2827 0c3c FFF7FEFF 		bl	tmc4670_writeInt
 2828              	.LVL419:
 916:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2829              		.loc 1 916 4 is_stmt 1 view .LVU780
 916:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2830              		.loc 1 916 24 is_stmt 0 view .LVU781
 2831 0c40 0122     		movs	r2, #1
 2832 0c42 6E21     		movs	r1, #110
 2833 0c44 2046     		mov	r0, r4
 2834 0c46 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2835              	.LVL420:
 916:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2836              		.loc 1 916 13 view .LVU782
 2837 0c4a 2860     		str	r0, [r5]
 2838 0c4c FFF723BB 		b	.L20
 2839              	.LVL421:
 2840              	.L46:
 923:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 192);
 2841              		.loc 1 923 3 is_stmt 1 view .LVU783
 923:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 192);
 2842              		.loc 1 923 5 is_stmt 0 view .LVU784
 2843 0c50 0028     		cmp	r0, #0
 2844 0c52 40F05E82 		bne	.L247
 924:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2845              		.loc 1 924 4 is_stmt 1 view .LVU785
 2846 0c56 C022     		movs	r2, #192
 2847 0c58 6F21     		movs	r1, #111
 2848              	.LVL422:
 924:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2849              		.loc 1 924 4 is_stmt 0 view .LVU786
 2850 0c5a FFF7FEFF 		bl	tmc4670_writeInt
 2851              	.LVL423:
 925:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2852              		.loc 1 925 4 is_stmt 1 view .LVU787
 925:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2853              		.loc 1 925 23 is_stmt 0 view .LVU788
 2854 0c5e 2246     		mov	r2, r4
 2855 0c60 6E21     		movs	r1, #110
 2856 0c62 2046     		mov	r0, r4
 2857 0c64 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2858              	.LVL424:
 925:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2859              		.loc 1 925 13 view .LVU789
 2860 0c68 00B2     		sxth	r0, r0
 2861 0c6a 2860     		str	r0, [r5]
 2862 0c6c FFF713BB 		b	.L20
 2863              	.LVL425:
 2864              	.L45:
 932:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 192);
 2865              		.loc 1 932 3 is_stmt 1 view .LVU790
 932:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 192);
 2866              		.loc 1 932 5 is_stmt 0 view .LVU791
 2867 0c70 0028     		cmp	r0, #0
 2868 0c72 40F05182 		bne	.L248
 933:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2869              		.loc 1 933 4 is_stmt 1 view .LVU792
 2870 0c76 C022     		movs	r2, #192
 2871 0c78 6F21     		movs	r1, #111
 2872              	.LVL426:
 933:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2873              		.loc 1 933 4 is_stmt 0 view .LVU793
 2874 0c7a FFF7FEFF 		bl	tmc4670_writeInt
 2875              	.LVL427:
 934:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2876              		.loc 1 934 4 is_stmt 1 view .LVU794
 934:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2877              		.loc 1 934 23 is_stmt 0 view .LVU795
 2878 0c7e 0122     		movs	r2, #1
 2879 0c80 6E21     		movs	r1, #110
 2880 0c82 2046     		mov	r0, r4
 2881 0c84 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2882              	.LVL428:
 934:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2883              		.loc 1 934 13 view .LVU796
 2884 0c88 00B2     		sxth	r0, r0
 2885 0c8a 2860     		str	r0, [r5]
 2886 0c8c FFF703BB 		b	.L20
 2887              	.LVL429:
 2888              	.L44:
 941:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 193);
 2889              		.loc 1 941 3 is_stmt 1 view .LVU797
 941:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 193);
 2890              		.loc 1 941 5 is_stmt 0 view .LVU798
 2891 0c90 0028     		cmp	r0, #0
 2892 0c92 40F04482 		bne	.L249
 942:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2893              		.loc 1 942 4 is_stmt 1 view .LVU799
 2894 0c96 C122     		movs	r2, #193
 2895 0c98 6F21     		movs	r1, #111
 2896              	.LVL430:
 942:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2897              		.loc 1 942 4 is_stmt 0 view .LVU800
 2898 0c9a FFF7FEFF 		bl	tmc4670_writeInt
 2899              	.LVL431:
 943:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2900              		.loc 1 943 4 is_stmt 1 view .LVU801
 943:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2901              		.loc 1 943 23 is_stmt 0 view .LVU802
 2902 0c9e 2246     		mov	r2, r4
 2903 0ca0 6E21     		movs	r1, #110
 2904 0ca2 2046     		mov	r0, r4
 2905 0ca4 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2906              	.LVL432:
 943:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2907              		.loc 1 943 13 view .LVU803
 2908 0ca8 00B2     		sxth	r0, r0
 2909 0caa 2860     		str	r0, [r5]
 2910 0cac FFF7F3BA 		b	.L20
 2911              	.LVL433:
 2912              	.L43:
 950:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 193);
 2913              		.loc 1 950 3 is_stmt 1 view .LVU804
 950:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 193);
 2914              		.loc 1 950 5 is_stmt 0 view .LVU805
 2915 0cb0 0028     		cmp	r0, #0
 2916 0cb2 40F03782 		bne	.L250
 951:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2917              		.loc 1 951 4 is_stmt 1 view .LVU806
 2918 0cb6 C122     		movs	r2, #193
 2919 0cb8 6F21     		movs	r1, #111
 2920              	.LVL434:
 951:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2921              		.loc 1 951 4 is_stmt 0 view .LVU807
 2922 0cba FFF7FEFF 		bl	tmc4670_writeInt
 2923              	.LVL435:
 952:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2924              		.loc 1 952 4 is_stmt 1 view .LVU808
 952:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2925              		.loc 1 952 23 is_stmt 0 view .LVU809
 2926 0cbe 0122     		movs	r2, #1
 2927 0cc0 6E21     		movs	r1, #110
 2928 0cc2 2046     		mov	r0, r4
 2929 0cc4 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2930              	.LVL436:
 952:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2931              		.loc 1 952 13 view .LVU810
 2932 0cc8 00B2     		sxth	r0, r0
 2933 0cca 2860     		str	r0, [r5]
 2934 0ccc FFF7E3BA 		b	.L20
 2935              	.LVL437:
 2936              	.L42:
 959:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 194);
 2937              		.loc 1 959 3 is_stmt 1 view .LVU811
 959:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 194);
 2938              		.loc 1 959 5 is_stmt 0 view .LVU812
 2939 0cd0 0028     		cmp	r0, #0
 2940 0cd2 40F02A82 		bne	.L251
 960:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2941              		.loc 1 960 4 is_stmt 1 view .LVU813
 2942 0cd6 C222     		movs	r2, #194
 2943 0cd8 6F21     		movs	r1, #111
 2944              	.LVL438:
 960:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2945              		.loc 1 960 4 is_stmt 0 view .LVU814
 2946 0cda FFF7FEFF 		bl	tmc4670_writeInt
 2947              	.LVL439:
 961:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2948              		.loc 1 961 4 is_stmt 1 view .LVU815
 961:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2949              		.loc 1 961 23 is_stmt 0 view .LVU816
 2950 0cde 2246     		mov	r2, r4
 2951 0ce0 6E21     		movs	r1, #110
 2952 0ce2 2046     		mov	r0, r4
 2953 0ce4 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2954              	.LVL440:
 961:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2955              		.loc 1 961 13 view .LVU817
 2956 0ce8 00B2     		sxth	r0, r0
 2957 0cea 2860     		str	r0, [r5]
 2958 0cec FFF7D3BA 		b	.L20
 2959              	.LVL441:
 2960              	.L41:
 968:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 194);
 2961              		.loc 1 968 3 is_stmt 1 view .LVU818
 968:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 194);
 2962              		.loc 1 968 5 is_stmt 0 view .LVU819
 2963 0cf0 0028     		cmp	r0, #0
 2964 0cf2 40F01D82 		bne	.L252
 969:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2965              		.loc 1 969 4 is_stmt 1 view .LVU820
 2966 0cf6 C222     		movs	r2, #194
 2967 0cf8 6F21     		movs	r1, #111
 2968              	.LVL442:
 969:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 2969              		.loc 1 969 4 is_stmt 0 view .LVU821
 2970 0cfa FFF7FEFF 		bl	tmc4670_writeInt
 2971              	.LVL443:
 970:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2972              		.loc 1 970 4 is_stmt 1 view .LVU822
 970:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2973              		.loc 1 970 23 is_stmt 0 view .LVU823
 2974 0cfe 0122     		movs	r2, #1
 2975 0d00 6E21     		movs	r1, #110
 2976 0d02 2046     		mov	r0, r4
 2977 0d04 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 2978              	.LVL444:
 970:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2979              		.loc 1 970 13 view .LVU824
 2980 0d08 00B2     		sxth	r0, r0
 2981 0d0a 2860     		str	r0, [r5]
 2982 0d0c FFF7C3BA 		b	.L20
 2983              	.LVL445:
 2984              	.L40:
 977:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 195);
 2985              		.loc 1 977 3 is_stmt 1 view .LVU825
 977:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 195);
 2986              		.loc 1 977 5 is_stmt 0 view .LVU826
 2987 0d10 0028     		cmp	r0, #0
 2988 0d12 40F01082 		bne	.L253
 978:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2989              		.loc 1 978 4 is_stmt 1 view .LVU827
 2990 0d16 C322     		movs	r2, #195
 2991 0d18 6F21     		movs	r1, #111
 2992              	.LVL446:
 978:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 2993              		.loc 1 978 4 is_stmt 0 view .LVU828
 2994 0d1a FFF7FEFF 		bl	tmc4670_writeInt
 2995              	.LVL447:
 979:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2996              		.loc 1 979 4 is_stmt 1 view .LVU829
 979:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 2997              		.loc 1 979 23 is_stmt 0 view .LVU830
 2998 0d1e 2246     		mov	r2, r4
 2999 0d20 6E21     		movs	r1, #110
 3000 0d22 2046     		mov	r0, r4
 3001 0d24 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3002              	.LVL448:
 979:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3003              		.loc 1 979 13 view .LVU831
 3004 0d28 00B2     		sxth	r0, r0
 3005 0d2a 2860     		str	r0, [r5]
 3006 0d2c FFF7B3BA 		b	.L20
 3007              	.LVL449:
 3008              	.L39:
 986:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 195);
 3009              		.loc 1 986 3 is_stmt 1 view .LVU832
 986:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 195);
 3010              		.loc 1 986 5 is_stmt 0 view .LVU833
 3011 0d30 0028     		cmp	r0, #0
 3012 0d32 40F00382 		bne	.L254
 987:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3013              		.loc 1 987 4 is_stmt 1 view .LVU834
 3014 0d36 C322     		movs	r2, #195
 3015 0d38 6F21     		movs	r1, #111
 3016              	.LVL450:
 987:boards/TMC4670_eval.c **** 			*value = (int16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3017              		.loc 1 987 4 is_stmt 0 view .LVU835
 3018 0d3a FFF7FEFF 		bl	tmc4670_writeInt
 3019              	.LVL451:
 988:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3020              		.loc 1 988 4 is_stmt 1 view .LVU836
 988:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3021              		.loc 1 988 23 is_stmt 0 view .LVU837
 3022 0d3e 0122     		movs	r2, #1
 3023 0d40 6E21     		movs	r1, #110
 3024 0d42 2046     		mov	r0, r4
 3025 0d44 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3026              	.LVL452:
 988:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3027              		.loc 1 988 13 view .LVU838
 3028 0d48 00B2     		sxth	r0, r0
 3029 0d4a 2860     		str	r0, [r5]
 3030 0d4c FFF7A3BA 		b	.L20
 3031              	.LVL453:
 3032              	.L38:
 995:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 196);
 3033              		.loc 1 995 3 is_stmt 1 view .LVU839
 995:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 196);
 3034              		.loc 1 995 5 is_stmt 0 view .LVU840
 3035 0d50 0028     		cmp	r0, #0
 3036 0d52 40F0F681 		bne	.L255
 996:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 3037              		.loc 1 996 4 is_stmt 1 view .LVU841
 3038 0d56 C422     		movs	r2, #196
 3039 0d58 6F21     		movs	r1, #111
 3040              	.LVL454:
 996:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 3041              		.loc 1 996 4 is_stmt 0 view .LVU842
 3042 0d5a FFF7FEFF 		bl	tmc4670_writeInt
 3043              	.LVL455:
 997:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3044              		.loc 1 997 4 is_stmt 1 view .LVU843
 997:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3045              		.loc 1 997 24 is_stmt 0 view .LVU844
 3046 0d5e 2246     		mov	r2, r4
 3047 0d60 6E21     		movs	r1, #110
 3048 0d62 2046     		mov	r0, r4
 3049 0d64 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3050              	.LVL456:
 997:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3051              		.loc 1 997 13 view .LVU845
 3052 0d68 2860     		str	r0, [r5]
 3053 0d6a FFF794BA 		b	.L20
 3054              	.LVL457:
 3055              	.L37:
1004:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 196);
 3056              		.loc 1 1004 3 is_stmt 1 view .LVU846
1004:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 196);
 3057              		.loc 1 1004 5 is_stmt 0 view .LVU847
 3058 0d6e 0028     		cmp	r0, #0
 3059 0d70 40F0EA81 		bne	.L256
1005:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3060              		.loc 1 1005 4 is_stmt 1 view .LVU848
 3061 0d74 C422     		movs	r2, #196
 3062 0d76 6F21     		movs	r1, #111
 3063              	.LVL458:
1005:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3064              		.loc 1 1005 4 is_stmt 0 view .LVU849
 3065 0d78 FFF7FEFF 		bl	tmc4670_writeInt
 3066              	.LVL459:
1006:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3067              		.loc 1 1006 4 is_stmt 1 view .LVU850
1006:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3068              		.loc 1 1006 24 is_stmt 0 view .LVU851
 3069 0d7c 0122     		movs	r2, #1
 3070 0d7e 6E21     		movs	r1, #110
 3071 0d80 2046     		mov	r0, r4
 3072 0d82 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3073              	.LVL460:
1006:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3074              		.loc 1 1006 13 view .LVU852
 3075 0d86 2860     		str	r0, [r5]
 3076 0d88 FFF785BA 		b	.L20
 3077              	.LVL461:
 3078              	.L36:
1013:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 197);
 3079              		.loc 1 1013 3 is_stmt 1 view .LVU853
1013:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 197);
 3080              		.loc 1 1013 5 is_stmt 0 view .LVU854
 3081 0d8c 0028     		cmp	r0, #0
 3082 0d8e 40F0DE81 		bne	.L257
1014:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 3083              		.loc 1 1014 4 is_stmt 1 view .LVU855
 3084 0d92 C522     		movs	r2, #197
 3085 0d94 6F21     		movs	r1, #111
 3086              	.LVL462:
1014:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 3087              		.loc 1 1014 4 is_stmt 0 view .LVU856
 3088 0d96 FFF7FEFF 		bl	tmc4670_writeInt
 3089              	.LVL463:
1015:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3090              		.loc 1 1015 4 is_stmt 1 view .LVU857
1015:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3091              		.loc 1 1015 24 is_stmt 0 view .LVU858
 3092 0d9a 2246     		mov	r2, r4
 3093 0d9c 6E21     		movs	r1, #110
 3094 0d9e 2046     		mov	r0, r4
 3095 0da0 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3096              	.LVL464:
1015:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3097              		.loc 1 1015 13 view .LVU859
 3098 0da4 2860     		str	r0, [r5]
 3099 0da6 FFF776BA 		b	.L20
 3100              	.LVL465:
 3101              	.L35:
1022:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 197);
 3102              		.loc 1 1022 3 is_stmt 1 view .LVU860
1022:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 197);
 3103              		.loc 1 1022 5 is_stmt 0 view .LVU861
 3104 0daa 0028     		cmp	r0, #0
 3105 0dac 40F0D281 		bne	.L258
1023:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3106              		.loc 1 1023 4 is_stmt 1 view .LVU862
 3107 0db0 C522     		movs	r2, #197
 3108 0db2 6F21     		movs	r1, #111
 3109              	.LVL466:
1023:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3110              		.loc 1 1023 4 is_stmt 0 view .LVU863
 3111 0db4 FFF7FEFF 		bl	tmc4670_writeInt
 3112              	.LVL467:
1024:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3113              		.loc 1 1024 4 is_stmt 1 view .LVU864
1024:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3114              		.loc 1 1024 24 is_stmt 0 view .LVU865
 3115 0db8 0122     		movs	r2, #1
 3116 0dba 6E21     		movs	r1, #110
 3117 0dbc 2046     		mov	r0, r4
 3118 0dbe FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3119              	.LVL468:
1024:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3120              		.loc 1 1024 13 view .LVU866
 3121 0dc2 2860     		str	r0, [r5]
 3122 0dc4 FFF767BA 		b	.L20
 3123              	.LVL469:
 3124              	.L34:
1031:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 198);
 3125              		.loc 1 1031 3 is_stmt 1 view .LVU867
1031:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 198);
 3126              		.loc 1 1031 5 is_stmt 0 view .LVU868
 3127 0dc8 0028     		cmp	r0, #0
 3128 0dca 40F0C681 		bne	.L259
1032:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 3129              		.loc 1 1032 4 is_stmt 1 view .LVU869
 3130 0dce C622     		movs	r2, #198
 3131 0dd0 6F21     		movs	r1, #111
 3132              	.LVL470:
1032:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 3133              		.loc 1 1032 4 is_stmt 0 view .LVU870
 3134 0dd2 FFF7FEFF 		bl	tmc4670_writeInt
 3135              	.LVL471:
1033:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3136              		.loc 1 1033 4 is_stmt 1 view .LVU871
1033:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3137              		.loc 1 1033 24 is_stmt 0 view .LVU872
 3138 0dd6 2246     		mov	r2, r4
 3139 0dd8 6E21     		movs	r1, #110
 3140 0dda 2046     		mov	r0, r4
 3141 0ddc FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3142              	.LVL472:
1033:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3143              		.loc 1 1033 13 view .LVU873
 3144 0de0 2860     		str	r0, [r5]
 3145 0de2 FFF758BA 		b	.L20
 3146              	.LVL473:
 3147              	.L33:
1040:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 198);
 3148              		.loc 1 1040 3 is_stmt 1 view .LVU874
1040:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 198);
 3149              		.loc 1 1040 5 is_stmt 0 view .LVU875
 3150 0de6 0028     		cmp	r0, #0
 3151 0de8 40F0BA81 		bne	.L260
1041:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3152              		.loc 1 1041 4 is_stmt 1 view .LVU876
 3153 0dec C622     		movs	r2, #198
 3154 0dee 6F21     		movs	r1, #111
 3155              	.LVL474:
1041:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3156              		.loc 1 1041 4 is_stmt 0 view .LVU877
 3157 0df0 FFF7FEFF 		bl	tmc4670_writeInt
 3158              	.LVL475:
1042:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3159              		.loc 1 1042 4 is_stmt 1 view .LVU878
1042:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3160              		.loc 1 1042 24 is_stmt 0 view .LVU879
 3161 0df4 0122     		movs	r2, #1
 3162 0df6 6E21     		movs	r1, #110
 3163 0df8 2046     		mov	r0, r4
 3164 0dfa FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3165              	.LVL476:
1042:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3166              		.loc 1 1042 13 view .LVU880
 3167 0dfe 2860     		str	r0, [r5]
 3168 0e00 FFF749BA 		b	.L20
 3169              	.LVL477:
 3170              	.L32:
1049:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 199);
 3171              		.loc 1 1049 3 is_stmt 1 view .LVU881
1049:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 199);
 3172              		.loc 1 1049 5 is_stmt 0 view .LVU882
 3173 0e04 0028     		cmp	r0, #0
 3174 0e06 40F0AE81 		bne	.L261
1050:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 3175              		.loc 1 1050 4 is_stmt 1 view .LVU883
 3176 0e0a C722     		movs	r2, #199
 3177 0e0c 6F21     		movs	r1, #111
 3178              	.LVL478:
1050:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_0_TO_15);
 3179              		.loc 1 1050 4 is_stmt 0 view .LVU884
 3180 0e0e FFF7FEFF 		bl	tmc4670_writeInt
 3181              	.LVL479:
1051:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3182              		.loc 1 1051 4 is_stmt 1 view .LVU885
1051:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3183              		.loc 1 1051 24 is_stmt 0 view .LVU886
 3184 0e12 2246     		mov	r2, r4
 3185 0e14 6E21     		movs	r1, #110
 3186 0e16 2046     		mov	r0, r4
 3187 0e18 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3188              	.LVL480:
1051:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3189              		.loc 1 1051 13 view .LVU887
 3190 0e1c 2860     		str	r0, [r5]
 3191 0e1e FFF73ABA 		b	.L20
 3192              	.LVL481:
 3193              	.L31:
1058:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 199);
 3194              		.loc 1 1058 3 is_stmt 1 view .LVU888
1058:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 199);
 3195              		.loc 1 1058 5 is_stmt 0 view .LVU889
 3196 0e22 0028     		cmp	r0, #0
 3197 0e24 40F0A281 		bne	.L262
1059:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3198              		.loc 1 1059 4 is_stmt 1 view .LVU890
 3199 0e28 C722     		movs	r2, #199
 3200 0e2a 6F21     		movs	r1, #111
 3201              	.LVL482:
1059:boards/TMC4670_eval.c **** 			*value = (uint16_t) tmc4670_readRegister16BitValue(motor, TMC4670_INTERIM_DATA, BIT_16_TO_31);
 3202              		.loc 1 1059 4 is_stmt 0 view .LVU891
 3203 0e2c FFF7FEFF 		bl	tmc4670_writeInt
 3204              	.LVL483:
1060:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3205              		.loc 1 1060 4 is_stmt 1 view .LVU892
1060:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3206              		.loc 1 1060 24 is_stmt 0 view .LVU893
 3207 0e30 0122     		movs	r2, #1
 3208 0e32 6E21     		movs	r1, #110
 3209 0e34 2046     		mov	r0, r4
 3210 0e36 FFF7FEFF 		bl	tmc4670_readRegister16BitValue
 3211              	.LVL484:
1060:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3212              		.loc 1 1060 13 view .LVU894
 3213 0e3a 2860     		str	r0, [r5]
 3214 0e3c FFF72BBA 		b	.L20
 3215              	.LVL485:
 3216              	.L30:
1067:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 200);
 3217              		.loc 1 1067 3 is_stmt 1 view .LVU895
1067:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 200);
 3218              		.loc 1 1067 5 is_stmt 0 view .LVU896
 3219 0e40 0028     		cmp	r0, #0
 3220 0e42 40F09681 		bne	.L263
1068:boards/TMC4670_eval.c **** 			*value =  (int32_t)tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 3221              		.loc 1 1068 4 is_stmt 1 view .LVU897
 3222 0e46 C822     		movs	r2, #200
 3223 0e48 6F21     		movs	r1, #111
 3224              	.LVL486:
1068:boards/TMC4670_eval.c **** 			*value =  (int32_t)tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 3225              		.loc 1 1068 4 is_stmt 0 view .LVU898
 3226 0e4a FFF7FEFF 		bl	tmc4670_writeInt
 3227              	.LVL487:
1069:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3228              		.loc 1 1069 4 is_stmt 1 view .LVU899
1069:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3229              		.loc 1 1069 23 is_stmt 0 view .LVU900
 3230 0e4e 6E21     		movs	r1, #110
 3231 0e50 2046     		mov	r0, r4
 3232 0e52 FFF7FEFF 		bl	tmc4670_readInt
 3233              	.LVL488:
1069:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3234              		.loc 1 1069 11 view .LVU901
 3235 0e56 2860     		str	r0, [r5]
 3236 0e58 FFF71DBA 		b	.L20
 3237              	.LVL489:
 3238              	.L29:
1076:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 201);
 3239              		.loc 1 1076 3 is_stmt 1 view .LVU902
1076:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 201);
 3240              		.loc 1 1076 5 is_stmt 0 view .LVU903
 3241 0e5c 0028     		cmp	r0, #0
 3242 0e5e 40F08B81 		bne	.L264
1077:boards/TMC4670_eval.c **** 			*value =  (int32_t)tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 3243              		.loc 1 1077 4 is_stmt 1 view .LVU904
 3244 0e62 C922     		movs	r2, #201
 3245 0e64 6F21     		movs	r1, #111
 3246              	.LVL490:
1077:boards/TMC4670_eval.c **** 			*value =  (int32_t)tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 3247              		.loc 1 1077 4 is_stmt 0 view .LVU905
 3248 0e66 FFF7FEFF 		bl	tmc4670_writeInt
 3249              	.LVL491:
1078:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3250              		.loc 1 1078 4 is_stmt 1 view .LVU906
1078:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3251              		.loc 1 1078 23 is_stmt 0 view .LVU907
 3252 0e6a 6E21     		movs	r1, #110
 3253 0e6c 2046     		mov	r0, r4
 3254 0e6e FFF7FEFF 		bl	tmc4670_readInt
 3255              	.LVL492:
1078:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3256              		.loc 1 1078 11 view .LVU908
 3257 0e72 2860     		str	r0, [r5]
 3258 0e74 FFF70FBA 		b	.L20
 3259              	.LVL493:
 3260              	.L28:
1085:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 202);
 3261              		.loc 1 1085 3 is_stmt 1 view .LVU909
1085:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 202);
 3262              		.loc 1 1085 5 is_stmt 0 view .LVU910
 3263 0e78 0028     		cmp	r0, #0
 3264 0e7a 40F08081 		bne	.L265
1086:boards/TMC4670_eval.c **** 			*value =  (int32_t) tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 3265              		.loc 1 1086 4 is_stmt 1 view .LVU911
 3266 0e7e CA22     		movs	r2, #202
 3267 0e80 6F21     		movs	r1, #111
 3268              	.LVL494:
1086:boards/TMC4670_eval.c **** 			*value =  (int32_t) tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 3269              		.loc 1 1086 4 is_stmt 0 view .LVU912
 3270 0e82 FFF7FEFF 		bl	tmc4670_writeInt
 3271              	.LVL495:
1087:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3272              		.loc 1 1087 4 is_stmt 1 view .LVU913
1087:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3273              		.loc 1 1087 24 is_stmt 0 view .LVU914
 3274 0e86 6E21     		movs	r1, #110
 3275 0e88 2046     		mov	r0, r4
 3276 0e8a FFF7FEFF 		bl	tmc4670_readInt
 3277              	.LVL496:
1087:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3278              		.loc 1 1087 11 view .LVU915
 3279 0e8e 2860     		str	r0, [r5]
 3280 0e90 FFF701BA 		b	.L20
 3281              	.LVL497:
 3282              	.L27:
1094:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 203);
 3283              		.loc 1 1094 3 is_stmt 1 view .LVU916
1094:boards/TMC4670_eval.c **** 			tmc4670_writeInt(motor, TMC4670_INTERIM_ADDR, 203);
 3284              		.loc 1 1094 5 is_stmt 0 view .LVU917
 3285 0e94 0028     		cmp	r0, #0
 3286 0e96 40F07581 		bne	.L266
1095:boards/TMC4670_eval.c **** 			*value =  (int32_t) tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 3287              		.loc 1 1095 4 is_stmt 1 view .LVU918
 3288 0e9a CB22     		movs	r2, #203
 3289 0e9c 6F21     		movs	r1, #111
 3290              	.LVL498:
1095:boards/TMC4670_eval.c **** 			*value =  (int32_t) tmc4670_readInt(motor, TMC4670_INTERIM_DATA);
 3291              		.loc 1 1095 4 is_stmt 0 view .LVU919
 3292 0e9e FFF7FEFF 		bl	tmc4670_writeInt
 3293              	.LVL499:
1096:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3294              		.loc 1 1096 4 is_stmt 1 view .LVU920
1096:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3295              		.loc 1 1096 24 is_stmt 0 view .LVU921
 3296 0ea2 6E21     		movs	r1, #110
 3297 0ea4 2046     		mov	r0, r4
 3298 0ea6 FFF7FEFF 		bl	tmc4670_readInt
 3299              	.LVL500:
1096:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3300              		.loc 1 1096 11 view .LVU922
 3301 0eaa 2860     		str	r0, [r5]
 3302 0eac FFF7F3B9 		b	.L20
 3303              	.LVL501:
 3304              	.L26:
1103:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].torqueMeasurementFactor;
 3305              		.loc 1 1103 3 is_stmt 1 view .LVU923
 3306 0eb0 B94B     		ldr	r3, .L271
1103:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].torqueMeasurementFactor;
 3307              		.loc 1 1103 5 is_stmt 0 view .LVU924
 3308 0eb2 18B9     		cbnz	r0, .L157
1104:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3309              		.loc 1 1104 4 is_stmt 1 view .LVU925
1104:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3310              		.loc 1 1104 31 is_stmt 0 view .LVU926
 3311 0eb4 5B89     		ldrh	r3, [r3, #10]
 3312 0eb6 2B60     		str	r3, [r5]
 3313 0eb8 FFF7EDB9 		b	.L20
 3314              	.L157:
1105:boards/TMC4670_eval.c **** 			motorConfig[motor].torqueMeasurementFactor = *value;
 3315              		.loc 1 1105 10 is_stmt 1 view .LVU927
1106:boards/TMC4670_eval.c **** 		}
 3316              		.loc 1 1106 4 view .LVU928
1106:boards/TMC4670_eval.c **** 		}
 3317              		.loc 1 1106 47 is_stmt 0 view .LVU929
 3318 0ebc 2A68     		ldr	r2, [r5]
 3319 0ebe 5A81     		strh	r2, [r3, #10]	@ movhi
  81:boards/TMC4670_eval.c **** 
 3320              		.loc 1 81 11 view .LVU930
 3321 0ec0 0024     		movs	r4, #0
 3322 0ec2 FFF7E8B9 		b	.L20
 3323              	.L25:
1111:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].initMode;
 3324              		.loc 1 1111 3 is_stmt 1 view .LVU931
1111:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].initMode;
 3325              		.loc 1 1111 5 is_stmt 0 view .LVU932
 3326 0ec6 20B9     		cbnz	r0, .L158
1112:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3327              		.loc 1 1112 4 is_stmt 1 view .LVU933
1112:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3328              		.loc 1 1112 31 is_stmt 0 view .LVU934
 3329 0ec8 B34B     		ldr	r3, .L271
 3330 0eca 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 3331 0ecc 2B60     		str	r3, [r5]
 3332 0ece FFF7E2B9 		b	.L20
 3333              	.L158:
1113:boards/TMC4670_eval.c **** 			tmc4670_startEncoderInitialization(*value, &motorConfig[motor].initMode, &motorConfig[motor].ini
 3334              		.loc 1 1113 10 is_stmt 1 view .LVU935
1114:boards/TMC4670_eval.c **** 		}
 3335              		.loc 1 1114 4 view .LVU936
 3336 0ed2 B24A     		ldr	r2, .L271+4
 3337 0ed4 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 3338              	.LVL502:
1114:boards/TMC4670_eval.c **** 		}
 3339              		.loc 1 1114 4 is_stmt 0 view .LVU937
 3340 0ed6 511C     		adds	r1, r2, #1
 3341              	.LVL503:
1114:boards/TMC4670_eval.c **** 		}
 3342              		.loc 1 1114 4 view .LVU938
 3343 0ed8 FFF7FEFF 		bl	tmc4670_startEncoderInitialization
 3344              	.LVL504:
  81:boards/TMC4670_eval.c **** 
 3345              		.loc 1 81 11 view .LVU939
 3346 0edc 0024     		movs	r4, #0
 3347 0ede FFF7DAB9 		b	.L20
 3348              	.LVL505:
 3349              	.L24:
1119:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].initState;
 3350              		.loc 1 1119 3 is_stmt 1 view .LVU940
1119:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].initState;
 3351              		.loc 1 1119 5 is_stmt 0 view .LVU941
 3352 0ee2 0028     		cmp	r0, #0
 3353 0ee4 40F05181 		bne	.L267
1120:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3354              		.loc 1 1120 4 is_stmt 1 view .LVU942
1120:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3355              		.loc 1 1120 31 is_stmt 0 view .LVU943
 3356 0ee8 AB4B     		ldr	r3, .L271
 3357 0eea 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 3358 0eec 2B60     		str	r3, [r5]
 3359 0eee FFF7D2B9 		b	.L20
 3360              	.L22:
1127:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].actualInitWaitTime;
 3361              		.loc 1 1127 3 is_stmt 1 view .LVU944
1127:boards/TMC4670_eval.c **** 			*value = motorConfig[motor].actualInitWaitTime;
 3362              		.loc 1 1127 5 is_stmt 0 view .LVU945
 3363 0ef2 0028     		cmp	r0, #0
 3364 0ef4 40F04C81 		bne	.L268
1128:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3365              		.loc 1 1128 4 is_stmt 1 view .LVU946
1128:boards/TMC4670_eval.c **** 		} else if(readWrite == WRITE) {
 3366              		.loc 1 1128 31 is_stmt 0 view .LVU947
 3367 0ef8 A74B     		ldr	r3, .L271
 3368 0efa DB88     		ldrh	r3, [r3, #6]
 3369 0efc 2B60     		str	r3, [r5]
 3370 0efe FFF7CAB9 		b	.L20
 3371              	.LVL506:
 3372              	.L159:
  84:boards/TMC4670_eval.c **** 
 3373              		.loc 1 84 10 view .LVU948
 3374 0f02 0824     		movs	r4, #8
 3375 0f04 FFF7C7B9 		b	.L20
 3376              	.LVL507:
 3377              	.L160:
  83:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 3378              		.loc 1 83 4 view .LVU949
 3379 0f08 0424     		movs	r4, #4
 3380 0f0a FFF7C4B9 		b	.L20
 3381              	.L161:
 131:boards/TMC4670_eval.c **** 		}
 3382              		.loc 1 131 11 view .LVU950
 3383 0f0e 0424     		movs	r4, #4
 3384 0f10 FFF7C1B9 		b	.L20
 3385              	.L162:
 3386 0f14 0424     		movs	r4, #4
 3387 0f16 FFF7BEB9 		b	.L20
 3388              	.L163:
 3389 0f1a 0424     		movs	r4, #4
 3390 0f1c FFF7BBB9 		b	.L20
 3391              	.L164:
 3392 0f20 0424     		movs	r4, #4
 3393 0f22 FFF7B8B9 		b	.L20
 3394              	.L165:
 3395 0f26 0424     		movs	r4, #4
 3396 0f28 FFF7B5B9 		b	.L20
 3397              	.L166:
 3398 0f2c 0424     		movs	r4, #4
 3399 0f2e FFF7B2B9 		b	.L20
 3400              	.L167:
 3401 0f32 0424     		movs	r4, #4
 3402 0f34 FFF7AFB9 		b	.L20
 3403              	.L168:
 3404 0f38 0424     		movs	r4, #4
 3405 0f3a FFF7ACB9 		b	.L20
 3406              	.L169:
 3407 0f3e 0424     		movs	r4, #4
 3408 0f40 FFF7A9B9 		b	.L20
 3409              	.L170:
 3410 0f44 0424     		movs	r4, #4
 3411 0f46 FFF7A6B9 		b	.L20
 3412              	.L171:
 3413 0f4a 0424     		movs	r4, #4
 3414 0f4c FFF7A3B9 		b	.L20
 3415              	.L172:
 3416 0f50 0424     		movs	r4, #4
 3417 0f52 FFF7A0B9 		b	.L20
 3418              	.L173:
 3419 0f56 0424     		movs	r4, #4
 3420 0f58 FFF79DB9 		b	.L20
 3421              	.L174:
 3422 0f5c 0424     		movs	r4, #4
 3423 0f5e FFF79AB9 		b	.L20
 3424              	.L175:
 3425 0f62 0424     		movs	r4, #4
 3426 0f64 FFF797B9 		b	.L20
 3427              	.L176:
 3428 0f68 0424     		movs	r4, #4
 3429 0f6a FFF794B9 		b	.L20
 3430              	.L177:
 3431 0f6e 0424     		movs	r4, #4
 3432 0f70 FFF791B9 		b	.L20
 3433              	.L178:
 3434 0f74 0424     		movs	r4, #4
 3435 0f76 FFF78EB9 		b	.L20
 3436              	.L179:
 3437 0f7a 0424     		movs	r4, #4
 3438 0f7c FFF78BB9 		b	.L20
 3439              	.L180:
 3440 0f80 0424     		movs	r4, #4
 3441 0f82 FFF788B9 		b	.L20
 3442              	.L181:
 3443 0f86 0424     		movs	r4, #4
 3444 0f88 FFF785B9 		b	.L20
 3445              	.L182:
 3446 0f8c 0424     		movs	r4, #4
 3447 0f8e FFF782B9 		b	.L20
 3448              	.L183:
 3449 0f92 0424     		movs	r4, #4
 3450 0f94 FFF77FB9 		b	.L20
 3451              	.L184:
 3452 0f98 0424     		movs	r4, #4
 3453 0f9a FFF77CB9 		b	.L20
 3454              	.L185:
 3455 0f9e 0424     		movs	r4, #4
 3456 0fa0 FFF779B9 		b	.L20
 3457              	.L186:
 3458 0fa4 0424     		movs	r4, #4
 3459 0fa6 FFF776B9 		b	.L20
 3460              	.L187:
 3461 0faa 0424     		movs	r4, #4
 3462 0fac FFF773B9 		b	.L20
 3463              	.L188:
 3464 0fb0 0424     		movs	r4, #4
 3465 0fb2 FFF770B9 		b	.L20
 3466              	.L189:
 3467 0fb6 0424     		movs	r4, #4
 3468 0fb8 FFF76DB9 		b	.L20
 3469              	.L190:
 3470 0fbc 0424     		movs	r4, #4
 3471 0fbe FFF76AB9 		b	.L20
 3472              	.L191:
 3473 0fc2 0424     		movs	r4, #4
 3474 0fc4 FFF767B9 		b	.L20
 3475              	.L192:
 3476 0fc8 0424     		movs	r4, #4
 3477 0fca FFF764B9 		b	.L20
 3478              	.L193:
 3479 0fce 0424     		movs	r4, #4
 3480 0fd0 FFF761B9 		b	.L20
 3481              	.L194:
 3482 0fd4 0424     		movs	r4, #4
 3483 0fd6 FFF75EB9 		b	.L20
 3484              	.L195:
 3485 0fda 0424     		movs	r4, #4
 3486 0fdc FFF75BB9 		b	.L20
 3487              	.L196:
 3488 0fe0 0424     		movs	r4, #4
 3489 0fe2 FFF758B9 		b	.L20
 3490              	.L197:
 3491 0fe6 0424     		movs	r4, #4
 3492 0fe8 FFF755B9 		b	.L20
 3493              	.L198:
 3494 0fec 0424     		movs	r4, #4
 3495 0fee FFF752B9 		b	.L20
 3496              	.L199:
 3497 0ff2 0424     		movs	r4, #4
 3498 0ff4 FFF74FB9 		b	.L20
 3499              	.L200:
 3500 0ff8 0424     		movs	r4, #4
 3501 0ffa FFF74CB9 		b	.L20
 3502              	.L201:
 3503 0ffe 0424     		movs	r4, #4
 3504 1000 FFF749B9 		b	.L20
 3505              	.L202:
 3506 1004 0424     		movs	r4, #4
 3507 1006 FFF746B9 		b	.L20
 3508              	.L203:
 3509 100a 0424     		movs	r4, #4
 3510 100c FFF743B9 		b	.L20
 3511              	.L204:
 3512 1010 0424     		movs	r4, #4
 3513 1012 FFF740B9 		b	.L20
 3514              	.L205:
 3515 1016 0424     		movs	r4, #4
 3516 1018 FFF73DB9 		b	.L20
 3517              	.L206:
 3518 101c 0424     		movs	r4, #4
 3519 101e FFF73AB9 		b	.L20
 3520              	.L207:
 3521 1022 0424     		movs	r4, #4
 3522 1024 FFF737B9 		b	.L20
 3523              	.L208:
 3524 1028 0424     		movs	r4, #4
 3525 102a FFF734B9 		b	.L20
 3526              	.L209:
 3527 102e 0424     		movs	r4, #4
 3528 1030 FFF731B9 		b	.L20
 3529              	.L210:
 3530 1034 0424     		movs	r4, #4
 3531 1036 FFF72EB9 		b	.L20
 3532              	.L211:
 3533 103a 0424     		movs	r4, #4
 3534 103c FFF72BB9 		b	.L20
 3535              	.L212:
 3536 1040 0424     		movs	r4, #4
 3537 1042 FFF728B9 		b	.L20
 3538              	.L213:
 3539 1046 0424     		movs	r4, #4
 3540 1048 FFF725B9 		b	.L20
 3541              	.L214:
 3542 104c 0424     		movs	r4, #4
 3543 104e FFF722B9 		b	.L20
 3544              	.L215:
 3545 1052 0424     		movs	r4, #4
 3546 1054 FFF71FB9 		b	.L20
 3547              	.L216:
 3548 1058 0424     		movs	r4, #4
 3549 105a FFF71CB9 		b	.L20
 3550              	.L217:
 3551 105e 0424     		movs	r4, #4
 3552 1060 FFF719B9 		b	.L20
 3553              	.L218:
 3554 1064 0424     		movs	r4, #4
 3555 1066 FFF716B9 		b	.L20
 3556              	.L219:
 3557 106a 0424     		movs	r4, #4
 3558 106c FFF713B9 		b	.L20
 3559              	.L220:
 3560 1070 0424     		movs	r4, #4
 3561 1072 FFF710B9 		b	.L20
 3562              	.L221:
 3563 1076 0424     		movs	r4, #4
 3564 1078 FFF70DB9 		b	.L20
 3565              	.L222:
 3566 107c 0424     		movs	r4, #4
 3567 107e FFF70AB9 		b	.L20
 3568              	.L223:
 3569 1082 0424     		movs	r4, #4
 3570 1084 FFF707B9 		b	.L20
 3571              	.L224:
 3572 1088 0424     		movs	r4, #4
 3573 108a FFF704B9 		b	.L20
 3574              	.L225:
 3575 108e 0424     		movs	r4, #4
 3576 1090 FFF701B9 		b	.L20
 3577              	.L226:
 3578 1094 0424     		movs	r4, #4
 3579 1096 FFF7FEB8 		b	.L20
 3580              	.L227:
 3581 109a 0424     		movs	r4, #4
 3582 109c FFF7FBB8 		b	.L20
 3583              	.L228:
 3584 10a0 0424     		movs	r4, #4
 3585 10a2 FFF7F8B8 		b	.L20
 3586              	.L229:
 3587 10a6 0424     		movs	r4, #4
 3588 10a8 FFF7F5B8 		b	.L20
 3589              	.L230:
 3590 10ac 0424     		movs	r4, #4
 3591 10ae FFF7F2B8 		b	.L20
 3592              	.L231:
 3593 10b2 0424     		movs	r4, #4
 3594 10b4 FFF7EFB8 		b	.L20
 3595              	.L232:
 3596 10b8 0424     		movs	r4, #4
 3597 10ba FFF7ECB8 		b	.L20
 3598              	.L233:
 3599 10be 0424     		movs	r4, #4
 3600 10c0 FFF7E9B8 		b	.L20
 3601              	.L234:
 3602 10c4 0424     		movs	r4, #4
 3603 10c6 FFF7E6B8 		b	.L20
 3604              	.L235:
 3605 10ca 0424     		movs	r4, #4
 3606 10cc FFF7E3B8 		b	.L20
 3607              	.L236:
 3608 10d0 0424     		movs	r4, #4
 3609 10d2 FFF7E0B8 		b	.L20
 3610              	.L237:
 3611 10d6 0424     		movs	r4, #4
 3612 10d8 FFF7DDB8 		b	.L20
 3613              	.L238:
 3614 10dc 0424     		movs	r4, #4
 3615 10de FFF7DAB8 		b	.L20
 3616              	.L239:
 3617 10e2 0424     		movs	r4, #4
 3618 10e4 FFF7D7B8 		b	.L20
 3619              	.L240:
 3620 10e8 0424     		movs	r4, #4
 3621 10ea FFF7D4B8 		b	.L20
 3622              	.L241:
 3623 10ee 0424     		movs	r4, #4
 3624 10f0 FFF7D1B8 		b	.L20
 3625              	.L242:
 3626 10f4 0424     		movs	r4, #4
 3627 10f6 FFF7CEB8 		b	.L20
 3628              	.L243:
 3629 10fa 0424     		movs	r4, #4
 3630 10fc FFF7CBB8 		b	.L20
 3631              	.L244:
 3632 1100 0424     		movs	r4, #4
 3633 1102 FFF7C8B8 		b	.L20
 3634              	.L245:
 3635 1106 0424     		movs	r4, #4
 3636 1108 FFF7C5B8 		b	.L20
 3637              	.L246:
 3638 110c 0424     		movs	r4, #4
 3639 110e FFF7C2B8 		b	.L20
 3640              	.L247:
 3641 1112 0424     		movs	r4, #4
 3642 1114 FFF7BFB8 		b	.L20
 3643              	.L248:
 3644 1118 0424     		movs	r4, #4
 3645 111a FFF7BCB8 		b	.L20
 3646              	.L249:
 3647 111e 0424     		movs	r4, #4
 3648 1120 FFF7B9B8 		b	.L20
 3649              	.L250:
 3650 1124 0424     		movs	r4, #4
 3651 1126 FFF7B6B8 		b	.L20
 3652              	.L251:
 3653 112a 0424     		movs	r4, #4
 3654 112c FFF7B3B8 		b	.L20
 3655              	.L252:
 3656 1130 0424     		movs	r4, #4
 3657 1132 FFF7B0B8 		b	.L20
 3658              	.L253:
 3659 1136 0424     		movs	r4, #4
 3660 1138 FFF7ADB8 		b	.L20
 3661              	.L254:
 3662 113c 0424     		movs	r4, #4
 3663 113e FFF7AAB8 		b	.L20
 3664              	.L255:
 3665 1142 0424     		movs	r4, #4
 3666 1144 FFF7A7B8 		b	.L20
 3667              	.L256:
 3668 1148 0424     		movs	r4, #4
 3669 114a FFF7A4B8 		b	.L20
 3670              	.L257:
 3671 114e 0424     		movs	r4, #4
 3672 1150 FFF7A1B8 		b	.L20
 3673              	.L258:
 3674 1154 0424     		movs	r4, #4
 3675 1156 FFF79EB8 		b	.L20
 3676              	.L259:
 3677 115a 0424     		movs	r4, #4
 3678 115c FFF79BB8 		b	.L20
 3679              	.L260:
 3680 1160 0424     		movs	r4, #4
 3681 1162 FFF798B8 		b	.L20
 3682              	.L261:
 3683 1166 0424     		movs	r4, #4
 3684 1168 FFF795B8 		b	.L20
 3685              	.L262:
 3686 116c 0424     		movs	r4, #4
 3687 116e FFF792B8 		b	.L20
 3688              	.L263:
 3689 1172 0424     		movs	r4, #4
 3690 1174 FFF78FB8 		b	.L20
 3691              	.L264:
 3692 1178 0424     		movs	r4, #4
 3693 117a FFF78CB8 		b	.L20
 3694              	.L265:
 3695 117e 0424     		movs	r4, #4
 3696 1180 FFF789B8 		b	.L20
 3697              	.L266:
 3698 1184 0424     		movs	r4, #4
 3699 1186 FFF786B8 		b	.L20
 3700              	.L267:
 3701 118a 0424     		movs	r4, #4
 3702 118c FFF783B8 		b	.L20
 3703              	.L268:
 3704 1190 0424     		movs	r4, #4
 3705              	.LVL508:
 131:boards/TMC4670_eval.c **** 		}
 3706              		.loc 1 131 11 view .LVU951
 3707 1192 FFF780B8 		b	.L20
 3708              	.L272:
 3709 1196 00BF     		.align	2
 3710              	.L271:
 3711 1198 00000000 		.word	motorConfig
 3712 119c 08000000 		.word	motorConfig+8
 3713              		.cfi_endproc
 3714              	.LFE8:
 3716              		.align	1
 3717              		.syntax unified
 3718              		.thumb
 3719              		.thumb_func
 3720              		.fpu softvfp
 3722              	SAP:
 3723              	.LVL509:
 3724              	.LFB13:
1175:boards/TMC4670_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3725              		.loc 1 1175 1 is_stmt 1 view -0
 3726              		.cfi_startproc
 3727              		@ args = 0, pretend = 0, frame = 8
 3728              		@ frame_needed = 0, uses_anonymous_args = 0
1176:boards/TMC4670_eval.c **** }
 3729              		.loc 1 1176 2 view .LVU953
1175:boards/TMC4670_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3730              		.loc 1 1175 1 is_stmt 0 view .LVU954
 3731 11a0 07B5     		push	{r0, r1, r2, lr}
 3732              	.LCFI6:
 3733              		.cfi_def_cfa_offset 16
 3734              		.cfi_offset 14, -4
1175:boards/TMC4670_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3735              		.loc 1 1175 1 view .LVU955
 3736 11a2 0192     		str	r2, [sp, #4]
1176:boards/TMC4670_eval.c **** }
 3737              		.loc 1 1176 9 view .LVU956
 3738 11a4 01AB     		add	r3, sp, #4
 3739 11a6 0246     		mov	r2, r0
 3740              	.LVL510:
1176:boards/TMC4670_eval.c **** }
 3741              		.loc 1 1176 9 view .LVU957
 3742 11a8 0120     		movs	r0, #1
 3743              	.LVL511:
1176:boards/TMC4670_eval.c **** }
 3744              		.loc 1 1176 9 view .LVU958
 3745 11aa FEF768FF 		bl	handleParameter
 3746              	.LVL512:
1177:boards/TMC4670_eval.c **** 
 3747              		.loc 1 1177 1 view .LVU959
 3748 11ae 03B0     		add	sp, sp, #12
 3749              	.LCFI7:
 3750              		.cfi_def_cfa_offset 4
 3751              		@ sp needed
 3752 11b0 5DF804FB 		ldr	pc, [sp], #4
 3753              		.cfi_endproc
 3754              	.LFE13:
 3756              		.align	1
 3757              		.syntax unified
 3758              		.thumb
 3759              		.thumb_func
 3760              		.fpu softvfp
 3762              	GAP:
 3763              	.LVL513:
 3764              	.LFB14:
1180:boards/TMC4670_eval.c **** 	return handleParameter(READ, motor, type, value);
 3765              		.loc 1 1180 1 is_stmt 1 view -0
 3766              		.cfi_startproc
 3767              		@ args = 0, pretend = 0, frame = 0
 3768              		@ frame_needed = 0, uses_anonymous_args = 0
 3769              		@ link register save eliminated.
1181:boards/TMC4670_eval.c **** }
 3770              		.loc 1 1181 2 view .LVU961
1180:boards/TMC4670_eval.c **** 	return handleParameter(READ, motor, type, value);
 3771              		.loc 1 1180 1 is_stmt 0 view .LVU962
 3772 11b4 1346     		mov	r3, r2
1181:boards/TMC4670_eval.c **** }
 3773              		.loc 1 1181 9 view .LVU963
 3774 11b6 0246     		mov	r2, r0
 3775              	.LVL514:
1181:boards/TMC4670_eval.c **** }
 3776              		.loc 1 1181 9 view .LVU964
 3777 11b8 0020     		movs	r0, #0
 3778              	.LVL515:
1181:boards/TMC4670_eval.c **** }
 3779              		.loc 1 1181 9 view .LVU965
 3780 11ba FEF760BF 		b	handleParameter
 3781              	.LVL516:
1181:boards/TMC4670_eval.c **** }
 3782              		.loc 1 1181 9 view .LVU966
 3783              		.cfi_endproc
 3784              	.LFE14:
 3786              		.align	1
 3787              		.syntax unified
 3788              		.thumb
 3789              		.thumb_func
 3790              		.fpu softvfp
 3792              	enableDriver:
 3793              	.LVL517:
 3794              	.LFB16:
1193:boards/TMC4670_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 3795              		.loc 1 1193 1 is_stmt 1 view -0
 3796              		.cfi_startproc
 3797              		@ args = 0, pretend = 0, frame = 0
 3798              		@ frame_needed = 0, uses_anonymous_args = 0
 3799              		@ link register save eliminated.
1194:boards/TMC4670_eval.c **** 		state = Evalboards.driverEnable;
 3800              		.loc 1 1194 2 view .LVU968
1194:boards/TMC4670_eval.c **** 		state = Evalboards.driverEnable;
 3801              		.loc 1 1194 4 is_stmt 0 view .LVU969
 3802 11be 0228     		cmp	r0, #2
1195:boards/TMC4670_eval.c **** 
 3803              		.loc 1 1195 3 is_stmt 1 view .LVU970
1195:boards/TMC4670_eval.c **** 
 3804              		.loc 1 1195 9 is_stmt 0 view .LVU971
 3805 11c0 04BF     		itt	eq
 3806 11c2 0C4B     		ldreq	r3, .L280
 3807 11c4 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 3808              	.LVL518:
1197:boards/TMC4670_eval.c **** 		HAL.IOs->config->setLow(PIN_DRV_ENN);
 3809              		.loc 1 1197 2 is_stmt 1 view .LVU972
1197:boards/TMC4670_eval.c **** 		HAL.IOs->config->setLow(PIN_DRV_ENN);
 3810              		.loc 1 1197 4 is_stmt 0 view .LVU973
 3811 11c8 30B9     		cbnz	r0, .L277
1198:boards/TMC4670_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 3812              		.loc 1 1198 3 is_stmt 1 view .LVU974
1198:boards/TMC4670_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 3813              		.loc 1 1198 6 is_stmt 0 view .LVU975
 3814 11ca 0B4B     		ldr	r3, .L280+4
1198:boards/TMC4670_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 3815              		.loc 1 1198 10 view .LVU976
 3816 11cc DB68     		ldr	r3, [r3, #12]
1198:boards/TMC4670_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 3817              		.loc 1 1198 18 view .LVU977
 3818 11ce 1B68     		ldr	r3, [r3]
1198:boards/TMC4670_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 3819              		.loc 1 1198 3 view .LVU978
 3820 11d0 9B69     		ldr	r3, [r3, #24]
 3821              	.L279:
 3822              	.LBB4:
 3823              	.LBB5:
1200:boards/TMC4670_eval.c **** }
 3824              		.loc 1 1200 3 view .LVU979
 3825 11d2 0A4A     		ldr	r2, .L280+8
 3826 11d4 1068     		ldr	r0, [r2]
 3827 11d6 1847     		bx	r3	@ indirect register sibling call
 3828              	.LVL519:
 3829              	.L277:
1200:boards/TMC4670_eval.c **** }
 3830              		.loc 1 1200 3 view .LVU980
 3831              	.LBE5:
 3832              	.LBE4:
1199:boards/TMC4670_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
 3833              		.loc 1 1199 7 is_stmt 1 view .LVU981
1199:boards/TMC4670_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
 3834              		.loc 1 1199 9 is_stmt 0 view .LVU982
 3835 11d8 0128     		cmp	r0, #1
 3836 11da 09D1     		bne	.L275
1199:boards/TMC4670_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
 3837              		.loc 1 1199 49 discriminator 1 view .LVU983
 3838 11dc 054B     		ldr	r3, .L280
1199:boards/TMC4670_eval.c **** 		HAL.IOs->config->setHigh(PIN_DRV_ENN);
 3839              		.loc 1 1199 35 discriminator 1 view .LVU984
 3840 11de 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 3841 11e2 012B     		cmp	r3, #1
 3842 11e4 04D1     		bne	.L275
 3843              	.LBB7:
 3844              	.LBI4:
1192:boards/TMC4670_eval.c **** {
 3845              		.loc 1 1192 13 is_stmt 1 view .LVU985
 3846              	.LVL520:
 3847              	.LBB6:
1200:boards/TMC4670_eval.c **** }
 3848              		.loc 1 1200 3 view .LVU986
1200:boards/TMC4670_eval.c **** }
 3849              		.loc 1 1200 6 is_stmt 0 view .LVU987
 3850 11e6 044B     		ldr	r3, .L280+4
1200:boards/TMC4670_eval.c **** }
 3851              		.loc 1 1200 10 view .LVU988
 3852 11e8 DB68     		ldr	r3, [r3, #12]
1200:boards/TMC4670_eval.c **** }
 3853              		.loc 1 1200 18 view .LVU989
 3854 11ea 1B68     		ldr	r3, [r3]
1200:boards/TMC4670_eval.c **** }
 3855              		.loc 1 1200 3 view .LVU990
 3856 11ec 5B69     		ldr	r3, [r3, #20]
 3857 11ee F0E7     		b	.L279
 3858              	.LVL521:
 3859              	.L275:
1200:boards/TMC4670_eval.c **** }
 3860              		.loc 1 1200 3 view .LVU991
 3861              	.LBE6:
 3862              	.LBE7:
1201:boards/TMC4670_eval.c **** 
 3863              		.loc 1 1201 1 view .LVU992
 3864 11f0 7047     		bx	lr
 3865              	.L281:
 3866 11f2 00BF     		.align	2
 3867              	.L280:
 3868 11f4 00000000 		.word	Evalboards
 3869 11f8 00000000 		.word	HAL
 3870 11fc 00000000 		.word	.LANCHOR0
 3871              		.cfi_endproc
 3872              	.LFE16:
 3874              		.align	1
 3875              		.syntax unified
 3876              		.thumb
 3877              		.thumb_func
 3878              		.fpu softvfp
 3880              	deInit:
 3881              	.LFB17:
1204:boards/TMC4670_eval.c **** 	enableDriver(DRIVER_DISABLE);
 3882              		.loc 1 1204 1 is_stmt 1 view -0
 3883              		.cfi_startproc
 3884              		@ args = 0, pretend = 0, frame = 0
 3885              		@ frame_needed = 0, uses_anonymous_args = 0
1205:boards/TMC4670_eval.c **** 	HAL.IOs->config->setLow(PIN_DRV_ENN);
 3886              		.loc 1 1205 2 view .LVU994
1204:boards/TMC4670_eval.c **** 	enableDriver(DRIVER_DISABLE);
 3887              		.loc 1 1204 1 is_stmt 0 view .LVU995
 3888 1200 10B5     		push	{r4, lr}
 3889              	.LCFI8:
 3890              		.cfi_def_cfa_offset 8
 3891              		.cfi_offset 4, -8
 3892              		.cfi_offset 14, -4
1205:boards/TMC4670_eval.c **** 	HAL.IOs->config->setLow(PIN_DRV_ENN);
 3893              		.loc 1 1205 2 view .LVU996
 3894 1202 0020     		movs	r0, #0
 3895 1204 FFF7DBFF 		bl	enableDriver
 3896              	.LVL522:
1206:boards/TMC4670_eval.c **** };
 3897              		.loc 1 1206 2 is_stmt 1 view .LVU997
1206:boards/TMC4670_eval.c **** };
 3898              		.loc 1 1206 5 is_stmt 0 view .LVU998
 3899 1208 044B     		ldr	r3, .L283
1206:boards/TMC4670_eval.c **** };
 3900              		.loc 1 1206 2 view .LVU999
 3901 120a 054A     		ldr	r2, .L283+4
1206:boards/TMC4670_eval.c **** };
 3902              		.loc 1 1206 9 view .LVU1000
 3903 120c DB68     		ldr	r3, [r3, #12]
1206:boards/TMC4670_eval.c **** };
 3904              		.loc 1 1206 2 view .LVU1001
 3905 120e 1068     		ldr	r0, [r2]
1206:boards/TMC4670_eval.c **** };
 3906              		.loc 1 1206 17 view .LVU1002
 3907 1210 1B68     		ldr	r3, [r3]
1207:boards/TMC4670_eval.c **** 
 3908              		.loc 1 1207 1 view .LVU1003
 3909 1212 BDE81040 		pop	{r4, lr}
 3910              	.LCFI9:
 3911              		.cfi_restore 14
 3912              		.cfi_restore 4
 3913              		.cfi_def_cfa_offset 0
1206:boards/TMC4670_eval.c **** };
 3914              		.loc 1 1206 2 view .LVU1004
 3915 1216 9B69     		ldr	r3, [r3, #24]
 3916 1218 1847     		bx	r3	@ indirect register sibling call
 3917              	.LVL523:
 3918              	.L284:
 3919 121a 00BF     		.align	2
 3920              	.L283:
 3921 121c 00000000 		.word	HAL
 3922 1220 00000000 		.word	.LANCHOR0
 3923              		.cfi_endproc
 3924              	.LFE17:
 3926              		.align	1
 3927              		.syntax unified
 3928              		.thumb
 3929              		.thumb_func
 3930              		.fpu softvfp
 3932              	moveBy:
 3933              	.LVL524:
 3934              	.LFB7:
  70:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
 3935              		.loc 1 70 1 is_stmt 1 view -0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 0
 3938              		@ frame_needed = 0, uses_anonymous_args = 0
  71:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 3939              		.loc 1 71 2 view .LVU1006
  70:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
 3940              		.loc 1 70 1 is_stmt 0 view .LVU1007
 3941 1224 10B5     		push	{r4, lr}
 3942              	.LCFI10:
 3943              		.cfi_def_cfa_offset 8
 3944              		.cfi_offset 4, -8
 3945              		.cfi_offset 14, -4
  71:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 3946              		.loc 1 71 4 view .LVU1008
 3947 1226 0446     		mov	r4, r0
 3948 1228 20B9     		cbnz	r0, .L287
 3949              	.LVL525:
 3950              	.LBB10:
 3951              	.LBI10:
  69:boards/TMC4670_eval.c **** {
 3952              		.loc 1 69 17 is_stmt 1 view .LVU1009
 3953              	.LBB11:
  74:boards/TMC4670_eval.c **** 
 3954              		.loc 1 74 2 view .LVU1010
 3955 122a 0968     		ldr	r1, [r1]
 3956              	.LVL526:
  74:boards/TMC4670_eval.c **** 
 3957              		.loc 1 74 2 is_stmt 0 view .LVU1011
 3958 122c FFF7FEFF 		bl	tmc4670_setRelativeTargetPosition
 3959              	.LVL527:
  76:boards/TMC4670_eval.c **** }
 3960              		.loc 1 76 2 is_stmt 1 view .LVU1012
  74:boards/TMC4670_eval.c **** 
 3961              		.loc 1 74 2 is_stmt 0 view .LVU1013
 3962 1230 2046     		mov	r0, r4
 3963              	.L285:
 3964              	.LBE11:
 3965              	.LBE10:
  77:boards/TMC4670_eval.c **** 
 3966              		.loc 1 77 1 view .LVU1014
 3967 1232 10BD     		pop	{r4, pc}
 3968              	.LVL528:
 3969              	.L287:
  72:boards/TMC4670_eval.c **** 
 3970              		.loc 1 72 10 view .LVU1015
 3971 1234 0820     		movs	r0, #8
 3972              	.LVL529:
  72:boards/TMC4670_eval.c **** 
 3973              		.loc 1 72 10 view .LVU1016
 3974 1236 FCE7     		b	.L285
 3975              		.cfi_endproc
 3976              	.LFE7:
 3978              		.align	1
 3979              		.syntax unified
 3980              		.thumb
 3981              		.thumb_func
 3982              		.fpu softvfp
 3984              	getMeasuredSpeed:
 3985              	.LVL530:
 3986              	.LFB9:
1141:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
 3987              		.loc 1 1141 1 is_stmt 1 view -0
 3988              		.cfi_startproc
 3989              		@ args = 0, pretend = 0, frame = 0
 3990              		@ frame_needed = 0, uses_anonymous_args = 0
1142:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 3991              		.loc 1 1142 2 view .LVU1018
1141:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
 3992              		.loc 1 1141 1 is_stmt 0 view .LVU1019
 3993 1238 38B5     		push	{r3, r4, r5, lr}
 3994              	.LCFI11:
 3995              		.cfi_def_cfa_offset 16
 3996              		.cfi_offset 3, -16
 3997              		.cfi_offset 4, -12
 3998              		.cfi_offset 5, -8
 3999              		.cfi_offset 14, -4
1141:boards/TMC4670_eval.c **** 	if(motor >= TMC4670_MOTORS)
 4000              		.loc 1 1141 1 view .LVU1020
 4001 123a 0D46     		mov	r5, r1
1142:boards/TMC4670_eval.c **** 		return TMC_ERROR_MOTOR;
 4002              		.loc 1 1142 4 view .LVU1021
 4003 123c 0446     		mov	r4, r0
 4004 123e 20B9     		cbnz	r0, .L290
 4005              	.LVL531:
 4006              	.LBB14:
 4007              	.LBI14:
1140:boards/TMC4670_eval.c **** {
 4008              		.loc 1 1140 17 is_stmt 1 view .LVU1022
 4009              	.LBB15:
1145:boards/TMC4670_eval.c **** 
 4010              		.loc 1 1145 2 view .LVU1023
1145:boards/TMC4670_eval.c **** 
 4011              		.loc 1 1145 11 is_stmt 0 view .LVU1024
 4012 1240 FFF7FEFF 		bl	tmc4670_getActualVelocity
 4013              	.LVL532:
1145:boards/TMC4670_eval.c **** 
 4014              		.loc 1 1145 9 view .LVU1025
 4015 1244 2860     		str	r0, [r5]
1147:boards/TMC4670_eval.c **** }
 4016              		.loc 1 1147 2 is_stmt 1 view .LVU1026
 4017              	.LVL533:
1145:boards/TMC4670_eval.c **** 
 4018              		.loc 1 1145 9 is_stmt 0 view .LVU1027
 4019 1246 2046     		mov	r0, r4
 4020              	.L288:
 4021              	.LBE15:
 4022              	.LBE14:
1148:boards/TMC4670_eval.c **** 
 4023              		.loc 1 1148 1 view .LVU1028
 4024 1248 38BD     		pop	{r3, r4, r5, pc}
 4025              	.LVL534:
 4026              	.L290:
1143:boards/TMC4670_eval.c **** 
 4027              		.loc 1 1143 10 view .LVU1029
 4028 124a 0820     		movs	r0, #8
 4029              	.LVL535:
1143:boards/TMC4670_eval.c **** 
 4030              		.loc 1 1143 10 view .LVU1030
 4031 124c FCE7     		b	.L288
 4032              		.cfi_endproc
 4033              	.LFE9:
 4035              		.align	1
 4036              		.syntax unified
 4037              		.thumb
 4038              		.thumb_func
 4039              		.fpu softvfp
 4041              	restore:
 4042              	.LFB26:
 4043              		.cfi_startproc
 4044              		@ args = 0, pretend = 0, frame = 0
 4045              		@ frame_needed = 0, uses_anonymous_args = 0
 4046              		@ link register save eliminated.
 4047 124e 0120     		movs	r0, #1
 4048 1250 7047     		bx	lr
 4049              		.cfi_endproc
 4050              	.LFE26:
 4052              		.align	1
 4053              		.global	tmc4670_readwriteByte
 4054              		.syntax unified
 4055              		.thumb
 4056              		.thumb_func
 4057              		.fpu softvfp
 4059              	tmc4670_readwriteByte:
 4060              	.LVL536:
 4061              	.LFB1:
  26:boards/TMC4670_eval.c **** 	if (motor == DEFAULT_MOTOR)
 4062              		.loc 1 26 1 is_stmt 1 view -0
 4063              		.cfi_startproc
 4064              		@ args = 0, pretend = 0, frame = 0
 4065              		@ frame_needed = 0, uses_anonymous_args = 0
 4066              		@ link register save eliminated.
  27:boards/TMC4670_eval.c **** 		return TMC4670_SPIChannel->readWrite(data, lastTransfer);
 4067              		.loc 1 27 2 view .LVU1032
  26:boards/TMC4670_eval.c **** 	if (motor == DEFAULT_MOTOR)
 4068              		.loc 1 26 1 is_stmt 0 view .LVU1033
 4069 1252 0346     		mov	r3, r0
 4070 1254 0846     		mov	r0, r1
 4071              	.LVL537:
  26:boards/TMC4670_eval.c **** 	if (motor == DEFAULT_MOTOR)
 4072              		.loc 1 26 1 view .LVU1034
 4073 1256 1146     		mov	r1, r2
 4074              	.LVL538:
  27:boards/TMC4670_eval.c **** 		return TMC4670_SPIChannel->readWrite(data, lastTransfer);
 4075              		.loc 1 27 5 view .LVU1035
 4076 1258 1BB9     		cbnz	r3, .L293
  28:boards/TMC4670_eval.c **** 	else
 4077              		.loc 1 28 3 is_stmt 1 view .LVU1036
  28:boards/TMC4670_eval.c **** 	else
 4078              		.loc 1 28 28 is_stmt 0 view .LVU1037
 4079 125a 034B     		ldr	r3, .L294
 4080 125c 5B68     		ldr	r3, [r3, #4]
  28:boards/TMC4670_eval.c **** 	else
 4081              		.loc 1 28 10 view .LVU1038
 4082 125e 9B68     		ldr	r3, [r3, #8]
 4083 1260 1847     		bx	r3
 4084              	.LVL539:
 4085              	.L293:
  31:boards/TMC4670_eval.c **** // <= SPI wrapper
 4086              		.loc 1 31 1 view .LVU1039
 4087 1262 0020     		movs	r0, #0
 4088 1264 7047     		bx	lr
 4089              	.L295:
 4090 1266 00BF     		.align	2
 4091              	.L294:
 4092 1268 00000000 		.word	.LANCHOR0
 4093              		.cfi_endproc
 4094              	.LFE1:
 4096              		.align	1
 4097              		.global	TMC4670_init
 4098              		.syntax unified
 4099              		.thumb
 4100              		.thumb_func
 4101              		.fpu softvfp
 4103              	TMC4670_init:
 4104              	.LFB21:
1224:boards/TMC4670_eval.c **** 
1225:boards/TMC4670_eval.c **** void TMC4670_init(void)
1226:boards/TMC4670_eval.c **** {
 4105              		.loc 1 1226 1 is_stmt 1 view -0
 4106              		.cfi_startproc
 4107              		@ args = 0, pretend = 0, frame = 0
 4108              		@ frame_needed = 0, uses_anonymous_args = 0
1227:boards/TMC4670_eval.c **** 	// configure ENABLE-PIN for TMC4670
1228:boards/TMC4670_eval.c **** 	PIN_DRV_ENN = &HAL.IOs->pins->DIO0;
 4109              		.loc 1 1228 2 view .LVU1041
1226:boards/TMC4670_eval.c **** 	// configure ENABLE-PIN for TMC4670
 4110              		.loc 1 1226 1 is_stmt 0 view .LVU1042
 4111 126c 70B5     		push	{r4, r5, r6, lr}
 4112              	.LCFI12:
 4113              		.cfi_def_cfa_offset 16
 4114              		.cfi_offset 4, -16
 4115              		.cfi_offset 5, -12
 4116              		.cfi_offset 6, -8
 4117              		.cfi_offset 14, -4
 4118              		.loc 1 1228 20 view .LVU1043
 4119 126e 274E     		ldr	r6, .L297
 4120              		.loc 1 1228 14 view .LVU1044
 4121 1270 274D     		ldr	r5, .L297+4
 4122              		.loc 1 1228 20 view .LVU1045
 4123 1272 F468     		ldr	r4, [r6, #12]
 4124              		.loc 1 1228 16 view .LVU1046
 4125 1274 6068     		ldr	r0, [r4, #4]
1229:boards/TMC4670_eval.c **** 	HAL.IOs->config->toOutput(PIN_DRV_ENN);
 4126              		.loc 1 1229 17 view .LVU1047
 4127 1276 2368     		ldr	r3, [r4]
1228:boards/TMC4670_eval.c **** 	HAL.IOs->config->toOutput(PIN_DRV_ENN);
 4128              		.loc 1 1228 16 view .LVU1048
 4129 1278 6830     		adds	r0, r0, #104
 4130              		.loc 1 1229 2 view .LVU1049
 4131 127a DB68     		ldr	r3, [r3, #12]
1228:boards/TMC4670_eval.c **** 	HAL.IOs->config->toOutput(PIN_DRV_ENN);
 4132              		.loc 1 1228 14 view .LVU1050
 4133 127c 2860     		str	r0, [r5]
 4134              		.loc 1 1229 2 is_stmt 1 view .LVU1051
 4135 127e 9847     		blx	r3
 4136              	.LVL540:
1230:boards/TMC4670_eval.c **** 	enableDriver(DRIVER_ENABLE);
 4137              		.loc 1 1230 2 view .LVU1052
 4138 1280 0120     		movs	r0, #1
 4139 1282 FFF79CFF 		bl	enableDriver
 4140              	.LVL541:
1231:boards/TMC4670_eval.c **** 
1232:boards/TMC4670_eval.c **** 	TMC4670_SPIChannel = &HAL.SPI->ch1;
 4141              		.loc 1 1232 2 view .LVU1053
1233:boards/TMC4670_eval.c **** 	TMC4670_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 4142              		.loc 1 1233 28 is_stmt 0 view .LVU1054
 4143 1286 6368     		ldr	r3, [r4, #4]
1232:boards/TMC4670_eval.c **** 	TMC4670_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 4144              		.loc 1 1232 27 view .LVU1055
 4145 1288 3269     		ldr	r2, [r6, #16]
1232:boards/TMC4670_eval.c **** 	TMC4670_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 4146              		.loc 1 1232 21 view .LVU1056
 4147 128a 6A60     		str	r2, [r5, #4]
 4148              		.loc 1 1233 2 is_stmt 1 view .LVU1057
 4149              		.loc 1 1233 28 is_stmt 0 view .LVU1058
 4150 128c 03F53273 		add	r3, r3, #712
 4151              		.loc 1 1233 26 view .LVU1059
 4152 1290 5360     		str	r3, [r2, #4]
1234:boards/TMC4670_eval.c **** 
1235:boards/TMC4670_eval.c **** 	TMC4670_config = Evalboards.ch1.config;
 4153              		.loc 1 1235 2 is_stmt 1 view .LVU1060
 4154              		.loc 1 1235 33 is_stmt 0 view .LVU1061
 4155 1292 204B     		ldr	r3, .L297+8
1236:boards/TMC4670_eval.c **** 
1237:boards/TMC4670_eval.c **** 	// connect evalboard functions
1238:boards/TMC4670_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 4156              		.loc 1 1238 38 view .LVU1062
 4157 1294 2049     		ldr	r1, .L297+12
1235:boards/TMC4670_eval.c **** 
 4158              		.loc 1 1235 33 view .LVU1063
 4159 1296 9A69     		ldr	r2, [r3, #24]
 4160              		.loc 1 1238 2 is_stmt 1 view .LVU1064
 4161              		.loc 1 1238 38 is_stmt 0 view .LVU1065
 4162 1298 C2F80412 		str	r1, [r2, #516]
1239:boards/TMC4670_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 4163              		.loc 1 1239 2 is_stmt 1 view .LVU1066
 4164              		.loc 1 1239 38 is_stmt 0 view .LVU1067
 4165 129c 1F49     		ldr	r1, .L297+16
 4166 129e C2F80812 		str	r1, [r2, #520]
1240:boards/TMC4670_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_READY;
 4167              		.loc 1 1240 2 is_stmt 1 view .LVU1068
1241:boards/TMC4670_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 4168              		.loc 1 1241 2 view .LVU1069
1240:boards/TMC4670_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_READY;
 4169              		.loc 1 1240 38 is_stmt 0 view .LVU1070
 4170 12a2 0021     		movs	r1, #0
 4171 12a4 1180     		strh	r1, [r2]	@ movhi
1242:boards/TMC4670_eval.c **** 
1243:boards/TMC4670_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 4172              		.loc 1 1243 2 is_stmt 1 view .LVU1071
 4173              		.loc 1 1243 38 is_stmt 0 view .LVU1072
 4174 12a6 1E4A     		ldr	r2, .L297+20
 4175 12a8 5A62     		str	r2, [r3, #36]
1244:boards/TMC4670_eval.c **** 	Evalboards.ch1.right                = right;
 4176              		.loc 1 1244 2 is_stmt 1 view .LVU1073
 4177              		.loc 1 1244 38 is_stmt 0 view .LVU1074
 4178 12aa 1E4A     		ldr	r2, .L297+24
 4179 12ac 1A62     		str	r2, [r3, #32]
1245:boards/TMC4670_eval.c **** 	Evalboards.ch1.left                 = left;
 4180              		.loc 1 1245 2 is_stmt 1 view .LVU1075
 4181              		.loc 1 1245 38 is_stmt 0 view .LVU1076
 4182 12ae 1E4A     		ldr	r2, .L297+28
 4183 12b0 DA61     		str	r2, [r3, #28]
1246:boards/TMC4670_eval.c **** 	Evalboards.ch1.stop                 = stop;
 4184              		.loc 1 1246 2 is_stmt 1 view .LVU1077
 4185              		.loc 1 1246 38 is_stmt 0 view .LVU1078
 4186 12b2 1E4A     		ldr	r2, .L297+32
 4187 12b4 9A62     		str	r2, [r3, #40]
1247:boards/TMC4670_eval.c **** 	Evalboards.ch1.getMeasuredSpeed     = getMeasuredSpeed;
 4188              		.loc 1 1247 2 is_stmt 1 view .LVU1079
 4189              		.loc 1 1247 38 is_stmt 0 view .LVU1080
 4190 12b6 1E4A     		ldr	r2, .L297+36
 4191 12b8 1A65     		str	r2, [r3, #80]
1248:boards/TMC4670_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 4192              		.loc 1 1248 2 is_stmt 1 view .LVU1081
 4193              		.loc 1 1248 38 is_stmt 0 view .LVU1082
 4194 12ba 1E4A     		ldr	r2, .L297+40
 4195 12bc DA63     		str	r2, [r3, #60]
1249:boards/TMC4670_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 4196              		.loc 1 1249 2 is_stmt 1 view .LVU1083
 4197              		.loc 1 1249 38 is_stmt 0 view .LVU1084
 4198 12be 1E4A     		ldr	r2, .L297+44
 4199 12c0 9A63     		str	r2, [r3, #56]
1250:boards/TMC4670_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 4200              		.loc 1 1250 2 is_stmt 1 view .LVU1085
 4201              		.loc 1 1250 38 is_stmt 0 view .LVU1086
 4202 12c2 1E4A     		ldr	r2, .L297+48
 4203 12c4 DA62     		str	r2, [r3, #44]
1251:boards/TMC4670_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 4204              		.loc 1 1251 2 is_stmt 1 view .LVU1087
 4205              		.loc 1 1251 38 is_stmt 0 view .LVU1088
 4206 12c6 1E4A     		ldr	r2, .L297+52
 4207 12c8 1A63     		str	r2, [r3, #48]
1252:boards/TMC4670_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 4208              		.loc 1 1252 2 is_stmt 1 view .LVU1089
 4209              		.loc 1 1252 38 is_stmt 0 view .LVU1090
 4210 12ca 1E4A     		ldr	r2, .L297+56
 4211 12cc DA64     		str	r2, [r3, #76]
1253:boards/TMC4670_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 4212              		.loc 1 1253 2 is_stmt 1 view .LVU1091
 4213              		.loc 1 1253 38 is_stmt 0 view .LVU1092
 4214 12ce 1E4A     		ldr	r2, .L297+60
 4215 12d0 9A64     		str	r2, [r3, #72]
1254:boards/TMC4670_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 4216              		.loc 1 1254 2 is_stmt 1 view .LVU1093
 4217              		.loc 1 1254 38 is_stmt 0 view .LVU1094
 4218 12d2 1E4A     		ldr	r2, .L297+64
 4219 12d4 9A65     		str	r2, [r3, #88]
1255:boards/TMC4670_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 4220              		.loc 1 1255 2 is_stmt 1 view .LVU1095
 4221              		.loc 1 1255 38 is_stmt 0 view .LVU1096
 4222 12d6 1E4A     		ldr	r2, .L297+68
 4223 12d8 5A65     		str	r2, [r3, #84]
1256:boards/TMC4670_eval.c **** 	Evalboards.ch1.enableDriver         = enableDriver;
 4224              		.loc 1 1256 2 is_stmt 1 view .LVU1097
 4225              		.loc 1 1256 38 is_stmt 0 view .LVU1098
 4226 12da 1E4A     		ldr	r2, .L297+72
 4227 12dc 5A66     		str	r2, [r3, #100]
1257:boards/TMC4670_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 4228              		.loc 1 1257 2 is_stmt 1 view .LVU1099
 4229              		.loc 1 1257 38 is_stmt 0 view .LVU1100
 4230 12de 1E4A     		ldr	r2, .L297+76
 4231 12e0 1A66     		str	r2, [r3, #96]
1258:boards/TMC4670_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC4670_MOTORS;
 4232              		.loc 1 1258 2 is_stmt 1 view .LVU1101
 4233              		.loc 1 1258 38 is_stmt 0 view .LVU1102
 4234 12e2 0122     		movs	r2, #1
 4235 12e4 1A75     		strb	r2, [r3, #20]
1259:boards/TMC4670_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 4236              		.loc 1 1259 2 is_stmt 1 view .LVU1103
 4237              		.loc 1 1259 38 is_stmt 0 view .LVU1104
 4238 12e6 1D4A     		ldr	r2, .L297+80
 4239 12e8 DA65     		str	r2, [r3, #92]
1260:boards/TMC4670_eval.c **** 	Evalboards.ch1.VMMin                = 50;
 4240              		.loc 1 1260 2 is_stmt 1 view .LVU1105
1261:boards/TMC4670_eval.c **** 	Evalboards.ch1.VMMax                = 650;
 4241              		.loc 1 1261 38 is_stmt 0 view .LVU1106
 4242 12ea 3220     		movs	r0, #50
 4243 12ec 40F28A22 		movw	r2, #650
 4244 12f0 C3E90320 		strd	r2, r0, [r3, #12]
1262:boards/TMC4670_eval.c **** 
1263:boards/TMC4670_eval.c **** 	// init motor config
1264:boards/TMC4670_eval.c **** 	for(int i = 0; i < TMC4670_MOTORS; i++)
 4245              		.loc 1 1264 2 is_stmt 1 view .LVU1107
 4246              	.LBB16:
 4247              		.loc 1 1264 6 view .LVU1108
 4248              	.LVL542:
 4249              		.loc 1 1264 17 view .LVU1109
1265:boards/TMC4670_eval.c **** 	{
1266:boards/TMC4670_eval.c **** 		motorConfig[i].initWaitTime             = 1000;
 4250              		.loc 1 1266 3 view .LVU1110
 4251              		.loc 1 1266 43 is_stmt 0 view .LVU1111
 4252 12f4 1A4B     		ldr	r3, .L297+84
 4253 12f6 4FF47A72 		mov	r2, #1000
 4254 12fa 9A80     		strh	r2, [r3, #4]	@ movhi
1267:boards/TMC4670_eval.c **** 		motorConfig[i].startVoltage             = 6000;
 4255              		.loc 1 1267 3 is_stmt 1 view .LVU1112
 4256              		.loc 1 1267 43 is_stmt 0 view .LVU1113
 4257 12fc 41F27072 		movw	r2, #6000
 4258 1300 1A60     		str	r2, [r3]
1268:boards/TMC4670_eval.c **** 		motorConfig[i].initMode                 = 0;
 4259              		.loc 1 1268 3 is_stmt 1 view .LVU1114
 4260              		.loc 1 1268 43 is_stmt 0 view .LVU1115
 4261 1302 5972     		strb	r1, [r3, #9]
1269:boards/TMC4670_eval.c **** 		motorConfig[i].torqueMeasurementFactor  = 256;
 4262              		.loc 1 1269 3 is_stmt 1 view .LVU1116
 4263              		.loc 1 1269 43 is_stmt 0 view .LVU1117
 4264 1304 4FF48072 		mov	r2, #256
 4265 1308 5A81     		strh	r2, [r3, #10]	@ movhi
1264:boards/TMC4670_eval.c **** 	{
 4266              		.loc 1 1264 37 is_stmt 1 view .LVU1118
 4267              	.LVL543:
1264:boards/TMC4670_eval.c **** 	{
 4268              		.loc 1 1264 17 view .LVU1119
 4269              	.LBE16:
1270:boards/TMC4670_eval.c **** 	}
1271:boards/TMC4670_eval.c **** };
 4270              		.loc 1 1271 1 is_stmt 0 view .LVU1120
 4271 130a 70BD     		pop	{r4, r5, r6, pc}
 4272              	.L298:
 4273              		.align	2
 4274              	.L297:
 4275 130c 00000000 		.word	HAL
 4276 1310 00000000 		.word	.LANCHOR0
 4277 1314 00000000 		.word	Evalboards
 4278 1318 00000000 		.word	reset
 4279 131c 00000000 		.word	restore
 4280 1320 00000000 		.word	rotate
 4281 1324 00000000 		.word	right
 4282 1328 00000000 		.word	left
 4283 132c 00000000 		.word	stop
 4284 1330 00000000 		.word	getMeasuredSpeed
 4285 1334 00000000 		.word	GAP
 4286 1338 00000000 		.word	SAP
 4287 133c 00000000 		.word	moveTo
 4288 1340 00000000 		.word	moveBy
 4289 1344 00000000 		.word	writeRegister
 4290 1348 00000000 		.word	readRegister
 4291 134c 00000000 		.word	periodicJob
 4292 1350 00000000 		.word	userFunction
 4293 1354 00000000 		.word	enableDriver
 4294 1358 00000000 		.word	checkErrors
 4295 135c 00000000 		.word	deInit
 4296 1360 00000000 		.word	motorConfig
 4297              		.cfi_endproc
 4298              	.LFE21:
 4300              		.comm	motorConfig,16,4
 4301              		.comm	TMCMotionController,532,4
 4302              		.comm	TMCDriver,532,4
 4303              		.comm	Evalboards,244,4
 4304              		.comm	VitalSignsMonitor,20,4
 4305              		.comm	hwid,1,1
 4306              		.comm	HAL,48,4
 4307              		.comm	UART,40,4
 4308              		.comm	Timer,16,4
 4309              		.comm	WLAN,36,4
 4310              		.comm	RS232,36,4
 4311              		.comm	LEDs,28,4
 4312              		.comm	USB,36,4
 4313              		.comm	uart0_interrupt,1,1
 4314              		.comm	ADCs,32,4
 4315              		.comm	SPI,44,4
 4316              		.comm	IOMap,2088,4
 4317              		.comm	IOs,52,4
 4318              		.comm	Cpu,8,4
 4319              		.bss
 4320              		.align	2
 4321              		.set	.LANCHOR0,. + 0
 4324              	PIN_DRV_ENN:
 4325 0000 00000000 		.space	4
 4328              	TMC4670_SPIChannel:
 4329 0004 00000000 		.space	4
 4332              	ADCValue:
 4333 0008 00000000 		.space	12
 4333      00000000 
 4333      00000000 
 4334              		.text
 4335              	.Letext0:
 4336              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 4337              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4338              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4339              		.file 5 "TMC-API/tmc/helpers/Types.h"
 4340              		.file 6 "TMC-API/tmc/helpers/Config.h"
 4341              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4342              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4343              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4344              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 4345              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 4346              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 4347              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 4348              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 4349              		.file 15 "./hal/IOs.h"
 4350              		.file 16 "./hal/IOMap.h"
 4351              		.file 17 "./hal/SPI.h"
 4352              		.file 18 "./hal/ADCs.h"
 4353              		.file 19 "./hal/RXTX.h"
 4354              		.file 20 "./hal/USB.h"
 4355              		.file 21 "./hal/LEDs.h"
 4356              		.file 22 "./hal/RS232.h"
 4357              		.file 23 "./hal/WLAN.h"
 4358              		.file 24 "./hal/Timer.h"
 4359              		.file 25 "./hal/UART.h"
 4360              		.file 26 "./hal/HAL.h"
 4361              		.file 27 "./tmc/VitalSignsMonitor.h"
 4362              		.file 28 "boards/Board.h"
 4363              		.file 29 "boards/TMCDriver.h"
 4364              		.file 30 "boards/TMCMotionController.h"
 4365              		.file 31 "TMC-API/tmc/ic/TMC4670/TMC4670.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC4670_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:22     .text:00000000 userFunction
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:49     .text:00000004 reset
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:69     .text:00000008 checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:88     .text:00000010 $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:92     .text:00000014 $t
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:98     .text:00000014 periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:142    .text:00000038 $d
                            *COM*:00000010 motorConfig
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:146    .text:0000003c $t
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:152    .text:0000003c readRegister
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:189    .text:0000004a writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:214    .text:00000050 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:256    .text:00000062 rotate
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:298    .text:00000074 stop
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:321    .text:00000078 left
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:346    .text:0000007c right
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:368    .text:0000007e handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:400    .text:00000096 $d
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:651    .text:0000028c $t
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:2552   .text:00000ad0 $d
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:2557   .text:00000ad4 $t
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3711   .text:00001198 $d
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3716   .text:000011a0 $t
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3722   .text:000011a0 SAP
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3762   .text:000011b4 GAP
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3792   .text:000011be enableDriver
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3868   .text:000011f4 $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3874   .text:00001200 $t
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3880   .text:00001200 deInit
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3921   .text:0000121c $d
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3926   .text:00001224 $t
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3932   .text:00001224 moveBy
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:3984   .text:00001238 getMeasuredSpeed
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4041   .text:0000124e restore
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4059   .text:00001252 tmc4670_readwriteByte
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4092   .text:00001268 $d
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4096   .text:0000126c $t
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4103   .text:0000126c TMC4670_init
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4275   .text:0000130c $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4320   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4324   .bss:00000000 PIN_DRV_ENN
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4328   .bss:00000004 TMC4670_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\ccAvqYnQ.s:4332   .bss:00000008 ADCValue

UNDEFINED SYMBOLS
tmc4670_periodicJob
tmc4670_readInt
tmc4670_writeInt
tmc4670_setAbsolutTargetPosition
tmc4670_setTargetVelocity
tmc4670_readRegister16BitValue
tmc4670_writeRegister16BitValue
tmc4670_getActualTorque_mA
tmc4670_getActualVelocity
tmc4670_getActualPosition
tmc4670_setActualPosition
tmc4670_getTargetTorque_raw
tmc4670_setTargetTorque_raw
tmc4670_getTargetTorque_mA
tmc4670_setTargetTorque_mA
tmc4670_getTargetVelocity
tmc4670_startEncoderInitialization
tmc4670_setRelativeTargetPosition
