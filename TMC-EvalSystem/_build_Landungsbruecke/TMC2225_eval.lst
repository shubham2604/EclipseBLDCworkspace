   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC2225_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	checkErrors:
  23              	.LVL0:
  24              	.LFB16:
  25              		.file 1 "boards/TMC2225_eval.c"
   1:boards/TMC2225_eval.c **** #include "Board.h"
   2:boards/TMC2225_eval.c **** #include "tmc/ic/TMC2225/TMC2225.h"
   3:boards/TMC2225_eval.c **** #include "tmc/StepDir.h"
   4:boards/TMC2225_eval.c **** 
   5:boards/TMC2225_eval.c **** #undef  TMC2225_MAX_VELOCITY
   6:boards/TMC2225_eval.c **** #define TMC2225_MAX_VELOCITY  STEPDIR_MAX_VELOCITY
   7:boards/TMC2225_eval.c **** 
   8:boards/TMC2225_eval.c **** // Stepdir precision: 2^17 -> 17 digits of precision
   9:boards/TMC2225_eval.c **** #define STEPDIR_PRECISION (1 << 17)
  10:boards/TMC2225_eval.c **** 
  11:boards/TMC2225_eval.c **** #define ERRORS_VM        (1<<0)
  12:boards/TMC2225_eval.c **** #define ERRORS_VM_UNDER  (1<<1)
  13:boards/TMC2225_eval.c **** #define ERRORS_VM_OVER   (1<<2)
  14:boards/TMC2225_eval.c **** 
  15:boards/TMC2225_eval.c **** #define VM_MIN  50   // VM[V/10] min
  16:boards/TMC2225_eval.c **** #define VM_MAX  390  // VM[V/10] max
  17:boards/TMC2225_eval.c **** 
  18:boards/TMC2225_eval.c **** #define MOTORS 1
  19:boards/TMC2225_eval.c **** 
  20:boards/TMC2225_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
  21:boards/TMC2225_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
  22:boards/TMC2225_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
  23:boards/TMC2225_eval.c **** static uint32_t stop(uint8_t motor);
  24:boards/TMC2225_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  25:boards/TMC2225_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  26:boards/TMC2225_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  27:boards/TMC2225_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  28:boards/TMC2225_eval.c **** 
  29:boards/TMC2225_eval.c **** static void checkErrors (uint32_t tick);
  30:boards/TMC2225_eval.c **** static void deInit(void);
  31:boards/TMC2225_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  32:boards/TMC2225_eval.c **** 
  33:boards/TMC2225_eval.c **** static void periodicJob(uint32_t tick);
  34:boards/TMC2225_eval.c **** static uint8_t reset(void);
  35:boards/TMC2225_eval.c **** static void enableDriver(DriverState state);
  36:boards/TMC2225_eval.c **** 
  37:boards/TMC2225_eval.c **** static UART_Config *TMC2225_UARTChannel;
  38:boards/TMC2225_eval.c **** static TMC2225TypeDef TMC2225;
  39:boards/TMC2225_eval.c **** static ConfigurationTypeDef *TMC2225_config;
  40:boards/TMC2225_eval.c **** 
  41:boards/TMC2225_eval.c **** // Helper macro - index is always 1 here (channel 1 <-> index 0, channel 2 <-> index 1)
  42:boards/TMC2225_eval.c **** #define TMC2225_CRC(data, length) tmc_CRC8(data, length, 1)
  43:boards/TMC2225_eval.c **** 
  44:boards/TMC2225_eval.c **** typedef struct
  45:boards/TMC2225_eval.c **** {
  46:boards/TMC2225_eval.c **** 	IOPinTypeDef  *DRV_ENN;
  47:boards/TMC2225_eval.c **** 	IOPinTypeDef  *STEP;
  48:boards/TMC2225_eval.c **** 	IOPinTypeDef  *DIR;
  49:boards/TMC2225_eval.c **** 	IOPinTypeDef  *MS1;
  50:boards/TMC2225_eval.c **** 	IOPinTypeDef  *MS2;
  51:boards/TMC2225_eval.c **** 	IOPinTypeDef  *DIAG;
  52:boards/TMC2225_eval.c **** 	IOPinTypeDef  *INDEX;
  53:boards/TMC2225_eval.c **** 	IOPinTypeDef  *UC_PWM;
  54:boards/TMC2225_eval.c **** } PinsTypeDef;
  55:boards/TMC2225_eval.c **** 
  56:boards/TMC2225_eval.c **** static PinsTypeDef Pins;
  57:boards/TMC2225_eval.c **** 
  58:boards/TMC2225_eval.c **** static uint8_t restore(void);
  59:boards/TMC2225_eval.c **** 
  60:boards/TMC2225_eval.c **** static inline TMC2225TypeDef *motorToIC(uint8_t motor)
  61:boards/TMC2225_eval.c **** {
  62:boards/TMC2225_eval.c **** 	UNUSED(motor);
  63:boards/TMC2225_eval.c **** 
  64:boards/TMC2225_eval.c **** 	return &TMC2225;
  65:boards/TMC2225_eval.c **** }
  66:boards/TMC2225_eval.c **** 
  67:boards/TMC2225_eval.c **** static inline UART_Config *channelToUART(uint8_t channel)
  68:boards/TMC2225_eval.c **** {
  69:boards/TMC2225_eval.c **** 	UNUSED(channel);
  70:boards/TMC2225_eval.c **** 
  71:boards/TMC2225_eval.c **** 	return TMC2225_UARTChannel;
  72:boards/TMC2225_eval.c **** }
  73:boards/TMC2225_eval.c **** 
  74:boards/TMC2225_eval.c **** // => UART wrapper
  75:boards/TMC2225_eval.c **** // Write [writeLength] bytes from the [data] array.
  76:boards/TMC2225_eval.c **** // If [readLength] is greater than zero, read [readLength] bytes from the
  77:boards/TMC2225_eval.c **** // [data] array.
  78:boards/TMC2225_eval.c **** void tmc2225_readWriteArray(uint8_t channel, uint8_t *data, size_t writeLength, size_t readLength)
  79:boards/TMC2225_eval.c **** {
  80:boards/TMC2225_eval.c **** 	UART_readWrite(channelToUART(channel), data, writeLength, readLength);
  81:boards/TMC2225_eval.c **** }
  82:boards/TMC2225_eval.c **** // <= UART wrapper
  83:boards/TMC2225_eval.c **** 
  84:boards/TMC2225_eval.c **** // => CRC wrapper
  85:boards/TMC2225_eval.c **** // Return the CRC8 of [length] bytes of data stored in the [data] array.
  86:boards/TMC2225_eval.c **** uint8_t tmc2225_CRC8(uint8_t *data, size_t length)
  87:boards/TMC2225_eval.c **** {
  88:boards/TMC2225_eval.c **** 	return TMC2225_CRC(data, length);
  89:boards/TMC2225_eval.c **** }
  90:boards/TMC2225_eval.c **** // <= CRC wrapper
  91:boards/TMC2225_eval.c **** 
  92:boards/TMC2225_eval.c **** void tmc2225_writeRegister(uint8_t motor, uint8_t address, int32_t value)
  93:boards/TMC2225_eval.c **** {
  94:boards/TMC2225_eval.c **** 	tmc2225_writeInt(motorToIC(motor), address, value);
  95:boards/TMC2225_eval.c **** }
  96:boards/TMC2225_eval.c **** 
  97:boards/TMC2225_eval.c **** void tmc2225_readRegister(uint8_t motor, uint8_t address, int32_t *value)
  98:boards/TMC2225_eval.c **** {
  99:boards/TMC2225_eval.c **** 	*value = tmc2225_readInt(motorToIC(motor), address);
 100:boards/TMC2225_eval.c **** }
 101:boards/TMC2225_eval.c **** 
 102:boards/TMC2225_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
 103:boards/TMC2225_eval.c **** {
 104:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 105:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 106:boards/TMC2225_eval.c **** 
 107:boards/TMC2225_eval.c **** 	StepDir_rotate(motor, velocity);
 108:boards/TMC2225_eval.c **** 
 109:boards/TMC2225_eval.c **** 	return TMC_ERROR_NONE;
 110:boards/TMC2225_eval.c **** }
 111:boards/TMC2225_eval.c **** 
 112:boards/TMC2225_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
 113:boards/TMC2225_eval.c **** {
 114:boards/TMC2225_eval.c **** 	return rotate(motor, velocity);
 115:boards/TMC2225_eval.c **** }
 116:boards/TMC2225_eval.c **** 
 117:boards/TMC2225_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
 118:boards/TMC2225_eval.c **** {
 119:boards/TMC2225_eval.c **** 	return rotate(motor, -velocity);
 120:boards/TMC2225_eval.c **** }
 121:boards/TMC2225_eval.c **** 
 122:boards/TMC2225_eval.c **** static uint32_t stop(uint8_t motor)
 123:boards/TMC2225_eval.c **** {
 124:boards/TMC2225_eval.c **** 	return rotate(motor, 0);
 125:boards/TMC2225_eval.c **** }
 126:boards/TMC2225_eval.c **** 
 127:boards/TMC2225_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
 128:boards/TMC2225_eval.c **** {
 129:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 130:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 131:boards/TMC2225_eval.c **** 
 132:boards/TMC2225_eval.c **** 	StepDir_moveTo(motor, position);
 133:boards/TMC2225_eval.c **** 
 134:boards/TMC2225_eval.c **** 	return TMC_ERROR_NONE;
 135:boards/TMC2225_eval.c **** }
 136:boards/TMC2225_eval.c **** 
 137:boards/TMC2225_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 138:boards/TMC2225_eval.c **** {
 139:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 140:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 141:boards/TMC2225_eval.c **** 
 142:boards/TMC2225_eval.c **** 	// determine actual position and add numbers of ticks to move
 143:boards/TMC2225_eval.c **** 	*ticks += StepDir_getActualPosition(motor);
 144:boards/TMC2225_eval.c **** 
 145:boards/TMC2225_eval.c **** 	return moveTo(motor, *ticks);
 146:boards/TMC2225_eval.c **** }
 147:boards/TMC2225_eval.c **** 
 148:boards/TMC2225_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 149:boards/TMC2225_eval.c **** {
 150:boards/TMC2225_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 151:boards/TMC2225_eval.c **** 	int32_t buffer = 0;
 152:boards/TMC2225_eval.c **** 
 153:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 154:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 155:boards/TMC2225_eval.c **** 
 156:boards/TMC2225_eval.c **** 	switch(type)
 157:boards/TMC2225_eval.c **** 	{
 158:boards/TMC2225_eval.c **** 	case 0:
 159:boards/TMC2225_eval.c **** 		// Target position
 160:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 161:boards/TMC2225_eval.c **** 			*value = StepDir_getTargetPosition(motor);
 162:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 163:boards/TMC2225_eval.c **** 			StepDir_moveTo(motor, *value);
 164:boards/TMC2225_eval.c **** 		}
 165:boards/TMC2225_eval.c **** 		break;
 166:boards/TMC2225_eval.c **** 	case 1:
 167:boards/TMC2225_eval.c **** 		// Actual position
 168:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 169:boards/TMC2225_eval.c **** 			*value = StepDir_getActualPosition(motor);
 170:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 171:boards/TMC2225_eval.c **** 			StepDir_setActualPosition(motor, *value);
 172:boards/TMC2225_eval.c **** 		}
 173:boards/TMC2225_eval.c **** 		break;
 174:boards/TMC2225_eval.c **** 	case 2:
 175:boards/TMC2225_eval.c **** 		// Target speed
 176:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 177:boards/TMC2225_eval.c **** 			*value = StepDir_getTargetVelocity(motor);
 178:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 179:boards/TMC2225_eval.c **** 			StepDir_rotate(motor, *value);
 180:boards/TMC2225_eval.c **** 		}
 181:boards/TMC2225_eval.c **** 		break;
 182:boards/TMC2225_eval.c **** 	case 3:
 183:boards/TMC2225_eval.c **** 		// Actual speed
 184:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 185:boards/TMC2225_eval.c **** 			*value = StepDir_getActualVelocity(motor);
 186:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 187:boards/TMC2225_eval.c **** 			errors |= TMC_ERROR_TYPE;
 188:boards/TMC2225_eval.c **** 		}
 189:boards/TMC2225_eval.c **** 		break;
 190:boards/TMC2225_eval.c **** 	case 4:
 191:boards/TMC2225_eval.c **** 		// Maximum speed
 192:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 193:boards/TMC2225_eval.c **** 			*value = StepDir_getVelocityMax(motor);
 194:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 195:boards/TMC2225_eval.c **** 			StepDir_setVelocityMax(motor, abs(*value));
 196:boards/TMC2225_eval.c **** 		}
 197:boards/TMC2225_eval.c **** 		break;
 198:boards/TMC2225_eval.c **** 	case 5:
 199:boards/TMC2225_eval.c **** 		// Maximum acceleration
 200:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 201:boards/TMC2225_eval.c **** 			*value = StepDir_getAcceleration(motor);
 202:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 203:boards/TMC2225_eval.c **** 			StepDir_setAcceleration(motor, *value);
 204:boards/TMC2225_eval.c **** 		}
 205:boards/TMC2225_eval.c **** 		break;
 206:boards/TMC2225_eval.c **** 	case 6:
 207:boards/TMC2225_eval.c **** 		// Maximum current
 208:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 209:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IRUN_MASK, TMC2225_IRU
 210:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 211:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IRUN_MASK, TMC2225_IRUN_SHIFT
 212:boards/TMC2225_eval.c **** 		}
 213:boards/TMC2225_eval.c **** 		break;
 214:boards/TMC2225_eval.c **** 	case 7:
 215:boards/TMC2225_eval.c **** 		// Standby current
 216:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 217:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IHOLD_MASK, TMC2225_IH
 218:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 219:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IHOLD_MASK, TMC2225_IHOLD_SHI
 220:boards/TMC2225_eval.c **** 		}
 221:boards/TMC2225_eval.c **** 		break;
 222:boards/TMC2225_eval.c **** 	case 8:
 223:boards/TMC2225_eval.c **** 		// Position reached flag
 224:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 225:boards/TMC2225_eval.c **** 			*value = (StepDir_getStatus(motor) & STATUS_TARGET_REACHED)? 1:0;
 226:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 227:boards/TMC2225_eval.c **** 			errors |= TMC_ERROR_TYPE;
 228:boards/TMC2225_eval.c **** 		}
 229:boards/TMC2225_eval.c **** 		break;
 230:boards/TMC2225_eval.c **** 	case 28:
 231:boards/TMC2225_eval.c **** 		// Internal RSense
 232:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 233:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_GCONF, TMC2225_INTERNAL_RSENSE_MASK, TMC22
 234:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 235:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_GCONF, TMC2225_INTERNAL_RSENSE_MASK, TMC2225_INTE
 236:boards/TMC2225_eval.c **** 		}
 237:boards/TMC2225_eval.c **** 		break;
 238:boards/TMC2225_eval.c **** 	case 29:
 239:boards/TMC2225_eval.c **** 		// Measured Speed
 240:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 241:boards/TMC2225_eval.c **** 			buffer = (int32_t)(((int64_t)StepDir_getFrequency(motor) * (int64_t)122) / (int64_t)TMC2225_FIEL
 242:boards/TMC2225_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 243:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 244:boards/TMC2225_eval.c **** 			errors |= TMC_ERROR_TYPE;
 245:boards/TMC2225_eval.c **** 		}
 246:boards/TMC2225_eval.c **** 		break;
 247:boards/TMC2225_eval.c **** 	case 50: // StepDir internal(0)/external(1)
 248:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 249:boards/TMC2225_eval.c **** 			*value = StepDir_getMode(motor);
 250:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 251:boards/TMC2225_eval.c **** 			StepDir_setMode(motor, *value);
 252:boards/TMC2225_eval.c **** 		}
 253:boards/TMC2225_eval.c **** 		break;
 254:boards/TMC2225_eval.c **** 	case 51: // StepDir interrupt frequency
 255:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 256:boards/TMC2225_eval.c **** 			*value = StepDir_getFrequency(motor);
 257:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 258:boards/TMC2225_eval.c **** 			StepDir_setFrequency(motor, *value);
 259:boards/TMC2225_eval.c **** 		}
 260:boards/TMC2225_eval.c **** 		break;
 261:boards/TMC2225_eval.c **** 	case 140:
 262:boards/TMC2225_eval.c **** 		// Microstep Resolution
 263:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 264:boards/TMC2225_eval.c **** 			*value = 256 >> TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_MRES_MASK, TMC222
 265:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 266:boards/TMC2225_eval.c **** 			switch(*value)
 267:boards/TMC2225_eval.c **** 			{
 268:boards/TMC2225_eval.c **** 			case 1:    *value = 8;   break;
 269:boards/TMC2225_eval.c **** 			case 2:    *value = 7;   break;
 270:boards/TMC2225_eval.c **** 			case 4:    *value = 6;   break;
 271:boards/TMC2225_eval.c **** 			case 8:    *value = 5;   break;
 272:boards/TMC2225_eval.c **** 			case 16:   *value = 4;   break;
 273:boards/TMC2225_eval.c **** 			case 32:   *value = 3;   break;
 274:boards/TMC2225_eval.c **** 			case 64:   *value = 2;   break;
 275:boards/TMC2225_eval.c **** 			case 128:  *value = 1;   break;
 276:boards/TMC2225_eval.c **** 			case 256:  *value = 0;   break;
 277:boards/TMC2225_eval.c **** 			default:   *value = -1;  break;
 278:boards/TMC2225_eval.c **** 			}
 279:boards/TMC2225_eval.c **** 
 280:boards/TMC2225_eval.c **** 			if(*value != -1)
 281:boards/TMC2225_eval.c **** 			{
 282:boards/TMC2225_eval.c **** 				TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_MRES_MASK, TMC2225_MRES_SHIFT,
 283:boards/TMC2225_eval.c **** 			}
 284:boards/TMC2225_eval.c **** 			else
 285:boards/TMC2225_eval.c **** 			{
 286:boards/TMC2225_eval.c **** 				errors |= TMC_ERROR_VALUE;
 287:boards/TMC2225_eval.c **** 			}
 288:boards/TMC2225_eval.c **** 		}
 289:boards/TMC2225_eval.c **** 		break;
 290:boards/TMC2225_eval.c **** 	case 162:
 291:boards/TMC2225_eval.c **** 		// Chopper blank time
 292:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 293:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TBL_MASK, TMC2225_TBL_SH
 294:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 295:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TBL_MASK, TMC2225_TBL_SHIFT, *v
 296:boards/TMC2225_eval.c **** 		}
 297:boards/TMC2225_eval.c **** 		break;
 298:boards/TMC2225_eval.c **** 	case 165:
 299:boards/TMC2225_eval.c **** 		// Chopper hysteresis end / fast decay time
 300:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 301:boards/TMC2225_eval.c **** 			if(tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) & (1<<14))
 302:boards/TMC2225_eval.c **** 			{
 303:boards/TMC2225_eval.c **** 				*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_HEND_MASK, TMC2225_HEND
 304:boards/TMC2225_eval.c **** 			}
 305:boards/TMC2225_eval.c **** 			else
 306:boards/TMC2225_eval.c **** 			{
 307:boards/TMC2225_eval.c **** 				buffer = tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF);
 308:boards/TMC2225_eval.c **** 				*value = (tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) >> 4) & 0x07;
 309:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 310:boards/TMC2225_eval.c **** 					*value |= 1<<3;
 311:boards/TMC2225_eval.c **** 			}
 312:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 313:boards/TMC2225_eval.c **** 			errors |= TMC_ERROR_TYPE;
 314:boards/TMC2225_eval.c **** 		}
 315:boards/TMC2225_eval.c **** 		break;
 316:boards/TMC2225_eval.c **** 	case 166:
 317:boards/TMC2225_eval.c **** 		// Chopper hysteresis start / sine wave offset
 318:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 319:boards/TMC2225_eval.c **** 			if(tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) & (1<<14))
 320:boards/TMC2225_eval.c **** 			{
 321:boards/TMC2225_eval.c **** 				*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_HSTRT_MASK, TMC2225_HST
 322:boards/TMC2225_eval.c **** 			}
 323:boards/TMC2225_eval.c **** 			else
 324:boards/TMC2225_eval.c **** 			{
 325:boards/TMC2225_eval.c **** 				buffer = tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF);
 326:boards/TMC2225_eval.c **** 				*value = (tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) >> 7) & 0x0F;
 327:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 328:boards/TMC2225_eval.c **** 					*value |= 1<<3;
 329:boards/TMC2225_eval.c **** 			}
 330:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 331:boards/TMC2225_eval.c **** 			if(tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) & (1<<14))
 332:boards/TMC2225_eval.c **** 			{
 333:boards/TMC2225_eval.c **** 				TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_HSTRT_MASK, TMC2225_HSTRT_SHIF
 334:boards/TMC2225_eval.c **** 			}
 335:boards/TMC2225_eval.c **** 			else
 336:boards/TMC2225_eval.c **** 			{
 337:boards/TMC2225_eval.c **** 				TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_HEND_MASK, TMC2225_HEND_SHIFT,
 338:boards/TMC2225_eval.c **** 			}
 339:boards/TMC2225_eval.c **** 		}
 340:boards/TMC2225_eval.c **** 		break;
 341:boards/TMC2225_eval.c **** 	case 167:
 342:boards/TMC2225_eval.c **** 		// Chopper off time
 343:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 344:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TOFF_MASK, TMC2225_TOFF_
 345:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 346:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TOFF_MASK, TMC2225_TOFF_SHIFT, 
 347:boards/TMC2225_eval.c **** 		}
 348:boards/TMC2225_eval.c **** 		break;
 349:boards/TMC2225_eval.c **** 	case 179:
 350:boards/TMC2225_eval.c **** 		// VSense
 351:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 352:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_VSENSE_MASK, TMC2225_VSE
 353:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 354:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_VSENSE_MASK, TMC2225_VSENSE_SHI
 355:boards/TMC2225_eval.c **** 		}
 356:boards/TMC2225_eval.c **** 		break;
 357:boards/TMC2225_eval.c **** 	case 180:
 358:boards/TMC2225_eval.c **** 		// smartEnergy actual current
 359:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 360:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_DRVSTATUS, TMC2225_CS_ACTUAL_MASK, TMC2225
 361:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 362:boards/TMC2225_eval.c **** 			errors |= TMC_ERROR_TYPE;
 363:boards/TMC2225_eval.c **** 		}
 364:boards/TMC2225_eval.c **** 		break;
 365:boards/TMC2225_eval.c **** 	case 181:
 366:boards/TMC2225_eval.c **** 		// smartEnergy stall velocity
 367:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 368:boards/TMC2225_eval.c **** 			*value = StepDir_getStallGuardThreshold(motor);
 369:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 370:boards/TMC2225_eval.c **** 			// Store the threshold value in the internal StepDir generator
 371:boards/TMC2225_eval.c **** 			StepDir_setStallGuardThreshold(motor, *value);
 372:boards/TMC2225_eval.c **** 		}
 373:boards/TMC2225_eval.c **** 		break;
 374:boards/TMC2225_eval.c **** 	case 186:
 375:boards/TMC2225_eval.c **** 		// PWM threshold speed
 376:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 377:boards/TMC2225_eval.c **** 			buffer = tmc2225_readInt(motorToIC(motor), TMC2225_TPWMTHRS);
 378:boards/TMC2225_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 379:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 380:boards/TMC2225_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value) ? *value : 1));
 381:boards/TMC2225_eval.c **** 			tmc2225_writeInt(motorToIC(motor), TMC2225_TPWMTHRS, *value);
 382:boards/TMC2225_eval.c **** 		}
 383:boards/TMC2225_eval.c **** 		break;
 384:boards/TMC2225_eval.c **** 	case 187:
 385:boards/TMC2225_eval.c **** 		// PWM gradient
 386:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 387:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_GRAD_MASK, TMC2225_PW
 388:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 389:boards/TMC2225_eval.c **** 			// Set gradient
 390:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_GRAD_MASK, TMC2225_PWM_GRAD_
 391:boards/TMC2225_eval.c **** 
 392:boards/TMC2225_eval.c **** 			// Enable/disable stealthChop accordingly
 393:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_GCONF, TMC2225_EN_SPREADCYCLE_MASK, TMC2225_EN_SP
 394:boards/TMC2225_eval.c **** 		}
 395:boards/TMC2225_eval.c **** 		break;
 396:boards/TMC2225_eval.c **** 	case 191:
 397:boards/TMC2225_eval.c **** 		// PWM frequency
 398:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 399:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_FREQ_MASK, TMC2225_PW
 400:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 401:boards/TMC2225_eval.c **** 			if(*value >= 0 && *value < 4)
 402:boards/TMC2225_eval.c **** 			{
 403:boards/TMC2225_eval.c **** 				TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_FREQ_MASK, TMC2225_PWM_FREQ
 404:boards/TMC2225_eval.c **** 			}
 405:boards/TMC2225_eval.c **** 			else
 406:boards/TMC2225_eval.c **** 			{
 407:boards/TMC2225_eval.c **** 				errors |= TMC_ERROR_VALUE;
 408:boards/TMC2225_eval.c **** 			}
 409:boards/TMC2225_eval.c **** 		}
 410:boards/TMC2225_eval.c **** 		break;
 411:boards/TMC2225_eval.c **** 	case 192:
 412:boards/TMC2225_eval.c **** 		// PWM autoscale
 413:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 414:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_AUTOSCALE_MASK, TMC22
 415:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 416:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_AUTOSCALE_MASK, TMC2225_PWM_
 417:boards/TMC2225_eval.c **** 		}
 418:boards/TMC2225_eval.c **** 		break;
 419:boards/TMC2225_eval.c **** 	case 204:
 420:boards/TMC2225_eval.c **** 		// Freewheeling mode
 421:boards/TMC2225_eval.c **** 		if(readWrite == READ) {
 422:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_FREEWHEEL_MASK, TMC2225_F
 423:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 424:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_PWMCONF, TMC2225_FREEWHEEL_MASK, TMC2225_FREEWHEE
 425:boards/TMC2225_eval.c **** 		}
 426:boards/TMC2225_eval.c **** 		break;
 427:boards/TMC2225_eval.c **** 	default:
 428:boards/TMC2225_eval.c **** 		errors |= TMC_ERROR_TYPE;
 429:boards/TMC2225_eval.c **** 		break;
 430:boards/TMC2225_eval.c **** 	}
 431:boards/TMC2225_eval.c **** 
 432:boards/TMC2225_eval.c **** 	return errors;
 433:boards/TMC2225_eval.c **** }
 434:boards/TMC2225_eval.c **** 
 435:boards/TMC2225_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 436:boards/TMC2225_eval.c **** {
 437:boards/TMC2225_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 438:boards/TMC2225_eval.c **** }
 439:boards/TMC2225_eval.c **** 
 440:boards/TMC2225_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 441:boards/TMC2225_eval.c **** {
 442:boards/TMC2225_eval.c **** 	return handleParameter(READ, motor, type, value);
 443:boards/TMC2225_eval.c **** }
 444:boards/TMC2225_eval.c **** 
 445:boards/TMC2225_eval.c **** static void checkErrors(uint32_t tick)
 446:boards/TMC2225_eval.c **** {
  26              		.loc 1 446 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 447:boards/TMC2225_eval.c **** 	UNUSED(tick);
  31              		.loc 1 447 2 view .LVU1
 448:boards/TMC2225_eval.c **** 	Evalboards.ch2.errors = 0;
  32              		.loc 1 448 2 view .LVU2
  33              		.loc 1 448 24 is_stmt 0 view .LVU3
  34 0000 024B     		ldr	r3, .L2
  35 0002 0022     		movs	r2, #0
  36 0004 C3F88020 		str	r2, [r3, #128]
 449:boards/TMC2225_eval.c **** }
  37              		.loc 1 449 1 view .LVU4
  38 0008 7047     		bx	lr
  39              	.L3:
  40 000a 00BF     		.align	2
  41              	.L2:
  42 000c 00000000 		.word	Evalboards
  43              		.cfi_endproc
  44              	.LFE16:
  46              		.align	1
  47              		.global	tmc2225_writeRegister
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu softvfp
  53              	tmc2225_writeRegister:
  54              	.LVL1:
  55              	.LFB5:
  93:boards/TMC2225_eval.c **** 	tmc2225_writeInt(motorToIC(motor), address, value);
  56              		.loc 1 93 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  94:boards/TMC2225_eval.c **** }
  61              		.loc 1 94 2 view .LVU6
  62              	.LBB118:
  63              	.LBI118:
  60:boards/TMC2225_eval.c **** {
  64              		.loc 1 60 31 view .LVU7
  60:boards/TMC2225_eval.c **** {
  65              		.loc 1 60 31 is_stmt 0 view .LVU8
  66              	.LBE118:
  62:boards/TMC2225_eval.c **** 
  67              		.loc 1 62 2 is_stmt 1 view .LVU9
  64:boards/TMC2225_eval.c **** }
  68              		.loc 1 64 2 view .LVU10
  94:boards/TMC2225_eval.c **** }
  69              		.loc 1 94 2 is_stmt 0 view .LVU11
  70 0010 0148     		ldr	r0, .L5
  71              	.LVL2:
  94:boards/TMC2225_eval.c **** }
  72              		.loc 1 94 2 view .LVU12
  73 0012 FFF7FEBF 		b	tmc2225_writeInt
  74              	.LVL3:
  75              	.L6:
  94:boards/TMC2225_eval.c **** }
  76              		.loc 1 94 2 view .LVU13
  77 0016 00BF     		.align	2
  78              	.L5:
  79 0018 00000000 		.word	.LANCHOR0
  80              		.cfi_endproc
  81              	.LFE5:
  83              		.align	1
  84              		.global	tmc2225_readRegister
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
  90              	tmc2225_readRegister:
  91              	.LVL4:
  92              	.LFB6:
  98:boards/TMC2225_eval.c **** 	*value = tmc2225_readInt(motorToIC(motor), address);
  93              		.loc 1 98 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  99:boards/TMC2225_eval.c **** }
  97              		.loc 1 99 2 view .LVU15
  98              	.LBB119:
  99              	.LBI119:
  60:boards/TMC2225_eval.c **** {
 100              		.loc 1 60 31 view .LVU16
  60:boards/TMC2225_eval.c **** {
 101              		.loc 1 60 31 is_stmt 0 view .LVU17
 102              	.LBE119:
  62:boards/TMC2225_eval.c **** 
 103              		.loc 1 62 2 is_stmt 1 view .LVU18
  64:boards/TMC2225_eval.c **** }
 104              		.loc 1 64 2 view .LVU19
  98:boards/TMC2225_eval.c **** 	*value = tmc2225_readInt(motorToIC(motor), address);
 105              		.loc 1 98 1 is_stmt 0 view .LVU20
 106 001c 10B5     		push	{r4, lr}
 107              	.LCFI0:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
  99:boards/TMC2225_eval.c **** }
 111              		.loc 1 99 11 view .LVU21
 112 001e 0348     		ldr	r0, .L8
 113              	.LVL5:
  98:boards/TMC2225_eval.c **** 	*value = tmc2225_readInt(motorToIC(motor), address);
 114              		.loc 1 98 1 view .LVU22
 115 0020 1446     		mov	r4, r2
  99:boards/TMC2225_eval.c **** }
 116              		.loc 1 99 11 view .LVU23
 117 0022 FFF7FEFF 		bl	tmc2225_readInt
 118              	.LVL6:
  99:boards/TMC2225_eval.c **** }
 119              		.loc 1 99 9 view .LVU24
 120 0026 2060     		str	r0, [r4]
 100:boards/TMC2225_eval.c **** 
 121              		.loc 1 100 1 view .LVU25
 122 0028 10BD     		pop	{r4, pc}
 123              	.LVL7:
 124              	.L9:
 100:boards/TMC2225_eval.c **** 
 125              		.loc 1 100 1 view .LVU26
 126 002a 00BF     		.align	2
 127              	.L8:
 128 002c 00000000 		.word	.LANCHOR0
 129              		.cfi_endproc
 130              	.LFE6:
 132              		.align	1
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu softvfp
 138              	periodicJob:
 139              	.LVL8:
 140              	.LFB22:
 450:boards/TMC2225_eval.c **** 
 451:boards/TMC2225_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 452:boards/TMC2225_eval.c **** {
 453:boards/TMC2225_eval.c **** 	uint32_t errors = 0;
 454:boards/TMC2225_eval.c **** 
 455:boards/TMC2225_eval.c **** 	switch(type)
 456:boards/TMC2225_eval.c **** 	{
 457:boards/TMC2225_eval.c **** 	case 0:  // Read StepDir status bits
 458:boards/TMC2225_eval.c **** 		*value = StepDir_getStatus(motor);
 459:boards/TMC2225_eval.c **** 		break;
 460:boards/TMC2225_eval.c **** 	case 1:
 461:boards/TMC2225_eval.c **** 		tmc2225_set_slave(motorToIC(motor), (*value) & 0xFF);
 462:boards/TMC2225_eval.c **** 		break;
 463:boards/TMC2225_eval.c **** 	case 2:
 464:boards/TMC2225_eval.c **** 		*value = tmc2225_get_slave(motorToIC(motor));
 465:boards/TMC2225_eval.c **** 		break;
 466:boards/TMC2225_eval.c **** 	case 3:
 467:boards/TMC2225_eval.c **** 		*value = Timer.getDuty(TIMER_CHANNEL_3) * 100 / TIMER_MAX;
 468:boards/TMC2225_eval.c **** 		break;
 469:boards/TMC2225_eval.c **** 	case 4:
 470:boards/TMC2225_eval.c **** 		Timer.setDuty(TIMER_CHANNEL_3, (uint32_t) ((uint32_t)(*value) * (uint32_t)TIMER_MAX) / (uint32_t)
 471:boards/TMC2225_eval.c **** 		break;
 472:boards/TMC2225_eval.c **** 	default:
 473:boards/TMC2225_eval.c **** 		errors |= TMC_ERROR_TYPE;
 474:boards/TMC2225_eval.c **** 		break;
 475:boards/TMC2225_eval.c **** 	}
 476:boards/TMC2225_eval.c **** 
 477:boards/TMC2225_eval.c **** 	return errors;
 478:boards/TMC2225_eval.c **** }
 479:boards/TMC2225_eval.c **** 
 480:boards/TMC2225_eval.c **** static void deInit(void)
 481:boards/TMC2225_eval.c **** {
 482:boards/TMC2225_eval.c **** 	enableDriver(DRIVER_DISABLE);
 483:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN);
 484:boards/TMC2225_eval.c **** 
 485:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.STEP);
 486:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 487:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.MS1);
 488:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.MS2);
 489:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DIAG);
 490:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.INDEX);
 491:boards/TMC2225_eval.c **** 
 492:boards/TMC2225_eval.c **** 	StepDir_deInit();
 493:boards/TMC2225_eval.c **** }
 494:boards/TMC2225_eval.c **** 
 495:boards/TMC2225_eval.c **** static uint8_t reset()
 496:boards/TMC2225_eval.c **** {
 497:boards/TMC2225_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 498:boards/TMC2225_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, NULL);
 499:boards/TMC2225_eval.c **** 
 500:boards/TMC2225_eval.c **** 	return tmc2225_reset(&TMC2225);
 501:boards/TMC2225_eval.c **** }
 502:boards/TMC2225_eval.c **** 
 503:boards/TMC2225_eval.c **** static uint8_t restore()
 504:boards/TMC2225_eval.c **** {
 505:boards/TMC2225_eval.c **** 	return tmc2225_restore(&TMC2225);
 506:boards/TMC2225_eval.c **** }
 507:boards/TMC2225_eval.c **** 
 508:boards/TMC2225_eval.c **** static void enableDriver(DriverState state)
 509:boards/TMC2225_eval.c **** {
 510:boards/TMC2225_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 511:boards/TMC2225_eval.c **** 		state = Evalboards.driverEnable;
 512:boards/TMC2225_eval.c **** 
 513:boards/TMC2225_eval.c **** 	if(state == DRIVER_DISABLE)
 514:boards/TMC2225_eval.c **** 		HAL.IOs->config->setHigh(Pins.DRV_ENN);
 515:boards/TMC2225_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 516:boards/TMC2225_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN);
 517:boards/TMC2225_eval.c **** }
 518:boards/TMC2225_eval.c **** 
 519:boards/TMC2225_eval.c **** static void periodicJob(uint32_t tick)
 520:boards/TMC2225_eval.c **** {
 141              		.loc 1 520 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 521:boards/TMC2225_eval.c **** 	for(int motor = 0; motor < MOTORS; motor++)
 145              		.loc 1 521 2 view .LVU28
 146              	.LBB120:
 147              		.loc 1 521 6 view .LVU29
 148              		.loc 1 521 21 view .LVU30
 522:boards/TMC2225_eval.c **** 	{
 523:boards/TMC2225_eval.c **** 		tmc2225_periodicJob(&TMC2225, tick);
 149              		.loc 1 523 3 view .LVU31
 150              	.LBE120:
 520:boards/TMC2225_eval.c **** 	for(int motor = 0; motor < MOTORS; motor++)
 151              		.loc 1 520 1 is_stmt 0 view .LVU32
 152 0030 08B5     		push	{r3, lr}
 153              	.LCFI1:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 3, -8
 156              		.cfi_offset 14, -4
 520:boards/TMC2225_eval.c **** 	for(int motor = 0; motor < MOTORS; motor++)
 157              		.loc 1 520 1 view .LVU33
 158 0032 0146     		mov	r1, r0
 159              	.LBB121:
 160              		.loc 1 523 3 view .LVU34
 161 0034 0348     		ldr	r0, .L11
 162              	.LVL9:
 163              		.loc 1 523 3 view .LVU35
 164 0036 FFF7FEFF 		bl	tmc2225_periodicJob
 165              	.LVL10:
 524:boards/TMC2225_eval.c **** 		StepDir_periodicJob(motor);
 166              		.loc 1 524 3 is_stmt 1 view .LVU36
 167              	.LBE121:
 525:boards/TMC2225_eval.c **** 	}
 526:boards/TMC2225_eval.c **** }
 168              		.loc 1 526 1 is_stmt 0 view .LVU37
 169 003a BDE80840 		pop	{r3, lr}
 170              	.LCFI2:
 171              		.cfi_restore 14
 172              		.cfi_restore 3
 173              		.cfi_def_cfa_offset 0
 174              	.LBB122:
 524:boards/TMC2225_eval.c **** 		StepDir_periodicJob(motor);
 175              		.loc 1 524 3 view .LVU38
 176 003e 0020     		movs	r0, #0
 177 0040 FFF7FEBF 		b	StepDir_periodicJob
 178              	.LVL11:
 179              	.L12:
 180              		.align	2
 181              	.L11:
 182 0044 00000000 		.word	.LANCHOR0
 183              	.LBE122:
 184              		.cfi_endproc
 185              	.LFE22:
 187              		.align	1
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu softvfp
 193              	moveTo:
 194              	.LVL12:
 195              	.LFB11:
 128:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 196              		.loc 1 128 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 129:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 200              		.loc 1 129 2 view .LVU40
 128:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 201              		.loc 1 128 1 is_stmt 0 view .LVU41
 202 0048 10B5     		push	{r4, lr}
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 129:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 207              		.loc 1 129 4 view .LVU42
 208 004a 0446     		mov	r4, r0
 209 004c 18B9     		cbnz	r0, .L15
 132:boards/TMC2225_eval.c **** 
 210              		.loc 1 132 2 is_stmt 1 view .LVU43
 211 004e FFF7FEFF 		bl	StepDir_moveTo
 212              	.LVL13:
 134:boards/TMC2225_eval.c **** }
 213              		.loc 1 134 2 view .LVU44
 134:boards/TMC2225_eval.c **** }
 214              		.loc 1 134 9 is_stmt 0 view .LVU45
 215 0052 2046     		mov	r0, r4
 216              	.L13:
 135:boards/TMC2225_eval.c **** 
 217              		.loc 1 135 1 view .LVU46
 218 0054 10BD     		pop	{r4, pc}
 219              	.LVL14:
 220              	.L15:
 130:boards/TMC2225_eval.c **** 
 221              		.loc 1 130 10 view .LVU47
 222 0056 0820     		movs	r0, #8
 223              	.LVL15:
 130:boards/TMC2225_eval.c **** 
 224              		.loc 1 130 10 view .LVU48
 225 0058 FCE7     		b	.L13
 226              		.cfi_endproc
 227              	.LFE11:
 229              		.align	1
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
 235              	rotate:
 236              	.LVL16:
 237              	.LFB7:
 103:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 238              		.loc 1 103 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 104:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 242              		.loc 1 104 2 view .LVU50
 103:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 243              		.loc 1 103 1 is_stmt 0 view .LVU51
 244 005a 10B5     		push	{r4, lr}
 245              	.LCFI4:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 4, -8
 248              		.cfi_offset 14, -4
 104:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 249              		.loc 1 104 4 view .LVU52
 250 005c 0446     		mov	r4, r0
 251 005e 18B9     		cbnz	r0, .L18
 107:boards/TMC2225_eval.c **** 
 252              		.loc 1 107 2 is_stmt 1 view .LVU53
 253 0060 FFF7FEFF 		bl	StepDir_rotate
 254              	.LVL17:
 109:boards/TMC2225_eval.c **** }
 255              		.loc 1 109 2 view .LVU54
 109:boards/TMC2225_eval.c **** }
 256              		.loc 1 109 9 is_stmt 0 view .LVU55
 257 0064 2046     		mov	r0, r4
 258              	.L16:
 110:boards/TMC2225_eval.c **** 
 259              		.loc 1 110 1 view .LVU56
 260 0066 10BD     		pop	{r4, pc}
 261              	.LVL18:
 262              	.L18:
 105:boards/TMC2225_eval.c **** 
 263              		.loc 1 105 10 view .LVU57
 264 0068 0820     		movs	r0, #8
 265              	.LVL19:
 105:boards/TMC2225_eval.c **** 
 266              		.loc 1 105 10 view .LVU58
 267 006a FCE7     		b	.L16
 268              		.cfi_endproc
 269              	.LFE7:
 271              		.align	1
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu softvfp
 277              	stop:
 278              	.LVL20:
 279              	.LFB10:
 123:boards/TMC2225_eval.c **** 	return rotate(motor, 0);
 280              		.loc 1 123 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 124:boards/TMC2225_eval.c **** }
 285              		.loc 1 124 2 view .LVU60
 124:boards/TMC2225_eval.c **** }
 286              		.loc 1 124 9 is_stmt 0 view .LVU61
 287 006c 0021     		movs	r1, #0
 288 006e F4E7     		b	rotate
 289              	.LVL21:
 124:boards/TMC2225_eval.c **** }
 290              		.loc 1 124 9 view .LVU62
 291              		.cfi_endproc
 292              	.LFE10:
 294              		.align	1
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu softvfp
 300              	left:
 301              	.LVL22:
 302              	.LFB9:
 118:boards/TMC2225_eval.c **** 	return rotate(motor, -velocity);
 303              		.loc 1 118 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 119:boards/TMC2225_eval.c **** }
 308              		.loc 1 119 2 view .LVU64
 119:boards/TMC2225_eval.c **** }
 309              		.loc 1 119 9 is_stmt 0 view .LVU65
 310 0070 4942     		rsbs	r1, r1, #0
 311              	.LVL23:
 119:boards/TMC2225_eval.c **** }
 312              		.loc 1 119 9 view .LVU66
 313 0072 F2E7     		b	rotate
 314              	.LVL24:
 119:boards/TMC2225_eval.c **** }
 315              		.loc 1 119 9 view .LVU67
 316              		.cfi_endproc
 317              	.LFE9:
 319              		.align	1
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu softvfp
 325              	right:
 326              	.LVL25:
 327              	.LFB8:
 113:boards/TMC2225_eval.c **** 	return rotate(motor, velocity);
 328              		.loc 1 113 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 114:boards/TMC2225_eval.c **** }
 333              		.loc 1 114 2 view .LVU69
 114:boards/TMC2225_eval.c **** }
 334              		.loc 1 114 9 is_stmt 0 view .LVU70
 335 0074 F1E7     		b	rotate
 336              	.LVL26:
 114:boards/TMC2225_eval.c **** }
 337              		.loc 1 114 9 view .LVU71
 338              		.cfi_endproc
 339              	.LFE8:
 341              		.global	__aeabi_uldivmod
 342              		.global	__aeabi_ldivmod
 343              		.align	1
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu softvfp
 349              	handleParameter:
 350              	.LVL27:
 351              	.LFB13:
 149:boards/TMC2225_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 352              		.loc 1 149 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 150:boards/TMC2225_eval.c **** 	int32_t buffer = 0;
 356              		.loc 1 150 2 view .LVU73
 151:boards/TMC2225_eval.c **** 
 357              		.loc 1 151 2 view .LVU74
 153:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 358              		.loc 1 153 2 view .LVU75
 149:boards/TMC2225_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 359              		.loc 1 149 1 is_stmt 0 view .LVU76
 360 0076 70B5     		push	{r4, r5, r6, lr}
 361              	.LCFI5:
 362              		.cfi_def_cfa_offset 16
 363              		.cfi_offset 4, -16
 364              		.cfi_offset 5, -12
 365              		.cfi_offset 6, -8
 366              		.cfi_offset 14, -4
 149:boards/TMC2225_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 367              		.loc 1 149 1 view .LVU77
 368 0078 0646     		mov	r6, r0
 369 007a 1D46     		mov	r5, r3
 153:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 370              		.loc 1 153 4 view .LVU78
 371 007c 0C46     		mov	r4, r1
 372 007e 0029     		cmp	r1, #0
 373 0080 40F0AF82 		bne	.L103
 156:boards/TMC2225_eval.c **** 	{
 374              		.loc 1 156 2 is_stmt 1 view .LVU79
 375 0084 8C2A     		cmp	r2, #140
 376 0086 00F04881 		beq	.L24
 377 008a 4BD8     		bhi	.L25
 378 008c 1D2A     		cmp	r2, #29
 379 008e 07D9     		bls	.L115
 380 0090 322A     		cmp	r2, #50
 381 0092 00F03081 		beq	.L52
 382 0096 332A     		cmp	r2, #51
 383 0098 00F03681 		beq	.L53
 384              	.LVL28:
 385              	.L110:
 187:boards/TMC2225_eval.c **** 		}
 386              		.loc 1 187 11 is_stmt 0 view .LVU80
 387 009c 0426     		movs	r6, #4
 388 009e D0E1     		b	.L22
 389              	.LVL29:
 390              	.L115:
 187:boards/TMC2225_eval.c **** 		}
 391              		.loc 1 187 11 view .LVU81
 392 00a0 1D2A     		cmp	r2, #29
 393 00a2 FBD8     		bhi	.L110
 394 00a4 01A3     		adr	r3, .L41
 395 00a6 53F822F0 		ldr	pc, [r3, r2, lsl #2]
 396              	.LVL30:
 397 00aa 00BF     		.p2align 2
 398              	.L41:
 399 00ac CF010000 		.word	.L51+1
 400 00b0 E5010000 		.word	.L50+1
 401 00b4 F7010000 		.word	.L49+1
 402 00b8 09020000 		.word	.L48+1
 403 00bc 15020000 		.word	.L47+1
 404 00c0 2D020000 		.word	.L46+1
 405 00c4 3F020000 		.word	.L45+1
 406 00c8 6B020000 		.word	.L44+1
 407 00cc 8D020000 		.word	.L43+1
 408 00d0 9D000000 		.word	.L110+1
 409 00d4 9D000000 		.word	.L110+1
 410 00d8 9D000000 		.word	.L110+1
 411 00dc 9D000000 		.word	.L110+1
 412 00e0 9D000000 		.word	.L110+1
 413 00e4 9D000000 		.word	.L110+1
 414 00e8 9D000000 		.word	.L110+1
 415 00ec 9D000000 		.word	.L110+1
 416 00f0 9D000000 		.word	.L110+1
 417 00f4 9D000000 		.word	.L110+1
 418 00f8 9D000000 		.word	.L110+1
 419 00fc 9D000000 		.word	.L110+1
 420 0100 9D000000 		.word	.L110+1
 421 0104 9D000000 		.word	.L110+1
 422 0108 9D000000 		.word	.L110+1
 423 010c 9D000000 		.word	.L110+1
 424 0110 9D000000 		.word	.L110+1
 425 0114 9D000000 		.word	.L110+1
 426 0118 9D000000 		.word	.L110+1
 427 011c 9D020000 		.word	.L42+1
 428 0120 C7020000 		.word	.L40+1
 429              		.p2align 1
 430              	.L25:
 156:boards/TMC2225_eval.c **** 	{
 431              		.loc 1 156 2 view .LVU82
 432 0124 C02A     		cmp	r2, #192
 433 0126 45D8     		bhi	.L54
 434 0128 A12A     		cmp	r2, #161
 435 012a B7D9     		bls	.L110
 436 012c A23A     		subs	r2, r2, #162
 437              	.LVL31:
 156:boards/TMC2225_eval.c **** 	{
 438              		.loc 1 156 2 view .LVU83
 439 012e 1E2A     		cmp	r2, #30
 440 0130 B4D8     		bhi	.L110
 441 0132 01A3     		adr	r3, .L29
 442 0134 53F822F0 		ldr	pc, [r3, r2, lsl #2]
 443              	.LVL32:
 444              		.p2align 2
 445              	.L29:
 446 0138 A7030000 		.word	.L39+1
 447 013c 9D000000 		.word	.L110+1
 448 0140 9D000000 		.word	.L110+1
 449 0144 CB030000 		.word	.L38+1
 450 0148 09040000 		.word	.L37+1
 451 014c 89040000 		.word	.L36+1
 452 0150 9D000000 		.word	.L110+1
 453 0154 9D000000 		.word	.L110+1
 454 0158 9D000000 		.word	.L110+1
 455 015c 9D000000 		.word	.L110+1
 456 0160 9D000000 		.word	.L110+1
 457 0164 9D000000 		.word	.L110+1
 458 0168 9D000000 		.word	.L110+1
 459 016c 9D000000 		.word	.L110+1
 460 0170 9D000000 		.word	.L110+1
 461 0174 9D000000 		.word	.L110+1
 462 0178 9D000000 		.word	.L110+1
 463 017c AD040000 		.word	.L35+1
 464 0180 CF040000 		.word	.L34+1
 465 0184 E3040000 		.word	.L33+1
 466 0188 9D000000 		.word	.L110+1
 467 018c 9D000000 		.word	.L110+1
 468 0190 9D000000 		.word	.L110+1
 469 0194 9D000000 		.word	.L110+1
 470 0198 F7040000 		.word	.L32+1
 471 019c 39050000 		.word	.L31+1
 472 01a0 9D000000 		.word	.L110+1
 473 01a4 9D000000 		.word	.L110+1
 474 01a8 9D000000 		.word	.L110+1
 475 01ac 7B050000 		.word	.L30+1
 476 01b0 AD050000 		.word	.L28+1
 477              		.p2align 1
 478              	.L54:
 156:boards/TMC2225_eval.c **** 	{
 479              		.loc 1 156 2 view .LVU84
 480 01b4 CC2A     		cmp	r2, #204
 481 01b6 7FF471AF 		bne	.L110
 421:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_FREEWHEEL_MASK, TMC2225_F
 482              		.loc 1 421 3 is_stmt 1 view .LVU85
 422:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 483              		.loc 1 422 13 is_stmt 0 view .LVU86
 484 01ba AB48     		ldr	r0, .L128
 485              	.LVL33:
 422:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 486              		.loc 1 422 13 view .LVU87
 487 01bc 7021     		movs	r1, #112
 488              	.LVL34:
 421:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_FREEWHEEL_MASK, TMC2225_F
 489              		.loc 1 421 5 view .LVU88
 490 01be 002E     		cmp	r6, #0
 491 01c0 40F00682 		bne	.L102
 422:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 492              		.loc 1 422 4 is_stmt 1 view .LVU89
 493              	.LBB123:
 494              	.LBI123:
  60:boards/TMC2225_eval.c **** {
 495              		.loc 1 60 31 view .LVU90
 496              	.LVL35:
  60:boards/TMC2225_eval.c **** {
 497              		.loc 1 60 31 is_stmt 0 view .LVU91
 498              	.LBE123:
  62:boards/TMC2225_eval.c **** 
 499              		.loc 1 62 2 is_stmt 1 view .LVU92
  64:boards/TMC2225_eval.c **** }
 500              		.loc 1 64 2 view .LVU93
 422:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 501              		.loc 1 422 13 is_stmt 0 view .LVU94
 502 01c4 FFF7FEFF 		bl	tmc2225_readInt
 503              	.LVL36:
 422:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 504              		.loc 1 422 13 view .LVU95
 505 01c8 C0F30150 		ubfx	r0, r0, #20, #2
 506 01cc 02E0     		b	.L119
 507              	.LVL37:
 508              	.L51:
 160:boards/TMC2225_eval.c **** 			*value = StepDir_getTargetPosition(motor);
 509              		.loc 1 160 3 is_stmt 1 view .LVU96
 160:boards/TMC2225_eval.c **** 			*value = StepDir_getTargetPosition(motor);
 510              		.loc 1 160 5 is_stmt 0 view .LVU97
 511 01ce 18B9     		cbnz	r0, .L57
 161:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 512              		.loc 1 161 4 is_stmt 1 view .LVU98
 161:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 513              		.loc 1 161 13 is_stmt 0 view .LVU99
 514 01d0 FFF7FEFF 		bl	StepDir_getTargetPosition
 515              	.LVL38:
 516              	.L119:
 422:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 517              		.loc 1 422 11 view .LVU100
 518 01d4 2860     		str	r0, [r5]
 519 01d6 34E1     		b	.L22
 520              	.LVL39:
 521              	.L57:
 162:boards/TMC2225_eval.c **** 			StepDir_moveTo(motor, *value);
 522              		.loc 1 162 10 is_stmt 1 view .LVU101
 163:boards/TMC2225_eval.c **** 		}
 523              		.loc 1 163 4 view .LVU102
 524 01d8 2968     		ldr	r1, [r5]
 525              	.LVL40:
 163:boards/TMC2225_eval.c **** 		}
 526              		.loc 1 163 4 is_stmt 0 view .LVU103
 527 01da 0020     		movs	r0, #0
 528              	.LVL41:
 163:boards/TMC2225_eval.c **** 		}
 529              		.loc 1 163 4 view .LVU104
 530 01dc FFF7FEFF 		bl	StepDir_moveTo
 531              	.LVL42:
 532              	.L120:
 150:boards/TMC2225_eval.c **** 	int32_t buffer = 0;
 533              		.loc 1 150 11 view .LVU105
 534 01e0 0026     		movs	r6, #0
 535 01e2 2EE1     		b	.L22
 536              	.LVL43:
 537              	.L50:
 168:boards/TMC2225_eval.c **** 			*value = StepDir_getActualPosition(motor);
 538              		.loc 1 168 3 is_stmt 1 view .LVU106
 168:boards/TMC2225_eval.c **** 			*value = StepDir_getActualPosition(motor);
 539              		.loc 1 168 5 is_stmt 0 view .LVU107
 540 01e4 10B9     		cbnz	r0, .L58
 169:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 541              		.loc 1 169 4 is_stmt 1 view .LVU108
 169:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 542              		.loc 1 169 13 is_stmt 0 view .LVU109
 543 01e6 FFF7FEFF 		bl	StepDir_getActualPosition
 544              	.LVL44:
 169:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 545              		.loc 1 169 13 view .LVU110
 546 01ea F3E7     		b	.L119
 547              	.LVL45:
 548              	.L58:
 170:boards/TMC2225_eval.c **** 			StepDir_setActualPosition(motor, *value);
 549              		.loc 1 170 10 is_stmt 1 view .LVU111
 171:boards/TMC2225_eval.c **** 		}
 550              		.loc 1 171 4 view .LVU112
 551 01ec 2968     		ldr	r1, [r5]
 552              	.LVL46:
 171:boards/TMC2225_eval.c **** 		}
 553              		.loc 1 171 4 is_stmt 0 view .LVU113
 554 01ee 0020     		movs	r0, #0
 555              	.LVL47:
 171:boards/TMC2225_eval.c **** 		}
 556              		.loc 1 171 4 view .LVU114
 557 01f0 FFF7FEFF 		bl	StepDir_setActualPosition
 558              	.LVL48:
 171:boards/TMC2225_eval.c **** 		}
 559              		.loc 1 171 4 view .LVU115
 560 01f4 F4E7     		b	.L120
 561              	.LVL49:
 562              	.L49:
 176:boards/TMC2225_eval.c **** 			*value = StepDir_getTargetVelocity(motor);
 563              		.loc 1 176 3 is_stmt 1 view .LVU116
 176:boards/TMC2225_eval.c **** 			*value = StepDir_getTargetVelocity(motor);
 564              		.loc 1 176 5 is_stmt 0 view .LVU117
 565 01f6 10B9     		cbnz	r0, .L59
 177:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 566              		.loc 1 177 4 is_stmt 1 view .LVU118
 177:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 567              		.loc 1 177 13 is_stmt 0 view .LVU119
 568 01f8 FFF7FEFF 		bl	StepDir_getTargetVelocity
 569              	.LVL50:
 177:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 570              		.loc 1 177 13 view .LVU120
 571 01fc EAE7     		b	.L119
 572              	.LVL51:
 573              	.L59:
 178:boards/TMC2225_eval.c **** 			StepDir_rotate(motor, *value);
 574              		.loc 1 178 10 is_stmt 1 view .LVU121
 179:boards/TMC2225_eval.c **** 		}
 575              		.loc 1 179 4 view .LVU122
 576 01fe 2968     		ldr	r1, [r5]
 577              	.LVL52:
 179:boards/TMC2225_eval.c **** 		}
 578              		.loc 1 179 4 is_stmt 0 view .LVU123
 579 0200 0020     		movs	r0, #0
 580              	.LVL53:
 179:boards/TMC2225_eval.c **** 		}
 581              		.loc 1 179 4 view .LVU124
 582 0202 FFF7FEFF 		bl	StepDir_rotate
 583              	.LVL54:
 179:boards/TMC2225_eval.c **** 		}
 584              		.loc 1 179 4 view .LVU125
 585 0206 EBE7     		b	.L120
 586              	.LVL55:
 587              	.L48:
 184:boards/TMC2225_eval.c **** 			*value = StepDir_getActualVelocity(motor);
 588              		.loc 1 184 3 is_stmt 1 view .LVU126
 184:boards/TMC2225_eval.c **** 			*value = StepDir_getActualVelocity(motor);
 589              		.loc 1 184 5 is_stmt 0 view .LVU127
 590 0208 0028     		cmp	r0, #0
 591 020a 7FF447AF 		bne	.L110
 185:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 592              		.loc 1 185 4 is_stmt 1 view .LVU128
 185:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 593              		.loc 1 185 13 is_stmt 0 view .LVU129
 594 020e FFF7FEFF 		bl	StepDir_getActualVelocity
 595              	.LVL56:
 185:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 596              		.loc 1 185 13 view .LVU130
 597 0212 DFE7     		b	.L119
 598              	.LVL57:
 599              	.L47:
 192:boards/TMC2225_eval.c **** 			*value = StepDir_getVelocityMax(motor);
 600              		.loc 1 192 3 is_stmt 1 view .LVU131
 192:boards/TMC2225_eval.c **** 			*value = StepDir_getVelocityMax(motor);
 601              		.loc 1 192 5 is_stmt 0 view .LVU132
 602 0214 10B9     		cbnz	r0, .L60
 193:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 603              		.loc 1 193 4 is_stmt 1 view .LVU133
 193:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 604              		.loc 1 193 13 is_stmt 0 view .LVU134
 605 0216 FFF7FEFF 		bl	StepDir_getVelocityMax
 606              	.LVL58:
 193:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 607              		.loc 1 193 13 view .LVU135
 608 021a DBE7     		b	.L119
 609              	.LVL59:
 610              	.L60:
 194:boards/TMC2225_eval.c **** 			StepDir_setVelocityMax(motor, abs(*value));
 611              		.loc 1 194 10 is_stmt 1 view .LVU136
 195:boards/TMC2225_eval.c **** 		}
 612              		.loc 1 195 4 view .LVU137
 613 021c 2968     		ldr	r1, [r5]
 614              	.LVL60:
 195:boards/TMC2225_eval.c **** 		}
 615              		.loc 1 195 4 is_stmt 0 view .LVU138
 616 021e 0029     		cmp	r1, #0
 617 0220 B8BF     		it	lt
 618 0222 4942     		rsblt	r1, r1, #0
 619 0224 0020     		movs	r0, #0
 620              	.LVL61:
 195:boards/TMC2225_eval.c **** 		}
 621              		.loc 1 195 4 view .LVU139
 622 0226 FFF7FEFF 		bl	StepDir_setVelocityMax
 623              	.LVL62:
 195:boards/TMC2225_eval.c **** 		}
 624              		.loc 1 195 4 view .LVU140
 625 022a D9E7     		b	.L120
 626              	.LVL63:
 627              	.L46:
 200:boards/TMC2225_eval.c **** 			*value = StepDir_getAcceleration(motor);
 628              		.loc 1 200 3 is_stmt 1 view .LVU141
 200:boards/TMC2225_eval.c **** 			*value = StepDir_getAcceleration(motor);
 629              		.loc 1 200 5 is_stmt 0 view .LVU142
 630 022c 10B9     		cbnz	r0, .L61
 201:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 631              		.loc 1 201 4 is_stmt 1 view .LVU143
 201:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 632              		.loc 1 201 13 is_stmt 0 view .LVU144
 633 022e FFF7FEFF 		bl	StepDir_getAcceleration
 634              	.LVL64:
 201:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 635              		.loc 1 201 13 view .LVU145
 636 0232 CFE7     		b	.L119
 637              	.LVL65:
 638              	.L61:
 202:boards/TMC2225_eval.c **** 			StepDir_setAcceleration(motor, *value);
 639              		.loc 1 202 10 is_stmt 1 view .LVU146
 203:boards/TMC2225_eval.c **** 		}
 640              		.loc 1 203 4 view .LVU147
 641 0234 2968     		ldr	r1, [r5]
 642              	.LVL66:
 203:boards/TMC2225_eval.c **** 		}
 643              		.loc 1 203 4 is_stmt 0 view .LVU148
 644 0236 0020     		movs	r0, #0
 645              	.LVL67:
 203:boards/TMC2225_eval.c **** 		}
 646              		.loc 1 203 4 view .LVU149
 647 0238 FFF7FEFF 		bl	StepDir_setAcceleration
 648              	.LVL68:
 203:boards/TMC2225_eval.c **** 		}
 649              		.loc 1 203 4 view .LVU150
 650 023c D0E7     		b	.L120
 651              	.LVL69:
 652              	.L45:
 208:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IRUN_MASK, TMC2225_IRU
 653              		.loc 1 208 3 is_stmt 1 view .LVU151
 209:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 654              		.loc 1 209 13 is_stmt 0 view .LVU152
 655 023e 8A48     		ldr	r0, .L128
 656              	.LVL70:
 209:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 657              		.loc 1 209 13 view .LVU153
 658 0240 1021     		movs	r1, #16
 659              	.LVL71:
 208:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IRUN_MASK, TMC2225_IRU
 660              		.loc 1 208 5 view .LVU154
 661 0242 26B9     		cbnz	r6, .L62
 209:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 662              		.loc 1 209 4 is_stmt 1 view .LVU155
 663              	.LBB124:
 664              	.LBI124:
  60:boards/TMC2225_eval.c **** {
 665              		.loc 1 60 31 view .LVU156
 666              	.LVL72:
  60:boards/TMC2225_eval.c **** {
 667              		.loc 1 60 31 is_stmt 0 view .LVU157
 668              	.LBE124:
  62:boards/TMC2225_eval.c **** 
 669              		.loc 1 62 2 is_stmt 1 view .LVU158
  64:boards/TMC2225_eval.c **** }
 670              		.loc 1 64 2 view .LVU159
 209:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 671              		.loc 1 209 13 is_stmt 0 view .LVU160
 672 0244 FFF7FEFF 		bl	tmc2225_readInt
 673              	.LVL73:
 209:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 674              		.loc 1 209 13 view .LVU161
 675 0248 C0F30420 		ubfx	r0, r0, #8, #5
 676 024c C2E7     		b	.L119
 677              	.LVL74:
 678              	.L62:
 210:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IRUN_MASK, TMC2225_IRUN_SHIFT
 679              		.loc 1 210 10 is_stmt 1 view .LVU162
 211:boards/TMC2225_eval.c **** 		}
 680              		.loc 1 211 4 view .LVU163
 681              	.LBB125:
 682              	.LBI125:
  60:boards/TMC2225_eval.c **** {
 683              		.loc 1 60 31 view .LVU164
  60:boards/TMC2225_eval.c **** {
 684              		.loc 1 60 31 is_stmt 0 view .LVU165
 685              	.LBE125:
  62:boards/TMC2225_eval.c **** 
 686              		.loc 1 62 2 is_stmt 1 view .LVU166
  64:boards/TMC2225_eval.c **** }
 687              		.loc 1 64 2 view .LVU167
 688              	.LBB126:
 689              	.LBI126:
  60:boards/TMC2225_eval.c **** {
 690              		.loc 1 60 31 view .LVU168
  60:boards/TMC2225_eval.c **** {
 691              		.loc 1 60 31 is_stmt 0 view .LVU169
 692              	.LBE126:
  62:boards/TMC2225_eval.c **** 
 693              		.loc 1 62 2 is_stmt 1 view .LVU170
  64:boards/TMC2225_eval.c **** }
 694              		.loc 1 64 2 view .LVU171
 211:boards/TMC2225_eval.c **** 		}
 695              		.loc 1 211 4 is_stmt 0 view .LVU172
 696 024e FFF7FEFF 		bl	tmc2225_readInt
 697              	.LVL75:
 211:boards/TMC2225_eval.c **** 		}
 698              		.loc 1 211 4 view .LVU173
 699 0252 2B68     		ldr	r3, [r5]
 700 0254 1B02     		lsls	r3, r3, #8
 701 0256 03F4F853 		and	r3, r3, #7936
 702 025a 20F4F852 		bic	r2, r0, #7936
 703 025e 1A43     		orrs	r2, r2, r3
 704              	.LVL76:
 705              	.L126:
 219:boards/TMC2225_eval.c **** 		}
 706              		.loc 1 219 4 view .LVU174
 707 0260 1021     		movs	r1, #16
 708              	.L118:
 282:boards/TMC2225_eval.c **** 			}
 709              		.loc 1 282 5 view .LVU175
 710 0262 8148     		ldr	r0, .L128
 711 0264 FFF7FEFF 		bl	tmc2225_writeInt
 712              	.LVL77:
 713 0268 BAE7     		b	.L120
 714              	.LVL78:
 715              	.L44:
 216:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IHOLD_MASK, TMC2225_IH
 716              		.loc 1 216 3 is_stmt 1 view .LVU176
 217:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 717              		.loc 1 217 13 is_stmt 0 view .LVU177
 718 026a 7F48     		ldr	r0, .L128
 719              	.LVL79:
 217:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 720              		.loc 1 217 13 view .LVU178
 721 026c 1021     		movs	r1, #16
 722              	.LVL80:
 216:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IHOLD_MASK, TMC2225_IH
 723              		.loc 1 216 5 view .LVU179
 724 026e 26B9     		cbnz	r6, .L63
 217:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 725              		.loc 1 217 4 is_stmt 1 view .LVU180
 726              	.LBB127:
 727              	.LBI127:
  60:boards/TMC2225_eval.c **** {
 728              		.loc 1 60 31 view .LVU181
 729              	.LVL81:
  60:boards/TMC2225_eval.c **** {
 730              		.loc 1 60 31 is_stmt 0 view .LVU182
 731              	.LBE127:
  62:boards/TMC2225_eval.c **** 
 732              		.loc 1 62 2 is_stmt 1 view .LVU183
  64:boards/TMC2225_eval.c **** }
 733              		.loc 1 64 2 view .LVU184
 217:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 734              		.loc 1 217 13 is_stmt 0 view .LVU185
 735 0270 FFF7FEFF 		bl	tmc2225_readInt
 736              	.LVL82:
 217:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 737              		.loc 1 217 13 view .LVU186
 738 0274 00F01F00 		and	r0, r0, #31
 739 0278 ACE7     		b	.L119
 740              	.LVL83:
 741              	.L63:
 218:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_IHOLD_IRUN, TMC2225_IHOLD_MASK, TMC2225_IHOLD_SHI
 742              		.loc 1 218 10 is_stmt 1 view .LVU187
 219:boards/TMC2225_eval.c **** 		}
 743              		.loc 1 219 4 view .LVU188
 744              	.LBB128:
 745              	.LBI128:
  60:boards/TMC2225_eval.c **** {
 746              		.loc 1 60 31 view .LVU189
  60:boards/TMC2225_eval.c **** {
 747              		.loc 1 60 31 is_stmt 0 view .LVU190
 748              	.LBE128:
  62:boards/TMC2225_eval.c **** 
 749              		.loc 1 62 2 is_stmt 1 view .LVU191
  64:boards/TMC2225_eval.c **** }
 750              		.loc 1 64 2 view .LVU192
 751              	.LBB129:
 752              	.LBI129:
  60:boards/TMC2225_eval.c **** {
 753              		.loc 1 60 31 view .LVU193
  60:boards/TMC2225_eval.c **** {
 754              		.loc 1 60 31 is_stmt 0 view .LVU194
 755              	.LBE129:
  62:boards/TMC2225_eval.c **** 
 756              		.loc 1 62 2 is_stmt 1 view .LVU195
  64:boards/TMC2225_eval.c **** }
 757              		.loc 1 64 2 view .LVU196
 219:boards/TMC2225_eval.c **** 		}
 758              		.loc 1 219 4 is_stmt 0 view .LVU197
 759 027a FFF7FEFF 		bl	tmc2225_readInt
 760              	.LVL84:
 219:boards/TMC2225_eval.c **** 		}
 761              		.loc 1 219 4 view .LVU198
 762 027e 2A68     		ldr	r2, [r5]
 763 0280 20F01F00 		bic	r0, r0, #31
 764 0284 02F01F02 		and	r2, r2, #31
 765 0288 0243     		orrs	r2, r2, r0
 766 028a E9E7     		b	.L126
 767              	.LVL85:
 768              	.L43:
 224:boards/TMC2225_eval.c **** 			*value = (StepDir_getStatus(motor) & STATUS_TARGET_REACHED)? 1:0;
 769              		.loc 1 224 3 is_stmt 1 view .LVU199
 224:boards/TMC2225_eval.c **** 			*value = (StepDir_getStatus(motor) & STATUS_TARGET_REACHED)? 1:0;
 770              		.loc 1 224 5 is_stmt 0 view .LVU200
 771 028c 0028     		cmp	r0, #0
 772 028e 7FF405AF 		bne	.L110
 225:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 773              		.loc 1 225 4 is_stmt 1 view .LVU201
 225:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 774              		.loc 1 225 14 is_stmt 0 view .LVU202
 775 0292 FFF7FEFF 		bl	StepDir_getStatus
 776              	.LVL86:
 225:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 777              		.loc 1 225 66 view .LVU203
 778 0296 C0F30010 		ubfx	r0, r0, #4, #1
 779 029a 9BE7     		b	.L119
 780              	.LVL87:
 781              	.L42:
 232:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_GCONF, TMC2225_INTERNAL_RSENSE_MASK, TMC22
 782              		.loc 1 232 3 is_stmt 1 view .LVU204
 232:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_GCONF, TMC2225_INTERNAL_RSENSE_MASK, TMC22
 783              		.loc 1 232 5 is_stmt 0 view .LVU205
 784 029c 30B9     		cbnz	r0, .L64
 233:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 785              		.loc 1 233 4 is_stmt 1 view .LVU206
 786              	.LBB130:
 787              	.LBI130:
  60:boards/TMC2225_eval.c **** {
 788              		.loc 1 60 31 view .LVU207
 789              	.LVL88:
  60:boards/TMC2225_eval.c **** {
 790              		.loc 1 60 31 is_stmt 0 view .LVU208
 791              	.LBE130:
  62:boards/TMC2225_eval.c **** 
 792              		.loc 1 62 2 is_stmt 1 view .LVU209
  64:boards/TMC2225_eval.c **** }
 793              		.loc 1 64 2 view .LVU210
 233:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 794              		.loc 1 233 13 is_stmt 0 view .LVU211
 795 029e 0146     		mov	r1, r0
 796              	.LVL89:
 233:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 797              		.loc 1 233 13 view .LVU212
 798 02a0 7148     		ldr	r0, .L128
 799              	.LVL90:
 233:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 800              		.loc 1 233 13 view .LVU213
 801 02a2 FFF7FEFF 		bl	tmc2225_readInt
 802              	.LVL91:
 233:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 803              		.loc 1 233 13 view .LVU214
 804 02a6 C0F34000 		ubfx	r0, r0, #1, #1
 805 02aa 93E7     		b	.L119
 806              	.LVL92:
 807              	.L64:
 234:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_GCONF, TMC2225_INTERNAL_RSENSE_MASK, TMC2225_INTE
 808              		.loc 1 234 10 is_stmt 1 view .LVU215
 235:boards/TMC2225_eval.c **** 		}
 809              		.loc 1 235 4 view .LVU216
 810              	.LBB131:
 811              	.LBI131:
  60:boards/TMC2225_eval.c **** {
 812              		.loc 1 60 31 view .LVU217
  60:boards/TMC2225_eval.c **** {
 813              		.loc 1 60 31 is_stmt 0 view .LVU218
 814              	.LBE131:
  62:boards/TMC2225_eval.c **** 
 815              		.loc 1 62 2 is_stmt 1 view .LVU219
  64:boards/TMC2225_eval.c **** }
 816              		.loc 1 64 2 view .LVU220
 817              	.LBB132:
 818              	.LBI132:
  60:boards/TMC2225_eval.c **** {
 819              		.loc 1 60 31 view .LVU221
  60:boards/TMC2225_eval.c **** {
 820              		.loc 1 60 31 is_stmt 0 view .LVU222
 821              	.LBE132:
  62:boards/TMC2225_eval.c **** 
 822              		.loc 1 62 2 is_stmt 1 view .LVU223
  64:boards/TMC2225_eval.c **** }
 823              		.loc 1 64 2 view .LVU224
 235:boards/TMC2225_eval.c **** 		}
 824              		.loc 1 235 4 is_stmt 0 view .LVU225
 825 02ac 6E48     		ldr	r0, .L128
 826              	.LVL93:
 235:boards/TMC2225_eval.c **** 		}
 827              		.loc 1 235 4 view .LVU226
 828 02ae 0021     		movs	r1, #0
 829              	.LVL94:
 235:boards/TMC2225_eval.c **** 		}
 830              		.loc 1 235 4 view .LVU227
 831 02b0 FFF7FEFF 		bl	tmc2225_readInt
 832              	.LVL95:
 235:boards/TMC2225_eval.c **** 		}
 833              		.loc 1 235 4 view .LVU228
 834 02b4 2B68     		ldr	r3, [r5]
 835 02b6 5B00     		lsls	r3, r3, #1
 836 02b8 03F00203 		and	r3, r3, #2
 837 02bc 20F00202 		bic	r2, r0, #2
 838 02c0 1A43     		orrs	r2, r2, r3
 839              	.LVL96:
 840              	.L127:
 393:boards/TMC2225_eval.c **** 		}
 841              		.loc 1 393 4 view .LVU229
 842 02c2 0021     		movs	r1, #0
 843 02c4 CDE7     		b	.L118
 844              	.LVL97:
 845              	.L40:
 240:boards/TMC2225_eval.c **** 			buffer = (int32_t)(((int64_t)StepDir_getFrequency(motor) * (int64_t)122) / (int64_t)TMC2225_FIEL
 846              		.loc 1 240 3 is_stmt 1 view .LVU230
 240:boards/TMC2225_eval.c **** 			buffer = (int32_t)(((int64_t)StepDir_getFrequency(motor) * (int64_t)122) / (int64_t)TMC2225_FIEL
 847              		.loc 1 240 5 is_stmt 0 view .LVU231
 848 02c6 0028     		cmp	r0, #0
 849 02c8 7FF4E8AE 		bne	.L110
 241:boards/TMC2225_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 850              		.loc 1 241 4 is_stmt 1 view .LVU232
 241:boards/TMC2225_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 851              		.loc 1 241 33 is_stmt 0 view .LVU233
 852 02cc FFF7FEFF 		bl	StepDir_getFrequency
 853              	.LVL98:
 241:boards/TMC2225_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 854              		.loc 1 241 88 view .LVU234
 855 02d0 1221     		movs	r1, #18
 241:boards/TMC2225_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 856              		.loc 1 241 33 view .LVU235
 857 02d2 0446     		mov	r4, r0
 858              	.LBB133:
 859              	.LBI133:
  60:boards/TMC2225_eval.c **** {
 860              		.loc 1 60 31 is_stmt 1 view .LVU236
 861              	.LVL99:
  60:boards/TMC2225_eval.c **** {
 862              		.loc 1 60 31 is_stmt 0 view .LVU237
 863              	.LBE133:
  62:boards/TMC2225_eval.c **** 
 864              		.loc 1 62 2 is_stmt 1 view .LVU238
  64:boards/TMC2225_eval.c **** }
 865              		.loc 1 64 2 view .LVU239
 241:boards/TMC2225_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 866              		.loc 1 241 88 is_stmt 0 view .LVU240
 867 02d4 6448     		ldr	r0, .L128
 868 02d6 FFF7FEFF 		bl	tmc2225_readInt
 869              	.LVL100:
 241:boards/TMC2225_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 870              		.loc 1 241 79 view .LVU241
 871 02da C0F31302 		ubfx	r2, r0, #0, #20
 241:boards/TMC2225_eval.c **** 			*value = (abs(buffer) < 20) ? 0 : buffer;
 872              		.loc 1 241 77 view .LVU242
 873 02de 7A20     		movs	r0, #122
 874 02e0 D317     		asrs	r3, r2, #31
 875 02e2 A4FB0001 		umull	r0, r1, r4, r0
 876 02e6 FFF7FEFF 		bl	__aeabi_ldivmod
 877              	.LVL101:
 242:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 878              		.loc 1 242 4 is_stmt 1 view .LVU243
 242:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 879              		.loc 1 242 26 is_stmt 0 view .LVU244
 880 02ea 00F11303 		add	r3, r0, #19
 242:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 881              		.loc 1 242 36 view .LVU245
 882 02ee 262B     		cmp	r3, #38
 883 02f0 98BF     		it	ls
 884 02f2 0020     		movls	r0, #0
 885              	.LVL102:
 242:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 886              		.loc 1 242 36 view .LVU246
 887 02f4 6EE7     		b	.L119
 888              	.LVL103:
 889              	.L52:
 248:boards/TMC2225_eval.c **** 			*value = StepDir_getMode(motor);
 890              		.loc 1 248 3 is_stmt 1 view .LVU247
 248:boards/TMC2225_eval.c **** 			*value = StepDir_getMode(motor);
 891              		.loc 1 248 5 is_stmt 0 view .LVU248
 892 02f6 10B9     		cbnz	r0, .L66
 249:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 893              		.loc 1 249 4 is_stmt 1 view .LVU249
 249:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 894              		.loc 1 249 13 is_stmt 0 view .LVU250
 895 02f8 FFF7FEFF 		bl	StepDir_getMode
 896              	.LVL104:
 249:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 897              		.loc 1 249 13 view .LVU251
 898 02fc 6AE7     		b	.L119
 899              	.LVL105:
 900              	.L66:
 250:boards/TMC2225_eval.c **** 			StepDir_setMode(motor, *value);
 901              		.loc 1 250 10 is_stmt 1 view .LVU252
 251:boards/TMC2225_eval.c **** 		}
 902              		.loc 1 251 4 view .LVU253
 903 02fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 904              	.LVL106:
 251:boards/TMC2225_eval.c **** 		}
 905              		.loc 1 251 4 is_stmt 0 view .LVU254
 906 0300 2046     		mov	r0, r4
 907              	.LVL107:
 251:boards/TMC2225_eval.c **** 		}
 908              		.loc 1 251 4 view .LVU255
 909 0302 FFF7FEFF 		bl	StepDir_setMode
 910              	.LVL108:
 251:boards/TMC2225_eval.c **** 		}
 911              		.loc 1 251 4 view .LVU256
 912 0306 6BE7     		b	.L120
 913              	.LVL109:
 914              	.L53:
 255:boards/TMC2225_eval.c **** 			*value = StepDir_getFrequency(motor);
 915              		.loc 1 255 3 is_stmt 1 view .LVU257
 255:boards/TMC2225_eval.c **** 			*value = StepDir_getFrequency(motor);
 916              		.loc 1 255 5 is_stmt 0 view .LVU258
 917 0308 10B9     		cbnz	r0, .L67
 256:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 918              		.loc 1 256 4 is_stmt 1 view .LVU259
 256:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 919              		.loc 1 256 13 is_stmt 0 view .LVU260
 920 030a FFF7FEFF 		bl	StepDir_getFrequency
 921              	.LVL110:
 256:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 922              		.loc 1 256 13 view .LVU261
 923 030e 61E7     		b	.L119
 924              	.LVL111:
 925              	.L67:
 257:boards/TMC2225_eval.c **** 			StepDir_setFrequency(motor, *value);
 926              		.loc 1 257 10 is_stmt 1 view .LVU262
 258:boards/TMC2225_eval.c **** 		}
 927              		.loc 1 258 4 view .LVU263
 928 0310 1968     		ldr	r1, [r3]
 929              	.LVL112:
 258:boards/TMC2225_eval.c **** 		}
 930              		.loc 1 258 4 is_stmt 0 view .LVU264
 931 0312 2046     		mov	r0, r4
 932              	.LVL113:
 258:boards/TMC2225_eval.c **** 		}
 933              		.loc 1 258 4 view .LVU265
 934 0314 FFF7FEFF 		bl	StepDir_setFrequency
 935              	.LVL114:
 258:boards/TMC2225_eval.c **** 		}
 936              		.loc 1 258 4 view .LVU266
 937 0318 62E7     		b	.L120
 938              	.LVL115:
 939              	.L24:
 263:boards/TMC2225_eval.c **** 			*value = 256 >> TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_MRES_MASK, TMC222
 940              		.loc 1 263 3 is_stmt 1 view .LVU267
 263:boards/TMC2225_eval.c **** 			*value = 256 >> TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_MRES_MASK, TMC222
 941              		.loc 1 263 5 is_stmt 0 view .LVU268
 942 031a 48B9     		cbnz	r0, .L68
 264:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 943              		.loc 1 264 4 is_stmt 1 view .LVU269
 944              	.LBB134:
 945              	.LBI134:
  60:boards/TMC2225_eval.c **** {
 946              		.loc 1 60 31 view .LVU270
 947              	.LVL116:
  60:boards/TMC2225_eval.c **** {
 948              		.loc 1 60 31 is_stmt 0 view .LVU271
 949              	.LBE134:
  62:boards/TMC2225_eval.c **** 
 950              		.loc 1 62 2 is_stmt 1 view .LVU272
  64:boards/TMC2225_eval.c **** }
 951              		.loc 1 64 2 view .LVU273
 264:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 952              		.loc 1 264 20 is_stmt 0 view .LVU274
 953 031c 5248     		ldr	r0, .L128
 954              	.LVL117:
 264:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 955              		.loc 1 264 20 view .LVU275
 956 031e 6C21     		movs	r1, #108
 957              	.LVL118:
 264:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 958              		.loc 1 264 20 view .LVU276
 959 0320 FFF7FEFF 		bl	tmc2225_readInt
 960              	.LVL119:
 264:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 961              		.loc 1 264 20 view .LVU277
 962 0324 C0F30363 		ubfx	r3, r0, #24, #4
 264:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 963              		.loc 1 264 17 view .LVU278
 964 0328 4FF48070 		mov	r0, #256
 965 032c 1841     		asrs	r0, r0, r3
 966 032e 51E7     		b	.L119
 967              	.LVL120:
 968              	.L68:
 265:boards/TMC2225_eval.c **** 			switch(*value)
 969              		.loc 1 265 10 is_stmt 1 view .LVU279
 266:boards/TMC2225_eval.c **** 			{
 970              		.loc 1 266 4 view .LVU280
 266:boards/TMC2225_eval.c **** 			{
 971              		.loc 1 266 11 is_stmt 0 view .LVU281
 972 0330 1B68     		ldr	r3, [r3]
 973              	.LVL121:
 266:boards/TMC2225_eval.c **** 			{
 974              		.loc 1 266 11 view .LVU282
 975 0332 102B     		cmp	r3, #16
 976 0334 2FD0     		beq	.L69
 977 0336 0ADC     		bgt	.L70
 978 0338 013B     		subs	r3, r3, #1
 979 033a 072B     		cmp	r3, #7
 980 033c 0ED8     		bhi	.L71
 981 033e 072B     		cmp	r3, #7
 982 0340 0CD8     		bhi	.L71
 983 0342 DFE803F0 		tbb	[pc, r3]
 984              	.LVL122:
 985              	.L73:
 986 0346 15       		.byte	(.L76-.L73)/2
 987 0347 22       		.byte	(.L75-.L73)/2
 988 0348 0B       		.byte	(.L71-.L73)/2
 989 0349 24       		.byte	(.L74-.L73)/2
 990 034a 0B       		.byte	(.L71-.L73)/2
 991 034b 0B       		.byte	(.L71-.L73)/2
 992 034c 0B       		.byte	(.L71-.L73)/2
 993 034d 26       		.byte	(.L72-.L73)/2
 994              		.p2align 1
 995              	.L70:
 266:boards/TMC2225_eval.c **** 			{
 996              		.loc 1 266 11 view .LVU283
 997 034e 802B     		cmp	r3, #128
 998 0350 27D0     		beq	.L77
 999 0352 08DC     		bgt	.L78
 1000 0354 202B     		cmp	r3, #32
 1001 0356 20D0     		beq	.L79
 1002 0358 402B     		cmp	r3, #64
 1003 035a 20D0     		beq	.L80
 1004              	.LVL123:
 1005              	.L71:
 277:boards/TMC2225_eval.c **** 			}
 1006              		.loc 1 277 15 is_stmt 1 view .LVU284
 277:boards/TMC2225_eval.c **** 			}
 1007              		.loc 1 277 22 is_stmt 0 view .LVU285
 1008 035c 4FF0FF33 		mov	r3, #-1
 1009 0360 2B60     		str	r3, [r5]
 277:boards/TMC2225_eval.c **** 			}
 1010              		.loc 1 277 29 is_stmt 1 view .LVU286
 280:boards/TMC2225_eval.c **** 			{
 1011              		.loc 1 280 4 view .LVU287
 1012              	.L113:
 407:boards/TMC2225_eval.c **** 			}
 1013              		.loc 1 407 12 is_stmt 0 view .LVU288
 1014 0362 1026     		movs	r6, #16
 1015              	.LVL124:
 407:boards/TMC2225_eval.c **** 			}
 1016              		.loc 1 407 12 view .LVU289
 1017 0364 6DE0     		b	.L22
 1018              	.LVL125:
 1019              	.L78:
 407:boards/TMC2225_eval.c **** 			}
 1020              		.loc 1 407 12 view .LVU290
 1021 0366 B3F5807F 		cmp	r3, #256
 1022 036a F7D1     		bne	.L71
 276:boards/TMC2225_eval.c **** 			default:   *value = -1;  break;
 1023              		.loc 1 276 15 is_stmt 1 view .LVU291
 276:boards/TMC2225_eval.c **** 			default:   *value = -1;  break;
 1024              		.loc 1 276 22 is_stmt 0 view .LVU292
 1025 036c 2960     		str	r1, [r5]
 276:boards/TMC2225_eval.c **** 			default:   *value = -1;  break;
 1026              		.loc 1 276 29 is_stmt 1 view .LVU293
 276:boards/TMC2225_eval.c **** 			default:   *value = -1;  break;
 1027              		.loc 1 276 4 is_stmt 0 view .LVU294
 1028 036e 01E0     		b	.L82
 1029              	.LVL126:
 1030              	.L76:
 268:boards/TMC2225_eval.c **** 			case 2:    *value = 7;   break;
 1031              		.loc 1 268 15 is_stmt 1 view .LVU295
 268:boards/TMC2225_eval.c **** 			case 2:    *value = 7;   break;
 1032              		.loc 1 268 22 is_stmt 0 view .LVU296
 1033 0370 0823     		movs	r3, #8
 1034              	.L117:
 275:boards/TMC2225_eval.c **** 			case 256:  *value = 0;   break;
 1035              		.loc 1 275 22 view .LVU297
 1036 0372 2B60     		str	r3, [r5]
 275:boards/TMC2225_eval.c **** 			case 256:  *value = 0;   break;
 1037              		.loc 1 275 29 is_stmt 1 view .LVU298
 1038              	.L82:
 280:boards/TMC2225_eval.c **** 			{
 1039              		.loc 1 280 4 view .LVU299
 282:boards/TMC2225_eval.c **** 			}
 1040              		.loc 1 282 5 view .LVU300
 1041              	.LBB135:
 1042              	.LBI135:
  60:boards/TMC2225_eval.c **** {
 1043              		.loc 1 60 31 view .LVU301
 1044              	.LVL127:
  60:boards/TMC2225_eval.c **** {
 1045              		.loc 1 60 31 is_stmt 0 view .LVU302
 1046              	.LBE135:
  62:boards/TMC2225_eval.c **** 
 1047              		.loc 1 62 2 is_stmt 1 view .LVU303
  64:boards/TMC2225_eval.c **** }
 1048              		.loc 1 64 2 view .LVU304
 1049              	.LBB136:
 1050              	.LBI136:
  60:boards/TMC2225_eval.c **** {
 1051              		.loc 1 60 31 view .LVU305
  60:boards/TMC2225_eval.c **** {
 1052              		.loc 1 60 31 is_stmt 0 view .LVU306
 1053              	.LBE136:
  62:boards/TMC2225_eval.c **** 
 1054              		.loc 1 62 2 is_stmt 1 view .LVU307
  64:boards/TMC2225_eval.c **** }
 1055              		.loc 1 64 2 view .LVU308
 282:boards/TMC2225_eval.c **** 			}
 1056              		.loc 1 282 5 is_stmt 0 view .LVU309
 1057 0374 3C48     		ldr	r0, .L128
 1058              	.LVL128:
 282:boards/TMC2225_eval.c **** 			}
 1059              		.loc 1 282 5 view .LVU310
 1060 0376 6C21     		movs	r1, #108
 1061              	.LVL129:
 282:boards/TMC2225_eval.c **** 			}
 1062              		.loc 1 282 5 view .LVU311
 1063 0378 FFF7FEFF 		bl	tmc2225_readInt
 1064              	.LVL130:
 1065 037c 2B68     		ldr	r3, [r5]
 1066 037e 1B06     		lsls	r3, r3, #24
 1067 0380 03F07063 		and	r3, r3, #251658240
 1068 0384 20F07062 		bic	r2, r0, #251658240
 1069 0388 1DE0     		b	.L121
 1070              	.LVL131:
 1071              	.L75:
 269:boards/TMC2225_eval.c **** 			case 4:    *value = 6;   break;
 1072              		.loc 1 269 15 is_stmt 1 view .LVU312
 269:boards/TMC2225_eval.c **** 			case 4:    *value = 6;   break;
 1073              		.loc 1 269 22 is_stmt 0 view .LVU313
 1074 038a 0723     		movs	r3, #7
 1075 038c F1E7     		b	.L117
 1076              	.L74:
 270:boards/TMC2225_eval.c **** 			case 8:    *value = 5;   break;
 1077              		.loc 1 270 15 is_stmt 1 view .LVU314
 270:boards/TMC2225_eval.c **** 			case 8:    *value = 5;   break;
 1078              		.loc 1 270 22 is_stmt 0 view .LVU315
 1079 038e 0623     		movs	r3, #6
 1080 0390 EFE7     		b	.L117
 1081              	.L72:
 271:boards/TMC2225_eval.c **** 			case 16:   *value = 4;   break;
 1082              		.loc 1 271 15 is_stmt 1 view .LVU316
 271:boards/TMC2225_eval.c **** 			case 16:   *value = 4;   break;
 1083              		.loc 1 271 22 is_stmt 0 view .LVU317
 1084 0392 0523     		movs	r3, #5
 1085 0394 EDE7     		b	.L117
 1086              	.LVL132:
 1087              	.L69:
 272:boards/TMC2225_eval.c **** 			case 32:   *value = 3;   break;
 1088              		.loc 1 272 15 is_stmt 1 view .LVU318
 272:boards/TMC2225_eval.c **** 			case 32:   *value = 3;   break;
 1089              		.loc 1 272 22 is_stmt 0 view .LVU319
 1090 0396 0423     		movs	r3, #4
 1091 0398 EBE7     		b	.L117
 1092              	.L79:
 273:boards/TMC2225_eval.c **** 			case 64:   *value = 2;   break;
 1093              		.loc 1 273 15 is_stmt 1 view .LVU320
 273:boards/TMC2225_eval.c **** 			case 64:   *value = 2;   break;
 1094              		.loc 1 273 22 is_stmt 0 view .LVU321
 1095 039a 0323     		movs	r3, #3
 1096 039c E9E7     		b	.L117
 1097              	.L80:
 274:boards/TMC2225_eval.c **** 			case 128:  *value = 1;   break;
 1098              		.loc 1 274 15 is_stmt 1 view .LVU322
 274:boards/TMC2225_eval.c **** 			case 128:  *value = 1;   break;
 1099              		.loc 1 274 22 is_stmt 0 view .LVU323
 1100 039e 0223     		movs	r3, #2
 1101 03a0 E7E7     		b	.L117
 1102              	.L77:
 275:boards/TMC2225_eval.c **** 			case 256:  *value = 0;   break;
 1103              		.loc 1 275 15 is_stmt 1 view .LVU324
 275:boards/TMC2225_eval.c **** 			case 256:  *value = 0;   break;
 1104              		.loc 1 275 22 is_stmt 0 view .LVU325
 1105 03a2 0123     		movs	r3, #1
 1106 03a4 E5E7     		b	.L117
 1107              	.LVL133:
 1108              	.L39:
 292:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TBL_MASK, TMC2225_TBL_SH
 1109              		.loc 1 292 3 is_stmt 1 view .LVU326
 293:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1110              		.loc 1 293 13 is_stmt 0 view .LVU327
 1111 03a6 3048     		ldr	r0, .L128
 1112              	.LVL134:
 293:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1113              		.loc 1 293 13 view .LVU328
 1114 03a8 6C21     		movs	r1, #108
 1115              	.LVL135:
 292:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TBL_MASK, TMC2225_TBL_SH
 1116              		.loc 1 292 5 view .LVU329
 1117 03aa 26B9     		cbnz	r6, .L83
 293:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1118              		.loc 1 293 4 is_stmt 1 view .LVU330
 1119              	.LBB137:
 1120              	.LBI137:
  60:boards/TMC2225_eval.c **** {
 1121              		.loc 1 60 31 view .LVU331
 1122              	.LVL136:
  60:boards/TMC2225_eval.c **** {
 1123              		.loc 1 60 31 is_stmt 0 view .LVU332
 1124              	.LBE137:
  62:boards/TMC2225_eval.c **** 
 1125              		.loc 1 62 2 is_stmt 1 view .LVU333
  64:boards/TMC2225_eval.c **** }
 1126              		.loc 1 64 2 view .LVU334
 293:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1127              		.loc 1 293 13 is_stmt 0 view .LVU335
 1128 03ac FFF7FEFF 		bl	tmc2225_readInt
 1129              	.LVL137:
 1130 03b0 C0F3C130 		ubfx	r0, r0, #15, #2
 1131 03b4 0EE7     		b	.L119
 1132              	.LVL138:
 1133              	.L83:
 294:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TBL_MASK, TMC2225_TBL_SHIFT, *v
 1134              		.loc 1 294 10 is_stmt 1 view .LVU336
 295:boards/TMC2225_eval.c **** 		}
 1135              		.loc 1 295 4 view .LVU337
 1136              	.LBB138:
 1137              	.LBI138:
  60:boards/TMC2225_eval.c **** {
 1138              		.loc 1 60 31 view .LVU338
  60:boards/TMC2225_eval.c **** {
 1139              		.loc 1 60 31 is_stmt 0 view .LVU339
 1140              	.LBE138:
  62:boards/TMC2225_eval.c **** 
 1141              		.loc 1 62 2 is_stmt 1 view .LVU340
  64:boards/TMC2225_eval.c **** }
 1142              		.loc 1 64 2 view .LVU341
 1143              	.LBB139:
 1144              	.LBI139:
  60:boards/TMC2225_eval.c **** {
 1145              		.loc 1 60 31 view .LVU342
  60:boards/TMC2225_eval.c **** {
 1146              		.loc 1 60 31 is_stmt 0 view .LVU343
 1147              	.LBE139:
  62:boards/TMC2225_eval.c **** 
 1148              		.loc 1 62 2 is_stmt 1 view .LVU344
  64:boards/TMC2225_eval.c **** }
 1149              		.loc 1 64 2 view .LVU345
 295:boards/TMC2225_eval.c **** 		}
 1150              		.loc 1 295 4 is_stmt 0 view .LVU346
 1151 03b6 FFF7FEFF 		bl	tmc2225_readInt
 1152              	.LVL139:
 1153 03ba 2B68     		ldr	r3, [r5]
 1154 03bc DB03     		lsls	r3, r3, #15
 1155 03be 03F4C033 		and	r3, r3, #98304
 1156 03c2 20F4C032 		bic	r2, r0, #98304
 1157              	.LVL140:
 1158              	.L121:
 282:boards/TMC2225_eval.c **** 			}
 1159              		.loc 1 282 5 view .LVU347
 1160 03c6 1A43     		orrs	r2, r2, r3
 1161 03c8 6EE0     		b	.L122
 1162              	.LVL141:
 1163              	.L38:
 300:boards/TMC2225_eval.c **** 			if(tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) & (1<<14))
 1164              		.loc 1 300 3 is_stmt 1 view .LVU348
 300:boards/TMC2225_eval.c **** 			if(tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) & (1<<14))
 1165              		.loc 1 300 5 is_stmt 0 view .LVU349
 1166 03ca 002E     		cmp	r6, #0
 1167 03cc 7FF466AE 		bne	.L110
 301:boards/TMC2225_eval.c **** 			{
 1168              		.loc 1 301 4 is_stmt 1 view .LVU350
 1169              	.LBB140:
 1170              	.LBI140:
  60:boards/TMC2225_eval.c **** {
 1171              		.loc 1 60 31 view .LVU351
 1172              	.LVL142:
  60:boards/TMC2225_eval.c **** {
 1173              		.loc 1 60 31 is_stmt 0 view .LVU352
 1174              	.LBE140:
  62:boards/TMC2225_eval.c **** 
 1175              		.loc 1 62 2 is_stmt 1 view .LVU353
  64:boards/TMC2225_eval.c **** }
 1176              		.loc 1 64 2 view .LVU354
 301:boards/TMC2225_eval.c **** 			{
 1177              		.loc 1 301 7 is_stmt 0 view .LVU355
 1178 03d0 6C21     		movs	r1, #108
 1179              	.LVL143:
 301:boards/TMC2225_eval.c **** 			{
 1180              		.loc 1 301 7 view .LVU356
 1181 03d2 2548     		ldr	r0, .L128
 1182              	.LVL144:
 301:boards/TMC2225_eval.c **** 			{
 1183              		.loc 1 301 7 view .LVU357
 1184 03d4 FFF7FEFF 		bl	tmc2225_readInt
 1185              	.LVL145:
 301:boards/TMC2225_eval.c **** 			{
 1186              		.loc 1 301 6 view .LVU358
 1187 03d8 10F4804F 		tst	r0, #16384
 303:boards/TMC2225_eval.c **** 			}
 1188              		.loc 1 303 14 view .LVU359
 1189 03dc 4FF06C01 		mov	r1, #108
 1190 03e0 2148     		ldr	r0, .L128
 301:boards/TMC2225_eval.c **** 			{
 1191              		.loc 1 301 6 view .LVU360
 1192 03e2 04D0     		beq	.L84
 303:boards/TMC2225_eval.c **** 			}
 1193              		.loc 1 303 5 is_stmt 1 view .LVU361
 1194              	.LBB141:
 1195              	.LBI141:
  60:boards/TMC2225_eval.c **** {
 1196              		.loc 1 60 31 view .LVU362
 1197              	.LVL146:
  60:boards/TMC2225_eval.c **** {
 1198              		.loc 1 60 31 is_stmt 0 view .LVU363
 1199              	.LBE141:
  62:boards/TMC2225_eval.c **** 
 1200              		.loc 1 62 2 is_stmt 1 view .LVU364
  64:boards/TMC2225_eval.c **** }
 1201              		.loc 1 64 2 view .LVU365
 303:boards/TMC2225_eval.c **** 			}
 1202              		.loc 1 303 14 is_stmt 0 view .LVU366
 1203 03e4 FFF7FEFF 		bl	tmc2225_readInt
 1204              	.LVL147:
 1205 03e8 C0F3C310 		ubfx	r0, r0, #7, #4
 1206 03ec F2E6     		b	.L119
 1207              	.LVL148:
 1208              	.L84:
 307:boards/TMC2225_eval.c **** 				*value = (tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) >> 4) & 0x07;
 1209              		.loc 1 307 5 is_stmt 1 view .LVU367
 1210              	.LBB142:
 1211              	.LBI142:
  60:boards/TMC2225_eval.c **** {
 1212              		.loc 1 60 31 view .LVU368
  60:boards/TMC2225_eval.c **** {
 1213              		.loc 1 60 31 is_stmt 0 view .LVU369
 1214              	.LBE142:
  62:boards/TMC2225_eval.c **** 
 1215              		.loc 1 62 2 is_stmt 1 view .LVU370
  64:boards/TMC2225_eval.c **** }
 1216              		.loc 1 64 2 view .LVU371
 307:boards/TMC2225_eval.c **** 				*value = (tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) >> 4) & 0x07;
 1217              		.loc 1 307 14 is_stmt 0 view .LVU372
 1218 03ee FFF7FEFF 		bl	tmc2225_readInt
 1219              	.LVL149:
 308:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1220              		.loc 1 308 15 view .LVU373
 1221 03f2 6C21     		movs	r1, #108
 307:boards/TMC2225_eval.c **** 				*value = (tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) >> 4) & 0x07;
 1222              		.loc 1 307 14 view .LVU374
 1223 03f4 0446     		mov	r4, r0
 1224              	.LVL150:
 308:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1225              		.loc 1 308 5 is_stmt 1 view .LVU375
 1226              	.LBB143:
 1227              	.LBI143:
  60:boards/TMC2225_eval.c **** {
 1228              		.loc 1 60 31 view .LVU376
  60:boards/TMC2225_eval.c **** {
 1229              		.loc 1 60 31 is_stmt 0 view .LVU377
 1230              	.LBE143:
  62:boards/TMC2225_eval.c **** 
 1231              		.loc 1 62 2 is_stmt 1 view .LVU378
  64:boards/TMC2225_eval.c **** }
 1232              		.loc 1 64 2 view .LVU379
 308:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1233              		.loc 1 308 15 is_stmt 0 view .LVU380
 1234 03f6 1C48     		ldr	r0, .L128
 1235              	.LVL151:
 308:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1236              		.loc 1 308 15 view .LVU381
 1237 03f8 FFF7FEFF 		bl	tmc2225_readInt
 1238              	.LVL152:
 308:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1239              		.loc 1 308 73 view .LVU382
 1240 03fc C0F30213 		ubfx	r3, r0, #4, #3
 1241              	.LVL153:
 1242              	.L124:
 309:boards/TMC2225_eval.c **** 					*value |= 1<<3;
 1243              		.loc 1 309 5 is_stmt 1 view .LVU383
 309:boards/TMC2225_eval.c **** 					*value |= 1<<3;
 1244              		.loc 1 309 7 is_stmt 0 view .LVU384
 1245 0400 2205     		lsls	r2, r4, #20
 1246 0402 1BD4     		bmi	.L88
 308:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1247              		.loc 1 308 12 view .LVU385
 1248 0404 2B60     		str	r3, [r5]
 1249 0406 EBE6     		b	.L120
 1250              	.LVL154:
 1251              	.L37:
 318:boards/TMC2225_eval.c **** 			if(tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) & (1<<14))
 1252              		.loc 1 318 3 is_stmt 1 view .LVU386
 319:boards/TMC2225_eval.c **** 			{
 1253              		.loc 1 319 7 is_stmt 0 view .LVU387
 1254 0408 1748     		ldr	r0, .L128
 1255              	.LVL155:
 319:boards/TMC2225_eval.c **** 			{
 1256              		.loc 1 319 7 view .LVU388
 1257 040a 6C21     		movs	r1, #108
 1258              	.LVL156:
 318:boards/TMC2225_eval.c **** 			if(tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) & (1<<14))
 1259              		.loc 1 318 5 view .LVU389
 1260 040c DEB9     		cbnz	r6, .L86
 319:boards/TMC2225_eval.c **** 			{
 1261              		.loc 1 319 4 is_stmt 1 view .LVU390
 1262              	.LBB144:
 1263              	.LBI144:
  60:boards/TMC2225_eval.c **** {
 1264              		.loc 1 60 31 view .LVU391
 1265              	.LVL157:
  60:boards/TMC2225_eval.c **** {
 1266              		.loc 1 60 31 is_stmt 0 view .LVU392
 1267              	.LBE144:
  62:boards/TMC2225_eval.c **** 
 1268              		.loc 1 62 2 is_stmt 1 view .LVU393
  64:boards/TMC2225_eval.c **** }
 1269              		.loc 1 64 2 view .LVU394
 319:boards/TMC2225_eval.c **** 			{
 1270              		.loc 1 319 7 is_stmt 0 view .LVU395
 1271 040e FFF7FEFF 		bl	tmc2225_readInt
 1272              	.LVL158:
 319:boards/TMC2225_eval.c **** 			{
 1273              		.loc 1 319 6 view .LVU396
 1274 0412 10F4804F 		tst	r0, #16384
 321:boards/TMC2225_eval.c **** 			}
 1275              		.loc 1 321 14 view .LVU397
 1276 0416 4FF06C01 		mov	r1, #108
 1277 041a 1348     		ldr	r0, .L128
 319:boards/TMC2225_eval.c **** 			{
 1278              		.loc 1 319 6 view .LVU398
 1279 041c 04D0     		beq	.L87
 321:boards/TMC2225_eval.c **** 			}
 1280              		.loc 1 321 5 is_stmt 1 view .LVU399
 1281              	.LBB145:
 1282              	.LBI145:
  60:boards/TMC2225_eval.c **** {
 1283              		.loc 1 60 31 view .LVU400
 1284              	.LVL159:
  60:boards/TMC2225_eval.c **** {
 1285              		.loc 1 60 31 is_stmt 0 view .LVU401
 1286              	.LBE145:
  62:boards/TMC2225_eval.c **** 
 1287              		.loc 1 62 2 is_stmt 1 view .LVU402
  64:boards/TMC2225_eval.c **** }
 1288              		.loc 1 64 2 view .LVU403
 321:boards/TMC2225_eval.c **** 			}
 1289              		.loc 1 321 14 is_stmt 0 view .LVU404
 1290 041e FFF7FEFF 		bl	tmc2225_readInt
 1291              	.LVL160:
 1292 0422 C0F30210 		ubfx	r0, r0, #4, #3
 1293 0426 D5E6     		b	.L119
 1294              	.LVL161:
 1295              	.L87:
 325:boards/TMC2225_eval.c **** 				*value = (tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) >> 7) & 0x0F;
 1296              		.loc 1 325 5 is_stmt 1 view .LVU405
 1297              	.LBB146:
 1298              	.LBI146:
  60:boards/TMC2225_eval.c **** {
 1299              		.loc 1 60 31 view .LVU406
  60:boards/TMC2225_eval.c **** {
 1300              		.loc 1 60 31 is_stmt 0 view .LVU407
 1301              	.LBE146:
  62:boards/TMC2225_eval.c **** 
 1302              		.loc 1 62 2 is_stmt 1 view .LVU408
  64:boards/TMC2225_eval.c **** }
 1303              		.loc 1 64 2 view .LVU409
 325:boards/TMC2225_eval.c **** 				*value = (tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) >> 7) & 0x0F;
 1304              		.loc 1 325 14 is_stmt 0 view .LVU410
 1305 0428 FFF7FEFF 		bl	tmc2225_readInt
 1306              	.LVL162:
 326:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1307              		.loc 1 326 15 view .LVU411
 1308 042c 6C21     		movs	r1, #108
 325:boards/TMC2225_eval.c **** 				*value = (tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) >> 7) & 0x0F;
 1309              		.loc 1 325 14 view .LVU412
 1310 042e 0446     		mov	r4, r0
 1311              	.LVL163:
 326:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1312              		.loc 1 326 5 is_stmt 1 view .LVU413
 1313              	.LBB147:
 1314              	.LBI147:
  60:boards/TMC2225_eval.c **** {
 1315              		.loc 1 60 31 view .LVU414
  60:boards/TMC2225_eval.c **** {
 1316              		.loc 1 60 31 is_stmt 0 view .LVU415
 1317              	.LBE147:
  62:boards/TMC2225_eval.c **** 
 1318              		.loc 1 62 2 is_stmt 1 view .LVU416
  64:boards/TMC2225_eval.c **** }
 1319              		.loc 1 64 2 view .LVU417
 326:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1320              		.loc 1 326 15 is_stmt 0 view .LVU418
 1321 0430 0D48     		ldr	r0, .L128
 1322              	.LVL164:
 326:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1323              		.loc 1 326 15 view .LVU419
 1324 0432 FFF7FEFF 		bl	tmc2225_readInt
 1325              	.LVL165:
 326:boards/TMC2225_eval.c **** 				if(buffer & (1<<11))
 1326              		.loc 1 326 73 view .LVU420
 1327 0436 C0F3C313 		ubfx	r3, r0, #7, #4
 327:boards/TMC2225_eval.c **** 					*value |= 1<<3;
 1328              		.loc 1 327 5 is_stmt 1 view .LVU421
 1329 043a E1E7     		b	.L124
 1330              	.LVL166:
 1331              	.L88:
 328:boards/TMC2225_eval.c **** 			}
 1332              		.loc 1 328 6 view .LVU422
 328:boards/TMC2225_eval.c **** 			}
 1333              		.loc 1 328 13 is_stmt 0 view .LVU423
 1334 043c 43F00803 		orr	r3, r3, #8
 1335 0440 2B60     		str	r3, [r5]
 1336              	.LVL167:
 1337              	.L22:
 433:boards/TMC2225_eval.c **** 
 1338              		.loc 1 433 1 view .LVU424
 1339 0442 3046     		mov	r0, r6
 1340 0444 70BD     		pop	{r4, r5, r6, pc}
 1341              	.LVL168:
 1342              	.L86:
 330:boards/TMC2225_eval.c **** 			if(tmc2225_readInt(motorToIC(motor), TMC2225_CHOPCONF) & (1<<14))
 1343              		.loc 1 330 10 is_stmt 1 view .LVU425
 331:boards/TMC2225_eval.c **** 			{
 1344              		.loc 1 331 4 view .LVU426
 1345              	.LBB148:
 1346              	.LBI148:
  60:boards/TMC2225_eval.c **** {
 1347              		.loc 1 60 31 view .LVU427
  60:boards/TMC2225_eval.c **** {
 1348              		.loc 1 60 31 is_stmt 0 view .LVU428
 1349              	.LBE148:
  62:boards/TMC2225_eval.c **** 
 1350              		.loc 1 62 2 is_stmt 1 view .LVU429
  64:boards/TMC2225_eval.c **** }
 1351              		.loc 1 64 2 view .LVU430
 331:boards/TMC2225_eval.c **** 			{
 1352              		.loc 1 331 7 is_stmt 0 view .LVU431
 1353 0446 FFF7FEFF 		bl	tmc2225_readInt
 1354              	.LVL169:
 331:boards/TMC2225_eval.c **** 			{
 1355              		.loc 1 331 6 view .LVU432
 1356 044a 10F48046 		ands	r6, r0, #16384
 333:boards/TMC2225_eval.c **** 			}
 1357              		.loc 1 333 5 view .LVU433
 1358 044e 4FF06C01 		mov	r1, #108
 1359 0452 0548     		ldr	r0, .L128
 331:boards/TMC2225_eval.c **** 			{
 1360              		.loc 1 331 6 view .LVU434
 1361 0454 0AD0     		beq	.L90
 333:boards/TMC2225_eval.c **** 			}
 1362              		.loc 1 333 5 is_stmt 1 view .LVU435
 1363              	.LBB149:
 1364              	.LBI149:
  60:boards/TMC2225_eval.c **** {
 1365              		.loc 1 60 31 view .LVU436
 1366              	.LVL170:
  60:boards/TMC2225_eval.c **** {
 1367              		.loc 1 60 31 is_stmt 0 view .LVU437
 1368              	.LBE149:
  62:boards/TMC2225_eval.c **** 
 1369              		.loc 1 62 2 is_stmt 1 view .LVU438
  64:boards/TMC2225_eval.c **** }
 1370              		.loc 1 64 2 view .LVU439
 1371              	.LBB150:
 1372              	.LBI150:
  60:boards/TMC2225_eval.c **** {
 1373              		.loc 1 60 31 view .LVU440
  60:boards/TMC2225_eval.c **** {
 1374              		.loc 1 60 31 is_stmt 0 view .LVU441
 1375              	.LBE150:
  62:boards/TMC2225_eval.c **** 
 1376              		.loc 1 62 2 is_stmt 1 view .LVU442
  64:boards/TMC2225_eval.c **** }
 1377              		.loc 1 64 2 view .LVU443
 333:boards/TMC2225_eval.c **** 			}
 1378              		.loc 1 333 5 is_stmt 0 view .LVU444
 1379 0456 FFF7FEFF 		bl	tmc2225_readInt
 1380              	.LVL171:
 1381 045a 2B68     		ldr	r3, [r5]
 1382 045c 1B01     		lsls	r3, r3, #4
 1383 045e 03F07003 		and	r3, r3, #112
 1384 0462 20F07002 		bic	r2, r0, #112
 1385 0466 AEE7     		b	.L121
 1386              	.L129:
 1387              		.align	2
 1388              	.L128:
 1389 0468 00000000 		.word	.LANCHOR0
 1390              	.LVL172:
 1391              	.L90:
 337:boards/TMC2225_eval.c **** 			}
 1392              		.loc 1 337 5 is_stmt 1 view .LVU445
 1393              	.LBB151:
 1394              	.LBI151:
  60:boards/TMC2225_eval.c **** {
 1395              		.loc 1 60 31 view .LVU446
  60:boards/TMC2225_eval.c **** {
 1396              		.loc 1 60 31 is_stmt 0 view .LVU447
 1397              	.LBE151:
  62:boards/TMC2225_eval.c **** 
 1398              		.loc 1 62 2 is_stmt 1 view .LVU448
  64:boards/TMC2225_eval.c **** }
 1399              		.loc 1 64 2 view .LVU449
 1400              	.LBB152:
 1401              	.LBI152:
  60:boards/TMC2225_eval.c **** {
 1402              		.loc 1 60 31 view .LVU450
  60:boards/TMC2225_eval.c **** {
 1403              		.loc 1 60 31 is_stmt 0 view .LVU451
 1404              	.LBE152:
  62:boards/TMC2225_eval.c **** 
 1405              		.loc 1 62 2 is_stmt 1 view .LVU452
  64:boards/TMC2225_eval.c **** }
 1406              		.loc 1 64 2 view .LVU453
 337:boards/TMC2225_eval.c **** 			}
 1407              		.loc 1 337 5 is_stmt 0 view .LVU454
 1408 046c FFF7FEFF 		bl	tmc2225_readInt
 1409              	.LVL173:
 1410 0470 2B68     		ldr	r3, [r5]
 1411 0472 DB01     		lsls	r3, r3, #7
 1412 0474 03F4F063 		and	r3, r3, #1920
 1413 0478 20F4F062 		bic	r2, r0, #1920
 1414 047c 1A43     		orrs	r2, r2, r3
 1415 047e 5A48     		ldr	r0, .L130
 1416 0480 6C21     		movs	r1, #108
 1417 0482 FFF7FEFF 		bl	tmc2225_writeInt
 1418              	.LVL174:
 1419 0486 DCE7     		b	.L22
 1420              	.LVL175:
 1421              	.L36:
 343:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TOFF_MASK, TMC2225_TOFF_
 1422              		.loc 1 343 3 is_stmt 1 view .LVU455
 344:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1423              		.loc 1 344 13 is_stmt 0 view .LVU456
 1424 0488 5748     		ldr	r0, .L130
 1425              	.LVL176:
 344:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1426              		.loc 1 344 13 view .LVU457
 1427 048a 6C21     		movs	r1, #108
 1428              	.LVL177:
 343:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TOFF_MASK, TMC2225_TOFF_
 1429              		.loc 1 343 5 view .LVU458
 1430 048c 26B9     		cbnz	r6, .L91
 344:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1431              		.loc 1 344 4 is_stmt 1 view .LVU459
 1432              	.LBB153:
 1433              	.LBI153:
  60:boards/TMC2225_eval.c **** {
 1434              		.loc 1 60 31 view .LVU460
 1435              	.LVL178:
  60:boards/TMC2225_eval.c **** {
 1436              		.loc 1 60 31 is_stmt 0 view .LVU461
 1437              	.LBE153:
  62:boards/TMC2225_eval.c **** 
 1438              		.loc 1 62 2 is_stmt 1 view .LVU462
  64:boards/TMC2225_eval.c **** }
 1439              		.loc 1 64 2 view .LVU463
 344:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1440              		.loc 1 344 13 is_stmt 0 view .LVU464
 1441 048e FFF7FEFF 		bl	tmc2225_readInt
 1442              	.LVL179:
 1443 0492 00F00F00 		and	r0, r0, #15
 1444 0496 9DE6     		b	.L119
 1445              	.LVL180:
 1446              	.L91:
 345:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_TOFF_MASK, TMC2225_TOFF_SHIFT, 
 1447              		.loc 1 345 10 is_stmt 1 view .LVU465
 346:boards/TMC2225_eval.c **** 		}
 1448              		.loc 1 346 4 view .LVU466
 1449              	.LBB154:
 1450              	.LBI154:
  60:boards/TMC2225_eval.c **** {
 1451              		.loc 1 60 31 view .LVU467
  60:boards/TMC2225_eval.c **** {
 1452              		.loc 1 60 31 is_stmt 0 view .LVU468
 1453              	.LBE154:
  62:boards/TMC2225_eval.c **** 
 1454              		.loc 1 62 2 is_stmt 1 view .LVU469
  64:boards/TMC2225_eval.c **** }
 1455              		.loc 1 64 2 view .LVU470
 1456              	.LBB155:
 1457              	.LBI155:
  60:boards/TMC2225_eval.c **** {
 1458              		.loc 1 60 31 view .LVU471
  60:boards/TMC2225_eval.c **** {
 1459              		.loc 1 60 31 is_stmt 0 view .LVU472
 1460              	.LBE155:
  62:boards/TMC2225_eval.c **** 
 1461              		.loc 1 62 2 is_stmt 1 view .LVU473
  64:boards/TMC2225_eval.c **** }
 1462              		.loc 1 64 2 view .LVU474
 346:boards/TMC2225_eval.c **** 		}
 1463              		.loc 1 346 4 is_stmt 0 view .LVU475
 1464 0498 FFF7FEFF 		bl	tmc2225_readInt
 1465              	.LVL181:
 1466 049c 2A68     		ldr	r2, [r5]
 1467 049e 20F00F00 		bic	r0, r0, #15
 1468 04a2 02F00F02 		and	r2, r2, #15
 1469 04a6 0243     		orrs	r2, r2, r0
 1470              	.LVL182:
 1471              	.L122:
 282:boards/TMC2225_eval.c **** 			}
 1472              		.loc 1 282 5 view .LVU476
 1473 04a8 6C21     		movs	r1, #108
 1474 04aa DAE6     		b	.L118
 1475              	.LVL183:
 1476              	.L35:
 351:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_VSENSE_MASK, TMC2225_VSE
 1477              		.loc 1 351 3 is_stmt 1 view .LVU477
 352:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1478              		.loc 1 352 13 is_stmt 0 view .LVU478
 1479 04ac 4E48     		ldr	r0, .L130
 1480              	.LVL184:
 352:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1481              		.loc 1 352 13 view .LVU479
 1482 04ae 6C21     		movs	r1, #108
 1483              	.LVL185:
 351:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_VSENSE_MASK, TMC2225_VSE
 1484              		.loc 1 351 5 view .LVU480
 1485 04b0 26B9     		cbnz	r6, .L92
 352:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1486              		.loc 1 352 4 is_stmt 1 view .LVU481
 1487              	.LBB156:
 1488              	.LBI156:
  60:boards/TMC2225_eval.c **** {
 1489              		.loc 1 60 31 view .LVU482
 1490              	.LVL186:
  60:boards/TMC2225_eval.c **** {
 1491              		.loc 1 60 31 is_stmt 0 view .LVU483
 1492              	.LBE156:
  62:boards/TMC2225_eval.c **** 
 1493              		.loc 1 62 2 is_stmt 1 view .LVU484
  64:boards/TMC2225_eval.c **** }
 1494              		.loc 1 64 2 view .LVU485
 352:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1495              		.loc 1 352 13 is_stmt 0 view .LVU486
 1496 04b2 FFF7FEFF 		bl	tmc2225_readInt
 1497              	.LVL187:
 1498 04b6 C0F34040 		ubfx	r0, r0, #17, #1
 1499 04ba 8BE6     		b	.L119
 1500              	.LVL188:
 1501              	.L92:
 353:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_CHOPCONF, TMC2225_VSENSE_MASK, TMC2225_VSENSE_SHI
 1502              		.loc 1 353 10 is_stmt 1 view .LVU487
 354:boards/TMC2225_eval.c **** 		}
 1503              		.loc 1 354 4 view .LVU488
 1504              	.LBB157:
 1505              	.LBI157:
  60:boards/TMC2225_eval.c **** {
 1506              		.loc 1 60 31 view .LVU489
  60:boards/TMC2225_eval.c **** {
 1507              		.loc 1 60 31 is_stmt 0 view .LVU490
 1508              	.LBE157:
  62:boards/TMC2225_eval.c **** 
 1509              		.loc 1 62 2 is_stmt 1 view .LVU491
  64:boards/TMC2225_eval.c **** }
 1510              		.loc 1 64 2 view .LVU492
 1511              	.LBB158:
 1512              	.LBI158:
  60:boards/TMC2225_eval.c **** {
 1513              		.loc 1 60 31 view .LVU493
  60:boards/TMC2225_eval.c **** {
 1514              		.loc 1 60 31 is_stmt 0 view .LVU494
 1515              	.LBE158:
  62:boards/TMC2225_eval.c **** 
 1516              		.loc 1 62 2 is_stmt 1 view .LVU495
  64:boards/TMC2225_eval.c **** }
 1517              		.loc 1 64 2 view .LVU496
 354:boards/TMC2225_eval.c **** 		}
 1518              		.loc 1 354 4 is_stmt 0 view .LVU497
 1519 04bc FFF7FEFF 		bl	tmc2225_readInt
 1520              	.LVL189:
 1521 04c0 2B68     		ldr	r3, [r5]
 1522 04c2 5B04     		lsls	r3, r3, #17
 1523 04c4 03F40033 		and	r3, r3, #131072
 1524 04c8 20F40032 		bic	r2, r0, #131072
 1525 04cc 7BE7     		b	.L121
 1526              	.LVL190:
 1527              	.L34:
 359:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_DRVSTATUS, TMC2225_CS_ACTUAL_MASK, TMC2225
 1528              		.loc 1 359 3 is_stmt 1 view .LVU498
 359:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_DRVSTATUS, TMC2225_CS_ACTUAL_MASK, TMC2225
 1529              		.loc 1 359 5 is_stmt 0 view .LVU499
 1530 04ce 002E     		cmp	r6, #0
 1531 04d0 7FF4E4AD 		bne	.L110
 360:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1532              		.loc 1 360 4 is_stmt 1 view .LVU500
 1533              	.LBB159:
 1534              	.LBI159:
  60:boards/TMC2225_eval.c **** {
 1535              		.loc 1 60 31 view .LVU501
 1536              	.LVL191:
  60:boards/TMC2225_eval.c **** {
 1537              		.loc 1 60 31 is_stmt 0 view .LVU502
 1538              	.LBE159:
  62:boards/TMC2225_eval.c **** 
 1539              		.loc 1 62 2 is_stmt 1 view .LVU503
  64:boards/TMC2225_eval.c **** }
 1540              		.loc 1 64 2 view .LVU504
 360:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1541              		.loc 1 360 13 is_stmt 0 view .LVU505
 1542 04d4 4448     		ldr	r0, .L130
 1543              	.LVL192:
 360:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1544              		.loc 1 360 13 view .LVU506
 1545 04d6 6F21     		movs	r1, #111
 1546              	.LVL193:
 360:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1547              		.loc 1 360 13 view .LVU507
 1548 04d8 FFF7FEFF 		bl	tmc2225_readInt
 1549              	.LVL194:
 1550 04dc C0F30440 		ubfx	r0, r0, #16, #5
 1551 04e0 78E6     		b	.L119
 1552              	.LVL195:
 1553              	.L33:
 367:boards/TMC2225_eval.c **** 			*value = StepDir_getStallGuardThreshold(motor);
 1554              		.loc 1 367 3 is_stmt 1 view .LVU508
 367:boards/TMC2225_eval.c **** 			*value = StepDir_getStallGuardThreshold(motor);
 1555              		.loc 1 367 5 is_stmt 0 view .LVU509
 1556 04e2 1EB9     		cbnz	r6, .L93
 368:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1557              		.loc 1 368 4 is_stmt 1 view .LVU510
 368:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1558              		.loc 1 368 13 is_stmt 0 view .LVU511
 1559 04e4 3046     		mov	r0, r6
 1560              	.LVL196:
 368:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1561              		.loc 1 368 13 view .LVU512
 1562 04e6 FFF7FEFF 		bl	StepDir_getStallGuardThreshold
 1563              	.LVL197:
 368:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1564              		.loc 1 368 13 view .LVU513
 1565 04ea 73E6     		b	.L119
 1566              	.LVL198:
 1567              	.L93:
 369:boards/TMC2225_eval.c **** 			// Store the threshold value in the internal StepDir generator
 1568              		.loc 1 369 10 is_stmt 1 view .LVU514
 371:boards/TMC2225_eval.c **** 		}
 1569              		.loc 1 371 4 view .LVU515
 1570 04ec 2968     		ldr	r1, [r5]
 1571              	.LVL199:
 371:boards/TMC2225_eval.c **** 		}
 1572              		.loc 1 371 4 is_stmt 0 view .LVU516
 1573 04ee 0020     		movs	r0, #0
 1574              	.LVL200:
 371:boards/TMC2225_eval.c **** 		}
 1575              		.loc 1 371 4 view .LVU517
 1576 04f0 FFF7FEFF 		bl	StepDir_setStallGuardThreshold
 1577              	.LVL201:
 1578 04f4 74E6     		b	.L120
 1579              	.LVL202:
 1580              	.L32:
 376:boards/TMC2225_eval.c **** 			buffer = tmc2225_readInt(motorToIC(motor), TMC2225_TPWMTHRS);
 1581              		.loc 1 376 3 is_stmt 1 view .LVU518
 376:boards/TMC2225_eval.c **** 			buffer = tmc2225_readInt(motorToIC(motor), TMC2225_TPWMTHRS);
 1582              		.loc 1 376 5 is_stmt 0 view .LVU519
 1583 04f6 86B9     		cbnz	r6, .L94
 377:boards/TMC2225_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 1584              		.loc 1 377 4 is_stmt 1 view .LVU520
 1585              	.LBB160:
 1586              	.LBI160:
  60:boards/TMC2225_eval.c **** {
 1587              		.loc 1 60 31 view .LVU521
 1588              	.LVL203:
  60:boards/TMC2225_eval.c **** {
 1589              		.loc 1 60 31 is_stmt 0 view .LVU522
 1590              	.LBE160:
  62:boards/TMC2225_eval.c **** 
 1591              		.loc 1 62 2 is_stmt 1 view .LVU523
  64:boards/TMC2225_eval.c **** }
 1592              		.loc 1 64 2 view .LVU524
 377:boards/TMC2225_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 1593              		.loc 1 377 13 is_stmt 0 view .LVU525
 1594 04f8 3B48     		ldr	r0, .L130
 1595              	.LVL204:
 377:boards/TMC2225_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 1596              		.loc 1 377 13 view .LVU526
 1597 04fa 1321     		movs	r1, #19
 1598              	.LVL205:
 377:boards/TMC2225_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer) ? buffer : 1));
 1599              		.loc 1 377 13 view .LVU527
 1600 04fc FFF7FEFF 		bl	tmc2225_readInt
 1601              	.LVL206:
 378:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1602              		.loc 1 378 4 is_stmt 1 view .LVU528
 378:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1603              		.loc 1 378 13 is_stmt 0 view .LVU529
 1604 0500 0028     		cmp	r0, #0
 378:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1605              		.loc 1 378 13 view .LVU530
 1606 0502 08BF     		it	eq
 1607 0504 0120     		moveq	r0, #1
 1608              	.LVL207:
 378:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1609              		.loc 1 378 13 view .LVU531
 1610 0506 4FF08073 		mov	r3, #16777216
 1611 050a 93FBF0F0 		sdiv	r0, r3, r0
 378:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1612              		.loc 1 378 11 view .LVU532
 1613 050e 374B     		ldr	r3, .L130+4
 1614 0510 9842     		cmp	r0, r3
 1615 0512 D4BF     		ite	le
 1616 0514 2860     		strle	r0, [r5]
 1617 0516 2B60     		strgt	r3, [r5]
 1618 0518 93E7     		b	.L22
 1619              	.LVL208:
 1620              	.L94:
 379:boards/TMC2225_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value) ? *value : 1));
 1621              		.loc 1 379 10 is_stmt 1 view .LVU533
 380:boards/TMC2225_eval.c **** 			tmc2225_writeInt(motorToIC(motor), TMC2225_TPWMTHRS, *value);
 1622              		.loc 1 380 4 view .LVU534
 380:boards/TMC2225_eval.c **** 			tmc2225_writeInt(motorToIC(motor), TMC2225_TPWMTHRS, *value);
 1623              		.loc 1 380 13 is_stmt 0 view .LVU535
 1624 051a 2B68     		ldr	r3, [r5]
 1625 051c 002B     		cmp	r3, #0
 1626 051e 08BF     		it	eq
 1627 0520 0123     		moveq	r3, #1
 1628 0522 4FF08072 		mov	r2, #16777216
 1629 0526 92FBF3F2 		sdiv	r2, r2, r3
 1630 052a 304B     		ldr	r3, .L130+4
 1631 052c 9A42     		cmp	r2, r3
 1632 052e A8BF     		it	ge
 1633 0530 1A46     		movge	r2, r3
 380:boards/TMC2225_eval.c **** 			tmc2225_writeInt(motorToIC(motor), TMC2225_TPWMTHRS, *value);
 1634              		.loc 1 380 11 view .LVU536
 1635 0532 2A60     		str	r2, [r5]
 381:boards/TMC2225_eval.c **** 		}
 1636              		.loc 1 381 4 is_stmt 1 view .LVU537
 1637              	.LBB161:
 1638              	.LBI161:
  60:boards/TMC2225_eval.c **** {
 1639              		.loc 1 60 31 view .LVU538
 1640              	.LVL209:
  60:boards/TMC2225_eval.c **** {
 1641              		.loc 1 60 31 is_stmt 0 view .LVU539
 1642              	.LBE161:
  62:boards/TMC2225_eval.c **** 
 1643              		.loc 1 62 2 is_stmt 1 view .LVU540
  64:boards/TMC2225_eval.c **** }
 1644              		.loc 1 64 2 view .LVU541
 381:boards/TMC2225_eval.c **** 		}
 1645              		.loc 1 381 4 is_stmt 0 view .LVU542
 1646 0534 1321     		movs	r1, #19
 1647              	.LVL210:
 381:boards/TMC2225_eval.c **** 		}
 1648              		.loc 1 381 4 view .LVU543
 1649 0536 94E6     		b	.L118
 1650              	.LVL211:
 1651              	.L31:
 386:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_GRAD_MASK, TMC2225_PW
 1652              		.loc 1 386 3 is_stmt 1 view .LVU544
 387:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1653              		.loc 1 387 13 is_stmt 0 view .LVU545
 1654 0538 2B48     		ldr	r0, .L130
 1655              	.LVL212:
 387:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1656              		.loc 1 387 13 view .LVU546
 1657 053a 7021     		movs	r1, #112
 1658              	.LVL213:
 386:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_GRAD_MASK, TMC2225_PW
 1659              		.loc 1 386 5 view .LVU547
 1660 053c 26B9     		cbnz	r6, .L97
 387:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1661              		.loc 1 387 4 is_stmt 1 view .LVU548
 1662              	.LBB162:
 1663              	.LBI162:
  60:boards/TMC2225_eval.c **** {
 1664              		.loc 1 60 31 view .LVU549
 1665              	.LVL214:
  60:boards/TMC2225_eval.c **** {
 1666              		.loc 1 60 31 is_stmt 0 view .LVU550
 1667              	.LBE162:
  62:boards/TMC2225_eval.c **** 
 1668              		.loc 1 62 2 is_stmt 1 view .LVU551
  64:boards/TMC2225_eval.c **** }
 1669              		.loc 1 64 2 view .LVU552
 387:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1670              		.loc 1 387 13 is_stmt 0 view .LVU553
 1671 053e FFF7FEFF 		bl	tmc2225_readInt
 1672              	.LVL215:
 1673 0542 C0F30720 		ubfx	r0, r0, #8, #8
 1674 0546 45E6     		b	.L119
 1675              	.LVL216:
 1676              	.L97:
 388:boards/TMC2225_eval.c **** 			// Set gradient
 1677              		.loc 1 388 10 is_stmt 1 view .LVU554
 390:boards/TMC2225_eval.c **** 
 1678              		.loc 1 390 4 view .LVU555
 1679              	.LBB163:
 1680              	.LBI163:
  60:boards/TMC2225_eval.c **** {
 1681              		.loc 1 60 31 view .LVU556
  60:boards/TMC2225_eval.c **** {
 1682              		.loc 1 60 31 is_stmt 0 view .LVU557
 1683              	.LBE163:
  62:boards/TMC2225_eval.c **** 
 1684              		.loc 1 62 2 is_stmt 1 view .LVU558
  64:boards/TMC2225_eval.c **** }
 1685              		.loc 1 64 2 view .LVU559
 1686              	.LBB164:
 1687              	.LBI164:
  60:boards/TMC2225_eval.c **** {
 1688              		.loc 1 60 31 view .LVU560
  60:boards/TMC2225_eval.c **** {
 1689              		.loc 1 60 31 is_stmt 0 view .LVU561
 1690              	.LBE164:
  62:boards/TMC2225_eval.c **** 
 1691              		.loc 1 62 2 is_stmt 1 view .LVU562
  64:boards/TMC2225_eval.c **** }
 1692              		.loc 1 64 2 view .LVU563
 390:boards/TMC2225_eval.c **** 
 1693              		.loc 1 390 4 is_stmt 0 view .LVU564
 1694 0548 FFF7FEFF 		bl	tmc2225_readInt
 1695              	.LVL217:
 1696 054c 2B68     		ldr	r3, [r5]
 1697 054e 1B02     		lsls	r3, r3, #8
 1698 0550 9BB2     		uxth	r3, r3
 1699 0552 20F47F42 		bic	r2, r0, #65280
 1700 0556 1A43     		orrs	r2, r2, r3
 1701 0558 2348     		ldr	r0, .L130
 1702 055a 7021     		movs	r1, #112
 1703 055c FFF7FEFF 		bl	tmc2225_writeInt
 1704              	.LVL218:
 393:boards/TMC2225_eval.c **** 		}
 1705              		.loc 1 393 4 is_stmt 1 view .LVU565
 1706              	.LBB165:
 1707              	.LBI165:
  60:boards/TMC2225_eval.c **** {
 1708              		.loc 1 60 31 view .LVU566
  60:boards/TMC2225_eval.c **** {
 1709              		.loc 1 60 31 is_stmt 0 view .LVU567
 1710              	.LBE165:
  62:boards/TMC2225_eval.c **** 
 1711              		.loc 1 62 2 is_stmt 1 view .LVU568
  64:boards/TMC2225_eval.c **** }
 1712              		.loc 1 64 2 view .LVU569
 1713              	.LBB166:
 1714              	.LBI166:
  60:boards/TMC2225_eval.c **** {
 1715              		.loc 1 60 31 view .LVU570
  60:boards/TMC2225_eval.c **** {
 1716              		.loc 1 60 31 is_stmt 0 view .LVU571
 1717              	.LBE166:
  62:boards/TMC2225_eval.c **** 
 1718              		.loc 1 62 2 is_stmt 1 view .LVU572
  64:boards/TMC2225_eval.c **** }
 1719              		.loc 1 64 2 view .LVU573
 393:boards/TMC2225_eval.c **** 		}
 1720              		.loc 1 393 4 is_stmt 0 view .LVU574
 1721 0560 2148     		ldr	r0, .L130
 1722 0562 0021     		movs	r1, #0
 1723 0564 FFF7FEFF 		bl	tmc2225_readInt
 1724              	.LVL219:
 1725 0568 2B68     		ldr	r3, [r5]
 1726 056a 002B     		cmp	r3, #0
 1727 056c 20F00400 		bic	r0, r0, #4
 1728 0570 D4BF     		ite	le
 1729 0572 0422     		movle	r2, #4
 1730 0574 0022     		movgt	r2, #0
 1731 0576 0243     		orrs	r2, r2, r0
 1732 0578 A3E6     		b	.L127
 1733              	.LVL220:
 1734              	.L30:
 398:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_FREQ_MASK, TMC2225_PW
 1735              		.loc 1 398 3 is_stmt 1 view .LVU575
 398:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_FREQ_MASK, TMC2225_PW
 1736              		.loc 1 398 5 is_stmt 0 view .LVU576
 1737 057a 36B9     		cbnz	r6, .L99
 399:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1738              		.loc 1 399 4 is_stmt 1 view .LVU577
 1739              	.LBB167:
 1740              	.LBI167:
  60:boards/TMC2225_eval.c **** {
 1741              		.loc 1 60 31 view .LVU578
 1742              	.LVL221:
  60:boards/TMC2225_eval.c **** {
 1743              		.loc 1 60 31 is_stmt 0 view .LVU579
 1744              	.LBE167:
  62:boards/TMC2225_eval.c **** 
 1745              		.loc 1 62 2 is_stmt 1 view .LVU580
  64:boards/TMC2225_eval.c **** }
 1746              		.loc 1 64 2 view .LVU581
 399:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1747              		.loc 1 399 13 is_stmt 0 view .LVU582
 1748 057c 1A48     		ldr	r0, .L130
 1749              	.LVL222:
 399:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1750              		.loc 1 399 13 view .LVU583
 1751 057e 7021     		movs	r1, #112
 1752              	.LVL223:
 399:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1753              		.loc 1 399 13 view .LVU584
 1754 0580 FFF7FEFF 		bl	tmc2225_readInt
 1755              	.LVL224:
 1756 0584 C0F30140 		ubfx	r0, r0, #16, #2
 1757 0588 24E6     		b	.L119
 1758              	.LVL225:
 1759              	.L99:
 400:boards/TMC2225_eval.c **** 			if(*value >= 0 && *value < 4)
 1760              		.loc 1 400 10 is_stmt 1 view .LVU585
 401:boards/TMC2225_eval.c **** 			{
 1761              		.loc 1 401 4 view .LVU586
 401:boards/TMC2225_eval.c **** 			{
 1762              		.loc 1 401 6 is_stmt 0 view .LVU587
 1763 058a 2B68     		ldr	r3, [r5]
 1764 058c 032B     		cmp	r3, #3
 1765 058e 3FF6E8AE 		bhi	.L113
 403:boards/TMC2225_eval.c **** 			}
 1766              		.loc 1 403 5 is_stmt 1 view .LVU588
 1767              	.LBB168:
 1768              	.LBI168:
  60:boards/TMC2225_eval.c **** {
 1769              		.loc 1 60 31 view .LVU589
 1770              	.LVL226:
  60:boards/TMC2225_eval.c **** {
 1771              		.loc 1 60 31 is_stmt 0 view .LVU590
 1772              	.LBE168:
  62:boards/TMC2225_eval.c **** 
 1773              		.loc 1 62 2 is_stmt 1 view .LVU591
  64:boards/TMC2225_eval.c **** }
 1774              		.loc 1 64 2 view .LVU592
 1775              	.LBB169:
 1776              	.LBI169:
  60:boards/TMC2225_eval.c **** {
 1777              		.loc 1 60 31 view .LVU593
  60:boards/TMC2225_eval.c **** {
 1778              		.loc 1 60 31 is_stmt 0 view .LVU594
 1779              	.LBE169:
  62:boards/TMC2225_eval.c **** 
 1780              		.loc 1 62 2 is_stmt 1 view .LVU595
  64:boards/TMC2225_eval.c **** }
 1781              		.loc 1 64 2 view .LVU596
 403:boards/TMC2225_eval.c **** 			}
 1782              		.loc 1 403 5 is_stmt 0 view .LVU597
 1783 0592 1548     		ldr	r0, .L130
 1784              	.LVL227:
 403:boards/TMC2225_eval.c **** 			}
 1785              		.loc 1 403 5 view .LVU598
 1786 0594 7021     		movs	r1, #112
 1787              	.LVL228:
 403:boards/TMC2225_eval.c **** 			}
 1788              		.loc 1 403 5 view .LVU599
 1789 0596 FFF7FEFF 		bl	tmc2225_readInt
 1790              	.LVL229:
 1791 059a 2B68     		ldr	r3, [r5]
 1792 059c 1B04     		lsls	r3, r3, #16
 1793 059e 03F44033 		and	r3, r3, #196608
 1794 05a2 20F44032 		bic	r2, r0, #196608
 1795              	.LVL230:
 1796              	.L125:
 424:boards/TMC2225_eval.c **** 		}
 1797              		.loc 1 424 4 view .LVU600
 1798 05a6 1A43     		orrs	r2, r2, r3
 1799 05a8 7021     		movs	r1, #112
 1800 05aa 5AE6     		b	.L118
 1801              	.LVL231:
 1802              	.L28:
 413:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_AUTOSCALE_MASK, TMC22
 1803              		.loc 1 413 3 is_stmt 1 view .LVU601
 414:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1804              		.loc 1 414 13 is_stmt 0 view .LVU602
 1805 05ac 0E48     		ldr	r0, .L130
 1806              	.LVL232:
 414:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1807              		.loc 1 414 13 view .LVU603
 1808 05ae 7021     		movs	r1, #112
 1809              	.LVL233:
 413:boards/TMC2225_eval.c **** 			*value = TMC2225_FIELD_READ(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_AUTOSCALE_MASK, TMC22
 1810              		.loc 1 413 5 view .LVU604
 1811 05b0 26B9     		cbnz	r6, .L100
 414:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1812              		.loc 1 414 4 is_stmt 1 view .LVU605
 1813              	.LBB170:
 1814              	.LBI170:
  60:boards/TMC2225_eval.c **** {
 1815              		.loc 1 60 31 view .LVU606
 1816              	.LVL234:
  60:boards/TMC2225_eval.c **** {
 1817              		.loc 1 60 31 is_stmt 0 view .LVU607
 1818              	.LBE170:
  62:boards/TMC2225_eval.c **** 
 1819              		.loc 1 62 2 is_stmt 1 view .LVU608
  64:boards/TMC2225_eval.c **** }
 1820              		.loc 1 64 2 view .LVU609
 414:boards/TMC2225_eval.c **** 		} else if(readWrite == WRITE) {
 1821              		.loc 1 414 13 is_stmt 0 view .LVU610
 1822 05b2 FFF7FEFF 		bl	tmc2225_readInt
 1823              	.LVL235:
 1824 05b6 C0F38040 		ubfx	r0, r0, #18, #1
 1825 05ba 0BE6     		b	.L119
 1826              	.LVL236:
 1827              	.L100:
 415:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_PWMCONF, TMC2225_PWM_AUTOSCALE_MASK, TMC2225_PWM_
 1828              		.loc 1 415 10 is_stmt 1 view .LVU611
 416:boards/TMC2225_eval.c **** 		}
 1829              		.loc 1 416 4 view .LVU612
 1830              	.LBB171:
 1831              	.LBI171:
  60:boards/TMC2225_eval.c **** {
 1832              		.loc 1 60 31 view .LVU613
  60:boards/TMC2225_eval.c **** {
 1833              		.loc 1 60 31 is_stmt 0 view .LVU614
 1834              	.LBE171:
  62:boards/TMC2225_eval.c **** 
 1835              		.loc 1 62 2 is_stmt 1 view .LVU615
  64:boards/TMC2225_eval.c **** }
 1836              		.loc 1 64 2 view .LVU616
 1837              	.LBB172:
 1838              	.LBI172:
  60:boards/TMC2225_eval.c **** {
 1839              		.loc 1 60 31 view .LVU617
  60:boards/TMC2225_eval.c **** {
 1840              		.loc 1 60 31 is_stmt 0 view .LVU618
 1841              	.LBE172:
  62:boards/TMC2225_eval.c **** 
 1842              		.loc 1 62 2 is_stmt 1 view .LVU619
  64:boards/TMC2225_eval.c **** }
 1843              		.loc 1 64 2 view .LVU620
 416:boards/TMC2225_eval.c **** 		}
 1844              		.loc 1 416 4 is_stmt 0 view .LVU621
 1845 05bc FFF7FEFF 		bl	tmc2225_readInt
 1846              	.LVL237:
 1847 05c0 2B68     		ldr	r3, [r5]
 1848 05c2 002B     		cmp	r3, #0
 1849 05c4 20F48022 		bic	r2, r0, #262144
 1850 05c8 18BF     		it	ne
 1851 05ca 4FF48023 		movne	r3, #262144
 1852 05ce EAE7     		b	.L125
 1853              	.LVL238:
 1854              	.L102:
 423:boards/TMC2225_eval.c **** 			TMC2225_FIELD_UPDATE(motorToIC(motor), TMC2225_PWMCONF, TMC2225_FREEWHEEL_MASK, TMC2225_FREEWHEE
 1855              		.loc 1 423 10 is_stmt 1 view .LVU622
 424:boards/TMC2225_eval.c **** 		}
 1856              		.loc 1 424 4 view .LVU623
 1857              	.LBB173:
 1858              	.LBI173:
  60:boards/TMC2225_eval.c **** {
 1859              		.loc 1 60 31 view .LVU624
  60:boards/TMC2225_eval.c **** {
 1860              		.loc 1 60 31 is_stmt 0 view .LVU625
 1861              	.LBE173:
  62:boards/TMC2225_eval.c **** 
 1862              		.loc 1 62 2 is_stmt 1 view .LVU626
  64:boards/TMC2225_eval.c **** }
 1863              		.loc 1 64 2 view .LVU627
 1864              	.LBB174:
 1865              	.LBI174:
  60:boards/TMC2225_eval.c **** {
 1866              		.loc 1 60 31 view .LVU628
  60:boards/TMC2225_eval.c **** {
 1867              		.loc 1 60 31 is_stmt 0 view .LVU629
 1868              	.LBE174:
  62:boards/TMC2225_eval.c **** 
 1869              		.loc 1 62 2 is_stmt 1 view .LVU630
  64:boards/TMC2225_eval.c **** }
 1870              		.loc 1 64 2 view .LVU631
 424:boards/TMC2225_eval.c **** 		}
 1871              		.loc 1 424 4 is_stmt 0 view .LVU632
 1872 05d0 FFF7FEFF 		bl	tmc2225_readInt
 1873              	.LVL239:
 424:boards/TMC2225_eval.c **** 		}
 1874              		.loc 1 424 4 view .LVU633
 1875 05d4 2B68     		ldr	r3, [r5]
 1876 05d6 1B05     		lsls	r3, r3, #20
 1877 05d8 03F44013 		and	r3, r3, #3145728
 1878 05dc 20F44012 		bic	r2, r0, #3145728
 1879 05e0 E1E7     		b	.L125
 1880              	.LVL240:
 1881              	.L103:
 154:boards/TMC2225_eval.c **** 
 1882              		.loc 1 154 10 view .LVU634
 1883 05e2 0826     		movs	r6, #8
 1884 05e4 2DE7     		b	.L22
 1885              	.L131:
 1886 05e6 00BF     		.align	2
 1887              	.L130:
 1888 05e8 00000000 		.word	.LANCHOR0
 1889 05ec FFFF0F00 		.word	1048575
 1890              		.cfi_endproc
 1891              	.LFE13:
 1893              		.align	1
 1894              		.syntax unified
 1895              		.thumb
 1896              		.thumb_func
 1897              		.fpu softvfp
 1899              	SAP:
 1900              	.LVL241:
 1901              	.LFB14:
 436:boards/TMC2225_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 1902              		.loc 1 436 1 is_stmt 1 view -0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 8
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 437:boards/TMC2225_eval.c **** }
 1906              		.loc 1 437 2 view .LVU636
 436:boards/TMC2225_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 1907              		.loc 1 436 1 is_stmt 0 view .LVU637
 1908 05f0 07B5     		push	{r0, r1, r2, lr}
 1909              	.LCFI6:
 1910              		.cfi_def_cfa_offset 16
 1911              		.cfi_offset 14, -4
 436:boards/TMC2225_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 1912              		.loc 1 436 1 view .LVU638
 1913 05f2 0192     		str	r2, [sp, #4]
 437:boards/TMC2225_eval.c **** }
 1914              		.loc 1 437 9 view .LVU639
 1915 05f4 01AB     		add	r3, sp, #4
 1916 05f6 0246     		mov	r2, r0
 1917              	.LVL242:
 437:boards/TMC2225_eval.c **** }
 1918              		.loc 1 437 9 view .LVU640
 1919 05f8 0120     		movs	r0, #1
 1920              	.LVL243:
 437:boards/TMC2225_eval.c **** }
 1921              		.loc 1 437 9 view .LVU641
 1922 05fa FFF73CFD 		bl	handleParameter
 1923              	.LVL244:
 438:boards/TMC2225_eval.c **** 
 1924              		.loc 1 438 1 view .LVU642
 1925 05fe 03B0     		add	sp, sp, #12
 1926              	.LCFI7:
 1927              		.cfi_def_cfa_offset 4
 1928              		@ sp needed
 1929 0600 5DF804FB 		ldr	pc, [sp], #4
 1930              		.cfi_endproc
 1931              	.LFE14:
 1933              		.align	1
 1934              		.syntax unified
 1935              		.thumb
 1936              		.thumb_func
 1937              		.fpu softvfp
 1939              	GAP:
 1940              	.LVL245:
 1941              	.LFB15:
 441:boards/TMC2225_eval.c **** 	return handleParameter(READ, motor, type, value);
 1942              		.loc 1 441 1 is_stmt 1 view -0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 0
 1945              		@ frame_needed = 0, uses_anonymous_args = 0
 1946              		@ link register save eliminated.
 442:boards/TMC2225_eval.c **** }
 1947              		.loc 1 442 2 view .LVU644
 441:boards/TMC2225_eval.c **** 	return handleParameter(READ, motor, type, value);
 1948              		.loc 1 441 1 is_stmt 0 view .LVU645
 1949 0604 1346     		mov	r3, r2
 442:boards/TMC2225_eval.c **** }
 1950              		.loc 1 442 9 view .LVU646
 1951 0606 0246     		mov	r2, r0
 1952              	.LVL246:
 442:boards/TMC2225_eval.c **** }
 1953              		.loc 1 442 9 view .LVU647
 1954 0608 0020     		movs	r0, #0
 1955              	.LVL247:
 442:boards/TMC2225_eval.c **** }
 1956              		.loc 1 442 9 view .LVU648
 1957 060a 34E5     		b	handleParameter
 1958              	.LVL248:
 442:boards/TMC2225_eval.c **** }
 1959              		.loc 1 442 9 view .LVU649
 1960              		.cfi_endproc
 1961              	.LFE15:
 1963              		.align	1
 1964              		.syntax unified
 1965              		.thumb
 1966              		.thumb_func
 1967              		.fpu softvfp
 1969              	restore:
 1970              	.LFB20:
 504:boards/TMC2225_eval.c **** 	return tmc2225_restore(&TMC2225);
 1971              		.loc 1 504 1 is_stmt 1 view -0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 0
 1974              		@ frame_needed = 0, uses_anonymous_args = 0
 1975              		@ link register save eliminated.
 505:boards/TMC2225_eval.c **** }
 1976              		.loc 1 505 2 view .LVU651
 505:boards/TMC2225_eval.c **** }
 1977              		.loc 1 505 9 is_stmt 0 view .LVU652
 1978 060c 0148     		ldr	r0, .L135
 1979 060e FFF7FEBF 		b	tmc2225_restore
 1980              	.LVL249:
 1981              	.L136:
 1982 0612 00BF     		.align	2
 1983              	.L135:
 1984 0614 00000000 		.word	.LANCHOR0
 1985              		.cfi_endproc
 1986              	.LFE20:
 1988              		.align	1
 1989              		.syntax unified
 1990              		.thumb
 1991              		.thumb_func
 1992              		.fpu softvfp
 1994              	reset:
 1995              	.LFB19:
 496:boards/TMC2225_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 1996              		.loc 1 496 1 is_stmt 1 view -0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 0
 1999              		@ frame_needed = 0, uses_anonymous_args = 0
 497:boards/TMC2225_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, NULL);
 2000              		.loc 1 497 2 view .LVU654
 496:boards/TMC2225_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 2001              		.loc 1 496 1 is_stmt 0 view .LVU655
 2002 0618 10B5     		push	{r4, lr}
 2003              	.LCFI8:
 2004              		.cfi_def_cfa_offset 8
 2005              		.cfi_offset 4, -8
 2006              		.cfi_offset 14, -4
 497:boards/TMC2225_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, NULL);
 2007              		.loc 1 497 2 view .LVU656
 2008 061a 4FF40030 		mov	r0, #131072
 498:boards/TMC2225_eval.c **** 
 2009              		.loc 1 498 2 view .LVU657
 2010 061e 074C     		ldr	r4, .L138
 497:boards/TMC2225_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, NULL);
 2011              		.loc 1 497 2 view .LVU658
 2012 0620 FFF7FEFF 		bl	StepDir_init
 2013              	.LVL250:
 498:boards/TMC2225_eval.c **** 
 2014              		.loc 1 498 2 is_stmt 1 view .LVU659
 2015 0624 0023     		movs	r3, #0
 2016 0626 D4E9A312 		ldrd	r1, r2, [r4, #652]
 2017 062a 1846     		mov	r0, r3
 2018 062c FFF7FEFF 		bl	StepDir_setPins
 2019              	.LVL251:
 500:boards/TMC2225_eval.c **** }
 2020              		.loc 1 500 2 view .LVU660
 500:boards/TMC2225_eval.c **** }
 2021              		.loc 1 500 9 is_stmt 0 view .LVU661
 2022 0630 2046     		mov	r0, r4
 501:boards/TMC2225_eval.c **** 
 2023              		.loc 1 501 1 view .LVU662
 2024 0632 BDE81040 		pop	{r4, lr}
 2025              	.LCFI9:
 2026              		.cfi_restore 14
 2027              		.cfi_restore 4
 2028              		.cfi_def_cfa_offset 0
 500:boards/TMC2225_eval.c **** }
 2029              		.loc 1 500 9 view .LVU663
 2030 0636 FFF7FEBF 		b	tmc2225_reset
 2031              	.LVL252:
 2032              	.L139:
 2033 063a 00BF     		.align	2
 2034              	.L138:
 2035 063c 00000000 		.word	.LANCHOR0
 2036              		.cfi_endproc
 2037              	.LFE19:
 2039              		.align	1
 2040              		.syntax unified
 2041              		.thumb
 2042              		.thumb_func
 2043              		.fpu softvfp
 2045              	enableDriver:
 2046              	.LVL253:
 2047              	.LFB21:
 509:boards/TMC2225_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 2048              		.loc 1 509 1 is_stmt 1 view -0
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 0
 2051              		@ frame_needed = 0, uses_anonymous_args = 0
 2052              		@ link register save eliminated.
 510:boards/TMC2225_eval.c **** 		state = Evalboards.driverEnable;
 2053              		.loc 1 510 2 view .LVU665
 510:boards/TMC2225_eval.c **** 		state = Evalboards.driverEnable;
 2054              		.loc 1 510 4 is_stmt 0 view .LVU666
 2055 0640 0228     		cmp	r0, #2
 511:boards/TMC2225_eval.c **** 
 2056              		.loc 1 511 3 is_stmt 1 view .LVU667
 511:boards/TMC2225_eval.c **** 
 2057              		.loc 1 511 9 is_stmt 0 view .LVU668
 2058 0642 04BF     		itt	eq
 2059 0644 0C4B     		ldreq	r3, .L145
 2060 0646 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 2061              	.LVL254:
 513:boards/TMC2225_eval.c **** 		HAL.IOs->config->setHigh(Pins.DRV_ENN);
 2062              		.loc 1 513 2 is_stmt 1 view .LVU669
 513:boards/TMC2225_eval.c **** 		HAL.IOs->config->setHigh(Pins.DRV_ENN);
 2063              		.loc 1 513 4 is_stmt 0 view .LVU670
 2064 064a 38B9     		cbnz	r0, .L142
 514:boards/TMC2225_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2065              		.loc 1 514 3 is_stmt 1 view .LVU671
 514:boards/TMC2225_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2066              		.loc 1 514 6 is_stmt 0 view .LVU672
 2067 064c 0B4B     		ldr	r3, .L145+4
 514:boards/TMC2225_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2068              		.loc 1 514 10 view .LVU673
 2069 064e DB68     		ldr	r3, [r3, #12]
 514:boards/TMC2225_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2070              		.loc 1 514 18 view .LVU674
 2071 0650 1B68     		ldr	r3, [r3]
 514:boards/TMC2225_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 2072              		.loc 1 514 3 view .LVU675
 2073 0652 5B69     		ldr	r3, [r3, #20]
 2074              	.L144:
 2075              	.LBB177:
 2076              	.LBB178:
 516:boards/TMC2225_eval.c **** }
 2077              		.loc 1 516 3 view .LVU676
 2078 0654 0A4A     		ldr	r2, .L145+8
 2079 0656 D2F88802 		ldr	r0, [r2, #648]
 2080 065a 1847     		bx	r3	@ indirect register sibling call
 2081              	.LVL255:
 2082              	.L142:
 516:boards/TMC2225_eval.c **** }
 2083              		.loc 1 516 3 view .LVU677
 2084              	.LBE178:
 2085              	.LBE177:
 515:boards/TMC2225_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN);
 2086              		.loc 1 515 7 is_stmt 1 view .LVU678
 515:boards/TMC2225_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN);
 2087              		.loc 1 515 9 is_stmt 0 view .LVU679
 2088 065c 0128     		cmp	r0, #1
 2089 065e 09D1     		bne	.L140
 515:boards/TMC2225_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN);
 2090              		.loc 1 515 49 discriminator 1 view .LVU680
 2091 0660 054B     		ldr	r3, .L145
 515:boards/TMC2225_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN);
 2092              		.loc 1 515 35 discriminator 1 view .LVU681
 2093 0662 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 2094 0666 012B     		cmp	r3, #1
 2095 0668 04D1     		bne	.L140
 2096              	.LBB180:
 2097              	.LBI177:
 508:boards/TMC2225_eval.c **** {
 2098              		.loc 1 508 13 is_stmt 1 view .LVU682
 2099              	.LVL256:
 2100              	.LBB179:
 516:boards/TMC2225_eval.c **** }
 2101              		.loc 1 516 3 view .LVU683
 516:boards/TMC2225_eval.c **** }
 2102              		.loc 1 516 6 is_stmt 0 view .LVU684
 2103 066a 044B     		ldr	r3, .L145+4
 516:boards/TMC2225_eval.c **** }
 2104              		.loc 1 516 10 view .LVU685
 2105 066c DB68     		ldr	r3, [r3, #12]
 516:boards/TMC2225_eval.c **** }
 2106              		.loc 1 516 18 view .LVU686
 2107 066e 1B68     		ldr	r3, [r3]
 516:boards/TMC2225_eval.c **** }
 2108              		.loc 1 516 3 view .LVU687
 2109 0670 9B69     		ldr	r3, [r3, #24]
 2110 0672 EFE7     		b	.L144
 2111              	.LVL257:
 2112              	.L140:
 516:boards/TMC2225_eval.c **** }
 2113              		.loc 1 516 3 view .LVU688
 2114              	.LBE179:
 2115              	.LBE180:
 517:boards/TMC2225_eval.c **** 
 2116              		.loc 1 517 1 view .LVU689
 2117 0674 7047     		bx	lr
 2118              	.L146:
 2119 0676 00BF     		.align	2
 2120              	.L145:
 2121 0678 00000000 		.word	Evalboards
 2122 067c 00000000 		.word	HAL
 2123 0680 00000000 		.word	.LANCHOR0
 2124              		.cfi_endproc
 2125              	.LFE21:
 2127              		.align	1
 2128              		.syntax unified
 2129              		.thumb
 2130              		.thumb_func
 2131              		.fpu softvfp
 2133              	deInit:
 2134              	.LFB18:
 481:boards/TMC2225_eval.c **** 	enableDriver(DRIVER_DISABLE);
 2135              		.loc 1 481 1 is_stmt 1 view -0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 0
 2138              		@ frame_needed = 0, uses_anonymous_args = 0
 482:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN);
 2139              		.loc 1 482 2 view .LVU691
 481:boards/TMC2225_eval.c **** 	enableDriver(DRIVER_DISABLE);
 2140              		.loc 1 481 1 is_stmt 0 view .LVU692
 2141 0684 38B5     		push	{r3, r4, r5, lr}
 2142              	.LCFI10:
 2143              		.cfi_def_cfa_offset 16
 2144              		.cfi_offset 3, -16
 2145              		.cfi_offset 4, -12
 2146              		.cfi_offset 5, -8
 2147              		.cfi_offset 14, -4
 482:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN);
 2148              		.loc 1 482 2 view .LVU693
 2149 0686 0020     		movs	r0, #0
 2150 0688 FFF7DAFF 		bl	enableDriver
 2151              	.LVL258:
 483:boards/TMC2225_eval.c **** 
 2152              		.loc 1 483 2 is_stmt 1 view .LVU694
 483:boards/TMC2225_eval.c **** 
 2153              		.loc 1 483 5 is_stmt 0 view .LVU695
 2154 068c 144B     		ldr	r3, .L148
 483:boards/TMC2225_eval.c **** 
 2155              		.loc 1 483 2 view .LVU696
 2156 068e 154C     		ldr	r4, .L148+4
 483:boards/TMC2225_eval.c **** 
 2157              		.loc 1 483 5 view .LVU697
 2158 0690 DD68     		ldr	r5, [r3, #12]
 483:boards/TMC2225_eval.c **** 
 2159              		.loc 1 483 2 view .LVU698
 2160 0692 D4F88802 		ldr	r0, [r4, #648]
 483:boards/TMC2225_eval.c **** 
 2161              		.loc 1 483 17 view .LVU699
 2162 0696 2B68     		ldr	r3, [r5]
 483:boards/TMC2225_eval.c **** 
 2163              		.loc 1 483 2 view .LVU700
 2164 0698 9B68     		ldr	r3, [r3, #8]
 2165 069a 9847     		blx	r3
 2166              	.LVL259:
 485:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 2167              		.loc 1 485 2 is_stmt 1 view .LVU701
 485:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 2168              		.loc 1 485 17 is_stmt 0 view .LVU702
 2169 069c 2B68     		ldr	r3, [r5]
 485:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 2170              		.loc 1 485 2 view .LVU703
 2171 069e D4F88C02 		ldr	r0, [r4, #652]
 2172 06a2 9B68     		ldr	r3, [r3, #8]
 2173 06a4 9847     		blx	r3
 2174              	.LVL260:
 486:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.MS1);
 2175              		.loc 1 486 2 is_stmt 1 view .LVU704
 486:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.MS1);
 2176              		.loc 1 486 17 is_stmt 0 view .LVU705
 2177 06a6 2B68     		ldr	r3, [r5]
 486:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.MS1);
 2178              		.loc 1 486 2 view .LVU706
 2179 06a8 D4F89002 		ldr	r0, [r4, #656]
 2180 06ac 9B68     		ldr	r3, [r3, #8]
 2181 06ae 9847     		blx	r3
 2182              	.LVL261:
 487:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.MS2);
 2183              		.loc 1 487 2 is_stmt 1 view .LVU707
 487:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.MS2);
 2184              		.loc 1 487 17 is_stmt 0 view .LVU708
 2185 06b0 2B68     		ldr	r3, [r5]
 487:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.MS2);
 2186              		.loc 1 487 2 view .LVU709
 2187 06b2 D4F89402 		ldr	r0, [r4, #660]
 2188 06b6 9B68     		ldr	r3, [r3, #8]
 2189 06b8 9847     		blx	r3
 2190              	.LVL262:
 488:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DIAG);
 2191              		.loc 1 488 2 is_stmt 1 view .LVU710
 488:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DIAG);
 2192              		.loc 1 488 17 is_stmt 0 view .LVU711
 2193 06ba 2B68     		ldr	r3, [r5]
 488:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.DIAG);
 2194              		.loc 1 488 2 view .LVU712
 2195 06bc D4F89802 		ldr	r0, [r4, #664]
 2196 06c0 9B68     		ldr	r3, [r3, #8]
 2197 06c2 9847     		blx	r3
 2198              	.LVL263:
 489:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.INDEX);
 2199              		.loc 1 489 2 is_stmt 1 view .LVU713
 489:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.INDEX);
 2200              		.loc 1 489 17 is_stmt 0 view .LVU714
 2201 06c4 2B68     		ldr	r3, [r5]
 489:boards/TMC2225_eval.c **** 	HAL.IOs->config->reset(Pins.INDEX);
 2202              		.loc 1 489 2 view .LVU715
 2203 06c6 D4F89C02 		ldr	r0, [r4, #668]
 2204 06ca 9B68     		ldr	r3, [r3, #8]
 2205 06cc 9847     		blx	r3
 2206              	.LVL264:
 490:boards/TMC2225_eval.c **** 
 2207              		.loc 1 490 2 is_stmt 1 view .LVU716
 490:boards/TMC2225_eval.c **** 
 2208              		.loc 1 490 17 is_stmt 0 view .LVU717
 2209 06ce 2B68     		ldr	r3, [r5]
 490:boards/TMC2225_eval.c **** 
 2210              		.loc 1 490 2 view .LVU718
 2211 06d0 D4F8A002 		ldr	r0, [r4, #672]
 2212 06d4 9B68     		ldr	r3, [r3, #8]
 2213 06d6 9847     		blx	r3
 2214              	.LVL265:
 492:boards/TMC2225_eval.c **** }
 2215              		.loc 1 492 2 is_stmt 1 view .LVU719
 493:boards/TMC2225_eval.c **** 
 2216              		.loc 1 493 1 is_stmt 0 view .LVU720
 2217 06d8 BDE83840 		pop	{r3, r4, r5, lr}
 2218              	.LCFI11:
 2219              		.cfi_restore 14
 2220              		.cfi_restore 5
 2221              		.cfi_restore 4
 2222              		.cfi_restore 3
 2223              		.cfi_def_cfa_offset 0
 492:boards/TMC2225_eval.c **** }
 2224              		.loc 1 492 2 view .LVU721
 2225 06dc FFF7FEBF 		b	StepDir_deInit
 2226              	.LVL266:
 2227              	.L149:
 2228              		.align	2
 2229              	.L148:
 2230 06e0 00000000 		.word	HAL
 2231 06e4 00000000 		.word	.LANCHOR0
 2232              		.cfi_endproc
 2233              	.LFE18:
 2235              		.align	1
 2236              		.syntax unified
 2237              		.thumb
 2238              		.thumb_func
 2239              		.fpu softvfp
 2241              	userFunction:
 2242              	.LVL267:
 2243              	.LFB17:
 452:boards/TMC2225_eval.c **** 	uint32_t errors = 0;
 2244              		.loc 1 452 1 is_stmt 1 view -0
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 0
 2247              		@ frame_needed = 0, uses_anonymous_args = 0
 453:boards/TMC2225_eval.c **** 
 2248              		.loc 1 453 2 view .LVU723
 455:boards/TMC2225_eval.c **** 	{
 2249              		.loc 1 455 2 view .LVU724
 452:boards/TMC2225_eval.c **** 	uint32_t errors = 0;
 2250              		.loc 1 452 1 is_stmt 0 view .LVU725
 2251 06e8 10B5     		push	{r4, lr}
 2252              	.LCFI12:
 2253              		.cfi_def_cfa_offset 8
 2254              		.cfi_offset 4, -8
 2255              		.cfi_offset 14, -4
 452:boards/TMC2225_eval.c **** 	uint32_t errors = 0;
 2256              		.loc 1 452 1 view .LVU726
 2257 06ea 1446     		mov	r4, r2
 2258 06ec 0428     		cmp	r0, #4
 2259 06ee 28D8     		bhi	.L158
 2260 06f0 DFE800F0 		tbb	[pc, r0]
 2261              	.L153:
 2262 06f4 03       		.byte	(.L157-.L153)/2
 2263 06f5 08       		.byte	(.L156-.L153)/2
 2264 06f6 0E       		.byte	(.L155-.L153)/2
 2265 06f7 12       		.byte	(.L154-.L153)/2
 2266 06f8 1A       		.byte	(.L152-.L153)/2
 2267 06f9 00       		.p2align 1
 2268              	.L157:
 458:boards/TMC2225_eval.c **** 		break;
 2269              		.loc 1 458 3 is_stmt 1 view .LVU727
 458:boards/TMC2225_eval.c **** 		break;
 2270              		.loc 1 458 12 is_stmt 0 view .LVU728
 2271 06fa 0846     		mov	r0, r1
 2272              	.LVL268:
 458:boards/TMC2225_eval.c **** 		break;
 2273              		.loc 1 458 12 view .LVU729
 2274 06fc FFF7FEFF 		bl	StepDir_getStatus
 2275              	.LVL269:
 2276              	.L160:
 467:boards/TMC2225_eval.c **** 		break;
 2277              		.loc 1 467 10 view .LVU730
 2278 0700 2060     		str	r0, [r4]
 468:boards/TMC2225_eval.c **** 	case 4:
 2279              		.loc 1 468 3 is_stmt 1 view .LVU731
 2280 0702 03E0     		b	.L159
 2281              	.LVL270:
 2282              	.L156:
 461:boards/TMC2225_eval.c **** 		break;
 2283              		.loc 1 461 3 view .LVU732
 2284              	.LBB187:
 2285              	.LBI187:
  60:boards/TMC2225_eval.c **** {
 2286              		.loc 1 60 31 view .LVU733
  60:boards/TMC2225_eval.c **** {
 2287              		.loc 1 60 31 is_stmt 0 view .LVU734
 2288              	.LBE187:
  62:boards/TMC2225_eval.c **** 
 2289              		.loc 1 62 2 is_stmt 1 view .LVU735
  64:boards/TMC2225_eval.c **** }
 2290              		.loc 1 64 2 view .LVU736
 461:boards/TMC2225_eval.c **** 		break;
 2291              		.loc 1 461 3 is_stmt 0 view .LVU737
 2292 0704 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2293              	.LVL271:
 461:boards/TMC2225_eval.c **** 		break;
 2294              		.loc 1 461 3 view .LVU738
 2295 0706 1048     		ldr	r0, .L161
 2296              	.LVL272:
 461:boards/TMC2225_eval.c **** 		break;
 2297              		.loc 1 461 3 view .LVU739
 2298 0708 FFF7FEFF 		bl	tmc2225_set_slave
 2299              	.LVL273:
 462:boards/TMC2225_eval.c **** 	case 2:
 2300              		.loc 1 462 3 is_stmt 1 view .LVU740
 2301              	.L159:
 2302              	.LBB188:
 2303              	.LBB189:
 471:boards/TMC2225_eval.c **** 	default:
 2304              		.loc 1 471 3 view .LVU741
 477:boards/TMC2225_eval.c **** }
 2305              		.loc 1 477 2 view .LVU742
 470:boards/TMC2225_eval.c **** 		break;
 2306              		.loc 1 470 3 is_stmt 0 view .LVU743
 2307 070c 0020     		movs	r0, #0
 2308              	.LVL274:
 2309              	.L150:
 470:boards/TMC2225_eval.c **** 		break;
 2310              		.loc 1 470 3 view .LVU744
 2311              	.LBE189:
 2312              	.LBE188:
 478:boards/TMC2225_eval.c **** 
 2313              		.loc 1 478 1 view .LVU745
 2314 070e 10BD     		pop	{r4, pc}
 2315              	.LVL275:
 2316              	.L155:
 464:boards/TMC2225_eval.c **** 		break;
 2317              		.loc 1 464 3 is_stmt 1 view .LVU746
 2318              	.LBB191:
 2319              	.LBI191:
  60:boards/TMC2225_eval.c **** {
 2320              		.loc 1 60 31 view .LVU747
  60:boards/TMC2225_eval.c **** {
 2321              		.loc 1 60 31 is_stmt 0 view .LVU748
 2322              	.LBE191:
  62:boards/TMC2225_eval.c **** 
 2323              		.loc 1 62 2 is_stmt 1 view .LVU749
  64:boards/TMC2225_eval.c **** }
 2324              		.loc 1 64 2 view .LVU750
 464:boards/TMC2225_eval.c **** 		break;
 2325              		.loc 1 464 12 is_stmt 0 view .LVU751
 2326 0710 0D48     		ldr	r0, .L161
 2327              	.LVL276:
 464:boards/TMC2225_eval.c **** 		break;
 2328              		.loc 1 464 12 view .LVU752
 2329 0712 FFF7FEFF 		bl	tmc2225_get_slave
 2330              	.LVL277:
 464:boards/TMC2225_eval.c **** 		break;
 2331              		.loc 1 464 12 view .LVU753
 2332 0716 F3E7     		b	.L160
 2333              	.LVL278:
 2334              	.L154:
 467:boards/TMC2225_eval.c **** 		break;
 2335              		.loc 1 467 3 is_stmt 1 view .LVU754
 467:boards/TMC2225_eval.c **** 		break;
 2336              		.loc 1 467 17 is_stmt 0 view .LVU755
 2337 0718 0C4B     		ldr	r3, .L161+4
 467:boards/TMC2225_eval.c **** 		break;
 2338              		.loc 1 467 12 view .LVU756
 2339 071a 0220     		movs	r0, #2
 2340              	.LVL279:
 467:boards/TMC2225_eval.c **** 		break;
 2341              		.loc 1 467 12 view .LVU757
 2342 071c DB68     		ldr	r3, [r3, #12]
 2343 071e 9847     		blx	r3
 2344              	.LVL280:
 467:boards/TMC2225_eval.c **** 		break;
 2345              		.loc 1 467 49 view .LVU758
 2346 0720 5023     		movs	r3, #80
 2347 0722 B0FBF3F0 		udiv	r0, r0, r3
 2348 0726 EBE7     		b	.L160
 2349              	.LVL281:
 2350              	.L152:
 2351              	.LBB192:
 2352              	.LBI188:
 451:boards/TMC2225_eval.c **** {
 2353              		.loc 1 451 17 is_stmt 1 view .LVU759
 2354              	.LBB190:
 470:boards/TMC2225_eval.c **** 		break;
 2355              		.loc 1 470 3 view .LVU760
 470:boards/TMC2225_eval.c **** 		break;
 2356              		.loc 1 470 34 is_stmt 0 view .LVU761
 2357 0728 1368     		ldr	r3, [r2]
 2358 072a 4FF4FA51 		mov	r1, #8000
 2359              	.LVL282:
 470:boards/TMC2225_eval.c **** 		break;
 2360              		.loc 1 470 34 view .LVU762
 2361 072e 5943     		muls	r1, r3, r1
 470:boards/TMC2225_eval.c **** 		break;
 2362              		.loc 1 470 88 view .LVU763
 2363 0730 6423     		movs	r3, #100
 2364 0732 B1FBF3F1 		udiv	r1, r1, r3
 470:boards/TMC2225_eval.c **** 		break;
 2365              		.loc 1 470 8 view .LVU764
 2366 0736 054B     		ldr	r3, .L161+4
 470:boards/TMC2225_eval.c **** 		break;
 2367              		.loc 1 470 3 view .LVU765
 2368 0738 89B2     		uxth	r1, r1
 2369 073a 9B68     		ldr	r3, [r3, #8]
 2370 073c 0220     		movs	r0, #2
 2371              	.LVL283:
 470:boards/TMC2225_eval.c **** 		break;
 2372              		.loc 1 470 3 view .LVU766
 2373 073e 9847     		blx	r3
 2374              	.LVL284:
 470:boards/TMC2225_eval.c **** 		break;
 2375              		.loc 1 470 3 view .LVU767
 2376 0740 E4E7     		b	.L159
 2377              	.LVL285:
 2378              	.L158:
 470:boards/TMC2225_eval.c **** 		break;
 2379              		.loc 1 470 3 view .LVU768
 2380 0742 0420     		movs	r0, #4
 2381              	.LVL286:
 470:boards/TMC2225_eval.c **** 		break;
 2382              		.loc 1 470 3 view .LVU769
 2383              	.LBE190:
 2384              	.LBE192:
 477:boards/TMC2225_eval.c **** }
 2385              		.loc 1 477 2 is_stmt 1 view .LVU770
 477:boards/TMC2225_eval.c **** }
 2386              		.loc 1 477 9 is_stmt 0 view .LVU771
 2387 0744 E3E7     		b	.L150
 2388              	.L162:
 2389 0746 00BF     		.align	2
 2390              	.L161:
 2391 0748 00000000 		.word	.LANCHOR0
 2392 074c 00000000 		.word	Timer
 2393              		.cfi_endproc
 2394              	.LFE17:
 2396              		.align	1
 2397              		.syntax unified
 2398              		.thumb
 2399              		.thumb_func
 2400              		.fpu softvfp
 2402              	moveBy:
 2403              	.LVL287:
 2404              	.LFB12:
 138:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 2405              		.loc 1 138 1 is_stmt 1 view -0
 2406              		.cfi_startproc
 2407              		@ args = 0, pretend = 0, frame = 0
 2408              		@ frame_needed = 0, uses_anonymous_args = 0
 139:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 2409              		.loc 1 139 2 view .LVU773
 138:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 2410              		.loc 1 138 1 is_stmt 0 view .LVU774
 2411 0750 38B5     		push	{r3, r4, r5, lr}
 2412              	.LCFI13:
 2413              		.cfi_def_cfa_offset 16
 2414              		.cfi_offset 3, -16
 2415              		.cfi_offset 4, -12
 2416              		.cfi_offset 5, -8
 2417              		.cfi_offset 14, -4
 138:boards/TMC2225_eval.c **** 	if(motor >= MOTORS)
 2418              		.loc 1 138 1 view .LVU775
 2419 0752 0D46     		mov	r5, r1
 139:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 2420              		.loc 1 139 4 view .LVU776
 2421 0754 0446     		mov	r4, r0
 2422 0756 48B9     		cbnz	r0, .L165
 2423              	.LVL288:
 2424              	.LBB197:
 2425              	.LBI197:
 137:boards/TMC2225_eval.c **** {
 2426              		.loc 1 137 17 is_stmt 1 view .LVU777
 2427              	.LBB198:
 143:boards/TMC2225_eval.c **** 
 2428              		.loc 1 143 2 view .LVU778
 143:boards/TMC2225_eval.c **** 
 2429              		.loc 1 143 12 is_stmt 0 view .LVU779
 2430 0758 FFF7FEFF 		bl	StepDir_getActualPosition
 2431              	.LVL289:
 143:boards/TMC2225_eval.c **** 
 2432              		.loc 1 143 9 view .LVU780
 2433 075c 2968     		ldr	r1, [r5]
 2434 075e 0144     		add	r1, r1, r0
 2435 0760 2960     		str	r1, [r5]
 145:boards/TMC2225_eval.c **** }
 2436              		.loc 1 145 2 is_stmt 1 view .LVU781
 2437              	.LVL290:
 2438              	.LBB199:
 2439              	.LBI199:
 127:boards/TMC2225_eval.c **** {
 2440              		.loc 1 127 17 view .LVU782
 2441              	.LBB200:
 129:boards/TMC2225_eval.c **** 		return TMC_ERROR_MOTOR;
 2442              		.loc 1 129 2 view .LVU783
 132:boards/TMC2225_eval.c **** 
 2443              		.loc 1 132 2 view .LVU784
 2444 0762 2046     		mov	r0, r4
 2445 0764 FFF7FEFF 		bl	StepDir_moveTo
 2446              	.LVL291:
 134:boards/TMC2225_eval.c **** }
 2447              		.loc 1 134 2 view .LVU785
 132:boards/TMC2225_eval.c **** 
 2448              		.loc 1 132 2 is_stmt 0 view .LVU786
 2449 0768 2046     		mov	r0, r4
 2450              	.L163:
 2451              	.LBE200:
 2452              	.LBE199:
 2453              	.LBE198:
 2454              	.LBE197:
 146:boards/TMC2225_eval.c **** 
 2455              		.loc 1 146 1 view .LVU787
 2456 076a 38BD     		pop	{r3, r4, r5, pc}
 2457              	.LVL292:
 2458              	.L165:
 140:boards/TMC2225_eval.c **** 
 2459              		.loc 1 140 10 view .LVU788
 2460 076c 0820     		movs	r0, #8
 2461              	.LVL293:
 140:boards/TMC2225_eval.c **** 
 2462              		.loc 1 140 10 view .LVU789
 2463 076e FCE7     		b	.L163
 2464              		.cfi_endproc
 2465              	.LFE12:
 2467              		.align	1
 2468              		.global	tmc2225_readWriteArray
 2469              		.syntax unified
 2470              		.thumb
 2471              		.thumb_func
 2472              		.fpu softvfp
 2474              	tmc2225_readWriteArray:
 2475              	.LVL294:
 2476              	.LFB3:
  79:boards/TMC2225_eval.c **** 	UART_readWrite(channelToUART(channel), data, writeLength, readLength);
 2477              		.loc 1 79 1 is_stmt 1 view -0
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 0
 2480              		@ frame_needed = 0, uses_anonymous_args = 0
 2481              		@ link register save eliminated.
  80:boards/TMC2225_eval.c **** }
 2482              		.loc 1 80 2 view .LVU791
 2483              	.LBB201:
 2484              	.LBI201:
  67:boards/TMC2225_eval.c **** {
 2485              		.loc 1 67 28 view .LVU792
 2486              	.LBB202:
  69:boards/TMC2225_eval.c **** 
 2487              		.loc 1 69 2 view .LVU793
  71:boards/TMC2225_eval.c **** }
 2488              		.loc 1 71 2 view .LVU794
 2489              	.LBE202:
 2490              	.LBE201:
  80:boards/TMC2225_eval.c **** }
 2491              		.loc 1 80 2 is_stmt 0 view .LVU795
 2492 0770 0248     		ldr	r0, .L167
 2493              	.LVL295:
  80:boards/TMC2225_eval.c **** }
 2494              		.loc 1 80 2 view .LVU796
 2495 0772 DBB2     		uxtb	r3, r3
 2496              	.LVL296:
  80:boards/TMC2225_eval.c **** }
 2497              		.loc 1 80 2 view .LVU797
 2498 0774 D0F8A802 		ldr	r0, [r0, #680]
 2499 0778 FFF7FEBF 		b	UART_readWrite
 2500              	.LVL297:
 2501              	.L168:
  80:boards/TMC2225_eval.c **** }
 2502              		.loc 1 80 2 view .LVU798
 2503              		.align	2
 2504              	.L167:
 2505 077c 00000000 		.word	.LANCHOR0
 2506              		.cfi_endproc
 2507              	.LFE3:
 2509              		.align	1
 2510              		.global	tmc2225_CRC8
 2511              		.syntax unified
 2512              		.thumb
 2513              		.thumb_func
 2514              		.fpu softvfp
 2516              	tmc2225_CRC8:
 2517              	.LVL298:
 2518              	.LFB4:
  87:boards/TMC2225_eval.c **** 	return TMC2225_CRC(data, length);
 2519              		.loc 1 87 1 is_stmt 1 view -0
 2520              		.cfi_startproc
 2521              		@ args = 0, pretend = 0, frame = 0
 2522              		@ frame_needed = 0, uses_anonymous_args = 0
 2523              		@ link register save eliminated.
  88:boards/TMC2225_eval.c **** }
 2524              		.loc 1 88 2 view .LVU800
  88:boards/TMC2225_eval.c **** }
 2525              		.loc 1 88 9 is_stmt 0 view .LVU801
 2526 0780 0122     		movs	r2, #1
 2527 0782 FFF7FEBF 		b	tmc_CRC8
 2528              	.LVL299:
  88:boards/TMC2225_eval.c **** }
 2529              		.loc 1 88 9 view .LVU802
 2530              		.cfi_endproc
 2531              	.LFE4:
 2533              		.align	1
 2534              		.global	TMC2225_init
 2535              		.syntax unified
 2536              		.thumb
 2537              		.thumb_func
 2538              		.fpu softvfp
 2540              	TMC2225_init:
 2541              	.LFB23:
 527:boards/TMC2225_eval.c **** 
 528:boards/TMC2225_eval.c **** void TMC2225_init(void)
 529:boards/TMC2225_eval.c **** {
 2542              		.loc 1 529 1 is_stmt 1 view -0
 2543              		.cfi_startproc
 2544              		@ args = 0, pretend = 0, frame = 0
 2545              		@ frame_needed = 0, uses_anonymous_args = 0
 530:boards/TMC2225_eval.c **** 	tmc_fillCRC8Table(0x07, true, 1);
 2546              		.loc 1 530 2 view .LVU804
 529:boards/TMC2225_eval.c **** 	tmc_fillCRC8Table(0x07, true, 1);
 2547              		.loc 1 529 1 is_stmt 0 view .LVU805
 2548 0786 70B5     		push	{r4, r5, r6, lr}
 2549              	.LCFI14:
 2550              		.cfi_def_cfa_offset 16
 2551              		.cfi_offset 4, -16
 2552              		.cfi_offset 5, -12
 2553              		.cfi_offset 6, -8
 2554              		.cfi_offset 14, -4
 2555              		.loc 1 530 2 view .LVU806
 2556 0788 0122     		movs	r2, #1
 531:boards/TMC2225_eval.c **** 
 532:boards/TMC2225_eval.c **** 	Pins.DRV_ENN  = &HAL.IOs->pins->DIO0;
 2557              		.loc 1 532 22 view .LVU807
 2558 078a 5F4E     		ldr	r6, .L171
 2559              		.loc 1 532 16 view .LVU808
 2560 078c 5F4C     		ldr	r4, .L171+4
 530:boards/TMC2225_eval.c **** 
 2561              		.loc 1 530 2 view .LVU809
 2562 078e 1146     		mov	r1, r2
 2563 0790 0720     		movs	r0, #7
 2564 0792 FFF7FEFF 		bl	tmc_fillCRC8Table
 2565              	.LVL300:
 2566              		.loc 1 532 2 is_stmt 1 view .LVU810
 2567              		.loc 1 532 22 is_stmt 0 view .LVU811
 2568 0796 F568     		ldr	r5, [r6, #12]
 2569              		.loc 1 532 26 view .LVU812
 2570 0798 6B68     		ldr	r3, [r5, #4]
 533:boards/TMC2225_eval.c **** 	Pins.STEP     = &HAL.IOs->pins->DIO6;
 2571              		.loc 1 533 18 view .LVU813
 2572 079a 03F59472 		add	r2, r3, #296
 2573              		.loc 1 533 16 view .LVU814
 2574 079e C4F88C22 		str	r2, [r4, #652]
 534:boards/TMC2225_eval.c **** 	Pins.DIR      = &HAL.IOs->pins->DIO7;
 2575              		.loc 1 534 18 view .LVU815
 2576 07a2 03F5A472 		add	r2, r3, #328
 2577              		.loc 1 534 16 view .LVU816
 2578 07a6 C4F89022 		str	r2, [r4, #656]
 535:boards/TMC2225_eval.c **** 	Pins.MS1      = &HAL.IOs->pins->DIO3;
 2579              		.loc 1 535 18 view .LVU817
 2580 07aa 03F1C802 		add	r2, r3, #200
 2581              		.loc 1 535 16 view .LVU818
 2582 07ae C4F89422 		str	r2, [r4, #660]
 536:boards/TMC2225_eval.c **** 	Pins.MS2      = &HAL.IOs->pins->DIO4;
 2583              		.loc 1 536 18 view .LVU819
 2584 07b2 03F1E802 		add	r2, r3, #232
 2585              		.loc 1 536 16 view .LVU820
 2586 07b6 C4F89822 		str	r2, [r4, #664]
 537:boards/TMC2225_eval.c **** 	Pins.DIAG     = &HAL.IOs->pins->DIO1;
 2587              		.loc 1 537 18 view .LVU821
 2588 07ba 03F18802 		add	r2, r3, #136
 532:boards/TMC2225_eval.c **** 	Pins.STEP     = &HAL.IOs->pins->DIO6;
 2589              		.loc 1 532 18 view .LVU822
 2590 07be 03F16800 		add	r0, r3, #104
 2591              		.loc 1 537 16 view .LVU823
 2592 07c2 C4F89C22 		str	r2, [r4, #668]
 538:boards/TMC2225_eval.c **** 	Pins.INDEX    = &HAL.IOs->pins->DIO2;
 2593              		.loc 1 538 18 view .LVU824
 2594 07c6 03F1A802 		add	r2, r3, #168
 539:boards/TMC2225_eval.c **** 	Pins.UC_PWM   = &HAL.IOs->pins->DIO9;
 2595              		.loc 1 539 18 view .LVU825
 2596 07ca 03F5C473 		add	r3, r3, #392
 2597              		.loc 1 539 16 view .LVU826
 2598 07ce C4F8A432 		str	r3, [r4, #676]
 540:boards/TMC2225_eval.c **** 
 541:boards/TMC2225_eval.c **** 	HAL.IOs->config->toOutput(Pins.DRV_ENN);
 2599              		.loc 1 541 17 view .LVU827
 2600 07d2 2B68     		ldr	r3, [r5]
 538:boards/TMC2225_eval.c **** 	Pins.UC_PWM   = &HAL.IOs->pins->DIO9;
 2601              		.loc 1 538 16 view .LVU828
 2602 07d4 C4F8A022 		str	r2, [r4, #672]
 2603              		.loc 1 541 2 view .LVU829
 2604 07d8 DB68     		ldr	r3, [r3, #12]
 532:boards/TMC2225_eval.c **** 	Pins.STEP     = &HAL.IOs->pins->DIO6;
 2605              		.loc 1 532 16 view .LVU830
 2606 07da C4F88802 		str	r0, [r4, #648]
 533:boards/TMC2225_eval.c **** 	Pins.DIR      = &HAL.IOs->pins->DIO7;
 2607              		.loc 1 533 2 is_stmt 1 view .LVU831
 534:boards/TMC2225_eval.c **** 	Pins.MS1      = &HAL.IOs->pins->DIO3;
 2608              		.loc 1 534 2 view .LVU832
 535:boards/TMC2225_eval.c **** 	Pins.MS2      = &HAL.IOs->pins->DIO4;
 2609              		.loc 1 535 2 view .LVU833
 536:boards/TMC2225_eval.c **** 	Pins.DIAG     = &HAL.IOs->pins->DIO1;
 2610              		.loc 1 536 2 view .LVU834
 537:boards/TMC2225_eval.c **** 	Pins.INDEX    = &HAL.IOs->pins->DIO2;
 2611              		.loc 1 537 2 view .LVU835
 538:boards/TMC2225_eval.c **** 	Pins.UC_PWM   = &HAL.IOs->pins->DIO9;
 2612              		.loc 1 538 2 view .LVU836
 539:boards/TMC2225_eval.c **** 
 2613              		.loc 1 539 2 view .LVU837
 2614              		.loc 1 541 2 view .LVU838
 2615 07de 9847     		blx	r3
 2616              	.LVL301:
 542:boards/TMC2225_eval.c **** 	HAL.IOs->config->toOutput(Pins.STEP);
 2617              		.loc 1 542 2 view .LVU839
 2618              		.loc 1 542 17 is_stmt 0 view .LVU840
 2619 07e0 2B68     		ldr	r3, [r5]
 2620              		.loc 1 542 2 view .LVU841
 2621 07e2 D4F88C02 		ldr	r0, [r4, #652]
 2622 07e6 DB68     		ldr	r3, [r3, #12]
 2623 07e8 9847     		blx	r3
 2624              	.LVL302:
 543:boards/TMC2225_eval.c **** 	HAL.IOs->config->toOutput(Pins.DIR);
 2625              		.loc 1 543 2 is_stmt 1 view .LVU842
 2626              		.loc 1 543 17 is_stmt 0 view .LVU843
 2627 07ea 2B68     		ldr	r3, [r5]
 2628              		.loc 1 543 2 view .LVU844
 2629 07ec D4F89002 		ldr	r0, [r4, #656]
 2630 07f0 DB68     		ldr	r3, [r3, #12]
 2631 07f2 9847     		blx	r3
 2632              	.LVL303:
 544:boards/TMC2225_eval.c **** 	HAL.IOs->config->toOutput(Pins.MS1);
 2633              		.loc 1 544 2 is_stmt 1 view .LVU845
 2634              		.loc 1 544 17 is_stmt 0 view .LVU846
 2635 07f4 2B68     		ldr	r3, [r5]
 2636              		.loc 1 544 2 view .LVU847
 2637 07f6 D4F89402 		ldr	r0, [r4, #660]
 2638 07fa DB68     		ldr	r3, [r3, #12]
 2639 07fc 9847     		blx	r3
 2640              	.LVL304:
 545:boards/TMC2225_eval.c **** 	HAL.IOs->config->toOutput(Pins.MS2);
 2641              		.loc 1 545 2 is_stmt 1 view .LVU848
 2642              		.loc 1 545 17 is_stmt 0 view .LVU849
 2643 07fe 2B68     		ldr	r3, [r5]
 2644              		.loc 1 545 2 view .LVU850
 2645 0800 D4F89802 		ldr	r0, [r4, #664]
 2646 0804 DB68     		ldr	r3, [r3, #12]
 2647 0806 9847     		blx	r3
 2648              	.LVL305:
 546:boards/TMC2225_eval.c **** 	HAL.IOs->config->toInput(Pins.DIAG);
 2649              		.loc 1 546 2 is_stmt 1 view .LVU851
 2650              		.loc 1 546 17 is_stmt 0 view .LVU852
 2651 0808 2B68     		ldr	r3, [r5]
 2652              		.loc 1 546 2 view .LVU853
 2653 080a D4F89C02 		ldr	r0, [r4, #668]
 2654 080e 1B69     		ldr	r3, [r3, #16]
 2655 0810 9847     		blx	r3
 2656              	.LVL306:
 547:boards/TMC2225_eval.c **** 	HAL.IOs->config->toInput(Pins.INDEX);
 2657              		.loc 1 547 2 is_stmt 1 view .LVU854
 2658              		.loc 1 547 17 is_stmt 0 view .LVU855
 2659 0812 2B68     		ldr	r3, [r5]
 2660              		.loc 1 547 2 view .LVU856
 2661 0814 D4F8A002 		ldr	r0, [r4, #672]
 2662 0818 1B69     		ldr	r3, [r3, #16]
 2663 081a 9847     		blx	r3
 2664              	.LVL307:
 548:boards/TMC2225_eval.c **** 
 549:boards/TMC2225_eval.c **** 	TMC2225_UARTChannel = HAL.UART;
 2665              		.loc 1 549 2 is_stmt 1 view .LVU857
 2666              		.loc 1 549 27 is_stmt 0 view .LVU858
 2667 081c F36A     		ldr	r3, [r6, #44]
 2668              		.loc 1 549 22 view .LVU859
 2669 081e C4F8A832 		str	r3, [r4, #680]
 550:boards/TMC2225_eval.c **** 	TMC2225_UARTChannel->pinout = UART_PINS_2;
 2670              		.loc 1 550 2 is_stmt 1 view .LVU860
 2671              		.loc 1 550 30 is_stmt 0 view .LVU861
 2672 0822 0126     		movs	r6, #1
 2673 0824 1E70     		strb	r6, [r3]
 551:boards/TMC2225_eval.c **** 	TMC2225_UARTChannel->rxtx.init();
 2674              		.loc 1 551 2 is_stmt 1 view .LVU862
 2675 0826 5B68     		ldr	r3, [r3, #4]
 2676 0828 9847     		blx	r3
 2677              	.LVL308:
 552:boards/TMC2225_eval.c **** 
 553:boards/TMC2225_eval.c **** 	TMC2225_config = Evalboards.ch2.config;
 2678              		.loc 1 553 2 view .LVU863
 2679              		.loc 1 553 33 is_stmt 0 view .LVU864
 2680 082a 394B     		ldr	r3, .L171+8
 554:boards/TMC2225_eval.c **** 
 555:boards/TMC2225_eval.c **** 	Evalboards.ch2.config->reset        = reset;
 2681              		.loc 1 555 38 view .LVU865
 2682 082c 3949     		ldr	r1, .L171+12
 553:boards/TMC2225_eval.c **** 
 2683              		.loc 1 553 33 view .LVU866
 2684 082e D3F89020 		ldr	r2, [r3, #144]
 2685              		.loc 1 555 2 is_stmt 1 view .LVU867
 2686              		.loc 1 555 38 is_stmt 0 view .LVU868
 2687 0832 C2F80412 		str	r1, [r2, #516]
 556:boards/TMC2225_eval.c **** 	Evalboards.ch2.config->restore      = restore;
 2688              		.loc 1 556 2 is_stmt 1 view .LVU869
 2689              		.loc 1 556 38 is_stmt 0 view .LVU870
 2690 0836 3849     		ldr	r1, .L171+16
 2691 0838 C2F80812 		str	r1, [r2, #520]
 557:boards/TMC2225_eval.c **** 	Evalboards.ch2.config->state        = CONFIG_RESET;
 2692              		.loc 1 557 2 is_stmt 1 view .LVU871
 558:boards/TMC2225_eval.c **** 	Evalboards.ch2.config->configIndex  = 0;
 2693              		.loc 1 558 2 view .LVU872
 559:boards/TMC2225_eval.c **** 
 560:boards/TMC2225_eval.c **** 	Evalboards.ch2.rotate               = rotate;
 2694              		.loc 1 560 38 is_stmt 0 view .LVU873
 2695 083c 3749     		ldr	r1, .L171+20
 557:boards/TMC2225_eval.c **** 	Evalboards.ch2.config->configIndex  = 0;
 2696              		.loc 1 557 38 view .LVU874
 2697 083e 1680     		strh	r6, [r2]	@ movhi
 2698              		.loc 1 560 2 is_stmt 1 view .LVU875
 2699              		.loc 1 560 38 is_stmt 0 view .LVU876
 2700 0840 C3F89C10 		str	r1, [r3, #156]
 561:boards/TMC2225_eval.c **** 	Evalboards.ch2.right                = right;
 2701              		.loc 1 561 2 is_stmt 1 view .LVU877
 2702              		.loc 1 561 38 is_stmt 0 view .LVU878
 2703 0844 3649     		ldr	r1, .L171+24
 2704 0846 C3F89810 		str	r1, [r3, #152]
 562:boards/TMC2225_eval.c **** 	Evalboards.ch2.left                 = left;
 2705              		.loc 1 562 2 is_stmt 1 view .LVU879
 2706              		.loc 1 562 38 is_stmt 0 view .LVU880
 2707 084a 3649     		ldr	r1, .L171+28
 2708 084c C3F89410 		str	r1, [r3, #148]
 563:boards/TMC2225_eval.c **** 	Evalboards.ch2.stop                 = stop;
 2709              		.loc 1 563 2 is_stmt 1 view .LVU881
 2710              		.loc 1 563 38 is_stmt 0 view .LVU882
 2711 0850 3549     		ldr	r1, .L171+32
 2712 0852 C3F8A010 		str	r1, [r3, #160]
 564:boards/TMC2225_eval.c **** 	Evalboards.ch2.GAP                  = GAP;
 2713              		.loc 1 564 2 is_stmt 1 view .LVU883
 2714              		.loc 1 564 38 is_stmt 0 view .LVU884
 2715 0856 3549     		ldr	r1, .L171+36
 2716 0858 C3F8B410 		str	r1, [r3, #180]
 565:boards/TMC2225_eval.c **** 	Evalboards.ch2.SAP                  = SAP;
 2717              		.loc 1 565 2 is_stmt 1 view .LVU885
 2718              		.loc 1 565 38 is_stmt 0 view .LVU886
 2719 085c 3449     		ldr	r1, .L171+40
 2720 085e C3F8B010 		str	r1, [r3, #176]
 566:boards/TMC2225_eval.c **** 	Evalboards.ch2.moveTo               = moveTo;
 2721              		.loc 1 566 2 is_stmt 1 view .LVU887
 2722              		.loc 1 566 38 is_stmt 0 view .LVU888
 2723 0862 3449     		ldr	r1, .L171+44
 2724 0864 C3F8A410 		str	r1, [r3, #164]
 567:boards/TMC2225_eval.c **** 	Evalboards.ch2.moveBy               = moveBy;
 2725              		.loc 1 567 2 is_stmt 1 view .LVU889
 2726              		.loc 1 567 38 is_stmt 0 view .LVU890
 2727 0868 3349     		ldr	r1, .L171+48
 2728 086a C3F8A810 		str	r1, [r3, #168]
 568:boards/TMC2225_eval.c **** 	Evalboards.ch2.writeRegister        = tmc2225_writeRegister;
 2729              		.loc 1 568 2 is_stmt 1 view .LVU891
 2730              		.loc 1 568 38 is_stmt 0 view .LVU892
 2731 086e 3349     		ldr	r1, .L171+52
 2732 0870 C3F8C410 		str	r1, [r3, #196]
 569:boards/TMC2225_eval.c **** 	Evalboards.ch2.readRegister         = tmc2225_readRegister;
 2733              		.loc 1 569 2 is_stmt 1 view .LVU893
 2734              		.loc 1 569 38 is_stmt 0 view .LVU894
 2735 0874 3249     		ldr	r1, .L171+56
 2736 0876 C3F8C010 		str	r1, [r3, #192]
 570:boards/TMC2225_eval.c **** 	Evalboards.ch2.userFunction         = userFunction;
 2737              		.loc 1 570 2 is_stmt 1 view .LVU895
 2738              		.loc 1 570 38 is_stmt 0 view .LVU896
 2739 087a 3249     		ldr	r1, .L171+60
 2740 087c C3F8CC10 		str	r1, [r3, #204]
 571:boards/TMC2225_eval.c **** 	Evalboards.ch2.enableDriver         = enableDriver;
 2741              		.loc 1 571 2 is_stmt 1 view .LVU897
 2742              		.loc 1 571 38 is_stmt 0 view .LVU898
 2743 0880 3149     		ldr	r1, .L171+64
 2744 0882 C3F8DC10 		str	r1, [r3, #220]
 572:boards/TMC2225_eval.c **** 	Evalboards.ch2.checkErrors          = checkErrors;
 2745              		.loc 1 572 2 is_stmt 1 view .LVU899
 2746              		.loc 1 572 38 is_stmt 0 view .LVU900
 2747 0886 3149     		ldr	r1, .L171+68
 2748 0888 C3F8D810 		str	r1, [r3, #216]
 573:boards/TMC2225_eval.c **** 	Evalboards.ch2.numberOfMotors       = MOTORS;
 2749              		.loc 1 573 2 is_stmt 1 view .LVU901
 574:boards/TMC2225_eval.c **** 	Evalboards.ch2.VMMin                = VM_MIN;
 575:boards/TMC2225_eval.c **** 	Evalboards.ch2.VMMax                = VM_MAX;
 2750              		.loc 1 575 38 is_stmt 0 view .LVU902
 2751 088c 3220     		movs	r0, #50
 2752 088e 4FF4C371 		mov	r1, #390
 2753 0892 C3E92110 		strd	r1, r0, [r3, #132]
 576:boards/TMC2225_eval.c **** 	Evalboards.ch2.deInit               = deInit;
 2754              		.loc 1 576 38 view .LVU903
 2755 0896 2E49     		ldr	r1, .L171+72
 2756 0898 C3F8D410 		str	r1, [r3, #212]
 577:boards/TMC2225_eval.c **** 	Evalboards.ch2.periodicJob          = periodicJob;
 2757              		.loc 1 577 38 view .LVU904
 2758 089c 2D49     		ldr	r1, .L171+76
 573:boards/TMC2225_eval.c **** 	Evalboards.ch2.VMMin                = VM_MIN;
 2759              		.loc 1 573 38 view .LVU905
 2760 089e 83F88C60 		strb	r6, [r3, #140]
 574:boards/TMC2225_eval.c **** 	Evalboards.ch2.VMMax                = VM_MAX;
 2761              		.loc 1 574 2 is_stmt 1 view .LVU906
 576:boards/TMC2225_eval.c **** 	Evalboards.ch2.periodicJob          = periodicJob;
 2762              		.loc 1 576 2 view .LVU907
 2763              		.loc 1 577 2 view .LVU908
 2764              		.loc 1 577 38 is_stmt 0 view .LVU909
 2765 08a2 C3F8D010 		str	r1, [r3, #208]
 578:boards/TMC2225_eval.c **** 
 579:boards/TMC2225_eval.c **** 	tmc2225_init(&TMC2225, 0, TMC2225_config, &tmc2225_defaultRegisterResetState[0]);
 2766              		.loc 1 579 2 is_stmt 1 view .LVU910
 2767 08a6 2046     		mov	r0, r4
 2768 08a8 2B4B     		ldr	r3, .L171+80
 2769 08aa 0021     		movs	r1, #0
 2770 08ac FFF7FEFF 		bl	tmc2225_init
 2771              	.LVL309:
 580:boards/TMC2225_eval.c **** 
 581:boards/TMC2225_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 2772              		.loc 1 581 2 view .LVU911
 2773 08b0 4FF40030 		mov	r0, #131072
 2774 08b4 FFF7FEFF 		bl	StepDir_init
 2775              	.LVL310:
 582:boards/TMC2225_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, NULL);
 2776              		.loc 1 582 2 view .LVU912
 2777 08b8 0023     		movs	r3, #0
 2778 08ba D4E9A312 		ldrd	r1, r2, [r4, #652]
 2779 08be 1846     		mov	r0, r3
 2780 08c0 FFF7FEFF 		bl	StepDir_setPins
 2781              	.LVL311:
 583:boards/TMC2225_eval.c **** 	StepDir_setVelocityMax(0, 51200);
 2782              		.loc 1 583 2 view .LVU913
 2783 08c4 4FF44841 		mov	r1, #51200
 2784 08c8 0020     		movs	r0, #0
 2785 08ca FFF7FEFF 		bl	StepDir_setVelocityMax
 2786              	.LVL312:
 584:boards/TMC2225_eval.c **** 	StepDir_setAcceleration(0, 51200);
 2787              		.loc 1 584 2 view .LVU914
 2788 08ce 4FF44841 		mov	r1, #51200
 2789 08d2 0020     		movs	r0, #0
 2790 08d4 FFF7FEFF 		bl	StepDir_setAcceleration
 2791              	.LVL313:
 585:boards/TMC2225_eval.c **** 
 586:boards/TMC2225_eval.c **** #if defined(Startrampe)
 587:boards/TMC2225_eval.c **** 	Pins.UC_PWM->configuration.GPIO_Mode = GPIO_Mode_AF;
 588:boards/TMC2225_eval.c **** 	GPIO_PinAFConfig(Pins.UC_PWM->port, Pins.UC_PWM->bit, GPIO_AF_TIM1);
 589:boards/TMC2225_eval.c **** #elif defined(Landungsbruecke)
 590:boards/TMC2225_eval.c **** 	HAL.IOs->config->toOutput(Pins.UC_PWM);
 2792              		.loc 1 590 2 view .LVU915
 2793              		.loc 1 590 17 is_stmt 0 view .LVU916
 2794 08d8 2B68     		ldr	r3, [r5]
 2795              		.loc 1 590 2 view .LVU917
 2796 08da D4F8A402 		ldr	r0, [r4, #676]
 2797 08de DB68     		ldr	r3, [r3, #12]
 2798 08e0 9847     		blx	r3
 2799              	.LVL314:
 591:boards/TMC2225_eval.c **** 	Pins.UC_PWM->configuration.GPIO_Mode = GPIO_Mode_AF4;
 2800              		.loc 1 591 2 is_stmt 1 view .LVU918
 2801              		.loc 1 591 6 is_stmt 0 view .LVU919
 2802 08e2 D4F8A402 		ldr	r0, [r4, #676]
 592:boards/TMC2225_eval.c **** #endif
 593:boards/TMC2225_eval.c **** 
 594:boards/TMC2225_eval.c **** 	// Initial PWM for VREF scaling: 75% duty cycle
 595:boards/TMC2225_eval.c **** 	HAL.IOs->config->set(Pins.UC_PWM);
 596:boards/TMC2225_eval.c **** 	Timer.init();
 2803              		.loc 1 596 7 view .LVU920
 2804 08e6 1D4C     		ldr	r4, .L171+84
 591:boards/TMC2225_eval.c **** 	Pins.UC_PWM->configuration.GPIO_Mode = GPIO_Mode_AF4;
 2805              		.loc 1 591 39 view .LVU921
 2806 08e8 0423     		movs	r3, #4
 2807 08ea 4375     		strb	r3, [r0, #21]
 595:boards/TMC2225_eval.c **** 	Timer.init();
 2808              		.loc 1 595 2 is_stmt 1 view .LVU922
 595:boards/TMC2225_eval.c **** 	Timer.init();
 2809              		.loc 1 595 17 is_stmt 0 view .LVU923
 2810 08ec 2B68     		ldr	r3, [r5]
 595:boards/TMC2225_eval.c **** 	Timer.init();
 2811              		.loc 1 595 2 view .LVU924
 2812 08ee 1B68     		ldr	r3, [r3]
 2813 08f0 9847     		blx	r3
 2814              	.LVL315:
 2815              		.loc 1 596 2 is_stmt 1 view .LVU925
 2816 08f2 2368     		ldr	r3, [r4]
 2817 08f4 9847     		blx	r3
 2818              	.LVL316:
 597:boards/TMC2225_eval.c **** 	Timer.setDuty(TIMER_CHANNEL_3, 75*TIMER_MAX / 100);
 2819              		.loc 1 597 2 view .LVU926
 2820 08f6 A368     		ldr	r3, [r4, #8]
 2821 08f8 0220     		movs	r0, #2
 2822 08fa 41F27071 		movw	r1, #6000
 2823 08fe 9847     		blx	r3
 2824              	.LVL317:
 598:boards/TMC2225_eval.c **** 
 599:boards/TMC2225_eval.c **** 	enableDriver(DRIVER_ENABLE);
 2825              		.loc 1 599 2 view .LVU927
 2826 0900 3046     		mov	r0, r6
 600:boards/TMC2225_eval.c **** };
 2827              		.loc 1 600 1 is_stmt 0 view .LVU928
 2828 0902 BDE87040 		pop	{r4, r5, r6, lr}
 2829              	.LCFI15:
 2830              		.cfi_restore 14
 2831              		.cfi_restore 6
 2832              		.cfi_restore 5
 2833              		.cfi_restore 4
 2834              		.cfi_def_cfa_offset 0
 599:boards/TMC2225_eval.c **** };
 2835              		.loc 1 599 2 view .LVU929
 2836 0906 9BE6     		b	enableDriver
 2837              	.LVL318:
 2838              	.L172:
 2839              		.align	2
 2840              	.L171:
 2841 0908 00000000 		.word	HAL
 2842 090c 00000000 		.word	.LANCHOR0
 2843 0910 00000000 		.word	Evalboards
 2844 0914 00000000 		.word	reset
 2845 0918 00000000 		.word	restore
 2846 091c 00000000 		.word	rotate
 2847 0920 00000000 		.word	right
 2848 0924 00000000 		.word	left
 2849 0928 00000000 		.word	stop
 2850 092c 00000000 		.word	GAP
 2851 0930 00000000 		.word	SAP
 2852 0934 00000000 		.word	moveTo
 2853 0938 00000000 		.word	moveBy
 2854 093c 00000000 		.word	tmc2225_writeRegister
 2855 0940 00000000 		.word	tmc2225_readRegister
 2856 0944 00000000 		.word	userFunction
 2857 0948 00000000 		.word	enableDriver
 2858 094c 00000000 		.word	checkErrors
 2859 0950 00000000 		.word	deInit
 2860 0954 00000000 		.word	periodicJob
 2861 0958 00000000 		.word	.LANCHOR1
 2862 095c 00000000 		.word	Timer
 2863              		.cfi_endproc
 2864              	.LFE23:
 2866              		.comm	TMCMotionController,532,4
 2867              		.comm	TMCDriver,532,4
 2868              		.comm	Evalboards,244,4
 2869              		.comm	VitalSignsMonitor,20,4
 2870              		.comm	hwid,1,1
 2871              		.comm	HAL,48,4
 2872              		.comm	UART,40,4
 2873              		.comm	Timer,16,4
 2874              		.comm	WLAN,36,4
 2875              		.comm	RS232,36,4
 2876              		.comm	LEDs,28,4
 2877              		.comm	USB,36,4
 2878              		.comm	uart0_interrupt,1,1
 2879              		.comm	ADCs,32,4
 2880              		.comm	SPI,44,4
 2881              		.comm	IOMap,2088,4
 2882              		.comm	IOs,52,4
 2883              		.comm	Cpu,8,4
 2884              		.section	.rodata
 2885              		.align	2
 2886              		.set	.LANCHOR1,. + 0
 2889              	tmc2225_defaultRegisterResetState:
 2890 0000 C1000000 		.word	193
 2891 0004 00000000 		.word	0
 2892 0008 00000000 		.word	0
 2893 000c 00000000 		.word	0
 2894 0010 00000000 		.word	0
 2895 0014 00000000 		.word	0
 2896 0018 00000000 		.word	0
 2897 001c 00000000 		.word	0
 2898 0020 00000000 		.word	0
 2899 0024 00000000 		.word	0
 2900 0028 00000000 		.word	0
 2901 002c 00000000 		.word	0
 2902 0030 00000000 		.word	0
 2903 0034 00000000 		.word	0
 2904 0038 00000000 		.word	0
 2905 003c 00000000 		.word	0
 2906 0040 03170700 		.word	464643
 2907 0044 14000000 		.word	20
 2908 0048 00000000 		.word	0
 2909 004c 00000000 		.word	0
 2910 0050 00000000 		.word	0
 2911 0054 00000000 		.word	0
 2912 0058 00000000 		.word	0
 2913 005c 00000000 		.word	0
 2914 0060 00000000 		.word	0
 2915 0064 00000000 		.word	0
 2916 0068 00000000 		.word	0
 2917 006c 00000000 		.word	0
 2918 0070 00000000 		.word	0
 2919 0074 00000000 		.word	0
 2920 0078 00000000 		.word	0
 2921 007c 00000000 		.word	0
 2922 0080 00000000 		.word	0
 2923 0084 00000000 		.word	0
 2924 0088 00000000 		.word	0
 2925 008c 00000000 		.word	0
 2926 0090 00000000 		.word	0
 2927 0094 00000000 		.word	0
 2928 0098 00000000 		.word	0
 2929 009c 00000000 		.word	0
 2930 00a0 00000000 		.word	0
 2931 00a4 00000000 		.word	0
 2932 00a8 00000000 		.word	0
 2933 00ac 00000000 		.word	0
 2934 00b0 00000000 		.word	0
 2935 00b4 00000000 		.word	0
 2936 00b8 00000000 		.word	0
 2937 00bc 00000000 		.word	0
 2938 00c0 00000000 		.word	0
 2939 00c4 00000000 		.word	0
 2940 00c8 00000000 		.word	0
 2941 00cc 00000000 		.word	0
 2942 00d0 00000000 		.word	0
 2943 00d4 00000000 		.word	0
 2944 00d8 00000000 		.word	0
 2945 00dc 00000000 		.word	0
 2946 00e0 00000000 		.word	0
 2947 00e4 00000000 		.word	0
 2948 00e8 00000000 		.word	0
 2949 00ec 00000000 		.word	0
 2950 00f0 00000000 		.word	0
 2951 00f4 00000000 		.word	0
 2952 00f8 00000000 		.word	0
 2953 00fc 00000000 		.word	0
 2954 0100 00000000 		.word	0
 2955 0104 00000000 		.word	0
 2956 0108 00000000 		.word	0
 2957 010c 00000000 		.word	0
 2958 0110 00000000 		.word	0
 2959 0114 00000000 		.word	0
 2960 0118 00000000 		.word	0
 2961 011c 00000000 		.word	0
 2962 0120 00000000 		.word	0
 2963 0124 00000000 		.word	0
 2964 0128 00000000 		.word	0
 2965 012c 00000000 		.word	0
 2966 0130 00000000 		.word	0
 2967 0134 00000000 		.word	0
 2968 0138 00000000 		.word	0
 2969 013c 00000000 		.word	0
 2970 0140 00000000 		.word	0
 2971 0144 00000000 		.word	0
 2972 0148 00000000 		.word	0
 2973 014c 00000000 		.word	0
 2974 0150 00000000 		.word	0
 2975 0154 00000000 		.word	0
 2976 0158 00000000 		.word	0
 2977 015c 00000000 		.word	0
 2978 0160 00000000 		.word	0
 2979 0164 00000000 		.word	0
 2980 0168 00000000 		.word	0
 2981 016c 00000000 		.word	0
 2982 0170 00000000 		.word	0
 2983 0174 00000000 		.word	0
 2984 0178 00000000 		.word	0
 2985 017c 00000000 		.word	0
 2986 0180 00000000 		.word	0
 2987 0184 00000000 		.word	0
 2988 0188 00000000 		.word	0
 2989 018c 00000000 		.word	0
 2990 0190 00000000 		.word	0
 2991 0194 00000000 		.word	0
 2992 0198 00000000 		.word	0
 2993 019c 00000000 		.word	0
 2994 01a0 00000000 		.word	0
 2995 01a4 00000000 		.word	0
 2996 01a8 00000000 		.word	0
 2997 01ac 00000000 		.word	0
 2998 01b0 53000010 		.word	268435539
 2999 01b4 00000000 		.word	0
 3000 01b8 00000000 		.word	0
 3001 01bc 00000000 		.word	0
 3002 01c0 24000DC0 		.word	-1072889820
 3003 01c4 00000000 		.word	0
 3004 01c8 00000000 		.word	0
 3005 01cc 00000000 		.word	0
 3006 01d0 00000000 		.word	0
 3007 01d4 00000000 		.word	0
 3008 01d8 00000000 		.word	0
 3009 01dc 00000000 		.word	0
 3010 01e0 00000000 		.word	0
 3011 01e4 00000000 		.word	0
 3012 01e8 00000000 		.word	0
 3013 01ec 00000000 		.word	0
 3014 01f0 00000000 		.word	0
 3015 01f4 00000000 		.word	0
 3016 01f8 00000000 		.word	0
 3017 01fc 00000000 		.word	0
 3018              		.bss
 3019              		.align	2
 3020              		.set	.LANCHOR0,. + 0
 3023              	TMC2225:
 3024 0000 00000000 		.space	648
 3024      00000000 
 3024      00000000 
 3024      00000000 
 3024      00000000 
 3027              	Pins:
 3028 0288 00000000 		.space	32
 3028      00000000 
 3028      00000000 
 3028      00000000 
 3028      00000000 
 3031              	TMC2225_UARTChannel:
 3032 02a8 00000000 		.space	4
 3035              	ADCValue:
 3036 02ac 00000000 		.space	12
 3036      00000000 
 3036      00000000 
 3037              		.text
 3038              	.Letext0:
 3039              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 3040              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3041              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3042              		.file 5 "TMC-API/tmc/helpers/Types.h"
 3043              		.file 6 "TMC-API/tmc/helpers/Config.h"
 3044              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3045              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3046              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3047              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 3048              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 3049              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 3050              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 3051              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 3052              		.file 15 "./hal/IOs.h"
 3053              		.file 16 "./hal/IOMap.h"
 3054              		.file 17 "./hal/SPI.h"
 3055              		.file 18 "./hal/ADCs.h"
 3056              		.file 19 "./hal/RXTX.h"
 3057              		.file 20 "./hal/USB.h"
 3058              		.file 21 "./hal/LEDs.h"
 3059              		.file 22 "./hal/RS232.h"
 3060              		.file 23 "./hal/WLAN.h"
 3061              		.file 24 "./hal/Timer.h"
 3062              		.file 25 "./hal/UART.h"
 3063              		.file 26 "./hal/HAL.h"
 3064              		.file 27 "./tmc/VitalSignsMonitor.h"
 3065              		.file 28 "boards/Board.h"
 3066              		.file 29 "boards/TMCDriver.h"
 3067              		.file 30 "boards/TMCMotionController.h"
 3068              		.file 31 "TMC-API/tmc/ic/TMC2225/TMC2225.h"
 3069              		.file 32 "TMC-API/tmc/helpers/CRC.h"
 3070              		.file 33 "./tmc/StepDir.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC2225_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:22     .text:00000000 checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:42     .text:0000000c $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:46     .text:00000010 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:53     .text:00000010 tmc2225_writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:79     .text:00000018 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:83     .text:0000001c $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:90     .text:0000001c tmc2225_readRegister
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:128    .text:0000002c $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:132    .text:00000030 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:138    .text:00000030 periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:182    .text:00000044 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:187    .text:00000048 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:193    .text:00000048 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:235    .text:0000005a rotate
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:277    .text:0000006c stop
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:300    .text:00000070 left
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:325    .text:00000074 right
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:349    .text:00000076 handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:399    .text:000000ac $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:429    .text:00000124 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:446    .text:00000138 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:477    .text:000001b4 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:986    .text:00000346 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:994    .text:0000034e $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1389   .text:00000468 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1408   .text:0000046c $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1888   .text:000005e8 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1893   .text:000005f0 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1899   .text:000005f0 SAP
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1939   .text:00000604 GAP
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1969   .text:0000060c restore
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1984   .text:00000614 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1988   .text:00000618 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:1994   .text:00000618 reset
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2035   .text:0000063c $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2039   .text:00000640 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2045   .text:00000640 enableDriver
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2121   .text:00000678 $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2127   .text:00000684 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2133   .text:00000684 deInit
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2230   .text:000006e0 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2235   .text:000006e8 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2241   .text:000006e8 userFunction
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2262   .text:000006f4 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2391   .text:00000748 $d
                            *COM*:00000010 Timer
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2396   .text:00000750 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2402   .text:00000750 moveBy
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2474   .text:00000770 tmc2225_readWriteArray
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2505   .text:0000077c $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2509   .text:00000780 $t
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2516   .text:00000780 tmc2225_CRC8
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2540   .text:00000786 TMC2225_init
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2841   .text:00000908 $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2885   .rodata:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2889   .rodata:00000000 tmc2225_defaultRegisterResetState
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:3019   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:3023   .bss:00000000 TMC2225
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:3027   .bss:00000288 Pins
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:3031   .bss:000002a8 TMC2225_UARTChannel
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:3035   .bss:000002ac ADCValue
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2267   .text:000006f9 $d
C:\Users\Shubham\AppData\Local\Temp\ccS7hpVp.s:2267   .text:000006fa $t

UNDEFINED SYMBOLS
tmc2225_writeInt
tmc2225_readInt
tmc2225_periodicJob
StepDir_periodicJob
StepDir_moveTo
StepDir_rotate
__aeabi_uldivmod
__aeabi_ldivmod
StepDir_getTargetPosition
StepDir_getActualPosition
StepDir_setActualPosition
StepDir_getTargetVelocity
StepDir_getActualVelocity
StepDir_getVelocityMax
StepDir_setVelocityMax
StepDir_getAcceleration
StepDir_setAcceleration
StepDir_getStatus
StepDir_getFrequency
StepDir_getMode
StepDir_setMode
StepDir_setFrequency
StepDir_getStallGuardThreshold
StepDir_setStallGuardThreshold
tmc2225_restore
StepDir_init
StepDir_setPins
tmc2225_reset
StepDir_deInit
tmc2225_set_slave
tmc2225_get_slave
UART_readWrite
tmc_CRC8
tmc_fillCRC8Table
tmc2225_init
