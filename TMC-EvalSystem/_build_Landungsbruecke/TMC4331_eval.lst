   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC4331_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	checkErrors:
  23              	.LVL0:
  24              	.LFB18:
  25              		.file 1 "boards/TMC4331_eval.c"
   1:boards/TMC4331_eval.c **** #include "Board.h"
   2:boards/TMC4331_eval.c **** #include "tmc/BoardAssignment.h"
   3:boards/TMC4331_eval.c **** #include "tmc/ic/TMC4331/TMC4331.h"
   4:boards/TMC4331_eval.c **** #include "tmc/ic/TMC2660/TMC2660_Macros.h"
   5:boards/TMC4331_eval.c **** #include "tmc/ic/TMC2130/TMC2130.h"
   6:boards/TMC4331_eval.c **** #include "tmc/ic/TMC2160/TMC2160.h"
   7:boards/TMC4331_eval.c **** 
   8:boards/TMC4331_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
   9:boards/TMC4331_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
  10:boards/TMC4331_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
  11:boards/TMC4331_eval.c **** static uint32_t stop(uint8_t motor);
  12:boards/TMC4331_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  13:boards/TMC4331_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  14:boards/TMC4331_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  15:boards/TMC4331_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  16:boards/TMC4331_eval.c **** 
  17:boards/TMC4331_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value);
  18:boards/TMC4331_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value);
  19:boards/TMC4331_eval.c **** 
  20:boards/TMC4331_eval.c **** static void periodicJob(uint32_t tick);
  21:boards/TMC4331_eval.c **** static void checkErrors(uint32_t tick);
  22:boards/TMC4331_eval.c **** static void deInit(void);
  23:boards/TMC4331_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  24:boards/TMC4331_eval.c **** static uint8_t reset();
  25:boards/TMC4331_eval.c **** static uint8_t restore();
  26:boards/TMC4331_eval.c **** 
  27:boards/TMC4331_eval.c **** typedef struct
  28:boards/TMC4331_eval.c **** {
  29:boards/TMC4331_eval.c **** 	IOPinTypeDef  *TARGET_REACHED;
  30:boards/TMC4331_eval.c **** 	IOPinTypeDef  *NRST;
  31:boards/TMC4331_eval.c **** 	IOPinTypeDef  *FREEZE;
  32:boards/TMC4331_eval.c **** 	IOPinTypeDef  *START;
  33:boards/TMC4331_eval.c **** 	IOPinTypeDef  *HOME_REF;
  34:boards/TMC4331_eval.c **** 	IOPinTypeDef  *STOP_R;
  35:boards/TMC4331_eval.c **** 	IOPinTypeDef  *STOP_L;
  36:boards/TMC4331_eval.c **** 	IOPinTypeDef  *INTR;
  37:boards/TMC4331_eval.c **** 	IOPinTypeDef  *STANDBY_CLK;
  38:boards/TMC4331_eval.c **** } PinsTypeDef;
  39:boards/TMC4331_eval.c **** 
  40:boards/TMC4331_eval.c **** static PinsTypeDef Pins;
  41:boards/TMC4331_eval.c **** 
  42:boards/TMC4331_eval.c **** static SPIChannelTypeDef *TMC4331_SPIChannel;
  43:boards/TMC4331_eval.c **** static TMC4331TypeDef TMC4331;
  44:boards/TMC4331_eval.c **** 
  45:boards/TMC4331_eval.c **** static uint32_t vmax_position = 0;
  46:boards/TMC4331_eval.c **** 
  47:boards/TMC4331_eval.c **** // Translate motor number to TMC4331TypeDef
  48:boards/TMC4331_eval.c **** // When using multiple ICs you can map them here
  49:boards/TMC4331_eval.c **** static inline TMC4331TypeDef *motorToIC(uint8_t motor)
  50:boards/TMC4331_eval.c **** {
  51:boards/TMC4331_eval.c **** 	UNUSED(motor);
  52:boards/TMC4331_eval.c **** 
  53:boards/TMC4331_eval.c **** 	return &TMC4331;
  54:boards/TMC4331_eval.c **** }
  55:boards/TMC4331_eval.c **** 
  56:boards/TMC4331_eval.c **** // Translate channel number to SPI channel
  57:boards/TMC4331_eval.c **** // When using multiple ICs you can map them here
  58:boards/TMC4331_eval.c **** static inline SPIChannelTypeDef *channelToSPI(uint8_t channel)
  59:boards/TMC4331_eval.c **** {
  60:boards/TMC4331_eval.c **** 	UNUSED(channel);
  61:boards/TMC4331_eval.c **** 
  62:boards/TMC4331_eval.c **** 	return TMC4331_SPIChannel;
  63:boards/TMC4331_eval.c **** }
  64:boards/TMC4331_eval.c **** 
  65:boards/TMC4331_eval.c **** // => SPI Wrapper
  66:boards/TMC4331_eval.c **** void tmc4331_readWriteArray(uint8_t channel, uint8_t *data, size_t length)
  67:boards/TMC4331_eval.c **** {
  68:boards/TMC4331_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
  69:boards/TMC4331_eval.c **** }
  70:boards/TMC4331_eval.c **** // <= SPI Wrapper
  71:boards/TMC4331_eval.c **** 
  72:boards/TMC4331_eval.c **** // Route the generic cover function to the TMC4331 function
  73:boards/TMC4331_eval.c **** // This also provides the TMC4331TypeDef, which the generic
  74:boards/TMC4331_eval.c **** // cover function doesn't know.
  75:boards/TMC4331_eval.c **** static void tmc4331_fullCover(uint8_t *data, size_t length)
  76:boards/TMC4331_eval.c **** {
  77:boards/TMC4331_eval.c **** 	tmc4331_readWriteCover(&TMC4331, data, length);
  78:boards/TMC4331_eval.c **** }
  79:boards/TMC4331_eval.c **** 
  80:boards/TMC4331_eval.c **** // The cover function emulates the SPI readWrite function
  81:boards/TMC4331_eval.c **** static uint8_t tmc4331_cover(uint8_t data, uint8_t lastTransfer)
  82:boards/TMC4331_eval.c **** {
  83:boards/TMC4331_eval.c **** 	static uint64_t coverIn = 0;     // read from squirrel
  84:boards/TMC4331_eval.c **** 	static uint64_t coverOut = 0;    // write to squirrel
  85:boards/TMC4331_eval.c **** 	static uint8_t coverLength = 0;  // data to be written
  86:boards/TMC4331_eval.c **** 
  87:boards/TMC4331_eval.c **** 	uint8_t out = 0; // return value of this function
  88:boards/TMC4331_eval.c **** 
  89:boards/TMC4331_eval.c **** 	// buffer outgoing data
  90:boards/TMC4331_eval.c **** 	coverOut <<= 8;    // shift left by one byte to make room for the next byte
  91:boards/TMC4331_eval.c **** 	coverOut |= data;  // add new byte to be written
  92:boards/TMC4331_eval.c **** 	coverLength++;     // count outgoing bytes
  93:boards/TMC4331_eval.c **** 
  94:boards/TMC4331_eval.c **** 	// return read and buffered byte to be returned
  95:boards/TMC4331_eval.c **** 	out = coverIn >> 56;  // output last received byte
  96:boards/TMC4331_eval.c **** 	coverIn <<= 8;        // shift by one byte to read this next time
  97:boards/TMC4331_eval.c **** 
  98:boards/TMC4331_eval.c **** 	if(lastTransfer)
  99:boards/TMC4331_eval.c **** 	{
 100:boards/TMC4331_eval.c **** 		/* Write data to cover register(s). The lower 4 bytes go into the cover low register,
 101:boards/TMC4331_eval.c **** 		 * the higher 4 bytes, if present, go into the cover high register.
 102:boards/TMC4331_eval.c **** 		 * The datagram needs to be sent twice, otherwise the read buffer will be delayed by
 103:boards/TMC4331_eval.c **** 		 * one read/write datagram.
 104:boards/TMC4331_eval.c **** 		 */
 105:boards/TMC4331_eval.c **** 
 106:boards/TMC4331_eval.c **** 		// Send the buffered datagram & wait a bit before continuing so the 4361 can complete the datagra
 107:boards/TMC4331_eval.c **** 		// measured delay between COVER_LOW transmission and COVER_DONE flag: ~90Âµs -> 1 ms more than en
 108:boards/TMC4331_eval.c **** 		// todo CHECK 3: Delay measurement only done on TMC4361, not 4361A - make sure the required delay
 109:boards/TMC4331_eval.c **** 		if(coverLength > 4)
 110:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331, TMC4331_COVER_HIGH_WR, coverOut >> 32);
 111:boards/TMC4331_eval.c **** 		tmc4331_writeInt(&TMC4331, TMC4331_COVER_LOW_WR, coverOut & 0xFFFFFFFF);
 112:boards/TMC4331_eval.c **** 		wait(1);
 113:boards/TMC4331_eval.c **** 
 114:boards/TMC4331_eval.c **** 		// Trigger a re-send by writing the low register again
 115:boards/TMC4331_eval.c **** 		tmc4331_writeInt(&TMC4331, TMC4331_COVER_LOW_WR, coverOut & 0xFFFFFFFF);
 116:boards/TMC4331_eval.c **** 
 117:boards/TMC4331_eval.c **** 		// Read the reply
 118:boards/TMC4331_eval.c **** 		coverIn = 0;
 119:boards/TMC4331_eval.c **** 		if(coverLength > 4)
 120:boards/TMC4331_eval.c **** 			coverIn |= (uint64_t) tmc4331_readInt(&TMC4331, TMC4331_COVER_DRV_HIGH_RD) << 32;
 121:boards/TMC4331_eval.c **** 		coverIn |= tmc4331_readInt(&TMC4331, TMC4331_COVER_DRV_LOW_RD);
 122:boards/TMC4331_eval.c **** 		coverIn <<= (8-coverLength) * 8; // Shift the highest byte of the reply to the highest byte of th
 123:boards/TMC4331_eval.c **** 
 124:boards/TMC4331_eval.c **** 		// Clear write buffer
 125:boards/TMC4331_eval.c **** 		coverOut = 0;
 126:boards/TMC4331_eval.c **** 		coverLength=0;
 127:boards/TMC4331_eval.c **** 	}
 128:boards/TMC4331_eval.c **** 
 129:boards/TMC4331_eval.c **** 	return out; // return buffered read byte
 130:boards/TMC4331_eval.c **** }
 131:boards/TMC4331_eval.c **** 
 132:boards/TMC4331_eval.c **** // => Functions forwarded to API
 133:boards/TMC4331_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
 134:boards/TMC4331_eval.c **** {
 135:boards/TMC4331_eval.c **** 	UNUSED(motor);
 136:boards/TMC4331_eval.c **** 	tmc4331_rotate(motorToIC(motor), velocity);
 137:boards/TMC4331_eval.c **** 
 138:boards/TMC4331_eval.c **** 	return 0;
 139:boards/TMC4331_eval.c **** }
 140:boards/TMC4331_eval.c **** 
 141:boards/TMC4331_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
 142:boards/TMC4331_eval.c **** {
 143:boards/TMC4331_eval.c **** 	rotate(motor, velocity);
 144:boards/TMC4331_eval.c **** 
 145:boards/TMC4331_eval.c **** 	return 0;
 146:boards/TMC4331_eval.c **** }
 147:boards/TMC4331_eval.c **** 
 148:boards/TMC4331_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
 149:boards/TMC4331_eval.c **** {
 150:boards/TMC4331_eval.c **** 	rotate(motor, -velocity);
 151:boards/TMC4331_eval.c **** 
 152:boards/TMC4331_eval.c **** 	return 0;
 153:boards/TMC4331_eval.c **** }
 154:boards/TMC4331_eval.c **** 
 155:boards/TMC4331_eval.c **** static uint32_t stop(uint8_t motor)
 156:boards/TMC4331_eval.c **** {
 157:boards/TMC4331_eval.c **** 	rotate(motor, 0);
 158:boards/TMC4331_eval.c **** 
 159:boards/TMC4331_eval.c **** 	return 0;
 160:boards/TMC4331_eval.c **** }
 161:boards/TMC4331_eval.c **** 
 162:boards/TMC4331_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
 163:boards/TMC4331_eval.c **** {
 164:boards/TMC4331_eval.c **** 	tmc4331_moveTo(motorToIC(motor), position, vmax_position);
 165:boards/TMC4331_eval.c **** 
 166:boards/TMC4331_eval.c **** 	return 0;
 167:boards/TMC4331_eval.c **** }
 168:boards/TMC4331_eval.c **** 
 169:boards/TMC4331_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 170:boards/TMC4331_eval.c **** {
 171:boards/TMC4331_eval.c **** 	tmc4331_moveBy(motorToIC(motor), ticks, vmax_position);
 172:boards/TMC4331_eval.c **** 
 173:boards/TMC4331_eval.c **** 	return 0;
 174:boards/TMC4331_eval.c **** }
 175:boards/TMC4331_eval.c **** // <= Functions forwarded to API
 176:boards/TMC4331_eval.c **** 
 177:boards/TMC4331_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 178:boards/TMC4331_eval.c **** {
 179:boards/TMC4331_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 180:boards/TMC4331_eval.c **** 
 181:boards/TMC4331_eval.c **** 	if(motor >= TMC4331_MOTORS)
 182:boards/TMC4331_eval.c **** 		return TMC_ERROR_MOTOR;
 183:boards/TMC4331_eval.c **** 
 184:boards/TMC4331_eval.c **** 	switch(type)
 185:boards/TMC4331_eval.c **** 	{
 186:boards/TMC4331_eval.c **** 	case 0:
 187:boards/TMC4331_eval.c **** 		// Target position
 188:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 189:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_X_TARGET);
 190:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 191:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331, TMC4331_X_TARGET, *value);
 192:boards/TMC4331_eval.c **** 		}
 193:boards/TMC4331_eval.c **** 		break;
 194:boards/TMC4331_eval.c **** 	case 1:
 195:boards/TMC4331_eval.c **** 		// Actual position
 196:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 197:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_XACTUAL);
 198:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 199:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_XACTUAL, *value);
 200:boards/TMC4331_eval.c **** 		}
 201:boards/TMC4331_eval.c **** 		break;
 202:boards/TMC4331_eval.c **** 	case 2:
 203:boards/TMC4331_eval.c **** 		// Target speed
 204:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 205:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VMAX) >> 8;
 206:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 207:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VMAX, abs(*value));
 208:boards/TMC4331_eval.c **** 		}
 209:boards/TMC4331_eval.c **** 		break;
 210:boards/TMC4331_eval.c **** 	case 3:
 211:boards/TMC4331_eval.c **** 		// Actual speed
 212:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 213:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VACTUAL);
 214:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 215:boards/TMC4331_eval.c **** 			errors |= TMC_ERROR_TYPE;
 216:boards/TMC4331_eval.c **** 		}
 217:boards/TMC4331_eval.c **** 		break;
 218:boards/TMC4331_eval.c **** 	case 4:
 219:boards/TMC4331_eval.c **** 		// Maximum speed
 220:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 221:boards/TMC4331_eval.c **** 			*value = vmax_position;
 222:boards/TMC4331_eval.c **** 			//*value = tmc4331_readInt(&TMC4331, TMC4331_VMAX) >> 8;
 223:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 224:boards/TMC4331_eval.c **** 			vmax_position = *value;
 225:boards/TMC4331_eval.c **** 
 226:boards/TMC4331_eval.c **** 			if(tmc4331_readInt(motorToIC(motor), TMC4331_RAMPMODE) & TMC4331_RAMP_POSITION)
 227:boards/TMC4331_eval.c **** 				tmc4331_writeInt(motorToIC(motor), TMC4331_VMAX, tmc4331_discardVelocityDecimals(vmax_position)
 228:boards/TMC4331_eval.c **** 		}
 229:boards/TMC4331_eval.c **** 		break;
 230:boards/TMC4331_eval.c **** 	case 5:
 231:boards/TMC4331_eval.c **** 		// Maximum acceleration
 232:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 233:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_AMAX)>>2;
 234:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 235:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 236:boards/TMC4331_eval.c **** 			{
 237:boards/TMC4331_eval.c **** 				errors |= TMC_ERROR_VALUE;
 238:boards/TMC4331_eval.c **** 			}
 239:boards/TMC4331_eval.c **** 			else
 240:boards/TMC4331_eval.c **** 			{
 241:boards/TMC4331_eval.c **** 				tmc4331_writeInt(&TMC4331,  TMC4331_AMAX, *value<<2);
 242:boards/TMC4331_eval.c **** 			}
 243:boards/TMC4331_eval.c **** 		}
 244:boards/TMC4331_eval.c **** 		break;
 245:boards/TMC4331_eval.c **** 	case 8:
 246:boards/TMC4331_eval.c **** 		// Position reached flag
 247:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 248:boards/TMC4331_eval.c **** 			*value = TMC4331_FIELD_READ(&TMC4331, TMC4331_STATUS, TMC4331_TARGET_REACHED_F_MASK, TMC4331_TAR
 249:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 250:boards/TMC4331_eval.c **** 			errors |= TMC_ERROR_TYPE;
 251:boards/TMC4331_eval.c **** 		}
 252:boards/TMC4331_eval.c **** 		break;
 253:boards/TMC4331_eval.c **** 	case 14:
 254:boards/TMC4331_eval.c **** 		// Ramp type
 255:boards/TMC4331_eval.c **** 		if(readWrite == READ) { // value = true/non-zero: TMC4331_RAMP_SSHAPE, = false/zero: TMC4331_RAMP
 256:boards/TMC4331_eval.c **** 			*value = TMC4331_FIELD_READ(&TMC4331, TMC4331_RAMPMODE, TMC4331_RAMP_PROFILE_MASK, TMC4331_RAMP_
 257:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 258:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331, TMC4331_RAMPMODE, (*value) ? TMC4331_RAMP_SSHAPE : TMC4331_RAMP_TRAPE
 259:boards/TMC4331_eval.c **** 		}
 260:boards/TMC4331_eval.c **** 		break;
 261:boards/TMC4331_eval.c **** 	case 15:
 262:boards/TMC4331_eval.c **** 		// Velocity VSTART
 263:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 264:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VSTART);
 265:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 266:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VSTART, *value);
 267:boards/TMC4331_eval.c **** 		}
 268:boards/TMC4331_eval.c **** 		break;
 269:boards/TMC4331_eval.c **** 	case 16:
 270:boards/TMC4331_eval.c **** 		// Acceleration AStart
 271:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 272:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_ASTART)>>2;
 273:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 274:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 275:boards/TMC4331_eval.c **** 			{
 276:boards/TMC4331_eval.c **** 				errors |= TMC_ERROR_VALUE;
 277:boards/TMC4331_eval.c **** 			}
 278:boards/TMC4331_eval.c **** 			else
 279:boards/TMC4331_eval.c **** 			{
 280:boards/TMC4331_eval.c **** 				tmc4331_writeInt(&TMC4331,  TMC4331_ASTART, *value<<2);
 281:boards/TMC4331_eval.c **** 			}
 282:boards/TMC4331_eval.c **** 		}
 283:boards/TMC4331_eval.c **** 		break;
 284:boards/TMC4331_eval.c **** 	case 17:
 285:boards/TMC4331_eval.c **** 		// Maximum Deceleration
 286:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 287:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_DMAX)>>2;
 288:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 289:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 290:boards/TMC4331_eval.c **** 			{
 291:boards/TMC4331_eval.c **** 				errors |= TMC_ERROR_VALUE;
 292:boards/TMC4331_eval.c **** 			}
 293:boards/TMC4331_eval.c **** 			else
 294:boards/TMC4331_eval.c **** 			{
 295:boards/TMC4331_eval.c **** 				tmc4331_writeInt(&TMC4331,  TMC4331_DMAX, *value<<2);
 296:boards/TMC4331_eval.c **** 			}
 297:boards/TMC4331_eval.c **** 		}
 298:boards/TMC4331_eval.c **** 		break;
 299:boards/TMC4331_eval.c **** 	case 18:
 300:boards/TMC4331_eval.c **** 		// Velocity VBreak
 301:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 302:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VBREAK);
 303:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 304:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VBREAK, *value);
 305:boards/TMC4331_eval.c **** 		}
 306:boards/TMC4331_eval.c **** 		break;
 307:boards/TMC4331_eval.c **** 	case 19:
 308:boards/TMC4331_eval.c **** 		// Deceleration DFinal
 309:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 310:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_DFINAL)>>2;
 311:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 312:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 313:boards/TMC4331_eval.c **** 			{
 314:boards/TMC4331_eval.c **** 				errors |= TMC_ERROR_VALUE;
 315:boards/TMC4331_eval.c **** 			}
 316:boards/TMC4331_eval.c **** 			else
 317:boards/TMC4331_eval.c **** 			{
 318:boards/TMC4331_eval.c **** 				tmc4331_writeInt(&TMC4331,  TMC4331_DFINAL, *value<<2);
 319:boards/TMC4331_eval.c **** 			}
 320:boards/TMC4331_eval.c **** 		}
 321:boards/TMC4331_eval.c **** 		break;
 322:boards/TMC4331_eval.c **** 	case 20:
 323:boards/TMC4331_eval.c **** 		// Velocity VSTOP
 324:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 325:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VSTOP);
 326:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 327:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VSTOP, *value);
 328:boards/TMC4331_eval.c **** 		}
 329:boards/TMC4331_eval.c **** 		break;
 330:boards/TMC4331_eval.c **** 	case 21:
 331:boards/TMC4331_eval.c **** 		// Deceleration DStop
 332:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 333:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_DSTOP);
 334:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 335:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 336:boards/TMC4331_eval.c **** 			{
 337:boards/TMC4331_eval.c **** 				errors |= TMC_ERROR_VALUE;
 338:boards/TMC4331_eval.c **** 			}
 339:boards/TMC4331_eval.c **** 			else
 340:boards/TMC4331_eval.c **** 			{
 341:boards/TMC4331_eval.c **** 				tmc4331_writeInt(&TMC4331,  TMC4331_DSTOP, *value);
 342:boards/TMC4331_eval.c **** 			}
 343:boards/TMC4331_eval.c **** 		}
 344:boards/TMC4331_eval.c **** 		break;
 345:boards/TMC4331_eval.c **** 	case 22:
 346:boards/TMC4331_eval.c **** 		// Bow 1
 347:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 348:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW1);
 349:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 350:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_BOW1, *value);
 351:boards/TMC4331_eval.c **** 		}
 352:boards/TMC4331_eval.c **** 		break;
 353:boards/TMC4331_eval.c **** 	case 23:
 354:boards/TMC4331_eval.c **** 		// Bow 2
 355:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 356:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW2);
 357:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 358:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_BOW2, *value);
 359:boards/TMC4331_eval.c **** 		}
 360:boards/TMC4331_eval.c **** 		break;
 361:boards/TMC4331_eval.c **** 	case 24:
 362:boards/TMC4331_eval.c **** 		// Bow 3
 363:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 364:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW3);
 365:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 366:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_BOW3, *value);
 367:boards/TMC4331_eval.c **** 		}
 368:boards/TMC4331_eval.c **** 		break;
 369:boards/TMC4331_eval.c **** 	case 25:
 370:boards/TMC4331_eval.c **** 		// Bow 4
 371:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 372:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW4);
 373:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 374:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_BOW4, *value);
 375:boards/TMC4331_eval.c **** 		}
 376:boards/TMC4331_eval.c **** 		break;
 377:boards/TMC4331_eval.c **** 	case 26:
 378:boards/TMC4331_eval.c **** 		// Virtual stop left
 379:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 380:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VIRT_STOP_LEFT);
 381:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 382:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VIRT_STOP_LEFT, *value);
 383:boards/TMC4331_eval.c **** 		}
 384:boards/TMC4331_eval.c **** 		break;
 385:boards/TMC4331_eval.c **** 	case 27:
 386:boards/TMC4331_eval.c **** 		// Virtual stop right
 387:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 388:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VIRT_STOP_RIGHT);
 389:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 390:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VIRT_STOP_RIGHT, *value);
 391:boards/TMC4331_eval.c **** 		}
 392:boards/TMC4331_eval.c **** 		break;
 393:boards/TMC4331_eval.c **** 	case 214:
 394:boards/TMC4331_eval.c **** 		// Power Down Delay
 395:boards/TMC4331_eval.c **** 		if(readWrite == READ) {
 396:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_STDBY_DELAY);
 397:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 398:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_STDBY_DELAY, *value*160000);
 399:boards/TMC4331_eval.c **** 		}
 400:boards/TMC4331_eval.c **** 		break;
 401:boards/TMC4331_eval.c **** 	default:
 402:boards/TMC4331_eval.c **** 		errors |= TMC_ERROR_TYPE;
 403:boards/TMC4331_eval.c **** 		break;
 404:boards/TMC4331_eval.c **** 	}
 405:boards/TMC4331_eval.c **** 	return errors;
 406:boards/TMC4331_eval.c **** }
 407:boards/TMC4331_eval.c **** 
 408:boards/TMC4331_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 409:boards/TMC4331_eval.c **** {
 410:boards/TMC4331_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 411:boards/TMC4331_eval.c **** }
 412:boards/TMC4331_eval.c **** 
 413:boards/TMC4331_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 414:boards/TMC4331_eval.c **** {
 415:boards/TMC4331_eval.c **** 	return handleParameter(READ, motor, type, value);
 416:boards/TMC4331_eval.c **** }
 417:boards/TMC4331_eval.c **** 
 418:boards/TMC4331_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
 419:boards/TMC4331_eval.c **** {
 420:boards/TMC4331_eval.c **** 	// Notify driver shadows about register changes made via cover
 421:boards/TMC4331_eval.c **** 	static int32_t high;
 422:boards/TMC4331_eval.c **** 	switch(address) {
 423:boards/TMC4331_eval.c **** 	case TMC4331_COVER_HIGH_WR:
 424:boards/TMC4331_eval.c **** 		high = value;
 425:boards/TMC4331_eval.c **** 		break;
 426:boards/TMC4331_eval.c **** 	case TMC4331_COVER_LOW_WR:
 427:boards/TMC4331_eval.c **** 		if(Evalboards.ch2.id == ID_TMC2660) // TMC2660 -> 20 bit registers, 8 bit address
 428:boards/TMC4331_eval.c **** 			Evalboards.ch2.writeRegister(motor, TMC2660_ADDRESS(value), TMC2660_VALUE(value));
 429:boards/TMC4331_eval.c **** 		else // All other drivers -> 32 bit registers, 8 bit address
 430:boards/TMC4331_eval.c **** 			Evalboards.ch2.writeRegister(motor, TMC_ADDRESS(high), value);
 431:boards/TMC4331_eval.c **** 		break;
 432:boards/TMC4331_eval.c **** 	case TMC4331_SCALE_VALUES:
 433:boards/TMC4331_eval.c **** 		/* Only possible with IHOLD and only with TMC2130 and TMC2160, since write-only registers changed
 434:boards/TMC4331_eval.c **** 		 * the TMC43XX (not via cover datagrams) are impossible to track.
 435:boards/TMC4331_eval.c **** 		 */
 436:boards/TMC4331_eval.c **** 		switch(Evalboards.ch2.id) {
 437:boards/TMC4331_eval.c **** 		case ID_TMC2130:
 438:boards/TMC4331_eval.c **** 			TMC2130_FIELD_UPDATE((TMC2130TypeDef *)Evalboards.ch2.type, TMC2130_IHOLD_IRUN, TMC2130_IHOLD_MA
 439:boards/TMC4331_eval.c **** 			break;
 440:boards/TMC4331_eval.c **** 		case ID_TMC2160:
 441:boards/TMC4331_eval.c **** 			TMC2160_FIELD_UPDATE((TMC2160TypeDef *)Evalboards.ch2.type, TMC2160_IHOLD_IRUN, TMC2160_IHOLD_MA
 442:boards/TMC4331_eval.c **** 			break;
 443:boards/TMC4331_eval.c **** 		}
 444:boards/TMC4331_eval.c **** 		break;
 445:boards/TMC4331_eval.c **** 	}
 446:boards/TMC4331_eval.c **** 	tmc4331_writeInt(motorToIC(motor), address, value);
 447:boards/TMC4331_eval.c **** }
 448:boards/TMC4331_eval.c **** 
 449:boards/TMC4331_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
 450:boards/TMC4331_eval.c **** {
 451:boards/TMC4331_eval.c **** 	*value	= tmc4331_readInt(motorToIC(motor), address);
 452:boards/TMC4331_eval.c **** }
 453:boards/TMC4331_eval.c **** 
 454:boards/TMC4331_eval.c **** static void periodicJob(uint32_t tick)
 455:boards/TMC4331_eval.c **** {
 456:boards/TMC4331_eval.c **** 	tmc4331_periodicJob(&TMC4331, tick);
 457:boards/TMC4331_eval.c **** }
 458:boards/TMC4331_eval.c **** 
 459:boards/TMC4331_eval.c **** static void checkErrors(uint32_t tick)
 460:boards/TMC4331_eval.c **** {
  26              		.loc 1 460 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 461:boards/TMC4331_eval.c **** 	UNUSED(tick);
  31              		.loc 1 461 2 view .LVU1
 462:boards/TMC4331_eval.c **** 	Evalboards.ch1.errors = 0;
  32              		.loc 1 462 2 view .LVU2
  33              		.loc 1 462 24 is_stmt 0 view .LVU3
  34 0000 014B     		ldr	r3, .L2
  35 0002 0022     		movs	r2, #0
  36 0004 9A60     		str	r2, [r3, #8]
 463:boards/TMC4331_eval.c **** }
  37              		.loc 1 463 1 view .LVU4
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00000000 		.word	Evalboards
  43              		.cfi_endproc
  44              	.LFE18:
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu softvfp
  52              	userFunction:
  53              	.LVL1:
  54              	.LFB19:
 464:boards/TMC4331_eval.c **** 
 465:boards/TMC4331_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 466:boards/TMC4331_eval.c **** {
  55              		.loc 1 466 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
 467:boards/TMC4331_eval.c **** 	UNUSED(motor);
  59              		.loc 1 467 2 view .LVU6
 468:boards/TMC4331_eval.c **** 	uint32_t errors = 0;
  60              		.loc 1 468 2 view .LVU7
 469:boards/TMC4331_eval.c **** 
 470:boards/TMC4331_eval.c **** 	switch(type)
  61              		.loc 1 470 2 view .LVU8
  62 000c 0328     		cmp	r0, #3
 466:boards/TMC4331_eval.c **** 	UNUSED(motor);
  63              		.loc 1 466 1 is_stmt 0 view .LVU9
  64 000e 70B5     		push	{r4, r5, r6, lr}
  65              	.LCFI0:
  66              		.cfi_def_cfa_offset 16
  67              		.cfi_offset 4, -16
  68              		.cfi_offset 5, -12
  69              		.cfi_offset 6, -8
  70              		.cfi_offset 14, -4
 466:boards/TMC4331_eval.c **** 	UNUSED(motor);
  71              		.loc 1 466 1 view .LVU10
  72 0010 1446     		mov	r4, r2
  73              		.loc 1 470 2 view .LVU11
  74 0012 06D8     		bhi	.L5
  75 0014 0138     		subs	r0, r0, #1
  76              	.LVL2:
  77              		.loc 1 470 2 view .LVU12
  78 0016 0228     		cmp	r0, #2
  79 0018 08D8     		bhi	.L6
  80 001a DFE800F0 		tbb	[pc, r0]
  81              	.L8:
  82 001e 2B       		.byte	(.L10-.L8)/2
  83 001f 3A       		.byte	(.L9-.L8)/2
  84 0020 53       		.byte	(.L17-.L8)/2
  85              	.LVL3:
  86 0021 00       		.p2align 1
  87              	.L5:
  88              		.loc 1 470 2 view .LVU13
  89 0022 FF28     		cmp	r0, #255
  90 0024 43D0     		beq	.L11
  91 0026 0424     		movs	r4, #4
  92              	.LVL4:
  93              	.L4:
 471:boards/TMC4331_eval.c **** 	{
 472:boards/TMC4331_eval.c **** 	case 0:	// simulate left/right reference switches, set high to support external ref swiches
 473:boards/TMC4331_eval.c **** 		/*
 474:boards/TMC4331_eval.c **** 		 * The the TMC4361 ref switch input is pulled high by external resistor an can be pulled low eith
 475:boards/TMC4331_eval.c **** 		 * this ÂµC or external signal. To use external signal make sure the signals from ÂµC are high or
 476:boards/TMC4331_eval.c **** 		 */
 477:boards/TMC4331_eval.c **** 		if(!(*value & ~3))
 478:boards/TMC4331_eval.c **** 		{
 479:boards/TMC4331_eval.c **** 			if(*value & (1<<0))
 480:boards/TMC4331_eval.c **** 			{
 481:boards/TMC4331_eval.c **** 				HAL.IOs->config->toInput(Pins.STOP_R); // pull up -> set it to floating causes high
 482:boards/TMC4331_eval.c **** 			}
 483:boards/TMC4331_eval.c **** 			else
 484:boards/TMC4331_eval.c **** 			{
 485:boards/TMC4331_eval.c **** 				HAL.IOs->config->toOutput(Pins.STOP_R);
 486:boards/TMC4331_eval.c **** 				HAL.IOs->config->setLow(Pins.STOP_R);
 487:boards/TMC4331_eval.c **** 			}
 488:boards/TMC4331_eval.c **** 
 489:boards/TMC4331_eval.c **** 			if(*value & (1<<1))
 490:boards/TMC4331_eval.c **** 			{
 491:boards/TMC4331_eval.c **** 				HAL.IOs->config->toInput(Pins.STOP_L); // pull up -> set it to floating causes high
 492:boards/TMC4331_eval.c **** 			}
 493:boards/TMC4331_eval.c **** 			else
 494:boards/TMC4331_eval.c **** 			{
 495:boards/TMC4331_eval.c **** 				HAL.IOs->config->toOutput(Pins.STOP_L);
 496:boards/TMC4331_eval.c **** 				HAL.IOs->config->setLow(Pins.STOP_L);
 497:boards/TMC4331_eval.c **** 			}
 498:boards/TMC4331_eval.c **** 		}
 499:boards/TMC4331_eval.c **** 		//else TMCL.reply->Status = REPLY_INVALID_VALUE;
 500:boards/TMC4331_eval.c **** 		break;
 501:boards/TMC4331_eval.c **** 	case 1:	// simulate reference switche HOME_REF, set high to support external ref swiches
 502:boards/TMC4331_eval.c **** 		/*
 503:boards/TMC4331_eval.c **** 		 * The the TMC43x1 ref switch input is pulled high by external resistor an can be pulled low eith
 504:boards/TMC4331_eval.c **** 		 * this ÂµC or external signal. To use external signal make sure the signals from ÂµC are high or
 505:boards/TMC4331_eval.c **** 		 */
 506:boards/TMC4331_eval.c **** 		if(*value)
 507:boards/TMC4331_eval.c **** 		{
 508:boards/TMC4331_eval.c **** 			HAL.IOs->config->toInput(Pins.HOME_REF); // pull up -> set it to floating causes high
 509:boards/TMC4331_eval.c **** 		}
 510:boards/TMC4331_eval.c **** 		else
 511:boards/TMC4331_eval.c **** 		{
 512:boards/TMC4331_eval.c **** 			HAL.IOs->config->toOutput(Pins.HOME_REF);
 513:boards/TMC4331_eval.c **** 			HAL.IOs->config->setLow(Pins.HOME_REF);
 514:boards/TMC4331_eval.c **** 		}
 515:boards/TMC4331_eval.c **** 		break;
 516:boards/TMC4331_eval.c **** 	case 2:	// simulate reference switche FREEZE, set high to support external ref swiches
 517:boards/TMC4331_eval.c **** 		/*
 518:boards/TMC4331_eval.c **** 		 * The the TMC43x1 ref switch input is pulled high by external resistor an can be pulled low eith
 519:boards/TMC4331_eval.c **** 		 * this ÂµC or external signal. To use external signal make sure the signals from ÂµC are high or
 520:boards/TMC4331_eval.c **** 		 */
 521:boards/TMC4331_eval.c **** 
 522:boards/TMC4331_eval.c **** 		if(*value)
 523:boards/TMC4331_eval.c **** 		{
 524:boards/TMC4331_eval.c **** 			HAL.IOs->config->toInput(Pins.FREEZE); // pull up -> set it to floating causes high
 525:boards/TMC4331_eval.c **** 		}
 526:boards/TMC4331_eval.c **** 		else
 527:boards/TMC4331_eval.c **** 		{
 528:boards/TMC4331_eval.c **** 			HAL.IOs->config->toOutput(Pins.FREEZE);
 529:boards/TMC4331_eval.c **** 			HAL.IOs->config->setLow(Pins.FREEZE);
 530:boards/TMC4331_eval.c **** 		}
 531:boards/TMC4331_eval.c **** 		break;
 532:boards/TMC4331_eval.c **** 	case 3:
 533:boards/TMC4331_eval.c **** 		errors |= TMC_ERROR_NOT_DONE;
 534:boards/TMC4331_eval.c **** 		break;
 535:boards/TMC4331_eval.c **** 	case 255:
 536:boards/TMC4331_eval.c **** 		Evalboards.ch2.config->reset();
 537:boards/TMC4331_eval.c **** 		Evalboards.ch1.config->reset();
 538:boards/TMC4331_eval.c **** 		break;
 539:boards/TMC4331_eval.c **** 	default:
 540:boards/TMC4331_eval.c **** 		errors |= TMC_ERROR_TYPE;
 541:boards/TMC4331_eval.c **** 		break;
 542:boards/TMC4331_eval.c **** 	}
 543:boards/TMC4331_eval.c **** 	return errors;
 544:boards/TMC4331_eval.c **** }
  94              		.loc 1 544 1 view .LVU14
  95 0028 2046     		mov	r0, r4
  96 002a 70BD     		pop	{r4, r5, r6, pc}
  97              	.LVL5:
  98              	.L6:
 477:boards/TMC4331_eval.c **** 		{
  99              		.loc 1 477 3 is_stmt 1 view .LVU15
 477:boards/TMC4331_eval.c **** 		{
 100              		.loc 1 477 8 is_stmt 0 view .LVU16
 101 002c 1268     		ldr	r2, [r2]
 102              	.LVL6:
 477:boards/TMC4331_eval.c **** 		{
 103              		.loc 1 477 5 view .LVU17
 104 002e 32F00303 		bics	r3, r2, #3
 105 0032 10D1     		bne	.L18
 479:boards/TMC4331_eval.c **** 			{
 106              		.loc 1 479 4 is_stmt 1 view .LVU18
 107 0034 244B     		ldr	r3, .L23
 108 0036 254D     		ldr	r5, .L23+4
 109 0038 DE68     		ldr	r6, [r3, #12]
 110 003a 6869     		ldr	r0, [r5, #20]
 111 003c 3368     		ldr	r3, [r6]
 479:boards/TMC4331_eval.c **** 			{
 112              		.loc 1 479 6 is_stmt 0 view .LVU19
 113 003e D207     		lsls	r2, r2, #31
 114 0040 0BD5     		bpl	.L12
 481:boards/TMC4331_eval.c **** 			}
 115              		.loc 1 481 5 is_stmt 1 view .LVU20
 116 0042 1B69     		ldr	r3, [r3, #16]
 117              	.LVL7:
 118              	.L19:
 486:boards/TMC4331_eval.c **** 			}
 119              		.loc 1 486 5 is_stmt 0 view .LVU21
 120 0044 9847     		blx	r3
 121              	.LVL8:
 489:boards/TMC4331_eval.c **** 			{
 122              		.loc 1 489 4 is_stmt 1 view .LVU22
 489:boards/TMC4331_eval.c **** 			{
 123              		.loc 1 489 14 is_stmt 0 view .LVU23
 124 0046 2468     		ldr	r4, [r4]
 125              	.LVL9:
 489:boards/TMC4331_eval.c **** 			{
 126              		.loc 1 489 14 view .LVU24
 127 0048 3268     		ldr	r2, [r6]
 128 004a A869     		ldr	r0, [r5, #24]
 489:boards/TMC4331_eval.c **** 			{
 129              		.loc 1 489 6 view .LVU25
 130 004c 14F00204 		ands	r4, r4, #2
 131 0050 09D0     		beq	.L14
 491:boards/TMC4331_eval.c **** 			}
 132              		.loc 1 491 5 is_stmt 1 view .LVU26
 133 0052 1369     		ldr	r3, [r2, #16]
 134              	.L21:
 524:boards/TMC4331_eval.c **** 		}
 135              		.loc 1 524 4 is_stmt 0 view .LVU27
 136 0054 9847     		blx	r3
 137              	.LVL10:
 138              	.L18:
 468:boards/TMC4331_eval.c **** 
 139              		.loc 1 468 11 view .LVU28
 140 0056 0024     		movs	r4, #0
 543:boards/TMC4331_eval.c **** }
 141              		.loc 1 543 2 is_stmt 1 view .LVU29
 543:boards/TMC4331_eval.c **** }
 142              		.loc 1 543 9 is_stmt 0 view .LVU30
 143 0058 E6E7     		b	.L4
 144              	.LVL11:
 145              	.L12:
 485:boards/TMC4331_eval.c **** 				HAL.IOs->config->setLow(Pins.STOP_R);
 146              		.loc 1 485 5 is_stmt 1 view .LVU31
 147 005a DB68     		ldr	r3, [r3, #12]
 148 005c 9847     		blx	r3
 149              	.LVL12:
 486:boards/TMC4331_eval.c **** 			}
 150              		.loc 1 486 5 view .LVU32
 486:boards/TMC4331_eval.c **** 			}
 151              		.loc 1 486 20 is_stmt 0 view .LVU33
 152 005e 3368     		ldr	r3, [r6]
 486:boards/TMC4331_eval.c **** 			}
 153              		.loc 1 486 5 view .LVU34
 154 0060 6869     		ldr	r0, [r5, #20]
 155 0062 9B69     		ldr	r3, [r3, #24]
 156 0064 EEE7     		b	.L19
 157              	.LVL13:
 158              	.L14:
 495:boards/TMC4331_eval.c **** 				HAL.IOs->config->setLow(Pins.STOP_L);
 159              		.loc 1 495 5 is_stmt 1 view .LVU35
 160 0066 D368     		ldr	r3, [r2, #12]
 161 0068 9847     		blx	r3
 162              	.LVL14:
 496:boards/TMC4331_eval.c **** 			}
 163              		.loc 1 496 5 view .LVU36
 496:boards/TMC4331_eval.c **** 			}
 164              		.loc 1 496 20 is_stmt 0 view .LVU37
 165 006a 3368     		ldr	r3, [r6]
 496:boards/TMC4331_eval.c **** 			}
 166              		.loc 1 496 5 view .LVU38
 167 006c A869     		ldr	r0, [r5, #24]
 168 006e 9B69     		ldr	r3, [r3, #24]
 169              	.L20:
 529:boards/TMC4331_eval.c **** 		}
 170              		.loc 1 529 4 view .LVU39
 171 0070 9847     		blx	r3
 172              	.LVL15:
 173 0072 D9E7     		b	.L4
 174              	.LVL16:
 175              	.L10:
 506:boards/TMC4331_eval.c **** 		{
 176              		.loc 1 506 3 is_stmt 1 view .LVU40
 177 0074 144B     		ldr	r3, .L23
 178 0076 154D     		ldr	r5, .L23+4
 179 0078 DE68     		ldr	r6, [r3, #12]
 506:boards/TMC4331_eval.c **** 		{
 180              		.loc 1 506 5 is_stmt 0 view .LVU41
 181 007a 1468     		ldr	r4, [r2]
 182 007c 2869     		ldr	r0, [r5, #16]
 183 007e 3368     		ldr	r3, [r6]
 184 0080 0CB1     		cbz	r4, .L15
 185              	.L22:
 524:boards/TMC4331_eval.c **** 		}
 186              		.loc 1 524 4 is_stmt 1 view .LVU42
 187 0082 1B69     		ldr	r3, [r3, #16]
 188 0084 E6E7     		b	.L21
 189              	.L15:
 512:boards/TMC4331_eval.c **** 			HAL.IOs->config->setLow(Pins.HOME_REF);
 190              		.loc 1 512 4 view .LVU43
 191 0086 DB68     		ldr	r3, [r3, #12]
 192 0088 9847     		blx	r3
 193              	.LVL17:
 513:boards/TMC4331_eval.c **** 		}
 194              		.loc 1 513 4 view .LVU44
 513:boards/TMC4331_eval.c **** 		}
 195              		.loc 1 513 19 is_stmt 0 view .LVU45
 196 008a 3368     		ldr	r3, [r6]
 513:boards/TMC4331_eval.c **** 		}
 197              		.loc 1 513 4 view .LVU46
 198 008c 2869     		ldr	r0, [r5, #16]
 199 008e 9B69     		ldr	r3, [r3, #24]
 200 0090 EEE7     		b	.L20
 201              	.LVL18:
 202              	.L9:
 522:boards/TMC4331_eval.c **** 		{
 203              		.loc 1 522 3 is_stmt 1 view .LVU47
 204 0092 0D4B     		ldr	r3, .L23
 205 0094 0D4D     		ldr	r5, .L23+4
 206 0096 DE68     		ldr	r6, [r3, #12]
 522:boards/TMC4331_eval.c **** 		{
 207              		.loc 1 522 5 is_stmt 0 view .LVU48
 208 0098 1468     		ldr	r4, [r2]
 209 009a 3368     		ldr	r3, [r6]
 210 009c A868     		ldr	r0, [r5, #8]
 211 009e 002C     		cmp	r4, #0
 212 00a0 EFD1     		bne	.L22
 528:boards/TMC4331_eval.c **** 			HAL.IOs->config->setLow(Pins.FREEZE);
 213              		.loc 1 528 4 is_stmt 1 view .LVU49
 214 00a2 DB68     		ldr	r3, [r3, #12]
 215 00a4 9847     		blx	r3
 216              	.LVL19:
 529:boards/TMC4331_eval.c **** 		}
 217              		.loc 1 529 4 view .LVU50
 529:boards/TMC4331_eval.c **** 		}
 218              		.loc 1 529 19 is_stmt 0 view .LVU51
 219 00a6 3368     		ldr	r3, [r6]
 529:boards/TMC4331_eval.c **** 		}
 220              		.loc 1 529 4 view .LVU52
 221 00a8 A868     		ldr	r0, [r5, #8]
 222 00aa 9B69     		ldr	r3, [r3, #24]
 223 00ac E0E7     		b	.L20
 224              	.LVL20:
 225              	.L11:
 536:boards/TMC4331_eval.c **** 		Evalboards.ch1.config->reset();
 226              		.loc 1 536 3 is_stmt 1 view .LVU53
 536:boards/TMC4331_eval.c **** 		Evalboards.ch1.config->reset();
 227              		.loc 1 536 17 is_stmt 0 view .LVU54
 228 00ae 084C     		ldr	r4, .L23+8
 536:boards/TMC4331_eval.c **** 		Evalboards.ch1.config->reset();
 229              		.loc 1 536 24 view .LVU55
 230 00b0 D4F89030 		ldr	r3, [r4, #144]
 536:boards/TMC4331_eval.c **** 		Evalboards.ch1.config->reset();
 231              		.loc 1 536 3 view .LVU56
 232 00b4 D3F80432 		ldr	r3, [r3, #516]
 233 00b8 9847     		blx	r3
 234              	.LVL21:
 537:boards/TMC4331_eval.c **** 		break;
 235              		.loc 1 537 3 is_stmt 1 view .LVU57
 537:boards/TMC4331_eval.c **** 		break;
 236              		.loc 1 537 24 is_stmt 0 view .LVU58
 237 00ba A369     		ldr	r3, [r4, #24]
 537:boards/TMC4331_eval.c **** 		break;
 238              		.loc 1 537 3 view .LVU59
 239 00bc D3F80432 		ldr	r3, [r3, #516]
 240 00c0 9847     		blx	r3
 241              	.LVL22:
 538:boards/TMC4331_eval.c **** 	default:
 242              		.loc 1 538 3 is_stmt 1 view .LVU60
 243 00c2 C8E7     		b	.L18
 244              	.LVL23:
 245              	.L17:
 533:boards/TMC4331_eval.c **** 		break;
 246              		.loc 1 533 10 is_stmt 0 view .LVU61
 247 00c4 2024     		movs	r4, #32
 248 00c6 AFE7     		b	.L4
 249              	.L24:
 250              		.align	2
 251              	.L23:
 252 00c8 00000000 		.word	HAL
 253 00cc 00000000 		.word	.LANCHOR0
 254 00d0 00000000 		.word	Evalboards
 255              		.cfi_endproc
 256              	.LFE19:
 258              		.align	1
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu softvfp
 264              	deInit:
 265              	.LFB20:
 545:boards/TMC4331_eval.c **** 
 546:boards/TMC4331_eval.c **** static void deInit(void)
 547:boards/TMC4331_eval.c **** {
 266              		.loc 1 547 1 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 548:boards/TMC4331_eval.c **** 	HAL.IOs->config->setLow(Pins.NRST);
 270              		.loc 1 548 2 view .LVU63
 547:boards/TMC4331_eval.c **** 	HAL.IOs->config->setLow(Pins.NRST);
 271              		.loc 1 547 1 is_stmt 0 view .LVU64
 272 00d4 70B5     		push	{r4, r5, r6, lr}
 273              	.LCFI1:
 274              		.cfi_def_cfa_offset 16
 275              		.cfi_offset 4, -16
 276              		.cfi_offset 5, -12
 277              		.cfi_offset 6, -8
 278              		.cfi_offset 14, -4
 279              		.loc 1 548 5 view .LVU65
 280 00d6 184E     		ldr	r6, .L26
 281              		.loc 1 548 2 view .LVU66
 282 00d8 184C     		ldr	r4, .L26+4
 283              		.loc 1 548 5 view .LVU67
 284 00da F568     		ldr	r5, [r6, #12]
 285              		.loc 1 548 2 view .LVU68
 286 00dc 6068     		ldr	r0, [r4, #4]
 287              		.loc 1 548 17 view .LVU69
 288 00de 2B68     		ldr	r3, [r5]
 289              		.loc 1 548 2 view .LVU70
 290 00e0 9B69     		ldr	r3, [r3, #24]
 291 00e2 9847     		blx	r3
 292              	.LVL24:
 549:boards/TMC4331_eval.c **** 
 550:boards/TMC4331_eval.c **** 	HAL.IOs->config->reset(Pins.STOP_L);
 293              		.loc 1 550 2 is_stmt 1 view .LVU71
 294              		.loc 1 550 17 is_stmt 0 view .LVU72
 295 00e4 2B68     		ldr	r3, [r5]
 296              		.loc 1 550 2 view .LVU73
 297 00e6 A069     		ldr	r0, [r4, #24]
 298 00e8 9B68     		ldr	r3, [r3, #8]
 299 00ea 9847     		blx	r3
 300              	.LVL25:
 551:boards/TMC4331_eval.c **** 	HAL.IOs->config->reset(Pins.STOP_R);
 301              		.loc 1 551 2 is_stmt 1 view .LVU74
 302              		.loc 1 551 17 is_stmt 0 view .LVU75
 303 00ec 2B68     		ldr	r3, [r5]
 304              		.loc 1 551 2 view .LVU76
 305 00ee 6069     		ldr	r0, [r4, #20]
 306 00f0 9B68     		ldr	r3, [r3, #8]
 307 00f2 9847     		blx	r3
 308              	.LVL26:
 552:boards/TMC4331_eval.c **** 	HAL.IOs->config->reset(Pins.HOME_REF);
 309              		.loc 1 552 2 is_stmt 1 view .LVU77
 310              		.loc 1 552 17 is_stmt 0 view .LVU78
 311 00f4 2B68     		ldr	r3, [r5]
 312              		.loc 1 552 2 view .LVU79
 313 00f6 2069     		ldr	r0, [r4, #16]
 314 00f8 9B68     		ldr	r3, [r3, #8]
 315 00fa 9847     		blx	r3
 316              	.LVL27:
 553:boards/TMC4331_eval.c **** 	HAL.IOs->config->reset(Pins.START);
 317              		.loc 1 553 2 is_stmt 1 view .LVU80
 318              		.loc 1 553 17 is_stmt 0 view .LVU81
 319 00fc 2B68     		ldr	r3, [r5]
 320              		.loc 1 553 2 view .LVU82
 321 00fe E068     		ldr	r0, [r4, #12]
 322 0100 9B68     		ldr	r3, [r3, #8]
 323 0102 9847     		blx	r3
 324              	.LVL28:
 554:boards/TMC4331_eval.c **** 	HAL.IOs->config->reset(Pins.FREEZE);
 325              		.loc 1 554 2 is_stmt 1 view .LVU83
 326              		.loc 1 554 17 is_stmt 0 view .LVU84
 327 0104 2B68     		ldr	r3, [r5]
 328              		.loc 1 554 2 view .LVU85
 329 0106 A068     		ldr	r0, [r4, #8]
 330 0108 9B68     		ldr	r3, [r3, #8]
 331 010a 9847     		blx	r3
 332              	.LVL29:
 555:boards/TMC4331_eval.c **** 	HAL.IOs->config->reset(Pins.STANDBY_CLK);
 333              		.loc 1 555 2 is_stmt 1 view .LVU86
 334              		.loc 1 555 17 is_stmt 0 view .LVU87
 335 010c 2B68     		ldr	r3, [r5]
 336              		.loc 1 555 2 view .LVU88
 337 010e 206A     		ldr	r0, [r4, #32]
 338 0110 9B68     		ldr	r3, [r3, #8]
 339 0112 9847     		blx	r3
 340              	.LVL30:
 556:boards/TMC4331_eval.c **** 	HAL.IOs->config->reset(Pins.INTR);
 341              		.loc 1 556 2 is_stmt 1 view .LVU89
 342              		.loc 1 556 17 is_stmt 0 view .LVU90
 343 0114 2B68     		ldr	r3, [r5]
 344              		.loc 1 556 2 view .LVU91
 345 0116 E069     		ldr	r0, [r4, #28]
 346 0118 9B68     		ldr	r3, [r3, #8]
 347 011a 9847     		blx	r3
 348              	.LVL31:
 557:boards/TMC4331_eval.c **** 	HAL.IOs->config->reset(Pins.TARGET_REACHED);
 349              		.loc 1 557 2 is_stmt 1 view .LVU92
 350              		.loc 1 557 17 is_stmt 0 view .LVU93
 351 011c 2B68     		ldr	r3, [r5]
 352              		.loc 1 557 2 view .LVU94
 353 011e 2068     		ldr	r0, [r4]
 354 0120 9B68     		ldr	r3, [r3, #8]
 355 0122 9847     		blx	r3
 356              	.LVL32:
 558:boards/TMC4331_eval.c **** 	HAL.IOs->config->reset(Pins.NRST);
 357              		.loc 1 558 2 is_stmt 1 view .LVU95
 358              		.loc 1 558 17 is_stmt 0 view .LVU96
 359 0124 2B68     		ldr	r3, [r5]
 360              		.loc 1 558 2 view .LVU97
 361 0126 6068     		ldr	r0, [r4, #4]
 362 0128 9B68     		ldr	r3, [r3, #8]
 363 012a 9847     		blx	r3
 364              	.LVL33:
 559:boards/TMC4331_eval.c **** 
 560:boards/TMC4331_eval.c **** 	HAL.SPI->ch2.reset();
 365              		.loc 1 560 2 is_stmt 1 view .LVU98
 366              		.loc 1 560 14 is_stmt 0 view .LVU99
 367 012c 3369     		ldr	r3, [r6, #16]
 561:boards/TMC4331_eval.c **** }
 368              		.loc 1 561 1 view .LVU100
 369 012e BDE87040 		pop	{r4, r5, r6, lr}
 370              	.LCFI2:
 371              		.cfi_restore 14
 372              		.cfi_restore 6
 373              		.cfi_restore 5
 374              		.cfi_restore 4
 375              		.cfi_def_cfa_offset 0
 560:boards/TMC4331_eval.c **** }
 376              		.loc 1 560 2 view .LVU101
 377 0132 5B6A     		ldr	r3, [r3, #36]
 378 0134 1847     		bx	r3	@ indirect register sibling call
 379              	.LVL34:
 380              	.L27:
 381 0136 00BF     		.align	2
 382              	.L26:
 383 0138 00000000 		.word	HAL
 384 013c 00000000 		.word	.LANCHOR0
 385              		.cfi_endproc
 386              	.LFE20:
 388              		.align	1
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu softvfp
 394              	tmc4331_fullCover:
 395              	.LVL35:
 396              	.LFB4:
  76:boards/TMC4331_eval.c **** 	tmc4331_readWriteCover(&TMC4331, data, length);
 397              		.loc 1 76 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
  77:boards/TMC4331_eval.c **** }
 402              		.loc 1 77 2 view .LVU103
  76:boards/TMC4331_eval.c **** 	tmc4331_readWriteCover(&TMC4331, data, length);
 403              		.loc 1 76 1 is_stmt 0 view .LVU104
 404 0140 0A46     		mov	r2, r1
  77:boards/TMC4331_eval.c **** }
 405              		.loc 1 77 2 view .LVU105
 406 0142 0146     		mov	r1, r0
 407              	.LVL36:
  77:boards/TMC4331_eval.c **** }
 408              		.loc 1 77 2 view .LVU106
 409 0144 0148     		ldr	r0, .L29
 410              	.LVL37:
  77:boards/TMC4331_eval.c **** }
 411              		.loc 1 77 2 view .LVU107
 412 0146 FFF7FEBF 		b	tmc4331_readWriteCover
 413              	.LVL38:
 414              	.L30:
  77:boards/TMC4331_eval.c **** }
 415              		.loc 1 77 2 view .LVU108
 416 014a 00BF     		.align	2
 417              	.L29:
 418 014c 24000000 		.word	.LANCHOR0+36
 419              		.cfi_endproc
 420              	.LFE4:
 422              		.align	1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu softvfp
 428              	periodicJob:
 429              	.LVL39:
 430              	.LFB17:
 455:boards/TMC4331_eval.c **** 	tmc4331_periodicJob(&TMC4331, tick);
 431              		.loc 1 455 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 456:boards/TMC4331_eval.c **** }
 436              		.loc 1 456 2 view .LVU110
 455:boards/TMC4331_eval.c **** 	tmc4331_periodicJob(&TMC4331, tick);
 437              		.loc 1 455 1 is_stmt 0 view .LVU111
 438 0150 0146     		mov	r1, r0
 456:boards/TMC4331_eval.c **** }
 439              		.loc 1 456 2 view .LVU112
 440 0152 0148     		ldr	r0, .L32
 441              	.LVL40:
 456:boards/TMC4331_eval.c **** }
 442              		.loc 1 456 2 view .LVU113
 443 0154 FFF7FEBF 		b	tmc4331_periodicJob
 444              	.LVL41:
 445              	.L33:
 456:boards/TMC4331_eval.c **** }
 446              		.loc 1 456 2 view .LVU114
 447              		.align	2
 448              	.L32:
 449 0158 24000000 		.word	.LANCHOR0+36
 450              		.cfi_endproc
 451              	.LFE17:
 453              		.align	1
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu softvfp
 459              	readRegister:
 460              	.LVL42:
 461              	.LFB16:
 450:boards/TMC4331_eval.c **** 	*value	= tmc4331_readInt(motorToIC(motor), address);
 462              		.loc 1 450 1 is_stmt 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 451:boards/TMC4331_eval.c **** }
 466              		.loc 1 451 2 view .LVU116
 467              	.LBB27:
 468              	.LBI27:
  49:boards/TMC4331_eval.c **** {
 469              		.loc 1 49 31 view .LVU117
  49:boards/TMC4331_eval.c **** {
 470              		.loc 1 49 31 is_stmt 0 view .LVU118
 471              	.LBE27:
  51:boards/TMC4331_eval.c **** 
 472              		.loc 1 51 2 is_stmt 1 view .LVU119
  53:boards/TMC4331_eval.c **** }
 473              		.loc 1 53 2 view .LVU120
 450:boards/TMC4331_eval.c **** 	*value	= tmc4331_readInt(motorToIC(motor), address);
 474              		.loc 1 450 1 is_stmt 0 view .LVU121
 475 015c 10B5     		push	{r4, lr}
 476              	.LCFI3:
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 4, -8
 479              		.cfi_offset 14, -4
 451:boards/TMC4331_eval.c **** }
 480              		.loc 1 451 11 view .LVU122
 481 015e 0348     		ldr	r0, .L35
 482              	.LVL43:
 450:boards/TMC4331_eval.c **** 	*value	= tmc4331_readInt(motorToIC(motor), address);
 483              		.loc 1 450 1 view .LVU123
 484 0160 1446     		mov	r4, r2
 451:boards/TMC4331_eval.c **** }
 485              		.loc 1 451 11 view .LVU124
 486 0162 FFF7FEFF 		bl	tmc4331_readInt
 487              	.LVL44:
 451:boards/TMC4331_eval.c **** }
 488              		.loc 1 451 9 view .LVU125
 489 0166 2060     		str	r0, [r4]
 452:boards/TMC4331_eval.c **** 
 490              		.loc 1 452 1 view .LVU126
 491 0168 10BD     		pop	{r4, pc}
 492              	.LVL45:
 493              	.L36:
 452:boards/TMC4331_eval.c **** 
 494              		.loc 1 452 1 view .LVU127
 495 016a 00BF     		.align	2
 496              	.L35:
 497 016c 24000000 		.word	.LANCHOR0+36
 498              		.cfi_endproc
 499              	.LFE16:
 501              		.align	1
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 505              		.fpu softvfp
 507              	writeRegister:
 508              	.LVL46:
 509              	.LFB15:
 419:boards/TMC4331_eval.c **** 	// Notify driver shadows about register changes made via cover
 510              		.loc 1 419 1 is_stmt 1 view -0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 421:boards/TMC4331_eval.c **** 	switch(address) {
 514              		.loc 1 421 2 view .LVU129
 422:boards/TMC4331_eval.c **** 	case TMC4331_COVER_HIGH_WR:
 515              		.loc 1 422 2 view .LVU130
 516 0170 6C29     		cmp	r1, #108
 419:boards/TMC4331_eval.c **** 	// Notify driver shadows about register changes made via cover
 517              		.loc 1 419 1 is_stmt 0 view .LVU131
 518 0172 70B5     		push	{r4, r5, r6, lr}
 519              	.LCFI4:
 520              		.cfi_def_cfa_offset 16
 521              		.cfi_offset 4, -16
 522              		.cfi_offset 5, -12
 523              		.cfi_offset 6, -8
 524              		.cfi_offset 14, -4
 419:boards/TMC4331_eval.c **** 	// Notify driver shadows about register changes made via cover
 525              		.loc 1 419 1 view .LVU132
 526 0174 0D46     		mov	r5, r1
 527 0176 1446     		mov	r4, r2
 422:boards/TMC4331_eval.c **** 	case TMC4331_COVER_HIGH_WR:
 528              		.loc 1 422 2 view .LVU133
 529 0178 23D0     		beq	.L38
 530 017a 6D29     		cmp	r1, #109
 531 017c 17D0     		beq	.L39
 532 017e 0629     		cmp	r1, #6
 533 0180 18D1     		bne	.L41
 436:boards/TMC4331_eval.c **** 		case ID_TMC2130:
 534              		.loc 1 436 3 is_stmt 1 view .LVU134
 436:boards/TMC4331_eval.c **** 		case ID_TMC2130:
 535              		.loc 1 436 24 is_stmt 0 view .LVU135
 536 0182 214B     		ldr	r3, .L46
 537 0184 93F87C20 		ldrb	r2, [r3, #124]	@ zero_extendqisi2
 538              	.LVL47:
 436:boards/TMC4331_eval.c **** 		case ID_TMC2130:
 539              		.loc 1 436 24 view .LVU136
 540 0188 032A     		cmp	r2, #3
 541 018a 2DD0     		beq	.L43
 542 018c 0B2A     		cmp	r2, #11
 543 018e 11D1     		bne	.L41
 441:boards/TMC4331_eval.c **** 			break;
 544              		.loc 1 441 4 is_stmt 1 view .LVU137
 545 0190 9E6F     		ldr	r6, [r3, #120]
 546 0192 1021     		movs	r1, #16
 547              	.LVL48:
 441:boards/TMC4331_eval.c **** 			break;
 548              		.loc 1 441 4 is_stmt 0 view .LVU138
 549 0194 3046     		mov	r0, r6
 550              	.LVL49:
 441:boards/TMC4331_eval.c **** 			break;
 551              		.loc 1 441 4 view .LVU139
 552 0196 FFF7FEFF 		bl	tmc2160_readInt
 553              	.LVL50:
 554 019a C4F30462 		ubfx	r2, r4, #24, #5
 555 019e 20F01F00 		bic	r0, r0, #31
 556 01a2 0243     		orrs	r2, r2, r0
 557 01a4 1021     		movs	r1, #16
 558 01a6 3046     		mov	r0, r6
 559 01a8 FFF7FEFF 		bl	tmc2160_writeInt
 560              	.LVL51:
 442:boards/TMC4331_eval.c **** 		}
 561              		.loc 1 442 4 is_stmt 1 view .LVU140
 562 01ac 02E0     		b	.L41
 563              	.LVL52:
 564              	.L39:
 424:boards/TMC4331_eval.c **** 		break;
 565              		.loc 1 424 3 view .LVU141
 424:boards/TMC4331_eval.c **** 		break;
 566              		.loc 1 424 8 is_stmt 0 view .LVU142
 567 01ae 174B     		ldr	r3, .L46+4
 568 01b0 C3F8B822 		str	r2, [r3, #696]
 425:boards/TMC4331_eval.c **** 	case TMC4331_COVER_LOW_WR:
 569              		.loc 1 425 3 is_stmt 1 view .LVU143
 570              	.LVL53:
 571              	.L41:
 446:boards/TMC4331_eval.c **** }
 572              		.loc 1 446 2 view .LVU144
 573              	.LBB28:
 574              	.LBI28:
  49:boards/TMC4331_eval.c **** {
 575              		.loc 1 49 31 view .LVU145
  49:boards/TMC4331_eval.c **** {
 576              		.loc 1 49 31 is_stmt 0 view .LVU146
 577              	.LBE28:
  51:boards/TMC4331_eval.c **** 
 578              		.loc 1 51 2 is_stmt 1 view .LVU147
  53:boards/TMC4331_eval.c **** }
 579              		.loc 1 53 2 view .LVU148
 446:boards/TMC4331_eval.c **** }
 580              		.loc 1 446 2 is_stmt 0 view .LVU149
 581 01b4 2246     		mov	r2, r4
 582 01b6 2946     		mov	r1, r5
 583 01b8 1548     		ldr	r0, .L46+8
 447:boards/TMC4331_eval.c **** 
 584              		.loc 1 447 1 view .LVU150
 585 01ba BDE87040 		pop	{r4, r5, r6, lr}
 586              	.LCFI5:
 587              		.cfi_remember_state
 588              		.cfi_restore 14
 589              		.cfi_restore 6
 590              		.cfi_restore 5
 591              		.cfi_restore 4
 592              		.cfi_def_cfa_offset 0
 593              	.LVL54:
 446:boards/TMC4331_eval.c **** }
 594              		.loc 1 446 2 view .LVU151
 595 01be FFF7FEBF 		b	tmc4331_writeInt
 596              	.LVL55:
 597              	.L38:
 598              	.LCFI6:
 599              		.cfi_restore_state
 427:boards/TMC4331_eval.c **** 			Evalboards.ch2.writeRegister(motor, TMC2660_ADDRESS(value), TMC2660_VALUE(value));
 600              		.loc 1 427 3 is_stmt 1 view .LVU152
 601 01c2 1149     		ldr	r1, .L46
 602              	.LVL56:
 427:boards/TMC4331_eval.c **** 			Evalboards.ch2.writeRegister(motor, TMC2660_ADDRESS(value), TMC2660_VALUE(value));
 603              		.loc 1 427 3 is_stmt 0 view .LVU153
 604 01c4 D1F8C430 		ldr	r3, [r1, #196]
 427:boards/TMC4331_eval.c **** 			Evalboards.ch2.writeRegister(motor, TMC2660_ADDRESS(value), TMC2660_VALUE(value));
 605              		.loc 1 427 5 view .LVU154
 606 01c8 91F87C10 		ldrb	r1, [r1, #124]	@ zero_extendqisi2
 607 01cc 0129     		cmp	r1, #1
 428:boards/TMC4331_eval.c **** 		else // All other drivers -> 32 bit registers, 8 bit address
 608              		.loc 1 428 4 is_stmt 1 view .LVU155
 430:boards/TMC4331_eval.c **** 		break;
 609              		.loc 1 430 40 is_stmt 0 view .LVU156
 610 01ce 19BF     		ittee	ne
 611 01d0 0E49     		ldrne	r1, .L46+4
 612 01d2 D1F8B812 		ldrne	r1, [r1, #696]
 428:boards/TMC4331_eval.c **** 		else // All other drivers -> 32 bit registers, 8 bit address
 613              		.loc 1 428 4 view .LVU157
 614 01d6 C2F31302 		ubfxeq	r2, r2, #0, #20
 615              	.LVL57:
 428:boards/TMC4331_eval.c **** 		else // All other drivers -> 32 bit registers, 8 bit address
 616              		.loc 1 428 4 view .LVU158
 617 01da C4F30251 		ubfxeq	r1, r4, #20, #3
 430:boards/TMC4331_eval.c **** 		break;
 618              		.loc 1 430 4 is_stmt 1 view .LVU159
 619 01de 18BF     		it	ne
 620 01e0 01F07F01 		andne	r1, r1, #127
 621 01e4 9847     		blx	r3
 622              	.LVL58:
 430:boards/TMC4331_eval.c **** 		break;
 623              		.loc 1 430 4 is_stmt 0 view .LVU160
 624 01e6 E5E7     		b	.L41
 625              	.LVL59:
 626              	.L43:
 438:boards/TMC4331_eval.c **** 			break;
 627              		.loc 1 438 4 is_stmt 1 view .LVU161
 628 01e8 9E6F     		ldr	r6, [r3, #120]
 629 01ea 1021     		movs	r1, #16
 630              	.LVL60:
 438:boards/TMC4331_eval.c **** 			break;
 631              		.loc 1 438 4 is_stmt 0 view .LVU162
 632 01ec 3046     		mov	r0, r6
 633              	.LVL61:
 438:boards/TMC4331_eval.c **** 			break;
 634              		.loc 1 438 4 view .LVU163
 635 01ee FFF7FEFF 		bl	tmc2130_readInt
 636              	.LVL62:
 637 01f2 C4F30462 		ubfx	r2, r4, #24, #5
 638 01f6 20F01F00 		bic	r0, r0, #31
 639 01fa 0243     		orrs	r2, r2, r0
 640 01fc 1021     		movs	r1, #16
 641 01fe 3046     		mov	r0, r6
 642 0200 FFF7FEFF 		bl	tmc2130_writeInt
 643              	.LVL63:
 439:boards/TMC4331_eval.c **** 		case ID_TMC2160:
 644              		.loc 1 439 4 is_stmt 1 view .LVU164
 645 0204 D6E7     		b	.L41
 646              	.L47:
 647 0206 00BF     		.align	2
 648              	.L46:
 649 0208 00000000 		.word	Evalboards
 650 020c 00000000 		.word	.LANCHOR0
 651 0210 24000000 		.word	.LANCHOR0+36
 652              		.cfi_endproc
 653              	.LFE15:
 655              		.align	1
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu softvfp
 661              	moveBy:
 662              	.LVL64:
 663              	.LFB11:
 170:boards/TMC4331_eval.c **** 	tmc4331_moveBy(motorToIC(motor), ticks, vmax_position);
 664              		.loc 1 170 1 view -0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 171:boards/TMC4331_eval.c **** 
 668              		.loc 1 171 2 view .LVU166
 669              	.LBB29:
 670              	.LBI29:
  49:boards/TMC4331_eval.c **** {
 671              		.loc 1 49 31 view .LVU167
  49:boards/TMC4331_eval.c **** {
 672              		.loc 1 49 31 is_stmt 0 view .LVU168
 673              	.LBE29:
  51:boards/TMC4331_eval.c **** 
 674              		.loc 1 51 2 is_stmt 1 view .LVU169
  53:boards/TMC4331_eval.c **** }
 675              		.loc 1 53 2 view .LVU170
 170:boards/TMC4331_eval.c **** 	tmc4331_moveBy(motorToIC(motor), ticks, vmax_position);
 676              		.loc 1 170 1 is_stmt 0 view .LVU171
 677 0214 08B5     		push	{r3, lr}
 678              	.LCFI7:
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 3, -8
 681              		.cfi_offset 14, -4
 171:boards/TMC4331_eval.c **** 
 682              		.loc 1 171 2 view .LVU172
 683 0216 0448     		ldr	r0, .L49
 684              	.LVL65:
 171:boards/TMC4331_eval.c **** 
 685              		.loc 1 171 2 view .LVU173
 686 0218 D0F8BC22 		ldr	r2, [r0, #700]
 687 021c 2430     		adds	r0, r0, #36
 688 021e FFF7FEFF 		bl	tmc4331_moveBy
 689              	.LVL66:
 173:boards/TMC4331_eval.c **** }
 690              		.loc 1 173 2 is_stmt 1 view .LVU174
 174:boards/TMC4331_eval.c **** // <= Functions forwarded to API
 691              		.loc 1 174 1 is_stmt 0 view .LVU175
 692 0222 0020     		movs	r0, #0
 693 0224 08BD     		pop	{r3, pc}
 694              	.L50:
 695 0226 00BF     		.align	2
 696              	.L49:
 697 0228 00000000 		.word	.LANCHOR0
 698              		.cfi_endproc
 699              	.LFE11:
 701              		.align	1
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 705              		.fpu softvfp
 707              	moveTo:
 708              	.LVL67:
 709              	.LFB10:
 163:boards/TMC4331_eval.c **** 	tmc4331_moveTo(motorToIC(motor), position, vmax_position);
 710              		.loc 1 163 1 is_stmt 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 164:boards/TMC4331_eval.c **** 
 714              		.loc 1 164 2 view .LVU177
 715              	.LBB30:
 716              	.LBI30:
  49:boards/TMC4331_eval.c **** {
 717              		.loc 1 49 31 view .LVU178
  49:boards/TMC4331_eval.c **** {
 718              		.loc 1 49 31 is_stmt 0 view .LVU179
 719              	.LBE30:
  51:boards/TMC4331_eval.c **** 
 720              		.loc 1 51 2 is_stmt 1 view .LVU180
  53:boards/TMC4331_eval.c **** }
 721              		.loc 1 53 2 view .LVU181
 163:boards/TMC4331_eval.c **** 	tmc4331_moveTo(motorToIC(motor), position, vmax_position);
 722              		.loc 1 163 1 is_stmt 0 view .LVU182
 723 022c 08B5     		push	{r3, lr}
 724              	.LCFI8:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 3, -8
 727              		.cfi_offset 14, -4
 164:boards/TMC4331_eval.c **** 
 728              		.loc 1 164 2 view .LVU183
 729 022e 0448     		ldr	r0, .L52
 730              	.LVL68:
 164:boards/TMC4331_eval.c **** 
 731              		.loc 1 164 2 view .LVU184
 732 0230 D0F8BC22 		ldr	r2, [r0, #700]
 733 0234 2430     		adds	r0, r0, #36
 734 0236 FFF7FEFF 		bl	tmc4331_moveTo
 735              	.LVL69:
 166:boards/TMC4331_eval.c **** }
 736              		.loc 1 166 2 is_stmt 1 view .LVU185
 167:boards/TMC4331_eval.c **** 
 737              		.loc 1 167 1 is_stmt 0 view .LVU186
 738 023a 0020     		movs	r0, #0
 739 023c 08BD     		pop	{r3, pc}
 740              	.L53:
 741 023e 00BF     		.align	2
 742              	.L52:
 743 0240 00000000 		.word	.LANCHOR0
 744              		.cfi_endproc
 745              	.LFE10:
 747              		.align	1
 748              		.syntax unified
 749              		.thumb
 750              		.thumb_func
 751              		.fpu softvfp
 753              	handleParameter:
 754              	.LVL70:
 755              	.LFB12:
 178:boards/TMC4331_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 756              		.loc 1 178 1 is_stmt 1 view -0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 179:boards/TMC4331_eval.c **** 
 760              		.loc 1 179 2 view .LVU188
 181:boards/TMC4331_eval.c **** 		return TMC_ERROR_MOTOR;
 761              		.loc 1 181 2 view .LVU189
 178:boards/TMC4331_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 762              		.loc 1 178 1 is_stmt 0 view .LVU190
 763 0244 70B5     		push	{r4, r5, r6, lr}
 764              	.LCFI9:
 765              		.cfi_def_cfa_offset 16
 766              		.cfi_offset 4, -16
 767              		.cfi_offset 5, -12
 768              		.cfi_offset 6, -8
 769              		.cfi_offset 14, -4
 178:boards/TMC4331_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 770              		.loc 1 178 1 view .LVU191
 771 0246 0546     		mov	r5, r0
 772 0248 1E46     		mov	r6, r3
 181:boards/TMC4331_eval.c **** 		return TMC_ERROR_MOTOR;
 773              		.loc 1 181 4 view .LVU192
 774 024a 0029     		cmp	r1, #0
 775 024c 40F0FC80 		bne	.L101
 184:boards/TMC4331_eval.c **** 	{
 776              		.loc 1 184 2 is_stmt 1 view .LVU193
 777 0250 1B2A     		cmp	r2, #27
 778 0252 1FD8     		bhi	.L56
 779 0254 1B2A     		cmp	r2, #27
 780 0256 20D8     		bhi	.L106
 781 0258 DFE812F0 		tbh	[pc, r2, lsl #1]
 782              	.LVL71:
 783              	.L58:
 784 025c 2100     		.2byte	(.L78-.L58)/2
 785 025e 3000     		.2byte	(.L77-.L58)/2
 786 0260 3600     		.2byte	(.L76-.L58)/2
 787 0262 4300     		.2byte	(.L75-.L58)/2
 788 0264 4700     		.2byte	(.L74-.L58)/2
 789 0266 6000     		.2byte	(.L73-.L58)/2
 790 0268 1F00     		.2byte	(.L106-.L58)/2
 791 026a 1F00     		.2byte	(.L106-.L58)/2
 792 026c 7300     		.2byte	(.L72-.L58)/2
 793 026e 1F00     		.2byte	(.L106-.L58)/2
 794 0270 1F00     		.2byte	(.L106-.L58)/2
 795 0272 1F00     		.2byte	(.L106-.L58)/2
 796 0274 1F00     		.2byte	(.L106-.L58)/2
 797 0276 1F00     		.2byte	(.L106-.L58)/2
 798 0278 7C00     		.2byte	(.L71-.L58)/2
 799 027a 8E00     		.2byte	(.L70-.L58)/2
 800 027c 9400     		.2byte	(.L69-.L58)/2
 801 027e 9F00     		.2byte	(.L68-.L58)/2
 802 0280 AA00     		.2byte	(.L67-.L58)/2
 803 0282 B000     		.2byte	(.L66-.L58)/2
 804 0284 BB00     		.2byte	(.L65-.L58)/2
 805 0286 C100     		.2byte	(.L64-.L58)/2
 806 0288 CA00     		.2byte	(.L63-.L58)/2
 807 028a D000     		.2byte	(.L62-.L58)/2
 808 028c D600     		.2byte	(.L61-.L58)/2
 809 028e DC00     		.2byte	(.L60-.L58)/2
 810 0290 E200     		.2byte	(.L59-.L58)/2
 811 0292 E800     		.2byte	(.L57-.L58)/2
 812              		.p2align 1
 813              	.L56:
 184:boards/TMC4331_eval.c **** 	{
 814              		.loc 1 184 2 is_stmt 0 view .LVU194
 815 0294 D62A     		cmp	r2, #214
 816 0296 00F0CF80 		beq	.L79
 817              	.LVL72:
 818              	.L106:
 215:boards/TMC4331_eval.c **** 		}
 819              		.loc 1 215 11 view .LVU195
 820 029a 0425     		movs	r5, #4
 821 029c 0CE0     		b	.L54
 822              	.L78:
 188:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_X_TARGET);
 823              		.loc 1 188 3 is_stmt 1 view .LVU196
 188:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_X_TARGET);
 824              		.loc 1 188 5 is_stmt 0 view .LVU197
 825 029e 28B9     		cbnz	r0, .L80
 189:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 826              		.loc 1 189 4 is_stmt 1 view .LVU198
 189:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 827              		.loc 1 189 13 is_stmt 0 view .LVU199
 828 02a0 3721     		movs	r1, #55
 829              	.LVL73:
 830              	.L112:
 197:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 831              		.loc 1 197 13 view .LVU200
 832 02a2 6B48     		ldr	r0, .L119
 833              	.LVL74:
 197:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 834              		.loc 1 197 13 view .LVU201
 835 02a4 FFF7FEFF 		bl	tmc4331_readInt
 836              	.LVL75:
 837              	.L116:
 197:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 838              		.loc 1 197 11 view .LVU202
 839 02a8 3060     		str	r0, [r6]
 840 02aa 05E0     		b	.L54
 841              	.LVL76:
 842              	.L80:
 190:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331, TMC4331_X_TARGET, *value);
 843              		.loc 1 190 10 is_stmt 1 view .LVU203
 191:boards/TMC4331_eval.c **** 		}
 844              		.loc 1 191 4 view .LVU204
 845 02ac 3268     		ldr	r2, [r6]
 846              	.LVL77:
 191:boards/TMC4331_eval.c **** 		}
 847              		.loc 1 191 4 is_stmt 0 view .LVU205
 848 02ae 3721     		movs	r1, #55
 849              	.LVL78:
 850              	.L114:
 191:boards/TMC4331_eval.c **** 		}
 851              		.loc 1 191 4 view .LVU206
 852 02b0 6748     		ldr	r0, .L119
 853              	.LVL79:
 854              	.L117:
 191:boards/TMC4331_eval.c **** 		}
 855              		.loc 1 191 4 view .LVU207
 856 02b2 FFF7FEFF 		bl	tmc4331_writeInt
 857              	.LVL80:
 858              	.L113:
 179:boards/TMC4331_eval.c **** 
 859              		.loc 1 179 11 view .LVU208
 860 02b6 0025     		movs	r5, #0
 861              	.LVL81:
 862              	.L54:
 406:boards/TMC4331_eval.c **** 
 863              		.loc 1 406 1 view .LVU209
 864 02b8 2846     		mov	r0, r5
 865 02ba 70BD     		pop	{r4, r5, r6, pc}
 866              	.LVL82:
 867              	.L77:
 196:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_XACTUAL);
 868              		.loc 1 196 3 is_stmt 1 view .LVU210
 196:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_XACTUAL);
 869              		.loc 1 196 5 is_stmt 0 view .LVU211
 870 02bc 08B9     		cbnz	r0, .L81
 197:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 871              		.loc 1 197 4 is_stmt 1 view .LVU212
 197:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 872              		.loc 1 197 13 is_stmt 0 view .LVU213
 873 02be 2121     		movs	r1, #33
 874              	.LVL83:
 197:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 875              		.loc 1 197 13 view .LVU214
 876 02c0 EFE7     		b	.L112
 877              	.LVL84:
 878              	.L81:
 198:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_XACTUAL, *value);
 879              		.loc 1 198 10 is_stmt 1 view .LVU215
 199:boards/TMC4331_eval.c **** 		}
 880              		.loc 1 199 4 view .LVU216
 881 02c2 3268     		ldr	r2, [r6]
 882              	.LVL85:
 199:boards/TMC4331_eval.c **** 		}
 883              		.loc 1 199 4 is_stmt 0 view .LVU217
 884 02c4 2121     		movs	r1, #33
 885              	.LVL86:
 199:boards/TMC4331_eval.c **** 		}
 886              		.loc 1 199 4 view .LVU218
 887 02c6 F3E7     		b	.L114
 888              	.LVL87:
 889              	.L76:
 204:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VMAX) >> 8;
 890              		.loc 1 204 3 is_stmt 1 view .LVU219
 204:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VMAX) >> 8;
 891              		.loc 1 204 5 is_stmt 0 view .LVU220
 892 02c8 28B9     		cbnz	r0, .L82
 205:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 893              		.loc 1 205 4 is_stmt 1 view .LVU221
 205:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 894              		.loc 1 205 13 is_stmt 0 view .LVU222
 895 02ca 6148     		ldr	r0, .L119
 896              	.LVL88:
 205:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 897              		.loc 1 205 13 view .LVU223
 898 02cc 2421     		movs	r1, #36
 899              	.LVL89:
 205:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 900              		.loc 1 205 13 view .LVU224
 901 02ce FFF7FEFF 		bl	tmc4331_readInt
 902              	.LVL90:
 205:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 903              		.loc 1 205 53 view .LVU225
 904 02d2 0012     		asrs	r0, r0, #8
 905 02d4 E8E7     		b	.L116
 906              	.LVL91:
 907              	.L82:
 206:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VMAX, abs(*value));
 908              		.loc 1 206 10 is_stmt 1 view .LVU226
 207:boards/TMC4331_eval.c **** 		}
 909              		.loc 1 207 4 view .LVU227
 207:boards/TMC4331_eval.c **** 		}
 910              		.loc 1 207 46 is_stmt 0 view .LVU228
 911 02d6 3268     		ldr	r2, [r6]
 912              	.LVL92:
 207:boards/TMC4331_eval.c **** 		}
 913              		.loc 1 207 4 view .LVU229
 914 02d8 002A     		cmp	r2, #0
 915 02da B8BF     		it	lt
 916 02dc 5242     		rsblt	r2, r2, #0
 917 02de 2421     		movs	r1, #36
 918              	.LVL93:
 207:boards/TMC4331_eval.c **** 		}
 919              		.loc 1 207 4 view .LVU230
 920 02e0 E6E7     		b	.L114
 921              	.LVL94:
 922              	.L75:
 212:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VACTUAL);
 923              		.loc 1 212 3 is_stmt 1 view .LVU231
 212:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VACTUAL);
 924              		.loc 1 212 5 is_stmt 0 view .LVU232
 925 02e2 0028     		cmp	r0, #0
 926 02e4 D9D1     		bne	.L106
 213:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 927              		.loc 1 213 4 is_stmt 1 view .LVU233
 213:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 928              		.loc 1 213 13 is_stmt 0 view .LVU234
 929 02e6 2221     		movs	r1, #34
 930              	.LVL95:
 213:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 931              		.loc 1 213 13 view .LVU235
 932 02e8 DBE7     		b	.L112
 933              	.LVL96:
 934              	.L74:
 220:boards/TMC4331_eval.c **** 			*value = vmax_position;
 935              		.loc 1 220 3 is_stmt 1 view .LVU236
 936 02ea 5A4C     		ldr	r4, .L119+4
 220:boards/TMC4331_eval.c **** 			*value = vmax_position;
 937              		.loc 1 220 5 is_stmt 0 view .LVU237
 938 02ec 18B9     		cbnz	r0, .L83
 221:boards/TMC4331_eval.c **** 			//*value = tmc4331_readInt(&TMC4331, TMC4331_VMAX) >> 8;
 939              		.loc 1 221 4 is_stmt 1 view .LVU238
 221:boards/TMC4331_eval.c **** 			//*value = tmc4331_readInt(&TMC4331, TMC4331_VMAX) >> 8;
 940              		.loc 1 221 11 is_stmt 0 view .LVU239
 941 02ee D4F8BC32 		ldr	r3, [r4, #700]
 942 02f2 3360     		str	r3, [r6]
 943 02f4 E0E7     		b	.L54
 944              	.L83:
 223:boards/TMC4331_eval.c **** 			vmax_position = *value;
 945              		.loc 1 223 10 is_stmt 1 view .LVU240
 224:boards/TMC4331_eval.c **** 
 946              		.loc 1 224 4 view .LVU241
 224:boards/TMC4331_eval.c **** 
 947              		.loc 1 224 18 is_stmt 0 view .LVU242
 948 02f6 3368     		ldr	r3, [r6]
 949 02f8 C4F8BC32 		str	r3, [r4, #700]
 226:boards/TMC4331_eval.c **** 				tmc4331_writeInt(motorToIC(motor), TMC4331_VMAX, tmc4331_discardVelocityDecimals(vmax_position)
 950              		.loc 1 226 4 is_stmt 1 view .LVU243
 951              	.LBB31:
 952              	.LBI31:
  49:boards/TMC4331_eval.c **** {
 953              		.loc 1 49 31 view .LVU244
 954              	.LVL97:
  49:boards/TMC4331_eval.c **** {
 955              		.loc 1 49 31 is_stmt 0 view .LVU245
 956              	.LBE31:
  51:boards/TMC4331_eval.c **** 
 957              		.loc 1 51 2 is_stmt 1 view .LVU246
  53:boards/TMC4331_eval.c **** }
 958              		.loc 1 53 2 view .LVU247
 226:boards/TMC4331_eval.c **** 				tmc4331_writeInt(motorToIC(motor), TMC4331_VMAX, tmc4331_discardVelocityDecimals(vmax_position)
 959              		.loc 1 226 7 is_stmt 0 view .LVU248
 960 02fc 2021     		movs	r1, #32
 961              	.LVL98:
 226:boards/TMC4331_eval.c **** 				tmc4331_writeInt(motorToIC(motor), TMC4331_VMAX, tmc4331_discardVelocityDecimals(vmax_position)
 962              		.loc 1 226 7 view .LVU249
 963 02fe 04F12400 		add	r0, r4, #36
 964              	.LVL99:
 226:boards/TMC4331_eval.c **** 				tmc4331_writeInt(motorToIC(motor), TMC4331_VMAX, tmc4331_discardVelocityDecimals(vmax_position)
 965              		.loc 1 226 7 view .LVU250
 966 0302 FFF7FEFF 		bl	tmc4331_readInt
 967              	.LVL100:
 226:boards/TMC4331_eval.c **** 				tmc4331_writeInt(motorToIC(motor), TMC4331_VMAX, tmc4331_discardVelocityDecimals(vmax_position)
 968              		.loc 1 226 6 view .LVU251
 969 0306 10F00400 		ands	r0, r0, #4
 970 030a D4D0     		beq	.L113
 227:boards/TMC4331_eval.c **** 		}
 971              		.loc 1 227 5 is_stmt 1 view .LVU252
 972              	.LBB32:
 973              	.LBI32:
  49:boards/TMC4331_eval.c **** {
 974              		.loc 1 49 31 view .LVU253
 975              	.LVL101:
  49:boards/TMC4331_eval.c **** {
 976              		.loc 1 49 31 is_stmt 0 view .LVU254
 977              	.LBE32:
  51:boards/TMC4331_eval.c **** 
 978              		.loc 1 51 2 is_stmt 1 view .LVU255
  53:boards/TMC4331_eval.c **** }
 979              		.loc 1 53 2 view .LVU256
 227:boards/TMC4331_eval.c **** 		}
 980              		.loc 1 227 5 is_stmt 0 view .LVU257
 981 030c D4F8BC02 		ldr	r0, [r4, #700]
 982 0310 FFF7FEFF 		bl	tmc4331_discardVelocityDecimals
 983              	.LVL102:
 984 0314 2421     		movs	r1, #36
 985 0316 0246     		mov	r2, r0
 986 0318 6018     		adds	r0, r4, r1
 987 031a CAE7     		b	.L117
 988              	.LVL103:
 989              	.L73:
 232:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_AMAX)>>2;
 990              		.loc 1 232 3 is_stmt 1 view .LVU258
 232:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_AMAX)>>2;
 991              		.loc 1 232 5 is_stmt 0 view .LVU259
 992 031c 28B9     		cbnz	r0, .L84
 233:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 993              		.loc 1 233 4 is_stmt 1 view .LVU260
 233:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 994              		.loc 1 233 13 is_stmt 0 view .LVU261
 995 031e 2821     		movs	r1, #40
 996              	.LVL104:
 997              	.L118:
 310:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 998              		.loc 1 310 13 view .LVU262
 999 0320 4B48     		ldr	r0, .L119
 1000              	.LVL105:
 310:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1001              		.loc 1 310 13 view .LVU263
 1002 0322 FFF7FEFF 		bl	tmc4331_readInt
 1003              	.LVL106:
 310:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1004              		.loc 1 310 54 view .LVU264
 1005 0326 8010     		asrs	r0, r0, #2
 1006 0328 BEE7     		b	.L116
 1007              	.LVL107:
 1008              	.L84:
 234:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 1009              		.loc 1 234 10 is_stmt 1 view .LVU265
 235:boards/TMC4331_eval.c **** 			{
 1010              		.loc 1 235 4 view .LVU266
 235:boards/TMC4331_eval.c **** 			{
 1011              		.loc 1 235 7 is_stmt 0 view .LVU267
 1012 032a 3268     		ldr	r2, [r6]
 1013              	.LVL108:
 235:boards/TMC4331_eval.c **** 			{
 1014              		.loc 1 235 14 view .LVU268
 1015 032c 950D     		lsrs	r5, r2, #22
 1016 032e AD05     		lsls	r5, r5, #22
 235:boards/TMC4331_eval.c **** 			{
 1017              		.loc 1 235 6 view .LVU269
 1018 0330 002D     		cmp	r5, #0
 1019 0332 40F08B80 		bne	.L111
 241:boards/TMC4331_eval.c **** 			}
 1020              		.loc 1 241 5 is_stmt 1 view .LVU270
 1021 0336 9200     		lsls	r2, r2, #2
 1022 0338 2821     		movs	r1, #40
 1023              	.LVL109:
 1024              	.L115:
 341:boards/TMC4331_eval.c **** 			}
 1025              		.loc 1 341 5 is_stmt 0 view .LVU271
 1026 033a 4548     		ldr	r0, .L119
 1027              	.LVL110:
 341:boards/TMC4331_eval.c **** 			}
 1028              		.loc 1 341 5 view .LVU272
 1029 033c FFF7FEFF 		bl	tmc4331_writeInt
 1030              	.LVL111:
 1031 0340 BAE7     		b	.L54
 1032              	.LVL112:
 1033              	.L72:
 247:boards/TMC4331_eval.c **** 			*value = TMC4331_FIELD_READ(&TMC4331, TMC4331_STATUS, TMC4331_TARGET_REACHED_F_MASK, TMC4331_TAR
 1034              		.loc 1 247 3 is_stmt 1 view .LVU273
 247:boards/TMC4331_eval.c **** 			*value = TMC4331_FIELD_READ(&TMC4331, TMC4331_STATUS, TMC4331_TARGET_REACHED_F_MASK, TMC4331_TAR
 1035              		.loc 1 247 5 is_stmt 0 view .LVU274
 1036 0342 0028     		cmp	r0, #0
 1037 0344 A9D1     		bne	.L106
 248:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1038              		.loc 1 248 4 is_stmt 1 view .LVU275
 248:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1039              		.loc 1 248 13 is_stmt 0 view .LVU276
 1040 0346 4248     		ldr	r0, .L119
 1041              	.LVL113:
 248:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1042              		.loc 1 248 13 view .LVU277
 1043 0348 0F21     		movs	r1, #15
 1044              	.LVL114:
 248:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1045              		.loc 1 248 13 view .LVU278
 1046 034a FFF7FEFF 		bl	tmc4331_readInt
 1047              	.LVL115:
 248:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1048              		.loc 1 248 13 view .LVU279
 1049 034e 00F00100 		and	r0, r0, #1
 1050 0352 A9E7     		b	.L116
 1051              	.LVL116:
 1052              	.L71:
 255:boards/TMC4331_eval.c **** 			*value = TMC4331_FIELD_READ(&TMC4331, TMC4331_RAMPMODE, TMC4331_RAMP_PROFILE_MASK, TMC4331_RAMP_
 1053              		.loc 1 255 3 is_stmt 1 view .LVU280
 255:boards/TMC4331_eval.c **** 			*value = TMC4331_FIELD_READ(&TMC4331, TMC4331_RAMPMODE, TMC4331_RAMP_PROFILE_MASK, TMC4331_RAMP_
 1054              		.loc 1 255 5 is_stmt 0 view .LVU281
 1055 0354 48B9     		cbnz	r0, .L85
 256:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1056              		.loc 1 256 4 is_stmt 1 view .LVU282
 256:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1057              		.loc 1 256 13 is_stmt 0 view .LVU283
 1058 0356 3E48     		ldr	r0, .L119
 1059              	.LVL117:
 256:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1060              		.loc 1 256 13 view .LVU284
 1061 0358 2021     		movs	r1, #32
 1062              	.LVL118:
 256:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1063              		.loc 1 256 13 view .LVU285
 1064 035a FFF7FEFF 		bl	tmc4331_readInt
 1065              	.LVL119:
 256:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1066              		.loc 1 256 13 view .LVU286
 1067 035e 00F00300 		and	r0, r0, #3
 256:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1068              		.loc 1 256 115 view .LVU287
 1069 0362 831E     		subs	r3, r0, #2
 1070 0364 5842     		rsbs	r0, r3, #0
 1071 0366 5841     		adcs	r0, r0, r3
 1072 0368 9EE7     		b	.L116
 1073              	.LVL120:
 1074              	.L85:
 257:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331, TMC4331_RAMPMODE, (*value) ? TMC4331_RAMP_SSHAPE : TMC4331_RAMP_TRAPE
 1075              		.loc 1 257 10 is_stmt 1 view .LVU288
 258:boards/TMC4331_eval.c **** 		}
 1076              		.loc 1 258 4 view .LVU289
 1077 036a 3368     		ldr	r3, [r6]
 1078 036c 002B     		cmp	r3, #0
 1079 036e 14BF     		ite	ne
 1080 0370 0222     		movne	r2, #2
 1081              	.LVL121:
 258:boards/TMC4331_eval.c **** 		}
 1082              		.loc 1 258 4 is_stmt 0 view .LVU290
 1083 0372 0122     		moveq	r2, #1
 1084 0374 2021     		movs	r1, #32
 1085              	.LVL122:
 258:boards/TMC4331_eval.c **** 		}
 1086              		.loc 1 258 4 view .LVU291
 1087 0376 9BE7     		b	.L114
 1088              	.LVL123:
 1089              	.L70:
 263:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VSTART);
 1090              		.loc 1 263 3 is_stmt 1 view .LVU292
 263:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VSTART);
 1091              		.loc 1 263 5 is_stmt 0 view .LVU293
 1092 0378 08B9     		cbnz	r0, .L87
 264:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1093              		.loc 1 264 4 is_stmt 1 view .LVU294
 264:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1094              		.loc 1 264 13 is_stmt 0 view .LVU295
 1095 037a 2521     		movs	r1, #37
 1096              	.LVL124:
 264:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1097              		.loc 1 264 13 view .LVU296
 1098 037c 91E7     		b	.L112
 1099              	.LVL125:
 1100              	.L87:
 265:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VSTART, *value);
 1101              		.loc 1 265 10 is_stmt 1 view .LVU297
 266:boards/TMC4331_eval.c **** 		}
 1102              		.loc 1 266 4 view .LVU298
 1103 037e 3268     		ldr	r2, [r6]
 1104              	.LVL126:
 266:boards/TMC4331_eval.c **** 		}
 1105              		.loc 1 266 4 is_stmt 0 view .LVU299
 1106 0380 2521     		movs	r1, #37
 1107              	.LVL127:
 266:boards/TMC4331_eval.c **** 		}
 1108              		.loc 1 266 4 view .LVU300
 1109 0382 95E7     		b	.L114
 1110              	.LVL128:
 1111              	.L69:
 271:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_ASTART)>>2;
 1112              		.loc 1 271 3 is_stmt 1 view .LVU301
 271:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_ASTART)>>2;
 1113              		.loc 1 271 5 is_stmt 0 view .LVU302
 1114 0384 08B9     		cbnz	r0, .L88
 272:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1115              		.loc 1 272 4 is_stmt 1 view .LVU303
 272:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1116              		.loc 1 272 13 is_stmt 0 view .LVU304
 1117 0386 2A21     		movs	r1, #42
 1118              	.LVL129:
 272:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1119              		.loc 1 272 13 view .LVU305
 1120 0388 CAE7     		b	.L118
 1121              	.LVL130:
 1122              	.L88:
 273:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 1123              		.loc 1 273 10 is_stmt 1 view .LVU306
 274:boards/TMC4331_eval.c **** 			{
 1124              		.loc 1 274 4 view .LVU307
 274:boards/TMC4331_eval.c **** 			{
 1125              		.loc 1 274 7 is_stmt 0 view .LVU308
 1126 038a 3268     		ldr	r2, [r6]
 1127              	.LVL131:
 274:boards/TMC4331_eval.c **** 			{
 1128              		.loc 1 274 14 view .LVU309
 1129 038c 950D     		lsrs	r5, r2, #22
 1130 038e AD05     		lsls	r5, r5, #22
 274:boards/TMC4331_eval.c **** 			{
 1131              		.loc 1 274 6 view .LVU310
 1132 0390 002D     		cmp	r5, #0
 1133 0392 5BD1     		bne	.L111
 280:boards/TMC4331_eval.c **** 			}
 1134              		.loc 1 280 5 is_stmt 1 view .LVU311
 1135 0394 9200     		lsls	r2, r2, #2
 1136 0396 2A21     		movs	r1, #42
 1137              	.LVL132:
 280:boards/TMC4331_eval.c **** 			}
 1138              		.loc 1 280 5 is_stmt 0 view .LVU312
 1139 0398 CFE7     		b	.L115
 1140              	.LVL133:
 1141              	.L68:
 286:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_DMAX)>>2;
 1142              		.loc 1 286 3 is_stmt 1 view .LVU313
 286:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_DMAX)>>2;
 1143              		.loc 1 286 5 is_stmt 0 view .LVU314
 1144 039a 08B9     		cbnz	r0, .L89
 287:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1145              		.loc 1 287 4 is_stmt 1 view .LVU315
 287:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1146              		.loc 1 287 13 is_stmt 0 view .LVU316
 1147 039c 2921     		movs	r1, #41
 1148              	.LVL134:
 287:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1149              		.loc 1 287 13 view .LVU317
 1150 039e BFE7     		b	.L118
 1151              	.LVL135:
 1152              	.L89:
 288:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 1153              		.loc 1 288 10 is_stmt 1 view .LVU318
 289:boards/TMC4331_eval.c **** 			{
 1154              		.loc 1 289 4 view .LVU319
 289:boards/TMC4331_eval.c **** 			{
 1155              		.loc 1 289 7 is_stmt 0 view .LVU320
 1156 03a0 3268     		ldr	r2, [r6]
 1157              	.LVL136:
 289:boards/TMC4331_eval.c **** 			{
 1158              		.loc 1 289 14 view .LVU321
 1159 03a2 950D     		lsrs	r5, r2, #22
 1160 03a4 AD05     		lsls	r5, r5, #22
 289:boards/TMC4331_eval.c **** 			{
 1161              		.loc 1 289 6 view .LVU322
 1162 03a6 002D     		cmp	r5, #0
 1163 03a8 50D1     		bne	.L111
 295:boards/TMC4331_eval.c **** 			}
 1164              		.loc 1 295 5 is_stmt 1 view .LVU323
 1165 03aa 9200     		lsls	r2, r2, #2
 1166 03ac 2921     		movs	r1, #41
 1167              	.LVL137:
 295:boards/TMC4331_eval.c **** 			}
 1168              		.loc 1 295 5 is_stmt 0 view .LVU324
 1169 03ae C4E7     		b	.L115
 1170              	.LVL138:
 1171              	.L67:
 301:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VBREAK);
 1172              		.loc 1 301 3 is_stmt 1 view .LVU325
 301:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VBREAK);
 1173              		.loc 1 301 5 is_stmt 0 view .LVU326
 1174 03b0 08B9     		cbnz	r0, .L90
 302:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1175              		.loc 1 302 4 is_stmt 1 view .LVU327
 302:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1176              		.loc 1 302 13 is_stmt 0 view .LVU328
 1177 03b2 2721     		movs	r1, #39
 1178              	.LVL139:
 302:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1179              		.loc 1 302 13 view .LVU329
 1180 03b4 75E7     		b	.L112
 1181              	.LVL140:
 1182              	.L90:
 303:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VBREAK, *value);
 1183              		.loc 1 303 10 is_stmt 1 view .LVU330
 304:boards/TMC4331_eval.c **** 		}
 1184              		.loc 1 304 4 view .LVU331
 1185 03b6 3268     		ldr	r2, [r6]
 1186              	.LVL141:
 304:boards/TMC4331_eval.c **** 		}
 1187              		.loc 1 304 4 is_stmt 0 view .LVU332
 1188 03b8 2721     		movs	r1, #39
 1189              	.LVL142:
 304:boards/TMC4331_eval.c **** 		}
 1190              		.loc 1 304 4 view .LVU333
 1191 03ba 79E7     		b	.L114
 1192              	.LVL143:
 1193              	.L66:
 309:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_DFINAL)>>2;
 1194              		.loc 1 309 3 is_stmt 1 view .LVU334
 309:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_DFINAL)>>2;
 1195              		.loc 1 309 5 is_stmt 0 view .LVU335
 1196 03bc 08B9     		cbnz	r0, .L91
 310:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1197              		.loc 1 310 4 is_stmt 1 view .LVU336
 310:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1198              		.loc 1 310 13 is_stmt 0 view .LVU337
 1199 03be 2B21     		movs	r1, #43
 1200              	.LVL144:
 310:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1201              		.loc 1 310 13 view .LVU338
 1202 03c0 AEE7     		b	.L118
 1203              	.LVL145:
 1204              	.L91:
 311:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 1205              		.loc 1 311 10 is_stmt 1 view .LVU339
 312:boards/TMC4331_eval.c **** 			{
 1206              		.loc 1 312 4 view .LVU340
 312:boards/TMC4331_eval.c **** 			{
 1207              		.loc 1 312 7 is_stmt 0 view .LVU341
 1208 03c2 3268     		ldr	r2, [r6]
 1209              	.LVL146:
 312:boards/TMC4331_eval.c **** 			{
 1210              		.loc 1 312 14 view .LVU342
 1211 03c4 950D     		lsrs	r5, r2, #22
 1212 03c6 AD05     		lsls	r5, r5, #22
 312:boards/TMC4331_eval.c **** 			{
 1213              		.loc 1 312 6 view .LVU343
 1214 03c8 002D     		cmp	r5, #0
 1215 03ca 3FD1     		bne	.L111
 318:boards/TMC4331_eval.c **** 			}
 1216              		.loc 1 318 5 is_stmt 1 view .LVU344
 1217 03cc 9200     		lsls	r2, r2, #2
 1218 03ce 2B21     		movs	r1, #43
 1219              	.LVL147:
 318:boards/TMC4331_eval.c **** 			}
 1220              		.loc 1 318 5 is_stmt 0 view .LVU345
 1221 03d0 B3E7     		b	.L115
 1222              	.LVL148:
 1223              	.L65:
 324:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VSTOP);
 1224              		.loc 1 324 3 is_stmt 1 view .LVU346
 324:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VSTOP);
 1225              		.loc 1 324 5 is_stmt 0 view .LVU347
 1226 03d2 08B9     		cbnz	r0, .L92
 325:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1227              		.loc 1 325 4 is_stmt 1 view .LVU348
 325:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1228              		.loc 1 325 13 is_stmt 0 view .LVU349
 1229 03d4 2621     		movs	r1, #38
 1230              	.LVL149:
 325:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1231              		.loc 1 325 13 view .LVU350
 1232 03d6 64E7     		b	.L112
 1233              	.LVL150:
 1234              	.L92:
 326:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VSTOP, *value);
 1235              		.loc 1 326 10 is_stmt 1 view .LVU351
 327:boards/TMC4331_eval.c **** 		}
 1236              		.loc 1 327 4 view .LVU352
 1237 03d8 3268     		ldr	r2, [r6]
 1238              	.LVL151:
 327:boards/TMC4331_eval.c **** 		}
 1239              		.loc 1 327 4 is_stmt 0 view .LVU353
 1240 03da 2621     		movs	r1, #38
 1241              	.LVL152:
 327:boards/TMC4331_eval.c **** 		}
 1242              		.loc 1 327 4 view .LVU354
 1243 03dc 68E7     		b	.L114
 1244              	.LVL153:
 1245              	.L64:
 332:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_DSTOP);
 1246              		.loc 1 332 3 is_stmt 1 view .LVU355
 332:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_DSTOP);
 1247              		.loc 1 332 5 is_stmt 0 view .LVU356
 1248 03de 08B9     		cbnz	r0, .L93
 333:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1249              		.loc 1 333 4 is_stmt 1 view .LVU357
 333:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1250              		.loc 1 333 13 is_stmt 0 view .LVU358
 1251 03e0 2C21     		movs	r1, #44
 1252              	.LVL154:
 333:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1253              		.loc 1 333 13 view .LVU359
 1254 03e2 5EE7     		b	.L112
 1255              	.LVL155:
 1256              	.L93:
 334:boards/TMC4331_eval.c **** 			if(*value & ~0x3FFFFF)
 1257              		.loc 1 334 10 is_stmt 1 view .LVU360
 335:boards/TMC4331_eval.c **** 			{
 1258              		.loc 1 335 4 view .LVU361
 335:boards/TMC4331_eval.c **** 			{
 1259              		.loc 1 335 7 is_stmt 0 view .LVU362
 1260 03e4 3268     		ldr	r2, [r6]
 1261              	.LVL156:
 335:boards/TMC4331_eval.c **** 			{
 1262              		.loc 1 335 14 view .LVU363
 1263 03e6 950D     		lsrs	r5, r2, #22
 1264 03e8 AD05     		lsls	r5, r5, #22
 335:boards/TMC4331_eval.c **** 			{
 1265              		.loc 1 335 6 view .LVU364
 1266 03ea 7DBB     		cbnz	r5, .L111
 341:boards/TMC4331_eval.c **** 			}
 1267              		.loc 1 341 5 is_stmt 1 view .LVU365
 1268 03ec 2C21     		movs	r1, #44
 1269              	.LVL157:
 341:boards/TMC4331_eval.c **** 			}
 1270              		.loc 1 341 5 is_stmt 0 view .LVU366
 1271 03ee A4E7     		b	.L115
 1272              	.LVL158:
 1273              	.L63:
 347:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW1);
 1274              		.loc 1 347 3 is_stmt 1 view .LVU367
 347:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW1);
 1275              		.loc 1 347 5 is_stmt 0 view .LVU368
 1276 03f0 08B9     		cbnz	r0, .L94
 348:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1277              		.loc 1 348 4 is_stmt 1 view .LVU369
 348:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1278              		.loc 1 348 13 is_stmt 0 view .LVU370
 1279 03f2 2D21     		movs	r1, #45
 1280              	.LVL159:
 348:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1281              		.loc 1 348 13 view .LVU371
 1282 03f4 55E7     		b	.L112
 1283              	.LVL160:
 1284              	.L94:
 349:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_BOW1, *value);
 1285              		.loc 1 349 10 is_stmt 1 view .LVU372
 350:boards/TMC4331_eval.c **** 		}
 1286              		.loc 1 350 4 view .LVU373
 1287 03f6 3268     		ldr	r2, [r6]
 1288              	.LVL161:
 350:boards/TMC4331_eval.c **** 		}
 1289              		.loc 1 350 4 is_stmt 0 view .LVU374
 1290 03f8 2D21     		movs	r1, #45
 1291              	.LVL162:
 350:boards/TMC4331_eval.c **** 		}
 1292              		.loc 1 350 4 view .LVU375
 1293 03fa 59E7     		b	.L114
 1294              	.LVL163:
 1295              	.L62:
 355:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW2);
 1296              		.loc 1 355 3 is_stmt 1 view .LVU376
 355:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW2);
 1297              		.loc 1 355 5 is_stmt 0 view .LVU377
 1298 03fc 08B9     		cbnz	r0, .L95
 356:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1299              		.loc 1 356 4 is_stmt 1 view .LVU378
 356:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1300              		.loc 1 356 13 is_stmt 0 view .LVU379
 1301 03fe 2E21     		movs	r1, #46
 1302              	.LVL164:
 356:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1303              		.loc 1 356 13 view .LVU380
 1304 0400 4FE7     		b	.L112
 1305              	.LVL165:
 1306              	.L95:
 357:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_BOW2, *value);
 1307              		.loc 1 357 10 is_stmt 1 view .LVU381
 358:boards/TMC4331_eval.c **** 		}
 1308              		.loc 1 358 4 view .LVU382
 1309 0402 3268     		ldr	r2, [r6]
 1310              	.LVL166:
 358:boards/TMC4331_eval.c **** 		}
 1311              		.loc 1 358 4 is_stmt 0 view .LVU383
 1312 0404 2E21     		movs	r1, #46
 1313              	.LVL167:
 358:boards/TMC4331_eval.c **** 		}
 1314              		.loc 1 358 4 view .LVU384
 1315 0406 53E7     		b	.L114
 1316              	.LVL168:
 1317              	.L61:
 363:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW3);
 1318              		.loc 1 363 3 is_stmt 1 view .LVU385
 363:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW3);
 1319              		.loc 1 363 5 is_stmt 0 view .LVU386
 1320 0408 08B9     		cbnz	r0, .L96
 364:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1321              		.loc 1 364 4 is_stmt 1 view .LVU387
 364:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1322              		.loc 1 364 13 is_stmt 0 view .LVU388
 1323 040a 2F21     		movs	r1, #47
 1324              	.LVL169:
 364:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1325              		.loc 1 364 13 view .LVU389
 1326 040c 49E7     		b	.L112
 1327              	.LVL170:
 1328              	.L96:
 365:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_BOW3, *value);
 1329              		.loc 1 365 10 is_stmt 1 view .LVU390
 366:boards/TMC4331_eval.c **** 		}
 1330              		.loc 1 366 4 view .LVU391
 1331 040e 3268     		ldr	r2, [r6]
 1332              	.LVL171:
 366:boards/TMC4331_eval.c **** 		}
 1333              		.loc 1 366 4 is_stmt 0 view .LVU392
 1334 0410 2F21     		movs	r1, #47
 1335              	.LVL172:
 366:boards/TMC4331_eval.c **** 		}
 1336              		.loc 1 366 4 view .LVU393
 1337 0412 4DE7     		b	.L114
 1338              	.LVL173:
 1339              	.L60:
 371:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW4);
 1340              		.loc 1 371 3 is_stmt 1 view .LVU394
 371:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_BOW4);
 1341              		.loc 1 371 5 is_stmt 0 view .LVU395
 1342 0414 08B9     		cbnz	r0, .L97
 372:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1343              		.loc 1 372 4 is_stmt 1 view .LVU396
 372:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1344              		.loc 1 372 13 is_stmt 0 view .LVU397
 1345 0416 3021     		movs	r1, #48
 1346              	.LVL174:
 372:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1347              		.loc 1 372 13 view .LVU398
 1348 0418 43E7     		b	.L112
 1349              	.LVL175:
 1350              	.L97:
 373:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_BOW4, *value);
 1351              		.loc 1 373 10 is_stmt 1 view .LVU399
 374:boards/TMC4331_eval.c **** 		}
 1352              		.loc 1 374 4 view .LVU400
 1353 041a 3268     		ldr	r2, [r6]
 1354              	.LVL176:
 374:boards/TMC4331_eval.c **** 		}
 1355              		.loc 1 374 4 is_stmt 0 view .LVU401
 1356 041c 3021     		movs	r1, #48
 1357              	.LVL177:
 374:boards/TMC4331_eval.c **** 		}
 1358              		.loc 1 374 4 view .LVU402
 1359 041e 47E7     		b	.L114
 1360              	.LVL178:
 1361              	.L59:
 379:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VIRT_STOP_LEFT);
 1362              		.loc 1 379 3 is_stmt 1 view .LVU403
 379:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VIRT_STOP_LEFT);
 1363              		.loc 1 379 5 is_stmt 0 view .LVU404
 1364 0420 08B9     		cbnz	r0, .L98
 380:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1365              		.loc 1 380 4 is_stmt 1 view .LVU405
 380:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1366              		.loc 1 380 13 is_stmt 0 view .LVU406
 1367 0422 3321     		movs	r1, #51
 1368              	.LVL179:
 380:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1369              		.loc 1 380 13 view .LVU407
 1370 0424 3DE7     		b	.L112
 1371              	.LVL180:
 1372              	.L98:
 381:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VIRT_STOP_LEFT, *value);
 1373              		.loc 1 381 10 is_stmt 1 view .LVU408
 382:boards/TMC4331_eval.c **** 		}
 1374              		.loc 1 382 4 view .LVU409
 1375 0426 3268     		ldr	r2, [r6]
 1376              	.LVL181:
 382:boards/TMC4331_eval.c **** 		}
 1377              		.loc 1 382 4 is_stmt 0 view .LVU410
 1378 0428 3321     		movs	r1, #51
 1379              	.LVL182:
 382:boards/TMC4331_eval.c **** 		}
 1380              		.loc 1 382 4 view .LVU411
 1381 042a 41E7     		b	.L114
 1382              	.LVL183:
 1383              	.L57:
 387:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VIRT_STOP_RIGHT);
 1384              		.loc 1 387 3 is_stmt 1 view .LVU412
 387:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_VIRT_STOP_RIGHT);
 1385              		.loc 1 387 5 is_stmt 0 view .LVU413
 1386 042c 08B9     		cbnz	r0, .L99
 388:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1387              		.loc 1 388 4 is_stmt 1 view .LVU414
 388:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1388              		.loc 1 388 13 is_stmt 0 view .LVU415
 1389 042e 3421     		movs	r1, #52
 1390              	.LVL184:
 388:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1391              		.loc 1 388 13 view .LVU416
 1392 0430 37E7     		b	.L112
 1393              	.LVL185:
 1394              	.L99:
 389:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_VIRT_STOP_RIGHT, *value);
 1395              		.loc 1 389 10 is_stmt 1 view .LVU417
 390:boards/TMC4331_eval.c **** 		}
 1396              		.loc 1 390 4 view .LVU418
 1397 0432 3268     		ldr	r2, [r6]
 1398              	.LVL186:
 390:boards/TMC4331_eval.c **** 		}
 1399              		.loc 1 390 4 is_stmt 0 view .LVU419
 1400 0434 3421     		movs	r1, #52
 1401              	.LVL187:
 390:boards/TMC4331_eval.c **** 		}
 1402              		.loc 1 390 4 view .LVU420
 1403 0436 3BE7     		b	.L114
 1404              	.LVL188:
 1405              	.L79:
 395:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_STDBY_DELAY);
 1406              		.loc 1 395 3 is_stmt 1 view .LVU421
 395:boards/TMC4331_eval.c **** 			*value = tmc4331_readInt(&TMC4331, TMC4331_STDBY_DELAY);
 1407              		.loc 1 395 5 is_stmt 0 view .LVU422
 1408 0438 08B9     		cbnz	r0, .L100
 396:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1409              		.loc 1 396 4 is_stmt 1 view .LVU423
 396:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1410              		.loc 1 396 13 is_stmt 0 view .LVU424
 1411 043a 1521     		movs	r1, #21
 1412              	.LVL189:
 396:boards/TMC4331_eval.c **** 		} else if(readWrite == WRITE) {
 1413              		.loc 1 396 13 view .LVU425
 1414 043c 31E7     		b	.L112
 1415              	.LVL190:
 1416              	.L100:
 397:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331,  TMC4331_STDBY_DELAY, *value*160000);
 1417              		.loc 1 397 10 is_stmt 1 view .LVU426
 398:boards/TMC4331_eval.c **** 		}
 1418              		.loc 1 398 4 view .LVU427
 1419 043e 1B68     		ldr	r3, [r3]
 1420              	.LVL191:
 398:boards/TMC4331_eval.c **** 		}
 1421              		.loc 1 398 4 is_stmt 0 view .LVU428
 1422 0440 054A     		ldr	r2, .L119+8
 1423              	.LVL192:
 398:boards/TMC4331_eval.c **** 		}
 1424              		.loc 1 398 4 view .LVU429
 1425 0442 1521     		movs	r1, #21
 1426              	.LVL193:
 398:boards/TMC4331_eval.c **** 		}
 1427              		.loc 1 398 4 view .LVU430
 1428 0444 5A43     		muls	r2, r3, r2
 1429 0446 33E7     		b	.L114
 1430              	.LVL194:
 1431              	.L101:
 182:boards/TMC4331_eval.c **** 
 1432              		.loc 1 182 10 view .LVU431
 1433 0448 0825     		movs	r5, #8
 1434 044a 35E7     		b	.L54
 1435              	.LVL195:
 1436              	.L111:
 237:boards/TMC4331_eval.c **** 			}
 1437              		.loc 1 237 12 view .LVU432
 1438 044c 1025     		movs	r5, #16
 1439              	.LVL196:
 237:boards/TMC4331_eval.c **** 			}
 1440              		.loc 1 237 12 view .LVU433
 1441 044e 33E7     		b	.L54
 1442              	.L120:
 1443              		.align	2
 1444              	.L119:
 1445 0450 24000000 		.word	.LANCHOR0+36
 1446 0454 00000000 		.word	.LANCHOR0
 1447 0458 00710200 		.word	160000
 1448              		.cfi_endproc
 1449              	.LFE12:
 1451              		.align	1
 1452              		.syntax unified
 1453              		.thumb
 1454              		.thumb_func
 1455              		.fpu softvfp
 1457              	SAP:
 1458              	.LVL197:
 1459              	.LFB13:
 409:boards/TMC4331_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 1460              		.loc 1 409 1 is_stmt 1 view -0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 8
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 410:boards/TMC4331_eval.c **** }
 1464              		.loc 1 410 2 view .LVU435
 409:boards/TMC4331_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 1465              		.loc 1 409 1 is_stmt 0 view .LVU436
 1466 045c 07B5     		push	{r0, r1, r2, lr}
 1467              	.LCFI10:
 1468              		.cfi_def_cfa_offset 16
 1469              		.cfi_offset 14, -4
 409:boards/TMC4331_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 1470              		.loc 1 409 1 view .LVU437
 1471 045e 0192     		str	r2, [sp, #4]
 410:boards/TMC4331_eval.c **** }
 1472              		.loc 1 410 9 view .LVU438
 1473 0460 01AB     		add	r3, sp, #4
 1474 0462 0246     		mov	r2, r0
 1475              	.LVL198:
 410:boards/TMC4331_eval.c **** }
 1476              		.loc 1 410 9 view .LVU439
 1477 0464 0120     		movs	r0, #1
 1478              	.LVL199:
 410:boards/TMC4331_eval.c **** }
 1479              		.loc 1 410 9 view .LVU440
 1480 0466 FFF7EDFE 		bl	handleParameter
 1481              	.LVL200:
 411:boards/TMC4331_eval.c **** 
 1482              		.loc 1 411 1 view .LVU441
 1483 046a 03B0     		add	sp, sp, #12
 1484              	.LCFI11:
 1485              		.cfi_def_cfa_offset 4
 1486              		@ sp needed
 1487 046c 5DF804FB 		ldr	pc, [sp], #4
 1488              		.cfi_endproc
 1489              	.LFE13:
 1491              		.align	1
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1495              		.fpu softvfp
 1497              	GAP:
 1498              	.LVL201:
 1499              	.LFB14:
 414:boards/TMC4331_eval.c **** 	return handleParameter(READ, motor, type, value);
 1500              		.loc 1 414 1 is_stmt 1 view -0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504              		@ link register save eliminated.
 415:boards/TMC4331_eval.c **** }
 1505              		.loc 1 415 2 view .LVU443
 414:boards/TMC4331_eval.c **** 	return handleParameter(READ, motor, type, value);
 1506              		.loc 1 414 1 is_stmt 0 view .LVU444
 1507 0470 1346     		mov	r3, r2
 415:boards/TMC4331_eval.c **** }
 1508              		.loc 1 415 9 view .LVU445
 1509 0472 0246     		mov	r2, r0
 1510              	.LVL202:
 415:boards/TMC4331_eval.c **** }
 1511              		.loc 1 415 9 view .LVU446
 1512 0474 0020     		movs	r0, #0
 1513              	.LVL203:
 415:boards/TMC4331_eval.c **** }
 1514              		.loc 1 415 9 view .LVU447
 1515 0476 E5E6     		b	handleParameter
 1516              	.LVL204:
 415:boards/TMC4331_eval.c **** }
 1517              		.loc 1 415 9 view .LVU448
 1518              		.cfi_endproc
 1519              	.LFE14:
 1521              		.align	1
 1522              		.syntax unified
 1523              		.thumb
 1524              		.thumb_func
 1525              		.fpu softvfp
 1527              	stop:
 1528              	.LVL205:
 1529              	.LFB9:
 156:boards/TMC4331_eval.c **** 	rotate(motor, 0);
 1530              		.loc 1 156 1 is_stmt 1 view -0
 1531              		.cfi_startproc
 1532              		@ args = 0, pretend = 0, frame = 0
 1533              		@ frame_needed = 0, uses_anonymous_args = 0
 157:boards/TMC4331_eval.c **** 
 1534              		.loc 1 157 2 view .LVU450
 1535              	.LBB33:
 1536              	.LBI33:
 133:boards/TMC4331_eval.c **** {
 1537              		.loc 1 133 17 view .LVU451
 1538              	.LBB34:
 135:boards/TMC4331_eval.c **** 	tmc4331_rotate(motorToIC(motor), velocity);
 1539              		.loc 1 135 2 view .LVU452
 136:boards/TMC4331_eval.c **** 
 1540              		.loc 1 136 2 view .LVU453
 1541              	.LBB35:
 1542              	.LBI35:
  49:boards/TMC4331_eval.c **** {
 1543              		.loc 1 49 31 view .LVU454
  49:boards/TMC4331_eval.c **** {
 1544              		.loc 1 49 31 is_stmt 0 view .LVU455
 1545              	.LBE35:
 1546              	.LBE34:
 1547              	.LBE33:
  51:boards/TMC4331_eval.c **** 
 1548              		.loc 1 51 2 is_stmt 1 view .LVU456
  53:boards/TMC4331_eval.c **** }
 1549              		.loc 1 53 2 view .LVU457
 156:boards/TMC4331_eval.c **** 	rotate(motor, 0);
 1550              		.loc 1 156 1 is_stmt 0 view .LVU458
 1551 0478 08B5     		push	{r3, lr}
 1552              	.LCFI12:
 1553              		.cfi_def_cfa_offset 8
 1554              		.cfi_offset 3, -8
 1555              		.cfi_offset 14, -4
 1556              	.LBB37:
 1557              	.LBB36:
 136:boards/TMC4331_eval.c **** 
 1558              		.loc 1 136 2 view .LVU459
 1559 047a 0348     		ldr	r0, .L124
 1560              	.LVL206:
 136:boards/TMC4331_eval.c **** 
 1561              		.loc 1 136 2 view .LVU460
 1562 047c 0021     		movs	r1, #0
 1563 047e FFF7FEFF 		bl	tmc4331_rotate
 1564              	.LVL207:
 138:boards/TMC4331_eval.c **** }
 1565              		.loc 1 138 2 is_stmt 1 view .LVU461
 138:boards/TMC4331_eval.c **** }
 1566              		.loc 1 138 2 is_stmt 0 view .LVU462
 1567              	.LBE36:
 1568              	.LBE37:
 159:boards/TMC4331_eval.c **** }
 1569              		.loc 1 159 2 is_stmt 1 view .LVU463
 160:boards/TMC4331_eval.c **** 
 1570              		.loc 1 160 1 is_stmt 0 view .LVU464
 1571 0482 0020     		movs	r0, #0
 1572 0484 08BD     		pop	{r3, pc}
 1573              	.L125:
 1574 0486 00BF     		.align	2
 1575              	.L124:
 1576 0488 24000000 		.word	.LANCHOR0+36
 1577              		.cfi_endproc
 1578              	.LFE9:
 1580              		.align	1
 1581              		.syntax unified
 1582              		.thumb
 1583              		.thumb_func
 1584              		.fpu softvfp
 1586              	left:
 1587              	.LVL208:
 1588              	.LFB8:
 149:boards/TMC4331_eval.c **** 	rotate(motor, -velocity);
 1589              		.loc 1 149 1 is_stmt 1 view -0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 150:boards/TMC4331_eval.c **** 
 1593              		.loc 1 150 2 view .LVU466
 1594              	.LBB38:
 1595              	.LBI38:
 133:boards/TMC4331_eval.c **** {
 1596              		.loc 1 133 17 view .LVU467
 1597              	.LBB39:
 135:boards/TMC4331_eval.c **** 	tmc4331_rotate(motorToIC(motor), velocity);
 1598              		.loc 1 135 2 view .LVU468
 136:boards/TMC4331_eval.c **** 
 1599              		.loc 1 136 2 view .LVU469
 1600              	.LBB40:
 1601              	.LBI40:
  49:boards/TMC4331_eval.c **** {
 1602              		.loc 1 49 31 view .LVU470
  49:boards/TMC4331_eval.c **** {
 1603              		.loc 1 49 31 is_stmt 0 view .LVU471
 1604              	.LBE40:
 1605              	.LBE39:
 1606              	.LBE38:
  51:boards/TMC4331_eval.c **** 
 1607              		.loc 1 51 2 is_stmt 1 view .LVU472
  53:boards/TMC4331_eval.c **** }
 1608              		.loc 1 53 2 view .LVU473
 149:boards/TMC4331_eval.c **** 	rotate(motor, -velocity);
 1609              		.loc 1 149 1 is_stmt 0 view .LVU474
 1610 048c 08B5     		push	{r3, lr}
 1611              	.LCFI13:
 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 3, -8
 1614              		.cfi_offset 14, -4
 1615              	.LBB42:
 1616              	.LBB41:
 136:boards/TMC4331_eval.c **** 
 1617              		.loc 1 136 2 view .LVU475
 1618 048e 0348     		ldr	r0, .L127
 1619              	.LVL209:
 136:boards/TMC4331_eval.c **** 
 1620              		.loc 1 136 2 view .LVU476
 1621 0490 4942     		rsbs	r1, r1, #0
 1622              	.LVL210:
 136:boards/TMC4331_eval.c **** 
 1623              		.loc 1 136 2 view .LVU477
 1624 0492 FFF7FEFF 		bl	tmc4331_rotate
 1625              	.LVL211:
 138:boards/TMC4331_eval.c **** }
 1626              		.loc 1 138 2 is_stmt 1 view .LVU478
 138:boards/TMC4331_eval.c **** }
 1627              		.loc 1 138 2 is_stmt 0 view .LVU479
 1628              	.LBE41:
 1629              	.LBE42:
 152:boards/TMC4331_eval.c **** }
 1630              		.loc 1 152 2 is_stmt 1 view .LVU480
 153:boards/TMC4331_eval.c **** 
 1631              		.loc 1 153 1 is_stmt 0 view .LVU481
 1632 0496 0020     		movs	r0, #0
 1633 0498 08BD     		pop	{r3, pc}
 1634              	.L128:
 1635 049a 00BF     		.align	2
 1636              	.L127:
 1637 049c 24000000 		.word	.LANCHOR0+36
 1638              		.cfi_endproc
 1639              	.LFE8:
 1641              		.align	1
 1642              		.syntax unified
 1643              		.thumb
 1644              		.thumb_func
 1645              		.fpu softvfp
 1647              	right:
 1648              	.LVL212:
 1649              	.LFB7:
 142:boards/TMC4331_eval.c **** 	rotate(motor, velocity);
 1650              		.loc 1 142 1 is_stmt 1 view -0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 0, uses_anonymous_args = 0
 143:boards/TMC4331_eval.c **** 
 1654              		.loc 1 143 2 view .LVU483
 1655              	.LBB46:
 1656              	.LBI46:
 133:boards/TMC4331_eval.c **** {
 1657              		.loc 1 133 17 view .LVU484
 1658              	.LBB47:
 135:boards/TMC4331_eval.c **** 	tmc4331_rotate(motorToIC(motor), velocity);
 1659              		.loc 1 135 2 view .LVU485
 136:boards/TMC4331_eval.c **** 
 1660              		.loc 1 136 2 view .LVU486
 1661              	.LBB48:
 1662              	.LBI48:
  49:boards/TMC4331_eval.c **** {
 1663              		.loc 1 49 31 view .LVU487
  49:boards/TMC4331_eval.c **** {
 1664              		.loc 1 49 31 is_stmt 0 view .LVU488
 1665              	.LBE48:
 1666              	.LBE47:
 1667              	.LBE46:
  51:boards/TMC4331_eval.c **** 
 1668              		.loc 1 51 2 is_stmt 1 view .LVU489
  53:boards/TMC4331_eval.c **** }
 1669              		.loc 1 53 2 view .LVU490
 142:boards/TMC4331_eval.c **** 	rotate(motor, velocity);
 1670              		.loc 1 142 1 is_stmt 0 view .LVU491
 1671 04a0 08B5     		push	{r3, lr}
 1672              	.LCFI14:
 1673              		.cfi_def_cfa_offset 8
 1674              		.cfi_offset 3, -8
 1675              		.cfi_offset 14, -4
 1676              	.LBB50:
 1677              	.LBB49:
 136:boards/TMC4331_eval.c **** 
 1678              		.loc 1 136 2 view .LVU492
 1679 04a2 0248     		ldr	r0, .L130
 1680              	.LVL213:
 136:boards/TMC4331_eval.c **** 
 1681              		.loc 1 136 2 view .LVU493
 1682 04a4 FFF7FEFF 		bl	tmc4331_rotate
 1683              	.LVL214:
 138:boards/TMC4331_eval.c **** }
 1684              		.loc 1 138 2 is_stmt 1 view .LVU494
 138:boards/TMC4331_eval.c **** }
 1685              		.loc 1 138 2 is_stmt 0 view .LVU495
 1686              	.LBE49:
 1687              	.LBE50:
 145:boards/TMC4331_eval.c **** }
 1688              		.loc 1 145 2 is_stmt 1 view .LVU496
 146:boards/TMC4331_eval.c **** 
 1689              		.loc 1 146 1 is_stmt 0 view .LVU497
 1690 04a8 0020     		movs	r0, #0
 1691 04aa 08BD     		pop	{r3, pc}
 1692              	.L131:
 1693              		.align	2
 1694              	.L130:
 1695 04ac 24000000 		.word	.LANCHOR0+36
 1696              		.cfi_endproc
 1697              	.LFE7:
 1699              		.align	1
 1700              		.syntax unified
 1701              		.thumb
 1702              		.thumb_func
 1703              		.fpu softvfp
 1705              	restore:
 1706              	.LFB22:
 562:boards/TMC4331_eval.c **** 
 563:boards/TMC4331_eval.c **** static uint8_t reset()
 564:boards/TMC4331_eval.c **** {
 565:boards/TMC4331_eval.c **** 	// Pulse the low-active hardware reset pin
 566:boards/TMC4331_eval.c **** 	HAL.IOs->config->setLow(Pins.NRST);
 567:boards/TMC4331_eval.c **** 	wait(1);
 568:boards/TMC4331_eval.c **** 	HAL.IOs->config->setHigh(Pins.NRST);
 569:boards/TMC4331_eval.c **** 
 570:boards/TMC4331_eval.c **** 	tmc4331_reset(&TMC4331);
 571:boards/TMC4331_eval.c **** 
 572:boards/TMC4331_eval.c **** 	return 1;
 573:boards/TMC4331_eval.c **** }
 574:boards/TMC4331_eval.c **** 
 575:boards/TMC4331_eval.c **** static uint8_t restore()
 576:boards/TMC4331_eval.c **** {
 1707              		.loc 1 576 1 is_stmt 1 view -0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 0
 1710              		@ frame_needed = 0, uses_anonymous_args = 0
 577:boards/TMC4331_eval.c **** 	// Pulse the low-active hardware reset pin
 578:boards/TMC4331_eval.c **** 	HAL.IOs->config->setLow(Pins.NRST);
 1711              		.loc 1 578 2 view .LVU499
 576:boards/TMC4331_eval.c **** 	// Pulse the low-active hardware reset pin
 1712              		.loc 1 576 1 is_stmt 0 view .LVU500
 1713 04b0 38B5     		push	{r3, r4, r5, lr}
 1714              	.LCFI15:
 1715              		.cfi_def_cfa_offset 16
 1716              		.cfi_offset 3, -16
 1717              		.cfi_offset 4, -12
 1718              		.cfi_offset 5, -8
 1719              		.cfi_offset 14, -4
 1720              		.loc 1 578 5 view .LVU501
 1721 04b2 0A4B     		ldr	r3, .L133
 1722              		.loc 1 578 2 view .LVU502
 1723 04b4 0A4C     		ldr	r4, .L133+4
 1724              		.loc 1 578 5 view .LVU503
 1725 04b6 DD68     		ldr	r5, [r3, #12]
 1726              		.loc 1 578 2 view .LVU504
 1727 04b8 6068     		ldr	r0, [r4, #4]
 1728              		.loc 1 578 17 view .LVU505
 1729 04ba 2B68     		ldr	r3, [r5]
 1730              		.loc 1 578 2 view .LVU506
 1731 04bc 9B69     		ldr	r3, [r3, #24]
 1732 04be 9847     		blx	r3
 1733              	.LVL215:
 579:boards/TMC4331_eval.c **** 	wait(1);
 1734              		.loc 1 579 2 is_stmt 1 view .LVU507
 1735 04c0 0120     		movs	r0, #1
 1736 04c2 FFF7FEFF 		bl	wait
 1737              	.LVL216:
 580:boards/TMC4331_eval.c **** 	HAL.IOs->config->setHigh(Pins.NRST);
 1738              		.loc 1 580 2 view .LVU508
 1739              		.loc 1 580 17 is_stmt 0 view .LVU509
 1740 04c6 2B68     		ldr	r3, [r5]
 1741              		.loc 1 580 2 view .LVU510
 1742 04c8 6068     		ldr	r0, [r4, #4]
 1743 04ca 5B69     		ldr	r3, [r3, #20]
 1744 04cc 9847     		blx	r3
 1745              	.LVL217:
 581:boards/TMC4331_eval.c **** 
 582:boards/TMC4331_eval.c **** 	tmc4331_restore(&TMC4331);
 1746              		.loc 1 582 2 is_stmt 1 view .LVU511
 1747 04ce 04F12400 		add	r0, r4, #36
 1748 04d2 FFF7FEFF 		bl	tmc4331_restore
 1749              	.LVL218:
 583:boards/TMC4331_eval.c **** 
 584:boards/TMC4331_eval.c **** 	return 1;
 1750              		.loc 1 584 2 view .LVU512
 585:boards/TMC4331_eval.c **** }
 1751              		.loc 1 585 1 is_stmt 0 view .LVU513
 1752 04d6 0120     		movs	r0, #1
 1753 04d8 38BD     		pop	{r3, r4, r5, pc}
 1754              	.L134:
 1755 04da 00BF     		.align	2
 1756              	.L133:
 1757 04dc 00000000 		.word	HAL
 1758 04e0 00000000 		.word	.LANCHOR0
 1759              		.cfi_endproc
 1760              	.LFE22:
 1762              		.align	1
 1763              		.syntax unified
 1764              		.thumb
 1765              		.thumb_func
 1766              		.fpu softvfp
 1768              	reset:
 1769              	.LFB21:
 564:boards/TMC4331_eval.c **** 	// Pulse the low-active hardware reset pin
 1770              		.loc 1 564 1 is_stmt 1 view -0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 566:boards/TMC4331_eval.c **** 	wait(1);
 1774              		.loc 1 566 2 view .LVU515
 564:boards/TMC4331_eval.c **** 	// Pulse the low-active hardware reset pin
 1775              		.loc 1 564 1 is_stmt 0 view .LVU516
 1776 04e4 38B5     		push	{r3, r4, r5, lr}
 1777              	.LCFI16:
 1778              		.cfi_def_cfa_offset 16
 1779              		.cfi_offset 3, -16
 1780              		.cfi_offset 4, -12
 1781              		.cfi_offset 5, -8
 1782              		.cfi_offset 14, -4
 566:boards/TMC4331_eval.c **** 	wait(1);
 1783              		.loc 1 566 5 view .LVU517
 1784 04e6 0A4B     		ldr	r3, .L136
 566:boards/TMC4331_eval.c **** 	wait(1);
 1785              		.loc 1 566 2 view .LVU518
 1786 04e8 0A4C     		ldr	r4, .L136+4
 566:boards/TMC4331_eval.c **** 	wait(1);
 1787              		.loc 1 566 5 view .LVU519
 1788 04ea DD68     		ldr	r5, [r3, #12]
 566:boards/TMC4331_eval.c **** 	wait(1);
 1789              		.loc 1 566 2 view .LVU520
 1790 04ec 6068     		ldr	r0, [r4, #4]
 566:boards/TMC4331_eval.c **** 	wait(1);
 1791              		.loc 1 566 17 view .LVU521
 1792 04ee 2B68     		ldr	r3, [r5]
 566:boards/TMC4331_eval.c **** 	wait(1);
 1793              		.loc 1 566 2 view .LVU522
 1794 04f0 9B69     		ldr	r3, [r3, #24]
 1795 04f2 9847     		blx	r3
 1796              	.LVL219:
 567:boards/TMC4331_eval.c **** 	HAL.IOs->config->setHigh(Pins.NRST);
 1797              		.loc 1 567 2 is_stmt 1 view .LVU523
 1798 04f4 0120     		movs	r0, #1
 1799 04f6 FFF7FEFF 		bl	wait
 1800              	.LVL220:
 568:boards/TMC4331_eval.c **** 
 1801              		.loc 1 568 2 view .LVU524
 568:boards/TMC4331_eval.c **** 
 1802              		.loc 1 568 17 is_stmt 0 view .LVU525
 1803 04fa 2B68     		ldr	r3, [r5]
 568:boards/TMC4331_eval.c **** 
 1804              		.loc 1 568 2 view .LVU526
 1805 04fc 6068     		ldr	r0, [r4, #4]
 1806 04fe 5B69     		ldr	r3, [r3, #20]
 1807 0500 9847     		blx	r3
 1808              	.LVL221:
 570:boards/TMC4331_eval.c **** 
 1809              		.loc 1 570 2 is_stmt 1 view .LVU527
 1810 0502 04F12400 		add	r0, r4, #36
 1811 0506 FFF7FEFF 		bl	tmc4331_reset
 1812              	.LVL222:
 572:boards/TMC4331_eval.c **** }
 1813              		.loc 1 572 2 view .LVU528
 573:boards/TMC4331_eval.c **** 
 1814              		.loc 1 573 1 is_stmt 0 view .LVU529
 1815 050a 0120     		movs	r0, #1
 1816 050c 38BD     		pop	{r3, r4, r5, pc}
 1817              	.L137:
 1818 050e 00BF     		.align	2
 1819              	.L136:
 1820 0510 00000000 		.word	HAL
 1821 0514 00000000 		.word	.LANCHOR0
 1822              		.cfi_endproc
 1823              	.LFE21:
 1825              		.align	1
 1826              		.syntax unified
 1827              		.thumb
 1828              		.thumb_func
 1829              		.fpu softvfp
 1831              	configCallback:
 1832              	.LVL223:
 1833              	.LFB23:
 586:boards/TMC4331_eval.c **** 
 587:boards/TMC4331_eval.c **** static void configCallback(TMC4331TypeDef *tmc4331, ConfigState state)
 588:boards/TMC4331_eval.c **** {
 1834              		.loc 1 588 1 is_stmt 1 view -0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
 589:boards/TMC4331_eval.c **** 	uint8_t driver, dataLength;
 1838              		.loc 1 589 2 view .LVU531
 590:boards/TMC4331_eval.c **** 	uint32_t value;
 1839              		.loc 1 590 2 view .LVU532
 591:boards/TMC4331_eval.c **** 
 592:boards/TMC4331_eval.c **** 	// Setup SPI
 593:boards/TMC4331_eval.c **** 	switch(Evalboards.ch2.id)
 1840              		.loc 1 593 2 view .LVU533
 588:boards/TMC4331_eval.c **** 	uint8_t driver, dataLength;
 1841              		.loc 1 588 1 is_stmt 0 view .LVU534
 1842 0518 70B5     		push	{r4, r5, r6, lr}
 1843              	.LCFI17:
 1844              		.cfi_def_cfa_offset 16
 1845              		.cfi_offset 4, -16
 1846              		.cfi_offset 5, -12
 1847              		.cfi_offset 6, -8
 1848              		.cfi_offset 14, -4
 1849              		.loc 1 593 23 view .LVU535
 1850 051a 114C     		ldr	r4, .L144
 1851 051c 94F87C30 		ldrb	r3, [r4, #124]	@ zero_extendqisi2
 1852              		.loc 1 593 2 view .LVU536
 1853 0520 012B     		cmp	r3, #1
 588:boards/TMC4331_eval.c **** 	uint8_t driver, dataLength;
 1854              		.loc 1 588 1 view .LVU537
 1855 0522 0D46     		mov	r5, r1
 1856              		.loc 1 593 2 view .LVU538
 1857 0524 19D0     		beq	.L141
 594:boards/TMC4331_eval.c **** 	{
 595:boards/TMC4331_eval.c **** 	case ID_TMC2130:
 596:boards/TMC4331_eval.c **** 		driver = 0x0C;
 597:boards/TMC4331_eval.c **** 		dataLength = 0;
 1858              		.loc 1 597 14 view .LVU539
 1859 0526 032B     		cmp	r3, #3
 1860 0528 15BF     		itete	ne
 1861 052a 2823     		movne	r3, #40
 1862 052c 0023     		moveq	r3, #0
 1863 052e 0F22     		movne	r2, #15
 1864 0530 0C22     		moveq	r2, #12
 1865              	.L139:
 1866              	.LVL224:
 598:boards/TMC4331_eval.c **** 		break;
 599:boards/TMC4331_eval.c **** 	case ID_TMC2660:
 600:boards/TMC4331_eval.c **** 		driver = 0x0B;
 601:boards/TMC4331_eval.c **** 		dataLength = 0;
 602:boards/TMC4331_eval.c **** 		break;
 603:boards/TMC4331_eval.c **** 	default:
 604:boards/TMC4331_eval.c **** 		driver = 0x0F;
 605:boards/TMC4331_eval.c **** 		dataLength = 40;
 606:boards/TMC4331_eval.c **** 		break;
 607:boards/TMC4331_eval.c **** 	}
 608:boards/TMC4331_eval.c **** 	value = 0x44400040 | (dataLength << 13) | (driver << 0);
 1867              		.loc 1 608 2 is_stmt 1 view .LVU540
 609:boards/TMC4331_eval.c **** 	tmc4331_writeInt(tmc4331, TMC4331_SPIOUT_CONF, value);
 1868              		.loc 1 609 2 view .LVU541
 608:boards/TMC4331_eval.c **** 	tmc4331_writeInt(tmc4331, TMC4331_SPIOUT_CONF, value);
 1869              		.loc 1 608 42 is_stmt 0 view .LVU542
 1870 0532 42EA4332 		orr	r2, r2, r3, lsl #13
 1871              	.LVL225:
 1872              		.loc 1 609 2 view .LVU543
 1873 0536 42F08842 		orr	r2, r2, #1140850688
 1874 053a 42F04012 		orr	r2, r2, #4194368
 1875 053e 0421     		movs	r1, #4
 1876              	.LVL226:
 1877              		.loc 1 609 2 view .LVU544
 1878 0540 FFF7FEFF 		bl	tmc4331_writeInt
 1879              	.LVL227:
 610:boards/TMC4331_eval.c **** 
 611:boards/TMC4331_eval.c **** 	// Reset/Restore driver
 612:boards/TMC4331_eval.c **** 	if(state == CONFIG_RESET)
 1880              		.loc 1 612 2 is_stmt 1 view .LVU545
 1881              	.LBB53:
 1882              	.LBB54:
 613:boards/TMC4331_eval.c **** 		Evalboards.ch2.config->reset();
 1883              		.loc 1 613 24 is_stmt 0 view .LVU546
 1884 0544 D4F89030 		ldr	r3, [r4, #144]
 1885              	.LBE54:
 1886              	.LBE53:
 612:boards/TMC4331_eval.c **** 		Evalboards.ch2.config->reset();
 1887              		.loc 1 612 4 view .LVU547
 1888 0548 012D     		cmp	r5, #1
 1889              	.LBB56:
 1890              	.LBI53:
 587:boards/TMC4331_eval.c **** {
 1891              		.loc 1 587 13 is_stmt 1 view .LVU548
 1892              	.LVL228:
 1893              	.LBB55:
 1894              		.loc 1 613 3 view .LVU549
 1895 054a 0CBF     		ite	eq
 1896 054c D3F80432 		ldreq	r3, [r3, #516]
 1897              	.LBE55:
 1898              	.LBE56:
 614:boards/TMC4331_eval.c **** 	else
 615:boards/TMC4331_eval.c **** 		Evalboards.ch2.config->restore();
 1899              		.loc 1 615 3 view .LVU550
 1900 0550 D3F80832 		ldrne	r3, [r3, #520]
 616:boards/TMC4331_eval.c **** }
 1901              		.loc 1 616 1 is_stmt 0 view .LVU551
 1902 0554 BDE87040 		pop	{r4, r5, r6, lr}
 1903              	.LCFI18:
 1904              		.cfi_remember_state
 1905              		.cfi_restore 14
 1906              		.cfi_restore 6
 1907              		.cfi_restore 5
 1908              		.cfi_restore 4
 1909              		.cfi_def_cfa_offset 0
 615:boards/TMC4331_eval.c **** }
 1910              		.loc 1 615 3 view .LVU552
 1911 0558 1847     		bx	r3
 1912              	.LVL229:
 1913              	.L141:
 1914              	.LCFI19:
 1915              		.cfi_restore_state
 593:boards/TMC4331_eval.c **** 	{
 1916              		.loc 1 593 2 view .LVU553
 1917 055a 0023     		movs	r3, #0
 1918 055c 0B22     		movs	r2, #11
 1919 055e E8E7     		b	.L139
 1920              	.L145:
 1921              		.align	2
 1922              	.L144:
 1923 0560 00000000 		.word	Evalboards
 1924              		.cfi_endproc
 1925              	.LFE23:
 1927              		.align	1
 1928              		.syntax unified
 1929              		.thumb
 1930              		.thumb_func
 1931              		.fpu softvfp
 1933              	tmc4331_cover:
 1934              	.LVL230:
 1935              	.LFB5:
  82:boards/TMC4331_eval.c **** 	static uint64_t coverIn = 0;     // read from squirrel
 1936              		.loc 1 82 1 is_stmt 1 view -0
 1937              		.cfi_startproc
 1938              		@ args = 0, pretend = 0, frame = 0
 1939              		@ frame_needed = 0, uses_anonymous_args = 0
  83:boards/TMC4331_eval.c **** 	static uint64_t coverOut = 0;    // write to squirrel
 1940              		.loc 1 83 2 view .LVU555
  84:boards/TMC4331_eval.c **** 	static uint8_t coverLength = 0;  // data to be written
 1941              		.loc 1 84 2 view .LVU556
  85:boards/TMC4331_eval.c **** 
 1942              		.loc 1 85 2 view .LVU557
  87:boards/TMC4331_eval.c **** 
 1943              		.loc 1 87 2 view .LVU558
  90:boards/TMC4331_eval.c **** 	coverOut |= data;  // add new byte to be written
 1944              		.loc 1 90 2 view .LVU559
  91:boards/TMC4331_eval.c **** 	coverLength++;     // count outgoing bytes
 1945              		.loc 1 91 2 view .LVU560
  82:boards/TMC4331_eval.c **** 	static uint64_t coverIn = 0;     // read from squirrel
 1946              		.loc 1 82 1 is_stmt 0 view .LVU561
 1947 0564 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1948              	.LCFI20:
 1949              		.cfi_def_cfa_offset 24
 1950              		.cfi_offset 3, -24
 1951              		.cfi_offset 4, -20
 1952              		.cfi_offset 5, -16
 1953              		.cfi_offset 6, -12
 1954              		.cfi_offset 7, -8
 1955              		.cfi_offset 14, -4
  90:boards/TMC4331_eval.c **** 	coverOut |= data;  // add new byte to be written
 1956              		.loc 1 90 11 view .LVU562
 1957 0566 334C     		ldr	r4, .L153
 1958 0568 D4E9B032 		ldrd	r3, r2, [r4, #704]
 1959 056c 1202     		lsls	r2, r2, #8
  91:boards/TMC4331_eval.c **** 	coverLength++;     // count outgoing bytes
 1960              		.loc 1 91 11 view .LVU563
 1961 056e 40EA0320 		orr	r0, r0, r3, lsl #8
 1962              	.LVL231:
  90:boards/TMC4331_eval.c **** 	coverOut |= data;  // add new byte to be written
 1963              		.loc 1 90 11 view .LVU564
 1964 0572 42EA1362 		orr	r2, r2, r3, lsr #24
  91:boards/TMC4331_eval.c **** 	coverLength++;     // count outgoing bytes
 1965              		.loc 1 91 11 view .LVU565
 1966 0576 C4E9B002 		strd	r0, r2, [r4, #704]
  92:boards/TMC4331_eval.c **** 
 1967              		.loc 1 92 2 is_stmt 1 view .LVU566
  95:boards/TMC4331_eval.c **** 	coverIn <<= 8;        // shift by one byte to read this next time
 1968              		.loc 1 95 16 is_stmt 0 view .LVU567
 1969 057a D4E9B460 		ldrd	r6, r0, [r4, #720]
  92:boards/TMC4331_eval.c **** 
 1970              		.loc 1 92 13 view .LVU568
 1971 057e 94F8C832 		ldrb	r3, [r4, #712]	@ zero_extendqisi2
  95:boards/TMC4331_eval.c **** 	coverIn <<= 8;        // shift by one byte to read this next time
 1972              		.loc 1 95 6 view .LVU569
 1973 0582 050E     		lsrs	r5, r0, #24
  92:boards/TMC4331_eval.c **** 
 1974              		.loc 1 92 13 view .LVU570
 1975 0584 0133     		adds	r3, r3, #1
  96:boards/TMC4331_eval.c **** 
 1976              		.loc 1 96 10 view .LVU571
 1977 0586 0002     		lsls	r0, r0, #8
 1978 0588 40EA1660 		orr	r0, r0, r6, lsr #24
  92:boards/TMC4331_eval.c **** 
 1979              		.loc 1 92 13 view .LVU572
 1980 058c DBB2     		uxtb	r3, r3
  96:boards/TMC4331_eval.c **** 
 1981              		.loc 1 96 10 view .LVU573
 1982 058e 3602     		lsls	r6, r6, #8
 1983 0590 C4E9B460 		strd	r6, r0, [r4, #720]
  92:boards/TMC4331_eval.c **** 
 1984              		.loc 1 92 13 view .LVU574
 1985 0594 84F8C832 		strb	r3, [r4, #712]
  95:boards/TMC4331_eval.c **** 	coverIn <<= 8;        // shift by one byte to read this next time
 1986              		.loc 1 95 2 is_stmt 1 view .LVU575
 1987              	.LVL232:
  96:boards/TMC4331_eval.c **** 
 1988              		.loc 1 96 2 view .LVU576
  98:boards/TMC4331_eval.c **** 	{
 1989              		.loc 1 98 2 view .LVU577
  98:boards/TMC4331_eval.c **** 	{
 1990              		.loc 1 98 4 is_stmt 0 view .LVU578
 1991 0598 0029     		cmp	r1, #0
 1992 059a 49D0     		beq	.L147
 109:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331, TMC4331_COVER_HIGH_WR, coverOut >> 32);
 1993              		.loc 1 109 3 is_stmt 1 view .LVU579
 109:boards/TMC4331_eval.c **** 			tmc4331_writeInt(&TMC4331, TMC4331_COVER_HIGH_WR, coverOut >> 32);
 1994              		.loc 1 109 5 is_stmt 0 view .LVU580
 1995 059c 042B     		cmp	r3, #4
 1996 059e 04D9     		bls	.L148
 110:boards/TMC4331_eval.c **** 		tmc4331_writeInt(&TMC4331, TMC4331_COVER_LOW_WR, coverOut & 0xFFFFFFFF);
 1997              		.loc 1 110 4 is_stmt 1 view .LVU581
 1998 05a0 6D21     		movs	r1, #109
 1999              	.LVL233:
 110:boards/TMC4331_eval.c **** 		tmc4331_writeInt(&TMC4331, TMC4331_COVER_LOW_WR, coverOut & 0xFFFFFFFF);
 2000              		.loc 1 110 4 is_stmt 0 view .LVU582
 2001 05a2 04F12400 		add	r0, r4, #36
 2002 05a6 FFF7FEFF 		bl	tmc4331_writeInt
 2003              	.LVL234:
 2004              	.L148:
 2005              	.LBB59:
 2006              	.LBI59:
  81:boards/TMC4331_eval.c **** {
 2007              		.loc 1 81 16 is_stmt 1 view .LVU583
 2008              	.LBB60:
 111:boards/TMC4331_eval.c **** 		wait(1);
 2009              		.loc 1 111 3 view .LVU584
 2010 05aa D4F8C022 		ldr	r2, [r4, #704]
 2011 05ae 2248     		ldr	r0, .L153+4
 2012 05b0 6C21     		movs	r1, #108
 2013 05b2 FFF7FEFF 		bl	tmc4331_writeInt
 2014              	.LVL235:
 112:boards/TMC4331_eval.c **** 
 2015              		.loc 1 112 3 view .LVU585
 2016 05b6 0120     		movs	r0, #1
 2017 05b8 FFF7FEFF 		bl	wait
 2018              	.LVL236:
 115:boards/TMC4331_eval.c **** 
 2019              		.loc 1 115 3 view .LVU586
 2020 05bc D4F8C022 		ldr	r2, [r4, #704]
 2021 05c0 1D48     		ldr	r0, .L153+4
 2022 05c2 6C21     		movs	r1, #108
 2023 05c4 FFF7FEFF 		bl	tmc4331_writeInt
 2024              	.LVL237:
 118:boards/TMC4331_eval.c **** 		if(coverLength > 4)
 2025              		.loc 1 118 3 view .LVU587
 118:boards/TMC4331_eval.c **** 		if(coverLength > 4)
 2026              		.loc 1 118 11 is_stmt 0 view .LVU588
 2027 05c8 0023     		movs	r3, #0
 2028 05ca 0022     		movs	r2, #0
 2029 05cc C4E9B423 		strd	r2, [r4, #720]
 119:boards/TMC4331_eval.c **** 			coverIn |= (uint64_t) tmc4331_readInt(&TMC4331, TMC4331_COVER_DRV_HIGH_RD) << 32;
 2030              		.loc 1 119 3 is_stmt 1 view .LVU589
 119:boards/TMC4331_eval.c **** 			coverIn |= (uint64_t) tmc4331_readInt(&TMC4331, TMC4331_COVER_DRV_HIGH_RD) << 32;
 2031              		.loc 1 119 5 is_stmt 0 view .LVU590
 2032 05d0 94F8C832 		ldrb	r3, [r4, #712]	@ zero_extendqisi2
 2033 05d4 042B     		cmp	r3, #4
 2034 05d6 08D9     		bls	.L149
 120:boards/TMC4331_eval.c **** 		coverIn |= tmc4331_readInt(&TMC4331, TMC4331_COVER_DRV_LOW_RD);
 2035              		.loc 1 120 4 is_stmt 1 view .LVU591
 120:boards/TMC4331_eval.c **** 		coverIn |= tmc4331_readInt(&TMC4331, TMC4331_COVER_DRV_LOW_RD);
 2036              		.loc 1 120 26 is_stmt 0 view .LVU592
 2037 05d8 1748     		ldr	r0, .L153+4
 2038 05da 6F21     		movs	r1, #111
 2039 05dc FFF7FEFF 		bl	tmc4331_readInt
 2040              	.LVL238:
 120:boards/TMC4331_eval.c **** 		coverIn |= tmc4331_readInt(&TMC4331, TMC4331_COVER_DRV_LOW_RD);
 2041              		.loc 1 120 12 view .LVU593
 2042 05e0 D4F8D432 		ldr	r3, [r4, #724]
 2043 05e4 0343     		orrs	r3, r3, r0
 2044 05e6 C4F8D432 		str	r3, [r4, #724]
 2045              	.L149:
 121:boards/TMC4331_eval.c **** 		coverIn <<= (8-coverLength) * 8; // Shift the highest byte of the reply to the highest byte of th
 2046              		.loc 1 121 3 is_stmt 1 view .LVU594
 121:boards/TMC4331_eval.c **** 		coverIn <<= (8-coverLength) * 8; // Shift the highest byte of the reply to the highest byte of th
 2047              		.loc 1 121 14 is_stmt 0 view .LVU595
 2048 05ea 6E21     		movs	r1, #110
 2049 05ec 1248     		ldr	r0, .L153+4
 2050 05ee FFF7FEFF 		bl	tmc4331_readInt
 2051              	.LVL239:
 122:boards/TMC4331_eval.c **** 
 2052              		.loc 1 122 3 is_stmt 1 view .LVU596
 121:boards/TMC4331_eval.c **** 		coverIn <<= (8-coverLength) * 8; // Shift the highest byte of the reply to the highest byte of th
 2053              		.loc 1 121 11 is_stmt 0 view .LVU597
 2054 05f2 D4E9B423 		ldrd	r2, r3, [r4, #720]
 121:boards/TMC4331_eval.c **** 		coverIn <<= (8-coverLength) * 8; // Shift the highest byte of the reply to the highest byte of th
 2055              		.loc 1 121 14 view .LVU598
 2056 05f6 C717     		asrs	r7, r0, #31
 121:boards/TMC4331_eval.c **** 		coverIn <<= (8-coverLength) * 8; // Shift the highest byte of the reply to the highest byte of th
 2057              		.loc 1 121 11 view .LVU599
 2058 05f8 1043     		orrs	r0, r0, r2
 122:boards/TMC4331_eval.c **** 
 2059              		.loc 1 122 17 view .LVU600
 2060 05fa 94F8C822 		ldrb	r2, [r4, #712]	@ zero_extendqisi2
 2061 05fe C2F10802 		rsb	r2, r2, #8
 122:boards/TMC4331_eval.c **** 
 2062              		.loc 1 122 31 view .LVU601
 2063 0602 D200     		lsls	r2, r2, #3
 122:boards/TMC4331_eval.c **** 
 2064              		.loc 1 122 11 view .LVU602
 2065 0604 A2F12006 		sub	r6, r2, #32
 121:boards/TMC4331_eval.c **** 		coverIn <<= (8-coverLength) * 8; // Shift the highest byte of the reply to the highest byte of th
 2066              		.loc 1 121 11 view .LVU603
 2067 0608 3B43     		orrs	r3, r3, r7
 122:boards/TMC4331_eval.c **** 
 2068              		.loc 1 122 11 view .LVU604
 2069 060a C2F12001 		rsb	r1, r2, #32
 2070 060e 9340     		lsls	r3, r3, r2
 2071 0610 00FA06F6 		lsl	r6, r0, r6
 2072 0614 20FA01F1 		lsr	r1, r0, r1
 2073 0618 3343     		orrs	r3, r3, r6
 2074 061a 0B43     		orrs	r3, r3, r1
 2075 061c 9040     		lsls	r0, r0, r2
 2076 061e C4E9B403 		strd	r0, r3, [r4, #720]
 125:boards/TMC4331_eval.c **** 		coverLength=0;
 2077              		.loc 1 125 3 is_stmt 1 view .LVU605
 125:boards/TMC4331_eval.c **** 		coverLength=0;
 2078              		.loc 1 125 12 is_stmt 0 view .LVU606
 2079 0622 0022     		movs	r2, #0
 2080 0624 0023     		movs	r3, #0
 2081 0626 C4E9B023 		strd	r2, [r4, #704]
 126:boards/TMC4331_eval.c **** 	}
 2082              		.loc 1 126 3 is_stmt 1 view .LVU607
 126:boards/TMC4331_eval.c **** 	}
 2083              		.loc 1 126 14 is_stmt 0 view .LVU608
 2084 062a 0023     		movs	r3, #0
 2085 062c 84F8C832 		strb	r3, [r4, #712]
 2086              	.L147:
 126:boards/TMC4331_eval.c **** 	}
 2087              		.loc 1 126 14 view .LVU609
 2088              	.LBE60:
 2089              	.LBE59:
 129:boards/TMC4331_eval.c **** }
 2090              		.loc 1 129 2 is_stmt 1 view .LVU610
 130:boards/TMC4331_eval.c **** 
 2091              		.loc 1 130 1 is_stmt 0 view .LVU611
 2092 0630 2846     		mov	r0, r5
 2093 0632 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2094              	.LVL240:
 2095              	.L154:
 130:boards/TMC4331_eval.c **** 
 2096              		.loc 1 130 1 view .LVU612
 2097              		.align	2
 2098              	.L153:
 2099 0634 00000000 		.word	.LANCHOR0
 2100 0638 24000000 		.word	.LANCHOR0+36
 2101              		.cfi_endproc
 2102              	.LFE5:
 2104              		.align	1
 2105              		.syntax unified
 2106              		.thumb
 2107              		.thumb_func
 2108              		.fpu softvfp
 2110              	rotate:
 2111              	.LFB30:
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 0
 2114              		@ frame_needed = 0, uses_anonymous_args = 0
 2115 063c 08B5     		push	{r3, lr}
 2116              	.LCFI21:
 2117              		.cfi_def_cfa_offset 8
 2118              		.cfi_offset 3, -8
 2119              		.cfi_offset 14, -4
 2120 063e 0248     		ldr	r0, .L156
 2121 0640 FFF7FEFF 		bl	tmc4331_rotate
 2122 0644 0020     		movs	r0, #0
 2123 0646 08BD     		pop	{r3, pc}
 2124              	.L157:
 2125              		.align	2
 2126              	.L156:
 2127 0648 24000000 		.word	.LANCHOR0+36
 2128              		.cfi_endproc
 2129              	.LFE30:
 2131              		.align	1
 2132              		.global	tmc4331_readWriteArray
 2133              		.syntax unified
 2134              		.thumb
 2135              		.thumb_func
 2136              		.fpu softvfp
 2138              	tmc4331_readWriteArray:
 2139              	.LVL241:
 2140              	.LFB3:
  67:boards/TMC4331_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
 2141              		.loc 1 67 1 is_stmt 1 view -0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 0
 2144              		@ frame_needed = 0, uses_anonymous_args = 0
 2145              		@ link register save eliminated.
  68:boards/TMC4331_eval.c **** }
 2146              		.loc 1 68 2 view .LVU614
 2147              	.LBB61:
 2148              	.LBI61:
  58:boards/TMC4331_eval.c **** {
 2149              		.loc 1 58 34 view .LVU615
 2150              	.LBB62:
  60:boards/TMC4331_eval.c **** 
 2151              		.loc 1 60 2 view .LVU616
  62:boards/TMC4331_eval.c **** }
 2152              		.loc 1 62 2 view .LVU617
  62:boards/TMC4331_eval.c **** }
 2153              		.loc 1 62 9 is_stmt 0 view .LVU618
 2154 064c 034B     		ldr	r3, .L159
 2155              	.LBE62:
 2156              	.LBE61:
  68:boards/TMC4331_eval.c **** }
 2157              		.loc 1 68 23 view .LVU619
 2158 064e D3F8D832 		ldr	r3, [r3, #728]
  67:boards/TMC4331_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
 2159              		.loc 1 67 1 view .LVU620
 2160 0652 0846     		mov	r0, r1
 2161              	.LVL242:
  68:boards/TMC4331_eval.c **** }
 2162              		.loc 1 68 2 view .LVU621
 2163 0654 DB68     		ldr	r3, [r3, #12]
 2164 0656 1146     		mov	r1, r2
 2165              	.LVL243:
  68:boards/TMC4331_eval.c **** }
 2166              		.loc 1 68 2 view .LVU622
 2167 0658 1847     		bx	r3	@ indirect register sibling call
 2168              	.LVL244:
 2169              	.L160:
  68:boards/TMC4331_eval.c **** }
 2170              		.loc 1 68 2 view .LVU623
 2171 065a 00BF     		.align	2
 2172              	.L159:
 2173 065c 00000000 		.word	.LANCHOR0
 2174              		.cfi_endproc
 2175              	.LFE3:
 2177              		.align	1
 2178              		.global	TMC4331_init
 2179              		.syntax unified
 2180              		.thumb
 2181              		.thumb_func
 2182              		.fpu softvfp
 2184              	TMC4331_init:
 2185              	.LFB24:
 617:boards/TMC4331_eval.c **** 
 618:boards/TMC4331_eval.c **** void TMC4331_init(void)
 619:boards/TMC4331_eval.c **** {
 2186              		.loc 1 619 1 is_stmt 1 view -0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 0
 2189              		@ frame_needed = 0, uses_anonymous_args = 0
 620:boards/TMC4331_eval.c **** 	tmc4331_init(&TMC4331, 0, Evalboards.ch1.config, &tmc4331_defaultRegisterResetState[0]);
 2190              		.loc 1 620 2 view .LVU625
 619:boards/TMC4331_eval.c **** 	tmc4331_init(&TMC4331, 0, Evalboards.ch1.config, &tmc4331_defaultRegisterResetState[0]);
 2191              		.loc 1 619 1 is_stmt 0 view .LVU626
 2192 0660 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2193              	.LCFI22:
 2194              		.cfi_def_cfa_offset 24
 2195              		.cfi_offset 3, -24
 2196              		.cfi_offset 4, -20
 2197              		.cfi_offset 5, -16
 2198              		.cfi_offset 6, -12
 2199              		.cfi_offset 7, -8
 2200              		.cfi_offset 14, -4
 2201              		.loc 1 620 2 view .LVU627
 2202 0662 4C4C     		ldr	r4, .L162
 2203 0664 4C4D     		ldr	r5, .L162+4
 2204 0666 4D4B     		ldr	r3, .L162+8
 2205 0668 AA69     		ldr	r2, [r5, #24]
 621:boards/TMC4331_eval.c **** 	tmc4331_setCallback(&TMC4331, configCallback);
 622:boards/TMC4331_eval.c **** 
 623:boards/TMC4331_eval.c **** 	Pins.STANDBY_CLK     = &HAL.IOs->pins->DIO4;
 2206              		.loc 1 623 29 view .LVU628
 2207 066a 4D4F     		ldr	r7, .L162+12
 620:boards/TMC4331_eval.c **** 	tmc4331_setCallback(&TMC4331, configCallback);
 2208              		.loc 1 620 2 view .LVU629
 2209 066c 04F12406 		add	r6, r4, #36
 2210 0670 3046     		mov	r0, r6
 2211 0672 0021     		movs	r1, #0
 2212 0674 FFF7FEFF 		bl	tmc4331_init
 2213              	.LVL245:
 621:boards/TMC4331_eval.c **** 	tmc4331_setCallback(&TMC4331, configCallback);
 2214              		.loc 1 621 2 is_stmt 1 view .LVU630
 2215 0678 4A49     		ldr	r1, .L162+16
 2216 067a 3046     		mov	r0, r6
 2217 067c FFF7FEFF 		bl	tmc4331_setCallback
 2218              	.LVL246:
 2219              		.loc 1 623 2 view .LVU631
 2220              		.loc 1 623 29 is_stmt 0 view .LVU632
 2221 0680 FE68     		ldr	r6, [r7, #12]
 2222              		.loc 1 623 33 view .LVU633
 2223 0682 7368     		ldr	r3, [r6, #4]
 2224              		.loc 1 623 25 view .LVU634
 2225 0684 03F1E802 		add	r2, r3, #232
 2226              		.loc 1 623 23 view .LVU635
 2227 0688 2262     		str	r2, [r4, #32]
 624:boards/TMC4331_eval.c **** 	Pins.INTR            = &HAL.IOs->pins->DIO5;
 2228              		.loc 1 624 2 is_stmt 1 view .LVU636
 2229              		.loc 1 624 25 is_stmt 0 view .LVU637
 2230 068a 03F58472 		add	r2, r3, #264
 2231              		.loc 1 624 23 view .LVU638
 2232 068e E261     		str	r2, [r4, #28]
 625:boards/TMC4331_eval.c **** 	Pins.STOP_L          = &HAL.IOs->pins->DIO12;
 2233              		.loc 1 625 2 is_stmt 1 view .LVU639
 2234              		.loc 1 625 25 is_stmt 0 view .LVU640
 2235 0690 03F55272 		add	r2, r3, #840
 2236              		.loc 1 625 23 view .LVU641
 2237 0694 A261     		str	r2, [r4, #24]
 626:boards/TMC4331_eval.c **** 	Pins.STOP_R          = &HAL.IOs->pins->DIO13;
 2238              		.loc 1 626 2 is_stmt 1 view .LVU642
 2239              		.loc 1 626 25 is_stmt 0 view .LVU643
 2240 0696 03F55A72 		add	r2, r3, #872
 2241              		.loc 1 626 23 view .LVU644
 2242 069a 6261     		str	r2, [r4, #20]
 627:boards/TMC4331_eval.c **** 	Pins.HOME_REF        = &HAL.IOs->pins->DIO14;
 2243              		.loc 1 627 2 is_stmt 1 view .LVU645
 2244              		.loc 1 627 25 is_stmt 0 view .LVU646
 2245 069c 03F56272 		add	r2, r3, #904
 2246              		.loc 1 627 23 view .LVU647
 2247 06a0 2261     		str	r2, [r4, #16]
 628:boards/TMC4331_eval.c **** 	Pins.START           = &HAL.IOs->pins->DIO15;
 2248              		.loc 1 628 2 is_stmt 1 view .LVU648
 2249              		.loc 1 628 25 is_stmt 0 view .LVU649
 2250 06a2 03F56A72 		add	r2, r3, #936
 629:boards/TMC4331_eval.c **** 	Pins.FREEZE          = &HAL.IOs->pins->DIO16;
 630:boards/TMC4331_eval.c **** 	Pins.NRST            = &HAL.IOs->pins->DIO17;
 2251              		.loc 1 630 25 view .LVU650
 2252 06a6 03F57A70 		add	r0, r3, #1000
 628:boards/TMC4331_eval.c **** 	Pins.START           = &HAL.IOs->pins->DIO15;
 2253              		.loc 1 628 23 view .LVU651
 2254 06aa E260     		str	r2, [r4, #12]
 629:boards/TMC4331_eval.c **** 	Pins.FREEZE          = &HAL.IOs->pins->DIO16;
 2255              		.loc 1 629 2 is_stmt 1 view .LVU652
 629:boards/TMC4331_eval.c **** 	Pins.FREEZE          = &HAL.IOs->pins->DIO16;
 2256              		.loc 1 629 25 is_stmt 0 view .LVU653
 2257 06ac 03F57272 		add	r2, r3, #968
 631:boards/TMC4331_eval.c **** 	Pins.TARGET_REACHED  = &HAL.IOs->pins->DIO18;
 2258              		.loc 1 631 25 view .LVU654
 2259 06b0 03F58163 		add	r3, r3, #1032
 2260              		.loc 1 631 23 view .LVU655
 2261 06b4 2360     		str	r3, [r4]
 632:boards/TMC4331_eval.c **** 
 633:boards/TMC4331_eval.c **** 	HAL.IOs->config->toOutput(Pins.NRST);
 2262              		.loc 1 633 17 view .LVU656
 2263 06b6 3368     		ldr	r3, [r6]
 629:boards/TMC4331_eval.c **** 	Pins.NRST            = &HAL.IOs->pins->DIO17;
 2264              		.loc 1 629 23 view .LVU657
 2265 06b8 A260     		str	r2, [r4, #8]
 630:boards/TMC4331_eval.c **** 	Pins.TARGET_REACHED  = &HAL.IOs->pins->DIO18;
 2266              		.loc 1 630 2 is_stmt 1 view .LVU658
 2267              		.loc 1 633 2 is_stmt 0 view .LVU659
 2268 06ba DB68     		ldr	r3, [r3, #12]
 630:boards/TMC4331_eval.c **** 	Pins.TARGET_REACHED  = &HAL.IOs->pins->DIO18;
 2269              		.loc 1 630 23 view .LVU660
 2270 06bc 6060     		str	r0, [r4, #4]
 631:boards/TMC4331_eval.c **** 
 2271              		.loc 1 631 2 is_stmt 1 view .LVU661
 2272              		.loc 1 633 2 view .LVU662
 2273 06be 9847     		blx	r3
 2274              	.LVL247:
 634:boards/TMC4331_eval.c **** 	HAL.IOs->config->toOutput(Pins.STOP_L);
 2275              		.loc 1 634 2 view .LVU663
 2276              		.loc 1 634 17 is_stmt 0 view .LVU664
 2277 06c0 3368     		ldr	r3, [r6]
 2278              		.loc 1 634 2 view .LVU665
 2279 06c2 A069     		ldr	r0, [r4, #24]
 2280 06c4 DB68     		ldr	r3, [r3, #12]
 2281 06c6 9847     		blx	r3
 2282              	.LVL248:
 635:boards/TMC4331_eval.c **** 	HAL.IOs->config->toOutput(Pins.STOP_R);
 2283              		.loc 1 635 2 is_stmt 1 view .LVU666
 2284              		.loc 1 635 17 is_stmt 0 view .LVU667
 2285 06c8 3368     		ldr	r3, [r6]
 2286              		.loc 1 635 2 view .LVU668
 2287 06ca 6069     		ldr	r0, [r4, #20]
 2288 06cc DB68     		ldr	r3, [r3, #12]
 2289 06ce 9847     		blx	r3
 2290              	.LVL249:
 636:boards/TMC4331_eval.c **** 	HAL.IOs->config->toOutput(Pins.HOME_REF);
 2291              		.loc 1 636 2 is_stmt 1 view .LVU669
 2292              		.loc 1 636 17 is_stmt 0 view .LVU670
 2293 06d0 3368     		ldr	r3, [r6]
 2294              		.loc 1 636 2 view .LVU671
 2295 06d2 2069     		ldr	r0, [r4, #16]
 2296 06d4 DB68     		ldr	r3, [r3, #12]
 2297 06d6 9847     		blx	r3
 2298              	.LVL250:
 637:boards/TMC4331_eval.c **** 	HAL.IOs->config->toOutput(Pins.START);
 2299              		.loc 1 637 2 is_stmt 1 view .LVU672
 2300              		.loc 1 637 17 is_stmt 0 view .LVU673
 2301 06d8 3368     		ldr	r3, [r6]
 2302              		.loc 1 637 2 view .LVU674
 2303 06da E068     		ldr	r0, [r4, #12]
 2304 06dc DB68     		ldr	r3, [r3, #12]
 2305 06de 9847     		blx	r3
 2306              	.LVL251:
 638:boards/TMC4331_eval.c **** 	HAL.IOs->config->toOutput(Pins.FREEZE);
 2307              		.loc 1 638 2 is_stmt 1 view .LVU675
 2308              		.loc 1 638 17 is_stmt 0 view .LVU676
 2309 06e0 3368     		ldr	r3, [r6]
 2310              		.loc 1 638 2 view .LVU677
 2311 06e2 A068     		ldr	r0, [r4, #8]
 2312 06e4 DB68     		ldr	r3, [r3, #12]
 2313 06e6 9847     		blx	r3
 2314              	.LVL252:
 639:boards/TMC4331_eval.c **** 
 640:boards/TMC4331_eval.c **** 	HAL.IOs->config->setHigh(Pins.NRST);
 2315              		.loc 1 640 2 is_stmt 1 view .LVU678
 2316              		.loc 1 640 17 is_stmt 0 view .LVU679
 2317 06e8 3368     		ldr	r3, [r6]
 2318              		.loc 1 640 2 view .LVU680
 2319 06ea 6068     		ldr	r0, [r4, #4]
 2320 06ec 5B69     		ldr	r3, [r3, #20]
 2321 06ee 9847     		blx	r3
 2322              	.LVL253:
 641:boards/TMC4331_eval.c **** 
 642:boards/TMC4331_eval.c **** 	HAL.IOs->config->setHigh(Pins.STOP_L);
 2323              		.loc 1 642 2 is_stmt 1 view .LVU681
 2324              		.loc 1 642 17 is_stmt 0 view .LVU682
 2325 06f0 3368     		ldr	r3, [r6]
 2326              		.loc 1 642 2 view .LVU683
 2327 06f2 A069     		ldr	r0, [r4, #24]
 2328 06f4 5B69     		ldr	r3, [r3, #20]
 2329 06f6 9847     		blx	r3
 2330              	.LVL254:
 643:boards/TMC4331_eval.c **** 	HAL.IOs->config->setHigh(Pins.STOP_R);
 2331              		.loc 1 643 2 is_stmt 1 view .LVU684
 2332              		.loc 1 643 17 is_stmt 0 view .LVU685
 2333 06f8 3368     		ldr	r3, [r6]
 2334              		.loc 1 643 2 view .LVU686
 2335 06fa 6069     		ldr	r0, [r4, #20]
 2336 06fc 5B69     		ldr	r3, [r3, #20]
 2337 06fe 9847     		blx	r3
 2338              	.LVL255:
 644:boards/TMC4331_eval.c **** 	HAL.IOs->config->setHigh(Pins.HOME_REF);
 2339              		.loc 1 644 2 is_stmt 1 view .LVU687
 2340              		.loc 1 644 17 is_stmt 0 view .LVU688
 2341 0700 3368     		ldr	r3, [r6]
 2342              		.loc 1 644 2 view .LVU689
 2343 0702 2069     		ldr	r0, [r4, #16]
 2344 0704 5B69     		ldr	r3, [r3, #20]
 2345 0706 9847     		blx	r3
 2346              	.LVL256:
 645:boards/TMC4331_eval.c **** 	HAL.IOs->config->setHigh(Pins.START);
 2347              		.loc 1 645 2 is_stmt 1 view .LVU690
 2348              		.loc 1 645 17 is_stmt 0 view .LVU691
 2349 0708 3368     		ldr	r3, [r6]
 2350              		.loc 1 645 2 view .LVU692
 2351 070a E068     		ldr	r0, [r4, #12]
 2352 070c 5B69     		ldr	r3, [r3, #20]
 2353 070e 9847     		blx	r3
 2354              	.LVL257:
 646:boards/TMC4331_eval.c **** 	HAL.IOs->config->setHigh(Pins.FREEZE);
 2355              		.loc 1 646 2 is_stmt 1 view .LVU693
 2356              		.loc 1 646 17 is_stmt 0 view .LVU694
 2357 0710 3368     		ldr	r3, [r6]
 2358              		.loc 1 646 2 view .LVU695
 2359 0712 A068     		ldr	r0, [r4, #8]
 2360 0714 5B69     		ldr	r3, [r3, #20]
 2361 0716 9847     		blx	r3
 2362              	.LVL258:
 647:boards/TMC4331_eval.c **** 
 648:boards/TMC4331_eval.c **** 	HAL.IOs->config->toInput(Pins.STANDBY_CLK);
 2363              		.loc 1 648 2 is_stmt 1 view .LVU696
 2364              		.loc 1 648 17 is_stmt 0 view .LVU697
 2365 0718 3368     		ldr	r3, [r6]
 2366              		.loc 1 648 2 view .LVU698
 2367 071a 206A     		ldr	r0, [r4, #32]
 2368 071c 1B69     		ldr	r3, [r3, #16]
 2369 071e 9847     		blx	r3
 2370              	.LVL259:
 649:boards/TMC4331_eval.c **** 	HAL.IOs->config->toInput(Pins.INTR);
 2371              		.loc 1 649 2 is_stmt 1 view .LVU699
 2372              		.loc 1 649 17 is_stmt 0 view .LVU700
 2373 0720 3368     		ldr	r3, [r6]
 2374              		.loc 1 649 2 view .LVU701
 2375 0722 E069     		ldr	r0, [r4, #28]
 2376 0724 1B69     		ldr	r3, [r3, #16]
 2377 0726 9847     		blx	r3
 2378              	.LVL260:
 650:boards/TMC4331_eval.c **** 	HAL.IOs->config->toInput(Pins.TARGET_REACHED);
 2379              		.loc 1 650 2 is_stmt 1 view .LVU702
 2380              		.loc 1 650 17 is_stmt 0 view .LVU703
 2381 0728 3368     		ldr	r3, [r6]
 2382              		.loc 1 650 2 view .LVU704
 2383 072a 2068     		ldr	r0, [r4]
 2384 072c 1B69     		ldr	r3, [r3, #16]
 2385 072e 9847     		blx	r3
 2386              	.LVL261:
 651:boards/TMC4331_eval.c **** 
 652:boards/TMC4331_eval.c **** 	TMC4331_SPIChannel = &HAL.SPI->ch1;
 2387              		.loc 1 652 2 is_stmt 1 view .LVU705
 653:boards/TMC4331_eval.c **** 	TMC4331_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 2388              		.loc 1 653 28 is_stmt 0 view .LVU706
 2389 0730 7368     		ldr	r3, [r6, #4]
 652:boards/TMC4331_eval.c **** 	TMC4331_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 2390              		.loc 1 652 27 view .LVU707
 2391 0732 3A69     		ldr	r2, [r7, #16]
 654:boards/TMC4331_eval.c **** 
 655:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 656:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 657:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 2392              		.loc 1 657 38 view .LVU708
 2393 0734 1C49     		ldr	r1, .L162+20
 652:boards/TMC4331_eval.c **** 	TMC4331_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 2394              		.loc 1 652 21 view .LVU709
 2395 0736 C4F8D822 		str	r2, [r4, #728]
 653:boards/TMC4331_eval.c **** 
 2396              		.loc 1 653 2 is_stmt 1 view .LVU710
 653:boards/TMC4331_eval.c **** 
 2397              		.loc 1 653 28 is_stmt 0 view .LVU711
 2398 073a 03F53273 		add	r3, r3, #712
 653:boards/TMC4331_eval.c **** 
 2399              		.loc 1 653 26 view .LVU712
 2400 073e 5360     		str	r3, [r2, #4]
 655:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 2401              		.loc 1 655 2 is_stmt 1 view .LVU713
 655:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 2402              		.loc 1 655 16 is_stmt 0 view .LVU714
 2403 0740 AB69     		ldr	r3, [r5, #24]
 656:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 2404              		.loc 1 656 2 is_stmt 1 view .LVU715
 655:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 2405              		.loc 1 655 38 is_stmt 0 view .LVU716
 2406 0742 0122     		movs	r2, #1
 2407              		.loc 1 657 38 view .LVU717
 2408 0744 C3F80412 		str	r1, [r3, #516]
 658:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 2409              		.loc 1 658 38 view .LVU718
 2410 0748 1849     		ldr	r1, .L162+24
 655:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 2411              		.loc 1 655 38 view .LVU719
 2412 074a 1A80     		strh	r2, [r3]	@ movhi
 657:boards/TMC4331_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 2413              		.loc 1 657 2 is_stmt 1 view .LVU720
 2414              		.loc 1 658 2 view .LVU721
 2415              		.loc 1 658 38 is_stmt 0 view .LVU722
 2416 074c C3F80812 		str	r1, [r3, #520]
 659:boards/TMC4331_eval.c **** 
 660:boards/TMC4331_eval.c **** 	Evalboards.ch1.cover                = tmc4331_cover;
 2417              		.loc 1 660 2 is_stmt 1 view .LVU723
 2418              		.loc 1 660 38 is_stmt 0 view .LVU724
 2419 0750 174B     		ldr	r3, .L162+28
 2420 0752 AB66     		str	r3, [r5, #104]
 661:boards/TMC4331_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 2421              		.loc 1 661 2 is_stmt 1 view .LVU725
 2422              		.loc 1 661 38 is_stmt 0 view .LVU726
 2423 0754 174B     		ldr	r3, .L162+32
 2424 0756 6B62     		str	r3, [r5, #36]
 662:boards/TMC4331_eval.c **** 	Evalboards.ch1.right                = right;
 2425              		.loc 1 662 2 is_stmt 1 view .LVU727
 2426              		.loc 1 662 38 is_stmt 0 view .LVU728
 2427 0758 174B     		ldr	r3, .L162+36
 2428 075a 2B62     		str	r3, [r5, #32]
 663:boards/TMC4331_eval.c **** 	Evalboards.ch1.left                 = left;
 2429              		.loc 1 663 2 is_stmt 1 view .LVU729
 2430              		.loc 1 663 38 is_stmt 0 view .LVU730
 2431 075c 174B     		ldr	r3, .L162+40
 2432 075e EB61     		str	r3, [r5, #28]
 664:boards/TMC4331_eval.c **** 	Evalboards.ch1.stop                 = stop;
 2433              		.loc 1 664 2 is_stmt 1 view .LVU731
 2434              		.loc 1 664 38 is_stmt 0 view .LVU732
 2435 0760 174B     		ldr	r3, .L162+44
 2436 0762 AB62     		str	r3, [r5, #40]
 665:boards/TMC4331_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 2437              		.loc 1 665 2 is_stmt 1 view .LVU733
 2438              		.loc 1 665 38 is_stmt 0 view .LVU734
 2439 0764 174B     		ldr	r3, .L162+48
 2440 0766 EB63     		str	r3, [r5, #60]
 666:boards/TMC4331_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 2441              		.loc 1 666 2 is_stmt 1 view .LVU735
 2442              		.loc 1 666 38 is_stmt 0 view .LVU736
 2443 0768 174B     		ldr	r3, .L162+52
 2444 076a AB63     		str	r3, [r5, #56]
 667:boards/TMC4331_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 2445              		.loc 1 667 2 is_stmt 1 view .LVU737
 2446              		.loc 1 667 38 is_stmt 0 view .LVU738
 2447 076c 174B     		ldr	r3, .L162+56
 2448 076e EB62     		str	r3, [r5, #44]
 668:boards/TMC4331_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 2449              		.loc 1 668 2 is_stmt 1 view .LVU739
 2450              		.loc 1 668 38 is_stmt 0 view .LVU740
 2451 0770 174B     		ldr	r3, .L162+60
 2452 0772 2B63     		str	r3, [r5, #48]
 669:boards/TMC4331_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 2453              		.loc 1 669 2 is_stmt 1 view .LVU741
 2454              		.loc 1 669 38 is_stmt 0 view .LVU742
 2455 0774 174B     		ldr	r3, .L162+64
 2456 0776 EB64     		str	r3, [r5, #76]
 670:boards/TMC4331_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 2457              		.loc 1 670 2 is_stmt 1 view .LVU743
 2458              		.loc 1 670 38 is_stmt 0 view .LVU744
 2459 0778 174B     		ldr	r3, .L162+68
 2460 077a AB64     		str	r3, [r5, #72]
 671:boards/TMC4331_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 2461              		.loc 1 671 2 is_stmt 1 view .LVU745
 2462              		.loc 1 671 38 is_stmt 0 view .LVU746
 2463 077c 174B     		ldr	r3, .L162+72
 2464 077e AB65     		str	r3, [r5, #88]
 672:boards/TMC4331_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 2465              		.loc 1 672 2 is_stmt 1 view .LVU747
 2466              		.loc 1 672 38 is_stmt 0 view .LVU748
 2467 0780 174B     		ldr	r3, .L162+76
 2468 0782 6B65     		str	r3, [r5, #84]
 673:boards/TMC4331_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 2469              		.loc 1 673 2 is_stmt 1 view .LVU749
 2470              		.loc 1 673 38 is_stmt 0 view .LVU750
 2471 0784 174B     		ldr	r3, .L162+80
 2472 0786 2B66     		str	r3, [r5, #96]
 674:boards/TMC4331_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC4331_MOTORS;
 2473              		.loc 1 674 2 is_stmt 1 view .LVU751
 675:boards/TMC4331_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 2474              		.loc 1 675 38 is_stmt 0 view .LVU752
 2475 0788 174B     		ldr	r3, .L162+84
 2476 078a EB65     		str	r3, [r5, #92]
 676:boards/TMC4331_eval.c **** 
 677:boards/TMC4331_eval.c **** 	// Provide the cover function to the driver channel
 678:boards/TMC4331_eval.c **** 	Evalboards.ch1.fullCover            = tmc4331_fullCover;
 2477              		.loc 1 678 38 view .LVU753
 2478 078c 174B     		ldr	r3, .L162+88
 674:boards/TMC4331_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 2479              		.loc 1 674 38 view .LVU754
 2480 078e 2A75     		strb	r2, [r5, #20]
 675:boards/TMC4331_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 2481              		.loc 1 675 2 is_stmt 1 view .LVU755
 2482              		.loc 1 678 2 view .LVU756
 2483              		.loc 1 678 38 is_stmt 0 view .LVU757
 2484 0790 EB66     		str	r3, [r5, #108]
 679:boards/TMC4331_eval.c **** };
 2485              		.loc 1 679 1 view .LVU758
 2486 0792 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2487              	.L163:
 2488              		.align	2
 2489              	.L162:
 2490 0794 00000000 		.word	.LANCHOR0
 2491 0798 00000000 		.word	Evalboards
 2492 079c 00000000 		.word	.LANCHOR1
 2493 07a0 00000000 		.word	HAL
 2494 07a4 00000000 		.word	configCallback
 2495 07a8 00000000 		.word	reset
 2496 07ac 00000000 		.word	restore
 2497 07b0 00000000 		.word	tmc4331_cover
 2498 07b4 00000000 		.word	rotate
 2499 07b8 00000000 		.word	right
 2500 07bc 00000000 		.word	left
 2501 07c0 00000000 		.word	stop
 2502 07c4 00000000 		.word	GAP
 2503 07c8 00000000 		.word	SAP
 2504 07cc 00000000 		.word	moveTo
 2505 07d0 00000000 		.word	moveBy
 2506 07d4 00000000 		.word	writeRegister
 2507 07d8 00000000 		.word	readRegister
 2508 07dc 00000000 		.word	periodicJob
 2509 07e0 00000000 		.word	userFunction
 2510 07e4 00000000 		.word	checkErrors
 2511 07e8 00000000 		.word	deInit
 2512 07ec 00000000 		.word	tmc4331_fullCover
 2513              		.cfi_endproc
 2514              	.LFE24:
 2516              		.comm	IdState,40,4
 2517              		.comm	TMCMotionController,532,4
 2518              		.comm	TMCDriver,532,4
 2519              		.comm	Evalboards,244,4
 2520              		.comm	VitalSignsMonitor,20,4
 2521              		.comm	hwid,1,1
 2522              		.comm	HAL,48,4
 2523              		.comm	UART,40,4
 2524              		.comm	Timer,16,4
 2525              		.comm	WLAN,36,4
 2526              		.comm	RS232,36,4
 2527              		.comm	LEDs,28,4
 2528              		.comm	USB,36,4
 2529              		.comm	uart0_interrupt,1,1
 2530              		.comm	ADCs,32,4
 2531              		.comm	SPI,44,4
 2532              		.comm	IOMap,2088,4
 2533              		.comm	IOs,52,4
 2534              		.comm	Cpu,8,4
 2535              		.section	.rodata
 2536              		.align	2
 2537              		.set	.LANCHOR1,. + 0
 2540              	tmc4331_defaultRegisterResetState:
 2541 0000 00000000 		.word	0
 2542 0004 00000000 		.word	0
 2543 0008 00000000 		.word	0
 2544 000c 00000000 		.word	0
 2545 0010 00000000 		.word	0
 2546 0014 00000000 		.word	0
 2547 0018 00000000 		.word	0
 2548 001c 00000000 		.word	0
 2549 0020 00000000 		.word	0
 2550 0024 00000000 		.word	0
 2551 0028 00000000 		.word	0
 2552 002c 00000000 		.word	0
 2553 0030 00000000 		.word	0
 2554 0034 00000000 		.word	0
 2555 0038 00000000 		.word	0
 2556 003c 00000000 		.word	0
 2557 0040 01000400 		.word	262145
 2558 0044 00000000 		.word	0
 2559 0048 00000000 		.word	0
 2560 004c 00000000 		.word	0
 2561 0050 00000000 		.word	0
 2562 0054 00000000 		.word	0
 2563 0058 00000000 		.word	0
 2564 005c 00000000 		.word	0
 2565 0060 00000000 		.word	0
 2566 0064 00000000 		.word	0
 2567 0068 00000000 		.word	0
 2568 006c 00000000 		.word	0
 2569 0070 00000000 		.word	0
 2570 0074 00000000 		.word	0
 2571 0078 00000000 		.word	0
 2572 007c 00000000 		.word	0
 2573 0080 01000000 		.word	1
 2574 0084 00000000 		.word	0
 2575 0088 00000000 		.word	0
 2576 008c 00000000 		.word	0
 2577 0090 00000000 		.word	0
 2578 0094 00000000 		.word	0
 2579 0098 00000000 		.word	0
 2580 009c 00000000 		.word	0
 2581 00a0 00000000 		.word	0
 2582 00a4 00000000 		.word	0
 2583 00a8 00000000 		.word	0
 2584 00ac 00000000 		.word	0
 2585 00b0 00000000 		.word	0
 2586 00b4 00000000 		.word	0
 2587 00b8 00000000 		.word	0
 2588 00bc 00000000 		.word	0
 2589 00c0 00000000 		.word	0
 2590 00c4 00000000 		.word	0
 2591 00c8 00000000 		.word	0
 2592 00cc 00000000 		.word	0
 2593 00d0 00000000 		.word	0
 2594 00d4 00000000 		.word	0
 2595 00d8 00000000 		.word	0
 2596 00dc 00000000 		.word	0
 2597 00e0 00000000 		.word	0
 2598 00e4 00000000 		.word	0
 2599 00e8 00000000 		.word	0
 2600 00ec 00000000 		.word	0
 2601 00f0 00000000 		.word	0
 2602 00f4 00000000 		.word	0
 2603 00f8 00000000 		.word	0
 2604 00fc 00000000 		.word	0
 2605 0100 00000000 		.word	0
 2606 0104 00000000 		.word	0
 2607 0108 00000000 		.word	0
 2608 010c 00000000 		.word	0
 2609 0110 00000000 		.word	0
 2610 0114 00000000 		.word	0
 2611 0118 00000000 		.word	0
 2612 011c 00000000 		.word	0
 2613 0120 00000000 		.word	0
 2614 0124 00000000 		.word	0
 2615 0128 00000000 		.word	0
 2616 012c 00000000 		.word	0
 2617 0130 00000000 		.word	0
 2618 0134 00000000 		.word	0
 2619 0138 00000000 		.word	0
 2620 013c 00000000 		.word	0
 2621 0140 00000000 		.word	0
 2622 0144 00000000 		.word	0
 2623 0148 00000000 		.word	0
 2624 014c 00000000 		.word	0
 2625 0150 00000000 		.word	0
 2626 0154 00000000 		.word	0
 2627 0158 00000000 		.word	0
 2628 015c 00000000 		.word	0
 2629 0160 00000000 		.word	0
 2630 0164 00000000 		.word	0
 2631 0168 00000000 		.word	0
 2632 016c 00000000 		.word	0
 2633 0170 00000000 		.word	0
 2634 0174 00000000 		.word	0
 2635 0178 00000000 		.word	0
 2636 017c 00000000 		.word	0
 2637 0180 00000000 		.word	0
 2638 0184 00000000 		.word	0
 2639 0188 00000000 		.word	0
 2640 018c 00000000 		.word	0
 2641 0190 00000000 		.word	0
 2642 0194 00000000 		.word	0
 2643 0198 00000000 		.word	0
 2644 019c 00000000 		.word	0
 2645 01a0 00000000 		.word	0
 2646 01a4 00000000 		.word	0
 2647 01a8 00000000 		.word	0
 2648 01ac 00000000 		.word	0
 2649 01b0 00000000 		.word	0
 2650 01b4 00000000 		.word	0
 2651 01b8 00000000 		.word	0
 2652 01bc 00000000 		.word	0
 2653 01c0 00000000 		.word	0
 2654 01c4 00000000 		.word	0
 2655 01c8 00000000 		.word	0
 2656 01cc 00000000 		.word	0
 2657 01d0 00000000 		.word	0
 2658 01d4 00000000 		.word	0
 2659 01d8 00000000 		.word	0
 2660 01dc 00000000 		.word	0
 2661 01e0 00000000 		.word	0
 2662 01e4 00000000 		.word	0
 2663 01e8 00000000 		.word	0
 2664 01ec 00000000 		.word	0
 2665 01f0 00000000 		.word	0
 2666 01f4 00000000 		.word	0
 2667 01f8 00000000 		.word	0
 2668 01fc 00000000 		.word	0
 2669              		.bss
 2670              		.align	3
 2671              		.set	.LANCHOR0,. + 0
 2674              	Pins:
 2675 0000 00000000 		.space	36
 2675      00000000 
 2675      00000000 
 2675      00000000 
 2675      00000000 
 2678              	TMC4331:
 2679 0024 00000000 		.space	660
 2679      00000000 
 2679      00000000 
 2679      00000000 
 2679      00000000 
 2682              	high.7845:
 2683 02b8 00000000 		.space	4
 2686              	vmax_position:
 2687 02bc 00000000 		.space	4
 2690              	coverOut.7773:
 2691 02c0 00000000 		.space	8
 2691      00000000 
 2694              	coverLength.7774:
 2695 02c8 00       		.space	1
 2696 02c9 00000000 		.space	7
 2696      000000
 2699              	coverIn.7772:
 2700 02d0 00000000 		.space	8
 2700      00000000 
 2703              	TMC4331_SPIChannel:
 2704 02d8 00000000 		.space	4
 2707              	ADCValue:
 2708 02dc 00000000 		.space	12
 2708      00000000 
 2708      00000000 
 2709              		.text
 2710              	.Letext0:
 2711              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 2712              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2713              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2714              		.file 5 "TMC-API/tmc/helpers/Types.h"
 2715              		.file 6 "TMC-API/tmc/helpers/Config.h"
 2716              		.file 7 "TMC-API/tmc/helpers/RegisterAccess.h"
 2717              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2718              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2719              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 2720              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 2721              		.file 12 "TMC-API/tmc/helpers/API_Header.h"
 2722              		.file 13 "hal/Landungsbruecke/freescale/MK20D10.h"
 2723              		.file 14 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 2724              		.file 15 "./hal/Landungsbruecke/freescale/Cpu.h"
 2725              		.file 16 "./hal/IOs.h"
 2726              		.file 17 "./hal/IOMap.h"
 2727              		.file 18 "./hal/SPI.h"
 2728              		.file 19 "./hal/ADCs.h"
 2729              		.file 20 "./hal/RXTX.h"
 2730              		.file 21 "./hal/USB.h"
 2731              		.file 22 "./hal/LEDs.h"
 2732              		.file 23 "./hal/RS232.h"
 2733              		.file 24 "./hal/WLAN.h"
 2734              		.file 25 "./hal/Timer.h"
 2735              		.file 26 "./hal/UART.h"
 2736              		.file 27 "./hal/HAL.h"
 2737              		.file 28 "./tmc/VitalSignsMonitor.h"
 2738              		.file 29 "boards/Board.h"
 2739              		.file 30 "boards/TMCDriver.h"
 2740              		.file 31 "boards/TMCMotionController.h"
 2741              		.file 32 "./tmc/BoardAssignment.h"
 2742              		.file 33 "TMC-API/tmc/ic/TMC4331/TMC4331.h"
 2743              		.file 34 "TMC-API/tmc/ic/TMC2130/TMC2130.h"
 2744              		.file 35 "TMC-API/tmc/ic/TMC2160/TMC2160.h"
 2745              		.file 36 "./hal/SysTick.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC4331_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:22     .text:00000000 checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:42     .text:00000008 $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:46     .text:0000000c $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:52     .text:0000000c userFunction
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:82     .text:0000001e $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:252    .text:000000c8 $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:258    .text:000000d4 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:264    .text:000000d4 deInit
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:383    .text:00000138 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:388    .text:00000140 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:394    .text:00000140 tmc4331_fullCover
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:418    .text:0000014c $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:422    .text:00000150 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:428    .text:00000150 periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:449    .text:00000158 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:453    .text:0000015c $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:459    .text:0000015c readRegister
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:497    .text:0000016c $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:501    .text:00000170 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:507    .text:00000170 writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:649    .text:00000208 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:655    .text:00000214 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:661    .text:00000214 moveBy
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:697    .text:00000228 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:701    .text:0000022c $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:707    .text:0000022c moveTo
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:743    .text:00000240 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:747    .text:00000244 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:753    .text:00000244 handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:784    .text:0000025c $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:812    .text:00000294 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1445   .text:00000450 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1451   .text:0000045c $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1457   .text:0000045c SAP
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1497   .text:00000470 GAP
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1527   .text:00000478 stop
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1576   .text:00000488 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1580   .text:0000048c $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1586   .text:0000048c left
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1637   .text:0000049c $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1641   .text:000004a0 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1647   .text:000004a0 right
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1695   .text:000004ac $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1699   .text:000004b0 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1705   .text:000004b0 restore
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1757   .text:000004dc $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1762   .text:000004e4 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1768   .text:000004e4 reset
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1820   .text:00000510 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1825   .text:00000518 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1831   .text:00000518 configCallback
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1923   .text:00000560 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1927   .text:00000564 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:1933   .text:00000564 tmc4331_cover
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2099   .text:00000634 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2104   .text:0000063c $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2110   .text:0000063c rotate
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2127   .text:00000648 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2131   .text:0000064c $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2138   .text:0000064c tmc4331_readWriteArray
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2173   .text:0000065c $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2177   .text:00000660 $t
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2184   .text:00000660 TMC4331_init
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2490   .text:00000794 $d
                            *COM*:00000028 IdState
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2536   .rodata:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2540   .rodata:00000000 tmc4331_defaultRegisterResetState
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2670   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2674   .bss:00000000 Pins
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2678   .bss:00000024 TMC4331
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2682   .bss:000002b8 high.7845
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2686   .bss:000002bc vmax_position
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2690   .bss:000002c0 coverOut.7773
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2694   .bss:000002c8 coverLength.7774
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2699   .bss:000002d0 coverIn.7772
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2703   .bss:000002d8 TMC4331_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:2707   .bss:000002dc ADCValue
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:86     .text:00000021 $d
C:\Users\Shubham\AppData\Local\Temp\ccTP2eas.s:86     .text:00000022 $t

UNDEFINED SYMBOLS
tmc4331_readWriteCover
tmc4331_periodicJob
tmc4331_readInt
tmc2160_readInt
tmc2160_writeInt
tmc4331_writeInt
tmc2130_readInt
tmc2130_writeInt
tmc4331_moveBy
tmc4331_moveTo
tmc4331_discardVelocityDecimals
tmc4331_rotate
wait
tmc4331_restore
tmc4331_reset
tmc4331_init
tmc4331_setCallback
