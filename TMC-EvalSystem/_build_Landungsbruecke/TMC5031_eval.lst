   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC5031_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	getMeasuredSpeed:
  23              	.LVL0:
  24              	.LFB13:
  25              		.file 1 "boards/TMC5031_eval.c"
   1:boards/TMC5031_eval.c **** #include "Board.h"
   2:boards/TMC5031_eval.c **** #include "tmc/ic/TMC5031/TMC5031.h"
   3:boards/TMC5031_eval.c **** 
   4:boards/TMC5031_eval.c **** #define ERRORS_VM        (1<<0)
   5:boards/TMC5031_eval.c **** #define ERRORS_VM_UNDER  (1<<1)
   6:boards/TMC5031_eval.c **** #define ERRORS_VM_OVER   (1<<2)
   7:boards/TMC5031_eval.c **** 
   8:boards/TMC5031_eval.c **** #define VM_MIN  50   // VM[V/10] min
   9:boards/TMC5031_eval.c **** #define VM_MAX  182  // VM[V/10] max +10%
  10:boards/TMC5031_eval.c **** 
  11:boards/TMC5031_eval.c **** #define MOTORS 2
  12:boards/TMC5031_eval.c **** 
  13:boards/TMC5031_eval.c **** static int vMax[MOTORS] = {0, 0};
  14:boards/TMC5031_eval.c **** static uint8_t vMaxModified[MOTORS] = {true, true};
  15:boards/TMC5031_eval.c **** 
  16:boards/TMC5031_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
  17:boards/TMC5031_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
  18:boards/TMC5031_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
  19:boards/TMC5031_eval.c **** static uint32_t stop(uint8_t motor);
  20:boards/TMC5031_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  21:boards/TMC5031_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  22:boards/TMC5031_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  23:boards/TMC5031_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  24:boards/TMC5031_eval.c **** 
  25:boards/TMC5031_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value);
  26:boards/TMC5031_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value);
  27:boards/TMC5031_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value);
  28:boards/TMC5031_eval.c **** 
  29:boards/TMC5031_eval.c **** static void periodicJob(uint32_t tick);
  30:boards/TMC5031_eval.c **** static void checkErrors	(uint32_t tick);
  31:boards/TMC5031_eval.c **** static void deInit(void);
  32:boards/TMC5031_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  33:boards/TMC5031_eval.c **** 
  34:boards/TMC5031_eval.c **** static uint8_t reset();
  35:boards/TMC5031_eval.c **** static void enableDriver(DriverState state);
  36:boards/TMC5031_eval.c **** 
  37:boards/TMC5031_eval.c **** static SPIChannelTypeDef *TMC5031_SPIChannel;
  38:boards/TMC5031_eval.c **** static TMC5031TypeDef TMC5031;
  39:boards/TMC5031_eval.c **** static ConfigurationTypeDef *TMC5031_config;
  40:boards/TMC5031_eval.c **** 
  41:boards/TMC5031_eval.c **** typedef struct
  42:boards/TMC5031_eval.c **** {
  43:boards/TMC5031_eval.c **** 	IOPinTypeDef  *DRV_ENN;
  44:boards/TMC5031_eval.c **** 	IOPinTypeDef  *INT_ENCA;
  45:boards/TMC5031_eval.c **** 	IOPinTypeDef  *PP_ENCB;
  46:boards/TMC5031_eval.c **** 	IOPinTypeDef  *SWSEL;
  47:boards/TMC5031_eval.c **** 	IOPinTypeDef  *SWIOP1;
  48:boards/TMC5031_eval.c **** 	IOPinTypeDef  *SWIOP2;
  49:boards/TMC5031_eval.c **** 	IOPinTypeDef  *SWION;
  50:boards/TMC5031_eval.c **** 
  51:boards/TMC5031_eval.c **** } PinsTypeDef;
  52:boards/TMC5031_eval.c **** 
  53:boards/TMC5031_eval.c **** static PinsTypeDef Pins;
  54:boards/TMC5031_eval.c **** 
  55:boards/TMC5031_eval.c **** void tmc5031_writeDatagram(uint8_t motor, uint8_t address, uint8_t x1, uint8_t x2, uint8_t x3, uint
  56:boards/TMC5031_eval.c **** {
  57:boards/TMC5031_eval.c **** 	UNUSED(motor);
  58:boards/TMC5031_eval.c **** 	int value;
  59:boards/TMC5031_eval.c **** 
  60:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(address | TMC5031_WRITE_BIT, false);
  61:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x1, false);
  62:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x2, false);
  63:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x3, false);
  64:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x4, true);
  65:boards/TMC5031_eval.c **** 
  66:boards/TMC5031_eval.c **** 	value = x1;
  67:boards/TMC5031_eval.c **** 	value <<= 8;
  68:boards/TMC5031_eval.c **** 	value |= x2;
  69:boards/TMC5031_eval.c **** 	value <<= 8;
  70:boards/TMC5031_eval.c **** 	value |= x3;
  71:boards/TMC5031_eval.c **** 	value <<= 8;
  72:boards/TMC5031_eval.c **** 	value |= x4;
  73:boards/TMC5031_eval.c **** 	TMC5031_config->shadowRegister[address & 0x7F] = value;
  74:boards/TMC5031_eval.c **** }
  75:boards/TMC5031_eval.c **** 
  76:boards/TMC5031_eval.c **** void tmc5031_writeInt(uint8_t motor, uint8_t Address, int Value)
  77:boards/TMC5031_eval.c **** {
  78:boards/TMC5031_eval.c **** 	tmc5031_writeDatagram(motor, Address, 0xFF & (Value>>24), 0xFF & (Value>>16), 0xFF & (Value>>8), 0
  79:boards/TMC5031_eval.c **** }
  80:boards/TMC5031_eval.c **** 
  81:boards/TMC5031_eval.c **** int tmc5031_readInt(uint8_t motor, uint8_t address)
  82:boards/TMC5031_eval.c **** {
  83:boards/TMC5031_eval.c **** 	UNUSED(motor);
  84:boards/TMC5031_eval.c **** 	int value;
  85:boards/TMC5031_eval.c **** 
  86:boards/TMC5031_eval.c **** 	address &= 0x7F;
  87:boards/TMC5031_eval.c **** 
  88:boards/TMC5031_eval.c **** 	// register not readable -> shadow register copy
  89:boards/TMC5031_eval.c **** 	if(!TMC_IS_READABLE(TMC5031.registerAccess[address]))
  90:boards/TMC5031_eval.c **** 		return TMC5031_config->shadowRegister[address];
  91:boards/TMC5031_eval.c **** 
  92:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(address, false);
  93:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
  94:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
  95:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
  96:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, true);
  97:boards/TMC5031_eval.c **** 
  98:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(address, false);
  99:boards/TMC5031_eval.c **** 	value = TMC5031_SPIChannel->readWrite(0, false);
 100:boards/TMC5031_eval.c **** 	value <<= 8;
 101:boards/TMC5031_eval.c **** 	value |= TMC5031_SPIChannel->readWrite(0, false);
 102:boards/TMC5031_eval.c **** 	value <<= 8;
 103:boards/TMC5031_eval.c **** 	value |= TMC5031_SPIChannel->readWrite(0, false);
 104:boards/TMC5031_eval.c **** 	value <<= 8;
 105:boards/TMC5031_eval.c **** 	value |= TMC5031_SPIChannel->readWrite(0, true);
 106:boards/TMC5031_eval.c **** 
 107:boards/TMC5031_eval.c **** 	return value;
 108:boards/TMC5031_eval.c **** }
 109:boards/TMC5031_eval.c **** 
 110:boards/TMC5031_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
 111:boards/TMC5031_eval.c **** {
 112:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
 113:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 114:boards/TMC5031_eval.c **** 
 115:boards/TMC5031_eval.c **** 	tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(velocity));
 116:boards/TMC5031_eval.c **** 	vMaxModified[motor] = true;
 117:boards/TMC5031_eval.c **** 	if(velocity >= 0)
 118:boards/TMC5031_eval.c **** 	{
 119:boards/TMC5031_eval.c **** 		tmc5031_writeDatagram(motor, TMC5031_RAMPMODE(motor), 0, 0, 0, TMC5031_MODE_VELPOS);
 120:boards/TMC5031_eval.c **** 	}
 121:boards/TMC5031_eval.c **** 	else
 122:boards/TMC5031_eval.c **** 	{
 123:boards/TMC5031_eval.c **** 		tmc5031_writeDatagram(motor, TMC5031_RAMPMODE(motor), 0, 0, 0, TMC5031_MODE_VELNEG);
 124:boards/TMC5031_eval.c **** 	}
 125:boards/TMC5031_eval.c **** 	return TMC_ERROR_NONE;
 126:boards/TMC5031_eval.c **** }
 127:boards/TMC5031_eval.c **** 
 128:boards/TMC5031_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
 129:boards/TMC5031_eval.c **** {
 130:boards/TMC5031_eval.c **** 	return rotate(motor, velocity);
 131:boards/TMC5031_eval.c **** }
 132:boards/TMC5031_eval.c **** 
 133:boards/TMC5031_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
 134:boards/TMC5031_eval.c **** {
 135:boards/TMC5031_eval.c **** 	return rotate(motor, -velocity);
 136:boards/TMC5031_eval.c **** }
 137:boards/TMC5031_eval.c **** 
 138:boards/TMC5031_eval.c **** static uint32_t stop(uint8_t motor)
 139:boards/TMC5031_eval.c **** {
 140:boards/TMC5031_eval.c **** 	return rotate(motor, 0);
 141:boards/TMC5031_eval.c **** }
 142:boards/TMC5031_eval.c **** 
 143:boards/TMC5031_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
 144:boards/TMC5031_eval.c **** {
 145:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
 146:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 147:boards/TMC5031_eval.c **** 
 148:boards/TMC5031_eval.c **** 	if(vMaxModified[motor])
 149:boards/TMC5031_eval.c **** 	{
 150:boards/TMC5031_eval.c **** 		tmc5031_writeInt(motor, TMC5031_VMAX(motor), vMax[motor]);
 151:boards/TMC5031_eval.c **** 		vMaxModified[motor] = false;
 152:boards/TMC5031_eval.c **** 	}
 153:boards/TMC5031_eval.c **** 	tmc5031_writeInt(motor, TMC5031_XTARGET(motor), position);
 154:boards/TMC5031_eval.c **** 	tmc5031_writeDatagram(motor, TMC5031_RAMPMODE(motor), 0, 0, 0, TMC5031_MODE_POSITION);
 155:boards/TMC5031_eval.c **** 
 156:boards/TMC5031_eval.c **** 	return TMC_ERROR_NONE;
 157:boards/TMC5031_eval.c **** }
 158:boards/TMC5031_eval.c **** 
 159:boards/TMC5031_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 160:boards/TMC5031_eval.c **** {
 161:boards/TMC5031_eval.c **** 	// determine actual position and add numbers of ticks to move
 162:boards/TMC5031_eval.c **** 	*ticks = tmc5031_readInt(motor, TMC5031_XACTUAL(motor)) + *ticks;
 163:boards/TMC5031_eval.c **** 
 164:boards/TMC5031_eval.c **** 	return moveTo(motor, *ticks);
 165:boards/TMC5031_eval.c **** }
 166:boards/TMC5031_eval.c **** 
 167:boards/TMC5031_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 168:boards/TMC5031_eval.c **** {
 169:boards/TMC5031_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 170:boards/TMC5031_eval.c **** 	int tempValue;
 171:boards/TMC5031_eval.c **** 
 172:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
 173:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 174:boards/TMC5031_eval.c **** 
 175:boards/TMC5031_eval.c **** 	switch(type)
 176:boards/TMC5031_eval.c **** 	{
 177:boards/TMC5031_eval.c **** 	case 0:
 178:boards/TMC5031_eval.c **** 		// Target position
 179:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 180:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_XTARGET(motor));
 181:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 182:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_XTARGET(motor), *value);
 183:boards/TMC5031_eval.c **** 		}
 184:boards/TMC5031_eval.c **** 		break;
 185:boards/TMC5031_eval.c **** 	case 1:
 186:boards/TMC5031_eval.c **** 		// Actual position
 187:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 188:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_XACTUAL(motor));
 189:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 190:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_XACTUAL(motor), *value);
 191:boards/TMC5031_eval.c **** 		}
 192:boards/TMC5031_eval.c **** 		break;
 193:boards/TMC5031_eval.c **** 	case 2:
 194:boards/TMC5031_eval.c **** 		// Target speed
 195:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 196:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_VMAX(motor));
 197:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 198:boards/TMC5031_eval.c **** 			vMaxModified[motor] = true;
 199:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 200:boards/TMC5031_eval.c **** 		}
 201:boards/TMC5031_eval.c **** 		break;
 202:boards/TMC5031_eval.c **** 	case 3:
 203:boards/TMC5031_eval.c **** 		// todo CHECK 3: min max actually velocity min and velocity max? (JE) #2
 204:boards/TMC5031_eval.c **** 		// Actual speed
 205:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 206:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VACTUAL(motor));
 207:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 208:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 209:boards/TMC5031_eval.c **** 			errors |= TMC_ERROR_TYPE;
 210:boards/TMC5031_eval.c **** 		}
 211:boards/TMC5031_eval.c **** 		break;
 212:boards/TMC5031_eval.c **** 	case 4:
 213:boards/TMC5031_eval.c **** 		// Maximum speed
 214:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 215:boards/TMC5031_eval.c **** 			*value=vMax[motor];
 216:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 217:boards/TMC5031_eval.c **** 			vMax[motor] = abs(*value);
 218:boards/TMC5031_eval.c **** 			if(tmc5031_readInt(motor, TMC5031_RAMPMODE(motor)) == TMC5031_MODE_POSITION)
 219:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 220:boards/TMC5031_eval.c **** 		}
 221:boards/TMC5031_eval.c **** 		break;
 222:boards/TMC5031_eval.c **** 	case 5:
 223:boards/TMC5031_eval.c **** 		// Maximum acceleration
 224:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 225:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_AMAX(motor));
 226:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 227:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_AMAX(motor), *value);
 228:boards/TMC5031_eval.c **** 		}
 229:boards/TMC5031_eval.c **** 		break;
 230:boards/TMC5031_eval.c **** 	case 6:
 231:boards/TMC5031_eval.c **** 		// Maximum current
 232:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 233:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IRUN_MASK, TMC5031_IRUN_SH
 234:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 235:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IRUN_MASK, TMC5031_IRUN_SHIFT, *v
 236:boards/TMC5031_eval.c **** 		}
 237:boards/TMC5031_eval.c **** 		break;
 238:boards/TMC5031_eval.c **** 	case 7:
 239:boards/TMC5031_eval.c **** 		// Standby current
 240:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 241:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IHOLD_MASK, TMC5031_IHOLD_
 242:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 243:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IHOLD_MASK, TMC5031_IHOLD_SHIFT, 
 244:boards/TMC5031_eval.c **** 		}
 245:boards/TMC5031_eval.c **** 		break;
 246:boards/TMC5031_eval.c **** 	case 8:
 247:boards/TMC5031_eval.c **** 		// Position reached flag
 248:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 249:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_RAMPSTAT(motor), TMC5031_POSITION_REACHED_MASK, TMC50
 250:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 251:boards/TMC5031_eval.c **** 			errors |= TMC_ERROR_TYPE;
 252:boards/TMC5031_eval.c **** 		}
 253:boards/TMC5031_eval.c **** 		break;
 254:boards/TMC5031_eval.c **** 	case 10:
 255:boards/TMC5031_eval.c **** 		// Right endstop
 256:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 257:boards/TMC5031_eval.c **** 			*value = !TMC5031_FIELD_READ(motor, TMC5031_RAMPSTAT(motor), TMC5031_STATUS_STOP_R_MASK, TMC5031
 258:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 259:boards/TMC5031_eval.c **** 			errors |= TMC_ERROR_TYPE;
 260:boards/TMC5031_eval.c **** 		}
 261:boards/TMC5031_eval.c **** 		break;
 262:boards/TMC5031_eval.c **** 	case 11:
 263:boards/TMC5031_eval.c **** 		// Left endstop
 264:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 265:boards/TMC5031_eval.c **** 			*value = !TMC5031_FIELD_READ(motor, TMC5031_RAMPSTAT(motor), TMC5031_STATUS_STOP_L_MASK, TMC5031
 266:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 267:boards/TMC5031_eval.c **** 			errors |= TMC_ERROR_TYPE;
 268:boards/TMC5031_eval.c **** 		}
 269:boards/TMC5031_eval.c **** 		break;
 270:boards/TMC5031_eval.c **** 	case 12:
 271:boards/TMC5031_eval.c **** 		// Automatic right stop
 272:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 273:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_SWMODE(motor), TMC5031_STOP_R_ENABLE_MASK, TMC5031_ST
 274:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 275:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_SWMODE(motor), TMC5031_STOP_R_ENABLE_MASK, TMC5031_STOP_R_EN
 276:boards/TMC5031_eval.c **** 		}
 277:boards/TMC5031_eval.c **** 		break;
 278:boards/TMC5031_eval.c **** 	case 13:
 279:boards/TMC5031_eval.c **** 		// Automatic left stop
 280:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 281:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_SWMODE(motor), TMC5031_STOP_L_ENABLE_MASK, TMC5031_ST
 282:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 283:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_SWMODE(motor), TMC5031_STOP_L_ENABLE_MASK, TMC5031_STOP_L_EN
 284:boards/TMC5031_eval.c **** 		}
 285:boards/TMC5031_eval.c **** 		break;
 286:boards/TMC5031_eval.c **** 	case 14:
 287:boards/TMC5031_eval.c **** 		// SW_MODE Register
 288:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 289:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_SWMODE(motor));
 290:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 291:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_SWMODE(motor), *value);
 292:boards/TMC5031_eval.c **** 		}
 293:boards/TMC5031_eval.c **** 		break;
 294:boards/TMC5031_eval.c **** 	case 15:
 295:boards/TMC5031_eval.c **** 		// Acceleration A1
 296:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 297:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_A1(motor));
 298:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 299:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_A1(motor), *value);
 300:boards/TMC5031_eval.c **** 		}
 301:boards/TMC5031_eval.c **** 		break;
 302:boards/TMC5031_eval.c **** 	case 16:
 303:boards/TMC5031_eval.c **** 		// Velocity V1
 304:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 305:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_V1(motor));
 306:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 307:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_V1(motor), *value);
 308:boards/TMC5031_eval.c **** 		}
 309:boards/TMC5031_eval.c **** 		break;
 310:boards/TMC5031_eval.c **** 	case 17:
 311:boards/TMC5031_eval.c **** 		// Maximum Deceleration
 312:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 313:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_DMAX(motor));
 314:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 315:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_DMAX(motor), *value);
 316:boards/TMC5031_eval.c **** 		}
 317:boards/TMC5031_eval.c **** 		break;
 318:boards/TMC5031_eval.c **** 	case 18:
 319:boards/TMC5031_eval.c **** 		// Deceleration D1
 320:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 321:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_D1(motor));
 322:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 323:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_D1(motor), *value);
 324:boards/TMC5031_eval.c **** 		}
 325:boards/TMC5031_eval.c **** 		break;
 326:boards/TMC5031_eval.c **** 	case 19:
 327:boards/TMC5031_eval.c **** 		// Velocity VSTART
 328:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 329:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VSTART(motor));
 330:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 331:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VSTART(motor), *value);
 332:boards/TMC5031_eval.c **** 		}
 333:boards/TMC5031_eval.c **** 		break;
 334:boards/TMC5031_eval.c **** 	case 20:
 335:boards/TMC5031_eval.c **** 		// Velocity VSTOP
 336:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 337:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VSTOP(motor));
 338:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 339:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VSTOP(motor), *value);
 340:boards/TMC5031_eval.c **** 		}
 341:boards/TMC5031_eval.c **** 		break;
 342:boards/TMC5031_eval.c **** 	case 21:
 343:boards/TMC5031_eval.c **** 		// Waiting time after ramp down
 344:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 345:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_TZEROWAIT(motor));
 346:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 347:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_TZEROWAIT(motor), *value);
 348:boards/TMC5031_eval.c **** 		}
 349:boards/TMC5031_eval.c **** 		break;
 350:boards/TMC5031_eval.c **** 	case 22:
 351:boards/TMC5031_eval.c **** 		// smartEnergy threshold speed
 352:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 353:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VCOOLTHRS(motor));
 354:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 355:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VCOOLTHRS(motor), *value);
 356:boards/TMC5031_eval.c **** 		}
 357:boards/TMC5031_eval.c **** 		break;
 358:boards/TMC5031_eval.c **** 	case 23:
 359:boards/TMC5031_eval.c **** 		// Speed threshold for high speed mode
 360:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 361:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VHIGH(motor));
 362:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 363:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VHIGH(motor), *value);
 364:boards/TMC5031_eval.c **** 		}
 365:boards/TMC5031_eval.c **** 		break;
 366:boards/TMC5031_eval.c **** 	case 24:
 367:boards/TMC5031_eval.c **** 		// Minimum speed for switching to dcStep
 368:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 369:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VDCMIN(motor));
 370:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 371:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VDCMIN(motor), *value);
 372:boards/TMC5031_eval.c **** 		}
 373:boards/TMC5031_eval.c **** 		break;
 374:boards/TMC5031_eval.c **** 	case 28:
 375:boards/TMC5031_eval.c **** 		// High speed fullstep mode
 376:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 377:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_VHIGHFS_MASK, TMC5031_VHIGHF
 378:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 379:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_VHIGHFS_MASK, TMC5031_VHIGHFS_SHIFT
 380:boards/TMC5031_eval.c **** 		}
 381:boards/TMC5031_eval.c **** 		break;
 382:boards/TMC5031_eval.c **** 	case 29:
 383:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 384:boards/TMC5031_eval.c **** 			*value = TMC5031_config->shadowRegister[TMC5031_VACTUAL(motor)];
 385:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 386:boards/TMC5031_eval.c **** 			errors |= TMC_ERROR_TYPE;
 387:boards/TMC5031_eval.c **** 		}
 388:boards/TMC5031_eval.c **** 		break;
 389:boards/TMC5031_eval.c **** 	case 140:
 390:boards/TMC5031_eval.c **** 		// Microstep Resolution
 391:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 392:boards/TMC5031_eval.c **** 			*value = 256 >> TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_MRES_MASK, TMC5031_MR
 393:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 394:boards/TMC5031_eval.c **** 			switch(*value)
 395:boards/TMC5031_eval.c **** 			{
 396:boards/TMC5031_eval.c **** 			case 1:    *value = 8;   break;
 397:boards/TMC5031_eval.c **** 			case 2:    *value = 7;   break;
 398:boards/TMC5031_eval.c **** 			case 4:    *value = 6;   break;
 399:boards/TMC5031_eval.c **** 			case 8:    *value = 5;   break;
 400:boards/TMC5031_eval.c **** 			case 16:   *value = 4;   break;
 401:boards/TMC5031_eval.c **** 			case 32:   *value = 3;   break;
 402:boards/TMC5031_eval.c **** 			case 64:   *value = 2;   break;
 403:boards/TMC5031_eval.c **** 			case 128:  *value = 1;   break;
 404:boards/TMC5031_eval.c **** 			case 256:  *value = 0;   break;
 405:boards/TMC5031_eval.c **** 			default:   *value = -1;  break;
 406:boards/TMC5031_eval.c **** 			}
 407:boards/TMC5031_eval.c **** 
 408:boards/TMC5031_eval.c **** 			if(*value != -1)
 409:boards/TMC5031_eval.c **** 			{
 410:boards/TMC5031_eval.c **** 				tempValue = tmc5031_readInt(motor, TMC5031_CHOPCONF(motor));
 411:boards/TMC5031_eval.c **** 				tempValue &= ~(0x0F<<24);
 412:boards/TMC5031_eval.c **** 				tempValue |= (*value & 0xF) << 24;
 413:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_CHOPCONF(motor),tempValue);
 414:boards/TMC5031_eval.c **** 				TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_MRES_MASK, TMC5031_MRES_SHIFT, *va
 415:boards/TMC5031_eval.c **** 			}
 416:boards/TMC5031_eval.c **** 			//else TMCL.reply->Status = REPLY_INVALID_VALUE;
 417:boards/TMC5031_eval.c **** 		}
 418:boards/TMC5031_eval.c **** 		break;
 419:boards/TMC5031_eval.c **** 	case 162:
 420:boards/TMC5031_eval.c **** 		// Chopper blank time
 421:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 422:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_TBL_MASK, TMC5031_TBL_SHIFT)
 423:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 424:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_TBL_MASK, TMC5031_TBL_SHIFT, *value
 425:boards/TMC5031_eval.c **** 		}
 426:boards/TMC5031_eval.c **** 		break;
 427:boards/TMC5031_eval.c **** 	case 163:
 428:boards/TMC5031_eval.c **** 		// Constant TOff Mode
 429:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 430:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_CHM_MASK, TMC5031_CHM_SHIFT)
 431:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 432:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_CHM_MASK, TMC5031_CHM_SHIFT, *value
 433:boards/TMC5031_eval.c **** 		}
 434:boards/TMC5031_eval.c **** 		break;
 435:boards/TMC5031_eval.c **** 	case 164:
 436:boards/TMC5031_eval.c **** 		// Disable fast decay comparator
 437:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 438:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_DISFDCC_MASK, TMC5031_DISFDC
 439:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 440:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_DISFDCC_MASK, TMC5031_DISFDCC_SHIFT
 441:boards/TMC5031_eval.c **** 		}
 442:boards/TMC5031_eval.c **** 		break;
 443:boards/TMC5031_eval.c **** 	case 165:	// todo CHECK AP 2: Is there a particular reason why HEND and TFD are grouped to one axi
 444:boards/TMC5031_eval.c **** 		// Chopper hysteresis end / fast decay time
 445:boards/TMC5031_eval.c **** 		tempValue = tmc5031_readInt(motor, TMC5031_CHOPCONF(motor));
 446:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 447:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper Hysteresis
 448:boards/TMC5031_eval.c **** 			{
 449:boards/TMC5031_eval.c **** 				*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_HEND_MASK, TMC5031_HEND_SHI
 450:boards/TMC5031_eval.c **** 			}
 451:boards/TMC5031_eval.c **** 			else // fast decay time
 452:boards/TMC5031_eval.c **** 			{
 453:boards/TMC5031_eval.c **** 				*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_TFD_ALL_MASK, TMC5031_TFD_A
 454:boards/TMC5031_eval.c **** 				if(tempValue & TMC5031_TFD_3_MASK) // Add MSB of fast decay time to total value
 455:boards/TMC5031_eval.c **** 					*value |= 1<<3;
 456:boards/TMC5031_eval.c **** 			}
 457:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 458:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper Hysteresis
 459:boards/TMC5031_eval.c **** 			{
 460:boards/TMC5031_eval.c **** 				TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_HEND_MASK, TMC5031_HEND_SHIFT, *va
 461:boards/TMC5031_eval.c **** 			}
 462:boards/TMC5031_eval.c **** 			else // fast decay time
 463:boards/TMC5031_eval.c **** 			{
 464:boards/TMC5031_eval.c **** 				if(*value & (1<<3)) // check MSB of fast decay time
 465:boards/TMC5031_eval.c **** 					tempValue |= TMC5031_TFD_3_MASK;
 466:boards/TMC5031_eval.c **** 				else
 467:boards/TMC5031_eval.c **** 					tempValue &= ~TMC5031_TFD_3_MASK;
 468:boards/TMC5031_eval.c **** 
 469:boards/TMC5031_eval.c **** 				TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_TFD_ALL_MASK, TMC5031_TFD_ALL_SHIF
 470:boards/TMC5031_eval.c **** 			}
 471:boards/TMC5031_eval.c **** 		}
 472:boards/TMC5031_eval.c **** 		break;
 473:boards/TMC5031_eval.c **** 	case 166:
 474:boards/TMC5031_eval.c **** 		// Chopper hysteresis start / sine wave offset
 475:boards/TMC5031_eval.c **** 		tempValue = tmc5031_readInt(motor, TMC5031_CHOPCONF(motor));
 476:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 477:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper hysteresis start
 478:boards/TMC5031_eval.c **** 			{
 479:boards/TMC5031_eval.c **** 				*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_HSTRT_MASK, TMC5031_HSTRT_S
 480:boards/TMC5031_eval.c **** 			}
 481:boards/TMC5031_eval.c **** 			else // sine wave offset
 482:boards/TMC5031_eval.c **** 			{
 483:boards/TMC5031_eval.c **** 				*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_OFFSET_MASK, TMC5031_OFFSET
 484:boards/TMC5031_eval.c **** 			}
 485:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 486:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper hysteresis start
 487:boards/TMC5031_eval.c **** 			{
 488:boards/TMC5031_eval.c **** 				TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_HSTRT_MASK, TMC5031_HSTRT_SHIFT, *
 489:boards/TMC5031_eval.c **** 			}
 490:boards/TMC5031_eval.c **** 			else // sine wave offset
 491:boards/TMC5031_eval.c **** 			{
 492:boards/TMC5031_eval.c **** 				TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_OFFSET_MASK, TMC5031_OFFSET_SHIFT,
 493:boards/TMC5031_eval.c **** 			}
 494:boards/TMC5031_eval.c **** 		}
 495:boards/TMC5031_eval.c **** 		break;
 496:boards/TMC5031_eval.c **** 	case 167:
 497:boards/TMC5031_eval.c **** 		// Chopper off time
 498:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 499:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_TOFF_MASK, TMC5031_TOFF_SHIF
 500:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 501:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_TOFF_MASK, TMC5031_TOFF_SHIFT, *val
 502:boards/TMC5031_eval.c **** 		}
 503:boards/TMC5031_eval.c **** 		break;
 504:boards/TMC5031_eval.c **** 	case 168:
 505:boards/TMC5031_eval.c **** 		// smartEnergy current minimum (SEIMIN)
 506:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 507:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEIMIN_MASK, TMC5031_SEIMIN_
 508:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 509:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEIMIN_MASK, TMC5031_SEIMIN_SHIFT, 
 510:boards/TMC5031_eval.c **** 		}
 511:boards/TMC5031_eval.c **** 		break;
 512:boards/TMC5031_eval.c **** 	case 169:
 513:boards/TMC5031_eval.c **** 		// smartEnergy current down step
 514:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 515:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEDN_MASK, TMC5031_SEDN_SHIF
 516:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 517:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEDN_MASK, TMC5031_SEDN_SHIFT, *val
 518:boards/TMC5031_eval.c **** 		}
 519:boards/TMC5031_eval.c **** 		break;
 520:boards/TMC5031_eval.c **** 	case 170:
 521:boards/TMC5031_eval.c **** 		// smartEnergy hysteresis
 522:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 523:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEMAX_MASK, TMC5031_SEMAX_SH
 524:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 525:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEMAX_MASK, TMC5031_SEMAX_SHIFT, *v
 526:boards/TMC5031_eval.c **** 		}
 527:boards/TMC5031_eval.c **** 		break;
 528:boards/TMC5031_eval.c **** 	case 171:
 529:boards/TMC5031_eval.c **** 		// smartEnergy current up step
 530:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 531:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEUP_MASK, TMC5031_SEUP_SHIF
 532:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 533:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEUP_MASK, TMC5031_SEUP_SHIFT, *val
 534:boards/TMC5031_eval.c **** 		}
 535:boards/TMC5031_eval.c **** 		break;
 536:boards/TMC5031_eval.c **** 	case 172:
 537:boards/TMC5031_eval.c **** 		// smartEnergy hysteresis start
 538:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 539:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEMIN_MASK, TMC5031_SEMIN_SH
 540:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 541:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEMIN_MASK, TMC5031_SEMIN_SHIFT, *v
 542:boards/TMC5031_eval.c **** 		}
 543:boards/TMC5031_eval.c **** 		break;
 544:boards/TMC5031_eval.c **** 	case 173:
 545:boards/TMC5031_eval.c **** 		// stallGuard2 filter enable
 546:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 547:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SFILT_MASK, TMC5031_SFILT_SH
 548:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 549:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SFILT_MASK, TMC5031_SFILT_SHIFT, *v
 550:boards/TMC5031_eval.c **** 		}
 551:boards/TMC5031_eval.c **** 		break;
 552:boards/TMC5031_eval.c **** 	case 174:
 553:boards/TMC5031_eval.c **** 		// stallGuard2 threshold
 554:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 555:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SGT_MASK, TMC5031_SGT_SHIFT)
 556:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 557:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 558:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SGT_MASK, TMC5031_SGT_SHIFT, *value
 559:boards/TMC5031_eval.c **** 		}
 560:boards/TMC5031_eval.c **** 		break;
 561:boards/TMC5031_eval.c **** 	case 179:
 562:boards/TMC5031_eval.c **** 		// VSense
 563:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 564:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_VSENSE_MASK, TMC5031_VSENSE_
 565:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 566:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_VSENSE_MASK, TMC5031_VSENSE_SHIFT, 
 567:boards/TMC5031_eval.c **** 		}
 568:boards/TMC5031_eval.c **** 		break;
 569:boards/TMC5031_eval.c **** 	case 180:
 570:boards/TMC5031_eval.c **** 		// smartEnergy actual current
 571:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 572:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_DRVSTATUS(motor), TMC5031_CS_ACTUAL_MASK, TMC5031_CS_
 573:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 574:boards/TMC5031_eval.c **** 			errors |= TMC_ERROR_TYPE;
 575:boards/TMC5031_eval.c **** 		}
 576:boards/TMC5031_eval.c **** 		break;
 577:boards/TMC5031_eval.c **** 	case 181:
 578:boards/TMC5031_eval.c **** 		// reset stall
 579:boards/TMC5031_eval.c **** 		tempValue = tmc5031_readInt(motor, TMC5031_SWMODE(motor));
 580:boards/TMC5031_eval.c **** 		if(readWrite == READ)
 581:boards/TMC5031_eval.c **** 		{
 582:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_SG_STOP_MASK)
 583:boards/TMC5031_eval.c **** 			{
 584:boards/TMC5031_eval.c **** 				*value = tmc5031_readInt(motor, TMC5031_VCOOLTHRS(motor));
 585:boards/TMC5031_eval.c **** 			}
 586:boards/TMC5031_eval.c **** 			else
 587:boards/TMC5031_eval.c **** 				*value = 0;
 588:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 589:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VCOOLTHRS(motor), *value);
 590:boards/TMC5031_eval.c **** 
 591:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_SWMODE(motor), TMC5031_SG_STOP_MASK, TMC5031_SG_STOP_SHIFT, 
 592:boards/TMC5031_eval.c **** 		}
 593:boards/TMC5031_eval.c **** 		break;
 594:boards/TMC5031_eval.c **** 	case 182:
 595:boards/TMC5031_eval.c **** 		// smartEnergy threshold speed
 596:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 597:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VCOOLTHRS(motor));
 598:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 599:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VCOOLTHRS(motor),*value);
 600:boards/TMC5031_eval.c **** 		}
 601:boards/TMC5031_eval.c **** 		break;
 602:boards/TMC5031_eval.c **** 	case 184:
 603:boards/TMC5031_eval.c **** 		// Random TOff mode
 604:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 605:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_RNDTF_MASK, TMC5031_RNDTF_SH
 606:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 607:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_RNDTF_MASK, TMC5031_RNDTF_SHIFT, *v
 608:boards/TMC5031_eval.c **** 		}
 609:boards/TMC5031_eval.c **** 		break;
 610:boards/TMC5031_eval.c **** 	case 185:
 611:boards/TMC5031_eval.c **** 		// Chopper synchronization
 612:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 613:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_SYNC_MASK, TMC5031_SYNC_SHIF
 614:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 615:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_SYNC_MASK, TMC5031_SYNC_SHIFT, *val
 616:boards/TMC5031_eval.c **** 		}
 617:boards/TMC5031_eval.c **** 		break;
 618:boards/TMC5031_eval.c **** 	case 206:
 619:boards/TMC5031_eval.c **** 		// Load value
 620:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 621:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_DRVSTATUS(motor), TMC5031_SG_RESULT_MASK, TMC5031_SG_
 622:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 623:boards/TMC5031_eval.c **** 			errors |= TMC_ERROR_TYPE;
 624:boards/TMC5031_eval.c **** 		}
 625:boards/TMC5031_eval.c **** 		break;
 626:boards/TMC5031_eval.c **** 	case 209:
 627:boards/TMC5031_eval.c **** 		// Encoder position
 628:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 629:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_XENC(motor));
 630:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 631:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_XENC(motor),*value);
 632:boards/TMC5031_eval.c **** 		}
 633:boards/TMC5031_eval.c **** 		break;
 634:boards/TMC5031_eval.c **** 	case 210:
 635:boards/TMC5031_eval.c **** 		// Encoder Resolution
 636:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 637:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_ENC_CONST(motor));
 638:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 639:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_ENC_CONST(motor),*value);
 640:boards/TMC5031_eval.c **** 		}
 641:boards/TMC5031_eval.c **** 		break;
 642:boards/TMC5031_eval.c **** 	case 211:
 643:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 644:boards/TMC5031_eval.c **** 			// encoder enable
 645:boards/TMC5031_eval.c **** 			switch(motor)
 646:boards/TMC5031_eval.c **** 			{
 647:boards/TMC5031_eval.c **** 			case 0:
 648:boards/TMC5031_eval.c **** 				tempValue = tmc5031_readInt(motor, TMC5031_GCONF);
 649:boards/TMC5031_eval.c **** 				tempValue &= (1<<3) | (1<<4);
 650:boards/TMC5031_eval.c **** 				*value = (tempValue == (1<<4))? 1 : 0;
 651:boards/TMC5031_eval.c **** 				break;
 652:boards/TMC5031_eval.c **** 			case 1:
 653:boards/TMC5031_eval.c **** 				tempValue = tmc5031_readInt(motor, TMC5031_GCONF);
 654:boards/TMC5031_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 655:boards/TMC5031_eval.c **** 				*value = (tempValue == ((1<<5) | (0<<6)))? 1 : 0;
 656:boards/TMC5031_eval.c **** 				break;
 657:boards/TMC5031_eval.c **** 			}
 658:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 659:boards/TMC5031_eval.c **** 			// encoder enable
 660:boards/TMC5031_eval.c **** 			switch(motor)
 661:boards/TMC5031_eval.c **** 			{
 662:boards/TMC5031_eval.c **** 			case 0:
 663:boards/TMC5031_eval.c **** 				tempValue = tmc5031_readInt(motor, TMC5031_GCONF);
 664:boards/TMC5031_eval.c **** 				tempValue = (*value)? tempValue & ~(1<<3) : tempValue | (1<<3);  // poscmp_enable -> ENCODER1 A
 665:boards/TMC5031_eval.c **** 				tempValue = (*value)? tempValue | (1<<4) : tempValue &~ (1<<4);  // enc1_refsel -> ENCODER1 N t
 666:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 667:boards/TMC5031_eval.c **** 				break;
 668:boards/TMC5031_eval.c **** 			case 1:		// enable ENCODER2 - disable REF
 669:boards/TMC5031_eval.c **** 				tempValue = tmc5031_readInt(motor, TMC5031_GCONF);
 670:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue | (1<<5) : tempValue &~ (1<<5);  // enc2_enable -> ENCODER2 A,
 671:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue &~ (1<<6) : tempValue | (1<<6);  // enc2_refse2 -> ENCODER1 N 
 672:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 673:boards/TMC5031_eval.c **** 				break;
 674:boards/TMC5031_eval.c **** 			}
 675:boards/TMC5031_eval.c **** 		}
 676:boards/TMC5031_eval.c **** 		break;
 677:boards/TMC5031_eval.c **** 	default:
 678:boards/TMC5031_eval.c **** 		errors |= TMC_ERROR_TYPE;
 679:boards/TMC5031_eval.c **** 		break;
 680:boards/TMC5031_eval.c **** 	}
 681:boards/TMC5031_eval.c **** 
 682:boards/TMC5031_eval.c **** 	return errors;
 683:boards/TMC5031_eval.c **** }
 684:boards/TMC5031_eval.c **** 
 685:boards/TMC5031_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 686:boards/TMC5031_eval.c **** {
 687:boards/TMC5031_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 688:boards/TMC5031_eval.c **** }
 689:boards/TMC5031_eval.c **** 
 690:boards/TMC5031_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 691:boards/TMC5031_eval.c **** {
 692:boards/TMC5031_eval.c **** 	return handleParameter(READ, motor, type, value);
 693:boards/TMC5031_eval.c **** }
 694:boards/TMC5031_eval.c **** 
 695:boards/TMC5031_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value)
 696:boards/TMC5031_eval.c **** {
  26              		.loc 1 696 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 697:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
  31              		.loc 1 697 2 view .LVU1
  32              		.loc 1 697 4 is_stmt 0 view .LVU2
  33 0000 0128     		cmp	r0, #1
  34 0002 0CD8     		bhi	.L3
 698:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 699:boards/TMC5031_eval.c **** 
 700:boards/TMC5031_eval.c **** 	*value = TMC5031_config->shadowRegister[TMC5031_VACTUAL(motor)];
  35              		.loc 1 700 2 is_stmt 1 view .LVU3
  36              		.loc 1 700 25 is_stmt 0 view .LVU4
  37 0004 074B     		ldr	r3, .L4
  38              		.loc 1 700 41 view .LVU5
  39 0006 1A68     		ldr	r2, [r3]
  40              		.loc 1 700 42 view .LVU6
  41 0008 2023     		movs	r3, #32
  42 000a 03FA00F0 		lsl	r0, r3, r0
  43              	.LVL1:
  44              		.loc 1 700 42 view .LVU7
  45 000e 40F00200 		orr	r0, r0, #2
  46              		.loc 1 700 41 view .LVU8
  47 0012 02EB8000 		add	r0, r2, r0, lsl #2
  48 0016 4368     		ldr	r3, [r0, #4]
  49              		.loc 1 700 9 view .LVU9
  50 0018 0B60     		str	r3, [r1]
 701:boards/TMC5031_eval.c **** 
 702:boards/TMC5031_eval.c **** 	return TMC_ERROR_NONE;
  51              		.loc 1 702 2 is_stmt 1 view .LVU10
  52              		.loc 1 702 9 is_stmt 0 view .LVU11
  53 001a 0020     		movs	r0, #0
  54 001c 7047     		bx	lr
  55              	.LVL2:
  56              	.L3:
 698:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
  57              		.loc 1 698 10 view .LVU12
  58 001e 0820     		movs	r0, #8
  59              	.LVL3:
 703:boards/TMC5031_eval.c **** }
  60              		.loc 1 703 1 view .LVU13
  61 0020 7047     		bx	lr
  62              	.L5:
  63 0022 00BF     		.align	2
  64              	.L4:
  65 0024 00000000 		.word	.LANCHOR0
  66              		.cfi_endproc
  67              	.LFE13:
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu softvfp
  75              	checkErrors:
  76              	.LVL4:
  77              	.LFB17:
 704:boards/TMC5031_eval.c **** 
 705:boards/TMC5031_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
 706:boards/TMC5031_eval.c **** {
 707:boards/TMC5031_eval.c **** 	UNUSED(motor);
 708:boards/TMC5031_eval.c **** 	tmc5031_writeInt(0, address, value);
 709:boards/TMC5031_eval.c **** }
 710:boards/TMC5031_eval.c **** 
 711:boards/TMC5031_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
 712:boards/TMC5031_eval.c **** {
 713:boards/TMC5031_eval.c **** 	UNUSED(motor);
 714:boards/TMC5031_eval.c **** 	*value = tmc5031_readInt(0, address);
 715:boards/TMC5031_eval.c **** }
 716:boards/TMC5031_eval.c **** 
 717:boards/TMC5031_eval.c **** static void periodicJob(uint32_t tick)
 718:boards/TMC5031_eval.c **** {
 719:boards/TMC5031_eval.c **** 	for(int motor = 0; motor < MOTORS; motor++)
 720:boards/TMC5031_eval.c **** 	{
 721:boards/TMC5031_eval.c **** 		tmc5031_periodicJob(motor, tick, &TMC5031, TMC5031_config);
 722:boards/TMC5031_eval.c **** 	}
 723:boards/TMC5031_eval.c **** }
 724:boards/TMC5031_eval.c **** 
 725:boards/TMC5031_eval.c **** static void checkErrors(uint32_t tick)
 726:boards/TMC5031_eval.c **** {
  78              		.loc 1 726 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
 727:boards/TMC5031_eval.c **** 	UNUSED(tick);
  83              		.loc 1 727 2 view .LVU15
 728:boards/TMC5031_eval.c **** 	Evalboards.ch1.errors = 0;
  84              		.loc 1 728 2 view .LVU16
  85              		.loc 1 728 24 is_stmt 0 view .LVU17
  86 0028 014B     		ldr	r3, .L7
  87 002a 0022     		movs	r2, #0
  88 002c 9A60     		str	r2, [r3, #8]
 729:boards/TMC5031_eval.c **** }
  89              		.loc 1 729 1 view .LVU18
  90 002e 7047     		bx	lr
  91              	.L8:
  92              		.align	2
  93              	.L7:
  94 0030 00000000 		.word	Evalboards
  95              		.cfi_endproc
  96              	.LFE17:
  98              		.align	1
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu softvfp
 104              	periodicJob:
 105              	.LVL5:
 106              	.LFB16:
 718:boards/TMC5031_eval.c **** 	for(int motor = 0; motor < MOTORS; motor++)
 107              		.loc 1 718 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 719:boards/TMC5031_eval.c **** 	{
 111              		.loc 1 719 2 view .LVU20
 112              	.LBB2:
 719:boards/TMC5031_eval.c **** 	{
 113              		.loc 1 719 6 view .LVU21
 719:boards/TMC5031_eval.c **** 	{
 114              		.loc 1 719 21 view .LVU22
 721:boards/TMC5031_eval.c **** 	}
 115              		.loc 1 721 3 view .LVU23
 116              	.LBE2:
 718:boards/TMC5031_eval.c **** 	for(int motor = 0; motor < MOTORS; motor++)
 117              		.loc 1 718 1 is_stmt 0 view .LVU24
 118 0034 70B5     		push	{r4, r5, r6, lr}
 119              	.LCFI0:
 120              		.cfi_def_cfa_offset 16
 121              		.cfi_offset 4, -16
 122              		.cfi_offset 5, -12
 123              		.cfi_offset 6, -8
 124              		.cfi_offset 14, -4
 125              	.LBB3:
 721:boards/TMC5031_eval.c **** 	}
 126              		.loc 1 721 3 view .LVU25
 127 0036 094E     		ldr	r6, .L10
 128 0038 3546     		mov	r5, r6
 129              	.LBE3:
 718:boards/TMC5031_eval.c **** 	for(int motor = 0; motor < MOTORS; motor++)
 130              		.loc 1 718 1 view .LVU26
 131 003a 0446     		mov	r4, r0
 132              	.LBB4:
 721:boards/TMC5031_eval.c **** 	}
 133              		.loc 1 721 3 view .LVU27
 134 003c 55F8043B 		ldr	r3, [r5], #4
 135 0040 0146     		mov	r1, r0
 136 0042 2A46     		mov	r2, r5
 137 0044 0020     		movs	r0, #0
 138              	.LVL6:
 721:boards/TMC5031_eval.c **** 	}
 139              		.loc 1 721 3 view .LVU28
 140 0046 FFF7FEFF 		bl	tmc5031_periodicJob
 141              	.LVL7:
 719:boards/TMC5031_eval.c **** 	{
 142              		.loc 1 719 37 is_stmt 1 view .LVU29
 719:boards/TMC5031_eval.c **** 	{
 143              		.loc 1 719 21 view .LVU30
 721:boards/TMC5031_eval.c **** 	}
 144              		.loc 1 721 3 view .LVU31
 145 004a 3368     		ldr	r3, [r6]
 146 004c 2A46     		mov	r2, r5
 147 004e 2146     		mov	r1, r4
 148 0050 0120     		movs	r0, #1
 149              	.LBE4:
 723:boards/TMC5031_eval.c **** 
 150              		.loc 1 723 1 is_stmt 0 view .LVU32
 151 0052 BDE87040 		pop	{r4, r5, r6, lr}
 152              	.LCFI1:
 153              		.cfi_restore 14
 154              		.cfi_restore 6
 155              		.cfi_restore 5
 156              		.cfi_restore 4
 157              		.cfi_def_cfa_offset 0
 158              	.LVL8:
 159              	.LBB5:
 721:boards/TMC5031_eval.c **** 	}
 160              		.loc 1 721 3 view .LVU33
 161 0056 FFF7FEBF 		b	tmc5031_periodicJob
 162              	.LVL9:
 163              	.L11:
 721:boards/TMC5031_eval.c **** 	}
 164              		.loc 1 721 3 view .LVU34
 165 005a 00BF     		.align	2
 166              	.L10:
 167 005c 00000000 		.word	.LANCHOR0
 168              	.LBE5:
 169              		.cfi_endproc
 170              	.LFE16:
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu softvfp
 178              	restore:
 179              	.LFB21:
 730:boards/TMC5031_eval.c **** 
 731:boards/TMC5031_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 732:boards/TMC5031_eval.c **** {
 733:boards/TMC5031_eval.c **** 	uint32_t errors = 0;
 734:boards/TMC5031_eval.c **** 
 735:boards/TMC5031_eval.c **** 	UNUSED(motor);
 736:boards/TMC5031_eval.c **** 
 737:boards/TMC5031_eval.c **** 	switch(type)
 738:boards/TMC5031_eval.c **** 	{
 739:boards/TMC5031_eval.c **** 	case 0:		// enable Single Wire Mode
 740:boards/TMC5031_eval.c **** 		if(*value)
 741:boards/TMC5031_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 742:boards/TMC5031_eval.c **** 		else
 743:boards/TMC5031_eval.c **** 			HAL.IOs->config->setLow(Pins.SWSEL);
 744:boards/TMC5031_eval.c **** 		break;
 745:boards/TMC5031_eval.c **** 	case 1:		// read interrupt pin INT
 746:boards/TMC5031_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.INT_ENCA))? 1 : 0;
 747:boards/TMC5031_eval.c **** 		break;
 748:boards/TMC5031_eval.c **** 	case 2:		// read position compare pin PP
 749:boards/TMC5031_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.PP_ENCB))? 1 : 0;
 750:boards/TMC5031_eval.c **** 		break;
 751:boards/TMC5031_eval.c **** 	default:
 752:boards/TMC5031_eval.c **** 		errors |= TMC_ERROR_TYPE;
 753:boards/TMC5031_eval.c **** 		break;
 754:boards/TMC5031_eval.c **** 	}
 755:boards/TMC5031_eval.c **** 	return errors;
 756:boards/TMC5031_eval.c **** }
 757:boards/TMC5031_eval.c **** 
 758:boards/TMC5031_eval.c **** 
 759:boards/TMC5031_eval.c **** static void deInit(void)
 760:boards/TMC5031_eval.c **** {
 761:boards/TMC5031_eval.c **** 	enableDriver(DRIVER_DISABLE);
 762:boards/TMC5031_eval.c **** 
 763:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN);
 764:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 765:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 766:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWION);
 767:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP1);
 768:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP2);
 769:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWSEL);
 770:boards/TMC5031_eval.c **** };
 771:boards/TMC5031_eval.c **** 
 772:boards/TMC5031_eval.c **** static uint8_t reset()
 773:boards/TMC5031_eval.c **** {
 774:boards/TMC5031_eval.c **** 	for(uint8_t motor = 0; motor < MOTORS; motor++)
 775:boards/TMC5031_eval.c **** 		if(tmc5031_readInt(motor, TMC5031_VACTUAL(motor)) != 0)
 776:boards/TMC5031_eval.c **** 			return 0;
 777:boards/TMC5031_eval.c **** 
 778:boards/TMC5031_eval.c **** 	return tmc5031_reset(TMC5031_config);
 779:boards/TMC5031_eval.c **** }
 780:boards/TMC5031_eval.c **** 
 781:boards/TMC5031_eval.c **** static uint8_t restore()
 782:boards/TMC5031_eval.c **** {
 180              		.loc 1 782 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 783:boards/TMC5031_eval.c **** 	return tmc5031_restore(TMC5031_config);
 185              		.loc 1 783 2 view .LVU36
 186              		.loc 1 783 9 is_stmt 0 view .LVU37
 187 0060 014B     		ldr	r3, .L13
 188 0062 1868     		ldr	r0, [r3]
 189 0064 FFF7FEBF 		b	tmc5031_restore
 190              	.LVL10:
 191              	.L14:
 192              		.align	2
 193              	.L13:
 194 0068 00000000 		.word	.LANCHOR0
 195              		.cfi_endproc
 196              	.LFE21:
 198              		.align	1
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu softvfp
 204              	userFunction:
 205              	.LVL11:
 206              	.LFB18:
 732:boards/TMC5031_eval.c **** 	uint32_t errors = 0;
 207              		.loc 1 732 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 733:boards/TMC5031_eval.c **** 
 211              		.loc 1 733 2 view .LVU39
 735:boards/TMC5031_eval.c **** 
 212              		.loc 1 735 2 view .LVU40
 737:boards/TMC5031_eval.c **** 	{
 213              		.loc 1 737 2 view .LVU41
 214 006c 0128     		cmp	r0, #1
 732:boards/TMC5031_eval.c **** 	uint32_t errors = 0;
 215              		.loc 1 732 1 is_stmt 0 view .LVU42
 216 006e 38B5     		push	{r3, r4, r5, lr}
 217              	.LCFI2:
 218              		.cfi_def_cfa_offset 16
 219              		.cfi_offset 3, -16
 220              		.cfi_offset 4, -12
 221              		.cfi_offset 5, -8
 222              		.cfi_offset 14, -4
 732:boards/TMC5031_eval.c **** 	uint32_t errors = 0;
 223              		.loc 1 732 1 view .LVU43
 224 0070 1446     		mov	r4, r2
 737:boards/TMC5031_eval.c **** 	{
 225              		.loc 1 737 2 view .LVU44
 226 0072 10D0     		beq	.L16
 227 0074 0228     		cmp	r0, #2
 228 0076 1BD0     		beq	.L17
 229 0078 10BB     		cbnz	r0, .L20
 230              	.LVL12:
 231              	.LBB8:
 232              	.LBI8:
 731:boards/TMC5031_eval.c **** {
 233              		.loc 1 731 17 is_stmt 1 view .LVU45
 234              	.LBB9:
 740:boards/TMC5031_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 235              		.loc 1 740 3 view .LVU46
 236 007a 124B     		ldr	r3, .L24
 237 007c 124A     		ldr	r2, .L24+4
 238              	.LVL13:
 740:boards/TMC5031_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 239              		.loc 1 740 3 is_stmt 0 view .LVU47
 240 007e DB68     		ldr	r3, [r3, #12]
 740:boards/TMC5031_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 241              		.loc 1 740 5 view .LVU48
 242 0080 2468     		ldr	r4, [r4]
 243              	.LVL14:
 740:boards/TMC5031_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 244              		.loc 1 740 5 view .LVU49
 245 0082 1B68     		ldr	r3, [r3]
 246 0084 D2F8A802 		ldr	r0, [r2, #680]
 247              	.LVL15:
 740:boards/TMC5031_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 248              		.loc 1 740 5 view .LVU50
 249 0088 1CB1     		cbz	r4, .L19
 741:boards/TMC5031_eval.c **** 		else
 250              		.loc 1 741 4 is_stmt 1 view .LVU51
 251 008a 5B69     		ldr	r3, [r3, #20]
 252              	.L23:
 743:boards/TMC5031_eval.c **** 		break;
 253              		.loc 1 743 4 is_stmt 0 view .LVU52
 254 008c 9847     		blx	r3
 255              	.LVL16:
 256              	.L22:
 743:boards/TMC5031_eval.c **** 		break;
 257              		.loc 1 743 4 view .LVU53
 258              	.LBE9:
 259              	.LBE8:
 750:boards/TMC5031_eval.c **** 	default:
 260              		.loc 1 750 3 is_stmt 1 view .LVU54
 733:boards/TMC5031_eval.c **** 
 261              		.loc 1 733 11 is_stmt 0 view .LVU55
 262 008e 0020     		movs	r0, #0
 263              	.LVL17:
 264              	.L15:
 756:boards/TMC5031_eval.c **** 
 265              		.loc 1 756 1 view .LVU56
 266 0090 38BD     		pop	{r3, r4, r5, pc}
 267              	.LVL18:
 268              	.L19:
 269              	.LBB11:
 270              	.LBB10:
 743:boards/TMC5031_eval.c **** 		break;
 271              		.loc 1 743 4 is_stmt 1 view .LVU57
 272 0092 9B69     		ldr	r3, [r3, #24]
 273 0094 FAE7     		b	.L23
 274              	.LVL19:
 275              	.L16:
 743:boards/TMC5031_eval.c **** 		break;
 276              		.loc 1 743 4 is_stmt 0 view .LVU58
 277              	.LBE10:
 278              	.LBE11:
 746:boards/TMC5031_eval.c **** 		break;
 279              		.loc 1 746 3 is_stmt 1 view .LVU59
 746:boards/TMC5031_eval.c **** 		break;
 280              		.loc 1 746 16 is_stmt 0 view .LVU60
 281 0096 0B4B     		ldr	r3, .L24
 746:boards/TMC5031_eval.c **** 		break;
 282              		.loc 1 746 13 view .LVU61
 283 0098 0B4A     		ldr	r2, .L24+4
 284              	.LVL20:
 746:boards/TMC5031_eval.c **** 		break;
 285              		.loc 1 746 20 view .LVU62
 286 009a DB68     		ldr	r3, [r3, #12]
 746:boards/TMC5031_eval.c **** 		break;
 287              		.loc 1 746 13 view .LVU63
 288 009c D2F8A002 		ldr	r0, [r2, #672]
 289              	.LVL21:
 746:boards/TMC5031_eval.c **** 		break;
 290              		.loc 1 746 28 view .LVU64
 291 00a0 1B68     		ldr	r3, [r3]
 746:boards/TMC5031_eval.c **** 		break;
 292              		.loc 1 746 13 view .LVU65
 293 00a2 5B6A     		ldr	r3, [r3, #36]
 294              	.L21:
 749:boards/TMC5031_eval.c **** 		break;
 295              		.loc 1 749 13 view .LVU66
 296 00a4 9847     		blx	r3
 297              	.LVL22:
 749:boards/TMC5031_eval.c **** 		break;
 298              		.loc 1 749 55 view .LVU67
 299 00a6 0038     		subs	r0, r0, #0
 300 00a8 18BF     		it	ne
 301 00aa 0120     		movne	r0, #1
 749:boards/TMC5031_eval.c **** 		break;
 302              		.loc 1 749 10 view .LVU68
 303 00ac 2060     		str	r0, [r4]
 304 00ae EEE7     		b	.L22
 305              	.LVL23:
 306              	.L17:
 749:boards/TMC5031_eval.c **** 		break;
 307              		.loc 1 749 3 is_stmt 1 view .LVU69
 749:boards/TMC5031_eval.c **** 		break;
 308              		.loc 1 749 16 is_stmt 0 view .LVU70
 309 00b0 044B     		ldr	r3, .L24
 749:boards/TMC5031_eval.c **** 		break;
 310              		.loc 1 749 13 view .LVU71
 311 00b2 054A     		ldr	r2, .L24+4
 312              	.LVL24:
 749:boards/TMC5031_eval.c **** 		break;
 313              		.loc 1 749 20 view .LVU72
 314 00b4 DB68     		ldr	r3, [r3, #12]
 749:boards/TMC5031_eval.c **** 		break;
 315              		.loc 1 749 13 view .LVU73
 316 00b6 D2F8A402 		ldr	r0, [r2, #676]
 317              	.LVL25:
 749:boards/TMC5031_eval.c **** 		break;
 318              		.loc 1 749 28 view .LVU74
 319 00ba 1B68     		ldr	r3, [r3]
 749:boards/TMC5031_eval.c **** 		break;
 320              		.loc 1 749 13 view .LVU75
 321 00bc 5B6A     		ldr	r3, [r3, #36]
 322 00be F1E7     		b	.L21
 323              	.LVL26:
 324              	.L20:
 737:boards/TMC5031_eval.c **** 	{
 325              		.loc 1 737 2 view .LVU76
 326 00c0 0420     		movs	r0, #4
 327              	.LVL27:
 755:boards/TMC5031_eval.c **** }
 328              		.loc 1 755 2 is_stmt 1 view .LVU77
 755:boards/TMC5031_eval.c **** }
 329              		.loc 1 755 9 is_stmt 0 view .LVU78
 330 00c2 E5E7     		b	.L15
 331              	.L25:
 332              		.align	2
 333              	.L24:
 334 00c4 00000000 		.word	HAL
 335 00c8 00000000 		.word	.LANCHOR0
 336              		.cfi_endproc
 337              	.LFE18:
 339              		.align	1
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu softvfp
 345              	enableDriver:
 346              	.LVL28:
 347              	.LFB22:
 784:boards/TMC5031_eval.c **** }
 785:boards/TMC5031_eval.c **** 
 786:boards/TMC5031_eval.c **** static void enableDriver(DriverState state)
 787:boards/TMC5031_eval.c **** {
 348              		.loc 1 787 1 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 788:boards/TMC5031_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 353              		.loc 1 788 2 view .LVU80
 354              		.loc 1 788 4 is_stmt 0 view .LVU81
 355 00cc 0228     		cmp	r0, #2
 789:boards/TMC5031_eval.c **** 		state = Evalboards.driverEnable;
 356              		.loc 1 789 3 is_stmt 1 view .LVU82
 357              		.loc 1 789 9 is_stmt 0 view .LVU83
 358 00ce 04BF     		itt	eq
 359 00d0 0C4B     		ldreq	r3, .L31
 360 00d2 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 361              	.LVL29:
 790:boards/TMC5031_eval.c **** 
 791:boards/TMC5031_eval.c **** 	if(state ==  DRIVER_DISABLE)
 362              		.loc 1 791 2 is_stmt 1 view .LVU84
 363              		.loc 1 791 4 is_stmt 0 view .LVU85
 364 00d6 38B9     		cbnz	r0, .L28
 792:boards/TMC5031_eval.c **** 		HAL.IOs->config->setHigh(Pins.DRV_ENN);
 365              		.loc 1 792 3 is_stmt 1 view .LVU86
 366              		.loc 1 792 6 is_stmt 0 view .LVU87
 367 00d8 0B4B     		ldr	r3, .L31+4
 368              		.loc 1 792 10 view .LVU88
 369 00da DB68     		ldr	r3, [r3, #12]
 370              		.loc 1 792 18 view .LVU89
 371 00dc 1B68     		ldr	r3, [r3]
 372              		.loc 1 792 3 view .LVU90
 373 00de 5B69     		ldr	r3, [r3, #20]
 374              	.L30:
 375              	.LBB14:
 376              	.LBB15:
 793:boards/TMC5031_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 794:boards/TMC5031_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN);
 377              		.loc 1 794 3 view .LVU91
 378 00e0 0A4A     		ldr	r2, .L31+8
 379 00e2 D2F89C02 		ldr	r0, [r2, #668]
 380 00e6 1847     		bx	r3	@ indirect register sibling call
 381              	.LVL30:
 382              	.L28:
 383              		.loc 1 794 3 view .LVU92
 384              	.LBE15:
 385              	.LBE14:
 793:boards/TMC5031_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 386              		.loc 1 793 7 is_stmt 1 view .LVU93
 793:boards/TMC5031_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 387              		.loc 1 793 9 is_stmt 0 view .LVU94
 388 00e8 0128     		cmp	r0, #1
 389 00ea 09D1     		bne	.L26
 793:boards/TMC5031_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 390              		.loc 1 793 49 discriminator 1 view .LVU95
 391 00ec 054B     		ldr	r3, .L31
 793:boards/TMC5031_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 392              		.loc 1 793 35 discriminator 1 view .LVU96
 393 00ee 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 394 00f2 012B     		cmp	r3, #1
 395 00f4 04D1     		bne	.L26
 396              	.LBB17:
 397              	.LBI14:
 786:boards/TMC5031_eval.c **** {
 398              		.loc 1 786 13 is_stmt 1 view .LVU97
 399              	.LVL31:
 400              	.LBB16:
 401              		.loc 1 794 3 view .LVU98
 402              		.loc 1 794 6 is_stmt 0 view .LVU99
 403 00f6 044B     		ldr	r3, .L31+4
 404              		.loc 1 794 10 view .LVU100
 405 00f8 DB68     		ldr	r3, [r3, #12]
 406              		.loc 1 794 18 view .LVU101
 407 00fa 1B68     		ldr	r3, [r3]
 408              		.loc 1 794 3 view .LVU102
 409 00fc 9B69     		ldr	r3, [r3, #24]
 410 00fe EFE7     		b	.L30
 411              	.LVL32:
 412              	.L26:
 413              		.loc 1 794 3 view .LVU103
 414              	.LBE16:
 415              	.LBE17:
 795:boards/TMC5031_eval.c **** }
 416              		.loc 1 795 1 view .LVU104
 417 0100 7047     		bx	lr
 418              	.L32:
 419 0102 00BF     		.align	2
 420              	.L31:
 421 0104 00000000 		.word	Evalboards
 422 0108 00000000 		.word	HAL
 423 010c 00000000 		.word	.LANCHOR0
 424              		.cfi_endproc
 425              	.LFE22:
 427              		.align	1
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu softvfp
 433              	deInit:
 434              	.LFB19:
 760:boards/TMC5031_eval.c **** 	enableDriver(DRIVER_DISABLE);
 435              		.loc 1 760 1 is_stmt 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 761:boards/TMC5031_eval.c **** 
 439              		.loc 1 761 2 view .LVU106
 760:boards/TMC5031_eval.c **** 	enableDriver(DRIVER_DISABLE);
 440              		.loc 1 760 1 is_stmt 0 view .LVU107
 441 0110 70B5     		push	{r4, r5, r6, lr}
 442              	.LCFI3:
 443              		.cfi_def_cfa_offset 16
 444              		.cfi_offset 4, -16
 445              		.cfi_offset 5, -12
 446              		.cfi_offset 6, -8
 447              		.cfi_offset 14, -4
 761:boards/TMC5031_eval.c **** 
 448              		.loc 1 761 2 view .LVU108
 449 0112 0020     		movs	r0, #0
 450 0114 FFF7DAFF 		bl	enableDriver
 451              	.LVL33:
 763:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 452              		.loc 1 763 2 is_stmt 1 view .LVU109
 763:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 453              		.loc 1 763 5 is_stmt 0 view .LVU110
 454 0118 134B     		ldr	r3, .L34
 763:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 455              		.loc 1 763 2 view .LVU111
 456 011a 144C     		ldr	r4, .L34+4
 763:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 457              		.loc 1 763 5 view .LVU112
 458 011c DD68     		ldr	r5, [r3, #12]
 763:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 459              		.loc 1 763 2 view .LVU113
 460 011e D4F89C02 		ldr	r0, [r4, #668]
 763:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 461              		.loc 1 763 17 view .LVU114
 462 0122 2B68     		ldr	r3, [r5]
 763:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 463              		.loc 1 763 2 view .LVU115
 464 0124 9B68     		ldr	r3, [r3, #8]
 465 0126 9847     		blx	r3
 466              	.LVL34:
 764:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 467              		.loc 1 764 2 is_stmt 1 view .LVU116
 764:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 468              		.loc 1 764 17 is_stmt 0 view .LVU117
 469 0128 2B68     		ldr	r3, [r5]
 764:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 470              		.loc 1 764 2 view .LVU118
 471 012a D4F8A002 		ldr	r0, [r4, #672]
 472 012e 9B68     		ldr	r3, [r3, #8]
 473 0130 9847     		blx	r3
 474              	.LVL35:
 765:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWION);
 475              		.loc 1 765 2 is_stmt 1 view .LVU119
 765:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWION);
 476              		.loc 1 765 17 is_stmt 0 view .LVU120
 477 0132 2B68     		ldr	r3, [r5]
 765:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWION);
 478              		.loc 1 765 2 view .LVU121
 479 0134 D4F8A402 		ldr	r0, [r4, #676]
 480 0138 9B68     		ldr	r3, [r3, #8]
 481 013a 9847     		blx	r3
 482              	.LVL36:
 766:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP1);
 483              		.loc 1 766 2 is_stmt 1 view .LVU122
 766:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP1);
 484              		.loc 1 766 17 is_stmt 0 view .LVU123
 485 013c 2B68     		ldr	r3, [r5]
 766:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP1);
 486              		.loc 1 766 2 view .LVU124
 487 013e D4F8B402 		ldr	r0, [r4, #692]
 488 0142 9B68     		ldr	r3, [r3, #8]
 489 0144 9847     		blx	r3
 490              	.LVL37:
 767:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP2);
 491              		.loc 1 767 2 is_stmt 1 view .LVU125
 767:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP2);
 492              		.loc 1 767 17 is_stmt 0 view .LVU126
 493 0146 2B68     		ldr	r3, [r5]
 767:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP2);
 494              		.loc 1 767 2 view .LVU127
 495 0148 D4F8AC02 		ldr	r0, [r4, #684]
 496 014c 9B68     		ldr	r3, [r3, #8]
 497 014e 9847     		blx	r3
 498              	.LVL38:
 768:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWSEL);
 499              		.loc 1 768 2 is_stmt 1 view .LVU128
 768:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWSEL);
 500              		.loc 1 768 17 is_stmt 0 view .LVU129
 501 0150 2B68     		ldr	r3, [r5]
 768:boards/TMC5031_eval.c **** 	HAL.IOs->config->reset(Pins.SWSEL);
 502              		.loc 1 768 2 view .LVU130
 503 0152 D4F8B002 		ldr	r0, [r4, #688]
 504 0156 9B68     		ldr	r3, [r3, #8]
 505 0158 9847     		blx	r3
 506              	.LVL39:
 769:boards/TMC5031_eval.c **** };
 507              		.loc 1 769 2 is_stmt 1 view .LVU131
 769:boards/TMC5031_eval.c **** };
 508              		.loc 1 769 17 is_stmt 0 view .LVU132
 509 015a 2B68     		ldr	r3, [r5]
 769:boards/TMC5031_eval.c **** };
 510              		.loc 1 769 2 view .LVU133
 511 015c D4F8A802 		ldr	r0, [r4, #680]
 512 0160 9B68     		ldr	r3, [r3, #8]
 770:boards/TMC5031_eval.c **** 
 513              		.loc 1 770 1 view .LVU134
 514 0162 BDE87040 		pop	{r4, r5, r6, lr}
 515              	.LCFI4:
 516              		.cfi_restore 14
 517              		.cfi_restore 6
 518              		.cfi_restore 5
 519              		.cfi_restore 4
 520              		.cfi_def_cfa_offset 0
 769:boards/TMC5031_eval.c **** };
 521              		.loc 1 769 2 view .LVU135
 522 0166 1847     		bx	r3	@ indirect register sibling call
 523              	.LVL40:
 524              	.L35:
 525              		.align	2
 526              	.L34:
 527 0168 00000000 		.word	HAL
 528 016c 00000000 		.word	.LANCHOR0
 529              		.cfi_endproc
 530              	.LFE19:
 532              		.align	1
 533              		.global	tmc5031_writeDatagram
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu softvfp
 539              	tmc5031_writeDatagram:
 540              	.LVL41:
 541              	.LFB1:
  56:boards/TMC5031_eval.c **** 	UNUSED(motor);
 542              		.loc 1 56 1 is_stmt 1 view -0
 543              		.cfi_startproc
 544              		@ args = 8, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
  57:boards/TMC5031_eval.c **** 	int value;
 546              		.loc 1 57 2 view .LVU137
  58:boards/TMC5031_eval.c **** 
 547              		.loc 1 58 2 view .LVU138
  60:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x1, false);
 548              		.loc 1 60 2 view .LVU139
  56:boards/TMC5031_eval.c **** 	UNUSED(motor);
 549              		.loc 1 56 1 is_stmt 0 view .LVU140
 550 0170 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 551              	.LCFI5:
 552              		.cfi_def_cfa_offset 32
 553              		.cfi_offset 3, -32
 554              		.cfi_offset 4, -28
 555              		.cfi_offset 5, -24
 556              		.cfi_offset 6, -20
 557              		.cfi_offset 7, -16
 558              		.cfi_offset 8, -12
 559              		.cfi_offset 9, -8
 560              		.cfi_offset 14, -4
  60:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x1, false);
 561              		.loc 1 60 20 view .LVU141
 562 0174 1A4D     		ldr	r5, .L37
  56:boards/TMC5031_eval.c **** 	UNUSED(motor);
 563              		.loc 1 56 1 view .LVU142
 564 0176 9DF82080 		ldrb	r8, [sp, #32]	@ zero_extendqisi2
 565 017a 9DF82470 		ldrb	r7, [sp, #36]	@ zero_extendqisi2
 566 017e 1E46     		mov	r6, r3
  60:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x1, false);
 567              		.loc 1 60 20 view .LVU143
 568 0180 D5F8B832 		ldr	r3, [r5, #696]
 569              	.LVL42:
  56:boards/TMC5031_eval.c **** 	UNUSED(motor);
 570              		.loc 1 56 1 view .LVU144
 571 0184 0C46     		mov	r4, r1
  60:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x1, false);
 572              		.loc 1 60 2 view .LVU145
 573 0186 9B68     		ldr	r3, [r3, #8]
 574 0188 0021     		movs	r1, #0
 575              	.LVL43:
  60:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x1, false);
 576              		.loc 1 60 2 view .LVU146
 577 018a 44F08000 		orr	r0, r4, #128
 578              	.LVL44:
  56:boards/TMC5031_eval.c **** 	UNUSED(motor);
 579              		.loc 1 56 1 view .LVU147
 580 018e 9146     		mov	r9, r2
  60:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x1, false);
 581              		.loc 1 60 2 view .LVU148
 582 0190 9847     		blx	r3
 583              	.LVL45:
  61:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x2, false);
 584              		.loc 1 61 2 is_stmt 1 view .LVU149
  61:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x2, false);
 585              		.loc 1 61 20 is_stmt 0 view .LVU150
 586 0192 D5F8B832 		ldr	r3, [r5, #696]
  61:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x2, false);
 587              		.loc 1 61 2 view .LVU151
 588 0196 0021     		movs	r1, #0
 589 0198 9B68     		ldr	r3, [r3, #8]
 590 019a 4846     		mov	r0, r9
 591 019c 9847     		blx	r3
 592              	.LVL46:
  62:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x3, false);
 593              		.loc 1 62 2 is_stmt 1 view .LVU152
  62:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x3, false);
 594              		.loc 1 62 20 is_stmt 0 view .LVU153
 595 019e D5F8B832 		ldr	r3, [r5, #696]
  62:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x3, false);
 596              		.loc 1 62 2 view .LVU154
 597 01a2 0021     		movs	r1, #0
 598 01a4 9B68     		ldr	r3, [r3, #8]
 599 01a6 3046     		mov	r0, r6
 600 01a8 9847     		blx	r3
 601              	.LVL47:
  63:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x4, true);
 602              		.loc 1 63 2 is_stmt 1 view .LVU155
  63:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x4, true);
 603              		.loc 1 63 20 is_stmt 0 view .LVU156
 604 01aa D5F8B832 		ldr	r3, [r5, #696]
  63:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(x4, true);
 605              		.loc 1 63 2 view .LVU157
 606 01ae 0021     		movs	r1, #0
 607 01b0 9B68     		ldr	r3, [r3, #8]
 608 01b2 4046     		mov	r0, r8
 609 01b4 9847     		blx	r3
 610              	.LVL48:
  64:boards/TMC5031_eval.c **** 
 611              		.loc 1 64 2 is_stmt 1 view .LVU158
  64:boards/TMC5031_eval.c **** 
 612              		.loc 1 64 20 is_stmt 0 view .LVU159
 613 01b6 D5F8B832 		ldr	r3, [r5, #696]
  64:boards/TMC5031_eval.c **** 
 614              		.loc 1 64 2 view .LVU160
 615 01ba 0121     		movs	r1, #1
 616 01bc 9B68     		ldr	r3, [r3, #8]
 617 01be 3846     		mov	r0, r7
 618 01c0 9847     		blx	r3
 619              	.LVL49:
  66:boards/TMC5031_eval.c **** 	value <<= 8;
 620              		.loc 1 66 2 is_stmt 1 view .LVU161
  67:boards/TMC5031_eval.c **** 	value |= x2;
 621              		.loc 1 67 2 view .LVU162
  68:boards/TMC5031_eval.c **** 	value <<= 8;
 622              		.loc 1 68 2 view .LVU163
  73:boards/TMC5031_eval.c **** }
 623              		.loc 1 73 49 is_stmt 0 view .LVU164
 624 01c2 2968     		ldr	r1, [r5]
  68:boards/TMC5031_eval.c **** 	value <<= 8;
 625              		.loc 1 68 8 view .LVU165
 626 01c4 46EA0920 		orr	r0, r6, r9, lsl #8
 627              	.LVL50:
  69:boards/TMC5031_eval.c **** 	value |= x3;
 628              		.loc 1 69 2 is_stmt 1 view .LVU166
  70:boards/TMC5031_eval.c **** 	value <<= 8;
 629              		.loc 1 70 2 view .LVU167
  73:boards/TMC5031_eval.c **** }
 630              		.loc 1 73 41 is_stmt 0 view .LVU168
 631 01c8 04F07F04 		and	r4, r4, #127
  70:boards/TMC5031_eval.c **** 	value <<= 8;
 632              		.loc 1 70 8 view .LVU169
 633 01cc 48EA0020 		orr	r0, r8, r0, lsl #8
 634              	.LVL51:
  71:boards/TMC5031_eval.c **** 	value |= x4;
 635              		.loc 1 71 2 is_stmt 1 view .LVU170
  72:boards/TMC5031_eval.c **** 	TMC5031_config->shadowRegister[address & 0x7F] = value;
 636              		.loc 1 72 2 view .LVU171
  73:boards/TMC5031_eval.c **** }
 637              		.loc 1 73 2 view .LVU172
  73:boards/TMC5031_eval.c **** }
 638              		.loc 1 73 49 is_stmt 0 view .LVU173
 639 01d0 01EB8404 		add	r4, r1, r4, lsl #2
  72:boards/TMC5031_eval.c **** 	TMC5031_config->shadowRegister[address & 0x7F] = value;
 640              		.loc 1 72 8 view .LVU174
 641 01d4 47EA0020 		orr	r0, r7, r0, lsl #8
 642              	.LVL52:
  73:boards/TMC5031_eval.c **** }
 643              		.loc 1 73 49 view .LVU175
 644 01d8 6060     		str	r0, [r4, #4]
  74:boards/TMC5031_eval.c **** 
 645              		.loc 1 74 1 view .LVU176
 646 01da BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 647              	.LVL53:
 648              	.L38:
  74:boards/TMC5031_eval.c **** 
 649              		.loc 1 74 1 view .LVU177
 650 01de 00BF     		.align	2
 651              	.L37:
 652 01e0 00000000 		.word	.LANCHOR0
 653              		.cfi_endproc
 654              	.LFE1:
 656              		.align	1
 657              		.global	tmc5031_writeInt
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 661              		.fpu softvfp
 663              	tmc5031_writeInt:
 664              	.LVL54:
 665              	.LFB2:
  77:boards/TMC5031_eval.c **** 	tmc5031_writeDatagram(motor, Address, 0xFF & (Value>>24), 0xFF & (Value>>16), 0xFF & (Value>>8), 0
 666              		.loc 1 77 1 is_stmt 1 view -0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
  78:boards/TMC5031_eval.c **** }
 670              		.loc 1 78 2 view .LVU179
  77:boards/TMC5031_eval.c **** 	tmc5031_writeDatagram(motor, Address, 0xFF & (Value>>24), 0xFF & (Value>>16), 0xFF & (Value>>8), 0
 671              		.loc 1 77 1 is_stmt 0 view .LVU180
 672 01e4 07B5     		push	{r0, r1, r2, lr}
 673              	.LCFI6:
 674              		.cfi_def_cfa_offset 16
 675              		.cfi_offset 14, -4
  78:boards/TMC5031_eval.c **** }
 676              		.loc 1 78 2 view .LVU181
 677 01e6 D3B2     		uxtb	r3, r2
 678 01e8 0193     		str	r3, [sp, #4]
 679 01ea C2F30723 		ubfx	r3, r2, #8, #8
 680 01ee 0093     		str	r3, [sp]
 681 01f0 C2F30743 		ubfx	r3, r2, #16, #8
 682 01f4 120E     		lsrs	r2, r2, #24
 683              	.LVL55:
  78:boards/TMC5031_eval.c **** }
 684              		.loc 1 78 2 view .LVU182
 685 01f6 FFF7FEFF 		bl	tmc5031_writeDatagram
 686              	.LVL56:
  79:boards/TMC5031_eval.c **** 
 687              		.loc 1 79 1 view .LVU183
 688 01fa 03B0     		add	sp, sp, #12
 689              	.LCFI7:
 690              		.cfi_def_cfa_offset 4
 691              		@ sp needed
 692 01fc 5DF804FB 		ldr	pc, [sp], #4
 693              		.cfi_endproc
 694              	.LFE2:
 696              		.align	1
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 700              		.fpu softvfp
 702              	writeRegister:
 703              	.LVL57:
 704              	.LFB14:
 706:boards/TMC5031_eval.c **** 	UNUSED(motor);
 705              		.loc 1 706 1 is_stmt 1 view -0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 707:boards/TMC5031_eval.c **** 	tmc5031_writeInt(0, address, value);
 710              		.loc 1 707 2 view .LVU185
 708:boards/TMC5031_eval.c **** }
 711              		.loc 1 708 2 view .LVU186
 712 0200 0020     		movs	r0, #0
 713              	.LVL58:
 708:boards/TMC5031_eval.c **** }
 714              		.loc 1 708 2 is_stmt 0 view .LVU187
 715 0202 FFF7FEBF 		b	tmc5031_writeInt
 716              	.LVL59:
 708:boards/TMC5031_eval.c **** }
 717              		.loc 1 708 2 view .LVU188
 718              		.cfi_endproc
 719              	.LFE14:
 721              		.align	1
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 725              		.fpu softvfp
 727              	moveTo:
 728              	.LVL60:
 729              	.LFB8:
 144:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
 730              		.loc 1 144 1 is_stmt 1 view -0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 145:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 734              		.loc 1 145 2 view .LVU190
 145:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 735              		.loc 1 145 4 is_stmt 0 view .LVU191
 736 0206 0128     		cmp	r0, #1
 144:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
 737              		.loc 1 144 1 view .LVU192
 738 0208 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 739              	.LCFI8:
 740              		.cfi_def_cfa_offset 32
 741              		.cfi_offset 4, -24
 742              		.cfi_offset 5, -20
 743              		.cfi_offset 6, -16
 744              		.cfi_offset 7, -12
 745              		.cfi_offset 8, -8
 746              		.cfi_offset 14, -4
 144:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
 747              		.loc 1 144 1 view .LVU193
 748 020c 0446     		mov	r4, r0
 749 020e 0F46     		mov	r7, r1
 145:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 750              		.loc 1 145 4 view .LVU194
 751 0210 28D8     		bhi	.L44
 148:boards/TMC5031_eval.c **** 	{
 752              		.loc 1 148 2 is_stmt 1 view .LVU195
 148:boards/TMC5031_eval.c **** 	{
 753              		.loc 1 148 17 is_stmt 0 view .LVU196
 754 0212 DFF85880 		ldr	r8, .L48+4
 755 0216 2026     		movs	r6, #32
 148:boards/TMC5031_eval.c **** 	{
 756              		.loc 1 148 4 view .LVU197
 757 0218 18F80030 		ldrb	r3, [r8, r0]	@ zero_extendqisi2
 758 021c 8640     		lsls	r6, r6, r0
 759 021e 75B2     		sxtb	r5, r6
 760 0220 63B1     		cbz	r3, .L43
 150:boards/TMC5031_eval.c **** 		vMaxModified[motor] = false;
 761              		.loc 1 150 3 is_stmt 1 view .LVU198
 762 0222 114B     		ldr	r3, .L48
 763 0224 03EB8003 		add	r3, r3, r0, lsl #2
 150:boards/TMC5031_eval.c **** 		vMaxModified[motor] = false;
 764              		.loc 1 150 27 is_stmt 0 view .LVU199
 765 0228 45F00701 		orr	r1, r5, #7
 766              	.LVL61:
 150:boards/TMC5031_eval.c **** 		vMaxModified[motor] = false;
 767              		.loc 1 150 3 view .LVU200
 768 022c D3F8BC22 		ldr	r2, [r3, #700]
 769 0230 C9B2     		uxtb	r1, r1
 770 0232 FFF7FEFF 		bl	tmc5031_writeInt
 771              	.LVL62:
 151:boards/TMC5031_eval.c **** 	}
 772              		.loc 1 151 3 is_stmt 1 view .LVU201
 151:boards/TMC5031_eval.c **** 	}
 773              		.loc 1 151 23 is_stmt 0 view .LVU202
 774 0236 0023     		movs	r3, #0
 775 0238 08F80430 		strb	r3, [r8, r4]
 776              	.L43:
 153:boards/TMC5031_eval.c **** 	tmc5031_writeDatagram(motor, TMC5031_RAMPMODE(motor), 0, 0, 0, TMC5031_MODE_POSITION);
 777              		.loc 1 153 2 is_stmt 1 view .LVU203
 153:boards/TMC5031_eval.c **** 	tmc5031_writeDatagram(motor, TMC5031_RAMPMODE(motor), 0, 0, 0, TMC5031_MODE_POSITION);
 778              		.loc 1 153 26 is_stmt 0 view .LVU204
 779 023c 45F00D05 		orr	r5, r5, #13
 153:boards/TMC5031_eval.c **** 	tmc5031_writeDatagram(motor, TMC5031_RAMPMODE(motor), 0, 0, 0, TMC5031_MODE_POSITION);
 780              		.loc 1 153 2 view .LVU205
 781 0240 E9B2     		uxtb	r1, r5
 782 0242 3A46     		mov	r2, r7
 154:boards/TMC5031_eval.c **** 
 783              		.loc 1 154 2 view .LVU206
 784 0244 0025     		movs	r5, #0
 153:boards/TMC5031_eval.c **** 	tmc5031_writeDatagram(motor, TMC5031_RAMPMODE(motor), 0, 0, 0, TMC5031_MODE_POSITION);
 785              		.loc 1 153 2 view .LVU207
 786 0246 2046     		mov	r0, r4
 787 0248 FFF7FEFF 		bl	tmc5031_writeInt
 788              	.LVL63:
 154:boards/TMC5031_eval.c **** 
 789              		.loc 1 154 2 is_stmt 1 view .LVU208
 790 024c 2046     		mov	r0, r4
 791 024e CDE90055 		strd	r5, r5, [sp]
 792 0252 2B46     		mov	r3, r5
 793 0254 2A46     		mov	r2, r5
 794 0256 F1B2     		uxtb	r1, r6
 795 0258 FFF7FEFF 		bl	tmc5031_writeDatagram
 796              	.LVL64:
 156:boards/TMC5031_eval.c **** }
 797              		.loc 1 156 2 view .LVU209
 156:boards/TMC5031_eval.c **** }
 798              		.loc 1 156 9 is_stmt 0 view .LVU210
 799 025c 2846     		mov	r0, r5
 800              	.L41:
 157:boards/TMC5031_eval.c **** 
 801              		.loc 1 157 1 view .LVU211
 802 025e 02B0     		add	sp, sp, #8
 803              	.LCFI9:
 804              		.cfi_remember_state
 805              		.cfi_def_cfa_offset 24
 806              		@ sp needed
 807 0260 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 808              	.LVL65:
 809              	.L44:
 810              	.LCFI10:
 811              		.cfi_restore_state
 146:boards/TMC5031_eval.c **** 
 812              		.loc 1 146 10 view .LVU212
 813 0264 0820     		movs	r0, #8
 814              	.LVL66:
 146:boards/TMC5031_eval.c **** 
 815              		.loc 1 146 10 view .LVU213
 816 0266 FAE7     		b	.L41
 817              	.L49:
 818              		.align	2
 819              	.L48:
 820 0268 00000000 		.word	.LANCHOR0
 821 026c 00000000 		.word	.LANCHOR1
 822              		.cfi_endproc
 823              	.LFE8:
 825              		.align	1
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 829              		.fpu softvfp
 831              	rotate:
 832              	.LVL67:
 833              	.LFB4:
 111:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
 834              		.loc 1 111 1 is_stmt 1 view -0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 112:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 838              		.loc 1 112 2 view .LVU215
 112:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 839              		.loc 1 112 4 is_stmt 0 view .LVU216
 840 0270 0128     		cmp	r0, #1
 111:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
 841              		.loc 1 111 1 view .LVU217
 842 0272 73B5     		push	{r0, r1, r4, r5, r6, lr}
 843              	.LCFI11:
 844              		.cfi_def_cfa_offset 24
 845              		.cfi_offset 4, -16
 846              		.cfi_offset 5, -12
 847              		.cfi_offset 6, -8
 848              		.cfi_offset 14, -4
 111:boards/TMC5031_eval.c **** 	if(motor >= MOTORS)
 849              		.loc 1 111 1 view .LVU218
 850 0274 0546     		mov	r5, r0
 851 0276 0E46     		mov	r6, r1
 112:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 852              		.loc 1 112 4 view .LVU219
 853 0278 1CD8     		bhi	.L53
 854              	.LVL68:
 855              	.LBB20:
 856              	.LBI20:
 110:boards/TMC5031_eval.c **** {
 857              		.loc 1 110 17 is_stmt 1 view .LVU220
 858              	.LBB21:
 115:boards/TMC5031_eval.c **** 	vMaxModified[motor] = true;
 859              		.loc 1 115 2 view .LVU221
 115:boards/TMC5031_eval.c **** 	vMaxModified[motor] = true;
 860              		.loc 1 115 26 is_stmt 0 view .LVU222
 861 027a 2024     		movs	r4, #32
 862 027c 8440     		lsls	r4, r4, r0
 863 027e 44F00701 		orr	r1, r4, #7
 864              	.LVL69:
 115:boards/TMC5031_eval.c **** 	vMaxModified[motor] = true;
 865              		.loc 1 115 2 view .LVU223
 866 0282 86EAE672 		eor	r2, r6, r6, asr #31
 867 0286 A2EBE672 		sub	r2, r2, r6, asr #31
 868 028a C9B2     		uxtb	r1, r1
 869 028c FFF7FEFF 		bl	tmc5031_writeInt
 870              	.LVL70:
 116:boards/TMC5031_eval.c **** 	if(velocity >= 0)
 871              		.loc 1 116 2 is_stmt 1 view .LVU224
 116:boards/TMC5031_eval.c **** 	if(velocity >= 0)
 872              		.loc 1 116 22 is_stmt 0 view .LVU225
 873 0290 094A     		ldr	r2, .L55
 874 0292 0123     		movs	r3, #1
 117:boards/TMC5031_eval.c **** 	{
 875              		.loc 1 117 4 view .LVU226
 876 0294 002E     		cmp	r6, #0
 116:boards/TMC5031_eval.c **** 	if(velocity >= 0)
 877              		.loc 1 116 22 view .LVU227
 878 0296 5355     		strb	r3, [r2, r5]
 117:boards/TMC5031_eval.c **** 	{
 879              		.loc 1 117 2 is_stmt 1 view .LVU228
 880 0298 E1B2     		uxtb	r1, r4
 123:boards/TMC5031_eval.c **** 	}
 881              		.loc 1 123 3 is_stmt 0 view .LVU229
 882 029a B8BF     		it	lt
 883 029c 0223     		movlt	r3, #2
 884 029e 0024     		movs	r4, #0
 119:boards/TMC5031_eval.c **** 	}
 885              		.loc 1 119 3 is_stmt 1 view .LVU230
 123:boards/TMC5031_eval.c **** 	}
 886              		.loc 1 123 3 view .LVU231
 887 02a0 CDE90043 		strd	r4, r3, [sp]
 888 02a4 2846     		mov	r0, r5
 889 02a6 2346     		mov	r3, r4
 890 02a8 2246     		mov	r2, r4
 891 02aa FFF7FEFF 		bl	tmc5031_writeDatagram
 892              	.LVL71:
 893 02ae 2046     		mov	r0, r4
 894              	.LVL72:
 895              	.L50:
 123:boards/TMC5031_eval.c **** 	}
 896              		.loc 1 123 3 is_stmt 0 view .LVU232
 897              	.LBE21:
 898              	.LBE20:
 126:boards/TMC5031_eval.c **** 
 899              		.loc 1 126 1 view .LVU233
 900 02b0 02B0     		add	sp, sp, #8
 901              	.LCFI12:
 902              		.cfi_remember_state
 903              		.cfi_def_cfa_offset 16
 904              		@ sp needed
 905 02b2 70BD     		pop	{r4, r5, r6, pc}
 906              	.LVL73:
 907              	.L53:
 908              	.LCFI13:
 909              		.cfi_restore_state
 113:boards/TMC5031_eval.c **** 
 910              		.loc 1 113 10 view .LVU234
 911 02b4 0820     		movs	r0, #8
 912              	.LVL74:
 113:boards/TMC5031_eval.c **** 
 913              		.loc 1 113 10 view .LVU235
 914 02b6 FBE7     		b	.L50
 915              	.L56:
 916              		.align	2
 917              	.L55:
 918 02b8 00000000 		.word	.LANCHOR1
 919              		.cfi_endproc
 920              	.LFE4:
 922              		.align	1
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu softvfp
 928              	stop:
 929              	.LVL75:
 930              	.LFB7:
 139:boards/TMC5031_eval.c **** 	return rotate(motor, 0);
 931              		.loc 1 139 1 is_stmt 1 view -0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 140:boards/TMC5031_eval.c **** }
 936              		.loc 1 140 2 view .LVU237
 140:boards/TMC5031_eval.c **** }
 937              		.loc 1 140 9 is_stmt 0 view .LVU238
 938 02bc 0021     		movs	r1, #0
 939 02be D7E7     		b	rotate
 940              	.LVL76:
 140:boards/TMC5031_eval.c **** }
 941              		.loc 1 140 9 view .LVU239
 942              		.cfi_endproc
 943              	.LFE7:
 945              		.align	1
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu softvfp
 951              	left:
 952              	.LVL77:
 953              	.LFB6:
 134:boards/TMC5031_eval.c **** 	return rotate(motor, -velocity);
 954              		.loc 1 134 1 is_stmt 1 view -0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              		@ link register save eliminated.
 135:boards/TMC5031_eval.c **** }
 959              		.loc 1 135 2 view .LVU241
 135:boards/TMC5031_eval.c **** }
 960              		.loc 1 135 9 is_stmt 0 view .LVU242
 961 02c0 4942     		rsbs	r1, r1, #0
 962              	.LVL78:
 135:boards/TMC5031_eval.c **** }
 963              		.loc 1 135 9 view .LVU243
 964 02c2 D5E7     		b	rotate
 965              	.LVL79:
 135:boards/TMC5031_eval.c **** }
 966              		.loc 1 135 9 view .LVU244
 967              		.cfi_endproc
 968              	.LFE6:
 970              		.align	1
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 974              		.fpu softvfp
 976              	right:
 977              	.LVL80:
 978              	.LFB5:
 129:boards/TMC5031_eval.c **** 	return rotate(motor, velocity);
 979              		.loc 1 129 1 is_stmt 1 view -0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              		@ link register save eliminated.
 130:boards/TMC5031_eval.c **** }
 984              		.loc 1 130 2 view .LVU246
 130:boards/TMC5031_eval.c **** }
 985              		.loc 1 130 9 is_stmt 0 view .LVU247
 986 02c4 D4E7     		b	rotate
 987              	.LVL81:
 130:boards/TMC5031_eval.c **** }
 988              		.loc 1 130 9 view .LVU248
 989              		.cfi_endproc
 990              	.LFE5:
 992              		.align	1
 993              		.global	tmc5031_readInt
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu softvfp
 999              	tmc5031_readInt:
 1000              	.LVL82:
 1001              	.LFB3:
  82:boards/TMC5031_eval.c **** 	UNUSED(motor);
 1002              		.loc 1 82 1 is_stmt 1 view -0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
  83:boards/TMC5031_eval.c **** 	int value;
 1006              		.loc 1 83 2 view .LVU250
  84:boards/TMC5031_eval.c **** 
 1007              		.loc 1 84 2 view .LVU251
  86:boards/TMC5031_eval.c **** 
 1008              		.loc 1 86 2 view .LVU252
  82:boards/TMC5031_eval.c **** 	UNUSED(motor);
 1009              		.loc 1 82 1 is_stmt 0 view .LVU253
 1010 02c6 38B5     		push	{r3, r4, r5, lr}
 1011              	.LCFI14:
 1012              		.cfi_def_cfa_offset 16
 1013              		.cfi_offset 3, -16
 1014              		.cfi_offset 4, -12
 1015              		.cfi_offset 5, -8
 1016              		.cfi_offset 14, -4
  89:boards/TMC5031_eval.c **** 		return TMC5031_config->shadowRegister[address];
 1017              		.loc 1 89 6 view .LVU254
 1018 02c8 274C     		ldr	r4, .L63
  86:boards/TMC5031_eval.c **** 
 1019              		.loc 1 86 10 view .LVU255
 1020 02ca 01F07F05 		and	r5, r1, #127
 1021              	.LVL83:
  89:boards/TMC5031_eval.c **** 		return TMC5031_config->shadowRegister[address];
 1022              		.loc 1 89 2 is_stmt 1 view .LVU256
  89:boards/TMC5031_eval.c **** 		return TMC5031_config->shadowRegister[address];
 1023              		.loc 1 89 6 is_stmt 0 view .LVU257
 1024 02ce 6319     		adds	r3, r4, r5
  89:boards/TMC5031_eval.c **** 		return TMC5031_config->shadowRegister[address];
 1025              		.loc 1 89 4 view .LVU258
 1026 02d0 93F81832 		ldrb	r3, [r3, #536]	@ zero_extendqisi2
 1027 02d4 DB07     		lsls	r3, r3, #31
 1028 02d6 04D4     		bmi	.L61
  90:boards/TMC5031_eval.c **** 
 1029              		.loc 1 90 3 is_stmt 1 view .LVU259
  90:boards/TMC5031_eval.c **** 
 1030              		.loc 1 90 40 is_stmt 0 view .LVU260
 1031 02d8 2168     		ldr	r1, [r4]
 1032 02da 01EB8505 		add	r5, r1, r5, lsl #2
 1033              	.LVL84:
  90:boards/TMC5031_eval.c **** 
 1034              		.loc 1 90 40 view .LVU261
 1035 02de 6868     		ldr	r0, [r5, #4]
 1036              	.LVL85:
 1037              	.L60:
 108:boards/TMC5031_eval.c **** 
 1038              		.loc 1 108 1 view .LVU262
 1039 02e0 38BD     		pop	{r3, r4, r5, pc}
 1040              	.LVL86:
 1041              	.L61:
  92:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1042              		.loc 1 92 2 is_stmt 1 view .LVU263
  92:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1043              		.loc 1 92 20 is_stmt 0 view .LVU264
 1044 02e2 D4F8B832 		ldr	r3, [r4, #696]
  92:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1045              		.loc 1 92 2 view .LVU265
 1046 02e6 0021     		movs	r1, #0
 1047 02e8 9B68     		ldr	r3, [r3, #8]
 1048 02ea 2846     		mov	r0, r5
 1049              	.LVL87:
  92:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1050              		.loc 1 92 2 view .LVU266
 1051 02ec 9847     		blx	r3
 1052              	.LVL88:
  93:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1053              		.loc 1 93 2 is_stmt 1 view .LVU267
  93:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1054              		.loc 1 93 20 is_stmt 0 view .LVU268
 1055 02ee D4F8B832 		ldr	r3, [r4, #696]
  93:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1056              		.loc 1 93 2 view .LVU269
 1057 02f2 0021     		movs	r1, #0
 1058 02f4 9B68     		ldr	r3, [r3, #8]
 1059 02f6 0846     		mov	r0, r1
 1060 02f8 9847     		blx	r3
 1061              	.LVL89:
  94:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1062              		.loc 1 94 2 is_stmt 1 view .LVU270
  94:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1063              		.loc 1 94 20 is_stmt 0 view .LVU271
 1064 02fa D4F8B832 		ldr	r3, [r4, #696]
  94:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, false);
 1065              		.loc 1 94 2 view .LVU272
 1066 02fe 0021     		movs	r1, #0
 1067 0300 9B68     		ldr	r3, [r3, #8]
 1068 0302 0846     		mov	r0, r1
 1069 0304 9847     		blx	r3
 1070              	.LVL90:
  95:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, true);
 1071              		.loc 1 95 2 is_stmt 1 view .LVU273
  95:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, true);
 1072              		.loc 1 95 20 is_stmt 0 view .LVU274
 1073 0306 D4F8B832 		ldr	r3, [r4, #696]
  95:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->readWrite(0, true);
 1074              		.loc 1 95 2 view .LVU275
 1075 030a 0021     		movs	r1, #0
 1076 030c 9B68     		ldr	r3, [r3, #8]
 1077 030e 0846     		mov	r0, r1
 1078 0310 9847     		blx	r3
 1079              	.LVL91:
  96:boards/TMC5031_eval.c **** 
 1080              		.loc 1 96 2 is_stmt 1 view .LVU276
  96:boards/TMC5031_eval.c **** 
 1081              		.loc 1 96 20 is_stmt 0 view .LVU277
 1082 0312 D4F8B832 		ldr	r3, [r4, #696]
  96:boards/TMC5031_eval.c **** 
 1083              		.loc 1 96 2 view .LVU278
 1084 0316 0121     		movs	r1, #1
 1085 0318 9B68     		ldr	r3, [r3, #8]
 1086 031a 0020     		movs	r0, #0
 1087 031c 9847     		blx	r3
 1088              	.LVL92:
  98:boards/TMC5031_eval.c **** 	value = TMC5031_SPIChannel->readWrite(0, false);
 1089              		.loc 1 98 2 is_stmt 1 view .LVU279
  98:boards/TMC5031_eval.c **** 	value = TMC5031_SPIChannel->readWrite(0, false);
 1090              		.loc 1 98 20 is_stmt 0 view .LVU280
 1091 031e D4F8B832 		ldr	r3, [r4, #696]
  98:boards/TMC5031_eval.c **** 	value = TMC5031_SPIChannel->readWrite(0, false);
 1092              		.loc 1 98 2 view .LVU281
 1093 0322 0021     		movs	r1, #0
 1094 0324 9B68     		ldr	r3, [r3, #8]
 1095 0326 2846     		mov	r0, r5
 1096 0328 9847     		blx	r3
 1097              	.LVL93:
  99:boards/TMC5031_eval.c **** 	value <<= 8;
 1098              		.loc 1 99 2 is_stmt 1 view .LVU282
  99:boards/TMC5031_eval.c **** 	value <<= 8;
 1099              		.loc 1 99 28 is_stmt 0 view .LVU283
 1100 032a D4F8B832 		ldr	r3, [r4, #696]
  99:boards/TMC5031_eval.c **** 	value <<= 8;
 1101              		.loc 1 99 10 view .LVU284
 1102 032e 0021     		movs	r1, #0
 1103 0330 9B68     		ldr	r3, [r3, #8]
 1104 0332 0846     		mov	r0, r1
 1105 0334 9847     		blx	r3
 1106              	.LVL94:
 100:boards/TMC5031_eval.c **** 	value |= TMC5031_SPIChannel->readWrite(0, false);
 1107              		.loc 1 100 2 is_stmt 1 view .LVU285
 101:boards/TMC5031_eval.c **** 	value <<= 8;
 1108              		.loc 1 101 29 is_stmt 0 view .LVU286
 1109 0336 D4F8B832 		ldr	r3, [r4, #696]
 101:boards/TMC5031_eval.c **** 	value <<= 8;
 1110              		.loc 1 101 11 view .LVU287
 1111 033a 0021     		movs	r1, #0
 1112 033c 9B68     		ldr	r3, [r3, #8]
 100:boards/TMC5031_eval.c **** 	value |= TMC5031_SPIChannel->readWrite(0, false);
 1113              		.loc 1 100 8 view .LVU288
 1114 033e 0502     		lsls	r5, r0, #8
 1115              	.LVL95:
 101:boards/TMC5031_eval.c **** 	value <<= 8;
 1116              		.loc 1 101 2 is_stmt 1 view .LVU289
 101:boards/TMC5031_eval.c **** 	value <<= 8;
 1117              		.loc 1 101 11 is_stmt 0 view .LVU290
 1118 0340 0846     		mov	r0, r1
 1119 0342 9847     		blx	r3
 1120              	.LVL96:
 103:boards/TMC5031_eval.c **** 	value <<= 8;
 1121              		.loc 1 103 29 view .LVU291
 1122 0344 D4F8B832 		ldr	r3, [r4, #696]
 103:boards/TMC5031_eval.c **** 	value <<= 8;
 1123              		.loc 1 103 11 view .LVU292
 1124 0348 0021     		movs	r1, #0
 1125 034a 9B68     		ldr	r3, [r3, #8]
 101:boards/TMC5031_eval.c **** 	value <<= 8;
 1126              		.loc 1 101 8 view .LVU293
 1127 034c 0543     		orrs	r5, r5, r0
 1128              	.LVL97:
 102:boards/TMC5031_eval.c **** 	value |= TMC5031_SPIChannel->readWrite(0, false);
 1129              		.loc 1 102 2 is_stmt 1 view .LVU294
 103:boards/TMC5031_eval.c **** 	value <<= 8;
 1130              		.loc 1 103 11 is_stmt 0 view .LVU295
 1131 034e 0846     		mov	r0, r1
 1132 0350 9847     		blx	r3
 1133              	.LVL98:
 105:boards/TMC5031_eval.c **** 
 1134              		.loc 1 105 29 view .LVU296
 1135 0352 D4F8B832 		ldr	r3, [r4, #696]
 102:boards/TMC5031_eval.c **** 	value |= TMC5031_SPIChannel->readWrite(0, false);
 1136              		.loc 1 102 8 view .LVU297
 1137 0356 2D02     		lsls	r5, r5, #8
 1138              	.LVL99:
 103:boards/TMC5031_eval.c **** 	value <<= 8;
 1139              		.loc 1 103 2 is_stmt 1 view .LVU298
 103:boards/TMC5031_eval.c **** 	value <<= 8;
 1140              		.loc 1 103 8 is_stmt 0 view .LVU299
 1141 0358 0543     		orrs	r5, r5, r0
 1142              	.LVL100:
 104:boards/TMC5031_eval.c **** 	value |= TMC5031_SPIChannel->readWrite(0, true);
 1143              		.loc 1 104 2 is_stmt 1 view .LVU300
 105:boards/TMC5031_eval.c **** 
 1144              		.loc 1 105 11 is_stmt 0 view .LVU301
 1145 035a 9B68     		ldr	r3, [r3, #8]
 1146 035c 0121     		movs	r1, #1
 1147 035e 0020     		movs	r0, #0
 1148 0360 9847     		blx	r3
 1149              	.LVL101:
 104:boards/TMC5031_eval.c **** 	value |= TMC5031_SPIChannel->readWrite(0, true);
 1150              		.loc 1 104 8 view .LVU302
 1151 0362 2D02     		lsls	r5, r5, #8
 1152              	.LVL102:
 105:boards/TMC5031_eval.c **** 
 1153              		.loc 1 105 2 is_stmt 1 view .LVU303
 105:boards/TMC5031_eval.c **** 
 1154              		.loc 1 105 8 is_stmt 0 view .LVU304
 1155 0364 2843     		orrs	r0, r0, r5
 1156              	.LVL103:
 107:boards/TMC5031_eval.c **** }
 1157              		.loc 1 107 2 is_stmt 1 view .LVU305
 107:boards/TMC5031_eval.c **** }
 1158              		.loc 1 107 9 is_stmt 0 view .LVU306
 1159 0366 BBE7     		b	.L60
 1160              	.L64:
 1161              		.align	2
 1162              	.L63:
 1163 0368 00000000 		.word	.LANCHOR0
 1164              		.cfi_endproc
 1165              	.LFE3:
 1167              		.align	1
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1171              		.fpu softvfp
 1173              	readRegister:
 1174              	.LVL104:
 1175              	.LFB15:
 712:boards/TMC5031_eval.c **** 	UNUSED(motor);
 1176              		.loc 1 712 1 is_stmt 1 view -0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 713:boards/TMC5031_eval.c **** 	*value = tmc5031_readInt(0, address);
 1180              		.loc 1 713 2 view .LVU308
 714:boards/TMC5031_eval.c **** }
 1181              		.loc 1 714 2 view .LVU309
 712:boards/TMC5031_eval.c **** 	UNUSED(motor);
 1182              		.loc 1 712 1 is_stmt 0 view .LVU310
 1183 036c 10B5     		push	{r4, lr}
 1184              	.LCFI15:
 1185              		.cfi_def_cfa_offset 8
 1186              		.cfi_offset 4, -8
 1187              		.cfi_offset 14, -4
 714:boards/TMC5031_eval.c **** }
 1188              		.loc 1 714 11 view .LVU311
 1189 036e 0020     		movs	r0, #0
 1190              	.LVL105:
 712:boards/TMC5031_eval.c **** 	UNUSED(motor);
 1191              		.loc 1 712 1 view .LVU312
 1192 0370 1446     		mov	r4, r2
 714:boards/TMC5031_eval.c **** }
 1193              		.loc 1 714 11 view .LVU313
 1194 0372 FFF7FEFF 		bl	tmc5031_readInt
 1195              	.LVL106:
 714:boards/TMC5031_eval.c **** }
 1196              		.loc 1 714 9 view .LVU314
 1197 0376 2060     		str	r0, [r4]
 715:boards/TMC5031_eval.c **** 
 1198              		.loc 1 715 1 view .LVU315
 1199 0378 10BD     		pop	{r4, pc}
 715:boards/TMC5031_eval.c **** 
 1200              		.loc 1 715 1 view .LVU316
 1201              		.cfi_endproc
 1202              	.LFE15:
 1204              		.align	1
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu softvfp
 1210              	moveBy:
 1211              	.LVL107:
 1212              	.LFB9:
 160:boards/TMC5031_eval.c **** 	// determine actual position and add numbers of ticks to move
 1213              		.loc 1 160 1 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 162:boards/TMC5031_eval.c **** 
 1217              		.loc 1 162 2 view .LVU318
 160:boards/TMC5031_eval.c **** 	// determine actual position and add numbers of ticks to move
 1218              		.loc 1 160 1 is_stmt 0 view .LVU319
 1219 037a 38B5     		push	{r3, r4, r5, lr}
 1220              	.LCFI16:
 1221              		.cfi_def_cfa_offset 16
 1222              		.cfi_offset 3, -16
 1223              		.cfi_offset 4, -12
 1224              		.cfi_offset 5, -8
 1225              		.cfi_offset 14, -4
 162:boards/TMC5031_eval.c **** 
 1226              		.loc 1 162 34 view .LVU320
 1227 037c 2023     		movs	r3, #32
 1228 037e 8340     		lsls	r3, r3, r0
 1229 0380 43F00103 		orr	r3, r3, #1
 160:boards/TMC5031_eval.c **** 	// determine actual position and add numbers of ticks to move
 1230              		.loc 1 160 1 view .LVU321
 1231 0384 0D46     		mov	r5, r1
 162:boards/TMC5031_eval.c **** 
 1232              		.loc 1 162 11 view .LVU322
 1233 0386 D9B2     		uxtb	r1, r3
 1234              	.LVL108:
 160:boards/TMC5031_eval.c **** 	// determine actual position and add numbers of ticks to move
 1235              		.loc 1 160 1 view .LVU323
 1236 0388 0446     		mov	r4, r0
 162:boards/TMC5031_eval.c **** 
 1237              		.loc 1 162 11 view .LVU324
 1238 038a FFF7FEFF 		bl	tmc5031_readInt
 1239              	.LVL109:
 162:boards/TMC5031_eval.c **** 
 1240              		.loc 1 162 58 view .LVU325
 1241 038e 2968     		ldr	r1, [r5]
 1242 0390 0144     		add	r1, r1, r0
 162:boards/TMC5031_eval.c **** 
 1243              		.loc 1 162 9 view .LVU326
 1244 0392 2960     		str	r1, [r5]
 164:boards/TMC5031_eval.c **** }
 1245              		.loc 1 164 2 is_stmt 1 view .LVU327
 164:boards/TMC5031_eval.c **** }
 1246              		.loc 1 164 9 is_stmt 0 view .LVU328
 1247 0394 2046     		mov	r0, r4
 165:boards/TMC5031_eval.c **** 
 1248              		.loc 1 165 1 view .LVU329
 1249 0396 BDE83840 		pop	{r3, r4, r5, lr}
 1250              	.LCFI17:
 1251              		.cfi_restore 14
 1252              		.cfi_restore 5
 1253              		.cfi_restore 4
 1254              		.cfi_restore 3
 1255              		.cfi_def_cfa_offset 0
 1256              	.LVL110:
 164:boards/TMC5031_eval.c **** }
 1257              		.loc 1 164 9 view .LVU330
 1258 039a 34E7     		b	moveTo
 1259              	.LVL111:
 1260              		.cfi_endproc
 1261              	.LFE9:
 1263              		.align	1
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1267              		.fpu softvfp
 1269              	handleParameter:
 1270              	.LVL112:
 1271              	.LFB10:
 168:boards/TMC5031_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 1272              		.loc 1 168 1 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1276              		.loc 1 169 2 view .LVU332
 170:boards/TMC5031_eval.c **** 
 1277              		.loc 1 170 2 view .LVU333
 172:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 1278              		.loc 1 172 2 view .LVU334
 172:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 1279              		.loc 1 172 4 is_stmt 0 view .LVU335
 1280 039c 0129     		cmp	r1, #1
 168:boards/TMC5031_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 1281              		.loc 1 168 1 view .LVU336
 1282 039e 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1283              	.LCFI18:
 1284              		.cfi_def_cfa_offset 32
 1285              		.cfi_offset 3, -32
 1286              		.cfi_offset 4, -28
 1287              		.cfi_offset 5, -24
 1288              		.cfi_offset 6, -20
 1289              		.cfi_offset 7, -16
 1290              		.cfi_offset 8, -12
 1291              		.cfi_offset 9, -8
 1292              		.cfi_offset 14, -4
 168:boards/TMC5031_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 1293              		.loc 1 168 1 view .LVU337
 1294 03a2 0446     		mov	r4, r0
 1295 03a4 0D46     		mov	r5, r1
 1296 03a6 1E46     		mov	r6, r3
 172:boards/TMC5031_eval.c **** 		return TMC_ERROR_MOTOR;
 1297              		.loc 1 172 4 view .LVU338
 1298 03a8 00F2E985 		bhi	.L199
 175:boards/TMC5031_eval.c **** 	{
 1299              		.loc 1 175 2 is_stmt 1 view .LVU339
 1300 03ac 1D2A     		cmp	r2, #29
 1301 03ae 56D9     		bls	.L213
 1302 03b0 02F17403 		add	r3, r2, #116
 1303              	.LVL113:
 175:boards/TMC5031_eval.c **** 	{
 1304              		.loc 1 175 2 is_stmt 0 view .LVU340
 1305 03b4 DBB2     		uxtb	r3, r3
 1306 03b6 472B     		cmp	r3, #71
 1307 03b8 03D9     		bls	.L123
 1308 03ba 0424     		movs	r4, #4
 1309              	.LVL114:
 1310              	.L67:
 683:boards/TMC5031_eval.c **** 
 1311              		.loc 1 683 1 view .LVU341
 1312 03bc 2046     		mov	r0, r4
 1313 03be BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1314              	.LVL115:
 1315              	.L123:
 683:boards/TMC5031_eval.c **** 
 1316              		.loc 1 683 1 view .LVU342
 1317 03c2 8C3A     		subs	r2, r2, #140
 1318              	.LVL116:
 683:boards/TMC5031_eval.c **** 
 1319              		.loc 1 683 1 view .LVU343
 1320 03c4 472A     		cmp	r2, #71
 1321 03c6 00F2DD85 		bhi	.L200
 1322 03ca DFE812F0 		tbh	[pc, r2, lsl #1]
 1323              	.L72:
 1324 03ce 7C02     		.2byte	(.L95-.L72)/2
 1325 03d0 DB05     		.2byte	(.L200-.L72)/2
 1326 03d2 DB05     		.2byte	(.L200-.L72)/2
 1327 03d4 DB05     		.2byte	(.L200-.L72)/2
 1328 03d6 DB05     		.2byte	(.L200-.L72)/2
 1329 03d8 DB05     		.2byte	(.L200-.L72)/2
 1330 03da DB05     		.2byte	(.L200-.L72)/2
 1331 03dc DB05     		.2byte	(.L200-.L72)/2
 1332 03de DB05     		.2byte	(.L200-.L72)/2
 1333 03e0 DB05     		.2byte	(.L200-.L72)/2
 1334 03e2 DB05     		.2byte	(.L200-.L72)/2
 1335 03e4 DB05     		.2byte	(.L200-.L72)/2
 1336 03e6 DB05     		.2byte	(.L200-.L72)/2
 1337 03e8 DB05     		.2byte	(.L200-.L72)/2
 1338 03ea DB05     		.2byte	(.L200-.L72)/2
 1339 03ec DB05     		.2byte	(.L200-.L72)/2
 1340 03ee DB05     		.2byte	(.L200-.L72)/2
 1341 03f0 DB05     		.2byte	(.L200-.L72)/2
 1342 03f2 DB05     		.2byte	(.L200-.L72)/2
 1343 03f4 DB05     		.2byte	(.L200-.L72)/2
 1344 03f6 DB05     		.2byte	(.L200-.L72)/2
 1345 03f8 DB05     		.2byte	(.L200-.L72)/2
 1346 03fa E002     		.2byte	(.L94-.L72)/2
 1347 03fc FC02     		.2byte	(.L93-.L72)/2
 1348 03fe 1803     		.2byte	(.L92-.L72)/2
 1349 0400 3403     		.2byte	(.L91-.L72)/2
 1350 0402 7903     		.2byte	(.L90-.L72)/2
 1351 0404 B603     		.2byte	(.L89-.L72)/2
 1352 0406 D103     		.2byte	(.L88-.L72)/2
 1353 0408 EF03     		.2byte	(.L87-.L72)/2
 1354 040a 0D04     		.2byte	(.L86-.L72)/2
 1355 040c 2B04     		.2byte	(.L85-.L72)/2
 1356 040e 4904     		.2byte	(.L84-.L72)/2
 1357 0410 6604     		.2byte	(.L83-.L72)/2
 1358 0412 8404     		.2byte	(.L82-.L72)/2
 1359 0414 DB05     		.2byte	(.L200-.L72)/2
 1360 0416 DB05     		.2byte	(.L200-.L72)/2
 1361 0418 DB05     		.2byte	(.L200-.L72)/2
 1362 041a DB05     		.2byte	(.L200-.L72)/2
 1363 041c A904     		.2byte	(.L81-.L72)/2
 1364 041e C704     		.2byte	(.L80-.L72)/2
 1365 0420 D604     		.2byte	(.L79-.L72)/2
 1366 0422 0A05     		.2byte	(.L78-.L72)/2
 1367 0424 DB05     		.2byte	(.L200-.L72)/2
 1368 0426 1D05     		.2byte	(.L77-.L72)/2
 1369 0428 3B05     		.2byte	(.L76-.L72)/2
 1370 042a DB05     		.2byte	(.L200-.L72)/2
 1371 042c DB05     		.2byte	(.L200-.L72)/2
 1372 042e DB05     		.2byte	(.L200-.L72)/2
 1373 0430 DB05     		.2byte	(.L200-.L72)/2
 1374 0432 DB05     		.2byte	(.L200-.L72)/2
 1375 0434 DB05     		.2byte	(.L200-.L72)/2
 1376 0436 DB05     		.2byte	(.L200-.L72)/2
 1377 0438 DB05     		.2byte	(.L200-.L72)/2
 1378 043a DB05     		.2byte	(.L200-.L72)/2
 1379 043c DB05     		.2byte	(.L200-.L72)/2
 1380 043e DB05     		.2byte	(.L200-.L72)/2
 1381 0440 DB05     		.2byte	(.L200-.L72)/2
 1382 0442 DB05     		.2byte	(.L200-.L72)/2
 1383 0444 DB05     		.2byte	(.L200-.L72)/2
 1384 0446 DB05     		.2byte	(.L200-.L72)/2
 1385 0448 DB05     		.2byte	(.L200-.L72)/2
 1386 044a DB05     		.2byte	(.L200-.L72)/2
 1387 044c DB05     		.2byte	(.L200-.L72)/2
 1388 044e DB05     		.2byte	(.L200-.L72)/2
 1389 0450 DB05     		.2byte	(.L200-.L72)/2
 1390 0452 5905     		.2byte	(.L75-.L72)/2
 1391 0454 DB05     		.2byte	(.L200-.L72)/2
 1392 0456 DB05     		.2byte	(.L200-.L72)/2
 1393 0458 6805     		.2byte	(.L74-.L72)/2
 1394 045a 7B05     		.2byte	(.L73-.L72)/2
 1395 045c 8E05     		.2byte	(.L71-.L72)/2
 1396              	.LVL117:
 1397              		.p2align 1
 1398              	.L213:
 683:boards/TMC5031_eval.c **** 
 1399              		.loc 1 683 1 view .LVU344
 1400 045e 1D2A     		cmp	r2, #29
 1401 0460 00F29385 		bhi	.L201
 1402 0464 DFE812F0 		tbh	[pc, r2, lsl #1]
 1403              	.LVL118:
 1404              	.L97:
 1405 0468 1E00     		.2byte	(.L122-.L97)/2
 1406 046a 2F00     		.2byte	(.L121-.L97)/2
 1407 046c 4000     		.2byte	(.L120-.L97)/2
 1408 046e 5700     		.2byte	(.L119-.L97)/2
 1409 0470 6A00     		.2byte	(.L118-.L97)/2
 1410 0472 8E00     		.2byte	(.L117-.L97)/2
 1411 0474 9F00     		.2byte	(.L116-.L97)/2
 1412 0476 BC00     		.2byte	(.L115-.L97)/2
 1413 0478 D800     		.2byte	(.L114-.L97)/2
 1414 047a 9105     		.2byte	(.L201-.L97)/2
 1415 047c E700     		.2byte	(.L113-.L97)/2
 1416 047e F900     		.2byte	(.L112-.L97)/2
 1417 0480 0901     		.2byte	(.L111-.L97)/2
 1418 0482 2701     		.2byte	(.L110-.L97)/2
 1419 0484 4501     		.2byte	(.L109-.L97)/2
 1420 0486 5601     		.2byte	(.L108-.L97)/2
 1421 0488 6701     		.2byte	(.L107-.L97)/2
 1422 048a 7801     		.2byte	(.L106-.L97)/2
 1423 048c 8901     		.2byte	(.L105-.L97)/2
 1424 048e 9A01     		.2byte	(.L104-.L97)/2
 1425 0490 AB01     		.2byte	(.L103-.L97)/2
 1426 0492 C001     		.2byte	(.L102-.L97)/2
 1427 0494 D101     		.2byte	(.L101-.L97)/2
 1428 0496 E201     		.2byte	(.L100-.L97)/2
 1429 0498 F301     		.2byte	(.L99-.L97)/2
 1430 049a 9105     		.2byte	(.L201-.L97)/2
 1431 049c 9105     		.2byte	(.L201-.L97)/2
 1432 049e 9105     		.2byte	(.L201-.L97)/2
 1433 04a0 0402     		.2byte	(.L98-.L97)/2
 1434 04a2 2002     		.2byte	(.L96-.L97)/2
 1435              		.p2align 1
 1436              	.L122:
 179:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_XTARGET(motor));
 1437              		.loc 1 179 3 is_stmt 1 view .LVU345
 1438 04a4 2021     		movs	r1, #32
 1439              	.LVL119:
 179:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_XTARGET(motor));
 1440              		.loc 1 179 3 is_stmt 0 view .LVU346
 1441 04a6 A940     		lsls	r1, r1, r5
 1442 04a8 41F00D01 		orr	r1, r1, #13
 1443 04ac C9B2     		uxtb	r1, r1
 179:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_XTARGET(motor));
 1444              		.loc 1 179 5 view .LVU347
 1445 04ae 20B9     		cbnz	r0, .L124
 180:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1446              		.loc 1 180 4 is_stmt 1 view .LVU348
 180:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1447              		.loc 1 180 11 is_stmt 0 view .LVU349
 1448 04b0 2846     		mov	r0, r5
 1449              	.LVL120:
 180:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1450              		.loc 1 180 11 view .LVU350
 1451 04b2 FFF7FEFF 		bl	tmc5031_readInt
 1452              	.LVL121:
 180:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1453              		.loc 1 180 10 view .LVU351
 1454 04b6 3060     		str	r0, [r6]
 1455 04b8 80E7     		b	.L67
 1456              	.LVL122:
 1457              	.L124:
 181:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_XTARGET(motor), *value);
 1458              		.loc 1 181 10 is_stmt 1 view .LVU352
 182:boards/TMC5031_eval.c **** 		}
 1459              		.loc 1 182 4 view .LVU353
 1460 04ba 3268     		ldr	r2, [r6]
 1461              	.LVL123:
 182:boards/TMC5031_eval.c **** 		}
 1462              		.loc 1 182 4 is_stmt 0 view .LVU354
 1463 04bc 2846     		mov	r0, r5
 1464              	.LVL124:
 182:boards/TMC5031_eval.c **** 		}
 1465              		.loc 1 182 4 view .LVU355
 1466 04be FFF7FEFF 		bl	tmc5031_writeInt
 1467              	.LVL125:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1468              		.loc 1 169 11 view .LVU356
 1469 04c2 0024     		movs	r4, #0
 1470 04c4 7AE7     		b	.L67
 1471              	.LVL126:
 1472              	.L121:
 187:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_XACTUAL(motor));
 1473              		.loc 1 187 3 is_stmt 1 view .LVU357
 1474 04c6 2021     		movs	r1, #32
 1475              	.LVL127:
 187:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_XACTUAL(motor));
 1476              		.loc 1 187 3 is_stmt 0 view .LVU358
 1477 04c8 A940     		lsls	r1, r1, r5
 1478 04ca 41F00101 		orr	r1, r1, #1
 1479 04ce C9B2     		uxtb	r1, r1
 187:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_XACTUAL(motor));
 1480              		.loc 1 187 5 view .LVU359
 1481 04d0 20B9     		cbnz	r0, .L125
 188:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1482              		.loc 1 188 4 is_stmt 1 view .LVU360
 188:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1483              		.loc 1 188 11 is_stmt 0 view .LVU361
 1484 04d2 2846     		mov	r0, r5
 1485              	.LVL128:
 188:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1486              		.loc 1 188 11 view .LVU362
 1487 04d4 FFF7FEFF 		bl	tmc5031_readInt
 1488              	.LVL129:
 188:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1489              		.loc 1 188 10 view .LVU363
 1490 04d8 3060     		str	r0, [r6]
 1491 04da 6FE7     		b	.L67
 1492              	.LVL130:
 1493              	.L125:
 189:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_XACTUAL(motor), *value);
 1494              		.loc 1 189 10 is_stmt 1 view .LVU364
 190:boards/TMC5031_eval.c **** 		}
 1495              		.loc 1 190 4 view .LVU365
 1496 04dc 3268     		ldr	r2, [r6]
 1497              	.LVL131:
 190:boards/TMC5031_eval.c **** 		}
 1498              		.loc 1 190 4 is_stmt 0 view .LVU366
 1499 04de 2846     		mov	r0, r5
 1500              	.LVL132:
 190:boards/TMC5031_eval.c **** 		}
 1501              		.loc 1 190 4 view .LVU367
 1502 04e0 FFF7FEFF 		bl	tmc5031_writeInt
 1503              	.LVL133:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1504              		.loc 1 169 11 view .LVU368
 1505 04e4 0024     		movs	r4, #0
 1506 04e6 69E7     		b	.L67
 1507              	.LVL134:
 1508              	.L120:
 195:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_VMAX(motor));
 1509              		.loc 1 195 3 is_stmt 1 view .LVU369
 1510 04e8 2021     		movs	r1, #32
 1511              	.LVL135:
 195:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_VMAX(motor));
 1512              		.loc 1 195 3 is_stmt 0 view .LVU370
 1513 04ea A940     		lsls	r1, r1, r5
 1514 04ec 41F00701 		orr	r1, r1, #7
 1515 04f0 C9B2     		uxtb	r1, r1
 195:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_VMAX(motor));
 1516              		.loc 1 195 5 view .LVU371
 1517 04f2 20B9     		cbnz	r0, .L126
 196:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1518              		.loc 1 196 4 is_stmt 1 view .LVU372
 196:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1519              		.loc 1 196 11 is_stmt 0 view .LVU373
 1520 04f4 2846     		mov	r0, r5
 1521              	.LVL136:
 196:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1522              		.loc 1 196 11 view .LVU374
 1523 04f6 FFF7FEFF 		bl	tmc5031_readInt
 1524              	.LVL137:
 196:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1525              		.loc 1 196 10 view .LVU375
 1526 04fa 3060     		str	r0, [r6]
 1527 04fc 5EE7     		b	.L67
 1528              	.LVL138:
 1529              	.L126:
 197:boards/TMC5031_eval.c **** 			vMaxModified[motor] = true;
 1530              		.loc 1 197 10 is_stmt 1 view .LVU376
 198:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1531              		.loc 1 198 4 view .LVU377
 198:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1532              		.loc 1 198 24 is_stmt 0 view .LVU378
 1533 04fe B54B     		ldr	r3, .L215
 1534 0500 0122     		movs	r2, #1
 1535              	.LVL139:
 198:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1536              		.loc 1 198 24 view .LVU379
 1537 0502 5A55     		strb	r2, [r3, r5]
 199:boards/TMC5031_eval.c **** 		}
 1538              		.loc 1 199 4 is_stmt 1 view .LVU380
 1539 0504 3268     		ldr	r2, [r6]
 1540 0506 002A     		cmp	r2, #0
 1541 0508 B8BF     		it	lt
 1542 050a 5242     		rsblt	r2, r2, #0
 1543 050c 2846     		mov	r0, r5
 1544              	.LVL140:
 199:boards/TMC5031_eval.c **** 		}
 1545              		.loc 1 199 4 is_stmt 0 view .LVU381
 1546 050e FFF7FEFF 		bl	tmc5031_writeInt
 1547              	.LVL141:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1548              		.loc 1 169 11 view .LVU382
 1549 0512 0024     		movs	r4, #0
 1550 0514 52E7     		b	.L67
 1551              	.LVL142:
 1552              	.L119:
 205:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VACTUAL(motor));
 1553              		.loc 1 205 3 is_stmt 1 view .LVU383
 205:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VACTUAL(motor));
 1554              		.loc 1 205 5 is_stmt 0 view .LVU384
 1555 0516 0028     		cmp	r0, #0
 1556 0518 40F03A85 		bne	.L202
 206:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1557              		.loc 1 206 4 is_stmt 1 view .LVU385
 206:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1558              		.loc 1 206 36 is_stmt 0 view .LVU386
 1559 051c 2021     		movs	r1, #32
 1560              	.LVL143:
 206:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1561              		.loc 1 206 36 view .LVU387
 1562 051e A940     		lsls	r1, r1, r5
 1563 0520 41F00201 		orr	r1, r1, #2
 206:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1564              		.loc 1 206 13 view .LVU388
 1565 0524 C9B2     		uxtb	r1, r1
 1566 0526 2846     		mov	r0, r5
 1567              	.LVL144:
 206:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1568              		.loc 1 206 13 view .LVU389
 1569 0528 FFF7FEFF 		bl	tmc5031_readInt
 1570              	.LVL145:
 207:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1571              		.loc 1 207 4 is_stmt 1 view .LVU390
 207:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1572              		.loc 1 207 13 is_stmt 0 view .LVU391
 1573 052c 10F40003 		ands	r3, r0, #8388608
 1574 0530 18BF     		it	ne
 1575 0532 4FF07F43 		movne	r3, #-16777216
 1576 0536 1843     		orrs	r0, r0, r3
 207:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1577              		.loc 1 207 11 view .LVU392
 1578 0538 3060     		str	r0, [r6]
 1579 053a 3FE7     		b	.L67
 1580              	.LVL146:
 1581              	.L118:
 214:boards/TMC5031_eval.c **** 			*value=vMax[motor];
 1582              		.loc 1 214 3 is_stmt 1 view .LVU393
 1583 053c A64B     		ldr	r3, .L215+4
 1584 053e 8A00     		lsls	r2, r1, #2
 1585              	.LVL147:
 215:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1586              		.loc 1 215 15 is_stmt 0 view .LVU394
 1587 0540 1344     		add	r3, r3, r2
 214:boards/TMC5031_eval.c **** 			*value=vMax[motor];
 1588              		.loc 1 214 5 view .LVU395
 1589 0542 18B9     		cbnz	r0, .L128
 215:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1590              		.loc 1 215 4 is_stmt 1 view .LVU396
 215:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1591              		.loc 1 215 10 is_stmt 0 view .LVU397
 1592 0544 D3F8BC32 		ldr	r3, [r3, #700]
 1593 0548 3360     		str	r3, [r6]
 1594 054a 37E7     		b	.L67
 1595              	.L128:
 216:boards/TMC5031_eval.c **** 			vMax[motor] = abs(*value);
 1596              		.loc 1 216 10 is_stmt 1 view .LVU398
 217:boards/TMC5031_eval.c **** 			if(tmc5031_readInt(motor, TMC5031_RAMPMODE(motor)) == TMC5031_MODE_POSITION)
 1597              		.loc 1 217 4 view .LVU399
 217:boards/TMC5031_eval.c **** 			if(tmc5031_readInt(motor, TMC5031_RAMPMODE(motor)) == TMC5031_MODE_POSITION)
 1598              		.loc 1 217 18 is_stmt 0 view .LVU400
 1599 054c 3268     		ldr	r2, [r6]
 218:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1600              		.loc 1 218 30 view .LVU401
 1601 054e 2027     		movs	r7, #32
 217:boards/TMC5031_eval.c **** 			if(tmc5031_readInt(motor, TMC5031_RAMPMODE(motor)) == TMC5031_MODE_POSITION)
 1602              		.loc 1 217 18 view .LVU402
 1603 0550 002A     		cmp	r2, #0
 218:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1604              		.loc 1 218 30 view .LVU403
 1605 0552 07FA01F7 		lsl	r7, r7, r1
 217:boards/TMC5031_eval.c **** 			if(tmc5031_readInt(motor, TMC5031_RAMPMODE(motor)) == TMC5031_MODE_POSITION)
 1606              		.loc 1 217 18 view .LVU404
 1607 0556 B8BF     		it	lt
 1608 0558 5242     		rsblt	r2, r2, #0
 218:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1609              		.loc 1 218 7 view .LVU405
 1610 055a F9B2     		uxtb	r1, r7
 1611              	.LVL148:
 218:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1612              		.loc 1 218 7 view .LVU406
 1613 055c 2846     		mov	r0, r5
 1614              	.LVL149:
 217:boards/TMC5031_eval.c **** 			if(tmc5031_readInt(motor, TMC5031_RAMPMODE(motor)) == TMC5031_MODE_POSITION)
 1615              		.loc 1 217 16 view .LVU407
 1616 055e C3F8BC22 		str	r2, [r3, #700]
 218:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1617              		.loc 1 218 4 is_stmt 1 view .LVU408
 218:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1618              		.loc 1 218 7 is_stmt 0 view .LVU409
 1619 0562 FFF7FEFF 		bl	tmc5031_readInt
 1620              	.LVL150:
 218:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_VMAX(motor), abs(*value));
 1621              		.loc 1 218 6 view .LVU410
 1622 0566 0446     		mov	r4, r0
 1623 0568 08B1     		cbz	r0, .L129
 1624              	.L169:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1625              		.loc 1 169 11 view .LVU411
 1626 056a 0024     		movs	r4, #0
 1627 056c 26E7     		b	.L67
 1628              	.L129:
 219:boards/TMC5031_eval.c **** 		}
 1629              		.loc 1 219 5 is_stmt 1 view .LVU412
 1630 056e 3268     		ldr	r2, [r6]
 219:boards/TMC5031_eval.c **** 		}
 1631              		.loc 1 219 29 is_stmt 0 view .LVU413
 1632 0570 47F00701 		orr	r1, r7, #7
 219:boards/TMC5031_eval.c **** 		}
 1633              		.loc 1 219 5 view .LVU414
 1634 0574 002A     		cmp	r2, #0
 1635 0576 B8BF     		it	lt
 1636 0578 5242     		rsblt	r2, r2, #0
 1637 057a C9B2     		uxtb	r1, r1
 1638 057c 2846     		mov	r0, r5
 1639 057e FFF7FEFF 		bl	tmc5031_writeInt
 1640              	.LVL151:
 1641 0582 1BE7     		b	.L67
 1642              	.LVL152:
 1643              	.L117:
 224:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_AMAX(motor));
 1644              		.loc 1 224 3 is_stmt 1 view .LVU415
 1645 0584 2021     		movs	r1, #32
 1646              	.LVL153:
 224:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_AMAX(motor));
 1647              		.loc 1 224 3 is_stmt 0 view .LVU416
 1648 0586 A940     		lsls	r1, r1, r5
 1649 0588 41F00601 		orr	r1, r1, #6
 1650 058c C9B2     		uxtb	r1, r1
 224:boards/TMC5031_eval.c **** 			*value=tmc5031_readInt(motor, TMC5031_AMAX(motor));
 1651              		.loc 1 224 5 view .LVU417
 1652 058e 20B9     		cbnz	r0, .L130
 225:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1653              		.loc 1 225 4 is_stmt 1 view .LVU418
 225:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1654              		.loc 1 225 11 is_stmt 0 view .LVU419
 1655 0590 2846     		mov	r0, r5
 1656              	.LVL154:
 225:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1657              		.loc 1 225 11 view .LVU420
 1658 0592 FFF7FEFF 		bl	tmc5031_readInt
 1659              	.LVL155:
 225:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1660              		.loc 1 225 10 view .LVU421
 1661 0596 3060     		str	r0, [r6]
 1662 0598 10E7     		b	.L67
 1663              	.LVL156:
 1664              	.L130:
 226:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_AMAX(motor), *value);
 1665              		.loc 1 226 10 is_stmt 1 view .LVU422
 227:boards/TMC5031_eval.c **** 		}
 1666              		.loc 1 227 4 view .LVU423
 1667 059a 3268     		ldr	r2, [r6]
 1668              	.LVL157:
 227:boards/TMC5031_eval.c **** 		}
 1669              		.loc 1 227 4 is_stmt 0 view .LVU424
 1670 059c 2846     		mov	r0, r5
 1671              	.LVL158:
 227:boards/TMC5031_eval.c **** 		}
 1672              		.loc 1 227 4 view .LVU425
 1673 059e FFF7FEFF 		bl	tmc5031_writeInt
 1674              	.LVL159:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1675              		.loc 1 169 11 view .LVU426
 1676 05a2 0024     		movs	r4, #0
 1677 05a4 0AE7     		b	.L67
 1678              	.LVL160:
 1679              	.L116:
 232:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IRUN_MASK, TMC5031_IRUN_SH
 1680              		.loc 1 232 3 is_stmt 1 view .LVU427
 1681 05a6 2027     		movs	r7, #32
 1682 05a8 8F40     		lsls	r7, r7, r1
 1683 05aa 47F01007 		orr	r7, r7, #16
 1684 05ae FFB2     		uxtb	r7, r7
 233:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1685              		.loc 1 233 13 is_stmt 0 view .LVU428
 1686 05b0 3946     		mov	r1, r7
 1687              	.LVL161:
 233:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1688              		.loc 1 233 13 view .LVU429
 1689 05b2 2846     		mov	r0, r5
 1690              	.LVL162:
 232:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IRUN_MASK, TMC5031_IRUN_SH
 1691              		.loc 1 232 5 view .LVU430
 1692 05b4 2CB9     		cbnz	r4, .L131
 233:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1693              		.loc 1 233 4 is_stmt 1 view .LVU431
 233:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1694              		.loc 1 233 13 is_stmt 0 view .LVU432
 1695 05b6 FFF7FEFF 		bl	tmc5031_readInt
 1696              	.LVL163:
 233:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1697              		.loc 1 233 13 view .LVU433
 1698 05ba C0F30420 		ubfx	r0, r0, #8, #5
 233:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1699              		.loc 1 233 11 view .LVU434
 1700 05be 3060     		str	r0, [r6]
 1701 05c0 FCE6     		b	.L67
 1702              	.LVL164:
 1703              	.L131:
 234:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IRUN_MASK, TMC5031_IRUN_SHIFT, *v
 1704              		.loc 1 234 10 is_stmt 1 view .LVU435
 235:boards/TMC5031_eval.c **** 		}
 1705              		.loc 1 235 4 view .LVU436
 1706 05c2 FFF7FEFF 		bl	tmc5031_readInt
 1707              	.LVL165:
 235:boards/TMC5031_eval.c **** 		}
 1708              		.loc 1 235 4 is_stmt 0 view .LVU437
 1709 05c6 3368     		ldr	r3, [r6]
 1710 05c8 1B02     		lsls	r3, r3, #8
 1711 05ca 03F4F853 		and	r3, r3, #7936
 1712 05ce 20F4F852 		bic	r2, r0, #7936
 1713 05d2 1A43     		orrs	r2, r2, r3
 1714 05d4 3946     		mov	r1, r7
 1715 05d6 2846     		mov	r0, r5
 1716 05d8 FFF7FEFF 		bl	tmc5031_writeInt
 1717              	.LVL166:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1718              		.loc 1 169 11 view .LVU438
 1719 05dc 0024     		movs	r4, #0
 1720 05de EDE6     		b	.L67
 1721              	.LVL167:
 1722              	.L115:
 240:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IHOLD_MASK, TMC5031_IHOLD_
 1723              		.loc 1 240 3 is_stmt 1 view .LVU439
 1724 05e0 2027     		movs	r7, #32
 1725 05e2 8F40     		lsls	r7, r7, r1
 1726 05e4 47F01007 		orr	r7, r7, #16
 1727 05e8 FFB2     		uxtb	r7, r7
 241:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1728              		.loc 1 241 13 is_stmt 0 view .LVU440
 1729 05ea 3946     		mov	r1, r7
 1730              	.LVL168:
 241:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1731              		.loc 1 241 13 view .LVU441
 1732 05ec 2846     		mov	r0, r5
 1733              	.LVL169:
 240:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IHOLD_MASK, TMC5031_IHOLD_
 1734              		.loc 1 240 5 view .LVU442
 1735 05ee 2CB9     		cbnz	r4, .L132
 241:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1736              		.loc 1 241 4 is_stmt 1 view .LVU443
 241:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1737              		.loc 1 241 13 is_stmt 0 view .LVU444
 1738 05f0 FFF7FEFF 		bl	tmc5031_readInt
 1739              	.LVL170:
 241:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1740              		.loc 1 241 13 view .LVU445
 1741 05f4 00F01F00 		and	r0, r0, #31
 241:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1742              		.loc 1 241 11 view .LVU446
 1743 05f8 3060     		str	r0, [r6]
 1744 05fa DFE6     		b	.L67
 1745              	.LVL171:
 1746              	.L132:
 242:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_IHOLD_IRUN(motor), TMC5031_IHOLD_MASK, TMC5031_IHOLD_SHIFT, 
 1747              		.loc 1 242 10 is_stmt 1 view .LVU447
 243:boards/TMC5031_eval.c **** 		}
 1748              		.loc 1 243 4 view .LVU448
 1749 05fc FFF7FEFF 		bl	tmc5031_readInt
 1750              	.LVL172:
 243:boards/TMC5031_eval.c **** 		}
 1751              		.loc 1 243 4 is_stmt 0 view .LVU449
 1752 0600 3268     		ldr	r2, [r6]
 1753 0602 20F01F00 		bic	r0, r0, #31
 1754 0606 02F01F02 		and	r2, r2, #31
 1755 060a 0243     		orrs	r2, r2, r0
 1756 060c 3946     		mov	r1, r7
 1757 060e 2846     		mov	r0, r5
 1758 0610 FFF7FEFF 		bl	tmc5031_writeInt
 1759              	.LVL173:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1760              		.loc 1 169 11 view .LVU450
 1761 0614 0024     		movs	r4, #0
 1762 0616 D1E6     		b	.L67
 1763              	.LVL174:
 1764              	.L114:
 248:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_RAMPSTAT(motor), TMC5031_POSITION_REACHED_MASK, TMC50
 1765              		.loc 1 248 3 is_stmt 1 view .LVU451
 248:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_RAMPSTAT(motor), TMC5031_POSITION_REACHED_MASK, TMC50
 1766              		.loc 1 248 5 is_stmt 0 view .LVU452
 1767 0618 0028     		cmp	r0, #0
 1768 061a 40F0BC84 		bne	.L204
 249:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1769              		.loc 1 249 4 is_stmt 1 view .LVU453
 249:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1770              		.loc 1 249 13 is_stmt 0 view .LVU454
 1771 061e 2021     		movs	r1, #32
 1772              	.LVL175:
 249:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1773              		.loc 1 249 13 view .LVU455
 1774 0620 A940     		lsls	r1, r1, r5
 1775 0622 41F01501 		orr	r1, r1, #21
 1776 0626 C9B2     		uxtb	r1, r1
 1777 0628 2846     		mov	r0, r5
 1778              	.LVL176:
 249:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1779              		.loc 1 249 13 view .LVU456
 1780 062a FFF7FEFF 		bl	tmc5031_readInt
 1781              	.LVL177:
 249:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1782              		.loc 1 249 13 view .LVU457
 1783 062e C0F34020 		ubfx	r0, r0, #9, #1
 249:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1784              		.loc 1 249 11 view .LVU458
 1785 0632 3060     		str	r0, [r6]
 1786 0634 C2E6     		b	.L67
 1787              	.LVL178:
 1788              	.L113:
 256:boards/TMC5031_eval.c **** 			*value = !TMC5031_FIELD_READ(motor, TMC5031_RAMPSTAT(motor), TMC5031_STATUS_STOP_R_MASK, TMC5031
 1789              		.loc 1 256 3 is_stmt 1 view .LVU459
 256:boards/TMC5031_eval.c **** 			*value = !TMC5031_FIELD_READ(motor, TMC5031_RAMPSTAT(motor), TMC5031_STATUS_STOP_R_MASK, TMC5031
 1790              		.loc 1 256 5 is_stmt 0 view .LVU460
 1791 0636 0028     		cmp	r0, #0
 1792 0638 40F0B084 		bne	.L205
 257:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1793              		.loc 1 257 4 is_stmt 1 view .LVU461
 257:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1794              		.loc 1 257 14 is_stmt 0 view .LVU462
 1795 063c 2021     		movs	r1, #32
 1796              	.LVL179:
 257:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1797              		.loc 1 257 14 view .LVU463
 1798 063e A940     		lsls	r1, r1, r5
 1799 0640 41F01501 		orr	r1, r1, #21
 1800 0644 C9B2     		uxtb	r1, r1
 1801 0646 2846     		mov	r0, r5
 1802              	.LVL180:
 257:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1803              		.loc 1 257 14 view .LVU464
 1804 0648 FFF7FEFF 		bl	tmc5031_readInt
 1805              	.LVL181:
 257:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1806              		.loc 1 257 13 view .LVU465
 1807 064c 10F0020F 		tst	r0, #2
 1808 0650 0CBF     		ite	eq
 1809 0652 0123     		moveq	r3, #1
 1810 0654 0023     		movne	r3, #0
 257:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1811              		.loc 1 257 11 view .LVU466
 1812 0656 3360     		str	r3, [r6]
 1813 0658 B0E6     		b	.L67
 1814              	.LVL182:
 1815              	.L112:
 264:boards/TMC5031_eval.c **** 			*value = !TMC5031_FIELD_READ(motor, TMC5031_RAMPSTAT(motor), TMC5031_STATUS_STOP_L_MASK, TMC5031
 1816              		.loc 1 264 3 is_stmt 1 view .LVU467
 264:boards/TMC5031_eval.c **** 			*value = !TMC5031_FIELD_READ(motor, TMC5031_RAMPSTAT(motor), TMC5031_STATUS_STOP_L_MASK, TMC5031
 1817              		.loc 1 264 5 is_stmt 0 view .LVU468
 1818 065a 0028     		cmp	r0, #0
 1819 065c 40F0A184 		bne	.L206
 265:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1820              		.loc 1 265 4 is_stmt 1 view .LVU469
 265:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1821              		.loc 1 265 14 is_stmt 0 view .LVU470
 1822 0660 2021     		movs	r1, #32
 1823              	.LVL183:
 265:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1824              		.loc 1 265 14 view .LVU471
 1825 0662 A940     		lsls	r1, r1, r5
 1826 0664 41F01501 		orr	r1, r1, #21
 1827 0668 C9B2     		uxtb	r1, r1
 1828 066a 2846     		mov	r0, r5
 1829              	.LVL184:
 265:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1830              		.loc 1 265 14 view .LVU472
 1831 066c FFF7FEFF 		bl	tmc5031_readInt
 1832              	.LVL185:
 265:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1833              		.loc 1 265 11 view .LVU473
 1834 0670 C043     		mvns	r0, r0
 1835 0672 00F00100 		and	r0, r0, #1
 1836 0676 3060     		str	r0, [r6]
 1837 0678 A0E6     		b	.L67
 1838              	.LVL186:
 1839              	.L111:
 272:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_SWMODE(motor), TMC5031_STOP_R_ENABLE_MASK, TMC5031_ST
 1840              		.loc 1 272 3 is_stmt 1 view .LVU474
 1841 067a 2027     		movs	r7, #32
 1842 067c 8F40     		lsls	r7, r7, r1
 1843 067e 47F01407 		orr	r7, r7, #20
 1844 0682 FFB2     		uxtb	r7, r7
 273:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1845              		.loc 1 273 13 is_stmt 0 view .LVU475
 1846 0684 3946     		mov	r1, r7
 1847              	.LVL187:
 273:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1848              		.loc 1 273 13 view .LVU476
 1849 0686 2846     		mov	r0, r5
 1850              	.LVL188:
 272:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_SWMODE(motor), TMC5031_STOP_R_ENABLE_MASK, TMC5031_ST
 1851              		.loc 1 272 5 view .LVU477
 1852 0688 2CB9     		cbnz	r4, .L133
 273:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1853              		.loc 1 273 4 is_stmt 1 view .LVU478
 273:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1854              		.loc 1 273 13 is_stmt 0 view .LVU479
 1855 068a FFF7FEFF 		bl	tmc5031_readInt
 1856              	.LVL189:
 273:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1857              		.loc 1 273 13 view .LVU480
 1858 068e C0F34000 		ubfx	r0, r0, #1, #1
 273:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1859              		.loc 1 273 11 view .LVU481
 1860 0692 3060     		str	r0, [r6]
 1861 0694 92E6     		b	.L67
 1862              	.LVL190:
 1863              	.L133:
 274:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_SWMODE(motor), TMC5031_STOP_R_ENABLE_MASK, TMC5031_STOP_R_EN
 1864              		.loc 1 274 10 is_stmt 1 view .LVU482
 275:boards/TMC5031_eval.c **** 		}
 1865              		.loc 1 275 4 view .LVU483
 1866 0696 FFF7FEFF 		bl	tmc5031_readInt
 1867              	.LVL191:
 275:boards/TMC5031_eval.c **** 		}
 1868              		.loc 1 275 4 is_stmt 0 view .LVU484
 1869 069a 3368     		ldr	r3, [r6]
 1870 069c 002B     		cmp	r3, #0
 1871 069e 20F00200 		bic	r0, r0, #2
 1872 06a2 0CBF     		ite	eq
 1873 06a4 0222     		moveq	r2, #2
 1874 06a6 0022     		movne	r2, #0
 1875 06a8 0243     		orrs	r2, r2, r0
 1876 06aa 3946     		mov	r1, r7
 1877 06ac 2846     		mov	r0, r5
 1878 06ae FFF7FEFF 		bl	tmc5031_writeInt
 1879              	.LVL192:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1880              		.loc 1 169 11 view .LVU485
 1881 06b2 0024     		movs	r4, #0
 1882 06b4 82E6     		b	.L67
 1883              	.LVL193:
 1884              	.L110:
 280:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_SWMODE(motor), TMC5031_STOP_L_ENABLE_MASK, TMC5031_ST
 1885              		.loc 1 280 3 is_stmt 1 view .LVU486
 1886 06b6 2027     		movs	r7, #32
 1887 06b8 8F40     		lsls	r7, r7, r1
 1888 06ba 47F01407 		orr	r7, r7, #20
 1889 06be FFB2     		uxtb	r7, r7
 281:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1890              		.loc 1 281 13 is_stmt 0 view .LVU487
 1891 06c0 3946     		mov	r1, r7
 1892              	.LVL194:
 281:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1893              		.loc 1 281 13 view .LVU488
 1894 06c2 2846     		mov	r0, r5
 1895              	.LVL195:
 280:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_SWMODE(motor), TMC5031_STOP_L_ENABLE_MASK, TMC5031_ST
 1896              		.loc 1 280 5 view .LVU489
 1897 06c4 2CB9     		cbnz	r4, .L135
 281:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1898              		.loc 1 281 4 is_stmt 1 view .LVU490
 281:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1899              		.loc 1 281 13 is_stmt 0 view .LVU491
 1900 06c6 FFF7FEFF 		bl	tmc5031_readInt
 1901              	.LVL196:
 281:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1902              		.loc 1 281 13 view .LVU492
 1903 06ca 00F00100 		and	r0, r0, #1
 281:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1904              		.loc 1 281 11 view .LVU493
 1905 06ce 3060     		str	r0, [r6]
 1906 06d0 74E6     		b	.L67
 1907              	.LVL197:
 1908              	.L135:
 282:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_SWMODE(motor), TMC5031_STOP_L_ENABLE_MASK, TMC5031_STOP_L_EN
 1909              		.loc 1 282 10 is_stmt 1 view .LVU494
 283:boards/TMC5031_eval.c **** 		}
 1910              		.loc 1 283 4 view .LVU495
 1911 06d2 FFF7FEFF 		bl	tmc5031_readInt
 1912              	.LVL198:
 283:boards/TMC5031_eval.c **** 		}
 1913              		.loc 1 283 4 is_stmt 0 view .LVU496
 1914 06d6 3268     		ldr	r2, [r6]
 1915 06d8 20F00100 		bic	r0, r0, #1
 1916 06dc 002A     		cmp	r2, #0
 1917 06de 14BF     		ite	ne
 1918 06e0 0246     		movne	r2, r0
 1919 06e2 40F00102 		orreq	r2, r0, #1
 1920 06e6 3946     		mov	r1, r7
 1921 06e8 2846     		mov	r0, r5
 1922 06ea FFF7FEFF 		bl	tmc5031_writeInt
 1923              	.LVL199:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1924              		.loc 1 169 11 view .LVU497
 1925 06ee 0024     		movs	r4, #0
 1926 06f0 64E6     		b	.L67
 1927              	.LVL200:
 1928              	.L109:
 288:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_SWMODE(motor));
 1929              		.loc 1 288 3 is_stmt 1 view .LVU498
 1930 06f2 2021     		movs	r1, #32
 1931              	.LVL201:
 288:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_SWMODE(motor));
 1932              		.loc 1 288 3 is_stmt 0 view .LVU499
 1933 06f4 A940     		lsls	r1, r1, r5
 1934 06f6 41F01401 		orr	r1, r1, #20
 1935 06fa C9B2     		uxtb	r1, r1
 288:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_SWMODE(motor));
 1936              		.loc 1 288 5 view .LVU500
 1937 06fc 20B9     		cbnz	r0, .L136
 289:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1938              		.loc 1 289 4 is_stmt 1 view .LVU501
 289:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1939              		.loc 1 289 13 is_stmt 0 view .LVU502
 1940 06fe 2846     		mov	r0, r5
 1941              	.LVL202:
 289:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1942              		.loc 1 289 13 view .LVU503
 1943 0700 FFF7FEFF 		bl	tmc5031_readInt
 1944              	.LVL203:
 289:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1945              		.loc 1 289 11 view .LVU504
 1946 0704 3060     		str	r0, [r6]
 1947 0706 59E6     		b	.L67
 1948              	.LVL204:
 1949              	.L136:
 290:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_SWMODE(motor), *value);
 1950              		.loc 1 290 10 is_stmt 1 view .LVU505
 291:boards/TMC5031_eval.c **** 		}
 1951              		.loc 1 291 4 view .LVU506
 1952 0708 3268     		ldr	r2, [r6]
 1953              	.LVL205:
 291:boards/TMC5031_eval.c **** 		}
 1954              		.loc 1 291 4 is_stmt 0 view .LVU507
 1955 070a 2846     		mov	r0, r5
 1956              	.LVL206:
 291:boards/TMC5031_eval.c **** 		}
 1957              		.loc 1 291 4 view .LVU508
 1958 070c FFF7FEFF 		bl	tmc5031_writeInt
 1959              	.LVL207:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1960              		.loc 1 169 11 view .LVU509
 1961 0710 0024     		movs	r4, #0
 1962 0712 53E6     		b	.L67
 1963              	.LVL208:
 1964              	.L108:
 296:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_A1(motor));
 1965              		.loc 1 296 3 is_stmt 1 view .LVU510
 1966 0714 2021     		movs	r1, #32
 1967              	.LVL209:
 296:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_A1(motor));
 1968              		.loc 1 296 3 is_stmt 0 view .LVU511
 1969 0716 A940     		lsls	r1, r1, r5
 1970 0718 41F00401 		orr	r1, r1, #4
 1971 071c C9B2     		uxtb	r1, r1
 296:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_A1(motor));
 1972              		.loc 1 296 5 view .LVU512
 1973 071e 20B9     		cbnz	r0, .L137
 297:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1974              		.loc 1 297 4 is_stmt 1 view .LVU513
 297:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1975              		.loc 1 297 13 is_stmt 0 view .LVU514
 1976 0720 2846     		mov	r0, r5
 1977              	.LVL210:
 297:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1978              		.loc 1 297 13 view .LVU515
 1979 0722 FFF7FEFF 		bl	tmc5031_readInt
 1980              	.LVL211:
 297:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 1981              		.loc 1 297 11 view .LVU516
 1982 0726 3060     		str	r0, [r6]
 1983 0728 48E6     		b	.L67
 1984              	.LVL212:
 1985              	.L137:
 298:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_A1(motor), *value);
 1986              		.loc 1 298 10 is_stmt 1 view .LVU517
 299:boards/TMC5031_eval.c **** 		}
 1987              		.loc 1 299 4 view .LVU518
 1988 072a 3268     		ldr	r2, [r6]
 1989              	.LVL213:
 299:boards/TMC5031_eval.c **** 		}
 1990              		.loc 1 299 4 is_stmt 0 view .LVU519
 1991 072c 2846     		mov	r0, r5
 1992              	.LVL214:
 299:boards/TMC5031_eval.c **** 		}
 1993              		.loc 1 299 4 view .LVU520
 1994 072e FFF7FEFF 		bl	tmc5031_writeInt
 1995              	.LVL215:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 1996              		.loc 1 169 11 view .LVU521
 1997 0732 0024     		movs	r4, #0
 1998 0734 42E6     		b	.L67
 1999              	.LVL216:
 2000              	.L107:
 304:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_V1(motor));
 2001              		.loc 1 304 3 is_stmt 1 view .LVU522
 2002 0736 2021     		movs	r1, #32
 2003              	.LVL217:
 304:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_V1(motor));
 2004              		.loc 1 304 3 is_stmt 0 view .LVU523
 2005 0738 A940     		lsls	r1, r1, r5
 2006 073a 41F00501 		orr	r1, r1, #5
 2007 073e C9B2     		uxtb	r1, r1
 304:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_V1(motor));
 2008              		.loc 1 304 5 view .LVU524
 2009 0740 20B9     		cbnz	r0, .L138
 305:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2010              		.loc 1 305 4 is_stmt 1 view .LVU525
 305:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2011              		.loc 1 305 13 is_stmt 0 view .LVU526
 2012 0742 2846     		mov	r0, r5
 2013              	.LVL218:
 305:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2014              		.loc 1 305 13 view .LVU527
 2015 0744 FFF7FEFF 		bl	tmc5031_readInt
 2016              	.LVL219:
 305:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2017              		.loc 1 305 11 view .LVU528
 2018 0748 3060     		str	r0, [r6]
 2019 074a 37E6     		b	.L67
 2020              	.LVL220:
 2021              	.L138:
 306:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_V1(motor), *value);
 2022              		.loc 1 306 10 is_stmt 1 view .LVU529
 307:boards/TMC5031_eval.c **** 		}
 2023              		.loc 1 307 4 view .LVU530
 2024 074c 3268     		ldr	r2, [r6]
 2025              	.LVL221:
 307:boards/TMC5031_eval.c **** 		}
 2026              		.loc 1 307 4 is_stmt 0 view .LVU531
 2027 074e 2846     		mov	r0, r5
 2028              	.LVL222:
 307:boards/TMC5031_eval.c **** 		}
 2029              		.loc 1 307 4 view .LVU532
 2030 0750 FFF7FEFF 		bl	tmc5031_writeInt
 2031              	.LVL223:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2032              		.loc 1 169 11 view .LVU533
 2033 0754 0024     		movs	r4, #0
 2034 0756 31E6     		b	.L67
 2035              	.LVL224:
 2036              	.L106:
 312:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_DMAX(motor));
 2037              		.loc 1 312 3 is_stmt 1 view .LVU534
 2038 0758 2021     		movs	r1, #32
 2039              	.LVL225:
 312:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_DMAX(motor));
 2040              		.loc 1 312 3 is_stmt 0 view .LVU535
 2041 075a A940     		lsls	r1, r1, r5
 2042 075c 41F00801 		orr	r1, r1, #8
 2043 0760 C9B2     		uxtb	r1, r1
 312:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_DMAX(motor));
 2044              		.loc 1 312 5 view .LVU536
 2045 0762 20B9     		cbnz	r0, .L139
 313:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2046              		.loc 1 313 4 is_stmt 1 view .LVU537
 313:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2047              		.loc 1 313 13 is_stmt 0 view .LVU538
 2048 0764 2846     		mov	r0, r5
 2049              	.LVL226:
 313:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2050              		.loc 1 313 13 view .LVU539
 2051 0766 FFF7FEFF 		bl	tmc5031_readInt
 2052              	.LVL227:
 313:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2053              		.loc 1 313 11 view .LVU540
 2054 076a 3060     		str	r0, [r6]
 2055 076c 26E6     		b	.L67
 2056              	.LVL228:
 2057              	.L139:
 314:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_DMAX(motor), *value);
 2058              		.loc 1 314 10 is_stmt 1 view .LVU541
 315:boards/TMC5031_eval.c **** 		}
 2059              		.loc 1 315 4 view .LVU542
 2060 076e 3268     		ldr	r2, [r6]
 2061              	.LVL229:
 315:boards/TMC5031_eval.c **** 		}
 2062              		.loc 1 315 4 is_stmt 0 view .LVU543
 2063 0770 2846     		mov	r0, r5
 2064              	.LVL230:
 315:boards/TMC5031_eval.c **** 		}
 2065              		.loc 1 315 4 view .LVU544
 2066 0772 FFF7FEFF 		bl	tmc5031_writeInt
 2067              	.LVL231:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2068              		.loc 1 169 11 view .LVU545
 2069 0776 0024     		movs	r4, #0
 2070 0778 20E6     		b	.L67
 2071              	.LVL232:
 2072              	.L105:
 320:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_D1(motor));
 2073              		.loc 1 320 3 is_stmt 1 view .LVU546
 2074 077a 2021     		movs	r1, #32
 2075              	.LVL233:
 320:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_D1(motor));
 2076              		.loc 1 320 3 is_stmt 0 view .LVU547
 2077 077c A940     		lsls	r1, r1, r5
 2078 077e 41F00A01 		orr	r1, r1, #10
 2079 0782 C9B2     		uxtb	r1, r1
 320:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_D1(motor));
 2080              		.loc 1 320 5 view .LVU548
 2081 0784 20B9     		cbnz	r0, .L140
 321:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2082              		.loc 1 321 4 is_stmt 1 view .LVU549
 321:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2083              		.loc 1 321 13 is_stmt 0 view .LVU550
 2084 0786 2846     		mov	r0, r5
 2085              	.LVL234:
 321:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2086              		.loc 1 321 13 view .LVU551
 2087 0788 FFF7FEFF 		bl	tmc5031_readInt
 2088              	.LVL235:
 321:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2089              		.loc 1 321 11 view .LVU552
 2090 078c 3060     		str	r0, [r6]
 2091 078e 15E6     		b	.L67
 2092              	.LVL236:
 2093              	.L140:
 322:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_D1(motor), *value);
 2094              		.loc 1 322 10 is_stmt 1 view .LVU553
 323:boards/TMC5031_eval.c **** 		}
 2095              		.loc 1 323 4 view .LVU554
 2096 0790 3268     		ldr	r2, [r6]
 2097              	.LVL237:
 323:boards/TMC5031_eval.c **** 		}
 2098              		.loc 1 323 4 is_stmt 0 view .LVU555
 2099 0792 2846     		mov	r0, r5
 2100              	.LVL238:
 323:boards/TMC5031_eval.c **** 		}
 2101              		.loc 1 323 4 view .LVU556
 2102 0794 FFF7FEFF 		bl	tmc5031_writeInt
 2103              	.LVL239:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2104              		.loc 1 169 11 view .LVU557
 2105 0798 0024     		movs	r4, #0
 2106 079a 0FE6     		b	.L67
 2107              	.LVL240:
 2108              	.L104:
 328:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VSTART(motor));
 2109              		.loc 1 328 3 is_stmt 1 view .LVU558
 2110 079c 2021     		movs	r1, #32
 2111              	.LVL241:
 328:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VSTART(motor));
 2112              		.loc 1 328 3 is_stmt 0 view .LVU559
 2113 079e A940     		lsls	r1, r1, r5
 2114 07a0 41F00301 		orr	r1, r1, #3
 2115 07a4 C9B2     		uxtb	r1, r1
 328:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VSTART(motor));
 2116              		.loc 1 328 5 view .LVU560
 2117 07a6 20B9     		cbnz	r0, .L141
 329:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2118              		.loc 1 329 4 is_stmt 1 view .LVU561
 329:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2119              		.loc 1 329 13 is_stmt 0 view .LVU562
 2120 07a8 2846     		mov	r0, r5
 2121              	.LVL242:
 329:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2122              		.loc 1 329 13 view .LVU563
 2123 07aa FFF7FEFF 		bl	tmc5031_readInt
 2124              	.LVL243:
 329:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2125              		.loc 1 329 11 view .LVU564
 2126 07ae 3060     		str	r0, [r6]
 2127 07b0 04E6     		b	.L67
 2128              	.LVL244:
 2129              	.L141:
 330:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VSTART(motor), *value);
 2130              		.loc 1 330 10 is_stmt 1 view .LVU565
 331:boards/TMC5031_eval.c **** 		}
 2131              		.loc 1 331 4 view .LVU566
 2132 07b2 3268     		ldr	r2, [r6]
 2133              	.LVL245:
 331:boards/TMC5031_eval.c **** 		}
 2134              		.loc 1 331 4 is_stmt 0 view .LVU567
 2135 07b4 2846     		mov	r0, r5
 2136              	.LVL246:
 331:boards/TMC5031_eval.c **** 		}
 2137              		.loc 1 331 4 view .LVU568
 2138 07b6 FFF7FEFF 		bl	tmc5031_writeInt
 2139              	.LVL247:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2140              		.loc 1 169 11 view .LVU569
 2141 07ba 0024     		movs	r4, #0
 2142 07bc FEE5     		b	.L67
 2143              	.LVL248:
 2144              	.L103:
 336:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VSTOP(motor));
 2145              		.loc 1 336 3 is_stmt 1 view .LVU570
 2146 07be 2021     		movs	r1, #32
 2147              	.LVL249:
 336:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VSTOP(motor));
 2148              		.loc 1 336 3 is_stmt 0 view .LVU571
 2149 07c0 A940     		lsls	r1, r1, r5
 2150 07c2 41F00B01 		orr	r1, r1, #11
 2151 07c6 C9B2     		uxtb	r1, r1
 336:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VSTOP(motor));
 2152              		.loc 1 336 5 view .LVU572
 2153 07c8 40B9     		cbnz	r0, .L142
 337:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2154              		.loc 1 337 4 is_stmt 1 view .LVU573
 337:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2155              		.loc 1 337 13 is_stmt 0 view .LVU574
 2156 07ca 2846     		mov	r0, r5
 2157              	.LVL250:
 337:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2158              		.loc 1 337 13 view .LVU575
 2159 07cc FFF7FEFF 		bl	tmc5031_readInt
 2160              	.LVL251:
 337:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2161              		.loc 1 337 11 view .LVU576
 2162 07d0 3060     		str	r0, [r6]
 2163 07d2 F3E5     		b	.L67
 2164              	.L216:
 2165              		.align	2
 2166              	.L215:
 2167 07d4 00000000 		.word	.LANCHOR1
 2168 07d8 00000000 		.word	.LANCHOR0
 2169              	.LVL252:
 2170              	.L142:
 338:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VSTOP(motor), *value);
 2171              		.loc 1 338 10 is_stmt 1 view .LVU577
 339:boards/TMC5031_eval.c **** 		}
 2172              		.loc 1 339 4 view .LVU578
 2173 07dc 3268     		ldr	r2, [r6]
 2174              	.LVL253:
 339:boards/TMC5031_eval.c **** 		}
 2175              		.loc 1 339 4 is_stmt 0 view .LVU579
 2176 07de 2846     		mov	r0, r5
 2177              	.LVL254:
 339:boards/TMC5031_eval.c **** 		}
 2178              		.loc 1 339 4 view .LVU580
 2179 07e0 FFF7FEFF 		bl	tmc5031_writeInt
 2180              	.LVL255:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2181              		.loc 1 169 11 view .LVU581
 2182 07e4 0024     		movs	r4, #0
 2183 07e6 E9E5     		b	.L67
 2184              	.LVL256:
 2185              	.L102:
 344:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_TZEROWAIT(motor));
 2186              		.loc 1 344 3 is_stmt 1 view .LVU582
 2187 07e8 2021     		movs	r1, #32
 2188              	.LVL257:
 344:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_TZEROWAIT(motor));
 2189              		.loc 1 344 3 is_stmt 0 view .LVU583
 2190 07ea A940     		lsls	r1, r1, r5
 2191 07ec 41F00C01 		orr	r1, r1, #12
 2192 07f0 C9B2     		uxtb	r1, r1
 344:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_TZEROWAIT(motor));
 2193              		.loc 1 344 5 view .LVU584
 2194 07f2 20B9     		cbnz	r0, .L143
 345:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2195              		.loc 1 345 4 is_stmt 1 view .LVU585
 345:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2196              		.loc 1 345 13 is_stmt 0 view .LVU586
 2197 07f4 2846     		mov	r0, r5
 2198              	.LVL258:
 345:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2199              		.loc 1 345 13 view .LVU587
 2200 07f6 FFF7FEFF 		bl	tmc5031_readInt
 2201              	.LVL259:
 345:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2202              		.loc 1 345 11 view .LVU588
 2203 07fa 3060     		str	r0, [r6]
 2204 07fc DEE5     		b	.L67
 2205              	.LVL260:
 2206              	.L143:
 346:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_TZEROWAIT(motor), *value);
 2207              		.loc 1 346 10 is_stmt 1 view .LVU589
 347:boards/TMC5031_eval.c **** 		}
 2208              		.loc 1 347 4 view .LVU590
 2209 07fe 3268     		ldr	r2, [r6]
 2210              	.LVL261:
 347:boards/TMC5031_eval.c **** 		}
 2211              		.loc 1 347 4 is_stmt 0 view .LVU591
 2212 0800 2846     		mov	r0, r5
 2213              	.LVL262:
 347:boards/TMC5031_eval.c **** 		}
 2214              		.loc 1 347 4 view .LVU592
 2215 0802 FFF7FEFF 		bl	tmc5031_writeInt
 2216              	.LVL263:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2217              		.loc 1 169 11 view .LVU593
 2218 0806 0024     		movs	r4, #0
 2219 0808 D8E5     		b	.L67
 2220              	.LVL264:
 2221              	.L101:
 352:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VCOOLTHRS(motor));
 2222              		.loc 1 352 3 is_stmt 1 view .LVU594
 2223 080a 2021     		movs	r1, #32
 2224              	.LVL265:
 352:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VCOOLTHRS(motor));
 2225              		.loc 1 352 3 is_stmt 0 view .LVU595
 2226 080c A940     		lsls	r1, r1, r5
 2227 080e 41F01101 		orr	r1, r1, #17
 2228 0812 C9B2     		uxtb	r1, r1
 352:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VCOOLTHRS(motor));
 2229              		.loc 1 352 5 view .LVU596
 2230 0814 20B9     		cbnz	r0, .L144
 353:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2231              		.loc 1 353 4 is_stmt 1 view .LVU597
 353:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2232              		.loc 1 353 13 is_stmt 0 view .LVU598
 2233 0816 2846     		mov	r0, r5
 2234              	.LVL266:
 353:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2235              		.loc 1 353 13 view .LVU599
 2236 0818 FFF7FEFF 		bl	tmc5031_readInt
 2237              	.LVL267:
 353:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2238              		.loc 1 353 11 view .LVU600
 2239 081c 3060     		str	r0, [r6]
 2240 081e CDE5     		b	.L67
 2241              	.LVL268:
 2242              	.L144:
 354:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VCOOLTHRS(motor), *value);
 2243              		.loc 1 354 10 is_stmt 1 view .LVU601
 355:boards/TMC5031_eval.c **** 		}
 2244              		.loc 1 355 4 view .LVU602
 2245 0820 3268     		ldr	r2, [r6]
 2246              	.LVL269:
 355:boards/TMC5031_eval.c **** 		}
 2247              		.loc 1 355 4 is_stmt 0 view .LVU603
 2248 0822 2846     		mov	r0, r5
 2249              	.LVL270:
 355:boards/TMC5031_eval.c **** 		}
 2250              		.loc 1 355 4 view .LVU604
 2251 0824 FFF7FEFF 		bl	tmc5031_writeInt
 2252              	.LVL271:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2253              		.loc 1 169 11 view .LVU605
 2254 0828 0024     		movs	r4, #0
 2255 082a C7E5     		b	.L67
 2256              	.LVL272:
 2257              	.L100:
 360:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VHIGH(motor));
 2258              		.loc 1 360 3 is_stmt 1 view .LVU606
 2259 082c 2021     		movs	r1, #32
 2260              	.LVL273:
 360:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VHIGH(motor));
 2261              		.loc 1 360 3 is_stmt 0 view .LVU607
 2262 082e A940     		lsls	r1, r1, r5
 2263 0830 41F01201 		orr	r1, r1, #18
 2264 0834 C9B2     		uxtb	r1, r1
 360:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VHIGH(motor));
 2265              		.loc 1 360 5 view .LVU608
 2266 0836 20B9     		cbnz	r0, .L145
 361:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2267              		.loc 1 361 4 is_stmt 1 view .LVU609
 361:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2268              		.loc 1 361 13 is_stmt 0 view .LVU610
 2269 0838 2846     		mov	r0, r5
 2270              	.LVL274:
 361:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2271              		.loc 1 361 13 view .LVU611
 2272 083a FFF7FEFF 		bl	tmc5031_readInt
 2273              	.LVL275:
 361:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2274              		.loc 1 361 11 view .LVU612
 2275 083e 3060     		str	r0, [r6]
 2276 0840 BCE5     		b	.L67
 2277              	.LVL276:
 2278              	.L145:
 362:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VHIGH(motor), *value);
 2279              		.loc 1 362 10 is_stmt 1 view .LVU613
 363:boards/TMC5031_eval.c **** 		}
 2280              		.loc 1 363 4 view .LVU614
 2281 0842 3268     		ldr	r2, [r6]
 2282              	.LVL277:
 363:boards/TMC5031_eval.c **** 		}
 2283              		.loc 1 363 4 is_stmt 0 view .LVU615
 2284 0844 2846     		mov	r0, r5
 2285              	.LVL278:
 363:boards/TMC5031_eval.c **** 		}
 2286              		.loc 1 363 4 view .LVU616
 2287 0846 FFF7FEFF 		bl	tmc5031_writeInt
 2288              	.LVL279:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2289              		.loc 1 169 11 view .LVU617
 2290 084a 0024     		movs	r4, #0
 2291 084c B6E5     		b	.L67
 2292              	.LVL280:
 2293              	.L99:
 368:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VDCMIN(motor));
 2294              		.loc 1 368 3 is_stmt 1 view .LVU618
 2295 084e 2021     		movs	r1, #32
 2296              	.LVL281:
 368:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VDCMIN(motor));
 2297              		.loc 1 368 3 is_stmt 0 view .LVU619
 2298 0850 A940     		lsls	r1, r1, r5
 2299 0852 41F01301 		orr	r1, r1, #19
 2300 0856 C9B2     		uxtb	r1, r1
 368:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VDCMIN(motor));
 2301              		.loc 1 368 5 view .LVU620
 2302 0858 20B9     		cbnz	r0, .L146
 369:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2303              		.loc 1 369 4 is_stmt 1 view .LVU621
 369:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2304              		.loc 1 369 13 is_stmt 0 view .LVU622
 2305 085a 2846     		mov	r0, r5
 2306              	.LVL282:
 369:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2307              		.loc 1 369 13 view .LVU623
 2308 085c FFF7FEFF 		bl	tmc5031_readInt
 2309              	.LVL283:
 369:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2310              		.loc 1 369 11 view .LVU624
 2311 0860 3060     		str	r0, [r6]
 2312 0862 ABE5     		b	.L67
 2313              	.LVL284:
 2314              	.L146:
 370:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VDCMIN(motor), *value);
 2315              		.loc 1 370 10 is_stmt 1 view .LVU625
 371:boards/TMC5031_eval.c **** 		}
 2316              		.loc 1 371 4 view .LVU626
 2317 0864 3268     		ldr	r2, [r6]
 2318              	.LVL285:
 371:boards/TMC5031_eval.c **** 		}
 2319              		.loc 1 371 4 is_stmt 0 view .LVU627
 2320 0866 2846     		mov	r0, r5
 2321              	.LVL286:
 371:boards/TMC5031_eval.c **** 		}
 2322              		.loc 1 371 4 view .LVU628
 2323 0868 FFF7FEFF 		bl	tmc5031_writeInt
 2324              	.LVL287:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2325              		.loc 1 169 11 view .LVU629
 2326 086c 0024     		movs	r4, #0
 2327 086e A5E5     		b	.L67
 2328              	.LVL288:
 2329              	.L98:
 376:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_VHIGHFS_MASK, TMC5031_VHIGHF
 2330              		.loc 1 376 3 is_stmt 1 view .LVU630
 2331 0870 0F01     		lsls	r7, r1, #4
 2332 0872 47F06C07 		orr	r7, r7, #108
 2333 0876 FFB2     		uxtb	r7, r7
 377:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2334              		.loc 1 377 13 is_stmt 0 view .LVU631
 2335 0878 3946     		mov	r1, r7
 2336              	.LVL289:
 377:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2337              		.loc 1 377 13 view .LVU632
 2338 087a 2846     		mov	r0, r5
 2339              	.LVL290:
 376:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_VHIGHFS_MASK, TMC5031_VHIGHF
 2340              		.loc 1 376 5 view .LVU633
 2341 087c 2CB9     		cbnz	r4, .L147
 377:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2342              		.loc 1 377 4 is_stmt 1 view .LVU634
 377:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2343              		.loc 1 377 13 is_stmt 0 view .LVU635
 2344 087e FFF7FEFF 		bl	tmc5031_readInt
 2345              	.LVL291:
 377:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2346              		.loc 1 377 13 view .LVU636
 2347 0882 C0F38040 		ubfx	r0, r0, #18, #1
 377:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2348              		.loc 1 377 11 view .LVU637
 2349 0886 3060     		str	r0, [r6]
 2350 0888 98E5     		b	.L67
 2351              	.LVL292:
 2352              	.L147:
 378:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_VHIGHFS_MASK, TMC5031_VHIGHFS_SHIFT
 2353              		.loc 1 378 10 is_stmt 1 view .LVU638
 379:boards/TMC5031_eval.c **** 		}
 2354              		.loc 1 379 4 view .LVU639
 2355 088a FFF7FEFF 		bl	tmc5031_readInt
 2356              	.LVL293:
 379:boards/TMC5031_eval.c **** 		}
 2357              		.loc 1 379 4 is_stmt 0 view .LVU640
 2358 088e 3368     		ldr	r3, [r6]
 2359 0890 9B04     		lsls	r3, r3, #18
 2360 0892 03F48023 		and	r3, r3, #262144
 2361 0896 20F48022 		bic	r2, r0, #262144
 2362 089a 1A43     		orrs	r2, r2, r3
 2363 089c 3946     		mov	r1, r7
 2364 089e 2846     		mov	r0, r5
 2365 08a0 FFF7FEFF 		bl	tmc5031_writeInt
 2366              	.LVL294:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2367              		.loc 1 169 11 view .LVU641
 2368 08a4 0024     		movs	r4, #0
 2369 08a6 89E5     		b	.L67
 2370              	.LVL295:
 2371              	.L96:
 383:boards/TMC5031_eval.c **** 			*value = TMC5031_config->shadowRegister[TMC5031_VACTUAL(motor)];
 2372              		.loc 1 383 3 is_stmt 1 view .LVU642
 383:boards/TMC5031_eval.c **** 			*value = TMC5031_config->shadowRegister[TMC5031_VACTUAL(motor)];
 2373              		.loc 1 383 5 is_stmt 0 view .LVU643
 2374 08a8 0028     		cmp	r0, #0
 2375 08aa 40F07D83 		bne	.L208
 384:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2376              		.loc 1 384 4 is_stmt 1 view .LVU644
 384:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2377              		.loc 1 384 27 is_stmt 0 view .LVU645
 2378 08ae BE4B     		ldr	r3, .L217
 384:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2379              		.loc 1 384 44 view .LVU646
 2380 08b0 2021     		movs	r1, #32
 2381              	.LVL296:
 384:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2382              		.loc 1 384 43 view .LVU647
 2383 08b2 1B68     		ldr	r3, [r3]
 384:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2384              		.loc 1 384 44 view .LVU648
 2385 08b4 01FA05F5 		lsl	r5, r1, r5
 2386 08b8 45F00205 		orr	r5, r5, #2
 384:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2387              		.loc 1 384 43 view .LVU649
 2388 08bc 03EB8505 		add	r5, r3, r5, lsl #2
 2389 08c0 6B68     		ldr	r3, [r5, #4]
 384:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2390              		.loc 1 384 11 view .LVU650
 2391 08c2 3360     		str	r3, [r6]
 2392 08c4 7AE5     		b	.L67
 2393              	.LVL297:
 2394              	.L95:
 391:boards/TMC5031_eval.c **** 			*value = 256 >> TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_MRES_MASK, TMC5031_MR
 2395              		.loc 1 391 3 is_stmt 1 view .LVU651
 391:boards/TMC5031_eval.c **** 			*value = 256 >> TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_MRES_MASK, TMC5031_MR
 2396              		.loc 1 391 5 is_stmt 0 view .LVU652
 2397 08c6 74B9     		cbnz	r4, .L148
 392:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2398              		.loc 1 392 4 is_stmt 1 view .LVU653
 392:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2399              		.loc 1 392 20 is_stmt 0 view .LVU654
 2400 08c8 2901     		lsls	r1, r5, #4
 2401              	.LVL298:
 392:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2402              		.loc 1 392 20 view .LVU655
 2403 08ca 41F06C01 		orr	r1, r1, #108
 2404 08ce 01F0FC01 		and	r1, r1, #252
 2405 08d2 2846     		mov	r0, r5
 2406              	.LVL299:
 392:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2407              		.loc 1 392 20 view .LVU656
 2408 08d4 FFF7FEFF 		bl	tmc5031_readInt
 2409              	.LVL300:
 2410 08d8 C0F30363 		ubfx	r3, r0, #24, #4
 392:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2411              		.loc 1 392 17 view .LVU657
 2412 08dc 4FF48070 		mov	r0, #256
 2413 08e0 1841     		asrs	r0, r0, r3
 392:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2414              		.loc 1 392 11 view .LVU658
 2415 08e2 3060     		str	r0, [r6]
 2416 08e4 6AE5     		b	.L67
 2417              	.LVL301:
 2418              	.L148:
 393:boards/TMC5031_eval.c **** 			switch(*value)
 2419              		.loc 1 393 10 is_stmt 1 view .LVU659
 394:boards/TMC5031_eval.c **** 			{
 2420              		.loc 1 394 4 view .LVU660
 394:boards/TMC5031_eval.c **** 			{
 2421              		.loc 1 394 11 is_stmt 0 view .LVU661
 2422 08e6 3368     		ldr	r3, [r6]
 2423 08e8 102B     		cmp	r3, #16
 2424 08ea 48D0     		beq	.L149
 2425 08ec 0ADC     		bgt	.L150
 2426 08ee 013B     		subs	r3, r3, #1
 2427 08f0 072B     		cmp	r3, #7
 2428 08f2 0ED8     		bhi	.L151
 2429 08f4 072B     		cmp	r3, #7
 2430 08f6 0CD8     		bhi	.L151
 2431 08f8 DFE803F0 		tbb	[pc, r3]
 2432              	.L153:
 2433 08fc 15       		.byte	(.L156-.L153)/2
 2434 08fd 3B       		.byte	(.L155-.L153)/2
 2435 08fe 0B       		.byte	(.L151-.L153)/2
 2436 08ff 3D       		.byte	(.L154-.L153)/2
 2437 0900 0B       		.byte	(.L151-.L153)/2
 2438 0901 0B       		.byte	(.L151-.L153)/2
 2439 0902 0B       		.byte	(.L151-.L153)/2
 2440 0903 3F       		.byte	(.L152-.L153)/2
 2441              		.p2align 1
 2442              	.L150:
 2443 0904 802B     		cmp	r3, #128
 2444 0906 40D0     		beq	.L157
 2445 0908 08DC     		bgt	.L158
 2446 090a 202B     		cmp	r3, #32
 2447 090c 39D0     		beq	.L159
 2448 090e 402B     		cmp	r3, #64
 2449 0910 39D0     		beq	.L160
 2450              	.L151:
 405:boards/TMC5031_eval.c **** 			}
 2451              		.loc 1 405 15 is_stmt 1 view .LVU662
 405:boards/TMC5031_eval.c **** 			}
 2452              		.loc 1 405 22 is_stmt 0 view .LVU663
 2453 0912 4FF0FF33 		mov	r3, #-1
 2454 0916 3360     		str	r3, [r6]
 405:boards/TMC5031_eval.c **** 			}
 2455              		.loc 1 405 29 is_stmt 1 view .LVU664
 408:boards/TMC5031_eval.c **** 			{
 2456              		.loc 1 408 4 view .LVU665
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2457              		.loc 1 169 11 is_stmt 0 view .LVU666
 2458 0918 0024     		movs	r4, #0
 2459 091a 4FE5     		b	.L67
 2460              	.L158:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2461              		.loc 1 169 11 view .LVU667
 2462 091c B3F5807F 		cmp	r3, #256
 2463 0920 F7D1     		bne	.L151
 404:boards/TMC5031_eval.c **** 			default:   *value = -1;  break;
 2464              		.loc 1 404 15 is_stmt 1 view .LVU668
 404:boards/TMC5031_eval.c **** 			default:   *value = -1;  break;
 2465              		.loc 1 404 22 is_stmt 0 view .LVU669
 2466 0922 0023     		movs	r3, #0
 2467 0924 00E0     		b	.L214
 2468              	.L156:
 396:boards/TMC5031_eval.c **** 			case 2:    *value = 7;   break;
 2469              		.loc 1 396 15 is_stmt 1 view .LVU670
 396:boards/TMC5031_eval.c **** 			case 2:    *value = 7;   break;
 2470              		.loc 1 396 22 is_stmt 0 view .LVU671
 2471 0926 0823     		movs	r3, #8
 2472              	.L214:
 410:boards/TMC5031_eval.c **** 				tempValue &= ~(0x0F<<24);
 2473              		.loc 1 410 40 view .LVU672
 2474 0928 2C01     		lsls	r4, r5, #4
 2475 092a 44F06C04 		orr	r4, r4, #108
 410:boards/TMC5031_eval.c **** 				tempValue &= ~(0x0F<<24);
 2476              		.loc 1 410 17 view .LVU673
 2477 092e E4B2     		uxtb	r4, r4
 2478 0930 2146     		mov	r1, r4
 2479              	.LVL302:
 404:boards/TMC5031_eval.c **** 			default:   *value = -1;  break;
 2480              		.loc 1 404 22 view .LVU674
 2481 0932 3360     		str	r3, [r6]
 404:boards/TMC5031_eval.c **** 			default:   *value = -1;  break;
 2482              		.loc 1 404 29 is_stmt 1 view .LVU675
 408:boards/TMC5031_eval.c **** 			{
 2483              		.loc 1 408 4 view .LVU676
 410:boards/TMC5031_eval.c **** 				tempValue &= ~(0x0F<<24);
 2484              		.loc 1 410 5 view .LVU677
 410:boards/TMC5031_eval.c **** 				tempValue &= ~(0x0F<<24);
 2485              		.loc 1 410 17 is_stmt 0 view .LVU678
 2486 0934 2846     		mov	r0, r5
 2487              	.LVL303:
 410:boards/TMC5031_eval.c **** 				tempValue &= ~(0x0F<<24);
 2488              		.loc 1 410 17 view .LVU679
 2489 0936 FFF7FEFF 		bl	tmc5031_readInt
 2490              	.LVL304:
 411:boards/TMC5031_eval.c **** 				tempValue |= (*value & 0xF) << 24;
 2491              		.loc 1 411 5 is_stmt 1 view .LVU680
 412:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_CHOPCONF(motor),tempValue);
 2492              		.loc 1 412 33 is_stmt 0 view .LVU681
 2493 093a 3368     		ldr	r3, [r6]
 2494 093c 1B06     		lsls	r3, r3, #24
 2495 093e 03F07063 		and	r3, r3, #251658240
 411:boards/TMC5031_eval.c **** 				tempValue |= (*value & 0xF) << 24;
 2496              		.loc 1 411 15 view .LVU682
 2497 0942 20F07062 		bic	r2, r0, #251658240
 2498              	.LVL305:
 412:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_CHOPCONF(motor),tempValue);
 2499              		.loc 1 412 5 is_stmt 1 view .LVU683
 413:boards/TMC5031_eval.c **** 				TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_MRES_MASK, TMC5031_MRES_SHIFT, *va
 2500              		.loc 1 413 5 view .LVU684
 2501 0946 1A43     		orrs	r2, r2, r3
 2502              	.LVL306:
 413:boards/TMC5031_eval.c **** 				TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_MRES_MASK, TMC5031_MRES_SHIFT, *va
 2503              		.loc 1 413 5 is_stmt 0 view .LVU685
 2504 0948 2146     		mov	r1, r4
 2505 094a 2846     		mov	r0, r5
 2506 094c FFF7FEFF 		bl	tmc5031_writeInt
 2507              	.LVL307:
 414:boards/TMC5031_eval.c **** 			}
 2508              		.loc 1 414 5 is_stmt 1 view .LVU686
 2509 0950 2146     		mov	r1, r4
 2510 0952 2846     		mov	r0, r5
 2511 0954 FFF7FEFF 		bl	tmc5031_readInt
 2512              	.LVL308:
 2513 0958 3368     		ldr	r3, [r6]
 2514 095a 1B06     		lsls	r3, r3, #24
 2515 095c 03F07063 		and	r3, r3, #251658240
 2516 0960 20F07062 		bic	r2, r0, #251658240
 2517 0964 2146     		mov	r1, r4
 2518 0966 1A43     		orrs	r2, r2, r3
 2519 0968 2846     		mov	r0, r5
 2520 096a FFF7FEFF 		bl	tmc5031_writeInt
 2521              	.LVL309:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2522              		.loc 1 169 11 is_stmt 0 view .LVU687
 2523 096e 0024     		movs	r4, #0
 2524 0970 24E5     		b	.L67
 2525              	.LVL310:
 2526              	.L155:
 397:boards/TMC5031_eval.c **** 			case 4:    *value = 6;   break;
 2527              		.loc 1 397 15 is_stmt 1 view .LVU688
 397:boards/TMC5031_eval.c **** 			case 4:    *value = 6;   break;
 2528              		.loc 1 397 22 is_stmt 0 view .LVU689
 2529 0972 0723     		movs	r3, #7
 2530 0974 D8E7     		b	.L214
 2531              	.L154:
 398:boards/TMC5031_eval.c **** 			case 8:    *value = 5;   break;
 2532              		.loc 1 398 15 is_stmt 1 view .LVU690
 398:boards/TMC5031_eval.c **** 			case 8:    *value = 5;   break;
 2533              		.loc 1 398 22 is_stmt 0 view .LVU691
 2534 0976 0623     		movs	r3, #6
 2535 0978 D6E7     		b	.L214
 2536              	.L152:
 399:boards/TMC5031_eval.c **** 			case 16:   *value = 4;   break;
 2537              		.loc 1 399 15 is_stmt 1 view .LVU692
 399:boards/TMC5031_eval.c **** 			case 16:   *value = 4;   break;
 2538              		.loc 1 399 22 is_stmt 0 view .LVU693
 2539 097a 0523     		movs	r3, #5
 2540 097c D4E7     		b	.L214
 2541              	.L149:
 400:boards/TMC5031_eval.c **** 			case 32:   *value = 3;   break;
 2542              		.loc 1 400 15 is_stmt 1 view .LVU694
 400:boards/TMC5031_eval.c **** 			case 32:   *value = 3;   break;
 2543              		.loc 1 400 22 is_stmt 0 view .LVU695
 2544 097e 0423     		movs	r3, #4
 2545 0980 D2E7     		b	.L214
 2546              	.L159:
 401:boards/TMC5031_eval.c **** 			case 64:   *value = 2;   break;
 2547              		.loc 1 401 15 is_stmt 1 view .LVU696
 401:boards/TMC5031_eval.c **** 			case 64:   *value = 2;   break;
 2548              		.loc 1 401 22 is_stmt 0 view .LVU697
 2549 0982 0323     		movs	r3, #3
 2550 0984 D0E7     		b	.L214
 2551              	.L160:
 402:boards/TMC5031_eval.c **** 			case 128:  *value = 1;   break;
 2552              		.loc 1 402 15 is_stmt 1 view .LVU698
 402:boards/TMC5031_eval.c **** 			case 128:  *value = 1;   break;
 2553              		.loc 1 402 22 is_stmt 0 view .LVU699
 2554 0986 0223     		movs	r3, #2
 2555 0988 CEE7     		b	.L214
 2556              	.L157:
 403:boards/TMC5031_eval.c **** 			case 256:  *value = 0;   break;
 2557              		.loc 1 403 15 is_stmt 1 view .LVU700
 403:boards/TMC5031_eval.c **** 			case 256:  *value = 0;   break;
 2558              		.loc 1 403 22 is_stmt 0 view .LVU701
 2559 098a 0123     		movs	r3, #1
 2560 098c CCE7     		b	.L214
 2561              	.L94:
 421:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_TBL_MASK, TMC5031_TBL_SHIFT)
 2562              		.loc 1 421 3 is_stmt 1 view .LVU702
 2563 098e 2F01     		lsls	r7, r5, #4
 2564 0990 47F06C07 		orr	r7, r7, #108
 2565 0994 FFB2     		uxtb	r7, r7
 422:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2566              		.loc 1 422 13 is_stmt 0 view .LVU703
 2567 0996 3946     		mov	r1, r7
 2568              	.LVL311:
 422:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2569              		.loc 1 422 13 view .LVU704
 2570 0998 2846     		mov	r0, r5
 2571              	.LVL312:
 421:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_TBL_MASK, TMC5031_TBL_SHIFT)
 2572              		.loc 1 421 5 view .LVU705
 2573 099a 2CB9     		cbnz	r4, .L163
 422:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2574              		.loc 1 422 4 is_stmt 1 view .LVU706
 422:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2575              		.loc 1 422 13 is_stmt 0 view .LVU707
 2576 099c FFF7FEFF 		bl	tmc5031_readInt
 2577              	.LVL313:
 2578 09a0 C0F3C130 		ubfx	r0, r0, #15, #2
 422:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2579              		.loc 1 422 11 view .LVU708
 2580 09a4 3060     		str	r0, [r6]
 2581 09a6 09E5     		b	.L67
 2582              	.L163:
 423:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_TBL_MASK, TMC5031_TBL_SHIFT, *value
 2583              		.loc 1 423 10 is_stmt 1 view .LVU709
 424:boards/TMC5031_eval.c **** 		}
 2584              		.loc 1 424 4 view .LVU710
 2585 09a8 FFF7FEFF 		bl	tmc5031_readInt
 2586              	.LVL314:
 2587 09ac 3368     		ldr	r3, [r6]
 2588 09ae DB03     		lsls	r3, r3, #15
 2589 09b0 03F4C033 		and	r3, r3, #98304
 2590 09b4 20F4C032 		bic	r2, r0, #98304
 2591 09b8 1A43     		orrs	r2, r2, r3
 2592 09ba 3946     		mov	r1, r7
 2593 09bc 2846     		mov	r0, r5
 2594 09be FFF7FEFF 		bl	tmc5031_writeInt
 2595              	.LVL315:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2596              		.loc 1 169 11 is_stmt 0 view .LVU711
 2597 09c2 0024     		movs	r4, #0
 2598 09c4 FAE4     		b	.L67
 2599              	.LVL316:
 2600              	.L93:
 429:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_CHM_MASK, TMC5031_CHM_SHIFT)
 2601              		.loc 1 429 3 is_stmt 1 view .LVU712
 2602 09c6 2F01     		lsls	r7, r5, #4
 2603 09c8 47F06C07 		orr	r7, r7, #108
 2604 09cc FFB2     		uxtb	r7, r7
 430:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2605              		.loc 1 430 13 is_stmt 0 view .LVU713
 2606 09ce 3946     		mov	r1, r7
 2607              	.LVL317:
 430:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2608              		.loc 1 430 13 view .LVU714
 2609 09d0 2846     		mov	r0, r5
 2610              	.LVL318:
 429:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_CHM_MASK, TMC5031_CHM_SHIFT)
 2611              		.loc 1 429 5 view .LVU715
 2612 09d2 2CB9     		cbnz	r4, .L164
 430:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2613              		.loc 1 430 4 is_stmt 1 view .LVU716
 430:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2614              		.loc 1 430 13 is_stmt 0 view .LVU717
 2615 09d4 FFF7FEFF 		bl	tmc5031_readInt
 2616              	.LVL319:
 2617 09d8 C0F38030 		ubfx	r0, r0, #14, #1
 430:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2618              		.loc 1 430 11 view .LVU718
 2619 09dc 3060     		str	r0, [r6]
 2620 09de EDE4     		b	.L67
 2621              	.L164:
 431:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_CHM_MASK, TMC5031_CHM_SHIFT, *value
 2622              		.loc 1 431 10 is_stmt 1 view .LVU719
 432:boards/TMC5031_eval.c **** 		}
 2623              		.loc 1 432 4 view .LVU720
 2624 09e0 FFF7FEFF 		bl	tmc5031_readInt
 2625              	.LVL320:
 2626 09e4 3368     		ldr	r3, [r6]
 2627 09e6 9B03     		lsls	r3, r3, #14
 2628 09e8 03F48043 		and	r3, r3, #16384
 2629 09ec 20F48042 		bic	r2, r0, #16384
 2630 09f0 1A43     		orrs	r2, r2, r3
 2631 09f2 3946     		mov	r1, r7
 2632 09f4 2846     		mov	r0, r5
 2633 09f6 FFF7FEFF 		bl	tmc5031_writeInt
 2634              	.LVL321:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2635              		.loc 1 169 11 is_stmt 0 view .LVU721
 2636 09fa 0024     		movs	r4, #0
 2637 09fc DEE4     		b	.L67
 2638              	.LVL322:
 2639              	.L92:
 437:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_DISFDCC_MASK, TMC5031_DISFDC
 2640              		.loc 1 437 3 is_stmt 1 view .LVU722
 2641 09fe 2F01     		lsls	r7, r5, #4
 2642 0a00 47F06C07 		orr	r7, r7, #108
 2643 0a04 FFB2     		uxtb	r7, r7
 438:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2644              		.loc 1 438 13 is_stmt 0 view .LVU723
 2645 0a06 3946     		mov	r1, r7
 2646              	.LVL323:
 438:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2647              		.loc 1 438 13 view .LVU724
 2648 0a08 2846     		mov	r0, r5
 2649              	.LVL324:
 437:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_DISFDCC_MASK, TMC5031_DISFDC
 2650              		.loc 1 437 5 view .LVU725
 2651 0a0a 2CB9     		cbnz	r4, .L165
 438:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2652              		.loc 1 438 4 is_stmt 1 view .LVU726
 438:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2653              		.loc 1 438 13 is_stmt 0 view .LVU727
 2654 0a0c FFF7FEFF 		bl	tmc5031_readInt
 2655              	.LVL325:
 2656 0a10 C0F30030 		ubfx	r0, r0, #12, #1
 438:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2657              		.loc 1 438 11 view .LVU728
 2658 0a14 3060     		str	r0, [r6]
 2659 0a16 D1E4     		b	.L67
 2660              	.L165:
 439:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_DISFDCC_MASK, TMC5031_DISFDCC_SHIFT
 2661              		.loc 1 439 10 is_stmt 1 view .LVU729
 440:boards/TMC5031_eval.c **** 		}
 2662              		.loc 1 440 4 view .LVU730
 2663 0a18 FFF7FEFF 		bl	tmc5031_readInt
 2664              	.LVL326:
 2665 0a1c 3368     		ldr	r3, [r6]
 2666 0a1e 1B03     		lsls	r3, r3, #12
 2667 0a20 03F48053 		and	r3, r3, #4096
 2668 0a24 20F48052 		bic	r2, r0, #4096
 2669 0a28 1A43     		orrs	r2, r2, r3
 2670 0a2a 3946     		mov	r1, r7
 2671 0a2c 2846     		mov	r0, r5
 2672 0a2e FFF7FEFF 		bl	tmc5031_writeInt
 2673              	.LVL327:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2674              		.loc 1 169 11 is_stmt 0 view .LVU731
 2675 0a32 0024     		movs	r4, #0
 2676 0a34 C2E4     		b	.L67
 2677              	.LVL328:
 2678              	.L91:
 445:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2679              		.loc 1 445 3 is_stmt 1 view .LVU732
 445:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2680              		.loc 1 445 38 is_stmt 0 view .LVU733
 2681 0a36 2F01     		lsls	r7, r5, #4
 2682 0a38 47F06C07 		orr	r7, r7, #108
 445:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2683              		.loc 1 445 15 view .LVU734
 2684 0a3c FFB2     		uxtb	r7, r7
 2685 0a3e 3946     		mov	r1, r7
 2686              	.LVL329:
 445:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2687              		.loc 1 445 15 view .LVU735
 2688 0a40 2846     		mov	r0, r5
 2689              	.LVL330:
 445:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2690              		.loc 1 445 15 view .LVU736
 2691 0a42 FFF7FEFF 		bl	tmc5031_readInt
 2692              	.LVL331:
 449:boards/TMC5031_eval.c **** 			}
 2693              		.loc 1 449 14 view .LVU737
 2694 0a46 3946     		mov	r1, r7
 445:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2695              		.loc 1 445 15 view .LVU738
 2696 0a48 8046     		mov	r8, r0
 2697              	.LVL332:
 446:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper Hysteresis
 2698              		.loc 1 446 3 is_stmt 1 view .LVU739
 2699 0a4a 00F48049 		and	r9, r0, #16384
 449:boards/TMC5031_eval.c **** 			}
 2700              		.loc 1 449 14 is_stmt 0 view .LVU740
 2701 0a4e 2846     		mov	r0, r5
 2702              	.LVL333:
 446:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper Hysteresis
 2703              		.loc 1 446 5 view .LVU741
 2704 0a50 ACB9     		cbnz	r4, .L166
 447:boards/TMC5031_eval.c **** 			{
 2705              		.loc 1 447 4 is_stmt 1 view .LVU742
 447:boards/TMC5031_eval.c **** 			{
 2706              		.loc 1 447 6 is_stmt 0 view .LVU743
 2707 0a52 B9F1000F 		cmp	r9, #0
 2708 0a56 05D0     		beq	.L167
 449:boards/TMC5031_eval.c **** 			}
 2709              		.loc 1 449 5 is_stmt 1 view .LVU744
 449:boards/TMC5031_eval.c **** 			}
 2710              		.loc 1 449 14 is_stmt 0 view .LVU745
 2711 0a58 FFF7FEFF 		bl	tmc5031_readInt
 2712              	.LVL334:
 2713 0a5c C0F3C310 		ubfx	r0, r0, #7, #4
 449:boards/TMC5031_eval.c **** 			}
 2714              		.loc 1 449 12 view .LVU746
 2715 0a60 3060     		str	r0, [r6]
 2716 0a62 ABE4     		b	.L67
 2717              	.L167:
 453:boards/TMC5031_eval.c **** 				if(tempValue & TMC5031_TFD_3_MASK) // Add MSB of fast decay time to total value
 2718              		.loc 1 453 5 is_stmt 1 view .LVU747
 453:boards/TMC5031_eval.c **** 				if(tempValue & TMC5031_TFD_3_MASK) // Add MSB of fast decay time to total value
 2719              		.loc 1 453 14 is_stmt 0 view .LVU748
 2720 0a64 FFF7FEFF 		bl	tmc5031_readInt
 2721              	.LVL335:
 454:boards/TMC5031_eval.c **** 					*value |= 1<<3;
 2722              		.loc 1 454 7 view .LVU749
 2723 0a68 18F4006F 		tst	r8, #2048
 453:boards/TMC5031_eval.c **** 				if(tempValue & TMC5031_TFD_3_MASK) // Add MSB of fast decay time to total value
 2724              		.loc 1 453 14 view .LVU750
 2725 0a6c C0F30213 		ubfx	r3, r0, #4, #3
 454:boards/TMC5031_eval.c **** 					*value |= 1<<3;
 2726              		.loc 1 454 5 is_stmt 1 view .LVU751
 454:boards/TMC5031_eval.c **** 					*value |= 1<<3;
 2727              		.loc 1 454 7 is_stmt 0 view .LVU752
 2728 0a70 01D1     		bne	.L168
 453:boards/TMC5031_eval.c **** 				if(tempValue & TMC5031_TFD_3_MASK) // Add MSB of fast decay time to total value
 2729              		.loc 1 453 12 view .LVU753
 2730 0a72 3360     		str	r3, [r6]
 2731 0a74 79E5     		b	.L169
 2732              	.L168:
 455:boards/TMC5031_eval.c **** 			}
 2733              		.loc 1 455 6 is_stmt 1 view .LVU754
 455:boards/TMC5031_eval.c **** 			}
 2734              		.loc 1 455 13 is_stmt 0 view .LVU755
 2735 0a76 43F00803 		orr	r3, r3, #8
 2736 0a7a 3360     		str	r3, [r6]
 2737 0a7c 9EE4     		b	.L67
 2738              	.L166:
 457:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper Hysteresis
 2739              		.loc 1 457 10 is_stmt 1 view .LVU756
 458:boards/TMC5031_eval.c **** 			{
 2740              		.loc 1 458 4 view .LVU757
 458:boards/TMC5031_eval.c **** 			{
 2741              		.loc 1 458 6 is_stmt 0 view .LVU758
 2742 0a7e B9F1000F 		cmp	r9, #0
 2743 0a82 0ED0     		beq	.L170
 460:boards/TMC5031_eval.c **** 			}
 2744              		.loc 1 460 5 is_stmt 1 view .LVU759
 2745 0a84 FFF7FEFF 		bl	tmc5031_readInt
 2746              	.LVL336:
 2747 0a88 3368     		ldr	r3, [r6]
 2748 0a8a DB01     		lsls	r3, r3, #7
 2749 0a8c 03F4F063 		and	r3, r3, #1920
 2750 0a90 20F4F062 		bic	r2, r0, #1920
 2751 0a94 1A43     		orrs	r2, r2, r3
 2752 0a96 3946     		mov	r1, r7
 2753 0a98 2846     		mov	r0, r5
 2754 0a9a FFF7FEFF 		bl	tmc5031_writeInt
 2755              	.LVL337:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2756              		.loc 1 169 11 is_stmt 0 view .LVU760
 2757 0a9e 0024     		movs	r4, #0
 2758 0aa0 8CE4     		b	.L67
 2759              	.L170:
 464:boards/TMC5031_eval.c **** 					tempValue |= TMC5031_TFD_3_MASK;
 2760              		.loc 1 464 5 is_stmt 1 view .LVU761
 467:boards/TMC5031_eval.c **** 
 2761              		.loc 1 467 6 view .LVU762
 2762              	.LVL338:
 469:boards/TMC5031_eval.c **** 			}
 2763              		.loc 1 469 5 view .LVU763
 2764 0aa2 FFF7FEFF 		bl	tmc5031_readInt
 2765              	.LVL339:
 2766 0aa6 3368     		ldr	r3, [r6]
 2767 0aa8 1B01     		lsls	r3, r3, #4
 2768 0aaa 03F07003 		and	r3, r3, #112
 2769 0aae 20F07002 		bic	r2, r0, #112
 2770 0ab2 1A43     		orrs	r2, r2, r3
 2771 0ab4 3946     		mov	r1, r7
 2772 0ab6 2846     		mov	r0, r5
 2773 0ab8 FFF7FEFF 		bl	tmc5031_writeInt
 2774              	.LVL340:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2775              		.loc 1 169 11 is_stmt 0 view .LVU764
 2776 0abc 4C46     		mov	r4, r9
 2777 0abe 7DE4     		b	.L67
 2778              	.LVL341:
 2779              	.L90:
 475:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2780              		.loc 1 475 3 is_stmt 1 view .LVU765
 475:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2781              		.loc 1 475 38 is_stmt 0 view .LVU766
 2782 0ac0 2F01     		lsls	r7, r5, #4
 2783 0ac2 47F06C07 		orr	r7, r7, #108
 475:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2784              		.loc 1 475 15 view .LVU767
 2785 0ac6 FFB2     		uxtb	r7, r7
 2786 0ac8 3946     		mov	r1, r7
 2787              	.LVL342:
 475:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2788              		.loc 1 475 15 view .LVU768
 2789 0aca 2846     		mov	r0, r5
 2790              	.LVL343:
 475:boards/TMC5031_eval.c **** 		if(readWrite == READ) {
 2791              		.loc 1 475 15 view .LVU769
 2792 0acc FFF7FEFF 		bl	tmc5031_readInt
 2793              	.LVL344:
 476:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper hysteresis start
 2794              		.loc 1 476 3 is_stmt 1 view .LVU770
 479:boards/TMC5031_eval.c **** 			}
 2795              		.loc 1 479 14 is_stmt 0 view .LVU771
 2796 0ad0 3946     		mov	r1, r7
 2797 0ad2 00F48048 		and	r8, r0, #16384
 2798 0ad6 2846     		mov	r0, r5
 2799              	.LVL345:
 476:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper hysteresis start
 2800              		.loc 1 476 5 view .LVU772
 2801 0ad8 74B9     		cbnz	r4, .L171
 477:boards/TMC5031_eval.c **** 			{
 2802              		.loc 1 477 4 is_stmt 1 view .LVU773
 477:boards/TMC5031_eval.c **** 			{
 2803              		.loc 1 477 6 is_stmt 0 view .LVU774
 2804 0ada B8F1000F 		cmp	r8, #0
 2805 0ade 05D0     		beq	.L172
 479:boards/TMC5031_eval.c **** 			}
 2806              		.loc 1 479 5 is_stmt 1 view .LVU775
 479:boards/TMC5031_eval.c **** 			}
 2807              		.loc 1 479 14 is_stmt 0 view .LVU776
 2808 0ae0 FFF7FEFF 		bl	tmc5031_readInt
 2809              	.LVL346:
 2810 0ae4 C0F30210 		ubfx	r0, r0, #4, #3
 479:boards/TMC5031_eval.c **** 			}
 2811              		.loc 1 479 12 view .LVU777
 2812 0ae8 3060     		str	r0, [r6]
 2813 0aea 67E4     		b	.L67
 2814              	.L172:
 483:boards/TMC5031_eval.c **** 			}
 2815              		.loc 1 483 5 is_stmt 1 view .LVU778
 483:boards/TMC5031_eval.c **** 			}
 2816              		.loc 1 483 14 is_stmt 0 view .LVU779
 2817 0aec FFF7FEFF 		bl	tmc5031_readInt
 2818              	.LVL347:
 2819 0af0 C0F3C310 		ubfx	r0, r0, #7, #4
 483:boards/TMC5031_eval.c **** 			}
 2820              		.loc 1 483 12 view .LVU780
 2821 0af4 3060     		str	r0, [r6]
 2822 0af6 61E4     		b	.L67
 2823              	.L171:
 485:boards/TMC5031_eval.c **** 			if(tempValue & TMC5031_CHM_MASK) // Chopper hysteresis start
 2824              		.loc 1 485 10 is_stmt 1 view .LVU781
 486:boards/TMC5031_eval.c **** 			{
 2825              		.loc 1 486 4 view .LVU782
 486:boards/TMC5031_eval.c **** 			{
 2826              		.loc 1 486 6 is_stmt 0 view .LVU783
 2827 0af8 B8F1000F 		cmp	r8, #0
 2828 0afc 0ED0     		beq	.L173
 488:boards/TMC5031_eval.c **** 			}
 2829              		.loc 1 488 5 is_stmt 1 view .LVU784
 2830 0afe FFF7FEFF 		bl	tmc5031_readInt
 2831              	.LVL348:
 2832 0b02 3368     		ldr	r3, [r6]
 2833 0b04 1B01     		lsls	r3, r3, #4
 2834 0b06 03F07003 		and	r3, r3, #112
 2835 0b0a 20F07002 		bic	r2, r0, #112
 2836 0b0e 1A43     		orrs	r2, r2, r3
 2837 0b10 3946     		mov	r1, r7
 2838 0b12 2846     		mov	r0, r5
 2839 0b14 FFF7FEFF 		bl	tmc5031_writeInt
 2840              	.LVL349:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2841              		.loc 1 169 11 is_stmt 0 view .LVU785
 2842 0b18 0024     		movs	r4, #0
 2843 0b1a 4FE4     		b	.L67
 2844              	.L173:
 492:boards/TMC5031_eval.c **** 			}
 2845              		.loc 1 492 5 is_stmt 1 view .LVU786
 2846 0b1c FFF7FEFF 		bl	tmc5031_readInt
 2847              	.LVL350:
 2848 0b20 3368     		ldr	r3, [r6]
 2849 0b22 DB01     		lsls	r3, r3, #7
 2850 0b24 03F4F063 		and	r3, r3, #1920
 2851 0b28 20F4F062 		bic	r2, r0, #1920
 2852 0b2c 1A43     		orrs	r2, r2, r3
 2853 0b2e 3946     		mov	r1, r7
 2854 0b30 2846     		mov	r0, r5
 2855 0b32 FFF7FEFF 		bl	tmc5031_writeInt
 2856              	.LVL351:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2857              		.loc 1 169 11 is_stmt 0 view .LVU787
 2858 0b36 4446     		mov	r4, r8
 2859 0b38 40E4     		b	.L67
 2860              	.LVL352:
 2861              	.L89:
 498:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_TOFF_MASK, TMC5031_TOFF_SHIF
 2862              		.loc 1 498 3 is_stmt 1 view .LVU788
 2863 0b3a 2F01     		lsls	r7, r5, #4
 2864 0b3c 47F06C07 		orr	r7, r7, #108
 2865 0b40 FFB2     		uxtb	r7, r7
 499:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2866              		.loc 1 499 13 is_stmt 0 view .LVU789
 2867 0b42 3946     		mov	r1, r7
 2868              	.LVL353:
 499:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2869              		.loc 1 499 13 view .LVU790
 2870 0b44 2846     		mov	r0, r5
 2871              	.LVL354:
 498:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_TOFF_MASK, TMC5031_TOFF_SHIF
 2872              		.loc 1 498 5 view .LVU791
 2873 0b46 2CB9     		cbnz	r4, .L174
 499:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2874              		.loc 1 499 4 is_stmt 1 view .LVU792
 499:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2875              		.loc 1 499 13 is_stmt 0 view .LVU793
 2876 0b48 FFF7FEFF 		bl	tmc5031_readInt
 2877              	.LVL355:
 2878 0b4c 00F00F00 		and	r0, r0, #15
 499:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2879              		.loc 1 499 11 view .LVU794
 2880 0b50 3060     		str	r0, [r6]
 2881 0b52 33E4     		b	.L67
 2882              	.L174:
 500:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_TOFF_MASK, TMC5031_TOFF_SHIFT, *val
 2883              		.loc 1 500 10 is_stmt 1 view .LVU795
 501:boards/TMC5031_eval.c **** 		}
 2884              		.loc 1 501 4 view .LVU796
 2885 0b54 FFF7FEFF 		bl	tmc5031_readInt
 2886              	.LVL356:
 2887 0b58 3268     		ldr	r2, [r6]
 2888 0b5a 20F00F00 		bic	r0, r0, #15
 2889 0b5e 02F00F02 		and	r2, r2, #15
 2890 0b62 0243     		orrs	r2, r2, r0
 2891 0b64 3946     		mov	r1, r7
 2892 0b66 2846     		mov	r0, r5
 2893 0b68 FFF7FEFF 		bl	tmc5031_writeInt
 2894              	.LVL357:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2895              		.loc 1 169 11 is_stmt 0 view .LVU797
 2896 0b6c 0024     		movs	r4, #0
 2897 0b6e 25E4     		b	.L67
 2898              	.LVL358:
 2899              	.L88:
 506:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEIMIN_MASK, TMC5031_SEIMIN_
 2900              		.loc 1 506 3 is_stmt 1 view .LVU798
 2901 0b70 2F01     		lsls	r7, r5, #4
 2902 0b72 47F06D07 		orr	r7, r7, #109
 2903 0b76 FFB2     		uxtb	r7, r7
 507:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2904              		.loc 1 507 13 is_stmt 0 view .LVU799
 2905 0b78 3946     		mov	r1, r7
 2906              	.LVL359:
 507:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2907              		.loc 1 507 13 view .LVU800
 2908 0b7a 2846     		mov	r0, r5
 2909              	.LVL360:
 506:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEIMIN_MASK, TMC5031_SEIMIN_
 2910              		.loc 1 506 5 view .LVU801
 2911 0b7c 2CB9     		cbnz	r4, .L175
 507:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2912              		.loc 1 507 4 is_stmt 1 view .LVU802
 507:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2913              		.loc 1 507 13 is_stmt 0 view .LVU803
 2914 0b7e FFF7FEFF 		bl	tmc5031_readInt
 2915              	.LVL361:
 2916 0b82 C0F3C030 		ubfx	r0, r0, #15, #1
 507:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2917              		.loc 1 507 11 view .LVU804
 2918 0b86 3060     		str	r0, [r6]
 2919 0b88 18E4     		b	.L67
 2920              	.L175:
 508:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEIMIN_MASK, TMC5031_SEIMIN_SHIFT, 
 2921              		.loc 1 508 10 is_stmt 1 view .LVU805
 509:boards/TMC5031_eval.c **** 		}
 2922              		.loc 1 509 4 view .LVU806
 2923 0b8a FFF7FEFF 		bl	tmc5031_readInt
 2924              	.LVL362:
 2925 0b8e 3368     		ldr	r3, [r6]
 2926 0b90 DB03     		lsls	r3, r3, #15
 2927 0b92 9BB2     		uxth	r3, r3
 2928 0b94 20F40042 		bic	r2, r0, #32768
 2929 0b98 1A43     		orrs	r2, r2, r3
 2930 0b9a 3946     		mov	r1, r7
 2931 0b9c 2846     		mov	r0, r5
 2932 0b9e FFF7FEFF 		bl	tmc5031_writeInt
 2933              	.LVL363:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2934              		.loc 1 169 11 is_stmt 0 view .LVU807
 2935 0ba2 0024     		movs	r4, #0
 2936 0ba4 0AE4     		b	.L67
 2937              	.L218:
 2938 0ba6 00BF     		.align	2
 2939              	.L217:
 2940 0ba8 00000000 		.word	.LANCHOR0
 2941              	.LVL364:
 2942              	.L87:
 514:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEDN_MASK, TMC5031_SEDN_SHIF
 2943              		.loc 1 514 3 is_stmt 1 view .LVU808
 2944 0bac 2F01     		lsls	r7, r5, #4
 2945 0bae 47F06D07 		orr	r7, r7, #109
 2946 0bb2 FFB2     		uxtb	r7, r7
 515:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2947              		.loc 1 515 13 is_stmt 0 view .LVU809
 2948 0bb4 3946     		mov	r1, r7
 2949              	.LVL365:
 515:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2950              		.loc 1 515 13 view .LVU810
 2951 0bb6 2846     		mov	r0, r5
 2952              	.LVL366:
 514:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEDN_MASK, TMC5031_SEDN_SHIF
 2953              		.loc 1 514 5 view .LVU811
 2954 0bb8 34B9     		cbnz	r4, .L176
 515:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2955              		.loc 1 515 4 is_stmt 1 view .LVU812
 515:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2956              		.loc 1 515 13 is_stmt 0 view .LVU813
 2957 0bba FFF7FEFF 		bl	tmc5031_readInt
 2958              	.LVL367:
 2959 0bbe C0F34130 		ubfx	r0, r0, #13, #2
 515:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2960              		.loc 1 515 11 view .LVU814
 2961 0bc2 3060     		str	r0, [r6]
 2962 0bc4 FFF7FABB 		b	.L67
 2963              	.L176:
 516:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEDN_MASK, TMC5031_SEDN_SHIFT, *val
 2964              		.loc 1 516 10 is_stmt 1 view .LVU815
 517:boards/TMC5031_eval.c **** 		}
 2965              		.loc 1 517 4 view .LVU816
 2966 0bc8 FFF7FEFF 		bl	tmc5031_readInt
 2967              	.LVL368:
 2968 0bcc 3368     		ldr	r3, [r6]
 2969 0bce 5B03     		lsls	r3, r3, #13
 2970 0bd0 03F4C043 		and	r3, r3, #24576
 2971 0bd4 20F4C042 		bic	r2, r0, #24576
 2972 0bd8 1A43     		orrs	r2, r2, r3
 2973 0bda 3946     		mov	r1, r7
 2974 0bdc 2846     		mov	r0, r5
 2975 0bde FFF7FEFF 		bl	tmc5031_writeInt
 2976              	.LVL369:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 2977              		.loc 1 169 11 is_stmt 0 view .LVU817
 2978 0be2 0024     		movs	r4, #0
 2979 0be4 FFF7EABB 		b	.L67
 2980              	.LVL370:
 2981              	.L86:
 522:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEMAX_MASK, TMC5031_SEMAX_SH
 2982              		.loc 1 522 3 is_stmt 1 view .LVU818
 2983 0be8 2F01     		lsls	r7, r5, #4
 2984 0bea 47F06D07 		orr	r7, r7, #109
 2985 0bee FFB2     		uxtb	r7, r7
 523:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2986              		.loc 1 523 13 is_stmt 0 view .LVU819
 2987 0bf0 3946     		mov	r1, r7
 2988              	.LVL371:
 523:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2989              		.loc 1 523 13 view .LVU820
 2990 0bf2 2846     		mov	r0, r5
 2991              	.LVL372:
 522:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEMAX_MASK, TMC5031_SEMAX_SH
 2992              		.loc 1 522 5 view .LVU821
 2993 0bf4 34B9     		cbnz	r4, .L177
 523:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2994              		.loc 1 523 4 is_stmt 1 view .LVU822
 523:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2995              		.loc 1 523 13 is_stmt 0 view .LVU823
 2996 0bf6 FFF7FEFF 		bl	tmc5031_readInt
 2997              	.LVL373:
 2998 0bfa C0F30320 		ubfx	r0, r0, #8, #4
 523:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 2999              		.loc 1 523 11 view .LVU824
 3000 0bfe 3060     		str	r0, [r6]
 3001 0c00 FFF7DCBB 		b	.L67
 3002              	.L177:
 524:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEMAX_MASK, TMC5031_SEMAX_SHIFT, *v
 3003              		.loc 1 524 10 is_stmt 1 view .LVU825
 525:boards/TMC5031_eval.c **** 		}
 3004              		.loc 1 525 4 view .LVU826
 3005 0c04 FFF7FEFF 		bl	tmc5031_readInt
 3006              	.LVL374:
 3007 0c08 3368     		ldr	r3, [r6]
 3008 0c0a 1B02     		lsls	r3, r3, #8
 3009 0c0c 03F47063 		and	r3, r3, #3840
 3010 0c10 20F47062 		bic	r2, r0, #3840
 3011 0c14 1A43     		orrs	r2, r2, r3
 3012 0c16 3946     		mov	r1, r7
 3013 0c18 2846     		mov	r0, r5
 3014 0c1a FFF7FEFF 		bl	tmc5031_writeInt
 3015              	.LVL375:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3016              		.loc 1 169 11 is_stmt 0 view .LVU827
 3017 0c1e 0024     		movs	r4, #0
 3018 0c20 FFF7CCBB 		b	.L67
 3019              	.LVL376:
 3020              	.L85:
 530:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEUP_MASK, TMC5031_SEUP_SHIF
 3021              		.loc 1 530 3 is_stmt 1 view .LVU828
 3022 0c24 2F01     		lsls	r7, r5, #4
 3023 0c26 47F06D07 		orr	r7, r7, #109
 3024 0c2a FFB2     		uxtb	r7, r7
 531:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3025              		.loc 1 531 13 is_stmt 0 view .LVU829
 3026 0c2c 3946     		mov	r1, r7
 3027              	.LVL377:
 531:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3028              		.loc 1 531 13 view .LVU830
 3029 0c2e 2846     		mov	r0, r5
 3030              	.LVL378:
 530:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEUP_MASK, TMC5031_SEUP_SHIF
 3031              		.loc 1 530 5 view .LVU831
 3032 0c30 34B9     		cbnz	r4, .L178
 531:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3033              		.loc 1 531 4 is_stmt 1 view .LVU832
 531:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3034              		.loc 1 531 13 is_stmt 0 view .LVU833
 3035 0c32 FFF7FEFF 		bl	tmc5031_readInt
 3036              	.LVL379:
 3037 0c36 C0F34110 		ubfx	r0, r0, #5, #2
 531:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3038              		.loc 1 531 11 view .LVU834
 3039 0c3a 3060     		str	r0, [r6]
 3040 0c3c FFF7BEBB 		b	.L67
 3041              	.L178:
 532:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEUP_MASK, TMC5031_SEUP_SHIFT, *val
 3042              		.loc 1 532 10 is_stmt 1 view .LVU835
 533:boards/TMC5031_eval.c **** 		}
 3043              		.loc 1 533 4 view .LVU836
 3044 0c40 FFF7FEFF 		bl	tmc5031_readInt
 3045              	.LVL380:
 3046 0c44 3368     		ldr	r3, [r6]
 3047 0c46 5B01     		lsls	r3, r3, #5
 3048 0c48 03F06003 		and	r3, r3, #96
 3049 0c4c 20F06002 		bic	r2, r0, #96
 3050 0c50 1A43     		orrs	r2, r2, r3
 3051 0c52 3946     		mov	r1, r7
 3052 0c54 2846     		mov	r0, r5
 3053 0c56 FFF7FEFF 		bl	tmc5031_writeInt
 3054              	.LVL381:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3055              		.loc 1 169 11 is_stmt 0 view .LVU837
 3056 0c5a 0024     		movs	r4, #0
 3057 0c5c FFF7AEBB 		b	.L67
 3058              	.LVL382:
 3059              	.L84:
 538:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEMIN_MASK, TMC5031_SEMIN_SH
 3060              		.loc 1 538 3 is_stmt 1 view .LVU838
 3061 0c60 2F01     		lsls	r7, r5, #4
 3062 0c62 47F06D07 		orr	r7, r7, #109
 3063 0c66 FFB2     		uxtb	r7, r7
 539:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3064              		.loc 1 539 13 is_stmt 0 view .LVU839
 3065 0c68 3946     		mov	r1, r7
 3066              	.LVL383:
 539:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3067              		.loc 1 539 13 view .LVU840
 3068 0c6a 2846     		mov	r0, r5
 3069              	.LVL384:
 538:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SEMIN_MASK, TMC5031_SEMIN_SH
 3070              		.loc 1 538 5 view .LVU841
 3071 0c6c 34B9     		cbnz	r4, .L179
 539:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3072              		.loc 1 539 4 is_stmt 1 view .LVU842
 539:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3073              		.loc 1 539 13 is_stmt 0 view .LVU843
 3074 0c6e FFF7FEFF 		bl	tmc5031_readInt
 3075              	.LVL385:
 3076 0c72 00F00F00 		and	r0, r0, #15
 539:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3077              		.loc 1 539 11 view .LVU844
 3078 0c76 3060     		str	r0, [r6]
 3079 0c78 FFF7A0BB 		b	.L67
 3080              	.L179:
 540:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SEMIN_MASK, TMC5031_SEMIN_SHIFT, *v
 3081              		.loc 1 540 10 is_stmt 1 view .LVU845
 541:boards/TMC5031_eval.c **** 		}
 3082              		.loc 1 541 4 view .LVU846
 3083 0c7c FFF7FEFF 		bl	tmc5031_readInt
 3084              	.LVL386:
 3085 0c80 3268     		ldr	r2, [r6]
 3086 0c82 20F00F00 		bic	r0, r0, #15
 3087 0c86 02F00F02 		and	r2, r2, #15
 3088 0c8a 0243     		orrs	r2, r2, r0
 3089 0c8c 3946     		mov	r1, r7
 3090 0c8e 2846     		mov	r0, r5
 3091 0c90 FFF7FEFF 		bl	tmc5031_writeInt
 3092              	.LVL387:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3093              		.loc 1 169 11 is_stmt 0 view .LVU847
 3094 0c94 0024     		movs	r4, #0
 3095 0c96 FFF791BB 		b	.L67
 3096              	.LVL388:
 3097              	.L83:
 546:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SFILT_MASK, TMC5031_SFILT_SH
 3098              		.loc 1 546 3 is_stmt 1 view .LVU848
 3099 0c9a 2F01     		lsls	r7, r5, #4
 3100 0c9c 47F06D07 		orr	r7, r7, #109
 3101 0ca0 FFB2     		uxtb	r7, r7
 547:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3102              		.loc 1 547 13 is_stmt 0 view .LVU849
 3103 0ca2 3946     		mov	r1, r7
 3104              	.LVL389:
 547:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3105              		.loc 1 547 13 view .LVU850
 3106 0ca4 2846     		mov	r0, r5
 3107              	.LVL390:
 546:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SFILT_MASK, TMC5031_SFILT_SH
 3108              		.loc 1 546 5 view .LVU851
 3109 0ca6 34B9     		cbnz	r4, .L180
 547:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3110              		.loc 1 547 4 is_stmt 1 view .LVU852
 547:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3111              		.loc 1 547 13 is_stmt 0 view .LVU853
 3112 0ca8 FFF7FEFF 		bl	tmc5031_readInt
 3113              	.LVL391:
 3114 0cac C0F30060 		ubfx	r0, r0, #24, #1
 547:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3115              		.loc 1 547 11 view .LVU854
 3116 0cb0 3060     		str	r0, [r6]
 3117 0cb2 FFF783BB 		b	.L67
 3118              	.L180:
 548:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SFILT_MASK, TMC5031_SFILT_SHIFT, *v
 3119              		.loc 1 548 10 is_stmt 1 view .LVU855
 549:boards/TMC5031_eval.c **** 		}
 3120              		.loc 1 549 4 view .LVU856
 3121 0cb6 FFF7FEFF 		bl	tmc5031_readInt
 3122              	.LVL392:
 3123 0cba 3368     		ldr	r3, [r6]
 3124 0cbc 1B06     		lsls	r3, r3, #24
 3125 0cbe 03F08073 		and	r3, r3, #16777216
 3126 0cc2 20F08072 		bic	r2, r0, #16777216
 3127 0cc6 1A43     		orrs	r2, r2, r3
 3128 0cc8 3946     		mov	r1, r7
 3129 0cca 2846     		mov	r0, r5
 3130 0ccc FFF7FEFF 		bl	tmc5031_writeInt
 3131              	.LVL393:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3132              		.loc 1 169 11 is_stmt 0 view .LVU857
 3133 0cd0 0024     		movs	r4, #0
 3134 0cd2 FFF773BB 		b	.L67
 3135              	.LVL394:
 3136              	.L82:
 554:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SGT_MASK, TMC5031_SGT_SHIFT)
 3137              		.loc 1 554 3 is_stmt 1 view .LVU858
 3138 0cd6 2F01     		lsls	r7, r5, #4
 3139 0cd8 47F06D07 		orr	r7, r7, #109
 3140 0cdc FFB2     		uxtb	r7, r7
 555:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3141              		.loc 1 555 13 is_stmt 0 view .LVU859
 3142 0cde 3946     		mov	r1, r7
 3143              	.LVL395:
 555:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3144              		.loc 1 555 13 view .LVU860
 3145 0ce0 2846     		mov	r0, r5
 3146              	.LVL396:
 554:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_COOLCONF(motor), TMC5031_SGT_MASK, TMC5031_SGT_SHIFT)
 3147              		.loc 1 554 5 view .LVU861
 3148 0ce2 6CB9     		cbnz	r4, .L181
 555:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3149              		.loc 1 555 4 is_stmt 1 view .LVU862
 555:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3150              		.loc 1 555 13 is_stmt 0 view .LVU863
 3151 0ce4 FFF7FEFF 		bl	tmc5031_readInt
 3152              	.LVL397:
 3153 0ce8 0314     		asrs	r3, r0, #16
 556:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3154              		.loc 1 556 13 view .LVU864
 3155 0cea 13F04003 		ands	r3, r3, #64
 555:boards/TMC5031_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3156              		.loc 1 555 13 view .LVU865
 3157 0cee C0F30640 		ubfx	r0, r0, #16, #7
 556:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3158              		.loc 1 556 4 is_stmt 1 view .LVU866
 556:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3159              		.loc 1 556 13 is_stmt 0 view .LVU867
 3160 0cf2 18BF     		it	ne
 3161 0cf4 6FF07F03 		mvnne	r3, #127
 3162 0cf8 1843     		orrs	r0, r0, r3
 556:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3163              		.loc 1 556 11 view .LVU868
 3164 0cfa 3060     		str	r0, [r6]
 3165 0cfc FFF75EBB 		b	.L67
 3166              	.L181:
 557:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_COOLCONF(motor), TMC5031_SGT_MASK, TMC5031_SGT_SHIFT, *value
 3167              		.loc 1 557 10 is_stmt 1 view .LVU869
 558:boards/TMC5031_eval.c **** 		}
 3168              		.loc 1 558 4 view .LVU870
 3169 0d00 FFF7FEFF 		bl	tmc5031_readInt
 3170              	.LVL398:
 3171 0d04 3368     		ldr	r3, [r6]
 3172 0d06 1B04     		lsls	r3, r3, #16
 3173 0d08 03F4FE03 		and	r3, r3, #8323072
 3174 0d0c 20F4FE02 		bic	r2, r0, #8323072
 3175 0d10 1A43     		orrs	r2, r2, r3
 3176 0d12 3946     		mov	r1, r7
 3177 0d14 2846     		mov	r0, r5
 3178 0d16 FFF7FEFF 		bl	tmc5031_writeInt
 3179              	.LVL399:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3180              		.loc 1 169 11 is_stmt 0 view .LVU871
 3181 0d1a 0024     		movs	r4, #0
 3182 0d1c FFF74EBB 		b	.L67
 3183              	.LVL400:
 3184              	.L81:
 563:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_VSENSE_MASK, TMC5031_VSENSE_
 3185              		.loc 1 563 3 is_stmt 1 view .LVU872
 3186 0d20 2F01     		lsls	r7, r5, #4
 3187 0d22 47F06C07 		orr	r7, r7, #108
 3188 0d26 FFB2     		uxtb	r7, r7
 564:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3189              		.loc 1 564 13 is_stmt 0 view .LVU873
 3190 0d28 3946     		mov	r1, r7
 3191              	.LVL401:
 564:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3192              		.loc 1 564 13 view .LVU874
 3193 0d2a 2846     		mov	r0, r5
 3194              	.LVL402:
 563:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_VSENSE_MASK, TMC5031_VSENSE_
 3195              		.loc 1 563 5 view .LVU875
 3196 0d2c 34B9     		cbnz	r4, .L183
 564:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3197              		.loc 1 564 4 is_stmt 1 view .LVU876
 564:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3198              		.loc 1 564 13 is_stmt 0 view .LVU877
 3199 0d2e FFF7FEFF 		bl	tmc5031_readInt
 3200              	.LVL403:
 3201 0d32 C0F34040 		ubfx	r0, r0, #17, #1
 564:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3202              		.loc 1 564 11 view .LVU878
 3203 0d36 3060     		str	r0, [r6]
 3204 0d38 FFF740BB 		b	.L67
 3205              	.L183:
 565:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_VSENSE_MASK, TMC5031_VSENSE_SHIFT, 
 3206              		.loc 1 565 10 is_stmt 1 view .LVU879
 566:boards/TMC5031_eval.c **** 		}
 3207              		.loc 1 566 4 view .LVU880
 3208 0d3c FFF7FEFF 		bl	tmc5031_readInt
 3209              	.LVL404:
 3210 0d40 3368     		ldr	r3, [r6]
 3211 0d42 5B04     		lsls	r3, r3, #17
 3212 0d44 03F40033 		and	r3, r3, #131072
 3213 0d48 20F40032 		bic	r2, r0, #131072
 3214 0d4c 1A43     		orrs	r2, r2, r3
 3215 0d4e 3946     		mov	r1, r7
 3216 0d50 2846     		mov	r0, r5
 3217 0d52 FFF7FEFF 		bl	tmc5031_writeInt
 3218              	.LVL405:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3219              		.loc 1 169 11 is_stmt 0 view .LVU881
 3220 0d56 0024     		movs	r4, #0
 3221 0d58 FFF730BB 		b	.L67
 3222              	.LVL406:
 3223              	.L80:
 571:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_DRVSTATUS(motor), TMC5031_CS_ACTUAL_MASK, TMC5031_CS_
 3224              		.loc 1 571 3 is_stmt 1 view .LVU882
 571:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_DRVSTATUS(motor), TMC5031_CS_ACTUAL_MASK, TMC5031_CS_
 3225              		.loc 1 571 5 is_stmt 0 view .LVU883
 3226 0d5c 002C     		cmp	r4, #0
 3227 0d5e 40F02681 		bne	.L210
 572:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3228              		.loc 1 572 4 is_stmt 1 view .LVU884
 572:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3229              		.loc 1 572 13 is_stmt 0 view .LVU885
 3230 0d62 2901     		lsls	r1, r5, #4
 3231              	.LVL407:
 572:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3232              		.loc 1 572 13 view .LVU886
 3233 0d64 41F06F01 		orr	r1, r1, #111
 3234 0d68 C9B2     		uxtb	r1, r1
 3235 0d6a 2846     		mov	r0, r5
 3236              	.LVL408:
 572:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3237              		.loc 1 572 13 view .LVU887
 3238 0d6c FFF7FEFF 		bl	tmc5031_readInt
 3239              	.LVL409:
 3240 0d70 C0F30440 		ubfx	r0, r0, #16, #5
 572:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3241              		.loc 1 572 11 view .LVU888
 3242 0d74 3060     		str	r0, [r6]
 3243 0d76 FFF721BB 		b	.L67
 3244              	.LVL410:
 3245              	.L79:
 579:boards/TMC5031_eval.c **** 		if(readWrite == READ)
 3246              		.loc 1 579 3 is_stmt 1 view .LVU889
 579:boards/TMC5031_eval.c **** 		if(readWrite == READ)
 3247              		.loc 1 579 38 is_stmt 0 view .LVU890
 3248 0d7a 2027     		movs	r7, #32
 3249 0d7c AF40     		lsls	r7, r7, r5
 3250 0d7e 7FB2     		sxtb	r7, r7
 3251 0d80 47F01408 		orr	r8, r7, #20
 579:boards/TMC5031_eval.c **** 		if(readWrite == READ)
 3252              		.loc 1 579 15 view .LVU891
 3253 0d84 5FFA88F8 		uxtb	r8, r8
 3254 0d88 4146     		mov	r1, r8
 3255              	.LVL411:
 579:boards/TMC5031_eval.c **** 		if(readWrite == READ)
 3256              		.loc 1 579 15 view .LVU892
 3257 0d8a 2846     		mov	r0, r5
 3258              	.LVL412:
 579:boards/TMC5031_eval.c **** 		if(readWrite == READ)
 3259              		.loc 1 579 15 view .LVU893
 3260 0d8c FFF7FEFF 		bl	tmc5031_readInt
 3261              	.LVL413:
 580:boards/TMC5031_eval.c **** 		{
 3262              		.loc 1 580 3 is_stmt 1 view .LVU894
 580:boards/TMC5031_eval.c **** 		{
 3263              		.loc 1 580 5 is_stmt 0 view .LVU895
 3264 0d90 6CB9     		cbnz	r4, .L184
 582:boards/TMC5031_eval.c **** 			{
 3265              		.loc 1 582 4 is_stmt 1 view .LVU896
 582:boards/TMC5031_eval.c **** 			{
 3266              		.loc 1 582 6 is_stmt 0 view .LVU897
 3267 0d92 4105     		lsls	r1, r0, #21
 3268 0d94 08D5     		bpl	.L185
 584:boards/TMC5031_eval.c **** 			}
 3269              		.loc 1 584 5 is_stmt 1 view .LVU898
 584:boards/TMC5031_eval.c **** 			}
 3270              		.loc 1 584 37 is_stmt 0 view .LVU899
 3271 0d96 47F01101 		orr	r1, r7, #17
 584:boards/TMC5031_eval.c **** 			}
 3272              		.loc 1 584 14 view .LVU900
 3273 0d9a C9B2     		uxtb	r1, r1
 3274 0d9c 2846     		mov	r0, r5
 3275              	.LVL414:
 584:boards/TMC5031_eval.c **** 			}
 3276              		.loc 1 584 14 view .LVU901
 3277 0d9e FFF7FEFF 		bl	tmc5031_readInt
 3278              	.LVL415:
 584:boards/TMC5031_eval.c **** 			}
 3279              		.loc 1 584 12 view .LVU902
 3280 0da2 3060     		str	r0, [r6]
 3281 0da4 FFF70ABB 		b	.L67
 3282              	.LVL416:
 3283              	.L185:
 587:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3284              		.loc 1 587 5 is_stmt 1 view .LVU903
 587:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3285              		.loc 1 587 12 is_stmt 0 view .LVU904
 3286 0da8 3460     		str	r4, [r6]
 3287 0daa FFF707BB 		b	.L67
 3288              	.L184:
 588:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VCOOLTHRS(motor), *value);
 3289              		.loc 1 588 10 is_stmt 1 view .LVU905
 589:boards/TMC5031_eval.c **** 
 3290              		.loc 1 589 4 view .LVU906
 589:boards/TMC5031_eval.c **** 
 3291              		.loc 1 589 28 is_stmt 0 view .LVU907
 3292 0dae 47F01101 		orr	r1, r7, #17
 589:boards/TMC5031_eval.c **** 
 3293              		.loc 1 589 4 view .LVU908
 3294 0db2 3268     		ldr	r2, [r6]
 3295 0db4 C9B2     		uxtb	r1, r1
 3296 0db6 2846     		mov	r0, r5
 3297              	.LVL417:
 589:boards/TMC5031_eval.c **** 
 3298              		.loc 1 589 4 view .LVU909
 3299 0db8 FFF7FEFF 		bl	tmc5031_writeInt
 3300              	.LVL418:
 591:boards/TMC5031_eval.c **** 		}
 3301              		.loc 1 591 4 is_stmt 1 view .LVU910
 3302 0dbc 4146     		mov	r1, r8
 3303 0dbe 2846     		mov	r0, r5
 3304 0dc0 FFF7FEFF 		bl	tmc5031_readInt
 3305              	.LVL419:
 3306 0dc4 3368     		ldr	r3, [r6]
 3307 0dc6 002B     		cmp	r3, #0
 3308 0dc8 20F48062 		bic	r2, r0, #1024
 3309 0dcc 18BF     		it	ne
 3310 0dce 4FF48063 		movne	r3, #1024
 3311 0dd2 1A43     		orrs	r2, r2, r3
 3312 0dd4 4146     		mov	r1, r8
 3313 0dd6 2846     		mov	r0, r5
 3314 0dd8 FFF7FEFF 		bl	tmc5031_writeInt
 3315              	.LVL420:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3316              		.loc 1 169 11 is_stmt 0 view .LVU911
 3317 0ddc 0024     		movs	r4, #0
 3318 0dde FFF7EDBA 		b	.L67
 3319              	.LVL421:
 3320              	.L78:
 596:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VCOOLTHRS(motor));
 3321              		.loc 1 596 3 is_stmt 1 view .LVU912
 3322 0de2 2021     		movs	r1, #32
 3323              	.LVL422:
 596:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VCOOLTHRS(motor));
 3324              		.loc 1 596 3 is_stmt 0 view .LVU913
 3325 0de4 A940     		lsls	r1, r1, r5
 3326 0de6 41F01101 		orr	r1, r1, #17
 3327 0dea C9B2     		uxtb	r1, r1
 596:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_VCOOLTHRS(motor));
 3328              		.loc 1 596 5 view .LVU914
 3329 0dec 2CB9     		cbnz	r4, .L187
 597:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3330              		.loc 1 597 4 is_stmt 1 view .LVU915
 597:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3331              		.loc 1 597 13 is_stmt 0 view .LVU916
 3332 0dee 2846     		mov	r0, r5
 3333              	.LVL423:
 597:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3334              		.loc 1 597 13 view .LVU917
 3335 0df0 FFF7FEFF 		bl	tmc5031_readInt
 3336              	.LVL424:
 597:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3337              		.loc 1 597 11 view .LVU918
 3338 0df4 3060     		str	r0, [r6]
 3339 0df6 FFF7E1BA 		b	.L67
 3340              	.LVL425:
 3341              	.L187:
 598:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_VCOOLTHRS(motor),*value);
 3342              		.loc 1 598 10 is_stmt 1 view .LVU919
 599:boards/TMC5031_eval.c **** 		}
 3343              		.loc 1 599 4 view .LVU920
 3344 0dfa 3268     		ldr	r2, [r6]
 3345 0dfc 2846     		mov	r0, r5
 3346              	.LVL426:
 599:boards/TMC5031_eval.c **** 		}
 3347              		.loc 1 599 4 is_stmt 0 view .LVU921
 3348 0dfe FFF7FEFF 		bl	tmc5031_writeInt
 3349              	.LVL427:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3350              		.loc 1 169 11 view .LVU922
 3351 0e02 0024     		movs	r4, #0
 3352 0e04 FFF7DABA 		b	.L67
 3353              	.LVL428:
 3354              	.L77:
 604:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_RNDTF_MASK, TMC5031_RNDTF_SH
 3355              		.loc 1 604 3 is_stmt 1 view .LVU923
 3356 0e08 2F01     		lsls	r7, r5, #4
 3357 0e0a 47F06C07 		orr	r7, r7, #108
 3358 0e0e FFB2     		uxtb	r7, r7
 605:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3359              		.loc 1 605 13 is_stmt 0 view .LVU924
 3360 0e10 3946     		mov	r1, r7
 3361              	.LVL429:
 605:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3362              		.loc 1 605 13 view .LVU925
 3363 0e12 2846     		mov	r0, r5
 3364              	.LVL430:
 604:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_RNDTF_MASK, TMC5031_RNDTF_SH
 3365              		.loc 1 604 5 view .LVU926
 3366 0e14 34B9     		cbnz	r4, .L188
 605:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3367              		.loc 1 605 4 is_stmt 1 view .LVU927
 605:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3368              		.loc 1 605 13 is_stmt 0 view .LVU928
 3369 0e16 FFF7FEFF 		bl	tmc5031_readInt
 3370              	.LVL431:
 3371 0e1a C0F34030 		ubfx	r0, r0, #13, #1
 605:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3372              		.loc 1 605 11 view .LVU929
 3373 0e1e 3060     		str	r0, [r6]
 3374 0e20 FFF7CCBA 		b	.L67
 3375              	.L188:
 606:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_RNDTF_MASK, TMC5031_RNDTF_SHIFT, *v
 3376              		.loc 1 606 10 is_stmt 1 view .LVU930
 607:boards/TMC5031_eval.c **** 		}
 3377              		.loc 1 607 4 view .LVU931
 3378 0e24 FFF7FEFF 		bl	tmc5031_readInt
 3379              	.LVL432:
 3380 0e28 3368     		ldr	r3, [r6]
 3381 0e2a 5B03     		lsls	r3, r3, #13
 3382 0e2c 03F40053 		and	r3, r3, #8192
 3383 0e30 20F40052 		bic	r2, r0, #8192
 3384 0e34 1A43     		orrs	r2, r2, r3
 3385 0e36 3946     		mov	r1, r7
 3386 0e38 2846     		mov	r0, r5
 3387 0e3a FFF7FEFF 		bl	tmc5031_writeInt
 3388              	.LVL433:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3389              		.loc 1 169 11 is_stmt 0 view .LVU932
 3390 0e3e 0024     		movs	r4, #0
 3391 0e40 FFF7BCBA 		b	.L67
 3392              	.LVL434:
 3393              	.L76:
 612:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_SYNC_MASK, TMC5031_SYNC_SHIF
 3394              		.loc 1 612 3 is_stmt 1 view .LVU933
 3395 0e44 2F01     		lsls	r7, r5, #4
 3396 0e46 47F06C07 		orr	r7, r7, #108
 3397 0e4a FFB2     		uxtb	r7, r7
 613:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3398              		.loc 1 613 13 is_stmt 0 view .LVU934
 3399 0e4c 3946     		mov	r1, r7
 3400              	.LVL435:
 613:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3401              		.loc 1 613 13 view .LVU935
 3402 0e4e 2846     		mov	r0, r5
 3403              	.LVL436:
 612:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_CHOPCONF(motor), TMC5031_SYNC_MASK, TMC5031_SYNC_SHIF
 3404              		.loc 1 612 5 view .LVU936
 3405 0e50 34B9     		cbnz	r4, .L189
 613:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3406              		.loc 1 613 4 is_stmt 1 view .LVU937
 613:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3407              		.loc 1 613 13 is_stmt 0 view .LVU938
 3408 0e52 FFF7FEFF 		bl	tmc5031_readInt
 3409              	.LVL437:
 3410 0e56 C0F30350 		ubfx	r0, r0, #20, #4
 613:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3411              		.loc 1 613 11 view .LVU939
 3412 0e5a 3060     		str	r0, [r6]
 3413 0e5c FFF7AEBA 		b	.L67
 3414              	.L189:
 614:boards/TMC5031_eval.c **** 			TMC5031_FIELD_UPDATE(motor, TMC5031_CHOPCONF(motor), TMC5031_SYNC_MASK, TMC5031_SYNC_SHIFT, *val
 3415              		.loc 1 614 10 is_stmt 1 view .LVU940
 615:boards/TMC5031_eval.c **** 		}
 3416              		.loc 1 615 4 view .LVU941
 3417 0e60 FFF7FEFF 		bl	tmc5031_readInt
 3418              	.LVL438:
 3419 0e64 3368     		ldr	r3, [r6]
 3420 0e66 1B05     		lsls	r3, r3, #20
 3421 0e68 03F47003 		and	r3, r3, #15728640
 3422 0e6c 20F47002 		bic	r2, r0, #15728640
 3423 0e70 1A43     		orrs	r2, r2, r3
 3424 0e72 3946     		mov	r1, r7
 3425 0e74 2846     		mov	r0, r5
 3426 0e76 FFF7FEFF 		bl	tmc5031_writeInt
 3427              	.LVL439:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3428              		.loc 1 169 11 is_stmt 0 view .LVU942
 3429 0e7a 0024     		movs	r4, #0
 3430 0e7c FFF79EBA 		b	.L67
 3431              	.LVL440:
 3432              	.L75:
 620:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_DRVSTATUS(motor), TMC5031_SG_RESULT_MASK, TMC5031_SG_
 3433              		.loc 1 620 3 is_stmt 1 view .LVU943
 620:boards/TMC5031_eval.c **** 			*value = TMC5031_FIELD_READ(motor, TMC5031_DRVSTATUS(motor), TMC5031_SG_RESULT_MASK, TMC5031_SG_
 3434              		.loc 1 620 5 is_stmt 0 view .LVU944
 3435 0e80 002C     		cmp	r4, #0
 3436 0e82 40F09780 		bne	.L212
 621:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3437              		.loc 1 621 4 is_stmt 1 view .LVU945
 621:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3438              		.loc 1 621 13 is_stmt 0 view .LVU946
 3439 0e86 2901     		lsls	r1, r5, #4
 3440              	.LVL441:
 621:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3441              		.loc 1 621 13 view .LVU947
 3442 0e88 41F06F01 		orr	r1, r1, #111
 3443 0e8c C9B2     		uxtb	r1, r1
 3444 0e8e 2846     		mov	r0, r5
 3445              	.LVL442:
 621:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3446              		.loc 1 621 13 view .LVU948
 3447 0e90 FFF7FEFF 		bl	tmc5031_readInt
 3448              	.LVL443:
 3449 0e94 C0F30900 		ubfx	r0, r0, #0, #10
 621:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3450              		.loc 1 621 11 view .LVU949
 3451 0e98 3060     		str	r0, [r6]
 3452 0e9a FFF78FBA 		b	.L67
 3453              	.LVL444:
 3454              	.L74:
 628:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_XENC(motor));
 3455              		.loc 1 628 3 is_stmt 1 view .LVU950
 3456 0e9e 2021     		movs	r1, #32
 3457              	.LVL445:
 628:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_XENC(motor));
 3458              		.loc 1 628 3 is_stmt 0 view .LVU951
 3459 0ea0 A940     		lsls	r1, r1, r5
 3460 0ea2 41F01901 		orr	r1, r1, #25
 3461 0ea6 C9B2     		uxtb	r1, r1
 628:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_XENC(motor));
 3462              		.loc 1 628 5 view .LVU952
 3463 0ea8 2CB9     		cbnz	r4, .L190
 629:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3464              		.loc 1 629 4 is_stmt 1 view .LVU953
 629:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3465              		.loc 1 629 13 is_stmt 0 view .LVU954
 3466 0eaa 2846     		mov	r0, r5
 3467              	.LVL446:
 629:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3468              		.loc 1 629 13 view .LVU955
 3469 0eac FFF7FEFF 		bl	tmc5031_readInt
 3470              	.LVL447:
 629:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3471              		.loc 1 629 11 view .LVU956
 3472 0eb0 3060     		str	r0, [r6]
 3473 0eb2 FFF783BA 		b	.L67
 3474              	.LVL448:
 3475              	.L190:
 630:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_XENC(motor),*value);
 3476              		.loc 1 630 10 is_stmt 1 view .LVU957
 631:boards/TMC5031_eval.c **** 		}
 3477              		.loc 1 631 4 view .LVU958
 3478 0eb6 3268     		ldr	r2, [r6]
 3479 0eb8 2846     		mov	r0, r5
 3480              	.LVL449:
 631:boards/TMC5031_eval.c **** 		}
 3481              		.loc 1 631 4 is_stmt 0 view .LVU959
 3482 0eba FFF7FEFF 		bl	tmc5031_writeInt
 3483              	.LVL450:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3484              		.loc 1 169 11 view .LVU960
 3485 0ebe 0024     		movs	r4, #0
 3486 0ec0 FFF77CBA 		b	.L67
 3487              	.LVL451:
 3488              	.L73:
 636:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_ENC_CONST(motor));
 3489              		.loc 1 636 3 is_stmt 1 view .LVU961
 3490 0ec4 2021     		movs	r1, #32
 3491              	.LVL452:
 636:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_ENC_CONST(motor));
 3492              		.loc 1 636 3 is_stmt 0 view .LVU962
 3493 0ec6 A940     		lsls	r1, r1, r5
 3494 0ec8 41F01A01 		orr	r1, r1, #26
 3495 0ecc C9B2     		uxtb	r1, r1
 636:boards/TMC5031_eval.c **** 			*value = tmc5031_readInt(motor, TMC5031_ENC_CONST(motor));
 3496              		.loc 1 636 5 view .LVU963
 3497 0ece 2CB9     		cbnz	r4, .L191
 637:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3498              		.loc 1 637 4 is_stmt 1 view .LVU964
 637:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3499              		.loc 1 637 13 is_stmt 0 view .LVU965
 3500 0ed0 2846     		mov	r0, r5
 3501              	.LVL453:
 637:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3502              		.loc 1 637 13 view .LVU966
 3503 0ed2 FFF7FEFF 		bl	tmc5031_readInt
 3504              	.LVL454:
 637:boards/TMC5031_eval.c **** 		} else if(readWrite == WRITE) {
 3505              		.loc 1 637 11 view .LVU967
 3506 0ed6 3060     		str	r0, [r6]
 3507 0ed8 FFF770BA 		b	.L67
 3508              	.LVL455:
 3509              	.L191:
 638:boards/TMC5031_eval.c **** 			tmc5031_writeInt(motor, TMC5031_ENC_CONST(motor),*value);
 3510              		.loc 1 638 10 is_stmt 1 view .LVU968
 639:boards/TMC5031_eval.c **** 		}
 3511              		.loc 1 639 4 view .LVU969
 3512 0edc 3268     		ldr	r2, [r6]
 3513 0ede 2846     		mov	r0, r5
 3514              	.LVL456:
 639:boards/TMC5031_eval.c **** 		}
 3515              		.loc 1 639 4 is_stmt 0 view .LVU970
 3516 0ee0 FFF7FEFF 		bl	tmc5031_writeInt
 3517              	.LVL457:
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3518              		.loc 1 169 11 view .LVU971
 3519 0ee4 0024     		movs	r4, #0
 3520 0ee6 FFF769BA 		b	.L67
 3521              	.LVL458:
 3522              	.L71:
 643:boards/TMC5031_eval.c **** 			// encoder enable
 3523              		.loc 1 643 3 is_stmt 1 view .LVU972
 643:boards/TMC5031_eval.c **** 			// encoder enable
 3524              		.loc 1 643 5 is_stmt 0 view .LVU973
 3525 0eea D4B9     		cbnz	r4, .L192
 645:boards/TMC5031_eval.c **** 			{
 3526              		.loc 1 645 4 is_stmt 1 view .LVU974
 3527 0eec 012D     		cmp	r5, #1
 653:boards/TMC5031_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 3528              		.loc 1 653 17 is_stmt 0 view .LVU975
 3529 0eee 2146     		mov	r1, r4
 3530              	.LVL459:
 653:boards/TMC5031_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 3531              		.loc 1 653 17 view .LVU976
 3532 0ef0 0BD0     		beq	.L193
 648:boards/TMC5031_eval.c **** 				tempValue &= (1<<3) | (1<<4);
 3533              		.loc 1 648 5 is_stmt 1 view .LVU977
 648:boards/TMC5031_eval.c **** 				tempValue &= (1<<3) | (1<<4);
 3534              		.loc 1 648 17 is_stmt 0 view .LVU978
 3535 0ef2 2046     		mov	r0, r4
 3536              	.LVL460:
 648:boards/TMC5031_eval.c **** 				tempValue &= (1<<3) | (1<<4);
 3537              		.loc 1 648 17 view .LVU979
 3538 0ef4 FFF7FEFF 		bl	tmc5031_readInt
 3539              	.LVL461:
 649:boards/TMC5031_eval.c **** 				*value = (tempValue == (1<<4))? 1 : 0;
 3540              		.loc 1 649 5 is_stmt 1 view .LVU980
 650:boards/TMC5031_eval.c **** 				break;
 3541              		.loc 1 650 5 view .LVU981
 649:boards/TMC5031_eval.c **** 				*value = (tempValue == (1<<4))? 1 : 0;
 3542              		.loc 1 649 15 is_stmt 0 view .LVU982
 3543 0ef8 00F01800 		and	r0, r0, #24
 3544              	.LVL462:
 650:boards/TMC5031_eval.c **** 				break;
 3545              		.loc 1 650 39 view .LVU983
 3546 0efc A0F11002 		sub	r2, r0, #16
 3547 0f00 5042     		rsbs	r0, r2, #0
 3548              	.LVL463:
 650:boards/TMC5031_eval.c **** 				break;
 3549              		.loc 1 650 39 view .LVU984
 3550 0f02 5041     		adcs	r0, r0, r2
 650:boards/TMC5031_eval.c **** 				break;
 3551              		.loc 1 650 12 view .LVU985
 3552 0f04 3060     		str	r0, [r6]
 651:boards/TMC5031_eval.c **** 			case 1:
 3553              		.loc 1 651 5 is_stmt 1 view .LVU986
 3554 0f06 FFF759BA 		b	.L67
 3555              	.LVL464:
 3556              	.L193:
 653:boards/TMC5031_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 3557              		.loc 1 653 5 view .LVU987
 653:boards/TMC5031_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 3558              		.loc 1 653 17 is_stmt 0 view .LVU988
 3559 0f0a 2846     		mov	r0, r5
 3560              	.LVL465:
 653:boards/TMC5031_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 3561              		.loc 1 653 17 view .LVU989
 3562 0f0c FFF7FEFF 		bl	tmc5031_readInt
 3563              	.LVL466:
 654:boards/TMC5031_eval.c **** 				*value = (tempValue == ((1<<5) | (0<<6)))? 1 : 0;
 3564              		.loc 1 654 5 is_stmt 1 view .LVU990
 655:boards/TMC5031_eval.c **** 				break;
 3565              		.loc 1 655 5 view .LVU991
 654:boards/TMC5031_eval.c **** 				*value = (tempValue == ((1<<5) | (0<<6)))? 1 : 0;
 3566              		.loc 1 654 15 is_stmt 0 view .LVU992
 3567 0f10 00F06000 		and	r0, r0, #96
 3568              	.LVL467:
 655:boards/TMC5031_eval.c **** 				break;
 3569              		.loc 1 655 50 view .LVU993
 3570 0f14 A0F12003 		sub	r3, r0, #32
 3571 0f18 5842     		rsbs	r0, r3, #0
 3572              	.LVL468:
 655:boards/TMC5031_eval.c **** 				break;
 3573              		.loc 1 655 50 view .LVU994
 3574 0f1a 5841     		adcs	r0, r0, r3
 655:boards/TMC5031_eval.c **** 				break;
 3575              		.loc 1 655 12 view .LVU995
 3576 0f1c 3060     		str	r0, [r6]
 656:boards/TMC5031_eval.c **** 			}
 3577              		.loc 1 656 5 is_stmt 1 view .LVU996
 3578 0f1e FFF74DBA 		b	.L67
 3579              	.LVL469:
 3580              	.L192:
 658:boards/TMC5031_eval.c **** 			// encoder enable
 3581              		.loc 1 658 10 view .LVU997
 660:boards/TMC5031_eval.c **** 			{
 3582              		.loc 1 660 4 view .LVU998
 3583 0f22 012D     		cmp	r5, #1
 669:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue | (1<<5) : tempValue &~ (1<<5);  // enc2_enable -> ENCODER2 A,
 3584              		.loc 1 669 17 is_stmt 0 view .LVU999
 3585 0f24 4FF00001 		mov	r1, #0
 3586              	.LVL470:
 669:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue | (1<<5) : tempValue &~ (1<<5);  // enc2_enable -> ENCODER2 A,
 3587              		.loc 1 669 17 view .LVU1000
 3588 0f28 14D0     		beq	.L194
 663:boards/TMC5031_eval.c **** 				tempValue = (*value)? tempValue & ~(1<<3) : tempValue | (1<<3);  // poscmp_enable -> ENCODER1 A
 3589              		.loc 1 663 5 is_stmt 1 view .LVU1001
 663:boards/TMC5031_eval.c **** 				tempValue = (*value)? tempValue & ~(1<<3) : tempValue | (1<<3);  // poscmp_enable -> ENCODER1 A
 3590              		.loc 1 663 17 is_stmt 0 view .LVU1002
 3591 0f2a 0846     		mov	r0, r1
 3592              	.LVL471:
 663:boards/TMC5031_eval.c **** 				tempValue = (*value)? tempValue & ~(1<<3) : tempValue | (1<<3);  // poscmp_enable -> ENCODER1 A
 3593              		.loc 1 663 17 view .LVU1003
 3594 0f2c FFF7FEFF 		bl	tmc5031_readInt
 3595              	.LVL472:
 664:boards/TMC5031_eval.c **** 				tempValue = (*value)? tempValue | (1<<4) : tempValue &~ (1<<4);  // enc1_refsel -> ENCODER1 N t
 3596              		.loc 1 664 5 is_stmt 1 view .LVU1004
 664:boards/TMC5031_eval.c **** 				tempValue = (*value)? tempValue | (1<<4) : tempValue &~ (1<<4);  // enc1_refsel -> ENCODER1 N t
 3597              		.loc 1 664 47 is_stmt 0 view .LVU1005
 3598 0f30 3368     		ldr	r3, [r6]
 3599 0f32 53B1     		cbz	r3, .L195
 3600              	.LVL473:
 665:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 3601              		.loc 1 665 5 is_stmt 1 discriminator 1 view .LVU1006
 664:boards/TMC5031_eval.c **** 				tempValue = (*value)? tempValue | (1<<4) : tempValue &~ (1<<4);  // enc1_refsel -> ENCODER1 N t
 3602              		.loc 1 664 47 is_stmt 0 discriminator 1 view .LVU1007
 3603 0f34 20F00802 		bic	r2, r0, #8
 3604              	.LVL474:
 665:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 3605              		.loc 1 665 46 discriminator 1 view .LVU1008
 3606 0f38 42F01002 		orr	r2, r2, #16
 3607              	.LVL475:
 3608              	.L196:
 666:boards/TMC5031_eval.c **** 				break;
 3609              		.loc 1 666 5 is_stmt 1 discriminator 4 view .LVU1009
 3610 0f3c 0021     		movs	r1, #0
 3611 0f3e 0846     		mov	r0, r1
 3612 0f40 FFF7FEFF 		bl	tmc5031_writeInt
 3613              	.LVL476:
 667:boards/TMC5031_eval.c **** 			case 1:		// enable ENCODER2 - disable REF
 3614              		.loc 1 667 5 discriminator 4 view .LVU1010
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3615              		.loc 1 169 11 is_stmt 0 discriminator 4 view .LVU1011
 3616 0f44 0024     		movs	r4, #0
 667:boards/TMC5031_eval.c **** 			case 1:		// enable ENCODER2 - disable REF
 3617              		.loc 1 667 5 discriminator 4 view .LVU1012
 3618 0f46 FFF739BA 		b	.L67
 3619              	.LVL477:
 3620              	.L195:
 665:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 3621              		.loc 1 665 5 is_stmt 1 discriminator 2 view .LVU1013
 665:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 3622              		.loc 1 665 46 is_stmt 0 discriminator 2 view .LVU1014
 3623 0f4a 20F01002 		bic	r2, r0, #16
 3624 0f4e 42F00802 		orr	r2, r2, #8
 3625 0f52 F3E7     		b	.L196
 3626              	.LVL478:
 3627              	.L194:
 669:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue | (1<<5) : tempValue &~ (1<<5);  // enc2_enable -> ENCODER2 A,
 3628              		.loc 1 669 5 is_stmt 1 view .LVU1015
 669:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue | (1<<5) : tempValue &~ (1<<5);  // enc2_enable -> ENCODER2 A,
 3629              		.loc 1 669 17 is_stmt 0 view .LVU1016
 3630 0f54 2846     		mov	r0, r5
 3631              	.LVL479:
 669:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue | (1<<5) : tempValue &~ (1<<5);  // enc2_enable -> ENCODER2 A,
 3632              		.loc 1 669 17 view .LVU1017
 3633 0f56 FFF7FEFF 		bl	tmc5031_readInt
 3634              	.LVL480:
 670:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue &~ (1<<6) : tempValue | (1<<6);  // enc2_refse2 -> ENCODER1 N 
 3635              		.loc 1 670 5 is_stmt 1 view .LVU1018
 670:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue &~ (1<<6) : tempValue | (1<<6);  // enc2_refse2 -> ENCODER1 N 
 3636              		.loc 1 670 47 is_stmt 0 view .LVU1019
 3637 0f5a 3368     		ldr	r3, [r6]
 3638 0f5c 53B1     		cbz	r3, .L197
 3639              	.LVL481:
 671:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 3640              		.loc 1 671 5 is_stmt 1 discriminator 1 view .LVU1020
 671:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 3641              		.loc 1 671 48 is_stmt 0 discriminator 1 view .LVU1021
 3642 0f5e 20F04002 		bic	r2, r0, #64
 3643 0f62 42F02002 		orr	r2, r2, #32
 3644              	.LVL482:
 3645              	.L198:
 672:boards/TMC5031_eval.c **** 				break;
 3646              		.loc 1 672 5 is_stmt 1 discriminator 4 view .LVU1022
 3647 0f66 0021     		movs	r1, #0
 3648 0f68 0120     		movs	r0, #1
 3649 0f6a FFF7FEFF 		bl	tmc5031_writeInt
 3650              	.LVL483:
 673:boards/TMC5031_eval.c **** 			}
 3651              		.loc 1 673 5 discriminator 4 view .LVU1023
 169:boards/TMC5031_eval.c **** 	int tempValue;
 3652              		.loc 1 169 11 is_stmt 0 discriminator 4 view .LVU1024
 3653 0f6e 0024     		movs	r4, #0
 673:boards/TMC5031_eval.c **** 			}
 3654              		.loc 1 673 5 discriminator 4 view .LVU1025
 3655 0f70 FFF724BA 		b	.L67
 3656              	.LVL484:
 3657              	.L197:
 671:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 3658              		.loc 1 671 5 is_stmt 1 discriminator 2 view .LVU1026
 670:boards/TMC5031_eval.c **** 				tempValue = (*value) ? tempValue &~ (1<<6) : tempValue | (1<<6);  // enc2_refse2 -> ENCODER1 N 
 3659              		.loc 1 670 47 is_stmt 0 discriminator 2 view .LVU1027
 3660 0f74 20F02002 		bic	r2, r0, #32
 3661              	.LVL485:
 671:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 3662              		.loc 1 671 48 discriminator 2 view .LVU1028
 3663 0f78 42F04002 		orr	r2, r2, #64
 3664              	.LVL486:
 671:boards/TMC5031_eval.c **** 				tmc5031_writeInt(motor, TMC5031_GCONF, tempValue);
 3665              		.loc 1 671 48 discriminator 2 view .LVU1029
 3666 0f7c F3E7     		b	.L198
 3667              	.LVL487:
 3668              	.L199:
 173:boards/TMC5031_eval.c **** 
 3669              		.loc 1 173 10 view .LVU1030
 3670 0f7e 0824     		movs	r4, #8
 3671 0f80 FFF71CBA 		b	.L67
 3672              	.LVL488:
 3673              	.L200:
 175:boards/TMC5031_eval.c **** 	{
 3674              		.loc 1 175 2 view .LVU1031
 3675 0f84 0424     		movs	r4, #4
 3676 0f86 FFF719BA 		b	.L67
 3677              	.LVL489:
 3678              	.L201:
 175:boards/TMC5031_eval.c **** 	{
 3679              		.loc 1 175 2 view .LVU1032
 3680 0f8a 0424     		movs	r4, #4
 3681 0f8c FFF716BA 		b	.L67
 3682              	.L202:
 209:boards/TMC5031_eval.c **** 		}
 3683              		.loc 1 209 11 view .LVU1033
 3684 0f90 0424     		movs	r4, #4
 3685 0f92 FFF713BA 		b	.L67
 3686              	.L204:
 3687 0f96 0424     		movs	r4, #4
 3688 0f98 FFF710BA 		b	.L67
 3689              	.L205:
 3690 0f9c 0424     		movs	r4, #4
 3691 0f9e FFF70DBA 		b	.L67
 3692              	.L206:
 3693 0fa2 0424     		movs	r4, #4
 3694 0fa4 FFF70ABA 		b	.L67
 3695              	.L208:
 3696 0fa8 0424     		movs	r4, #4
 3697 0faa FFF707BA 		b	.L67
 3698              	.LVL490:
 3699              	.L210:
 209:boards/TMC5031_eval.c **** 		}
 3700              		.loc 1 209 11 view .LVU1034
 3701 0fae 0424     		movs	r4, #4
 3702 0fb0 FFF704BA 		b	.L67
 3703              	.L212:
 3704 0fb4 0424     		movs	r4, #4
 3705              	.LVL491:
 209:boards/TMC5031_eval.c **** 		}
 3706              		.loc 1 209 11 view .LVU1035
 3707 0fb6 FFF701BA 		b	.L67
 3708              		.cfi_endproc
 3709              	.LFE10:
 3711              		.align	1
 3712              		.syntax unified
 3713              		.thumb
 3714              		.thumb_func
 3715              		.fpu softvfp
 3717              	SAP:
 3718              	.LVL492:
 3719              	.LFB11:
 686:boards/TMC5031_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3720              		.loc 1 686 1 is_stmt 1 view -0
 3721              		.cfi_startproc
 3722              		@ args = 0, pretend = 0, frame = 8
 3723              		@ frame_needed = 0, uses_anonymous_args = 0
 687:boards/TMC5031_eval.c **** }
 3724              		.loc 1 687 2 view .LVU1037
 686:boards/TMC5031_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3725              		.loc 1 686 1 is_stmt 0 view .LVU1038
 3726 0fba 07B5     		push	{r0, r1, r2, lr}
 3727              	.LCFI19:
 3728              		.cfi_def_cfa_offset 16
 3729              		.cfi_offset 14, -4
 686:boards/TMC5031_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3730              		.loc 1 686 1 view .LVU1039
 3731 0fbc 0192     		str	r2, [sp, #4]
 687:boards/TMC5031_eval.c **** }
 3732              		.loc 1 687 9 view .LVU1040
 3733 0fbe 01AB     		add	r3, sp, #4
 3734 0fc0 0246     		mov	r2, r0
 3735              	.LVL493:
 687:boards/TMC5031_eval.c **** }
 3736              		.loc 1 687 9 view .LVU1041
 3737 0fc2 0120     		movs	r0, #1
 3738              	.LVL494:
 687:boards/TMC5031_eval.c **** }
 3739              		.loc 1 687 9 view .LVU1042
 3740 0fc4 FFF7EAF9 		bl	handleParameter
 3741              	.LVL495:
 688:boards/TMC5031_eval.c **** 
 3742              		.loc 1 688 1 view .LVU1043
 3743 0fc8 03B0     		add	sp, sp, #12
 3744              	.LCFI20:
 3745              		.cfi_def_cfa_offset 4
 3746              		@ sp needed
 3747 0fca 5DF804FB 		ldr	pc, [sp], #4
 3748              		.cfi_endproc
 3749              	.LFE11:
 3751              		.align	1
 3752              		.syntax unified
 3753              		.thumb
 3754              		.thumb_func
 3755              		.fpu softvfp
 3757              	GAP:
 3758              	.LVL496:
 3759              	.LFB12:
 691:boards/TMC5031_eval.c **** 	return handleParameter(READ, motor, type, value);
 3760              		.loc 1 691 1 is_stmt 1 view -0
 3761              		.cfi_startproc
 3762              		@ args = 0, pretend = 0, frame = 0
 3763              		@ frame_needed = 0, uses_anonymous_args = 0
 3764              		@ link register save eliminated.
 692:boards/TMC5031_eval.c **** }
 3765              		.loc 1 692 2 view .LVU1045
 691:boards/TMC5031_eval.c **** 	return handleParameter(READ, motor, type, value);
 3766              		.loc 1 691 1 is_stmt 0 view .LVU1046
 3767 0fce 1346     		mov	r3, r2
 692:boards/TMC5031_eval.c **** }
 3768              		.loc 1 692 9 view .LVU1047
 3769 0fd0 0246     		mov	r2, r0
 3770              	.LVL497:
 692:boards/TMC5031_eval.c **** }
 3771              		.loc 1 692 9 view .LVU1048
 3772 0fd2 0020     		movs	r0, #0
 3773              	.LVL498:
 692:boards/TMC5031_eval.c **** }
 3774              		.loc 1 692 9 view .LVU1049
 3775 0fd4 FFF7E2B9 		b	handleParameter
 3776              	.LVL499:
 692:boards/TMC5031_eval.c **** }
 3777              		.loc 1 692 9 view .LVU1050
 3778              		.cfi_endproc
 3779              	.LFE12:
 3781              		.align	1
 3782              		.syntax unified
 3783              		.thumb
 3784              		.thumb_func
 3785              		.fpu softvfp
 3787              	reset:
 3788              	.LFB20:
 773:boards/TMC5031_eval.c **** 	for(uint8_t motor = 0; motor < MOTORS; motor++)
 3789              		.loc 1 773 1 is_stmt 1 view -0
 3790              		.cfi_startproc
 3791              		@ args = 0, pretend = 0, frame = 0
 3792              		@ frame_needed = 0, uses_anonymous_args = 0
 774:boards/TMC5031_eval.c **** 		if(tmc5031_readInt(motor, TMC5031_VACTUAL(motor)) != 0)
 3793              		.loc 1 774 2 view .LVU1052
 3794              	.LBB22:
 774:boards/TMC5031_eval.c **** 		if(tmc5031_readInt(motor, TMC5031_VACTUAL(motor)) != 0)
 3795              		.loc 1 774 6 view .LVU1053
 3796              	.LVL500:
 774:boards/TMC5031_eval.c **** 		if(tmc5031_readInt(motor, TMC5031_VACTUAL(motor)) != 0)
 3797              		.loc 1 774 25 view .LVU1054
 775:boards/TMC5031_eval.c **** 			return 0;
 3798              		.loc 1 775 3 view .LVU1055
 3799              	.LBE22:
 773:boards/TMC5031_eval.c **** 	for(uint8_t motor = 0; motor < MOTORS; motor++)
 3800              		.loc 1 773 1 is_stmt 0 view .LVU1056
 3801 0fd8 08B5     		push	{r3, lr}
 3802              	.LCFI21:
 3803              		.cfi_def_cfa_offset 8
 3804              		.cfi_offset 3, -8
 3805              		.cfi_offset 14, -4
 3806              	.LBB23:
 775:boards/TMC5031_eval.c **** 			return 0;
 3807              		.loc 1 775 6 view .LVU1057
 3808 0fda 2221     		movs	r1, #34
 3809 0fdc 0020     		movs	r0, #0
 3810 0fde FFF7FEFF 		bl	tmc5031_readInt
 3811              	.LVL501:
 775:boards/TMC5031_eval.c **** 			return 0;
 3812              		.loc 1 775 5 view .LVU1058
 3813 0fe2 50B9     		cbnz	r0, .L223
 774:boards/TMC5031_eval.c **** 		if(tmc5031_readInt(motor, TMC5031_VACTUAL(motor)) != 0)
 3814              		.loc 1 774 41 is_stmt 1 view .LVU1059
 3815              	.LVL502:
 774:boards/TMC5031_eval.c **** 		if(tmc5031_readInt(motor, TMC5031_VACTUAL(motor)) != 0)
 3816              		.loc 1 774 25 view .LVU1060
 775:boards/TMC5031_eval.c **** 			return 0;
 3817              		.loc 1 775 3 view .LVU1061
 775:boards/TMC5031_eval.c **** 			return 0;
 3818              		.loc 1 775 6 is_stmt 0 view .LVU1062
 3819 0fe4 4221     		movs	r1, #66
 3820 0fe6 0120     		movs	r0, #1
 3821 0fe8 FFF7FEFF 		bl	tmc5031_readInt
 3822              	.LVL503:
 775:boards/TMC5031_eval.c **** 			return 0;
 3823              		.loc 1 775 5 view .LVU1063
 3824 0fec 28B9     		cbnz	r0, .L223
 774:boards/TMC5031_eval.c **** 		if(tmc5031_readInt(motor, TMC5031_VACTUAL(motor)) != 0)
 3825              		.loc 1 774 41 is_stmt 1 view .LVU1064
 3826              	.LVL504:
 774:boards/TMC5031_eval.c **** 		if(tmc5031_readInt(motor, TMC5031_VACTUAL(motor)) != 0)
 3827              		.loc 1 774 25 view .LVU1065
 3828              	.LBE23:
 778:boards/TMC5031_eval.c **** }
 3829              		.loc 1 778 2 view .LVU1066
 778:boards/TMC5031_eval.c **** }
 3830              		.loc 1 778 9 is_stmt 0 view .LVU1067
 3831 0fee 044B     		ldr	r3, .L225
 3832 0ff0 1868     		ldr	r0, [r3]
 779:boards/TMC5031_eval.c **** 
 3833              		.loc 1 779 1 view .LVU1068
 3834 0ff2 BDE80840 		pop	{r3, lr}
 3835              	.LCFI22:
 3836              		.cfi_remember_state
 3837              		.cfi_restore 14
 3838              		.cfi_restore 3
 3839              		.cfi_def_cfa_offset 0
 778:boards/TMC5031_eval.c **** }
 3840              		.loc 1 778 9 view .LVU1069
 3841 0ff6 FFF7FEBF 		b	tmc5031_reset
 3842              	.LVL505:
 3843              	.L223:
 3844              	.LCFI23:
 3845              		.cfi_restore_state
 779:boards/TMC5031_eval.c **** 
 3846              		.loc 1 779 1 view .LVU1070
 3847 0ffa 0020     		movs	r0, #0
 3848 0ffc 08BD     		pop	{r3, pc}
 3849              	.L226:
 3850 0ffe 00BF     		.align	2
 3851              	.L225:
 3852 1000 00000000 		.word	.LANCHOR0
 3853              		.cfi_endproc
 3854              	.LFE20:
 3856              		.align	1
 3857              		.global	TMC5031_init
 3858              		.syntax unified
 3859              		.thumb
 3860              		.thumb_func
 3861              		.fpu softvfp
 3863              	TMC5031_init:
 3864              	.LFB23:
 796:boards/TMC5031_eval.c **** 
 797:boards/TMC5031_eval.c **** void TMC5031_init(void)
 798:boards/TMC5031_eval.c **** {
 3865              		.loc 1 798 1 is_stmt 1 view -0
 3866              		.cfi_startproc
 3867              		@ args = 0, pretend = 0, frame = 0
 3868              		@ frame_needed = 0, uses_anonymous_args = 0
 799:boards/TMC5031_eval.c **** 	tmc5031_initConfig(&TMC5031);
 3869              		.loc 1 799 2 view .LVU1072
 798:boards/TMC5031_eval.c **** 	tmc5031_initConfig(&TMC5031);
 3870              		.loc 1 798 1 is_stmt 0 view .LVU1073
 3871 1004 70B5     		push	{r4, r5, r6, lr}
 3872              	.LCFI24:
 3873              		.cfi_def_cfa_offset 16
 3874              		.cfi_offset 4, -16
 3875              		.cfi_offset 5, -12
 3876              		.cfi_offset 6, -8
 3877              		.cfi_offset 14, -4
 3878              		.loc 1 799 2 view .LVU1074
 3879 1006 424C     		ldr	r4, .L228
 800:boards/TMC5031_eval.c **** 
 801:boards/TMC5031_eval.c **** 	Pins.DRV_ENN   = &HAL.IOs->pins->DIO0;
 3880              		.loc 1 801 23 view .LVU1075
 3881 1008 424E     		ldr	r6, .L228+4
 799:boards/TMC5031_eval.c **** 
 3882              		.loc 1 799 2 view .LVU1076
 3883 100a 201D     		adds	r0, r4, #4
 3884 100c FFF7FEFF 		bl	tmc5031_initConfig
 3885              	.LVL506:
 3886              		.loc 1 801 2 is_stmt 1 view .LVU1077
 3887              		.loc 1 801 23 is_stmt 0 view .LVU1078
 3888 1010 F568     		ldr	r5, [r6, #12]
 3889              		.loc 1 801 27 view .LVU1079
 3890 1012 6B68     		ldr	r3, [r5, #4]
 802:boards/TMC5031_eval.c **** 	Pins.INT_ENCA  = &HAL.IOs->pins->DIO5;
 3891              		.loc 1 802 19 view .LVU1080
 3892 1014 03F58472 		add	r2, r3, #264
 3893              		.loc 1 802 17 view .LVU1081
 3894 1018 C4F8A022 		str	r2, [r4, #672]
 803:boards/TMC5031_eval.c **** 	Pins.PP_ENCB   = &HAL.IOs->pins->DIO6;
 3895              		.loc 1 803 19 view .LVU1082
 3896 101c 03F59472 		add	r2, r3, #296
 3897              		.loc 1 803 17 view .LVU1083
 3898 1020 C4F8A422 		str	r2, [r4, #676]
 804:boards/TMC5031_eval.c **** 	Pins.SWSEL     = &HAL.IOs->pins->DIO16;
 3899              		.loc 1 804 19 view .LVU1084
 3900 1024 03F57272 		add	r2, r3, #968
 3901              		.loc 1 804 17 view .LVU1085
 3902 1028 C4F8A822 		str	r2, [r4, #680]
 805:boards/TMC5031_eval.c **** 	Pins.SWIOP1    = &HAL.IOs->pins->DIO17;
 3903              		.loc 1 805 19 view .LVU1086
 3904 102c 03F57A72 		add	r2, r3, #1000
 801:boards/TMC5031_eval.c **** 	Pins.INT_ENCA  = &HAL.IOs->pins->DIO5;
 3905              		.loc 1 801 19 view .LVU1087
 3906 1030 03F16800 		add	r0, r3, #104
 3907              		.loc 1 805 17 view .LVU1088
 3908 1034 C4F8AC22 		str	r2, [r4, #684]
 806:boards/TMC5031_eval.c **** 	Pins.SWIOP2    = &HAL.IOs->pins->DIO18;
 3909              		.loc 1 806 19 view .LVU1089
 3910 1038 03F58162 		add	r2, r3, #1032
 807:boards/TMC5031_eval.c **** 	Pins.SWION     = &HAL.IOs->pins->DIO19;
 3911              		.loc 1 807 19 view .LVU1090
 3912 103c 03F58563 		add	r3, r3, #1064
 3913              		.loc 1 807 17 view .LVU1091
 3914 1040 C4F8B432 		str	r3, [r4, #692]
 808:boards/TMC5031_eval.c **** 
 809:boards/TMC5031_eval.c **** 	HAL.IOs->config->toOutput(Pins.DRV_ENN);
 3915              		.loc 1 809 17 view .LVU1092
 3916 1044 2B68     		ldr	r3, [r5]
 806:boards/TMC5031_eval.c **** 	Pins.SWION     = &HAL.IOs->pins->DIO19;
 3917              		.loc 1 806 17 view .LVU1093
 3918 1046 C4F8B022 		str	r2, [r4, #688]
 3919              		.loc 1 809 2 view .LVU1094
 3920 104a DB68     		ldr	r3, [r3, #12]
 801:boards/TMC5031_eval.c **** 	Pins.INT_ENCA  = &HAL.IOs->pins->DIO5;
 3921              		.loc 1 801 17 view .LVU1095
 3922 104c C4F89C02 		str	r0, [r4, #668]
 802:boards/TMC5031_eval.c **** 	Pins.PP_ENCB   = &HAL.IOs->pins->DIO6;
 3923              		.loc 1 802 2 is_stmt 1 view .LVU1096
 803:boards/TMC5031_eval.c **** 	Pins.SWSEL     = &HAL.IOs->pins->DIO16;
 3924              		.loc 1 803 2 view .LVU1097
 804:boards/TMC5031_eval.c **** 	Pins.SWIOP1    = &HAL.IOs->pins->DIO17;
 3925              		.loc 1 804 2 view .LVU1098
 805:boards/TMC5031_eval.c **** 	Pins.SWIOP2    = &HAL.IOs->pins->DIO18;
 3926              		.loc 1 805 2 view .LVU1099
 806:boards/TMC5031_eval.c **** 	Pins.SWION     = &HAL.IOs->pins->DIO19;
 3927              		.loc 1 806 2 view .LVU1100
 807:boards/TMC5031_eval.c **** 
 3928              		.loc 1 807 2 view .LVU1101
 3929              		.loc 1 809 2 view .LVU1102
 3930 1050 9847     		blx	r3
 3931              	.LVL507:
 810:boards/TMC5031_eval.c **** 	HAL.IOs->config->toOutput(Pins.SWSEL);
 3932              		.loc 1 810 2 view .LVU1103
 3933              		.loc 1 810 17 is_stmt 0 view .LVU1104
 3934 1052 2B68     		ldr	r3, [r5]
 3935              		.loc 1 810 2 view .LVU1105
 3936 1054 D4F8A802 		ldr	r0, [r4, #680]
 3937 1058 DB68     		ldr	r3, [r3, #12]
 3938 105a 9847     		blx	r3
 3939              	.LVL508:
 811:boards/TMC5031_eval.c **** 
 812:boards/TMC5031_eval.c **** 	HAL.IOs->config->setLow(Pins.SWSEL);
 3940              		.loc 1 812 2 is_stmt 1 view .LVU1106
 3941              		.loc 1 812 17 is_stmt 0 view .LVU1107
 3942 105c 2B68     		ldr	r3, [r5]
 3943              		.loc 1 812 2 view .LVU1108
 3944 105e D4F8A802 		ldr	r0, [r4, #680]
 3945 1062 9B69     		ldr	r3, [r3, #24]
 3946 1064 9847     		blx	r3
 3947              	.LVL509:
 813:boards/TMC5031_eval.c **** 
 814:boards/TMC5031_eval.c **** 	HAL.IOs->config->toInput(Pins.INT_ENCA);
 3948              		.loc 1 814 2 is_stmt 1 view .LVU1109
 3949              		.loc 1 814 17 is_stmt 0 view .LVU1110
 3950 1066 2B68     		ldr	r3, [r5]
 3951              		.loc 1 814 2 view .LVU1111
 3952 1068 D4F8A002 		ldr	r0, [r4, #672]
 3953 106c 1B69     		ldr	r3, [r3, #16]
 3954 106e 9847     		blx	r3
 3955              	.LVL510:
 815:boards/TMC5031_eval.c **** 	HAL.IOs->config->toInput(Pins.PP_ENCB);
 3956              		.loc 1 815 2 is_stmt 1 view .LVU1112
 3957              		.loc 1 815 17 is_stmt 0 view .LVU1113
 3958 1070 2B68     		ldr	r3, [r5]
 3959              		.loc 1 815 2 view .LVU1114
 3960 1072 D4F8A402 		ldr	r0, [r4, #676]
 3961 1076 1B69     		ldr	r3, [r3, #16]
 3962 1078 9847     		blx	r3
 3963              	.LVL511:
 816:boards/TMC5031_eval.c **** 	HAL.IOs->config->toInput(Pins.SWION);
 3964              		.loc 1 816 2 is_stmt 1 view .LVU1115
 3965              		.loc 1 816 17 is_stmt 0 view .LVU1116
 3966 107a 2B68     		ldr	r3, [r5]
 3967              		.loc 1 816 2 view .LVU1117
 3968 107c D4F8B402 		ldr	r0, [r4, #692]
 3969 1080 1B69     		ldr	r3, [r3, #16]
 3970 1082 9847     		blx	r3
 3971              	.LVL512:
 817:boards/TMC5031_eval.c **** 	HAL.IOs->config->toInput(Pins.SWIOP1);
 3972              		.loc 1 817 2 is_stmt 1 view .LVU1118
 3973              		.loc 1 817 17 is_stmt 0 view .LVU1119
 3974 1084 2B68     		ldr	r3, [r5]
 3975              		.loc 1 817 2 view .LVU1120
 3976 1086 D4F8AC02 		ldr	r0, [r4, #684]
 3977 108a 1B69     		ldr	r3, [r3, #16]
 3978 108c 9847     		blx	r3
 3979              	.LVL513:
 818:boards/TMC5031_eval.c **** 	HAL.IOs->config->toInput(Pins.SWIOP2);
 3980              		.loc 1 818 2 is_stmt 1 view .LVU1121
 3981              		.loc 1 818 17 is_stmt 0 view .LVU1122
 3982 108e 2B68     		ldr	r3, [r5]
 3983              		.loc 1 818 2 view .LVU1123
 3984 1090 D4F8B002 		ldr	r0, [r4, #688]
 3985 1094 1B69     		ldr	r3, [r3, #16]
 3986 1096 9847     		blx	r3
 3987              	.LVL514:
 819:boards/TMC5031_eval.c **** 
 820:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel = &HAL.SPI->ch1;
 3988              		.loc 1 820 2 is_stmt 1 view .LVU1124
 821:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 3989              		.loc 1 821 28 is_stmt 0 view .LVU1125
 3990 1098 6B68     		ldr	r3, [r5, #4]
 820:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 3991              		.loc 1 820 27 view .LVU1126
 3992 109a 3269     		ldr	r2, [r6, #16]
 820:boards/TMC5031_eval.c **** 	TMC5031_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 3993              		.loc 1 820 21 view .LVU1127
 3994 109c C4F8B822 		str	r2, [r4, #696]
 3995              		.loc 1 821 2 is_stmt 1 view .LVU1128
 3996              		.loc 1 821 28 is_stmt 0 view .LVU1129
 3997 10a0 03F53273 		add	r3, r3, #712
 3998              		.loc 1 821 26 view .LVU1130
 3999 10a4 5360     		str	r3, [r2, #4]
 822:boards/TMC5031_eval.c **** 
 823:boards/TMC5031_eval.c **** 	TMC5031_config = Evalboards.ch1.config;
 4000              		.loc 1 823 2 is_stmt 1 view .LVU1131
 4001              		.loc 1 823 33 is_stmt 0 view .LVU1132
 4002 10a6 1C4B     		ldr	r3, .L228+8
 824:boards/TMC5031_eval.c **** 
 825:boards/TMC5031_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 4003              		.loc 1 825 38 view .LVU1133
 4004 10a8 1C49     		ldr	r1, .L228+12
 823:boards/TMC5031_eval.c **** 
 4005              		.loc 1 823 33 view .LVU1134
 4006 10aa 9A69     		ldr	r2, [r3, #24]
 823:boards/TMC5031_eval.c **** 
 4007              		.loc 1 823 17 view .LVU1135
 4008 10ac 2260     		str	r2, [r4]
 4009              		.loc 1 825 2 is_stmt 1 view .LVU1136
 4010              		.loc 1 825 38 is_stmt 0 view .LVU1137
 4011 10ae C2F80412 		str	r1, [r2, #516]
 826:boards/TMC5031_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 4012              		.loc 1 826 2 is_stmt 1 view .LVU1138
 827:boards/TMC5031_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 4013              		.loc 1 827 38 is_stmt 0 view .LVU1139
 4014 10b2 0120     		movs	r0, #1
 826:boards/TMC5031_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 4015              		.loc 1 826 38 view .LVU1140
 4016 10b4 1A49     		ldr	r1, .L228+16
 4017              		.loc 1 827 38 view .LVU1141
 4018 10b6 1080     		strh	r0, [r2]	@ movhi
 826:boards/TMC5031_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 4019              		.loc 1 826 38 view .LVU1142
 4020 10b8 C2F80812 		str	r1, [r2, #520]
 4021              		.loc 1 827 2 is_stmt 1 view .LVU1143
 828:boards/TMC5031_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 4022              		.loc 1 828 2 view .LVU1144
 829:boards/TMC5031_eval.c **** 
 830:boards/TMC5031_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 4023              		.loc 1 830 2 view .LVU1145
 4024              		.loc 1 830 38 is_stmt 0 view .LVU1146
 4025 10bc 194A     		ldr	r2, .L228+20
 4026 10be 5A62     		str	r2, [r3, #36]
 831:boards/TMC5031_eval.c **** 	Evalboards.ch1.right                = right;
 4027              		.loc 1 831 2 is_stmt 1 view .LVU1147
 4028              		.loc 1 831 38 is_stmt 0 view .LVU1148
 4029 10c0 194A     		ldr	r2, .L228+24
 4030 10c2 1A62     		str	r2, [r3, #32]
 832:boards/TMC5031_eval.c **** 	Evalboards.ch1.left                 = left;
 4031              		.loc 1 832 2 is_stmt 1 view .LVU1149
 4032              		.loc 1 832 38 is_stmt 0 view .LVU1150
 4033 10c4 194A     		ldr	r2, .L228+28
 4034 10c6 DA61     		str	r2, [r3, #28]
 833:boards/TMC5031_eval.c **** 	Evalboards.ch1.stop                 = stop;
 4035              		.loc 1 833 2 is_stmt 1 view .LVU1151
 4036              		.loc 1 833 38 is_stmt 0 view .LVU1152
 4037 10c8 194A     		ldr	r2, .L228+32
 4038 10ca 9A62     		str	r2, [r3, #40]
 834:boards/TMC5031_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 4039              		.loc 1 834 2 is_stmt 1 view .LVU1153
 4040              		.loc 1 834 38 is_stmt 0 view .LVU1154
 4041 10cc 194A     		ldr	r2, .L228+36
 4042 10ce DA63     		str	r2, [r3, #60]
 835:boards/TMC5031_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 4043              		.loc 1 835 2 is_stmt 1 view .LVU1155
 4044              		.loc 1 835 38 is_stmt 0 view .LVU1156
 4045 10d0 194A     		ldr	r2, .L228+40
 4046 10d2 9A63     		str	r2, [r3, #56]
 836:boards/TMC5031_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 4047              		.loc 1 836 2 is_stmt 1 view .LVU1157
 4048              		.loc 1 836 38 is_stmt 0 view .LVU1158
 4049 10d4 194A     		ldr	r2, .L228+44
 4050 10d6 DA62     		str	r2, [r3, #44]
 837:boards/TMC5031_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 4051              		.loc 1 837 2 is_stmt 1 view .LVU1159
 4052              		.loc 1 837 38 is_stmt 0 view .LVU1160
 4053 10d8 194A     		ldr	r2, .L228+48
 4054 10da 1A63     		str	r2, [r3, #48]
 838:boards/TMC5031_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 4055              		.loc 1 838 2 is_stmt 1 view .LVU1161
 4056              		.loc 1 838 38 is_stmt 0 view .LVU1162
 4057 10dc 194A     		ldr	r2, .L228+52
 4058 10de DA64     		str	r2, [r3, #76]
 839:boards/TMC5031_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 4059              		.loc 1 839 2 is_stmt 1 view .LVU1163
 4060              		.loc 1 839 38 is_stmt 0 view .LVU1164
 4061 10e0 194A     		ldr	r2, .L228+56
 4062 10e2 9A64     		str	r2, [r3, #72]
 840:boards/TMC5031_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 4063              		.loc 1 840 2 is_stmt 1 view .LVU1165
 4064              		.loc 1 840 38 is_stmt 0 view .LVU1166
 4065 10e4 194A     		ldr	r2, .L228+60
 4066 10e6 9A65     		str	r2, [r3, #88]
 841:boards/TMC5031_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 4067              		.loc 1 841 2 is_stmt 1 view .LVU1167
 4068              		.loc 1 841 38 is_stmt 0 view .LVU1168
 4069 10e8 194A     		ldr	r2, .L228+64
 4070 10ea 5A65     		str	r2, [r3, #84]
 842:boards/TMC5031_eval.c **** 	Evalboards.ch1.getMeasuredSpeed     = getMeasuredSpeed;
 4071              		.loc 1 842 2 is_stmt 1 view .LVU1169
 4072              		.loc 1 842 38 is_stmt 0 view .LVU1170
 4073 10ec 194A     		ldr	r2, .L228+68
 4074 10ee 1A65     		str	r2, [r3, #80]
 843:boards/TMC5031_eval.c **** 	Evalboards.ch1.enableDriver         = enableDriver;
 4075              		.loc 1 843 2 is_stmt 1 view .LVU1171
 4076              		.loc 1 843 38 is_stmt 0 view .LVU1172
 4077 10f0 194A     		ldr	r2, .L228+72
 4078 10f2 5A66     		str	r2, [r3, #100]
 844:boards/TMC5031_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 4079              		.loc 1 844 2 is_stmt 1 view .LVU1173
 4080              		.loc 1 844 38 is_stmt 0 view .LVU1174
 4081 10f4 194A     		ldr	r2, .L228+76
 4082 10f6 1A66     		str	r2, [r3, #96]
 845:boards/TMC5031_eval.c **** 	Evalboards.ch1.numberOfMotors       = MOTORS;
 4083              		.loc 1 845 2 is_stmt 1 view .LVU1175
 4084              		.loc 1 845 38 is_stmt 0 view .LVU1176
 4085 10f8 0222     		movs	r2, #2
 4086 10fa 1A75     		strb	r2, [r3, #20]
 846:boards/TMC5031_eval.c **** 	Evalboards.ch1.VMMin                = VM_MIN;
 4087              		.loc 1 846 2 is_stmt 1 view .LVU1177
 847:boards/TMC5031_eval.c **** 	Evalboards.ch1.VMMax                = VM_MAX;
 4088              		.loc 1 847 38 is_stmt 0 view .LVU1178
 4089 10fc 3221     		movs	r1, #50
 4090 10fe B622     		movs	r2, #182
 4091 1100 C3E90321 		strd	r2, r1, [r3, #12]
 848:boards/TMC5031_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 4092              		.loc 1 848 2 is_stmt 1 view .LVU1179
 849:boards/TMC5031_eval.c **** 
 850:boards/TMC5031_eval.c **** 	enableDriver(DRIVER_ENABLE);
 851:boards/TMC5031_eval.c **** };
 4093              		.loc 1 851 1 is_stmt 0 view .LVU1180
 4094 1104 BDE87040 		pop	{r4, r5, r6, lr}
 4095              	.LCFI25:
 4096              		.cfi_restore 14
 4097              		.cfi_restore 6
 4098              		.cfi_restore 5
 4099              		.cfi_restore 4
 4100              		.cfi_def_cfa_offset 0
 848:boards/TMC5031_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 4101              		.loc 1 848 38 view .LVU1181
 4102 1108 154A     		ldr	r2, .L228+80
 4103 110a DA65     		str	r2, [r3, #92]
 850:boards/TMC5031_eval.c **** };
 4104              		.loc 1 850 2 is_stmt 1 view .LVU1182
 4105 110c FEF7DEBF 		b	enableDriver
 4106              	.LVL515:
 4107              	.L229:
 4108              		.align	2
 4109              	.L228:
 4110 1110 00000000 		.word	.LANCHOR0
 4111 1114 00000000 		.word	HAL
 4112 1118 00000000 		.word	Evalboards
 4113 111c 00000000 		.word	reset
 4114 1120 00000000 		.word	restore
 4115 1124 00000000 		.word	rotate
 4116 1128 00000000 		.word	right
 4117 112c 00000000 		.word	left
 4118 1130 00000000 		.word	stop
 4119 1134 00000000 		.word	GAP
 4120 1138 00000000 		.word	SAP
 4121 113c 00000000 		.word	moveTo
 4122 1140 00000000 		.word	moveBy
 4123 1144 00000000 		.word	writeRegister
 4124 1148 00000000 		.word	readRegister
 4125 114c 00000000 		.word	periodicJob
 4126 1150 00000000 		.word	userFunction
 4127 1154 00000000 		.word	getMeasuredSpeed
 4128 1158 00000000 		.word	enableDriver
 4129 115c 00000000 		.word	checkErrors
 4130 1160 00000000 		.word	deInit
 4131              		.cfi_endproc
 4132              	.LFE23:
 4134              		.comm	TMCMotionController,532,4
 4135              		.comm	TMCDriver,532,4
 4136              		.comm	Evalboards,244,4
 4137              		.comm	VitalSignsMonitor,20,4
 4138              		.comm	hwid,1,1
 4139              		.comm	HAL,48,4
 4140              		.comm	UART,40,4
 4141              		.comm	Timer,16,4
 4142              		.comm	WLAN,36,4
 4143              		.comm	RS232,36,4
 4144              		.comm	LEDs,28,4
 4145              		.comm	USB,36,4
 4146              		.comm	uart0_interrupt,1,1
 4147              		.comm	ADCs,32,4
 4148              		.comm	SPI,44,4
 4149              		.comm	IOMap,2088,4
 4150              		.comm	IOs,52,4
 4151              		.comm	Cpu,8,4
 4152              		.data
 4153              		.set	.LANCHOR1,. + 0
 4156              	vMaxModified:
 4157 0000 0101     		.ascii	"\001\001"
 4158              		.bss
 4159              		.align	2
 4160              		.set	.LANCHOR0,. + 0
 4163              	TMC5031_config:
 4164 0000 00000000 		.space	4
 4167              	TMC5031:
 4168 0004 00000000 		.space	664
 4168      00000000 
 4168      00000000 
 4168      00000000 
 4168      00000000 
 4171              	Pins:
 4172 029c 00000000 		.space	28
 4172      00000000 
 4172      00000000 
 4172      00000000 
 4172      00000000 
 4175              	TMC5031_SPIChannel:
 4176 02b8 00000000 		.space	4
 4179              	vMax:
 4180 02bc 00000000 		.space	8
 4180      00000000 
 4183              	ADCValue:
 4184 02c4 00000000 		.space	12
 4184      00000000 
 4184      00000000 
 4185              		.text
 4186              	.Letext0:
 4187              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 4188              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4189              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4190              		.file 5 "TMC-API/tmc/helpers/Types.h"
 4191              		.file 6 "TMC-API/tmc/helpers/Config.h"
 4192              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4193              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4194              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4195              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 4196              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 4197              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 4198              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 4199              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 4200              		.file 15 "./hal/IOs.h"
 4201              		.file 16 "./hal/IOMap.h"
 4202              		.file 17 "./hal/SPI.h"
 4203              		.file 18 "./hal/ADCs.h"
 4204              		.file 19 "./hal/RXTX.h"
 4205              		.file 20 "./hal/USB.h"
 4206              		.file 21 "./hal/LEDs.h"
 4207              		.file 22 "./hal/RS232.h"
 4208              		.file 23 "./hal/WLAN.h"
 4209              		.file 24 "./hal/Timer.h"
 4210              		.file 25 "./hal/UART.h"
 4211              		.file 26 "./hal/HAL.h"
 4212              		.file 27 "./tmc/VitalSignsMonitor.h"
 4213              		.file 28 "boards/Board.h"
 4214              		.file 29 "boards/TMCDriver.h"
 4215              		.file 30 "boards/TMCMotionController.h"
 4216              		.file 31 "TMC-API/tmc/ic/TMC5031/TMC5031.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC5031_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:22     .text:00000000 getMeasuredSpeed
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:65     .text:00000024 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:69     .text:00000028 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:75     .text:00000028 checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:94     .text:00000030 $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:98     .text:00000034 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:104    .text:00000034 periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:167    .text:0000005c $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:172    .text:00000060 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:178    .text:00000060 restore
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:194    .text:00000068 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:198    .text:0000006c $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:204    .text:0000006c userFunction
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:334    .text:000000c4 $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:339    .text:000000cc $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:345    .text:000000cc enableDriver
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:421    .text:00000104 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:427    .text:00000110 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:433    .text:00000110 deInit
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:527    .text:00000168 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:532    .text:00000170 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:539    .text:00000170 tmc5031_writeDatagram
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:652    .text:000001e0 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:656    .text:000001e4 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:663    .text:000001e4 tmc5031_writeInt
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:702    .text:00000200 writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:727    .text:00000206 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:820    .text:00000268 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:825    .text:00000270 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:831    .text:00000270 rotate
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:918    .text:000002b8 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:922    .text:000002bc $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:928    .text:000002bc stop
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:951    .text:000002c0 left
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:976    .text:000002c4 right
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:999    .text:000002c6 tmc5031_readInt
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:1163   .text:00000368 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:1167   .text:0000036c $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:1173   .text:0000036c readRegister
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:1210   .text:0000037a moveBy
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:1269   .text:0000039c handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:1324   .text:000003ce $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:1397   .text:0000045e $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:1405   .text:00000468 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:1435   .text:000004a4 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:2167   .text:000007d4 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:2173   .text:000007dc $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:2433   .text:000008fc $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:2441   .text:00000904 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:2940   .text:00000ba8 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:2944   .text:00000bac $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:3717   .text:00000fba SAP
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:3757   .text:00000fce GAP
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:3787   .text:00000fd8 reset
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:3852   .text:00001000 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:3856   .text:00001004 $t
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:3863   .text:00001004 TMC5031_init
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:4110   .text:00001110 $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:4156   .data:00000000 vMaxModified
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:4159   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:4163   .bss:00000000 TMC5031_config
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:4167   .bss:00000004 TMC5031
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:4171   .bss:0000029c Pins
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:4175   .bss:000002b8 TMC5031_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:4179   .bss:000002bc vMax
C:\Users\Shubham\AppData\Local\Temp\ccS4PudF.s:4183   .bss:000002c4 ADCValue

UNDEFINED SYMBOLS
tmc5031_periodicJob
tmc5031_restore
tmc5031_reset
tmc5031_initConfig
