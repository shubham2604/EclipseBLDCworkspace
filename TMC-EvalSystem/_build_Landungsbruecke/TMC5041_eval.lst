   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC5041_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	getMeasuredSpeed:
  23              	.LVL0:
  24              	.LFB13:
  25              		.file 1 "boards/TMC5041_eval.c"
   1:boards/TMC5041_eval.c **** #include "Board.h"
   2:boards/TMC5041_eval.c **** #include "tmc/ic/TMC5041/TMC5041.h"
   3:boards/TMC5041_eval.c **** 
   4:boards/TMC5041_eval.c **** #define ERRORS_VM        (1<<0)
   5:boards/TMC5041_eval.c **** #define ERRORS_VM_UNDER  (1<<1)
   6:boards/TMC5041_eval.c **** #define ERRORS_VM_OVER   (1<<2)
   7:boards/TMC5041_eval.c **** 
   8:boards/TMC5041_eval.c **** #define VM_MIN  50   // VM[V/10] min
   9:boards/TMC5041_eval.c **** #define VM_MAX  280  // VM[V/10] max +10%
  10:boards/TMC5041_eval.c **** 
  11:boards/TMC5041_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
  12:boards/TMC5041_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
  13:boards/TMC5041_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
  14:boards/TMC5041_eval.c **** static uint32_t stop(uint8_t motor);
  15:boards/TMC5041_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  16:boards/TMC5041_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  17:boards/TMC5041_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  18:boards/TMC5041_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  19:boards/TMC5041_eval.c **** 
  20:boards/TMC5041_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value);
  21:boards/TMC5041_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value);
  22:boards/TMC5041_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value);
  23:boards/TMC5041_eval.c **** 
  24:boards/TMC5041_eval.c **** static void periodicJob(uint32_t tick);
  25:boards/TMC5041_eval.c **** static void checkErrors	(uint32_t tick);
  26:boards/TMC5041_eval.c **** static void deInit(void);
  27:boards/TMC5041_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  28:boards/TMC5041_eval.c **** 
  29:boards/TMC5041_eval.c **** static uint8_t reset();
  30:boards/TMC5041_eval.c **** static void enableDriver(DriverState state);
  31:boards/TMC5041_eval.c **** 
  32:boards/TMC5041_eval.c **** static SPIChannelTypeDef *TMC5041_SPIChannel;
  33:boards/TMC5041_eval.c **** static TMC5041TypeDef TMC5041;
  34:boards/TMC5041_eval.c **** static ConfigurationTypeDef *TMC5041_config;
  35:boards/TMC5041_eval.c **** 
  36:boards/TMC5041_eval.c **** typedef struct
  37:boards/TMC5041_eval.c **** {
  38:boards/TMC5041_eval.c **** 	IOPinTypeDef  *DRV_ENN;
  39:boards/TMC5041_eval.c **** 	IOPinTypeDef  *INT_ENCA;
  40:boards/TMC5041_eval.c **** 	IOPinTypeDef  *PP_ENCB;
  41:boards/TMC5041_eval.c **** } PinsTypeDef;
  42:boards/TMC5041_eval.c **** 
  43:boards/TMC5041_eval.c **** static PinsTypeDef Pins;
  44:boards/TMC5041_eval.c **** 
  45:boards/TMC5041_eval.c **** // Translate motor number to TMC5041TypeDef
  46:boards/TMC5041_eval.c **** // When using multiple ICs you can map them here
  47:boards/TMC5041_eval.c **** static inline TMC5041TypeDef *motorToIC(uint8_t motor)
  48:boards/TMC5041_eval.c **** {
  49:boards/TMC5041_eval.c **** 	UNUSED(motor);
  50:boards/TMC5041_eval.c **** 
  51:boards/TMC5041_eval.c **** 	return &TMC5041;
  52:boards/TMC5041_eval.c **** }
  53:boards/TMC5041_eval.c **** 
  54:boards/TMC5041_eval.c **** // Translate channel number to SPI channel
  55:boards/TMC5041_eval.c **** // When using multiple ICs you can map them here
  56:boards/TMC5041_eval.c **** static inline SPIChannelTypeDef *channelToSPI(uint8_t channel)
  57:boards/TMC5041_eval.c **** {
  58:boards/TMC5041_eval.c **** 	UNUSED(channel);
  59:boards/TMC5041_eval.c **** 
  60:boards/TMC5041_eval.c **** 	return TMC5041_SPIChannel;
  61:boards/TMC5041_eval.c **** }
  62:boards/TMC5041_eval.c **** 
  63:boards/TMC5041_eval.c **** 
  64:boards/TMC5041_eval.c **** // => SPI wrapper
  65:boards/TMC5041_eval.c **** void tmc5041_readWriteArray(uint8_t channel, uint8_t *data, size_t length)
  66:boards/TMC5041_eval.c **** {
  67:boards/TMC5041_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
  68:boards/TMC5041_eval.c **** }
  69:boards/TMC5041_eval.c **** // <= SPI wrapper
  70:boards/TMC5041_eval.c **** 
  71:boards/TMC5041_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
  72:boards/TMC5041_eval.c **** {
  73:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
  74:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
  75:boards/TMC5041_eval.c **** 
  76:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(velocity));
  77:boards/TMC5041_eval.c **** 	TMC5041.vMaxModified[motor] = true;
  78:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_RAMPMODE(motor), (velocity >= 0)? TMC5041_MODE_VELPOS:T
  79:boards/TMC5041_eval.c **** 	return TMC_ERROR_NONE;
  80:boards/TMC5041_eval.c **** }
  81:boards/TMC5041_eval.c **** 
  82:boards/TMC5041_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
  83:boards/TMC5041_eval.c **** {
  84:boards/TMC5041_eval.c **** 	return rotate(motor, velocity);
  85:boards/TMC5041_eval.c **** }
  86:boards/TMC5041_eval.c **** 
  87:boards/TMC5041_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
  88:boards/TMC5041_eval.c **** {
  89:boards/TMC5041_eval.c **** 	return rotate(motor, -velocity);
  90:boards/TMC5041_eval.c **** }
  91:boards/TMC5041_eval.c **** 
  92:boards/TMC5041_eval.c **** static uint32_t stop(uint8_t motor)
  93:boards/TMC5041_eval.c **** {
  94:boards/TMC5041_eval.c **** 	return rotate(motor, 0);
  95:boards/TMC5041_eval.c **** }
  96:boards/TMC5041_eval.c **** 
  97:boards/TMC5041_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
  98:boards/TMC5041_eval.c **** {
  99:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
 100:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 101:boards/TMC5041_eval.c **** 
 102:boards/TMC5041_eval.c **** 	if(TMC5041.vMaxModified[motor])
 103:boards/TMC5041_eval.c **** 	{
 104:boards/TMC5041_eval.c **** 		tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), TMC5041_config->shadowRegister[TMC5041_VM
 105:boards/TMC5041_eval.c **** 		TMC5041.vMaxModified[motor] = false;
 106:boards/TMC5041_eval.c **** 	}
 107:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_XTARGET(motor), position);
 108:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_RAMPMODE(motor), TMC5041_MODE_POSITION);
 109:boards/TMC5041_eval.c **** 
 110:boards/TMC5041_eval.c **** 	return TMC_ERROR_NONE;
 111:boards/TMC5041_eval.c **** }
 112:boards/TMC5041_eval.c **** 
 113:boards/TMC5041_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 114:boards/TMC5041_eval.c **** {
 115:boards/TMC5041_eval.c **** 	// determine actual position and add numbers of ticks to move
 116:boards/TMC5041_eval.c **** 	*ticks = tmc5041_readInt(motorToIC(motor), TMC5041_XACTUAL(motor)) + *ticks;
 117:boards/TMC5041_eval.c **** 
 118:boards/TMC5041_eval.c **** 	return moveTo(motor, *ticks);
 119:boards/TMC5041_eval.c **** }
 120:boards/TMC5041_eval.c **** 
 121:boards/TMC5041_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 122:boards/TMC5041_eval.c **** {
 123:boards/TMC5041_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 124:boards/TMC5041_eval.c **** 	int tempValue;
 125:boards/TMC5041_eval.c **** 
 126:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
 127:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 128:boards/TMC5041_eval.c **** 
 129:boards/TMC5041_eval.c **** 	switch(type)
 130:boards/TMC5041_eval.c **** 	{
 131:boards/TMC5041_eval.c **** 	case 0:
 132:boards/TMC5041_eval.c **** 		// Target position
 133:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 134:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_XTARGET(motor));
 135:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 136:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_XTARGET(motor), *value);
 137:boards/TMC5041_eval.c **** 		}
 138:boards/TMC5041_eval.c **** 		break;
 139:boards/TMC5041_eval.c **** 	case 1:
 140:boards/TMC5041_eval.c **** 		// Actual position
 141:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 142:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_XACTUAL(motor));
 143:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 144:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_XACTUAL(motor), *value);
 145:boards/TMC5041_eval.c **** 		}
 146:boards/TMC5041_eval.c **** 		break;
 147:boards/TMC5041_eval.c **** 	case 2:
 148:boards/TMC5041_eval.c **** 		// Target speed
 149:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 150:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VMAX(motor));
 151:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 152:boards/TMC5041_eval.c **** 			TMC5041.vMaxModified[motor] = true;
 153:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 154:boards/TMC5041_eval.c **** 		}
 155:boards/TMC5041_eval.c **** 		break;
 156:boards/TMC5041_eval.c **** 	case 3:
 157:boards/TMC5041_eval.c **** 		// todo CHECK 3: min max actually velocity min and velocity max? (JE) #3
 158:boards/TMC5041_eval.c **** 		// Actual speed
 159:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 160:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor));
 161:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 162:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 163:boards/TMC5041_eval.c **** 			errors |= TMC_ERROR_TYPE;
 164:boards/TMC5041_eval.c **** 		}
 165:boards/TMC5041_eval.c **** 		break;
 166:boards/TMC5041_eval.c **** 	case 4:
 167:boards/TMC5041_eval.c **** 		// Maximum speed
 168:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 169:boards/TMC5041_eval.c **** 			*value=TMC5041_config->shadowRegister[TMC5041_VMAX(motor)];
 170:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 171:boards/TMC5041_eval.c **** 			TMC5041_config->shadowRegister[TMC5041_VMAX(motor)] = abs(*value);
 172:boards/TMC5041_eval.c **** 			if(tmc5041_readInt(motorToIC(motor), TMC5041_RAMPMODE(motor)) == TMC5041_MODE_POSITION)
 173:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 174:boards/TMC5041_eval.c **** 		}
 175:boards/TMC5041_eval.c **** 		break;
 176:boards/TMC5041_eval.c **** 	case 5:
 177:boards/TMC5041_eval.c **** 		// Maximum acceleration
 178:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 179:boards/TMC5041_eval.c **** 			*value=tmc5041_readInt(motorToIC(motor), TMC5041_AMAX(motor));
 180:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 181:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_AMAX(motor), *value);
 182:boards/TMC5041_eval.c **** 		}
 183:boards/TMC5041_eval.c **** 		break;
 184:boards/TMC5041_eval.c **** 	case 6:
 185:boards/TMC5041_eval.c **** 		// Maximum current
 186:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 187:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IRUN_MASK, TMC5041_IRUN
 188:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 189:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IRUN_MASK, TMC5041_IRUN_SHIFT, 
 190:boards/TMC5041_eval.c **** 		}
 191:boards/TMC5041_eval.c **** 		break;
 192:boards/TMC5041_eval.c **** 	case 7:
 193:boards/TMC5041_eval.c **** 		// Standby current
 194:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 195:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IHOLD_MASK, TMC5041_IHO
 196:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 197:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IHOLD_MASK, TMC5041_IHOLD_SHIFT
 198:boards/TMC5041_eval.c **** 		}
 199:boards/TMC5041_eval.c **** 		break;
 200:boards/TMC5041_eval.c **** 	case 8:
 201:boards/TMC5041_eval.c **** 		// Position reached flag
 202:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 203:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_RAMPSTAT(motor), TMC5041_POSITION_REACHED_MASK, TM
 204:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 205:boards/TMC5041_eval.c **** 			errors |= TMC_ERROR_TYPE;
 206:boards/TMC5041_eval.c **** 		}
 207:boards/TMC5041_eval.c **** 		break;
 208:boards/TMC5041_eval.c **** 	case 10:
 209:boards/TMC5041_eval.c **** 		// Right endstop
 210:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 211:boards/TMC5041_eval.c **** 			*value = !TMC5041_FIELD_READ(&TMC5041, TMC5041_RAMPSTAT(motor), TMC5041_STATUS_STOP_R_MASK, TMC5
 212:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 213:boards/TMC5041_eval.c **** 			errors |= TMC_ERROR_TYPE;
 214:boards/TMC5041_eval.c **** 		}
 215:boards/TMC5041_eval.c **** 		break;
 216:boards/TMC5041_eval.c **** 	case 11:
 217:boards/TMC5041_eval.c **** 		// Left endstop
 218:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 219:boards/TMC5041_eval.c **** 			*value = !TMC5041_FIELD_READ(&TMC5041, TMC5041_RAMPSTAT(motor), TMC5041_STATUS_STOP_L_MASK, TMC5
 220:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 221:boards/TMC5041_eval.c **** 			errors |= TMC_ERROR_TYPE;
 222:boards/TMC5041_eval.c **** 		}
 223:boards/TMC5041_eval.c **** 		break;
 224:boards/TMC5041_eval.c **** 	case 12:
 225:boards/TMC5041_eval.c **** 		// Automatic right stop
 226:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 227:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_R_ENABLE_MASK, TMC5041
 228:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 229:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_R_ENABLE_MASK, TMC5041_STOP_R_
 230:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_POL_STOP_R_MASK, TMC5041_POL_STOP_R
 231:boards/TMC5041_eval.c **** 		}
 232:boards/TMC5041_eval.c **** 		break;
 233:boards/TMC5041_eval.c **** 	case 13:
 234:boards/TMC5041_eval.c **** 		// Automatic left stop
 235:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 236:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_L_ENABLE_MASK, TMC5041
 237:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 238:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_L_ENABLE_MASK, TMC5041_STOP_L_
 239:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_POL_STOP_L_MASK, TMC5041_POL_STOP_L
 240:boards/TMC5041_eval.c **** 		}
 241:boards/TMC5041_eval.c **** 		break;
 242:boards/TMC5041_eval.c **** 	case 14:
 243:boards/TMC5041_eval.c **** 		// SW_MODE Register
 244:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 245:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_SWMODE(motor));
 246:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 247:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_SWMODE(motor), *value);
 248:boards/TMC5041_eval.c **** 		}
 249:boards/TMC5041_eval.c **** 		break;
 250:boards/TMC5041_eval.c **** 	case 15:
 251:boards/TMC5041_eval.c **** 		// Acceleration A1
 252:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 253:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_A1(motor));
 254:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 255:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_A1(motor), *value);
 256:boards/TMC5041_eval.c **** 		}
 257:boards/TMC5041_eval.c **** 		break;
 258:boards/TMC5041_eval.c **** 	case 16:
 259:boards/TMC5041_eval.c **** 		// Velocity V1
 260:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 261:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_V1(motor));
 262:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 263:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_V1(motor), *value);
 264:boards/TMC5041_eval.c **** 		}
 265:boards/TMC5041_eval.c **** 		break;
 266:boards/TMC5041_eval.c **** 	case 17:
 267:boards/TMC5041_eval.c **** 		// Maximum Deceleration
 268:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 269:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_DMAX(motor));
 270:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 271:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_DMAX(motor), *value);
 272:boards/TMC5041_eval.c **** 		}
 273:boards/TMC5041_eval.c **** 		break;
 274:boards/TMC5041_eval.c **** 	case 18:
 275:boards/TMC5041_eval.c **** 		// Deceleration D1
 276:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 277:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_D1(motor));
 278:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 279:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_D1(motor), *value);
 280:boards/TMC5041_eval.c **** 		}
 281:boards/TMC5041_eval.c **** 		break;
 282:boards/TMC5041_eval.c **** 	case 19:
 283:boards/TMC5041_eval.c **** 		// Velocity VSTART
 284:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 285:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VSTART(motor));
 286:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 287:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VSTART(motor), *value);
 288:boards/TMC5041_eval.c **** 		}
 289:boards/TMC5041_eval.c **** 		break;
 290:boards/TMC5041_eval.c **** 	case 20:
 291:boards/TMC5041_eval.c **** 		// Velocity VSTOP
 292:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 293:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VSTOP(motor));
 294:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 295:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VSTOP(motor), *value);
 296:boards/TMC5041_eval.c **** 		}
 297:boards/TMC5041_eval.c **** 		break;
 298:boards/TMC5041_eval.c **** 	case 21:
 299:boards/TMC5041_eval.c **** 		// Waiting time after ramp down
 300:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 301:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_TZEROWAIT(motor));
 302:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 303:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_TZEROWAIT(motor), *value);
 304:boards/TMC5041_eval.c **** 		}
 305:boards/TMC5041_eval.c **** 		break;
 306:boards/TMC5041_eval.c **** 	case 22:
 307:boards/TMC5041_eval.c **** 		// smartEnergy threshold speed
 308:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 309:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 310:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 311:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor), *value);
 312:boards/TMC5041_eval.c **** 		}
 313:boards/TMC5041_eval.c **** 		break;
 314:boards/TMC5041_eval.c **** 	case 23:
 315:boards/TMC5041_eval.c **** 		// Speed threshold for high speed mode
 316:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 317:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VHIGH(motor));
 318:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 319:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VHIGH(motor), *value);
 320:boards/TMC5041_eval.c **** 		}
 321:boards/TMC5041_eval.c **** 		break;
 322:boards/TMC5041_eval.c **** 	case 24:
 323:boards/TMC5041_eval.c **** 		// Minimum speed for switching to dcStep
 324:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 325:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VDCMIN(motor));
 326:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 327:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VDCMIN(motor), *value);
 328:boards/TMC5041_eval.c **** 		}
 329:boards/TMC5041_eval.c **** 		break;
 330:boards/TMC5041_eval.c **** 	case 28:
 331:boards/TMC5041_eval.c **** 		// High speed fullstep mode
 332:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 333:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VHIGHFS_MASK, TMC5041_VHI
 334:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 335:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VHIGHFS_MASK, TMC5041_VHIGHFS_SHI
 336:boards/TMC5041_eval.c **** 		}
 337:boards/TMC5041_eval.c **** 		break;
 338:boards/TMC5041_eval.c **** 	case 29:	// todo AP XML 2: Beschreibung vom AP fehlt (LH)
 339:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 340:boards/TMC5041_eval.c **** 			*value = TMC5041.velocity[motor];
 341:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 342:boards/TMC5041_eval.c **** 			errors |= TMC_ERROR_TYPE;
 343:boards/TMC5041_eval.c **** 		}
 344:boards/TMC5041_eval.c **** 		break;
 345:boards/TMC5041_eval.c **** 	case 140:
 346:boards/TMC5041_eval.c **** 		// Microstep Resolution
 347:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 348:boards/TMC5041_eval.c **** 			*value = 256 >> TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_MRES_MASK, TMC5041
 349:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 350:boards/TMC5041_eval.c **** 			switch(*value)
 351:boards/TMC5041_eval.c **** 			{
 352:boards/TMC5041_eval.c **** 			case 1:    *value = 8;   break;
 353:boards/TMC5041_eval.c **** 			case 2:    *value = 7;   break;
 354:boards/TMC5041_eval.c **** 			case 4:    *value = 6;   break;
 355:boards/TMC5041_eval.c **** 			case 8:    *value = 5;   break;
 356:boards/TMC5041_eval.c **** 			case 16:   *value = 4;   break;
 357:boards/TMC5041_eval.c **** 			case 32:   *value = 3;   break;
 358:boards/TMC5041_eval.c **** 			case 64:   *value = 2;   break;
 359:boards/TMC5041_eval.c **** 			case 128:  *value = 1;   break;
 360:boards/TMC5041_eval.c **** 			case 256:  *value = 0;   break;
 361:boards/TMC5041_eval.c **** 			default:   *value = -1;  break;
 362:boards/TMC5041_eval.c **** 			}
 363:boards/TMC5041_eval.c **** 
 364:boards/TMC5041_eval.c **** 			if(*value != -1)
 365:boards/TMC5041_eval.c **** 			{
 366:boards/TMC5041_eval.c **** 				TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_MRES_MASK, TMC5041_MRES_SHIFT, *
 367:boards/TMC5041_eval.c **** 			}
 368:boards/TMC5041_eval.c **** 			//else TMCL.reply->Status = REPLY_INVALID_VALUE;
 369:boards/TMC5041_eval.c **** 		}
 370:boards/TMC5041_eval.c **** 		break;
 371:boards/TMC5041_eval.c **** 	case 162:
 372:boards/TMC5041_eval.c **** 		// Chopper blank time
 373:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 374:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TBL_MASK, TMC5041_TBL_SHI
 375:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 376:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TBL_MASK, TMC5041_TBL_SHIFT, *val
 377:boards/TMC5041_eval.c **** 		}
 378:boards/TMC5041_eval.c **** 		break;
 379:boards/TMC5041_eval.c **** 	case 163:
 380:boards/TMC5041_eval.c **** 		// Constant TOff Mode
 381:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 382:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_CHM_MASK, TMC5041_CHM_SHI
 383:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 384:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_CHM_MASK, TMC5041_CHM_SHIFT, *val
 385:boards/TMC5041_eval.c **** 		}
 386:boards/TMC5041_eval.c **** 		break;
 387:boards/TMC5041_eval.c **** 	case 164:
 388:boards/TMC5041_eval.c **** 		// Disable fast decay comparator
 389:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 390:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_DISFDCC_MASK, TMC5041_DIS
 391:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 392:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_DISFDCC_MASK, TMC5041_DISFDCC_SHI
 393:boards/TMC5041_eval.c **** 		}
 394:boards/TMC5041_eval.c **** 		break;
 395:boards/TMC5041_eval.c **** 	case 165:
 396:boards/TMC5041_eval.c **** 		// Chopper hysteresis end / fast decay time
 397:boards/TMC5041_eval.c **** 		tempValue = tmc5041_readInt(motorToIC(motor), TMC5041_CHOPCONF(motor));
 398:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 399:boards/TMC5041_eval.c **** 			if(tempValue & TMC5041_CHM_MASK)
 400:boards/TMC5041_eval.c **** 			{
 401:boards/TMC5041_eval.c **** 				*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_HEND_MASK, TMC5041_HEND_
 402:boards/TMC5041_eval.c **** 			}
 403:boards/TMC5041_eval.c **** 			else
 404:boards/TMC5041_eval.c **** 			{
 405:boards/TMC5041_eval.c **** 				*value = (tempValue >> TMC5041_TFD_ALL_SHIFT) & TMC5041_TFD_ALL_MASK;
 406:boards/TMC5041_eval.c **** 				if(tempValue & TMC5041_TFD_3_MASK)
 407:boards/TMC5041_eval.c **** 					*value |= 1<<3;	// Add MSB to value
 408:boards/TMC5041_eval.c **** 			}
 409:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 410:boards/TMC5041_eval.c **** 			if(tempValue & TMC5041_CHM_MASK)
 411:boards/TMC5041_eval.c **** 			{
 412:boards/TMC5041_eval.c **** 				TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_HEND_MASK, TMC5041_HEND_SHIFT, *
 413:boards/TMC5041_eval.c **** 			}
 414:boards/TMC5041_eval.c **** 			else
 415:boards/TMC5041_eval.c **** 			{
 416:boards/TMC5041_eval.c **** 				TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TFD_3_MASK, TMC5041_TFD_3_SHIFT,
 417:boards/TMC5041_eval.c **** 
 418:boards/TMC5041_eval.c **** 				TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TFD_ALL_MASK, TMC5041_TFD_ALL_SH
 419:boards/TMC5041_eval.c **** 			}
 420:boards/TMC5041_eval.c **** 		}
 421:boards/TMC5041_eval.c **** 		break;
 422:boards/TMC5041_eval.c **** 	case 166:
 423:boards/TMC5041_eval.c **** 		// Chopper hysteresis start / sine wave offset
 424:boards/TMC5041_eval.c **** 		tempValue = tmc5041_readInt(motorToIC(motor), TMC5041_CHOPCONF(motor));
 425:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 426:boards/TMC5041_eval.c **** 			if(tempValue & TMC5041_CHM_MASK)
 427:boards/TMC5041_eval.c **** 			{
 428:boards/TMC5041_eval.c **** 				*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_HSTRT_MASK, TMC5041_HSTR
 429:boards/TMC5041_eval.c **** 			}
 430:boards/TMC5041_eval.c **** 			else
 431:boards/TMC5041_eval.c **** 			{
 432:boards/TMC5041_eval.c **** 				*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_OFFSET_MASK, TMC5041_OFF
 433:boards/TMC5041_eval.c **** 				if(tempValue & TMC5041_TFD_3_MASK)
 434:boards/TMC5041_eval.c **** 					*value |= 1<<3; // MSB wird zu value hinzugefügt
 435:boards/TMC5041_eval.c **** 			}
 436:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 437:boards/TMC5041_eval.c **** 			if(tmc5041_readInt(motorToIC(motor), TMC5041_CHOPCONF(motor)) & (1<<14))
 438:boards/TMC5041_eval.c **** 			{
 439:boards/TMC5041_eval.c **** 				TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_HSTRT_MASK, TMC5041_HSTRT_SHIFT,
 440:boards/TMC5041_eval.c **** 			}
 441:boards/TMC5041_eval.c **** 			else
 442:boards/TMC5041_eval.c **** 			{
 443:boards/TMC5041_eval.c **** 				TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_OFFSET_MASK, TMC5041_OFFSET_SHIF
 444:boards/TMC5041_eval.c **** 			}
 445:boards/TMC5041_eval.c **** 		}
 446:boards/TMC5041_eval.c **** 		break;
 447:boards/TMC5041_eval.c **** 	case 167:
 448:boards/TMC5041_eval.c **** 		// Chopper off time
 449:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 450:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TOFF_MASK, TMC5041_TOFF_M
 451:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 452:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TOFF_MASK, TMC5041_TOFF_MASK, *va
 453:boards/TMC5041_eval.c **** 		}
 454:boards/TMC5041_eval.c **** 		break;
 455:boards/TMC5041_eval.c **** 	case 168:
 456:boards/TMC5041_eval.c **** 		// smartEnergy current minimum (SEIMIN)
 457:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 458:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEIMIN_MASK, TMC5041_SEIM
 459:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 460:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEIMIN_MASK, TMC5041_SEIMIN_SHIFT
 461:boards/TMC5041_eval.c **** 		}
 462:boards/TMC5041_eval.c **** 		break;
 463:boards/TMC5041_eval.c **** 	case 169:
 464:boards/TMC5041_eval.c **** 		// smartEnergy current down step
 465:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 466:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEDN_MASK, TMC5041_SEDN_S
 467:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 468:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEDN_MASK, TMC5041_SEDN_SHIFT, *v
 469:boards/TMC5041_eval.c **** 		}
 470:boards/TMC5041_eval.c **** 		break;
 471:boards/TMC5041_eval.c **** 	case 170:
 472:boards/TMC5041_eval.c **** 		// smartEnergy hysteresis
 473:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 474:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMAX_MASK, TMC5041_SEMAX
 475:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 476:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMAX_MASK, TMC5041_SEMAX_SHIFT, 
 477:boards/TMC5041_eval.c **** 		}
 478:boards/TMC5041_eval.c **** 		break;
 479:boards/TMC5041_eval.c **** 	case 171:
 480:boards/TMC5041_eval.c **** 		// smartEnergy current up step
 481:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 482:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEUP_MASK, TMC5041_SEUP_S
 483:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 484:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEUP_MASK, TMC5041_SEUP_SHIFT, *v
 485:boards/TMC5041_eval.c **** 		}
 486:boards/TMC5041_eval.c **** 		break;
 487:boards/TMC5041_eval.c **** 	case 172:
 488:boards/TMC5041_eval.c **** 		// smartEnergy hysteresis start
 489:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 490:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMIN_MASK, TMC5041_SEMIN
 491:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 492:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMIN_MASK, TMC5041_SEMIN_SHIFT, 
 493:boards/TMC5041_eval.c **** 		}
 494:boards/TMC5041_eval.c **** 		break;
 495:boards/TMC5041_eval.c **** 	case 173:
 496:boards/TMC5041_eval.c **** 		// stallGuard2 filter enable
 497:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 498:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SFILT_MASK, TMC5041_SFILT
 499:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 500:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SFILT_MASK, TMC5041_SFILT_SHIFT, 
 501:boards/TMC5041_eval.c **** 		}
 502:boards/TMC5041_eval.c **** 		break;
 503:boards/TMC5041_eval.c **** 	case 174:
 504:boards/TMC5041_eval.c **** 		// stallGuard2 threshold
 505:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 506:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SGT_MASK, TMC5041_SGT_SHI
 507:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 508:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 509:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SGT_MASK, TMC5041_SGT_SHIFT, *val
 510:boards/TMC5041_eval.c **** 		}
 511:boards/TMC5041_eval.c **** 		break;
 512:boards/TMC5041_eval.c **** 	case 179:
 513:boards/TMC5041_eval.c **** 		// VSense
 514:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 515:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VSENSE_MASK, TMC5041_VSEN
 516:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 517:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VSENSE_MASK, TMC5041_VSENSE_SHIFT
 518:boards/TMC5041_eval.c **** 		}
 519:boards/TMC5041_eval.c **** 		break;
 520:boards/TMC5041_eval.c **** 	case 180:
 521:boards/TMC5041_eval.c **** 		// smartEnergy actual current
 522:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 523:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_DRVSTATUS(motor), TMC5041_CS_ACTUAL_MASK, TMC5041_
 524:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 525:boards/TMC5041_eval.c **** 			errors |= TMC_ERROR_TYPE;
 526:boards/TMC5041_eval.c **** 		}
 527:boards/TMC5041_eval.c **** 		break;
 528:boards/TMC5041_eval.c **** 	case 181:
 529:boards/TMC5041_eval.c **** 		// smartEnergy stall velocity
 530:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 531:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 532:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 533:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor),*value);
 534:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_SG_STOP_MASK, TMC5041_SG_STOP_SHIFT
 535:boards/TMC5041_eval.c **** 		}
 536:boards/TMC5041_eval.c **** 		break;
 537:boards/TMC5041_eval.c **** 	case 182:
 538:boards/TMC5041_eval.c **** 		// smartEnergy threshold speed
 539:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 540:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 541:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 542:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor),*value);
 543:boards/TMC5041_eval.c **** 		}
 544:boards/TMC5041_eval.c **** 		break;
 545:boards/TMC5041_eval.c **** 	case 184:
 546:boards/TMC5041_eval.c **** 		// Random TOff mode
 547:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 548:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_RNDTF_MASK, TMC5041_RNDTF
 549:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 550:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_RNDTF_MASK, TMC5041_RNDTF_SHIFT, 
 551:boards/TMC5041_eval.c **** 		}
 552:boards/TMC5041_eval.c **** 		break;
 553:boards/TMC5041_eval.c **** 	case 206:
 554:boards/TMC5041_eval.c **** 		// Load value
 555:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 556:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_DRVSTATUS(motor), TMC5041_SG_RESULT_MASK, TMC5041_
 557:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 558:boards/TMC5041_eval.c **** 			errors |= TMC_ERROR_TYPE;
 559:boards/TMC5041_eval.c **** 		}
 560:boards/TMC5041_eval.c **** 		break;
 561:boards/TMC5041_eval.c **** 	case 209: // todo CHECK REM 3: TMC5041 doesn't have encoder features? Remove this? (LH) #1
 562:boards/TMC5041_eval.c **** 		// Encoder position
 563:boards/TMC5041_eval.c **** 		break;
 564:boards/TMC5041_eval.c **** 	case 210: // todo CHECK REM 3: TMC5041 doesn't have encoder features? Remove this? (LH) #2
 565:boards/TMC5041_eval.c **** 		// Encoder Resolution
 566:boards/TMC5041_eval.c **** //			if(readWrite == READ) {
 567:boards/TMC5041_eval.c **** //				*value = tmc5041_readInt(motorToIC(motor), TMC5041_ENC_CONST(motor));
 568:boards/TMC5041_eval.c **** //			} else if(readWrite == WRITE) {
 569:boards/TMC5041_eval.c **** //				tmc5041_writeInt(motorToIC(motor), TMC5041_ENC_CONST(motor),*value);
 570:boards/TMC5041_eval.c **** //			}
 571:boards/TMC5041_eval.c **** 		break;
 572:boards/TMC5041_eval.c **** 	case 211: // d
 573:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 574:boards/TMC5041_eval.c **** 			// encoder enable
 575:boards/TMC5041_eval.c **** 			switch(motor)
 576:boards/TMC5041_eval.c **** 			{
 577:boards/TMC5041_eval.c **** 			case 0:
 578:boards/TMC5041_eval.c **** 				tempValue = tmc5041_readInt(motorToIC(motor), TMC5041_GCONF);
 579:boards/TMC5041_eval.c **** 				tempValue &= (1<<3) | (1<<4);
 580:boards/TMC5041_eval.c **** 				*value = (tempValue == (1<<4))? 1 : 0;
 581:boards/TMC5041_eval.c **** 				break;
 582:boards/TMC5041_eval.c **** 			case 1:
 583:boards/TMC5041_eval.c **** 				tempValue = tmc5041_readInt(motorToIC(motor), TMC5041_GCONF);
 584:boards/TMC5041_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 585:boards/TMC5041_eval.c **** 				*value = (tempValue == (1<<5))? 1 : 0;
 586:boards/TMC5041_eval.c **** 				break;
 587:boards/TMC5041_eval.c **** 			}
 588:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 589:boards/TMC5041_eval.c **** 			// encoder enable
 590:boards/TMC5041_eval.c **** 			switch(motor)
 591:boards/TMC5041_eval.c **** 			{
 592:boards/TMC5041_eval.c **** 			case 0:
 593:boards/TMC5041_eval.c **** 				tempValue = tmc5041_readInt(motorToIC(motor), TMC5041_GCONF);
 594:boards/TMC5041_eval.c **** 				if(*value)
 595:boards/TMC5041_eval.c **** 					tempValue = (tempValue & ~(1<<3)) | (1<<4);
 596:boards/TMC5041_eval.c **** 				else
 597:boards/TMC5041_eval.c **** 					tempValue = (tempValue | (1<<3)) & ~(1<<4);
 598:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_GCONF, tempValue);
 599:boards/TMC5041_eval.c **** 				break;
 600:boards/TMC5041_eval.c **** 			case 1:		// enable ENCODER2 - disable REF
 601:boards/TMC5041_eval.c **** 				tempValue = tmc5041_readInt(motorToIC(motor), TMC5041_GCONF);
 602:boards/TMC5041_eval.c **** 				if(*value)
 603:boards/TMC5041_eval.c **** 					//tempValue = (tempValue | (1<<5)) & ~(5<<5);
 604:boards/TMC5041_eval.c **** 					tempValue = (tempValue | (1<<5)) & ~(1<<6); //todo: CHECK 3: Sind die Änderungen richtig? Cod
 605:boards/TMC5041_eval.c **** 				else
 606:boards/TMC5041_eval.c **** 					//tempValue = (tempValue & ~(1<<6)) | ~(1<<6);
 607:boards/TMC5041_eval.c **** 					tempValue = (tempValue & ~(1<<5)) | (1<<6); //todo: CHECK 3: Sind die Änderungen richtig? Cod
 608:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_GCONF, tempValue);
 609:boards/TMC5041_eval.c **** 				break;
 610:boards/TMC5041_eval.c **** 			}
 611:boards/TMC5041_eval.c **** 		}
 612:boards/TMC5041_eval.c **** 		break;
 613:boards/TMC5041_eval.c **** 	default:
 614:boards/TMC5041_eval.c **** 		errors |= TMC_ERROR_TYPE;
 615:boards/TMC5041_eval.c **** 		break;
 616:boards/TMC5041_eval.c **** 	}
 617:boards/TMC5041_eval.c **** 	return errors;
 618:boards/TMC5041_eval.c **** }
 619:boards/TMC5041_eval.c **** 
 620:boards/TMC5041_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 621:boards/TMC5041_eval.c **** {
 622:boards/TMC5041_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 623:boards/TMC5041_eval.c **** }
 624:boards/TMC5041_eval.c **** 
 625:boards/TMC5041_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 626:boards/TMC5041_eval.c **** {
 627:boards/TMC5041_eval.c **** 	return handleParameter(READ, motor, type, value);
 628:boards/TMC5041_eval.c **** }
 629:boards/TMC5041_eval.c **** 
 630:boards/TMC5041_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value)
 631:boards/TMC5041_eval.c **** {
  26              		.loc 1 631 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 632:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
  31              		.loc 1 632 2 view .LVU1
  32              		.loc 1 632 4 is_stmt 0 view .LVU2
  33 0000 0128     		cmp	r0, #1
 633:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 634:boards/TMC5041_eval.c **** 
 635:boards/TMC5041_eval.c **** 	*value = TMC5041.velocity[motor];
  34              		.loc 1 635 2 is_stmt 1 view .LVU3
  35              		.loc 1 635 27 is_stmt 0 view .LVU4
  36 0002 9FBF     		itttt	ls
  37 0004 044B     		ldrls	r3, .L4
  38 0006 03EB8000 		addls	r0, r3, r0, lsl #2
  39              	.LVL1:
  40              		.loc 1 635 9 view .LVU5
  41 000a 4368     		ldrls	r3, [r0, #4]
  42 000c 0B60     		strls	r3, [r1]
 636:boards/TMC5041_eval.c **** 
 637:boards/TMC5041_eval.c **** 	return TMC_ERROR_NONE;
  43              		.loc 1 637 2 is_stmt 1 view .LVU6
  44              		.loc 1 637 9 is_stmt 0 view .LVU7
  45 000e 94BF     		ite	ls
  46 0010 0020     		movls	r0, #0
 633:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
  47              		.loc 1 633 10 view .LVU8
  48 0012 0820     		movhi	r0, #8
 638:boards/TMC5041_eval.c **** }
  49              		.loc 1 638 1 view .LVU9
  50 0014 7047     		bx	lr
  51              	.L5:
  52 0016 00BF     		.align	2
  53              	.L4:
  54 0018 00000000 		.word	.LANCHOR0
  55              		.cfi_endproc
  56              	.LFE13:
  58              		.align	1
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	checkErrors:
  65              	.LVL2:
  66              	.LFB17:
 639:boards/TMC5041_eval.c **** 
 640:boards/TMC5041_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
 641:boards/TMC5041_eval.c **** {
 642:boards/TMC5041_eval.c **** 	UNUSED(motor);
 643:boards/TMC5041_eval.c **** 	tmc5041_writeInt(&TMC5041, address, value);
 644:boards/TMC5041_eval.c **** }
 645:boards/TMC5041_eval.c **** 
 646:boards/TMC5041_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
 647:boards/TMC5041_eval.c **** {
 648:boards/TMC5041_eval.c **** 	UNUSED(motor);
 649:boards/TMC5041_eval.c **** 	*value = tmc5041_readInt(&TMC5041, address);
 650:boards/TMC5041_eval.c **** }
 651:boards/TMC5041_eval.c **** 
 652:boards/TMC5041_eval.c **** static void periodicJob(uint32_t tick)
 653:boards/TMC5041_eval.c **** {
 654:boards/TMC5041_eval.c **** 	tmc5041_periodicJob(&TMC5041, tick);
 655:boards/TMC5041_eval.c **** }
 656:boards/TMC5041_eval.c **** 
 657:boards/TMC5041_eval.c **** static void checkErrors(uint32_t tick)
 658:boards/TMC5041_eval.c **** {
  67              		.loc 1 658 1 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
 659:boards/TMC5041_eval.c **** 	UNUSED(tick);
  72              		.loc 1 659 2 view .LVU11
 660:boards/TMC5041_eval.c **** 	Evalboards.ch1.errors = 0;
  73              		.loc 1 660 2 view .LVU12
  74              		.loc 1 660 24 is_stmt 0 view .LVU13
  75 001c 014B     		ldr	r3, .L7
  76 001e 0022     		movs	r2, #0
  77 0020 9A60     		str	r2, [r3, #8]
 661:boards/TMC5041_eval.c **** }
  78              		.loc 1 661 1 view .LVU14
  79 0022 7047     		bx	lr
  80              	.L8:
  81              		.align	2
  82              	.L7:
  83 0024 00000000 		.word	Evalboards
  84              		.cfi_endproc
  85              	.LFE17:
  87              		.align	1
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	periodicJob:
  94              	.LVL3:
  95              	.LFB16:
 653:boards/TMC5041_eval.c **** 	tmc5041_periodicJob(&TMC5041, tick);
  96              		.loc 1 653 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 654:boards/TMC5041_eval.c **** }
 101              		.loc 1 654 2 view .LVU16
 653:boards/TMC5041_eval.c **** 	tmc5041_periodicJob(&TMC5041, tick);
 102              		.loc 1 653 1 is_stmt 0 view .LVU17
 103 0028 0146     		mov	r1, r0
 654:boards/TMC5041_eval.c **** }
 104              		.loc 1 654 2 view .LVU18
 105 002a 0148     		ldr	r0, .L10
 106              	.LVL4:
 654:boards/TMC5041_eval.c **** }
 107              		.loc 1 654 2 view .LVU19
 108 002c FFF7FEBF 		b	tmc5041_periodicJob
 109              	.LVL5:
 110              	.L11:
 654:boards/TMC5041_eval.c **** }
 111              		.loc 1 654 2 view .LVU20
 112              		.align	2
 113              	.L10:
 114 0030 00000000 		.word	.LANCHOR0
 115              		.cfi_endproc
 116              	.LFE16:
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 124              	readRegister:
 125              	.LVL6:
 126              	.LFB15:
 647:boards/TMC5041_eval.c **** 	UNUSED(motor);
 127              		.loc 1 647 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 648:boards/TMC5041_eval.c **** 	*value = tmc5041_readInt(&TMC5041, address);
 131              		.loc 1 648 2 view .LVU22
 649:boards/TMC5041_eval.c **** }
 132              		.loc 1 649 2 view .LVU23
 647:boards/TMC5041_eval.c **** 	UNUSED(motor);
 133              		.loc 1 647 1 is_stmt 0 view .LVU24
 134 0034 10B5     		push	{r4, lr}
 135              	.LCFI0:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 4, -8
 138              		.cfi_offset 14, -4
 649:boards/TMC5041_eval.c **** }
 139              		.loc 1 649 11 view .LVU25
 140 0036 0348     		ldr	r0, .L13
 141              	.LVL7:
 647:boards/TMC5041_eval.c **** 	UNUSED(motor);
 142              		.loc 1 647 1 view .LVU26
 143 0038 1446     		mov	r4, r2
 649:boards/TMC5041_eval.c **** }
 144              		.loc 1 649 11 view .LVU27
 145 003a FFF7FEFF 		bl	tmc5041_readInt
 146              	.LVL8:
 649:boards/TMC5041_eval.c **** }
 147              		.loc 1 649 9 view .LVU28
 148 003e 2060     		str	r0, [r4]
 650:boards/TMC5041_eval.c **** 
 149              		.loc 1 650 1 view .LVU29
 150 0040 10BD     		pop	{r4, pc}
 151              	.LVL9:
 152              	.L14:
 650:boards/TMC5041_eval.c **** 
 153              		.loc 1 650 1 view .LVU30
 154 0042 00BF     		.align	2
 155              	.L13:
 156 0044 00000000 		.word	.LANCHOR0
 157              		.cfi_endproc
 158              	.LFE15:
 160              		.align	1
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu softvfp
 166              	writeRegister:
 167              	.LVL10:
 168              	.LFB14:
 641:boards/TMC5041_eval.c **** 	UNUSED(motor);
 169              		.loc 1 641 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 642:boards/TMC5041_eval.c **** 	tmc5041_writeInt(&TMC5041, address, value);
 174              		.loc 1 642 2 view .LVU32
 643:boards/TMC5041_eval.c **** }
 175              		.loc 1 643 2 view .LVU33
 176 0048 0148     		ldr	r0, .L16
 177              	.LVL11:
 643:boards/TMC5041_eval.c **** }
 178              		.loc 1 643 2 is_stmt 0 view .LVU34
 179 004a FFF7FEBF 		b	tmc5041_writeInt
 180              	.LVL12:
 181              	.L17:
 643:boards/TMC5041_eval.c **** }
 182              		.loc 1 643 2 view .LVU35
 183 004e 00BF     		.align	2
 184              	.L16:
 185 0050 00000000 		.word	.LANCHOR0
 186              		.cfi_endproc
 187              	.LFE14:
 189              		.align	1
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu softvfp
 195              	moveTo:
 196              	.LVL13:
 197              	.LFB8:
  98:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
 198              		.loc 1 98 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
  99:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 202              		.loc 1 99 2 view .LVU37
  99:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 203              		.loc 1 99 4 is_stmt 0 view .LVU38
 204 0054 0128     		cmp	r0, #1
  98:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
 205              		.loc 1 98 1 view .LVU39
 206 0056 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 207              	.LCFI1:
 208              		.cfi_def_cfa_offset 24
 209              		.cfi_offset 3, -24
 210              		.cfi_offset 4, -20
 211              		.cfi_offset 5, -16
 212              		.cfi_offset 6, -12
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
  98:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
 215              		.loc 1 98 1 view .LVU40
 216 0058 0346     		mov	r3, r0
 217 005a 0F46     		mov	r7, r1
  99:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 218              		.loc 1 99 4 view .LVU41
 219 005c 24D8     		bhi	.L21
 102:boards/TMC5041_eval.c **** 	{
 220              		.loc 1 102 2 is_stmt 1 view .LVU42
 221 005e 2025     		movs	r5, #32
 222 0060 8540     		lsls	r5, r5, r0
 102:boards/TMC5041_eval.c **** 	{
 223              		.loc 1 102 25 is_stmt 0 view .LVU43
 224 0062 1248     		ldr	r0, .L25
 225              	.LVL14:
 102:boards/TMC5041_eval.c **** 	{
 226              		.loc 1 102 25 view .LVU44
 227 0064 C418     		adds	r4, r0, r3
 228 0066 6EB2     		sxtb	r6, r5
 102:boards/TMC5041_eval.c **** 	{
 229              		.loc 1 102 4 view .LVU45
 230 0068 94F89832 		ldrb	r3, [r4, #664]	@ zero_extendqisi2
 231 006c 73B1     		cbz	r3, .L20
 104:boards/TMC5041_eval.c **** 		TMC5041.vMaxModified[motor] = false;
 232              		.loc 1 104 3 is_stmt 1 view .LVU46
 233              	.LBB113:
 234              	.LBI113:
  47:boards/TMC5041_eval.c **** {
 235              		.loc 1 47 31 view .LVU47
 236              	.LVL15:
  47:boards/TMC5041_eval.c **** {
 237              		.loc 1 47 31 is_stmt 0 view .LVU48
 238              	.LBE113:
  49:boards/TMC5041_eval.c **** 
 239              		.loc 1 49 2 is_stmt 1 view .LVU49
  51:boards/TMC5041_eval.c **** }
 240              		.loc 1 51 2 view .LVU50
 104:boards/TMC5041_eval.c **** 		TMC5041.vMaxModified[motor] = false;
 241              		.loc 1 104 3 is_stmt 0 view .LVU51
 242 006e D0F89C32 		ldr	r3, [r0, #668]
 104:boards/TMC5041_eval.c **** 		TMC5041.vMaxModified[motor] = false;
 243              		.loc 1 104 90 view .LVU52
 244 0072 45F00702 		orr	r2, r5, #7
 104:boards/TMC5041_eval.c **** 		TMC5041.vMaxModified[motor] = false;
 245              		.loc 1 104 3 view .LVU53
 246 0076 03EB8203 		add	r3, r3, r2, lsl #2
 104:boards/TMC5041_eval.c **** 		TMC5041.vMaxModified[motor] = false;
 247              		.loc 1 104 38 view .LVU54
 248 007a 46F00701 		orr	r1, r6, #7
 249              	.LVL16:
 104:boards/TMC5041_eval.c **** 		TMC5041.vMaxModified[motor] = false;
 250              		.loc 1 104 3 view .LVU55
 251 007e 5A68     		ldr	r2, [r3, #4]
 252 0080 C9B2     		uxtb	r1, r1
 253 0082 FFF7FEFF 		bl	tmc5041_writeInt
 254              	.LVL17:
 105:boards/TMC5041_eval.c **** 	}
 255              		.loc 1 105 3 is_stmt 1 view .LVU56
 105:boards/TMC5041_eval.c **** 	}
 256              		.loc 1 105 31 is_stmt 0 view .LVU57
 257 0086 0023     		movs	r3, #0
 258 0088 84F89832 		strb	r3, [r4, #664]
 259              	.L20:
 107:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_RAMPMODE(motor), TMC5041_MODE_POSITION);
 260              		.loc 1 107 2 is_stmt 1 view .LVU58
 261              	.LBB114:
 262              	.LBI114:
  47:boards/TMC5041_eval.c **** {
 263              		.loc 1 47 31 view .LVU59
 264              	.LVL18:
  47:boards/TMC5041_eval.c **** {
 265              		.loc 1 47 31 is_stmt 0 view .LVU60
 266              	.LBE114:
  49:boards/TMC5041_eval.c **** 
 267              		.loc 1 49 2 is_stmt 1 view .LVU61
  51:boards/TMC5041_eval.c **** }
 268              		.loc 1 51 2 view .LVU62
 107:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_RAMPMODE(motor), TMC5041_MODE_POSITION);
 269              		.loc 1 107 37 is_stmt 0 view .LVU63
 270 008c 46F00D06 		orr	r6, r6, #13
 107:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_RAMPMODE(motor), TMC5041_MODE_POSITION);
 271              		.loc 1 107 2 view .LVU64
 272 0090 0648     		ldr	r0, .L25
 273 0092 3A46     		mov	r2, r7
 274 0094 F1B2     		uxtb	r1, r6
 275 0096 FFF7FEFF 		bl	tmc5041_writeInt
 276              	.LVL19:
 108:boards/TMC5041_eval.c **** 
 277              		.loc 1 108 2 is_stmt 1 view .LVU65
 278              	.LBB115:
 279              	.LBI115:
  47:boards/TMC5041_eval.c **** {
 280              		.loc 1 47 31 view .LVU66
  47:boards/TMC5041_eval.c **** {
 281              		.loc 1 47 31 is_stmt 0 view .LVU67
 282              	.LBE115:
  49:boards/TMC5041_eval.c **** 
 283              		.loc 1 49 2 is_stmt 1 view .LVU68
  51:boards/TMC5041_eval.c **** }
 284              		.loc 1 51 2 view .LVU69
 108:boards/TMC5041_eval.c **** 
 285              		.loc 1 108 2 is_stmt 0 view .LVU70
 286 009a 0448     		ldr	r0, .L25
 287 009c 0022     		movs	r2, #0
 288 009e E9B2     		uxtb	r1, r5
 289 00a0 FFF7FEFF 		bl	tmc5041_writeInt
 290              	.LVL20:
 110:boards/TMC5041_eval.c **** }
 291              		.loc 1 110 2 is_stmt 1 view .LVU71
 110:boards/TMC5041_eval.c **** }
 292              		.loc 1 110 9 is_stmt 0 view .LVU72
 293 00a4 0020     		movs	r0, #0
 294              	.L18:
 111:boards/TMC5041_eval.c **** 
 295              		.loc 1 111 1 view .LVU73
 296 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 297              	.LVL21:
 298              	.L21:
 100:boards/TMC5041_eval.c **** 
 299              		.loc 1 100 10 view .LVU74
 300 00a8 0820     		movs	r0, #8
 301              	.LVL22:
 100:boards/TMC5041_eval.c **** 
 302              		.loc 1 100 10 view .LVU75
 303 00aa FCE7     		b	.L18
 304              	.L26:
 305              		.align	2
 306              	.L25:
 307 00ac 00000000 		.word	.LANCHOR0
 308              		.cfi_endproc
 309              	.LFE8:
 311              		.align	1
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	moveBy:
 318              	.LVL23:
 319              	.LFB9:
 114:boards/TMC5041_eval.c **** 	// determine actual position and add numbers of ticks to move
 320              		.loc 1 114 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 116:boards/TMC5041_eval.c **** 
 324              		.loc 1 116 2 view .LVU77
 325              	.LBB116:
 326              	.LBI116:
  47:boards/TMC5041_eval.c **** {
 327              		.loc 1 47 31 view .LVU78
  47:boards/TMC5041_eval.c **** {
 328              		.loc 1 47 31 is_stmt 0 view .LVU79
 329              	.LBE116:
  49:boards/TMC5041_eval.c **** 
 330              		.loc 1 49 2 is_stmt 1 view .LVU80
  51:boards/TMC5041_eval.c **** }
 331              		.loc 1 51 2 view .LVU81
 114:boards/TMC5041_eval.c **** 	// determine actual position and add numbers of ticks to move
 332              		.loc 1 114 1 is_stmt 0 view .LVU82
 333 00b0 38B5     		push	{r3, r4, r5, lr}
 334              	.LCFI2:
 335              		.cfi_def_cfa_offset 16
 336              		.cfi_offset 3, -16
 337              		.cfi_offset 4, -12
 338              		.cfi_offset 5, -8
 339              		.cfi_offset 14, -4
 116:boards/TMC5041_eval.c **** 
 340              		.loc 1 116 45 view .LVU83
 341 00b2 2023     		movs	r3, #32
 342 00b4 8340     		lsls	r3, r3, r0
 343 00b6 43F00103 		orr	r3, r3, #1
 114:boards/TMC5041_eval.c **** 	// determine actual position and add numbers of ticks to move
 344              		.loc 1 114 1 view .LVU84
 345 00ba 0D46     		mov	r5, r1
 346 00bc 0446     		mov	r4, r0
 116:boards/TMC5041_eval.c **** 
 347              		.loc 1 116 11 view .LVU85
 348 00be D9B2     		uxtb	r1, r3
 349              	.LVL24:
 116:boards/TMC5041_eval.c **** 
 350              		.loc 1 116 11 view .LVU86
 351 00c0 0448     		ldr	r0, .L28
 352              	.LVL25:
 116:boards/TMC5041_eval.c **** 
 353              		.loc 1 116 11 view .LVU87
 354 00c2 FFF7FEFF 		bl	tmc5041_readInt
 355              	.LVL26:
 116:boards/TMC5041_eval.c **** 
 356              		.loc 1 116 69 view .LVU88
 357 00c6 2968     		ldr	r1, [r5]
 358 00c8 0144     		add	r1, r1, r0
 116:boards/TMC5041_eval.c **** 
 359              		.loc 1 116 9 view .LVU89
 360 00ca 2960     		str	r1, [r5]
 118:boards/TMC5041_eval.c **** }
 361              		.loc 1 118 2 is_stmt 1 view .LVU90
 118:boards/TMC5041_eval.c **** }
 362              		.loc 1 118 9 is_stmt 0 view .LVU91
 363 00cc 2046     		mov	r0, r4
 119:boards/TMC5041_eval.c **** 
 364              		.loc 1 119 1 view .LVU92
 365 00ce BDE83840 		pop	{r3, r4, r5, lr}
 366              	.LCFI3:
 367              		.cfi_restore 14
 368              		.cfi_restore 5
 369              		.cfi_restore 4
 370              		.cfi_restore 3
 371              		.cfi_def_cfa_offset 0
 372              	.LVL27:
 118:boards/TMC5041_eval.c **** }
 373              		.loc 1 118 9 view .LVU93
 374 00d2 BFE7     		b	moveTo
 375              	.LVL28:
 376              	.L29:
 377              		.align	2
 378              	.L28:
 379 00d4 00000000 		.word	.LANCHOR0
 380              		.cfi_endproc
 381              	.LFE9:
 383              		.align	1
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu softvfp
 389              	handleParameter:
 390              	.LVL29:
 391              	.LFB10:
 122:boards/TMC5041_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 392              		.loc 1 122 1 is_stmt 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 126:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 396              		.loc 1 126 4 is_stmt 0 view .LVU95
 397 00d8 0129     		cmp	r1, #1
 122:boards/TMC5041_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 398              		.loc 1 122 1 view .LVU96
 399 00da F8B5     		push	{r3, r4, r5, r6, r7, lr}
 400              	.LCFI4:
 401              		.cfi_def_cfa_offset 24
 402              		.cfi_offset 3, -24
 403              		.cfi_offset 4, -20
 404              		.cfi_offset 5, -16
 405              		.cfi_offset 6, -12
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 122:boards/TMC5041_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 408              		.loc 1 122 1 view .LVU97
 409 00dc 0446     		mov	r4, r0
 123:boards/TMC5041_eval.c **** 	int tempValue;
 410              		.loc 1 123 2 is_stmt 1 view .LVU98
 411              	.LVL30:
 124:boards/TMC5041_eval.c **** 
 412              		.loc 1 124 2 view .LVU99
 126:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 413              		.loc 1 126 2 view .LVU100
 122:boards/TMC5041_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 414              		.loc 1 122 1 is_stmt 0 view .LVU101
 415 00de 0D46     		mov	r5, r1
 416 00e0 1E46     		mov	r6, r3
 126:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 417              		.loc 1 126 4 view .LVU102
 418 00e2 00F29285 		bhi	.L159
 129:boards/TMC5041_eval.c **** 	{
 419              		.loc 1 129 2 is_stmt 1 view .LVU103
 420 00e6 1D2A     		cmp	r2, #29
 421 00e8 43D9     		bls	.L176
 422 00ea 8C2A     		cmp	r2, #140
 423 00ec 00F09082 		beq	.L83
 424 00f0 02F15E03 		add	r3, r2, #94
 425              	.LVL31:
 129:boards/TMC5041_eval.c **** 	{
 426              		.loc 1 129 2 is_stmt 0 view .LVU104
 427 00f4 DBB2     		uxtb	r3, r3
 428 00f6 312B     		cmp	r3, #49
 429 00f8 01D9     		bls	.L177
 430 00fa 0424     		movs	r4, #4
 431 00fc 37E0     		b	.L30
 432              	.L177:
 433 00fe A23A     		subs	r2, r2, #162
 434              	.LVL32:
 129:boards/TMC5041_eval.c **** 	{
 435              		.loc 1 129 2 view .LVU105
 436 0100 312A     		cmp	r2, #49
 437 0102 33D8     		bhi	.L34
 438 0104 DFE812F0 		tbh	[pc, r2, lsl #1]
 439              	.L36:
 440 0108 D902     		.2byte	(.L55-.L36)/2
 441 010a F502     		.2byte	(.L54-.L36)/2
 442 010c 1303     		.2byte	(.L53-.L36)/2
 443 010e 2F03     		.2byte	(.L52-.L36)/2
 444 0110 7E03     		.2byte	(.L51-.L36)/2
 445 0112 C003     		.2byte	(.L50-.L36)/2
 446 0114 D503     		.2byte	(.L49-.L36)/2
 447 0116 F003     		.2byte	(.L48-.L36)/2
 448 0118 0C04     		.2byte	(.L47-.L36)/2
 449 011a 2804     		.2byte	(.L46-.L36)/2
 450 011c 4604     		.2byte	(.L45-.L36)/2
 451 011e 6304     		.2byte	(.L44-.L36)/2
 452 0120 8404     		.2byte	(.L43-.L36)/2
 453 0122 3200     		.2byte	(.L34-.L36)/2
 454 0124 3200     		.2byte	(.L34-.L36)/2
 455 0126 3200     		.2byte	(.L34-.L36)/2
 456 0128 3200     		.2byte	(.L34-.L36)/2
 457 012a A904     		.2byte	(.L42-.L36)/2
 458 012c C704     		.2byte	(.L41-.L36)/2
 459 012e D604     		.2byte	(.L40-.L36)/2
 460 0130 FE04     		.2byte	(.L39-.L36)/2
 461 0132 3200     		.2byte	(.L34-.L36)/2
 462 0134 1105     		.2byte	(.L38-.L36)/2
 463 0136 3200     		.2byte	(.L34-.L36)/2
 464 0138 3200     		.2byte	(.L34-.L36)/2
 465 013a 3200     		.2byte	(.L34-.L36)/2
 466 013c 3200     		.2byte	(.L34-.L36)/2
 467 013e 3200     		.2byte	(.L34-.L36)/2
 468 0140 3200     		.2byte	(.L34-.L36)/2
 469 0142 3200     		.2byte	(.L34-.L36)/2
 470 0144 3200     		.2byte	(.L34-.L36)/2
 471 0146 3200     		.2byte	(.L34-.L36)/2
 472 0148 3200     		.2byte	(.L34-.L36)/2
 473 014a 3200     		.2byte	(.L34-.L36)/2
 474 014c 3200     		.2byte	(.L34-.L36)/2
 475 014e 3200     		.2byte	(.L34-.L36)/2
 476 0150 3200     		.2byte	(.L34-.L36)/2
 477 0152 3200     		.2byte	(.L34-.L36)/2
 478 0154 3200     		.2byte	(.L34-.L36)/2
 479 0156 3200     		.2byte	(.L34-.L36)/2
 480 0158 3200     		.2byte	(.L34-.L36)/2
 481 015a 3200     		.2byte	(.L34-.L36)/2
 482 015c 3200     		.2byte	(.L34-.L36)/2
 483 015e 3200     		.2byte	(.L34-.L36)/2
 484 0160 2F05     		.2byte	(.L37-.L36)/2
 485 0162 3200     		.2byte	(.L34-.L36)/2
 486 0164 3200     		.2byte	(.L34-.L36)/2
 487 0166 8405     		.2byte	(.L160-.L36)/2
 488 0168 8405     		.2byte	(.L160-.L36)/2
 489 016a 3D05     		.2byte	(.L35-.L36)/2
 490              		.p2align 1
 491              	.L34:
 492 016c 0424     		movs	r4, #4
 493              	.LVL33:
 494              	.L30:
 618:boards/TMC5041_eval.c **** 
 495              		.loc 1 618 1 view .LVU106
 496 016e 2046     		mov	r0, r4
 497 0170 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 498              	.LVL34:
 499              	.L176:
 618:boards/TMC5041_eval.c **** 
 500              		.loc 1 618 1 view .LVU107
 501 0172 1D2A     		cmp	r2, #29
 502 0174 00F24F85 		bhi	.L161
 503 0178 DFE812F0 		tbh	[pc, r2, lsl #1]
 504              	.LVL35:
 505              	.L57:
 506 017c 1E00     		.2byte	(.L82-.L57)/2
 507 017e 2F00     		.2byte	(.L81-.L57)/2
 508 0180 4000     		.2byte	(.L80-.L57)/2
 509 0182 5800     		.2byte	(.L79-.L57)/2
 510 0184 6B00     		.2byte	(.L78-.L57)/2
 511 0186 8E00     		.2byte	(.L77-.L57)/2
 512 0188 9F00     		.2byte	(.L76-.L57)/2
 513 018a BD00     		.2byte	(.L75-.L57)/2
 514 018c DA00     		.2byte	(.L74-.L57)/2
 515 018e 4D05     		.2byte	(.L161-.L57)/2
 516 0190 E900     		.2byte	(.L73-.L57)/2
 517 0192 FB00     		.2byte	(.L72-.L57)/2
 518 0194 0B01     		.2byte	(.L71-.L57)/2
 519 0196 3901     		.2byte	(.L70-.L57)/2
 520 0198 6801     		.2byte	(.L69-.L57)/2
 521 019a 7901     		.2byte	(.L68-.L57)/2
 522 019c 8C01     		.2byte	(.L67-.L57)/2
 523 019e 9D01     		.2byte	(.L66-.L57)/2
 524 01a0 AE01     		.2byte	(.L65-.L57)/2
 525 01a2 BF01     		.2byte	(.L64-.L57)/2
 526 01a4 D001     		.2byte	(.L63-.L57)/2
 527 01a6 E101     		.2byte	(.L62-.L57)/2
 528 01a8 F201     		.2byte	(.L61-.L57)/2
 529 01aa 0302     		.2byte	(.L60-.L57)/2
 530 01ac 1402     		.2byte	(.L59-.L57)/2
 531 01ae 4D05     		.2byte	(.L161-.L57)/2
 532 01b0 4D05     		.2byte	(.L161-.L57)/2
 533 01b2 4D05     		.2byte	(.L161-.L57)/2
 534 01b4 2502     		.2byte	(.L58-.L57)/2
 535 01b6 4102     		.2byte	(.L56-.L57)/2
 536              		.p2align 1
 537              	.L82:
 133:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_XTARGET(motor));
 538              		.loc 1 133 3 is_stmt 1 view .LVU108
 539 01b8 2021     		movs	r1, #32
 540              	.LVL36:
 133:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_XTARGET(motor));
 541              		.loc 1 133 3 is_stmt 0 view .LVU109
 542 01ba A940     		lsls	r1, r1, r5
 543 01bc 41F00D01 		orr	r1, r1, #13
 544 01c0 C9B2     		uxtb	r1, r1
 133:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_XTARGET(motor));
 545              		.loc 1 133 5 view .LVU110
 546 01c2 20B9     		cbnz	r0, .L85
 134:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 547              		.loc 1 134 4 is_stmt 1 view .LVU111
 548              	.LBB117:
 549              	.LBI117:
  47:boards/TMC5041_eval.c **** {
 550              		.loc 1 47 31 view .LVU112
 551              	.LVL37:
  47:boards/TMC5041_eval.c **** {
 552              		.loc 1 47 31 is_stmt 0 view .LVU113
 553              	.LBE117:
  49:boards/TMC5041_eval.c **** 
 554              		.loc 1 49 2 is_stmt 1 view .LVU114
  51:boards/TMC5041_eval.c **** }
 555              		.loc 1 51 2 view .LVU115
 134:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 556              		.loc 1 134 13 is_stmt 0 view .LVU116
 557 01c4 AF48     		ldr	r0, .L180
 558              	.LVL38:
 134:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 559              		.loc 1 134 13 view .LVU117
 560 01c6 FFF7FEFF 		bl	tmc5041_readInt
 561              	.LVL39:
 134:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 562              		.loc 1 134 11 view .LVU118
 563 01ca 3060     		str	r0, [r6]
 564 01cc CFE7     		b	.L30
 565              	.LVL40:
 566              	.L85:
 135:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_XTARGET(motor), *value);
 567              		.loc 1 135 10 is_stmt 1 view .LVU119
 136:boards/TMC5041_eval.c **** 		}
 568              		.loc 1 136 4 view .LVU120
 569              	.LBB118:
 570              	.LBI118:
  47:boards/TMC5041_eval.c **** {
 571              		.loc 1 47 31 view .LVU121
  47:boards/TMC5041_eval.c **** {
 572              		.loc 1 47 31 is_stmt 0 view .LVU122
 573              	.LBE118:
  49:boards/TMC5041_eval.c **** 
 574              		.loc 1 49 2 is_stmt 1 view .LVU123
  51:boards/TMC5041_eval.c **** }
 575              		.loc 1 51 2 view .LVU124
 136:boards/TMC5041_eval.c **** 		}
 576              		.loc 1 136 4 is_stmt 0 view .LVU125
 577 01ce 3268     		ldr	r2, [r6]
 578              	.LVL41:
 136:boards/TMC5041_eval.c **** 		}
 579              		.loc 1 136 4 view .LVU126
 580 01d0 AC48     		ldr	r0, .L180
 581              	.LVL42:
 136:boards/TMC5041_eval.c **** 		}
 582              		.loc 1 136 4 view .LVU127
 583 01d2 FFF7FEFF 		bl	tmc5041_writeInt
 584              	.LVL43:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 585              		.loc 1 123 11 view .LVU128
 586 01d6 0024     		movs	r4, #0
 587 01d8 C9E7     		b	.L30
 588              	.LVL44:
 589              	.L81:
 141:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_XACTUAL(motor));
 590              		.loc 1 141 3 is_stmt 1 view .LVU129
 591 01da 2021     		movs	r1, #32
 592              	.LVL45:
 141:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_XACTUAL(motor));
 593              		.loc 1 141 3 is_stmt 0 view .LVU130
 594 01dc A940     		lsls	r1, r1, r5
 595 01de 41F00101 		orr	r1, r1, #1
 596 01e2 C9B2     		uxtb	r1, r1
 141:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_XACTUAL(motor));
 597              		.loc 1 141 5 view .LVU131
 598 01e4 20B9     		cbnz	r0, .L86
 142:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 599              		.loc 1 142 4 is_stmt 1 view .LVU132
 600              	.LBB119:
 601              	.LBI119:
  47:boards/TMC5041_eval.c **** {
 602              		.loc 1 47 31 view .LVU133
 603              	.LVL46:
  47:boards/TMC5041_eval.c **** {
 604              		.loc 1 47 31 is_stmt 0 view .LVU134
 605              	.LBE119:
  49:boards/TMC5041_eval.c **** 
 606              		.loc 1 49 2 is_stmt 1 view .LVU135
  51:boards/TMC5041_eval.c **** }
 607              		.loc 1 51 2 view .LVU136
 142:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 608              		.loc 1 142 13 is_stmt 0 view .LVU137
 609 01e6 A748     		ldr	r0, .L180
 610              	.LVL47:
 142:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 611              		.loc 1 142 13 view .LVU138
 612 01e8 FFF7FEFF 		bl	tmc5041_readInt
 613              	.LVL48:
 142:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 614              		.loc 1 142 11 view .LVU139
 615 01ec 3060     		str	r0, [r6]
 616 01ee BEE7     		b	.L30
 617              	.LVL49:
 618              	.L86:
 143:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_XACTUAL(motor), *value);
 619              		.loc 1 143 10 is_stmt 1 view .LVU140
 144:boards/TMC5041_eval.c **** 		}
 620              		.loc 1 144 4 view .LVU141
 621              	.LBB120:
 622              	.LBI120:
  47:boards/TMC5041_eval.c **** {
 623              		.loc 1 47 31 view .LVU142
  47:boards/TMC5041_eval.c **** {
 624              		.loc 1 47 31 is_stmt 0 view .LVU143
 625              	.LBE120:
  49:boards/TMC5041_eval.c **** 
 626              		.loc 1 49 2 is_stmt 1 view .LVU144
  51:boards/TMC5041_eval.c **** }
 627              		.loc 1 51 2 view .LVU145
 144:boards/TMC5041_eval.c **** 		}
 628              		.loc 1 144 4 is_stmt 0 view .LVU146
 629 01f0 3268     		ldr	r2, [r6]
 630              	.LVL50:
 144:boards/TMC5041_eval.c **** 		}
 631              		.loc 1 144 4 view .LVU147
 632 01f2 A448     		ldr	r0, .L180
 633              	.LVL51:
 144:boards/TMC5041_eval.c **** 		}
 634              		.loc 1 144 4 view .LVU148
 635 01f4 FFF7FEFF 		bl	tmc5041_writeInt
 636              	.LVL52:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 637              		.loc 1 123 11 view .LVU149
 638 01f8 0024     		movs	r4, #0
 639 01fa B8E7     		b	.L30
 640              	.LVL53:
 641              	.L80:
 149:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VMAX(motor));
 642              		.loc 1 149 3 is_stmt 1 view .LVU150
 643 01fc 2021     		movs	r1, #32
 644              	.LVL54:
 149:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VMAX(motor));
 645              		.loc 1 149 3 is_stmt 0 view .LVU151
 646 01fe A940     		lsls	r1, r1, r5
 647 0200 41F00701 		orr	r1, r1, #7
 150:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 648              		.loc 1 150 13 view .LVU152
 649 0204 9F48     		ldr	r0, .L180
 650              	.LVL55:
 150:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 651              		.loc 1 150 13 view .LVU153
 652 0206 C9B2     		uxtb	r1, r1
 149:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VMAX(motor));
 653              		.loc 1 149 5 view .LVU154
 654 0208 1CB9     		cbnz	r4, .L87
 150:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 655              		.loc 1 150 4 is_stmt 1 view .LVU155
 656              	.LBB121:
 657              	.LBI121:
  47:boards/TMC5041_eval.c **** {
 658              		.loc 1 47 31 view .LVU156
 659              	.LVL56:
  47:boards/TMC5041_eval.c **** {
 660              		.loc 1 47 31 is_stmt 0 view .LVU157
 661              	.LBE121:
  49:boards/TMC5041_eval.c **** 
 662              		.loc 1 49 2 is_stmt 1 view .LVU158
  51:boards/TMC5041_eval.c **** }
 663              		.loc 1 51 2 view .LVU159
 150:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 664              		.loc 1 150 13 is_stmt 0 view .LVU160
 665 020a FFF7FEFF 		bl	tmc5041_readInt
 666              	.LVL57:
 150:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 667              		.loc 1 150 11 view .LVU161
 668 020e 3060     		str	r0, [r6]
 669 0210 ADE7     		b	.L30
 670              	.LVL58:
 671              	.L87:
 151:boards/TMC5041_eval.c **** 			TMC5041.vMaxModified[motor] = true;
 672              		.loc 1 151 10 is_stmt 1 view .LVU162
 152:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 673              		.loc 1 152 4 view .LVU163
 153:boards/TMC5041_eval.c **** 		}
 674              		.loc 1 153 60 is_stmt 0 view .LVU164
 675 0212 3268     		ldr	r2, [r6]
 676              	.LVL59:
 152:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 677              		.loc 1 152 32 view .LVU165
 678 0214 0544     		add	r5, r5, r0
 153:boards/TMC5041_eval.c **** 		}
 679              		.loc 1 153 4 view .LVU166
 680 0216 002A     		cmp	r2, #0
 152:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 681              		.loc 1 152 32 view .LVU167
 682 0218 4FF00103 		mov	r3, #1
 153:boards/TMC5041_eval.c **** 		}
 683              		.loc 1 153 4 view .LVU168
 684 021c B8BF     		it	lt
 685 021e 5242     		rsblt	r2, r2, #0
 152:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 686              		.loc 1 152 32 view .LVU169
 687 0220 85F89832 		strb	r3, [r5, #664]
 153:boards/TMC5041_eval.c **** 		}
 688              		.loc 1 153 4 is_stmt 1 view .LVU170
 689              	.LBB122:
 690              	.LBI122:
  47:boards/TMC5041_eval.c **** {
 691              		.loc 1 47 31 view .LVU171
 692              	.LVL60:
  47:boards/TMC5041_eval.c **** {
 693              		.loc 1 47 31 is_stmt 0 view .LVU172
 694              	.LBE122:
  49:boards/TMC5041_eval.c **** 
 695              		.loc 1 49 2 is_stmt 1 view .LVU173
  51:boards/TMC5041_eval.c **** }
 696              		.loc 1 51 2 view .LVU174
 123:boards/TMC5041_eval.c **** 	int tempValue;
 697              		.loc 1 123 11 is_stmt 0 view .LVU175
 698 0224 0024     		movs	r4, #0
 153:boards/TMC5041_eval.c **** 		}
 699              		.loc 1 153 4 view .LVU176
 700 0226 FFF7FEFF 		bl	tmc5041_writeInt
 701              	.LVL61:
 702 022a A0E7     		b	.L30
 703              	.LVL62:
 704              	.L79:
 159:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor));
 705              		.loc 1 159 3 is_stmt 1 view .LVU177
 159:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor));
 706              		.loc 1 159 5 is_stmt 0 view .LVU178
 707 022c 0028     		cmp	r0, #0
 708 022e 40F0F584 		bne	.L163
 160:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 709              		.loc 1 160 4 is_stmt 1 view .LVU179
 710              	.LBB123:
 711              	.LBI123:
  47:boards/TMC5041_eval.c **** {
 712              		.loc 1 47 31 view .LVU180
 713              	.LVL63:
  47:boards/TMC5041_eval.c **** {
 714              		.loc 1 47 31 is_stmt 0 view .LVU181
 715              	.LBE123:
  49:boards/TMC5041_eval.c **** 
 716              		.loc 1 49 2 is_stmt 1 view .LVU182
  51:boards/TMC5041_eval.c **** }
 717              		.loc 1 51 2 view .LVU183
 160:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 718              		.loc 1 160 47 is_stmt 0 view .LVU184
 719 0232 2021     		movs	r1, #32
 720              	.LVL64:
 160:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 721              		.loc 1 160 47 view .LVU185
 722 0234 A940     		lsls	r1, r1, r5
 723 0236 41F00201 		orr	r1, r1, #2
 160:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 724              		.loc 1 160 13 view .LVU186
 725 023a 9248     		ldr	r0, .L180
 726              	.LVL65:
 160:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 727              		.loc 1 160 13 view .LVU187
 728 023c C9B2     		uxtb	r1, r1
 729 023e FFF7FEFF 		bl	tmc5041_readInt
 730              	.LVL66:
 161:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 731              		.loc 1 161 4 is_stmt 1 view .LVU188
 161:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 732              		.loc 1 161 13 is_stmt 0 view .LVU189
 733 0242 10F40003 		ands	r3, r0, #8388608
 734 0246 18BF     		it	ne
 735 0248 4FF07F43 		movne	r3, #-16777216
 736 024c 1843     		orrs	r0, r0, r3
 161:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 737              		.loc 1 161 11 view .LVU190
 738 024e 3060     		str	r0, [r6]
 739 0250 8DE7     		b	.L30
 740              	.LVL67:
 741              	.L78:
 168:boards/TMC5041_eval.c **** 			*value=TMC5041_config->shadowRegister[TMC5041_VMAX(motor)];
 742              		.loc 1 168 3 is_stmt 1 view .LVU191
 743 0252 8C4F     		ldr	r7, .L180
 744 0254 2021     		movs	r1, #32
 745              	.LVL68:
 168:boards/TMC5041_eval.c **** 			*value=TMC5041_config->shadowRegister[TMC5041_VMAX(motor)];
 746              		.loc 1 168 3 is_stmt 0 view .LVU192
 747 0256 A940     		lsls	r1, r1, r5
 748 0258 D7F89C32 		ldr	r3, [r7, #668]
 749 025c 41F00705 		orr	r5, r1, #7
 750 0260 AA00     		lsls	r2, r5, #2
 751              	.LVL69:
 169:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 752              		.loc 1 169 41 view .LVU193
 753 0262 1344     		add	r3, r3, r2
 168:boards/TMC5041_eval.c **** 			*value=TMC5041_config->shadowRegister[TMC5041_VMAX(motor)];
 754              		.loc 1 168 5 view .LVU194
 755 0264 10B9     		cbnz	r0, .L89
 169:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 756              		.loc 1 169 4 is_stmt 1 view .LVU195
 169:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 757              		.loc 1 169 41 is_stmt 0 view .LVU196
 758 0266 5B68     		ldr	r3, [r3, #4]
 169:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 759              		.loc 1 169 10 view .LVU197
 760 0268 3360     		str	r3, [r6]
 761 026a 80E7     		b	.L30
 762              	.L89:
 170:boards/TMC5041_eval.c **** 			TMC5041_config->shadowRegister[TMC5041_VMAX(motor)] = abs(*value);
 763              		.loc 1 170 10 is_stmt 1 view .LVU198
 171:boards/TMC5041_eval.c **** 			if(tmc5041_readInt(motorToIC(motor), TMC5041_RAMPMODE(motor)) == TMC5041_MODE_POSITION)
 764              		.loc 1 171 4 view .LVU199
 171:boards/TMC5041_eval.c **** 			if(tmc5041_readInt(motorToIC(motor), TMC5041_RAMPMODE(motor)) == TMC5041_MODE_POSITION)
 765              		.loc 1 171 58 is_stmt 0 view .LVU200
 766 026c 3268     		ldr	r2, [r6]
 767 026e 002A     		cmp	r2, #0
 768 0270 B8BF     		it	lt
 769 0272 5242     		rsblt	r2, r2, #0
 171:boards/TMC5041_eval.c **** 			if(tmc5041_readInt(motorToIC(motor), TMC5041_RAMPMODE(motor)) == TMC5041_MODE_POSITION)
 770              		.loc 1 171 56 view .LVU201
 771 0274 5A60     		str	r2, [r3, #4]
 172:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 772              		.loc 1 172 4 is_stmt 1 view .LVU202
 773              	.LBB124:
 774              	.LBI124:
  47:boards/TMC5041_eval.c **** {
 775              		.loc 1 47 31 view .LVU203
 776              	.LVL70:
  47:boards/TMC5041_eval.c **** {
 777              		.loc 1 47 31 is_stmt 0 view .LVU204
 778              	.LBE124:
  49:boards/TMC5041_eval.c **** 
 779              		.loc 1 49 2 is_stmt 1 view .LVU205
  51:boards/TMC5041_eval.c **** }
 780              		.loc 1 51 2 view .LVU206
 172:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 781              		.loc 1 172 7 is_stmt 0 view .LVU207
 782 0276 C9B2     		uxtb	r1, r1
 783 0278 3846     		mov	r0, r7
 784              	.LVL71:
 172:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 785              		.loc 1 172 7 view .LVU208
 786 027a FFF7FEFF 		bl	tmc5041_readInt
 787              	.LVL72:
 172:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_VMAX(motor), abs(*value));
 788              		.loc 1 172 6 view .LVU209
 789 027e 0446     		mov	r4, r0
 790 0280 08B1     		cbz	r0, .L90
 791              	.L132:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 792              		.loc 1 123 11 view .LVU210
 793 0282 0024     		movs	r4, #0
 794 0284 73E7     		b	.L30
 795              	.L90:
 173:boards/TMC5041_eval.c **** 		}
 796              		.loc 1 173 5 is_stmt 1 view .LVU211
 797              	.LBB125:
 798              	.LBI125:
  47:boards/TMC5041_eval.c **** {
 799              		.loc 1 47 31 view .LVU212
 800              	.LVL73:
  47:boards/TMC5041_eval.c **** {
 801              		.loc 1 47 31 is_stmt 0 view .LVU213
 802              	.LBE125:
  49:boards/TMC5041_eval.c **** 
 803              		.loc 1 49 2 is_stmt 1 view .LVU214
  51:boards/TMC5041_eval.c **** }
 804              		.loc 1 51 2 view .LVU215
 173:boards/TMC5041_eval.c **** 		}
 805              		.loc 1 173 61 is_stmt 0 view .LVU216
 806 0286 3268     		ldr	r2, [r6]
 173:boards/TMC5041_eval.c **** 		}
 807              		.loc 1 173 5 view .LVU217
 808 0288 002A     		cmp	r2, #0
 809 028a B8BF     		it	lt
 810 028c 5242     		rsblt	r2, r2, #0
 811 028e E9B2     		uxtb	r1, r5
 812 0290 3846     		mov	r0, r7
 813 0292 FFF7FEFF 		bl	tmc5041_writeInt
 814              	.LVL74:
 815 0296 6AE7     		b	.L30
 816              	.LVL75:
 817              	.L77:
 178:boards/TMC5041_eval.c **** 			*value=tmc5041_readInt(motorToIC(motor), TMC5041_AMAX(motor));
 818              		.loc 1 178 3 is_stmt 1 view .LVU218
 819 0298 2021     		movs	r1, #32
 820              	.LVL76:
 178:boards/TMC5041_eval.c **** 			*value=tmc5041_readInt(motorToIC(motor), TMC5041_AMAX(motor));
 821              		.loc 1 178 3 is_stmt 0 view .LVU219
 822 029a A940     		lsls	r1, r1, r5
 823 029c 41F00601 		orr	r1, r1, #6
 824 02a0 C9B2     		uxtb	r1, r1
 178:boards/TMC5041_eval.c **** 			*value=tmc5041_readInt(motorToIC(motor), TMC5041_AMAX(motor));
 825              		.loc 1 178 5 view .LVU220
 826 02a2 20B9     		cbnz	r0, .L91
 179:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 827              		.loc 1 179 4 is_stmt 1 view .LVU221
 828              	.LBB126:
 829              	.LBI126:
  47:boards/TMC5041_eval.c **** {
 830              		.loc 1 47 31 view .LVU222
 831              	.LVL77:
  47:boards/TMC5041_eval.c **** {
 832              		.loc 1 47 31 is_stmt 0 view .LVU223
 833              	.LBE126:
  49:boards/TMC5041_eval.c **** 
 834              		.loc 1 49 2 is_stmt 1 view .LVU224
  51:boards/TMC5041_eval.c **** }
 835              		.loc 1 51 2 view .LVU225
 179:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 836              		.loc 1 179 11 is_stmt 0 view .LVU226
 837 02a4 7748     		ldr	r0, .L180
 838              	.LVL78:
 179:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 839              		.loc 1 179 11 view .LVU227
 840 02a6 FFF7FEFF 		bl	tmc5041_readInt
 841              	.LVL79:
 179:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 842              		.loc 1 179 10 view .LVU228
 843 02aa 3060     		str	r0, [r6]
 844 02ac 5FE7     		b	.L30
 845              	.LVL80:
 846              	.L91:
 180:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_AMAX(motor), *value);
 847              		.loc 1 180 10 is_stmt 1 view .LVU229
 181:boards/TMC5041_eval.c **** 		}
 848              		.loc 1 181 4 view .LVU230
 849              	.LBB127:
 850              	.LBI127:
  47:boards/TMC5041_eval.c **** {
 851              		.loc 1 47 31 view .LVU231
  47:boards/TMC5041_eval.c **** {
 852              		.loc 1 47 31 is_stmt 0 view .LVU232
 853              	.LBE127:
  49:boards/TMC5041_eval.c **** 
 854              		.loc 1 49 2 is_stmt 1 view .LVU233
  51:boards/TMC5041_eval.c **** }
 855              		.loc 1 51 2 view .LVU234
 181:boards/TMC5041_eval.c **** 		}
 856              		.loc 1 181 4 is_stmt 0 view .LVU235
 857 02ae 3268     		ldr	r2, [r6]
 858              	.LVL81:
 181:boards/TMC5041_eval.c **** 		}
 859              		.loc 1 181 4 view .LVU236
 860 02b0 7448     		ldr	r0, .L180
 861              	.LVL82:
 181:boards/TMC5041_eval.c **** 		}
 862              		.loc 1 181 4 view .LVU237
 863 02b2 FFF7FEFF 		bl	tmc5041_writeInt
 864              	.LVL83:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 865              		.loc 1 123 11 view .LVU238
 866 02b6 0024     		movs	r4, #0
 867 02b8 59E7     		b	.L30
 868              	.LVL84:
 869              	.L76:
 186:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IRUN_MASK, TMC5041_IRUN
 870              		.loc 1 186 3 is_stmt 1 view .LVU239
 871 02ba 2021     		movs	r1, #32
 872              	.LVL85:
 186:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IRUN_MASK, TMC5041_IRUN
 873              		.loc 1 186 3 is_stmt 0 view .LVU240
 874 02bc 01FA05F5 		lsl	r5, r1, r5
 875 02c0 45F01005 		orr	r5, r5, #16
 876 02c4 EDB2     		uxtb	r5, r5
 187:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 877              		.loc 1 187 13 view .LVU241
 878 02c6 6F48     		ldr	r0, .L180
 879              	.LVL86:
 187:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 880              		.loc 1 187 13 view .LVU242
 881 02c8 2946     		mov	r1, r5
 186:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IRUN_MASK, TMC5041_IRUN
 882              		.loc 1 186 5 view .LVU243
 883 02ca 2CB9     		cbnz	r4, .L92
 187:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 884              		.loc 1 187 4 is_stmt 1 view .LVU244
 187:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 885              		.loc 1 187 13 is_stmt 0 view .LVU245
 886 02cc FFF7FEFF 		bl	tmc5041_readInt
 887              	.LVL87:
 187:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 888              		.loc 1 187 13 view .LVU246
 889 02d0 C0F30420 		ubfx	r0, r0, #8, #5
 187:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 890              		.loc 1 187 11 view .LVU247
 891 02d4 3060     		str	r0, [r6]
 892 02d6 4AE7     		b	.L30
 893              	.LVL88:
 894              	.L92:
 188:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IRUN_MASK, TMC5041_IRUN_SHIFT, 
 895              		.loc 1 188 10 is_stmt 1 view .LVU248
 189:boards/TMC5041_eval.c **** 		}
 896              		.loc 1 189 4 view .LVU249
 897 02d8 FFF7FEFF 		bl	tmc5041_readInt
 898              	.LVL89:
 189:boards/TMC5041_eval.c **** 		}
 899              		.loc 1 189 4 is_stmt 0 view .LVU250
 900 02dc 3368     		ldr	r3, [r6]
 901 02de 1B02     		lsls	r3, r3, #8
 902 02e0 03F4F853 		and	r3, r3, #7936
 903 02e4 20F4F852 		bic	r2, r0, #7936
 904 02e8 1A43     		orrs	r2, r2, r3
 905 02ea 6648     		ldr	r0, .L180
 906 02ec 2946     		mov	r1, r5
 907 02ee FFF7FEFF 		bl	tmc5041_writeInt
 908              	.LVL90:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 909              		.loc 1 123 11 view .LVU251
 910 02f2 0024     		movs	r4, #0
 911 02f4 3BE7     		b	.L30
 912              	.LVL91:
 913              	.L75:
 194:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IHOLD_MASK, TMC5041_IHO
 914              		.loc 1 194 3 is_stmt 1 view .LVU252
 915 02f6 2021     		movs	r1, #32
 916              	.LVL92:
 194:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IHOLD_MASK, TMC5041_IHO
 917              		.loc 1 194 3 is_stmt 0 view .LVU253
 918 02f8 01FA05F5 		lsl	r5, r1, r5
 919 02fc 45F01005 		orr	r5, r5, #16
 920 0300 EDB2     		uxtb	r5, r5
 195:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 921              		.loc 1 195 13 view .LVU254
 922 0302 6048     		ldr	r0, .L180
 923              	.LVL93:
 195:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 924              		.loc 1 195 13 view .LVU255
 925 0304 2946     		mov	r1, r5
 194:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IHOLD_MASK, TMC5041_IHO
 926              		.loc 1 194 5 view .LVU256
 927 0306 2CB9     		cbnz	r4, .L93
 195:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 928              		.loc 1 195 4 is_stmt 1 view .LVU257
 195:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 929              		.loc 1 195 13 is_stmt 0 view .LVU258
 930 0308 FFF7FEFF 		bl	tmc5041_readInt
 931              	.LVL94:
 195:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 932              		.loc 1 195 13 view .LVU259
 933 030c 00F01F00 		and	r0, r0, #31
 195:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 934              		.loc 1 195 11 view .LVU260
 935 0310 3060     		str	r0, [r6]
 936 0312 2CE7     		b	.L30
 937              	.LVL95:
 938              	.L93:
 196:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_IHOLD_IRUN(motor), TMC5041_IHOLD_MASK, TMC5041_IHOLD_SHIFT
 939              		.loc 1 196 10 is_stmt 1 view .LVU261
 197:boards/TMC5041_eval.c **** 		}
 940              		.loc 1 197 4 view .LVU262
 941 0314 FFF7FEFF 		bl	tmc5041_readInt
 942              	.LVL96:
 197:boards/TMC5041_eval.c **** 		}
 943              		.loc 1 197 4 is_stmt 0 view .LVU263
 944 0318 3268     		ldr	r2, [r6]
 945 031a 20F01F00 		bic	r0, r0, #31
 946 031e 02F01F02 		and	r2, r2, #31
 947 0322 0243     		orrs	r2, r2, r0
 948 0324 2946     		mov	r1, r5
 949 0326 5748     		ldr	r0, .L180
 950 0328 FFF7FEFF 		bl	tmc5041_writeInt
 951              	.LVL97:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 952              		.loc 1 123 11 view .LVU264
 953 032c 0024     		movs	r4, #0
 954 032e 1EE7     		b	.L30
 955              	.LVL98:
 956              	.L74:
 202:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_RAMPSTAT(motor), TMC5041_POSITION_REACHED_MASK, TM
 957              		.loc 1 202 3 is_stmt 1 view .LVU265
 202:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_RAMPSTAT(motor), TMC5041_POSITION_REACHED_MASK, TM
 958              		.loc 1 202 5 is_stmt 0 view .LVU266
 959 0330 0028     		cmp	r0, #0
 960 0332 40F07684 		bne	.L165
 203:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 961              		.loc 1 203 4 is_stmt 1 view .LVU267
 203:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 962              		.loc 1 203 13 is_stmt 0 view .LVU268
 963 0336 2021     		movs	r1, #32
 964              	.LVL99:
 203:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 965              		.loc 1 203 13 view .LVU269
 966 0338 A940     		lsls	r1, r1, r5
 967 033a 41F01501 		orr	r1, r1, #21
 968 033e 5148     		ldr	r0, .L180
 969              	.LVL100:
 203:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 970              		.loc 1 203 13 view .LVU270
 971 0340 C9B2     		uxtb	r1, r1
 972 0342 FFF7FEFF 		bl	tmc5041_readInt
 973              	.LVL101:
 203:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 974              		.loc 1 203 13 view .LVU271
 975 0346 C0F34020 		ubfx	r0, r0, #9, #1
 203:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 976              		.loc 1 203 11 view .LVU272
 977 034a 3060     		str	r0, [r6]
 978 034c 0FE7     		b	.L30
 979              	.LVL102:
 980              	.L73:
 210:boards/TMC5041_eval.c **** 			*value = !TMC5041_FIELD_READ(&TMC5041, TMC5041_RAMPSTAT(motor), TMC5041_STATUS_STOP_R_MASK, TMC5
 981              		.loc 1 210 3 is_stmt 1 view .LVU273
 210:boards/TMC5041_eval.c **** 			*value = !TMC5041_FIELD_READ(&TMC5041, TMC5041_RAMPSTAT(motor), TMC5041_STATUS_STOP_R_MASK, TMC5
 982              		.loc 1 210 5 is_stmt 0 view .LVU274
 983 034e 0028     		cmp	r0, #0
 984 0350 40F06A84 		bne	.L166
 211:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 985              		.loc 1 211 4 is_stmt 1 view .LVU275
 211:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 986              		.loc 1 211 14 is_stmt 0 view .LVU276
 987 0354 2021     		movs	r1, #32
 988              	.LVL103:
 211:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 989              		.loc 1 211 14 view .LVU277
 990 0356 A940     		lsls	r1, r1, r5
 991 0358 41F01501 		orr	r1, r1, #21
 992 035c 4948     		ldr	r0, .L180
 993              	.LVL104:
 211:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 994              		.loc 1 211 14 view .LVU278
 995 035e C9B2     		uxtb	r1, r1
 996 0360 FFF7FEFF 		bl	tmc5041_readInt
 997              	.LVL105:
 211:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 998              		.loc 1 211 13 view .LVU279
 999 0364 10F0020F 		tst	r0, #2
 1000 0368 0CBF     		ite	eq
 1001 036a 0123     		moveq	r3, #1
 1002 036c 0023     		movne	r3, #0
 211:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1003              		.loc 1 211 11 view .LVU280
 1004 036e 3360     		str	r3, [r6]
 1005 0370 FDE6     		b	.L30
 1006              	.LVL106:
 1007              	.L72:
 218:boards/TMC5041_eval.c **** 			*value = !TMC5041_FIELD_READ(&TMC5041, TMC5041_RAMPSTAT(motor), TMC5041_STATUS_STOP_L_MASK, TMC5
 1008              		.loc 1 218 3 is_stmt 1 view .LVU281
 218:boards/TMC5041_eval.c **** 			*value = !TMC5041_FIELD_READ(&TMC5041, TMC5041_RAMPSTAT(motor), TMC5041_STATUS_STOP_L_MASK, TMC5
 1009              		.loc 1 218 5 is_stmt 0 view .LVU282
 1010 0372 0028     		cmp	r0, #0
 1011 0374 40F05B84 		bne	.L167
 219:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1012              		.loc 1 219 4 is_stmt 1 view .LVU283
 219:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1013              		.loc 1 219 14 is_stmt 0 view .LVU284
 1014 0378 2021     		movs	r1, #32
 1015              	.LVL107:
 219:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1016              		.loc 1 219 14 view .LVU285
 1017 037a A940     		lsls	r1, r1, r5
 1018 037c 41F01501 		orr	r1, r1, #21
 1019 0380 4048     		ldr	r0, .L180
 1020              	.LVL108:
 219:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1021              		.loc 1 219 14 view .LVU286
 1022 0382 C9B2     		uxtb	r1, r1
 1023 0384 FFF7FEFF 		bl	tmc5041_readInt
 1024              	.LVL109:
 219:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1025              		.loc 1 219 11 view .LVU287
 1026 0388 C043     		mvns	r0, r0
 1027 038a 00F00100 		and	r0, r0, #1
 1028 038e 3060     		str	r0, [r6]
 1029 0390 EDE6     		b	.L30
 1030              	.LVL110:
 1031              	.L71:
 226:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_R_ENABLE_MASK, TMC5041
 1032              		.loc 1 226 3 is_stmt 1 view .LVU288
 1033 0392 2021     		movs	r1, #32
 1034              	.LVL111:
 226:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_R_ENABLE_MASK, TMC5041
 1035              		.loc 1 226 3 is_stmt 0 view .LVU289
 1036 0394 01FA05F5 		lsl	r5, r1, r5
 1037 0398 45F01405 		orr	r5, r5, #20
 1038 039c EDB2     		uxtb	r5, r5
 227:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1039              		.loc 1 227 13 view .LVU290
 1040 039e 3948     		ldr	r0, .L180
 1041              	.LVL112:
 227:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1042              		.loc 1 227 13 view .LVU291
 1043 03a0 2946     		mov	r1, r5
 226:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_R_ENABLE_MASK, TMC5041
 1044              		.loc 1 226 5 view .LVU292
 1045 03a2 2CB9     		cbnz	r4, .L94
 227:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1046              		.loc 1 227 4 is_stmt 1 view .LVU293
 227:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1047              		.loc 1 227 13 is_stmt 0 view .LVU294
 1048 03a4 FFF7FEFF 		bl	tmc5041_readInt
 1049              	.LVL113:
 227:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1050              		.loc 1 227 13 view .LVU295
 1051 03a8 C0F34000 		ubfx	r0, r0, #1, #1
 227:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1052              		.loc 1 227 11 view .LVU296
 1053 03ac 3060     		str	r0, [r6]
 1054 03ae DEE6     		b	.L30
 1055              	.LVL114:
 1056              	.L94:
 228:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_R_ENABLE_MASK, TMC5041_STOP_R_
 1057              		.loc 1 228 10 is_stmt 1 view .LVU297
 229:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_POL_STOP_R_MASK, TMC5041_POL_STOP_R
 1058              		.loc 1 229 4 view .LVU298
 1059 03b0 FFF7FEFF 		bl	tmc5041_readInt
 1060              	.LVL115:
 229:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_POL_STOP_R_MASK, TMC5041_POL_STOP_R
 1061              		.loc 1 229 4 is_stmt 0 view .LVU299
 1062 03b4 3368     		ldr	r3, [r6]
 1063 03b6 002B     		cmp	r3, #0
 1064 03b8 18BF     		it	ne
 1065 03ba 0223     		movne	r3, #2
 1066 03bc 20F00202 		bic	r2, r0, #2
 1067 03c0 1A43     		orrs	r2, r2, r3
 1068 03c2 3048     		ldr	r0, .L180
 1069 03c4 2946     		mov	r1, r5
 1070 03c6 FFF7FEFF 		bl	tmc5041_writeInt
 1071              	.LVL116:
 230:boards/TMC5041_eval.c **** 		}
 1072              		.loc 1 230 4 is_stmt 1 view .LVU300
 1073 03ca 2946     		mov	r1, r5
 1074 03cc 2D48     		ldr	r0, .L180
 1075 03ce FFF7FEFF 		bl	tmc5041_readInt
 1076              	.LVL117:
 1077 03d2 3368     		ldr	r3, [r6]
 1078 03d4 022B     		cmp	r3, #2
 1079 03d6 20F00800 		bic	r0, r0, #8
 1080 03da 0CBF     		ite	eq
 1081 03dc 0822     		moveq	r2, #8
 1082 03de 0022     		movne	r2, #0
 1083 03e0 0243     		orrs	r2, r2, r0
 1084 03e2 2946     		mov	r1, r5
 1085 03e4 2748     		ldr	r0, .L180
 1086 03e6 FFF7FEFF 		bl	tmc5041_writeInt
 1087              	.LVL118:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1088              		.loc 1 123 11 is_stmt 0 view .LVU301
 1089 03ea 0024     		movs	r4, #0
 1090 03ec BFE6     		b	.L30
 1091              	.LVL119:
 1092              	.L70:
 235:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_L_ENABLE_MASK, TMC5041
 1093              		.loc 1 235 3 is_stmt 1 view .LVU302
 1094 03ee 2021     		movs	r1, #32
 1095              	.LVL120:
 235:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_L_ENABLE_MASK, TMC5041
 1096              		.loc 1 235 3 is_stmt 0 view .LVU303
 1097 03f0 01FA05F5 		lsl	r5, r1, r5
 1098 03f4 45F01405 		orr	r5, r5, #20
 1099 03f8 EDB2     		uxtb	r5, r5
 236:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1100              		.loc 1 236 13 view .LVU304
 1101 03fa 2248     		ldr	r0, .L180
 1102              	.LVL121:
 236:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1103              		.loc 1 236 13 view .LVU305
 1104 03fc 2946     		mov	r1, r5
 235:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_L_ENABLE_MASK, TMC5041
 1105              		.loc 1 235 5 view .LVU306
 1106 03fe 2CB9     		cbnz	r4, .L97
 236:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1107              		.loc 1 236 4 is_stmt 1 view .LVU307
 236:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1108              		.loc 1 236 13 is_stmt 0 view .LVU308
 1109 0400 FFF7FEFF 		bl	tmc5041_readInt
 1110              	.LVL122:
 236:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1111              		.loc 1 236 13 view .LVU309
 1112 0404 00F00100 		and	r0, r0, #1
 236:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1113              		.loc 1 236 11 view .LVU310
 1114 0408 3060     		str	r0, [r6]
 1115 040a B0E6     		b	.L30
 1116              	.LVL123:
 1117              	.L97:
 237:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_STOP_L_ENABLE_MASK, TMC5041_STOP_L_
 1118              		.loc 1 237 10 is_stmt 1 view .LVU311
 238:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_POL_STOP_L_MASK, TMC5041_POL_STOP_L
 1119              		.loc 1 238 4 view .LVU312
 1120 040c FFF7FEFF 		bl	tmc5041_readInt
 1121              	.LVL124:
 238:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_POL_STOP_L_MASK, TMC5041_POL_STOP_L
 1122              		.loc 1 238 4 is_stmt 0 view .LVU313
 1123 0410 3268     		ldr	r2, [r6]
 1124 0412 20F00100 		bic	r0, r0, #1
 1125 0416 002A     		cmp	r2, #0
 1126 0418 0CBF     		ite	eq
 1127 041a 0246     		moveq	r2, r0
 1128 041c 40F00102 		orrne	r2, r0, #1
 1129 0420 2946     		mov	r1, r5
 1130 0422 1848     		ldr	r0, .L180
 1131 0424 FFF7FEFF 		bl	tmc5041_writeInt
 1132              	.LVL125:
 239:boards/TMC5041_eval.c **** 		}
 1133              		.loc 1 239 4 is_stmt 1 view .LVU314
 1134 0428 2946     		mov	r1, r5
 1135 042a 1648     		ldr	r0, .L180
 1136 042c FFF7FEFF 		bl	tmc5041_readInt
 1137              	.LVL126:
 1138 0430 3368     		ldr	r3, [r6]
 1139 0432 022B     		cmp	r3, #2
 1140 0434 20F00400 		bic	r0, r0, #4
 1141 0438 0CBF     		ite	eq
 1142 043a 0422     		moveq	r2, #4
 1143 043c 0022     		movne	r2, #0
 1144 043e 0243     		orrs	r2, r2, r0
 1145 0440 2946     		mov	r1, r5
 1146 0442 1048     		ldr	r0, .L180
 1147 0444 FFF7FEFF 		bl	tmc5041_writeInt
 1148              	.LVL127:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1149              		.loc 1 123 11 is_stmt 0 view .LVU315
 1150 0448 0024     		movs	r4, #0
 1151 044a 90E6     		b	.L30
 1152              	.LVL128:
 1153              	.L69:
 244:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_SWMODE(motor));
 1154              		.loc 1 244 3 is_stmt 1 view .LVU316
 1155 044c 2021     		movs	r1, #32
 1156              	.LVL129:
 244:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_SWMODE(motor));
 1157              		.loc 1 244 3 is_stmt 0 view .LVU317
 1158 044e A940     		lsls	r1, r1, r5
 1159 0450 41F01401 		orr	r1, r1, #20
 1160 0454 C9B2     		uxtb	r1, r1
 244:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_SWMODE(motor));
 1161              		.loc 1 244 5 view .LVU318
 1162 0456 20B9     		cbnz	r0, .L99
 245:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1163              		.loc 1 245 4 is_stmt 1 view .LVU319
 1164              	.LBB128:
 1165              	.LBI128:
  47:boards/TMC5041_eval.c **** {
 1166              		.loc 1 47 31 view .LVU320
 1167              	.LVL130:
  47:boards/TMC5041_eval.c **** {
 1168              		.loc 1 47 31 is_stmt 0 view .LVU321
 1169              	.LBE128:
  49:boards/TMC5041_eval.c **** 
 1170              		.loc 1 49 2 is_stmt 1 view .LVU322
  51:boards/TMC5041_eval.c **** }
 1171              		.loc 1 51 2 view .LVU323
 245:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1172              		.loc 1 245 13 is_stmt 0 view .LVU324
 1173 0458 0A48     		ldr	r0, .L180
 1174              	.LVL131:
 245:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1175              		.loc 1 245 13 view .LVU325
 1176 045a FFF7FEFF 		bl	tmc5041_readInt
 1177              	.LVL132:
 245:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1178              		.loc 1 245 11 view .LVU326
 1179 045e 3060     		str	r0, [r6]
 1180 0460 85E6     		b	.L30
 1181              	.LVL133:
 1182              	.L99:
 246:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_SWMODE(motor), *value);
 1183              		.loc 1 246 10 is_stmt 1 view .LVU327
 247:boards/TMC5041_eval.c **** 		}
 1184              		.loc 1 247 4 view .LVU328
 1185              	.LBB129:
 1186              	.LBI129:
  47:boards/TMC5041_eval.c **** {
 1187              		.loc 1 47 31 view .LVU329
  47:boards/TMC5041_eval.c **** {
 1188              		.loc 1 47 31 is_stmt 0 view .LVU330
 1189              	.LBE129:
  49:boards/TMC5041_eval.c **** 
 1190              		.loc 1 49 2 is_stmt 1 view .LVU331
  51:boards/TMC5041_eval.c **** }
 1191              		.loc 1 51 2 view .LVU332
 247:boards/TMC5041_eval.c **** 		}
 1192              		.loc 1 247 4 is_stmt 0 view .LVU333
 1193 0462 3268     		ldr	r2, [r6]
 1194              	.LVL134:
 247:boards/TMC5041_eval.c **** 		}
 1195              		.loc 1 247 4 view .LVU334
 1196 0464 0748     		ldr	r0, .L180
 1197              	.LVL135:
 247:boards/TMC5041_eval.c **** 		}
 1198              		.loc 1 247 4 view .LVU335
 1199 0466 FFF7FEFF 		bl	tmc5041_writeInt
 1200              	.LVL136:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1201              		.loc 1 123 11 view .LVU336
 1202 046a 0024     		movs	r4, #0
 1203 046c 7FE6     		b	.L30
 1204              	.LVL137:
 1205              	.L68:
 252:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_A1(motor));
 1206              		.loc 1 252 3 is_stmt 1 view .LVU337
 1207 046e 2021     		movs	r1, #32
 1208              	.LVL138:
 252:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_A1(motor));
 1209              		.loc 1 252 3 is_stmt 0 view .LVU338
 1210 0470 A940     		lsls	r1, r1, r5
 1211 0472 41F00401 		orr	r1, r1, #4
 1212 0476 C9B2     		uxtb	r1, r1
 252:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_A1(motor));
 1213              		.loc 1 252 5 view .LVU339
 1214 0478 30B9     		cbnz	r0, .L100
 253:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1215              		.loc 1 253 4 is_stmt 1 view .LVU340
 1216              	.LBB130:
 1217              	.LBI130:
  47:boards/TMC5041_eval.c **** {
 1218              		.loc 1 47 31 view .LVU341
 1219              	.LVL139:
  47:boards/TMC5041_eval.c **** {
 1220              		.loc 1 47 31 is_stmt 0 view .LVU342
 1221              	.LBE130:
  49:boards/TMC5041_eval.c **** 
 1222              		.loc 1 49 2 is_stmt 1 view .LVU343
  51:boards/TMC5041_eval.c **** }
 1223              		.loc 1 51 2 view .LVU344
 253:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1224              		.loc 1 253 13 is_stmt 0 view .LVU345
 1225 047a 0248     		ldr	r0, .L180
 1226              	.LVL140:
 253:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1227              		.loc 1 253 13 view .LVU346
 1228 047c FFF7FEFF 		bl	tmc5041_readInt
 1229              	.LVL141:
 253:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1230              		.loc 1 253 11 view .LVU347
 1231 0480 3060     		str	r0, [r6]
 1232 0482 74E6     		b	.L30
 1233              	.L181:
 1234              		.align	2
 1235              	.L180:
 1236 0484 00000000 		.word	.LANCHOR0
 1237              	.LVL142:
 1238              	.L100:
 254:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_A1(motor), *value);
 1239              		.loc 1 254 10 is_stmt 1 view .LVU348
 255:boards/TMC5041_eval.c **** 		}
 1240              		.loc 1 255 4 view .LVU349
 1241              	.LBB131:
 1242              	.LBI131:
  47:boards/TMC5041_eval.c **** {
 1243              		.loc 1 47 31 view .LVU350
  47:boards/TMC5041_eval.c **** {
 1244              		.loc 1 47 31 is_stmt 0 view .LVU351
 1245              	.LBE131:
  49:boards/TMC5041_eval.c **** 
 1246              		.loc 1 49 2 is_stmt 1 view .LVU352
  51:boards/TMC5041_eval.c **** }
 1247              		.loc 1 51 2 view .LVU353
 255:boards/TMC5041_eval.c **** 		}
 1248              		.loc 1 255 4 is_stmt 0 view .LVU354
 1249 0488 3268     		ldr	r2, [r6]
 1250              	.LVL143:
 255:boards/TMC5041_eval.c **** 		}
 1251              		.loc 1 255 4 view .LVU355
 1252 048a A048     		ldr	r0, .L182
 1253              	.LVL144:
 255:boards/TMC5041_eval.c **** 		}
 1254              		.loc 1 255 4 view .LVU356
 1255 048c FFF7FEFF 		bl	tmc5041_writeInt
 1256              	.LVL145:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1257              		.loc 1 123 11 view .LVU357
 1258 0490 0024     		movs	r4, #0
 1259 0492 6CE6     		b	.L30
 1260              	.LVL146:
 1261              	.L67:
 260:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_V1(motor));
 1262              		.loc 1 260 3 is_stmt 1 view .LVU358
 1263 0494 2021     		movs	r1, #32
 1264              	.LVL147:
 260:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_V1(motor));
 1265              		.loc 1 260 3 is_stmt 0 view .LVU359
 1266 0496 A940     		lsls	r1, r1, r5
 1267 0498 41F00501 		orr	r1, r1, #5
 1268 049c C9B2     		uxtb	r1, r1
 260:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_V1(motor));
 1269              		.loc 1 260 5 view .LVU360
 1270 049e 20B9     		cbnz	r0, .L101
 261:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1271              		.loc 1 261 4 is_stmt 1 view .LVU361
 1272              	.LBB132:
 1273              	.LBI132:
  47:boards/TMC5041_eval.c **** {
 1274              		.loc 1 47 31 view .LVU362
 1275              	.LVL148:
  47:boards/TMC5041_eval.c **** {
 1276              		.loc 1 47 31 is_stmt 0 view .LVU363
 1277              	.LBE132:
  49:boards/TMC5041_eval.c **** 
 1278              		.loc 1 49 2 is_stmt 1 view .LVU364
  51:boards/TMC5041_eval.c **** }
 1279              		.loc 1 51 2 view .LVU365
 261:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1280              		.loc 1 261 13 is_stmt 0 view .LVU366
 1281 04a0 9A48     		ldr	r0, .L182
 1282              	.LVL149:
 261:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1283              		.loc 1 261 13 view .LVU367
 1284 04a2 FFF7FEFF 		bl	tmc5041_readInt
 1285              	.LVL150:
 261:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1286              		.loc 1 261 11 view .LVU368
 1287 04a6 3060     		str	r0, [r6]
 1288 04a8 61E6     		b	.L30
 1289              	.LVL151:
 1290              	.L101:
 262:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_V1(motor), *value);
 1291              		.loc 1 262 10 is_stmt 1 view .LVU369
 263:boards/TMC5041_eval.c **** 		}
 1292              		.loc 1 263 4 view .LVU370
 1293              	.LBB133:
 1294              	.LBI133:
  47:boards/TMC5041_eval.c **** {
 1295              		.loc 1 47 31 view .LVU371
  47:boards/TMC5041_eval.c **** {
 1296              		.loc 1 47 31 is_stmt 0 view .LVU372
 1297              	.LBE133:
  49:boards/TMC5041_eval.c **** 
 1298              		.loc 1 49 2 is_stmt 1 view .LVU373
  51:boards/TMC5041_eval.c **** }
 1299              		.loc 1 51 2 view .LVU374
 263:boards/TMC5041_eval.c **** 		}
 1300              		.loc 1 263 4 is_stmt 0 view .LVU375
 1301 04aa 3268     		ldr	r2, [r6]
 1302              	.LVL152:
 263:boards/TMC5041_eval.c **** 		}
 1303              		.loc 1 263 4 view .LVU376
 1304 04ac 9748     		ldr	r0, .L182
 1305              	.LVL153:
 263:boards/TMC5041_eval.c **** 		}
 1306              		.loc 1 263 4 view .LVU377
 1307 04ae FFF7FEFF 		bl	tmc5041_writeInt
 1308              	.LVL154:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1309              		.loc 1 123 11 view .LVU378
 1310 04b2 0024     		movs	r4, #0
 1311 04b4 5BE6     		b	.L30
 1312              	.LVL155:
 1313              	.L66:
 268:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_DMAX(motor));
 1314              		.loc 1 268 3 is_stmt 1 view .LVU379
 1315 04b6 2021     		movs	r1, #32
 1316              	.LVL156:
 268:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_DMAX(motor));
 1317              		.loc 1 268 3 is_stmt 0 view .LVU380
 1318 04b8 A940     		lsls	r1, r1, r5
 1319 04ba 41F00801 		orr	r1, r1, #8
 1320 04be C9B2     		uxtb	r1, r1
 268:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_DMAX(motor));
 1321              		.loc 1 268 5 view .LVU381
 1322 04c0 20B9     		cbnz	r0, .L102
 269:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1323              		.loc 1 269 4 is_stmt 1 view .LVU382
 1324              	.LBB134:
 1325              	.LBI134:
  47:boards/TMC5041_eval.c **** {
 1326              		.loc 1 47 31 view .LVU383
 1327              	.LVL157:
  47:boards/TMC5041_eval.c **** {
 1328              		.loc 1 47 31 is_stmt 0 view .LVU384
 1329              	.LBE134:
  49:boards/TMC5041_eval.c **** 
 1330              		.loc 1 49 2 is_stmt 1 view .LVU385
  51:boards/TMC5041_eval.c **** }
 1331              		.loc 1 51 2 view .LVU386
 269:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1332              		.loc 1 269 13 is_stmt 0 view .LVU387
 1333 04c2 9248     		ldr	r0, .L182
 1334              	.LVL158:
 269:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1335              		.loc 1 269 13 view .LVU388
 1336 04c4 FFF7FEFF 		bl	tmc5041_readInt
 1337              	.LVL159:
 269:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1338              		.loc 1 269 11 view .LVU389
 1339 04c8 3060     		str	r0, [r6]
 1340 04ca 50E6     		b	.L30
 1341              	.LVL160:
 1342              	.L102:
 270:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_DMAX(motor), *value);
 1343              		.loc 1 270 10 is_stmt 1 view .LVU390
 271:boards/TMC5041_eval.c **** 		}
 1344              		.loc 1 271 4 view .LVU391
 1345              	.LBB135:
 1346              	.LBI135:
  47:boards/TMC5041_eval.c **** {
 1347              		.loc 1 47 31 view .LVU392
  47:boards/TMC5041_eval.c **** {
 1348              		.loc 1 47 31 is_stmt 0 view .LVU393
 1349              	.LBE135:
  49:boards/TMC5041_eval.c **** 
 1350              		.loc 1 49 2 is_stmt 1 view .LVU394
  51:boards/TMC5041_eval.c **** }
 1351              		.loc 1 51 2 view .LVU395
 271:boards/TMC5041_eval.c **** 		}
 1352              		.loc 1 271 4 is_stmt 0 view .LVU396
 1353 04cc 3268     		ldr	r2, [r6]
 1354              	.LVL161:
 271:boards/TMC5041_eval.c **** 		}
 1355              		.loc 1 271 4 view .LVU397
 1356 04ce 8F48     		ldr	r0, .L182
 1357              	.LVL162:
 271:boards/TMC5041_eval.c **** 		}
 1358              		.loc 1 271 4 view .LVU398
 1359 04d0 FFF7FEFF 		bl	tmc5041_writeInt
 1360              	.LVL163:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1361              		.loc 1 123 11 view .LVU399
 1362 04d4 0024     		movs	r4, #0
 1363 04d6 4AE6     		b	.L30
 1364              	.LVL164:
 1365              	.L65:
 276:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_D1(motor));
 1366              		.loc 1 276 3 is_stmt 1 view .LVU400
 1367 04d8 2021     		movs	r1, #32
 1368              	.LVL165:
 276:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_D1(motor));
 1369              		.loc 1 276 3 is_stmt 0 view .LVU401
 1370 04da A940     		lsls	r1, r1, r5
 1371 04dc 41F00A01 		orr	r1, r1, #10
 1372 04e0 C9B2     		uxtb	r1, r1
 276:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_D1(motor));
 1373              		.loc 1 276 5 view .LVU402
 1374 04e2 20B9     		cbnz	r0, .L103
 277:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1375              		.loc 1 277 4 is_stmt 1 view .LVU403
 1376              	.LBB136:
 1377              	.LBI136:
  47:boards/TMC5041_eval.c **** {
 1378              		.loc 1 47 31 view .LVU404
 1379              	.LVL166:
  47:boards/TMC5041_eval.c **** {
 1380              		.loc 1 47 31 is_stmt 0 view .LVU405
 1381              	.LBE136:
  49:boards/TMC5041_eval.c **** 
 1382              		.loc 1 49 2 is_stmt 1 view .LVU406
  51:boards/TMC5041_eval.c **** }
 1383              		.loc 1 51 2 view .LVU407
 277:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1384              		.loc 1 277 13 is_stmt 0 view .LVU408
 1385 04e4 8948     		ldr	r0, .L182
 1386              	.LVL167:
 277:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1387              		.loc 1 277 13 view .LVU409
 1388 04e6 FFF7FEFF 		bl	tmc5041_readInt
 1389              	.LVL168:
 277:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1390              		.loc 1 277 11 view .LVU410
 1391 04ea 3060     		str	r0, [r6]
 1392 04ec 3FE6     		b	.L30
 1393              	.LVL169:
 1394              	.L103:
 278:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_D1(motor), *value);
 1395              		.loc 1 278 10 is_stmt 1 view .LVU411
 279:boards/TMC5041_eval.c **** 		}
 1396              		.loc 1 279 4 view .LVU412
 1397              	.LBB137:
 1398              	.LBI137:
  47:boards/TMC5041_eval.c **** {
 1399              		.loc 1 47 31 view .LVU413
  47:boards/TMC5041_eval.c **** {
 1400              		.loc 1 47 31 is_stmt 0 view .LVU414
 1401              	.LBE137:
  49:boards/TMC5041_eval.c **** 
 1402              		.loc 1 49 2 is_stmt 1 view .LVU415
  51:boards/TMC5041_eval.c **** }
 1403              		.loc 1 51 2 view .LVU416
 279:boards/TMC5041_eval.c **** 		}
 1404              		.loc 1 279 4 is_stmt 0 view .LVU417
 1405 04ee 3268     		ldr	r2, [r6]
 1406              	.LVL170:
 279:boards/TMC5041_eval.c **** 		}
 1407              		.loc 1 279 4 view .LVU418
 1408 04f0 8648     		ldr	r0, .L182
 1409              	.LVL171:
 279:boards/TMC5041_eval.c **** 		}
 1410              		.loc 1 279 4 view .LVU419
 1411 04f2 FFF7FEFF 		bl	tmc5041_writeInt
 1412              	.LVL172:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1413              		.loc 1 123 11 view .LVU420
 1414 04f6 0024     		movs	r4, #0
 1415 04f8 39E6     		b	.L30
 1416              	.LVL173:
 1417              	.L64:
 284:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VSTART(motor));
 1418              		.loc 1 284 3 is_stmt 1 view .LVU421
 1419 04fa 2021     		movs	r1, #32
 1420              	.LVL174:
 284:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VSTART(motor));
 1421              		.loc 1 284 3 is_stmt 0 view .LVU422
 1422 04fc A940     		lsls	r1, r1, r5
 1423 04fe 41F00301 		orr	r1, r1, #3
 1424 0502 C9B2     		uxtb	r1, r1
 284:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VSTART(motor));
 1425              		.loc 1 284 5 view .LVU423
 1426 0504 20B9     		cbnz	r0, .L104
 285:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1427              		.loc 1 285 4 is_stmt 1 view .LVU424
 1428              	.LBB138:
 1429              	.LBI138:
  47:boards/TMC5041_eval.c **** {
 1430              		.loc 1 47 31 view .LVU425
 1431              	.LVL175:
  47:boards/TMC5041_eval.c **** {
 1432              		.loc 1 47 31 is_stmt 0 view .LVU426
 1433              	.LBE138:
  49:boards/TMC5041_eval.c **** 
 1434              		.loc 1 49 2 is_stmt 1 view .LVU427
  51:boards/TMC5041_eval.c **** }
 1435              		.loc 1 51 2 view .LVU428
 285:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1436              		.loc 1 285 13 is_stmt 0 view .LVU429
 1437 0506 8148     		ldr	r0, .L182
 1438              	.LVL176:
 285:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1439              		.loc 1 285 13 view .LVU430
 1440 0508 FFF7FEFF 		bl	tmc5041_readInt
 1441              	.LVL177:
 285:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1442              		.loc 1 285 11 view .LVU431
 1443 050c 3060     		str	r0, [r6]
 1444 050e 2EE6     		b	.L30
 1445              	.LVL178:
 1446              	.L104:
 286:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VSTART(motor), *value);
 1447              		.loc 1 286 10 is_stmt 1 view .LVU432
 287:boards/TMC5041_eval.c **** 		}
 1448              		.loc 1 287 4 view .LVU433
 1449              	.LBB139:
 1450              	.LBI139:
  47:boards/TMC5041_eval.c **** {
 1451              		.loc 1 47 31 view .LVU434
  47:boards/TMC5041_eval.c **** {
 1452              		.loc 1 47 31 is_stmt 0 view .LVU435
 1453              	.LBE139:
  49:boards/TMC5041_eval.c **** 
 1454              		.loc 1 49 2 is_stmt 1 view .LVU436
  51:boards/TMC5041_eval.c **** }
 1455              		.loc 1 51 2 view .LVU437
 287:boards/TMC5041_eval.c **** 		}
 1456              		.loc 1 287 4 is_stmt 0 view .LVU438
 1457 0510 3268     		ldr	r2, [r6]
 1458              	.LVL179:
 287:boards/TMC5041_eval.c **** 		}
 1459              		.loc 1 287 4 view .LVU439
 1460 0512 7E48     		ldr	r0, .L182
 1461              	.LVL180:
 287:boards/TMC5041_eval.c **** 		}
 1462              		.loc 1 287 4 view .LVU440
 1463 0514 FFF7FEFF 		bl	tmc5041_writeInt
 1464              	.LVL181:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1465              		.loc 1 123 11 view .LVU441
 1466 0518 0024     		movs	r4, #0
 1467 051a 28E6     		b	.L30
 1468              	.LVL182:
 1469              	.L63:
 292:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VSTOP(motor));
 1470              		.loc 1 292 3 is_stmt 1 view .LVU442
 1471 051c 2021     		movs	r1, #32
 1472              	.LVL183:
 292:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VSTOP(motor));
 1473              		.loc 1 292 3 is_stmt 0 view .LVU443
 1474 051e A940     		lsls	r1, r1, r5
 1475 0520 41F00B01 		orr	r1, r1, #11
 1476 0524 C9B2     		uxtb	r1, r1
 292:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VSTOP(motor));
 1477              		.loc 1 292 5 view .LVU444
 1478 0526 20B9     		cbnz	r0, .L105
 293:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1479              		.loc 1 293 4 is_stmt 1 view .LVU445
 1480              	.LBB140:
 1481              	.LBI140:
  47:boards/TMC5041_eval.c **** {
 1482              		.loc 1 47 31 view .LVU446
 1483              	.LVL184:
  47:boards/TMC5041_eval.c **** {
 1484              		.loc 1 47 31 is_stmt 0 view .LVU447
 1485              	.LBE140:
  49:boards/TMC5041_eval.c **** 
 1486              		.loc 1 49 2 is_stmt 1 view .LVU448
  51:boards/TMC5041_eval.c **** }
 1487              		.loc 1 51 2 view .LVU449
 293:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1488              		.loc 1 293 13 is_stmt 0 view .LVU450
 1489 0528 7848     		ldr	r0, .L182
 1490              	.LVL185:
 293:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1491              		.loc 1 293 13 view .LVU451
 1492 052a FFF7FEFF 		bl	tmc5041_readInt
 1493              	.LVL186:
 293:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1494              		.loc 1 293 11 view .LVU452
 1495 052e 3060     		str	r0, [r6]
 1496 0530 1DE6     		b	.L30
 1497              	.LVL187:
 1498              	.L105:
 294:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VSTOP(motor), *value);
 1499              		.loc 1 294 10 is_stmt 1 view .LVU453
 295:boards/TMC5041_eval.c **** 		}
 1500              		.loc 1 295 4 view .LVU454
 1501              	.LBB141:
 1502              	.LBI141:
  47:boards/TMC5041_eval.c **** {
 1503              		.loc 1 47 31 view .LVU455
  47:boards/TMC5041_eval.c **** {
 1504              		.loc 1 47 31 is_stmt 0 view .LVU456
 1505              	.LBE141:
  49:boards/TMC5041_eval.c **** 
 1506              		.loc 1 49 2 is_stmt 1 view .LVU457
  51:boards/TMC5041_eval.c **** }
 1507              		.loc 1 51 2 view .LVU458
 295:boards/TMC5041_eval.c **** 		}
 1508              		.loc 1 295 4 is_stmt 0 view .LVU459
 1509 0532 3268     		ldr	r2, [r6]
 1510              	.LVL188:
 295:boards/TMC5041_eval.c **** 		}
 1511              		.loc 1 295 4 view .LVU460
 1512 0534 7548     		ldr	r0, .L182
 1513              	.LVL189:
 295:boards/TMC5041_eval.c **** 		}
 1514              		.loc 1 295 4 view .LVU461
 1515 0536 FFF7FEFF 		bl	tmc5041_writeInt
 1516              	.LVL190:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1517              		.loc 1 123 11 view .LVU462
 1518 053a 0024     		movs	r4, #0
 1519 053c 17E6     		b	.L30
 1520              	.LVL191:
 1521              	.L62:
 300:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_TZEROWAIT(motor));
 1522              		.loc 1 300 3 is_stmt 1 view .LVU463
 1523 053e 2021     		movs	r1, #32
 1524              	.LVL192:
 300:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_TZEROWAIT(motor));
 1525              		.loc 1 300 3 is_stmt 0 view .LVU464
 1526 0540 A940     		lsls	r1, r1, r5
 1527 0542 41F00C01 		orr	r1, r1, #12
 1528 0546 C9B2     		uxtb	r1, r1
 300:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_TZEROWAIT(motor));
 1529              		.loc 1 300 5 view .LVU465
 1530 0548 20B9     		cbnz	r0, .L106
 301:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1531              		.loc 1 301 4 is_stmt 1 view .LVU466
 1532              	.LBB142:
 1533              	.LBI142:
  47:boards/TMC5041_eval.c **** {
 1534              		.loc 1 47 31 view .LVU467
 1535              	.LVL193:
  47:boards/TMC5041_eval.c **** {
 1536              		.loc 1 47 31 is_stmt 0 view .LVU468
 1537              	.LBE142:
  49:boards/TMC5041_eval.c **** 
 1538              		.loc 1 49 2 is_stmt 1 view .LVU469
  51:boards/TMC5041_eval.c **** }
 1539              		.loc 1 51 2 view .LVU470
 301:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1540              		.loc 1 301 13 is_stmt 0 view .LVU471
 1541 054a 7048     		ldr	r0, .L182
 1542              	.LVL194:
 301:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1543              		.loc 1 301 13 view .LVU472
 1544 054c FFF7FEFF 		bl	tmc5041_readInt
 1545              	.LVL195:
 301:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1546              		.loc 1 301 11 view .LVU473
 1547 0550 3060     		str	r0, [r6]
 1548 0552 0CE6     		b	.L30
 1549              	.LVL196:
 1550              	.L106:
 302:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_TZEROWAIT(motor), *value);
 1551              		.loc 1 302 10 is_stmt 1 view .LVU474
 303:boards/TMC5041_eval.c **** 		}
 1552              		.loc 1 303 4 view .LVU475
 1553              	.LBB143:
 1554              	.LBI143:
  47:boards/TMC5041_eval.c **** {
 1555              		.loc 1 47 31 view .LVU476
  47:boards/TMC5041_eval.c **** {
 1556              		.loc 1 47 31 is_stmt 0 view .LVU477
 1557              	.LBE143:
  49:boards/TMC5041_eval.c **** 
 1558              		.loc 1 49 2 is_stmt 1 view .LVU478
  51:boards/TMC5041_eval.c **** }
 1559              		.loc 1 51 2 view .LVU479
 303:boards/TMC5041_eval.c **** 		}
 1560              		.loc 1 303 4 is_stmt 0 view .LVU480
 1561 0554 3268     		ldr	r2, [r6]
 1562              	.LVL197:
 303:boards/TMC5041_eval.c **** 		}
 1563              		.loc 1 303 4 view .LVU481
 1564 0556 6D48     		ldr	r0, .L182
 1565              	.LVL198:
 303:boards/TMC5041_eval.c **** 		}
 1566              		.loc 1 303 4 view .LVU482
 1567 0558 FFF7FEFF 		bl	tmc5041_writeInt
 1568              	.LVL199:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1569              		.loc 1 123 11 view .LVU483
 1570 055c 0024     		movs	r4, #0
 1571 055e 06E6     		b	.L30
 1572              	.LVL200:
 1573              	.L61:
 308:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 1574              		.loc 1 308 3 is_stmt 1 view .LVU484
 1575 0560 2021     		movs	r1, #32
 1576              	.LVL201:
 308:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 1577              		.loc 1 308 3 is_stmt 0 view .LVU485
 1578 0562 A940     		lsls	r1, r1, r5
 1579 0564 41F01101 		orr	r1, r1, #17
 1580 0568 C9B2     		uxtb	r1, r1
 308:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 1581              		.loc 1 308 5 view .LVU486
 1582 056a 20B9     		cbnz	r0, .L107
 309:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1583              		.loc 1 309 4 is_stmt 1 view .LVU487
 1584              	.LBB144:
 1585              	.LBI144:
  47:boards/TMC5041_eval.c **** {
 1586              		.loc 1 47 31 view .LVU488
 1587              	.LVL202:
  47:boards/TMC5041_eval.c **** {
 1588              		.loc 1 47 31 is_stmt 0 view .LVU489
 1589              	.LBE144:
  49:boards/TMC5041_eval.c **** 
 1590              		.loc 1 49 2 is_stmt 1 view .LVU490
  51:boards/TMC5041_eval.c **** }
 1591              		.loc 1 51 2 view .LVU491
 309:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1592              		.loc 1 309 13 is_stmt 0 view .LVU492
 1593 056c 6748     		ldr	r0, .L182
 1594              	.LVL203:
 309:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1595              		.loc 1 309 13 view .LVU493
 1596 056e FFF7FEFF 		bl	tmc5041_readInt
 1597              	.LVL204:
 309:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1598              		.loc 1 309 11 view .LVU494
 1599 0572 3060     		str	r0, [r6]
 1600 0574 FBE5     		b	.L30
 1601              	.LVL205:
 1602              	.L107:
 310:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor), *value);
 1603              		.loc 1 310 10 is_stmt 1 view .LVU495
 311:boards/TMC5041_eval.c **** 		}
 1604              		.loc 1 311 4 view .LVU496
 1605              	.LBB145:
 1606              	.LBI145:
  47:boards/TMC5041_eval.c **** {
 1607              		.loc 1 47 31 view .LVU497
  47:boards/TMC5041_eval.c **** {
 1608              		.loc 1 47 31 is_stmt 0 view .LVU498
 1609              	.LBE145:
  49:boards/TMC5041_eval.c **** 
 1610              		.loc 1 49 2 is_stmt 1 view .LVU499
  51:boards/TMC5041_eval.c **** }
 1611              		.loc 1 51 2 view .LVU500
 311:boards/TMC5041_eval.c **** 		}
 1612              		.loc 1 311 4 is_stmt 0 view .LVU501
 1613 0576 3268     		ldr	r2, [r6]
 1614              	.LVL206:
 311:boards/TMC5041_eval.c **** 		}
 1615              		.loc 1 311 4 view .LVU502
 1616 0578 6448     		ldr	r0, .L182
 1617              	.LVL207:
 311:boards/TMC5041_eval.c **** 		}
 1618              		.loc 1 311 4 view .LVU503
 1619 057a FFF7FEFF 		bl	tmc5041_writeInt
 1620              	.LVL208:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1621              		.loc 1 123 11 view .LVU504
 1622 057e 0024     		movs	r4, #0
 1623 0580 F5E5     		b	.L30
 1624              	.LVL209:
 1625              	.L60:
 316:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VHIGH(motor));
 1626              		.loc 1 316 3 is_stmt 1 view .LVU505
 1627 0582 2021     		movs	r1, #32
 1628              	.LVL210:
 316:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VHIGH(motor));
 1629              		.loc 1 316 3 is_stmt 0 view .LVU506
 1630 0584 A940     		lsls	r1, r1, r5
 1631 0586 41F01201 		orr	r1, r1, #18
 1632 058a C9B2     		uxtb	r1, r1
 316:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VHIGH(motor));
 1633              		.loc 1 316 5 view .LVU507
 1634 058c 20B9     		cbnz	r0, .L108
 317:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1635              		.loc 1 317 4 is_stmt 1 view .LVU508
 1636              	.LBB146:
 1637              	.LBI146:
  47:boards/TMC5041_eval.c **** {
 1638              		.loc 1 47 31 view .LVU509
 1639              	.LVL211:
  47:boards/TMC5041_eval.c **** {
 1640              		.loc 1 47 31 is_stmt 0 view .LVU510
 1641              	.LBE146:
  49:boards/TMC5041_eval.c **** 
 1642              		.loc 1 49 2 is_stmt 1 view .LVU511
  51:boards/TMC5041_eval.c **** }
 1643              		.loc 1 51 2 view .LVU512
 317:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1644              		.loc 1 317 13 is_stmt 0 view .LVU513
 1645 058e 5F48     		ldr	r0, .L182
 1646              	.LVL212:
 317:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1647              		.loc 1 317 13 view .LVU514
 1648 0590 FFF7FEFF 		bl	tmc5041_readInt
 1649              	.LVL213:
 317:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1650              		.loc 1 317 11 view .LVU515
 1651 0594 3060     		str	r0, [r6]
 1652 0596 EAE5     		b	.L30
 1653              	.LVL214:
 1654              	.L108:
 318:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VHIGH(motor), *value);
 1655              		.loc 1 318 10 is_stmt 1 view .LVU516
 319:boards/TMC5041_eval.c **** 		}
 1656              		.loc 1 319 4 view .LVU517
 1657              	.LBB147:
 1658              	.LBI147:
  47:boards/TMC5041_eval.c **** {
 1659              		.loc 1 47 31 view .LVU518
  47:boards/TMC5041_eval.c **** {
 1660              		.loc 1 47 31 is_stmt 0 view .LVU519
 1661              	.LBE147:
  49:boards/TMC5041_eval.c **** 
 1662              		.loc 1 49 2 is_stmt 1 view .LVU520
  51:boards/TMC5041_eval.c **** }
 1663              		.loc 1 51 2 view .LVU521
 319:boards/TMC5041_eval.c **** 		}
 1664              		.loc 1 319 4 is_stmt 0 view .LVU522
 1665 0598 3268     		ldr	r2, [r6]
 1666              	.LVL215:
 319:boards/TMC5041_eval.c **** 		}
 1667              		.loc 1 319 4 view .LVU523
 1668 059a 5C48     		ldr	r0, .L182
 1669              	.LVL216:
 319:boards/TMC5041_eval.c **** 		}
 1670              		.loc 1 319 4 view .LVU524
 1671 059c FFF7FEFF 		bl	tmc5041_writeInt
 1672              	.LVL217:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1673              		.loc 1 123 11 view .LVU525
 1674 05a0 0024     		movs	r4, #0
 1675 05a2 E4E5     		b	.L30
 1676              	.LVL218:
 1677              	.L59:
 324:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VDCMIN(motor));
 1678              		.loc 1 324 3 is_stmt 1 view .LVU526
 1679 05a4 2021     		movs	r1, #32
 1680              	.LVL219:
 324:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VDCMIN(motor));
 1681              		.loc 1 324 3 is_stmt 0 view .LVU527
 1682 05a6 A940     		lsls	r1, r1, r5
 1683 05a8 41F01301 		orr	r1, r1, #19
 1684 05ac C9B2     		uxtb	r1, r1
 324:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VDCMIN(motor));
 1685              		.loc 1 324 5 view .LVU528
 1686 05ae 20B9     		cbnz	r0, .L109
 325:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1687              		.loc 1 325 4 is_stmt 1 view .LVU529
 1688              	.LBB148:
 1689              	.LBI148:
  47:boards/TMC5041_eval.c **** {
 1690              		.loc 1 47 31 view .LVU530
 1691              	.LVL220:
  47:boards/TMC5041_eval.c **** {
 1692              		.loc 1 47 31 is_stmt 0 view .LVU531
 1693              	.LBE148:
  49:boards/TMC5041_eval.c **** 
 1694              		.loc 1 49 2 is_stmt 1 view .LVU532
  51:boards/TMC5041_eval.c **** }
 1695              		.loc 1 51 2 view .LVU533
 325:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1696              		.loc 1 325 13 is_stmt 0 view .LVU534
 1697 05b0 5648     		ldr	r0, .L182
 1698              	.LVL221:
 325:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1699              		.loc 1 325 13 view .LVU535
 1700 05b2 FFF7FEFF 		bl	tmc5041_readInt
 1701              	.LVL222:
 325:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1702              		.loc 1 325 11 view .LVU536
 1703 05b6 3060     		str	r0, [r6]
 1704 05b8 D9E5     		b	.L30
 1705              	.LVL223:
 1706              	.L109:
 326:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VDCMIN(motor), *value);
 1707              		.loc 1 326 10 is_stmt 1 view .LVU537
 327:boards/TMC5041_eval.c **** 		}
 1708              		.loc 1 327 4 view .LVU538
 1709              	.LBB149:
 1710              	.LBI149:
  47:boards/TMC5041_eval.c **** {
 1711              		.loc 1 47 31 view .LVU539
  47:boards/TMC5041_eval.c **** {
 1712              		.loc 1 47 31 is_stmt 0 view .LVU540
 1713              	.LBE149:
  49:boards/TMC5041_eval.c **** 
 1714              		.loc 1 49 2 is_stmt 1 view .LVU541
  51:boards/TMC5041_eval.c **** }
 1715              		.loc 1 51 2 view .LVU542
 327:boards/TMC5041_eval.c **** 		}
 1716              		.loc 1 327 4 is_stmt 0 view .LVU543
 1717 05ba 3268     		ldr	r2, [r6]
 1718              	.LVL224:
 327:boards/TMC5041_eval.c **** 		}
 1719              		.loc 1 327 4 view .LVU544
 1720 05bc 5348     		ldr	r0, .L182
 1721              	.LVL225:
 327:boards/TMC5041_eval.c **** 		}
 1722              		.loc 1 327 4 view .LVU545
 1723 05be FFF7FEFF 		bl	tmc5041_writeInt
 1724              	.LVL226:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1725              		.loc 1 123 11 view .LVU546
 1726 05c2 0024     		movs	r4, #0
 1727 05c4 D3E5     		b	.L30
 1728              	.LVL227:
 1729              	.L58:
 332:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VHIGHFS_MASK, TMC5041_VHI
 1730              		.loc 1 332 3 is_stmt 1 view .LVU547
 1731 05c6 0D01     		lsls	r5, r1, #4
 1732 05c8 45F06C05 		orr	r5, r5, #108
 1733 05cc EDB2     		uxtb	r5, r5
 333:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1734              		.loc 1 333 13 is_stmt 0 view .LVU548
 1735 05ce 4F48     		ldr	r0, .L182
 1736              	.LVL228:
 333:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1737              		.loc 1 333 13 view .LVU549
 1738 05d0 2946     		mov	r1, r5
 1739              	.LVL229:
 332:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VHIGHFS_MASK, TMC5041_VHI
 1740              		.loc 1 332 5 view .LVU550
 1741 05d2 2CB9     		cbnz	r4, .L110
 333:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1742              		.loc 1 333 4 is_stmt 1 view .LVU551
 333:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1743              		.loc 1 333 13 is_stmt 0 view .LVU552
 1744 05d4 FFF7FEFF 		bl	tmc5041_readInt
 1745              	.LVL230:
 333:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1746              		.loc 1 333 13 view .LVU553
 1747 05d8 C0F38040 		ubfx	r0, r0, #18, #1
 333:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1748              		.loc 1 333 11 view .LVU554
 1749 05dc 3060     		str	r0, [r6]
 1750 05de C6E5     		b	.L30
 1751              	.LVL231:
 1752              	.L110:
 334:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VHIGHFS_MASK, TMC5041_VHIGHFS_SHI
 1753              		.loc 1 334 10 is_stmt 1 view .LVU555
 335:boards/TMC5041_eval.c **** 		}
 1754              		.loc 1 335 4 view .LVU556
 1755 05e0 FFF7FEFF 		bl	tmc5041_readInt
 1756              	.LVL232:
 335:boards/TMC5041_eval.c **** 		}
 1757              		.loc 1 335 4 is_stmt 0 view .LVU557
 1758 05e4 3368     		ldr	r3, [r6]
 1759 05e6 9B04     		lsls	r3, r3, #18
 1760 05e8 03F48023 		and	r3, r3, #262144
 1761 05ec 20F48022 		bic	r2, r0, #262144
 1762 05f0 1A43     		orrs	r2, r2, r3
 1763 05f2 4648     		ldr	r0, .L182
 1764 05f4 2946     		mov	r1, r5
 1765 05f6 FFF7FEFF 		bl	tmc5041_writeInt
 1766              	.LVL233:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1767              		.loc 1 123 11 view .LVU558
 1768 05fa 0024     		movs	r4, #0
 1769 05fc B7E5     		b	.L30
 1770              	.LVL234:
 1771              	.L56:
 339:boards/TMC5041_eval.c **** 			*value = TMC5041.velocity[motor];
 1772              		.loc 1 339 3 is_stmt 1 view .LVU559
 339:boards/TMC5041_eval.c **** 			*value = TMC5041.velocity[motor];
 1773              		.loc 1 339 5 is_stmt 0 view .LVU560
 1774 05fe 0028     		cmp	r0, #0
 1775 0600 40F01883 		bne	.L171
 340:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1776              		.loc 1 340 4 is_stmt 1 view .LVU561
 340:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1777              		.loc 1 340 29 is_stmt 0 view .LVU562
 1778 0604 4149     		ldr	r1, .L182
 1779              	.LVL235:
 340:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1780              		.loc 1 340 29 view .LVU563
 1781 0606 01EB8501 		add	r1, r1, r5, lsl #2
 340:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1782              		.loc 1 340 11 view .LVU564
 1783 060a 4B68     		ldr	r3, [r1, #4]
 1784 060c 3360     		str	r3, [r6]
 1785 060e AEE5     		b	.L30
 1786              	.LVL236:
 1787              	.L83:
 347:boards/TMC5041_eval.c **** 			*value = 256 >> TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_MRES_MASK, TMC5041
 1788              		.loc 1 347 3 is_stmt 1 view .LVU565
 347:boards/TMC5041_eval.c **** 			*value = 256 >> TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_MRES_MASK, TMC5041
 1789              		.loc 1 347 5 is_stmt 0 view .LVU566
 1790 0610 70B9     		cbnz	r0, .L111
 348:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1791              		.loc 1 348 4 is_stmt 1 view .LVU567
 348:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1792              		.loc 1 348 20 is_stmt 0 view .LVU568
 1793 0612 0901     		lsls	r1, r1, #4
 1794              	.LVL237:
 348:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1795              		.loc 1 348 20 view .LVU569
 1796 0614 41F06C01 		orr	r1, r1, #108
 1797 0618 3C48     		ldr	r0, .L182
 1798              	.LVL238:
 348:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1799              		.loc 1 348 20 view .LVU570
 1800 061a 01F0FC01 		and	r1, r1, #252
 1801 061e FFF7FEFF 		bl	tmc5041_readInt
 1802              	.LVL239:
 348:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1803              		.loc 1 348 20 view .LVU571
 1804 0622 C0F30363 		ubfx	r3, r0, #24, #4
 348:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1805              		.loc 1 348 17 view .LVU572
 1806 0626 4FF48070 		mov	r0, #256
 1807 062a 1841     		asrs	r0, r0, r3
 348:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1808              		.loc 1 348 11 view .LVU573
 1809 062c 3060     		str	r0, [r6]
 1810 062e 9EE5     		b	.L30
 1811              	.LVL240:
 1812              	.L111:
 349:boards/TMC5041_eval.c **** 			switch(*value)
 1813              		.loc 1 349 10 is_stmt 1 view .LVU574
 350:boards/TMC5041_eval.c **** 			{
 1814              		.loc 1 350 4 view .LVU575
 350:boards/TMC5041_eval.c **** 			{
 1815              		.loc 1 350 11 is_stmt 0 view .LVU576
 1816 0630 1B68     		ldr	r3, [r3]
 1817              	.LVL241:
 350:boards/TMC5041_eval.c **** 			{
 1818              		.loc 1 350 11 view .LVU577
 1819 0632 102B     		cmp	r3, #16
 1820 0634 39D0     		beq	.L112
 1821 0636 0ADC     		bgt	.L113
 1822 0638 013B     		subs	r3, r3, #1
 1823 063a 072B     		cmp	r3, #7
 1824 063c 0ED8     		bhi	.L114
 1825 063e 072B     		cmp	r3, #7
 1826 0640 0CD8     		bhi	.L114
 1827 0642 DFE803F0 		tbb	[pc, r3]
 1828              	.LVL242:
 1829              	.L116:
 1830 0646 15       		.byte	(.L119-.L116)/2
 1831 0647 2C       		.byte	(.L118-.L116)/2
 1832 0648 0B       		.byte	(.L114-.L116)/2
 1833 0649 2E       		.byte	(.L117-.L116)/2
 1834 064a 0B       		.byte	(.L114-.L116)/2
 1835 064b 0B       		.byte	(.L114-.L116)/2
 1836 064c 0B       		.byte	(.L114-.L116)/2
 1837 064d 30       		.byte	(.L115-.L116)/2
 1838              		.p2align 1
 1839              	.L113:
 350:boards/TMC5041_eval.c **** 			{
 1840              		.loc 1 350 11 view .LVU578
 1841 064e 802B     		cmp	r3, #128
 1842 0650 31D0     		beq	.L120
 1843 0652 08DC     		bgt	.L121
 1844 0654 202B     		cmp	r3, #32
 1845 0656 2AD0     		beq	.L122
 1846 0658 402B     		cmp	r3, #64
 1847 065a 2AD0     		beq	.L123
 1848              	.LVL243:
 1849              	.L114:
 361:boards/TMC5041_eval.c **** 			}
 1850              		.loc 1 361 15 is_stmt 1 view .LVU579
 361:boards/TMC5041_eval.c **** 			}
 1851              		.loc 1 361 22 is_stmt 0 view .LVU580
 1852 065c 4FF0FF33 		mov	r3, #-1
 1853 0660 3360     		str	r3, [r6]
 361:boards/TMC5041_eval.c **** 			}
 1854              		.loc 1 361 29 is_stmt 1 view .LVU581
 364:boards/TMC5041_eval.c **** 			{
 1855              		.loc 1 364 4 view .LVU582
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1856              		.loc 1 123 11 is_stmt 0 view .LVU583
 1857 0662 0024     		movs	r4, #0
 1858 0664 83E5     		b	.L30
 1859              	.LVL244:
 1860              	.L121:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1861              		.loc 1 123 11 view .LVU584
 1862 0666 B3F5807F 		cmp	r3, #256
 1863 066a F7D1     		bne	.L114
 360:boards/TMC5041_eval.c **** 			default:   *value = -1;  break;
 1864              		.loc 1 360 15 is_stmt 1 view .LVU585
 360:boards/TMC5041_eval.c **** 			default:   *value = -1;  break;
 1865              		.loc 1 360 22 is_stmt 0 view .LVU586
 1866 066c 0023     		movs	r3, #0
 1867 066e 00E0     		b	.L179
 1868              	.LVL245:
 1869              	.L119:
 352:boards/TMC5041_eval.c **** 			case 2:    *value = 7;   break;
 1870              		.loc 1 352 15 is_stmt 1 view .LVU587
 352:boards/TMC5041_eval.c **** 			case 2:    *value = 7;   break;
 1871              		.loc 1 352 22 is_stmt 0 view .LVU588
 1872 0670 0823     		movs	r3, #8
 1873              	.L179:
 366:boards/TMC5041_eval.c **** 			}
 1874              		.loc 1 366 5 view .LVU589
 1875 0672 2D01     		lsls	r5, r5, #4
 1876 0674 45F06C05 		orr	r5, r5, #108
 1877 0678 EDB2     		uxtb	r5, r5
 360:boards/TMC5041_eval.c **** 			default:   *value = -1;  break;
 1878              		.loc 1 360 22 view .LVU590
 1879 067a 3360     		str	r3, [r6]
 360:boards/TMC5041_eval.c **** 			default:   *value = -1;  break;
 1880              		.loc 1 360 29 is_stmt 1 view .LVU591
 364:boards/TMC5041_eval.c **** 			{
 1881              		.loc 1 364 4 view .LVU592
 366:boards/TMC5041_eval.c **** 			}
 1882              		.loc 1 366 5 view .LVU593
 1883 067c 2946     		mov	r1, r5
 1884              	.LVL246:
 366:boards/TMC5041_eval.c **** 			}
 1885              		.loc 1 366 5 is_stmt 0 view .LVU594
 1886 067e 2348     		ldr	r0, .L182
 1887              	.LVL247:
 366:boards/TMC5041_eval.c **** 			}
 1888              		.loc 1 366 5 view .LVU595
 1889 0680 FFF7FEFF 		bl	tmc5041_readInt
 1890              	.LVL248:
 1891 0684 3368     		ldr	r3, [r6]
 1892 0686 1B06     		lsls	r3, r3, #24
 1893 0688 03F07063 		and	r3, r3, #251658240
 1894 068c 20F07062 		bic	r2, r0, #251658240
 1895 0690 1A43     		orrs	r2, r2, r3
 1896 0692 1E48     		ldr	r0, .L182
 1897 0694 2946     		mov	r1, r5
 1898 0696 FFF7FEFF 		bl	tmc5041_writeInt
 1899              	.LVL249:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1900              		.loc 1 123 11 view .LVU596
 1901 069a 0024     		movs	r4, #0
 1902 069c 67E5     		b	.L30
 1903              	.LVL250:
 1904              	.L118:
 353:boards/TMC5041_eval.c **** 			case 4:    *value = 6;   break;
 1905              		.loc 1 353 15 is_stmt 1 view .LVU597
 353:boards/TMC5041_eval.c **** 			case 4:    *value = 6;   break;
 1906              		.loc 1 353 22 is_stmt 0 view .LVU598
 1907 069e 0723     		movs	r3, #7
 1908 06a0 E7E7     		b	.L179
 1909              	.L117:
 354:boards/TMC5041_eval.c **** 			case 8:    *value = 5;   break;
 1910              		.loc 1 354 15 is_stmt 1 view .LVU599
 354:boards/TMC5041_eval.c **** 			case 8:    *value = 5;   break;
 1911              		.loc 1 354 22 is_stmt 0 view .LVU600
 1912 06a2 0623     		movs	r3, #6
 1913 06a4 E5E7     		b	.L179
 1914              	.L115:
 355:boards/TMC5041_eval.c **** 			case 16:   *value = 4;   break;
 1915              		.loc 1 355 15 is_stmt 1 view .LVU601
 355:boards/TMC5041_eval.c **** 			case 16:   *value = 4;   break;
 1916              		.loc 1 355 22 is_stmt 0 view .LVU602
 1917 06a6 0523     		movs	r3, #5
 1918 06a8 E3E7     		b	.L179
 1919              	.LVL251:
 1920              	.L112:
 356:boards/TMC5041_eval.c **** 			case 32:   *value = 3;   break;
 1921              		.loc 1 356 15 is_stmt 1 view .LVU603
 356:boards/TMC5041_eval.c **** 			case 32:   *value = 3;   break;
 1922              		.loc 1 356 22 is_stmt 0 view .LVU604
 1923 06aa 0423     		movs	r3, #4
 1924 06ac E1E7     		b	.L179
 1925              	.L122:
 357:boards/TMC5041_eval.c **** 			case 64:   *value = 2;   break;
 1926              		.loc 1 357 15 is_stmt 1 view .LVU605
 357:boards/TMC5041_eval.c **** 			case 64:   *value = 2;   break;
 1927              		.loc 1 357 22 is_stmt 0 view .LVU606
 1928 06ae 0323     		movs	r3, #3
 1929 06b0 DFE7     		b	.L179
 1930              	.L123:
 358:boards/TMC5041_eval.c **** 			case 128:  *value = 1;   break;
 1931              		.loc 1 358 15 is_stmt 1 view .LVU607
 358:boards/TMC5041_eval.c **** 			case 128:  *value = 1;   break;
 1932              		.loc 1 358 22 is_stmt 0 view .LVU608
 1933 06b2 0223     		movs	r3, #2
 1934 06b4 DDE7     		b	.L179
 1935              	.L120:
 359:boards/TMC5041_eval.c **** 			case 256:  *value = 0;   break;
 1936              		.loc 1 359 15 is_stmt 1 view .LVU609
 359:boards/TMC5041_eval.c **** 			case 256:  *value = 0;   break;
 1937              		.loc 1 359 22 is_stmt 0 view .LVU610
 1938 06b6 0123     		movs	r3, #1
 1939 06b8 DBE7     		b	.L179
 1940              	.LVL252:
 1941              	.L55:
 373:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TBL_MASK, TMC5041_TBL_SHI
 1942              		.loc 1 373 3 is_stmt 1 view .LVU611
 1943 06ba 2D01     		lsls	r5, r5, #4
 1944 06bc 45F06C05 		orr	r5, r5, #108
 1945 06c0 EDB2     		uxtb	r5, r5
 374:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1946              		.loc 1 374 13 is_stmt 0 view .LVU612
 1947 06c2 1248     		ldr	r0, .L182
 1948              	.LVL253:
 374:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1949              		.loc 1 374 13 view .LVU613
 1950 06c4 2946     		mov	r1, r5
 1951              	.LVL254:
 373:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TBL_MASK, TMC5041_TBL_SHI
 1952              		.loc 1 373 5 view .LVU614
 1953 06c6 2CB9     		cbnz	r4, .L126
 374:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1954              		.loc 1 374 4 is_stmt 1 view .LVU615
 374:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1955              		.loc 1 374 13 is_stmt 0 view .LVU616
 1956 06c8 FFF7FEFF 		bl	tmc5041_readInt
 1957              	.LVL255:
 1958 06cc C0F3C130 		ubfx	r0, r0, #15, #2
 374:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1959              		.loc 1 374 11 view .LVU617
 1960 06d0 3060     		str	r0, [r6]
 1961 06d2 4CE5     		b	.L30
 1962              	.L126:
 375:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TBL_MASK, TMC5041_TBL_SHIFT, *val
 1963              		.loc 1 375 10 is_stmt 1 view .LVU618
 376:boards/TMC5041_eval.c **** 		}
 1964              		.loc 1 376 4 view .LVU619
 1965 06d4 FFF7FEFF 		bl	tmc5041_readInt
 1966              	.LVL256:
 1967 06d8 3368     		ldr	r3, [r6]
 1968 06da DB03     		lsls	r3, r3, #15
 1969 06dc 03F4C033 		and	r3, r3, #98304
 1970 06e0 20F4C032 		bic	r2, r0, #98304
 1971 06e4 1A43     		orrs	r2, r2, r3
 1972 06e6 0948     		ldr	r0, .L182
 1973 06e8 2946     		mov	r1, r5
 1974 06ea FFF7FEFF 		bl	tmc5041_writeInt
 1975              	.LVL257:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 1976              		.loc 1 123 11 is_stmt 0 view .LVU620
 1977 06ee 0024     		movs	r4, #0
 1978 06f0 3DE5     		b	.L30
 1979              	.LVL258:
 1980              	.L54:
 381:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_CHM_MASK, TMC5041_CHM_SHI
 1981              		.loc 1 381 3 is_stmt 1 view .LVU621
 1982 06f2 2D01     		lsls	r5, r5, #4
 1983 06f4 45F06C05 		orr	r5, r5, #108
 1984 06f8 EDB2     		uxtb	r5, r5
 382:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1985              		.loc 1 382 13 is_stmt 0 view .LVU622
 1986 06fa 0448     		ldr	r0, .L182
 1987              	.LVL259:
 382:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1988              		.loc 1 382 13 view .LVU623
 1989 06fc 2946     		mov	r1, r5
 1990              	.LVL260:
 381:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_CHM_MASK, TMC5041_CHM_SHI
 1991              		.loc 1 381 5 view .LVU624
 1992 06fe 3CB9     		cbnz	r4, .L127
 382:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1993              		.loc 1 382 4 is_stmt 1 view .LVU625
 382:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1994              		.loc 1 382 13 is_stmt 0 view .LVU626
 1995 0700 FFF7FEFF 		bl	tmc5041_readInt
 1996              	.LVL261:
 1997 0704 C0F38030 		ubfx	r0, r0, #14, #1
 382:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 1998              		.loc 1 382 11 view .LVU627
 1999 0708 3060     		str	r0, [r6]
 2000 070a 30E5     		b	.L30
 2001              	.L183:
 2002              		.align	2
 2003              	.L182:
 2004 070c 00000000 		.word	.LANCHOR0
 2005              	.L127:
 383:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_CHM_MASK, TMC5041_CHM_SHIFT, *val
 2006              		.loc 1 383 10 is_stmt 1 view .LVU628
 384:boards/TMC5041_eval.c **** 		}
 2007              		.loc 1 384 4 view .LVU629
 2008 0710 FFF7FEFF 		bl	tmc5041_readInt
 2009              	.LVL262:
 2010 0714 3368     		ldr	r3, [r6]
 2011 0716 9B03     		lsls	r3, r3, #14
 2012 0718 03F48043 		and	r3, r3, #16384
 2013 071c 20F48042 		bic	r2, r0, #16384
 2014 0720 1A43     		orrs	r2, r2, r3
 2015 0722 BA48     		ldr	r0, .L184
 2016 0724 2946     		mov	r1, r5
 2017 0726 FFF7FEFF 		bl	tmc5041_writeInt
 2018              	.LVL263:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2019              		.loc 1 123 11 is_stmt 0 view .LVU630
 2020 072a 0024     		movs	r4, #0
 2021 072c 1FE5     		b	.L30
 2022              	.LVL264:
 2023              	.L53:
 389:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_DISFDCC_MASK, TMC5041_DIS
 2024              		.loc 1 389 3 is_stmt 1 view .LVU631
 2025 072e 2D01     		lsls	r5, r5, #4
 2026 0730 45F06C05 		orr	r5, r5, #108
 2027 0734 EDB2     		uxtb	r5, r5
 390:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2028              		.loc 1 390 13 is_stmt 0 view .LVU632
 2029 0736 B548     		ldr	r0, .L184
 2030              	.LVL265:
 390:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2031              		.loc 1 390 13 view .LVU633
 2032 0738 2946     		mov	r1, r5
 2033              	.LVL266:
 389:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_DISFDCC_MASK, TMC5041_DIS
 2034              		.loc 1 389 5 view .LVU634
 2035 073a 2CB9     		cbnz	r4, .L128
 390:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2036              		.loc 1 390 4 is_stmt 1 view .LVU635
 390:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2037              		.loc 1 390 13 is_stmt 0 view .LVU636
 2038 073c FFF7FEFF 		bl	tmc5041_readInt
 2039              	.LVL267:
 2040 0740 C0F30030 		ubfx	r0, r0, #12, #1
 390:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2041              		.loc 1 390 11 view .LVU637
 2042 0744 3060     		str	r0, [r6]
 2043 0746 12E5     		b	.L30
 2044              	.L128:
 391:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_DISFDCC_MASK, TMC5041_DISFDCC_SHI
 2045              		.loc 1 391 10 is_stmt 1 view .LVU638
 392:boards/TMC5041_eval.c **** 		}
 2046              		.loc 1 392 4 view .LVU639
 2047 0748 FFF7FEFF 		bl	tmc5041_readInt
 2048              	.LVL268:
 2049 074c 3368     		ldr	r3, [r6]
 2050 074e 1B03     		lsls	r3, r3, #12
 2051 0750 03F48053 		and	r3, r3, #4096
 2052 0754 20F48052 		bic	r2, r0, #4096
 2053 0758 1A43     		orrs	r2, r2, r3
 2054 075a AC48     		ldr	r0, .L184
 2055 075c 2946     		mov	r1, r5
 2056 075e FFF7FEFF 		bl	tmc5041_writeInt
 2057              	.LVL269:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2058              		.loc 1 123 11 is_stmt 0 view .LVU640
 2059 0762 0024     		movs	r4, #0
 2060 0764 03E5     		b	.L30
 2061              	.LVL270:
 2062              	.L52:
 397:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2063              		.loc 1 397 3 is_stmt 1 view .LVU641
 2064              	.LBB150:
 2065              	.LBI150:
  47:boards/TMC5041_eval.c **** {
 2066              		.loc 1 47 31 view .LVU642
  47:boards/TMC5041_eval.c **** {
 2067              		.loc 1 47 31 is_stmt 0 view .LVU643
 2068              	.LBE150:
  49:boards/TMC5041_eval.c **** 
 2069              		.loc 1 49 2 is_stmt 1 view .LVU644
  51:boards/TMC5041_eval.c **** }
 2070              		.loc 1 51 2 view .LVU645
 397:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2071              		.loc 1 397 49 is_stmt 0 view .LVU646
 2072 0766 2D01     		lsls	r5, r5, #4
 2073 0768 45F06C05 		orr	r5, r5, #108
 397:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2074              		.loc 1 397 15 view .LVU647
 2075 076c EDB2     		uxtb	r5, r5
 2076 076e A748     		ldr	r0, .L184
 2077              	.LVL271:
 397:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2078              		.loc 1 397 15 view .LVU648
 2079 0770 2946     		mov	r1, r5
 2080              	.LVL272:
 397:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2081              		.loc 1 397 15 view .LVU649
 2082 0772 FFF7FEFF 		bl	tmc5041_readInt
 2083              	.LVL273:
 398:boards/TMC5041_eval.c **** 			if(tempValue & TMC5041_CHM_MASK)
 2084              		.loc 1 398 3 is_stmt 1 view .LVU650
 2085 0776 00F48047 		and	r7, r0, #16384
 398:boards/TMC5041_eval.c **** 			if(tempValue & TMC5041_CHM_MASK)
 2086              		.loc 1 398 5 is_stmt 0 view .LVU651
 2087 077a 9CB9     		cbnz	r4, .L129
 399:boards/TMC5041_eval.c **** 			{
 2088              		.loc 1 399 4 is_stmt 1 view .LVU652
 399:boards/TMC5041_eval.c **** 			{
 2089              		.loc 1 399 6 is_stmt 0 view .LVU653
 2090 077c 3FB1     		cbz	r7, .L130
 401:boards/TMC5041_eval.c **** 			}
 2091              		.loc 1 401 5 is_stmt 1 view .LVU654
 401:boards/TMC5041_eval.c **** 			}
 2092              		.loc 1 401 14 is_stmt 0 view .LVU655
 2093 077e A348     		ldr	r0, .L184
 2094              	.LVL274:
 401:boards/TMC5041_eval.c **** 			}
 2095              		.loc 1 401 14 view .LVU656
 2096 0780 2946     		mov	r1, r5
 2097 0782 FFF7FEFF 		bl	tmc5041_readInt
 2098              	.LVL275:
 2099 0786 C0F3C310 		ubfx	r0, r0, #7, #4
 401:boards/TMC5041_eval.c **** 			}
 2100              		.loc 1 401 12 view .LVU657
 2101 078a 3060     		str	r0, [r6]
 2102 078c EFE4     		b	.L30
 2103              	.LVL276:
 2104              	.L130:
 405:boards/TMC5041_eval.c **** 				if(tempValue & TMC5041_TFD_3_MASK)
 2105              		.loc 1 405 5 is_stmt 1 view .LVU658
 405:boards/TMC5041_eval.c **** 				if(tempValue & TMC5041_TFD_3_MASK)
 2106              		.loc 1 405 25 is_stmt 0 view .LVU659
 2107 078e 0311     		asrs	r3, r0, #4
 406:boards/TMC5041_eval.c **** 					*value |= 1<<3;	// Add MSB to value
 2108              		.loc 1 406 7 view .LVU660
 2109 0790 0705     		lsls	r7, r0, #20
 405:boards/TMC5041_eval.c **** 				if(tempValue & TMC5041_TFD_3_MASK)
 2110              		.loc 1 405 51 view .LVU661
 2111 0792 03F07003 		and	r3, r3, #112
 406:boards/TMC5041_eval.c **** 					*value |= 1<<3;	// Add MSB to value
 2112              		.loc 1 406 5 is_stmt 1 view .LVU662
 406:boards/TMC5041_eval.c **** 					*value |= 1<<3;	// Add MSB to value
 2113              		.loc 1 406 7 is_stmt 0 view .LVU663
 2114 0796 01D4     		bmi	.L131
 2115              	.LVL277:
 2116              	.L178:
 432:boards/TMC5041_eval.c **** 				if(tempValue & TMC5041_TFD_3_MASK)
 2117              		.loc 1 432 12 view .LVU664
 2118 0798 3360     		str	r3, [r6]
 2119 079a 72E5     		b	.L132
 2120              	.LVL278:
 2121              	.L131:
 407:boards/TMC5041_eval.c **** 			}
 2122              		.loc 1 407 6 is_stmt 1 view .LVU665
 407:boards/TMC5041_eval.c **** 			}
 2123              		.loc 1 407 13 is_stmt 0 view .LVU666
 2124 079c 43F00803 		orr	r3, r3, #8
 2125 07a0 3360     		str	r3, [r6]
 2126 07a2 E4E4     		b	.L30
 2127              	.L129:
 409:boards/TMC5041_eval.c **** 			if(tempValue & TMC5041_CHM_MASK)
 2128              		.loc 1 409 10 is_stmt 1 view .LVU667
 410:boards/TMC5041_eval.c **** 			{
 2129              		.loc 1 410 4 view .LVU668
 412:boards/TMC5041_eval.c **** 			}
 2130              		.loc 1 412 5 is_stmt 0 view .LVU669
 2131 07a4 9948     		ldr	r0, .L184
 2132              	.LVL279:
 412:boards/TMC5041_eval.c **** 			}
 2133              		.loc 1 412 5 view .LVU670
 2134 07a6 2946     		mov	r1, r5
 410:boards/TMC5041_eval.c **** 			{
 2135              		.loc 1 410 6 view .LVU671
 2136 07a8 77B1     		cbz	r7, .L133
 412:boards/TMC5041_eval.c **** 			}
 2137              		.loc 1 412 5 is_stmt 1 view .LVU672
 2138 07aa FFF7FEFF 		bl	tmc5041_readInt
 2139              	.LVL280:
 2140 07ae 3368     		ldr	r3, [r6]
 2141 07b0 DB01     		lsls	r3, r3, #7
 2142 07b2 03F4F063 		and	r3, r3, #1920
 2143 07b6 20F4F062 		bic	r2, r0, #1920
 2144 07ba 1A43     		orrs	r2, r2, r3
 2145 07bc 9348     		ldr	r0, .L184
 2146 07be 2946     		mov	r1, r5
 2147 07c0 FFF7FEFF 		bl	tmc5041_writeInt
 2148              	.LVL281:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2149              		.loc 1 123 11 is_stmt 0 view .LVU673
 2150 07c4 0024     		movs	r4, #0
 2151 07c6 D2E4     		b	.L30
 2152              	.L133:
 416:boards/TMC5041_eval.c **** 
 2153              		.loc 1 416 5 is_stmt 1 view .LVU674
 2154 07c8 FFF7FEFF 		bl	tmc5041_readInt
 2155              	.LVL282:
 2156 07cc 3368     		ldr	r3, [r6]
 2157 07ce 1B02     		lsls	r3, r3, #8
 2158 07d0 03F40063 		and	r3, r3, #2048
 2159 07d4 20F40062 		bic	r2, r0, #2048
 2160 07d8 1A43     		orrs	r2, r2, r3
 2161 07da 8C48     		ldr	r0, .L184
 2162 07dc 2946     		mov	r1, r5
 2163 07de FFF7FEFF 		bl	tmc5041_writeInt
 2164              	.LVL283:
 418:boards/TMC5041_eval.c **** 			}
 2165              		.loc 1 418 5 view .LVU675
 2166 07e2 2946     		mov	r1, r5
 2167 07e4 8948     		ldr	r0, .L184
 2168 07e6 FFF7FEFF 		bl	tmc5041_readInt
 2169              	.LVL284:
 2170 07ea 3368     		ldr	r3, [r6]
 2171 07ec 1B01     		lsls	r3, r3, #4
 2172 07ee 03F07003 		and	r3, r3, #112
 2173 07f2 20F07002 		bic	r2, r0, #112
 2174 07f6 1A43     		orrs	r2, r2, r3
 2175 07f8 8448     		ldr	r0, .L184
 2176 07fa 2946     		mov	r1, r5
 2177 07fc FFF7FEFF 		bl	tmc5041_writeInt
 2178              	.LVL285:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2179              		.loc 1 123 11 is_stmt 0 view .LVU676
 2180 0800 3C46     		mov	r4, r7
 2181 0802 B4E4     		b	.L30
 2182              	.LVL286:
 2183              	.L51:
 424:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2184              		.loc 1 424 3 is_stmt 1 view .LVU677
 2185              	.LBB151:
 2186              	.LBI151:
  47:boards/TMC5041_eval.c **** {
 2187              		.loc 1 47 31 view .LVU678
  47:boards/TMC5041_eval.c **** {
 2188              		.loc 1 47 31 is_stmt 0 view .LVU679
 2189              	.LBE151:
  49:boards/TMC5041_eval.c **** 
 2190              		.loc 1 49 2 is_stmt 1 view .LVU680
  51:boards/TMC5041_eval.c **** }
 2191              		.loc 1 51 2 view .LVU681
 424:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2192              		.loc 1 424 49 is_stmt 0 view .LVU682
 2193 0804 2D01     		lsls	r5, r5, #4
 2194 0806 45F06C05 		orr	r5, r5, #108
 424:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2195              		.loc 1 424 15 view .LVU683
 2196 080a EDB2     		uxtb	r5, r5
 2197 080c 2946     		mov	r1, r5
 2198              	.LVL287:
 424:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2199              		.loc 1 424 15 view .LVU684
 2200 080e 7F48     		ldr	r0, .L184
 2201              	.LVL288:
 424:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2202              		.loc 1 424 15 view .LVU685
 2203 0810 FFF7FEFF 		bl	tmc5041_readInt
 2204              	.LVL289:
 428:boards/TMC5041_eval.c **** 			}
 2205              		.loc 1 428 14 view .LVU686
 2206 0814 2946     		mov	r1, r5
 424:boards/TMC5041_eval.c **** 		if(readWrite == READ) {
 2207              		.loc 1 424 15 view .LVU687
 2208 0816 0746     		mov	r7, r0
 2209              	.LVL290:
 425:boards/TMC5041_eval.c **** 			if(tempValue & TMC5041_CHM_MASK)
 2210              		.loc 1 425 3 is_stmt 1 view .LVU688
 428:boards/TMC5041_eval.c **** 			}
 2211              		.loc 1 428 14 is_stmt 0 view .LVU689
 2212 0818 7C48     		ldr	r0, .L184
 2213              	.LVL291:
 425:boards/TMC5041_eval.c **** 			if(tempValue & TMC5041_CHM_MASK)
 2214              		.loc 1 425 5 view .LVU690
 2215 081a 8CB9     		cbnz	r4, .L134
 426:boards/TMC5041_eval.c **** 			{
 2216              		.loc 1 426 4 is_stmt 1 view .LVU691
 426:boards/TMC5041_eval.c **** 			{
 2217              		.loc 1 426 6 is_stmt 0 view .LVU692
 2218 081c 7D04     		lsls	r5, r7, #17
 2219 081e 05D5     		bpl	.L135
 428:boards/TMC5041_eval.c **** 			}
 2220              		.loc 1 428 5 is_stmt 1 view .LVU693
 428:boards/TMC5041_eval.c **** 			}
 2221              		.loc 1 428 14 is_stmt 0 view .LVU694
 2222 0820 FFF7FEFF 		bl	tmc5041_readInt
 2223              	.LVL292:
 2224 0824 C0F30210 		ubfx	r0, r0, #4, #3
 428:boards/TMC5041_eval.c **** 			}
 2225              		.loc 1 428 12 view .LVU695
 2226 0828 3060     		str	r0, [r6]
 2227 082a A0E4     		b	.L30
 2228              	.L135:
 432:boards/TMC5041_eval.c **** 				if(tempValue & TMC5041_TFD_3_MASK)
 2229              		.loc 1 432 5 is_stmt 1 view .LVU696
 432:boards/TMC5041_eval.c **** 				if(tempValue & TMC5041_TFD_3_MASK)
 2230              		.loc 1 432 14 is_stmt 0 view .LVU697
 2231 082c FFF7FEFF 		bl	tmc5041_readInt
 2232              	.LVL293:
 433:boards/TMC5041_eval.c **** 					*value |= 1<<3; // MSB wird zu value hinzugefügt
 2233              		.loc 1 433 7 view .LVU698
 2234 0830 3905     		lsls	r1, r7, #20
 432:boards/TMC5041_eval.c **** 				if(tempValue & TMC5041_TFD_3_MASK)
 2235              		.loc 1 432 14 view .LVU699
 2236 0832 C0F3C313 		ubfx	r3, r0, #7, #4
 433:boards/TMC5041_eval.c **** 					*value |= 1<<3; // MSB wird zu value hinzugefügt
 2237              		.loc 1 433 5 is_stmt 1 view .LVU700
 433:boards/TMC5041_eval.c **** 					*value |= 1<<3; // MSB wird zu value hinzugefügt
 2238              		.loc 1 433 7 is_stmt 0 view .LVU701
 2239 0836 AFD5     		bpl	.L178
 434:boards/TMC5041_eval.c **** 			}
 2240              		.loc 1 434 6 is_stmt 1 view .LVU702
 434:boards/TMC5041_eval.c **** 			}
 2241              		.loc 1 434 13 is_stmt 0 view .LVU703
 2242 0838 43F00803 		orr	r3, r3, #8
 2243 083c 3360     		str	r3, [r6]
 2244 083e 96E4     		b	.L30
 2245              	.L134:
 436:boards/TMC5041_eval.c **** 			if(tmc5041_readInt(motorToIC(motor), TMC5041_CHOPCONF(motor)) & (1<<14))
 2246              		.loc 1 436 10 is_stmt 1 view .LVU704
 437:boards/TMC5041_eval.c **** 			{
 2247              		.loc 1 437 4 view .LVU705
 2248              	.LBB152:
 2249              	.LBI152:
  47:boards/TMC5041_eval.c **** {
 2250              		.loc 1 47 31 view .LVU706
 2251              	.LVL294:
  47:boards/TMC5041_eval.c **** {
 2252              		.loc 1 47 31 is_stmt 0 view .LVU707
 2253              	.LBE152:
  49:boards/TMC5041_eval.c **** 
 2254              		.loc 1 49 2 is_stmt 1 view .LVU708
  51:boards/TMC5041_eval.c **** }
 2255              		.loc 1 51 2 view .LVU709
 437:boards/TMC5041_eval.c **** 			{
 2256              		.loc 1 437 7 is_stmt 0 view .LVU710
 2257 0840 FFF7FEFF 		bl	tmc5041_readInt
 2258              	.LVL295:
 437:boards/TMC5041_eval.c **** 			{
 2259              		.loc 1 437 6 view .LVU711
 2260 0844 10F48044 		ands	r4, r0, #16384
 439:boards/TMC5041_eval.c **** 			}
 2261              		.loc 1 439 5 view .LVU712
 2262 0848 2946     		mov	r1, r5
 2263 084a 7048     		ldr	r0, .L184
 437:boards/TMC5041_eval.c **** 			{
 2264              		.loc 1 437 6 view .LVU713
 2265 084c 0ED0     		beq	.L137
 439:boards/TMC5041_eval.c **** 			}
 2266              		.loc 1 439 5 is_stmt 1 view .LVU714
 2267 084e FFF7FEFF 		bl	tmc5041_readInt
 2268              	.LVL296:
 2269 0852 3368     		ldr	r3, [r6]
 2270 0854 1B01     		lsls	r3, r3, #4
 2271 0856 03F07003 		and	r3, r3, #112
 2272 085a 20F07002 		bic	r2, r0, #112
 2273 085e 1A43     		orrs	r2, r2, r3
 2274 0860 6A48     		ldr	r0, .L184
 2275 0862 2946     		mov	r1, r5
 2276 0864 FFF7FEFF 		bl	tmc5041_writeInt
 2277              	.LVL297:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2278              		.loc 1 123 11 is_stmt 0 view .LVU715
 2279 0868 0024     		movs	r4, #0
 2280 086a 80E4     		b	.L30
 2281              	.L137:
 443:boards/TMC5041_eval.c **** 			}
 2282              		.loc 1 443 5 is_stmt 1 view .LVU716
 2283 086c FFF7FEFF 		bl	tmc5041_readInt
 2284              	.LVL298:
 2285 0870 3368     		ldr	r3, [r6]
 2286 0872 DB01     		lsls	r3, r3, #7
 2287 0874 03F4F063 		and	r3, r3, #1920
 2288 0878 20F4F062 		bic	r2, r0, #1920
 2289 087c 1A43     		orrs	r2, r2, r3
 2290 087e 6348     		ldr	r0, .L184
 2291 0880 2946     		mov	r1, r5
 2292 0882 FFF7FEFF 		bl	tmc5041_writeInt
 2293              	.LVL299:
 2294 0886 72E4     		b	.L30
 2295              	.LVL300:
 2296              	.L50:
 449:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TOFF_MASK, TMC5041_TOFF_M
 2297              		.loc 1 449 3 view .LVU717
 2298 0888 2D01     		lsls	r5, r5, #4
 2299 088a 45F06C05 		orr	r5, r5, #108
 2300 088e EDB2     		uxtb	r5, r5
 450:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2301              		.loc 1 450 13 is_stmt 0 view .LVU718
 2302 0890 5E48     		ldr	r0, .L184
 2303              	.LVL301:
 450:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2304              		.loc 1 450 13 view .LVU719
 2305 0892 2946     		mov	r1, r5
 2306              	.LVL302:
 449:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TOFF_MASK, TMC5041_TOFF_M
 2307              		.loc 1 449 5 view .LVU720
 2308 0894 1CB9     		cbnz	r4, .L138
 450:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2309              		.loc 1 450 4 is_stmt 1 view .LVU721
 450:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2310              		.loc 1 450 13 is_stmt 0 view .LVU722
 2311 0896 FFF7FEFF 		bl	tmc5041_readInt
 2312              	.LVL303:
 450:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2313              		.loc 1 450 11 view .LVU723
 2314 089a 3460     		str	r4, [r6]
 2315 089c 67E4     		b	.L30
 2316              	.L138:
 451:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_TOFF_MASK, TMC5041_TOFF_MASK, *va
 2317              		.loc 1 451 10 is_stmt 1 view .LVU724
 452:boards/TMC5041_eval.c **** 		}
 2318              		.loc 1 452 4 view .LVU725
 2319 089e FFF7FEFF 		bl	tmc5041_readInt
 2320              	.LVL304:
 2321 08a2 2946     		mov	r1, r5
 2322 08a4 20F00F02 		bic	r2, r0, #15
 2323 08a8 5848     		ldr	r0, .L184
 2324 08aa FFF7FEFF 		bl	tmc5041_writeInt
 2325              	.LVL305:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2326              		.loc 1 123 11 is_stmt 0 view .LVU726
 2327 08ae 0024     		movs	r4, #0
 2328 08b0 5DE4     		b	.L30
 2329              	.LVL306:
 2330              	.L49:
 457:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEIMIN_MASK, TMC5041_SEIM
 2331              		.loc 1 457 3 is_stmt 1 view .LVU727
 2332 08b2 2D01     		lsls	r5, r5, #4
 2333 08b4 45F06D05 		orr	r5, r5, #109
 2334 08b8 EDB2     		uxtb	r5, r5
 458:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2335              		.loc 1 458 13 is_stmt 0 view .LVU728
 2336 08ba 5448     		ldr	r0, .L184
 2337              	.LVL307:
 458:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2338              		.loc 1 458 13 view .LVU729
 2339 08bc 2946     		mov	r1, r5
 2340              	.LVL308:
 457:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEIMIN_MASK, TMC5041_SEIM
 2341              		.loc 1 457 5 view .LVU730
 2342 08be 2CB9     		cbnz	r4, .L139
 458:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2343              		.loc 1 458 4 is_stmt 1 view .LVU731
 458:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2344              		.loc 1 458 13 is_stmt 0 view .LVU732
 2345 08c0 FFF7FEFF 		bl	tmc5041_readInt
 2346              	.LVL309:
 2347 08c4 C0F3C030 		ubfx	r0, r0, #15, #1
 458:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2348              		.loc 1 458 11 view .LVU733
 2349 08c8 3060     		str	r0, [r6]
 2350 08ca 50E4     		b	.L30
 2351              	.L139:
 459:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEIMIN_MASK, TMC5041_SEIMIN_SHIFT
 2352              		.loc 1 459 10 is_stmt 1 view .LVU734
 460:boards/TMC5041_eval.c **** 		}
 2353              		.loc 1 460 4 view .LVU735
 2354 08cc FFF7FEFF 		bl	tmc5041_readInt
 2355              	.LVL310:
 2356 08d0 3368     		ldr	r3, [r6]
 2357 08d2 DB03     		lsls	r3, r3, #15
 2358 08d4 9BB2     		uxth	r3, r3
 2359 08d6 20F40042 		bic	r2, r0, #32768
 2360 08da 1A43     		orrs	r2, r2, r3
 2361 08dc 4B48     		ldr	r0, .L184
 2362 08de 2946     		mov	r1, r5
 2363 08e0 FFF7FEFF 		bl	tmc5041_writeInt
 2364              	.LVL311:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2365              		.loc 1 123 11 is_stmt 0 view .LVU736
 2366 08e4 0024     		movs	r4, #0
 2367 08e6 42E4     		b	.L30
 2368              	.LVL312:
 2369              	.L48:
 465:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEDN_MASK, TMC5041_SEDN_S
 2370              		.loc 1 465 3 is_stmt 1 view .LVU737
 2371 08e8 2D01     		lsls	r5, r5, #4
 2372 08ea 45F06D05 		orr	r5, r5, #109
 2373 08ee EDB2     		uxtb	r5, r5
 466:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2374              		.loc 1 466 13 is_stmt 0 view .LVU738
 2375 08f0 4648     		ldr	r0, .L184
 2376              	.LVL313:
 466:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2377              		.loc 1 466 13 view .LVU739
 2378 08f2 2946     		mov	r1, r5
 2379              	.LVL314:
 465:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEDN_MASK, TMC5041_SEDN_S
 2380              		.loc 1 465 5 view .LVU740
 2381 08f4 2CB9     		cbnz	r4, .L140
 466:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2382              		.loc 1 466 4 is_stmt 1 view .LVU741
 466:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2383              		.loc 1 466 13 is_stmt 0 view .LVU742
 2384 08f6 FFF7FEFF 		bl	tmc5041_readInt
 2385              	.LVL315:
 2386 08fa C0F34130 		ubfx	r0, r0, #13, #2
 466:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2387              		.loc 1 466 11 view .LVU743
 2388 08fe 3060     		str	r0, [r6]
 2389 0900 35E4     		b	.L30
 2390              	.L140:
 467:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEDN_MASK, TMC5041_SEDN_SHIFT, *v
 2391              		.loc 1 467 10 is_stmt 1 view .LVU744
 468:boards/TMC5041_eval.c **** 		}
 2392              		.loc 1 468 4 view .LVU745
 2393 0902 FFF7FEFF 		bl	tmc5041_readInt
 2394              	.LVL316:
 2395 0906 3368     		ldr	r3, [r6]
 2396 0908 5B03     		lsls	r3, r3, #13
 2397 090a 03F4C043 		and	r3, r3, #24576
 2398 090e 20F4C042 		bic	r2, r0, #24576
 2399 0912 1A43     		orrs	r2, r2, r3
 2400 0914 3D48     		ldr	r0, .L184
 2401 0916 2946     		mov	r1, r5
 2402 0918 FFF7FEFF 		bl	tmc5041_writeInt
 2403              	.LVL317:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2404              		.loc 1 123 11 is_stmt 0 view .LVU746
 2405 091c 0024     		movs	r4, #0
 2406 091e 26E4     		b	.L30
 2407              	.LVL318:
 2408              	.L47:
 473:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMAX_MASK, TMC5041_SEMAX
 2409              		.loc 1 473 3 is_stmt 1 view .LVU747
 2410 0920 2D01     		lsls	r5, r5, #4
 2411 0922 45F06D05 		orr	r5, r5, #109
 2412 0926 EDB2     		uxtb	r5, r5
 474:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2413              		.loc 1 474 13 is_stmt 0 view .LVU748
 2414 0928 3848     		ldr	r0, .L184
 2415              	.LVL319:
 474:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2416              		.loc 1 474 13 view .LVU749
 2417 092a 2946     		mov	r1, r5
 2418              	.LVL320:
 473:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMAX_MASK, TMC5041_SEMAX
 2419              		.loc 1 473 5 view .LVU750
 2420 092c 2CB9     		cbnz	r4, .L141
 474:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2421              		.loc 1 474 4 is_stmt 1 view .LVU751
 474:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2422              		.loc 1 474 13 is_stmt 0 view .LVU752
 2423 092e FFF7FEFF 		bl	tmc5041_readInt
 2424              	.LVL321:
 2425 0932 C0F30320 		ubfx	r0, r0, #8, #4
 474:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2426              		.loc 1 474 11 view .LVU753
 2427 0936 3060     		str	r0, [r6]
 2428 0938 19E4     		b	.L30
 2429              	.L141:
 475:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMAX_MASK, TMC5041_SEMAX_SHIFT, 
 2430              		.loc 1 475 10 is_stmt 1 view .LVU754
 476:boards/TMC5041_eval.c **** 		}
 2431              		.loc 1 476 4 view .LVU755
 2432 093a FFF7FEFF 		bl	tmc5041_readInt
 2433              	.LVL322:
 2434 093e 3368     		ldr	r3, [r6]
 2435 0940 1B02     		lsls	r3, r3, #8
 2436 0942 03F47063 		and	r3, r3, #3840
 2437 0946 20F47062 		bic	r2, r0, #3840
 2438 094a 1A43     		orrs	r2, r2, r3
 2439 094c 2F48     		ldr	r0, .L184
 2440 094e 2946     		mov	r1, r5
 2441 0950 FFF7FEFF 		bl	tmc5041_writeInt
 2442              	.LVL323:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2443              		.loc 1 123 11 is_stmt 0 view .LVU756
 2444 0954 0024     		movs	r4, #0
 2445 0956 0AE4     		b	.L30
 2446              	.LVL324:
 2447              	.L46:
 481:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEUP_MASK, TMC5041_SEUP_S
 2448              		.loc 1 481 3 is_stmt 1 view .LVU757
 2449 0958 2D01     		lsls	r5, r5, #4
 2450 095a 45F06D05 		orr	r5, r5, #109
 2451 095e EDB2     		uxtb	r5, r5
 482:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2452              		.loc 1 482 13 is_stmt 0 view .LVU758
 2453 0960 2A48     		ldr	r0, .L184
 2454              	.LVL325:
 482:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2455              		.loc 1 482 13 view .LVU759
 2456 0962 2946     		mov	r1, r5
 2457              	.LVL326:
 481:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEUP_MASK, TMC5041_SEUP_S
 2458              		.loc 1 481 5 view .LVU760
 2459 0964 34B9     		cbnz	r4, .L142
 482:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2460              		.loc 1 482 4 is_stmt 1 view .LVU761
 482:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2461              		.loc 1 482 13 is_stmt 0 view .LVU762
 2462 0966 FFF7FEFF 		bl	tmc5041_readInt
 2463              	.LVL327:
 2464 096a C0F34110 		ubfx	r0, r0, #5, #2
 482:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2465              		.loc 1 482 11 view .LVU763
 2466 096e 3060     		str	r0, [r6]
 2467 0970 FFF7FDBB 		b	.L30
 2468              	.L142:
 483:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEUP_MASK, TMC5041_SEUP_SHIFT, *v
 2469              		.loc 1 483 10 is_stmt 1 view .LVU764
 484:boards/TMC5041_eval.c **** 		}
 2470              		.loc 1 484 4 view .LVU765
 2471 0974 FFF7FEFF 		bl	tmc5041_readInt
 2472              	.LVL328:
 2473 0978 3368     		ldr	r3, [r6]
 2474 097a 5B01     		lsls	r3, r3, #5
 2475 097c 03F06003 		and	r3, r3, #96
 2476 0980 20F06002 		bic	r2, r0, #96
 2477 0984 1A43     		orrs	r2, r2, r3
 2478 0986 2148     		ldr	r0, .L184
 2479 0988 2946     		mov	r1, r5
 2480 098a FFF7FEFF 		bl	tmc5041_writeInt
 2481              	.LVL329:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2482              		.loc 1 123 11 is_stmt 0 view .LVU766
 2483 098e 0024     		movs	r4, #0
 2484 0990 FFF7EDBB 		b	.L30
 2485              	.LVL330:
 2486              	.L45:
 489:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMIN_MASK, TMC5041_SEMIN
 2487              		.loc 1 489 3 is_stmt 1 view .LVU767
 2488 0994 2D01     		lsls	r5, r5, #4
 2489 0996 45F06D05 		orr	r5, r5, #109
 2490 099a EDB2     		uxtb	r5, r5
 490:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2491              		.loc 1 490 13 is_stmt 0 view .LVU768
 2492 099c 1B48     		ldr	r0, .L184
 2493              	.LVL331:
 490:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2494              		.loc 1 490 13 view .LVU769
 2495 099e 2946     		mov	r1, r5
 2496              	.LVL332:
 489:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMIN_MASK, TMC5041_SEMIN
 2497              		.loc 1 489 5 view .LVU770
 2498 09a0 34B9     		cbnz	r4, .L143
 490:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2499              		.loc 1 490 4 is_stmt 1 view .LVU771
 490:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2500              		.loc 1 490 13 is_stmt 0 view .LVU772
 2501 09a2 FFF7FEFF 		bl	tmc5041_readInt
 2502              	.LVL333:
 2503 09a6 00F00F00 		and	r0, r0, #15
 490:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2504              		.loc 1 490 11 view .LVU773
 2505 09aa 3060     		str	r0, [r6]
 2506 09ac FFF7DFBB 		b	.L30
 2507              	.L143:
 491:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SEMIN_MASK, TMC5041_SEMIN_SHIFT, 
 2508              		.loc 1 491 10 is_stmt 1 view .LVU774
 492:boards/TMC5041_eval.c **** 		}
 2509              		.loc 1 492 4 view .LVU775
 2510 09b0 FFF7FEFF 		bl	tmc5041_readInt
 2511              	.LVL334:
 2512 09b4 3268     		ldr	r2, [r6]
 2513 09b6 20F00F00 		bic	r0, r0, #15
 2514 09ba 02F00F02 		and	r2, r2, #15
 2515 09be 0243     		orrs	r2, r2, r0
 2516 09c0 2946     		mov	r1, r5
 2517 09c2 1248     		ldr	r0, .L184
 2518 09c4 FFF7FEFF 		bl	tmc5041_writeInt
 2519              	.LVL335:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2520              		.loc 1 123 11 is_stmt 0 view .LVU776
 2521 09c8 0024     		movs	r4, #0
 2522 09ca FFF7D0BB 		b	.L30
 2523              	.LVL336:
 2524              	.L44:
 497:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SFILT_MASK, TMC5041_SFILT
 2525              		.loc 1 497 3 is_stmt 1 view .LVU777
 2526 09ce 2D01     		lsls	r5, r5, #4
 2527 09d0 45F06D05 		orr	r5, r5, #109
 2528 09d4 EDB2     		uxtb	r5, r5
 498:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2529              		.loc 1 498 13 is_stmt 0 view .LVU778
 2530 09d6 0D48     		ldr	r0, .L184
 2531              	.LVL337:
 498:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2532              		.loc 1 498 13 view .LVU779
 2533 09d8 2946     		mov	r1, r5
 2534              	.LVL338:
 497:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SFILT_MASK, TMC5041_SFILT
 2535              		.loc 1 497 5 view .LVU780
 2536 09da 34B9     		cbnz	r4, .L144
 498:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2537              		.loc 1 498 4 is_stmt 1 view .LVU781
 498:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2538              		.loc 1 498 13 is_stmt 0 view .LVU782
 2539 09dc FFF7FEFF 		bl	tmc5041_readInt
 2540              	.LVL339:
 2541 09e0 C0F30060 		ubfx	r0, r0, #24, #1
 498:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2542              		.loc 1 498 11 view .LVU783
 2543 09e4 3060     		str	r0, [r6]
 2544 09e6 FFF7C2BB 		b	.L30
 2545              	.L144:
 499:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SFILT_MASK, TMC5041_SFILT_SHIFT, 
 2546              		.loc 1 499 10 is_stmt 1 view .LVU784
 500:boards/TMC5041_eval.c **** 		}
 2547              		.loc 1 500 4 view .LVU785
 2548 09ea FFF7FEFF 		bl	tmc5041_readInt
 2549              	.LVL340:
 2550 09ee 3368     		ldr	r3, [r6]
 2551 09f0 1B06     		lsls	r3, r3, #24
 2552 09f2 03F08073 		and	r3, r3, #16777216
 2553 09f6 20F08072 		bic	r2, r0, #16777216
 2554 09fa 1A43     		orrs	r2, r2, r3
 2555 09fc 0348     		ldr	r0, .L184
 2556 09fe 2946     		mov	r1, r5
 2557 0a00 FFF7FEFF 		bl	tmc5041_writeInt
 2558              	.LVL341:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2559              		.loc 1 123 11 is_stmt 0 view .LVU786
 2560 0a04 0024     		movs	r4, #0
 2561 0a06 FFF7B2BB 		b	.L30
 2562              	.L185:
 2563 0a0a 00BF     		.align	2
 2564              	.L184:
 2565 0a0c 00000000 		.word	.LANCHOR0
 2566              	.LVL342:
 2567              	.L43:
 505:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SGT_MASK, TMC5041_SGT_SHI
 2568              		.loc 1 505 3 is_stmt 1 view .LVU787
 2569 0a10 2D01     		lsls	r5, r5, #4
 2570 0a12 45F06D05 		orr	r5, r5, #109
 2571 0a16 EDB2     		uxtb	r5, r5
 506:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2572              		.loc 1 506 13 is_stmt 0 view .LVU788
 2573 0a18 8B48     		ldr	r0, .L186
 2574              	.LVL343:
 506:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2575              		.loc 1 506 13 view .LVU789
 2576 0a1a 2946     		mov	r1, r5
 2577              	.LVL344:
 505:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SGT_MASK, TMC5041_SGT_SHI
 2578              		.loc 1 505 5 view .LVU790
 2579 0a1c 6CB9     		cbnz	r4, .L145
 506:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2580              		.loc 1 506 4 is_stmt 1 view .LVU791
 506:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2581              		.loc 1 506 13 is_stmt 0 view .LVU792
 2582 0a1e FFF7FEFF 		bl	tmc5041_readInt
 2583              	.LVL345:
 2584 0a22 0314     		asrs	r3, r0, #16
 507:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2585              		.loc 1 507 13 view .LVU793
 2586 0a24 13F04003 		ands	r3, r3, #64
 506:boards/TMC5041_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2587              		.loc 1 506 13 view .LVU794
 2588 0a28 C0F30640 		ubfx	r0, r0, #16, #7
 507:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2589              		.loc 1 507 4 is_stmt 1 view .LVU795
 507:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2590              		.loc 1 507 13 is_stmt 0 view .LVU796
 2591 0a2c 18BF     		it	ne
 2592 0a2e 6FF07F03 		mvnne	r3, #127
 2593 0a32 1843     		orrs	r0, r0, r3
 507:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2594              		.loc 1 507 11 view .LVU797
 2595 0a34 3060     		str	r0, [r6]
 2596 0a36 FFF79ABB 		b	.L30
 2597              	.L145:
 508:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_COOLCONF(motor), TMC5041_SGT_MASK, TMC5041_SGT_SHIFT, *val
 2598              		.loc 1 508 10 is_stmt 1 view .LVU798
 509:boards/TMC5041_eval.c **** 		}
 2599              		.loc 1 509 4 view .LVU799
 2600 0a3a FFF7FEFF 		bl	tmc5041_readInt
 2601              	.LVL346:
 2602 0a3e 3368     		ldr	r3, [r6]
 2603 0a40 1B04     		lsls	r3, r3, #16
 2604 0a42 03F4FE03 		and	r3, r3, #8323072
 2605 0a46 20F4FE02 		bic	r2, r0, #8323072
 2606 0a4a 1A43     		orrs	r2, r2, r3
 2607 0a4c 7E48     		ldr	r0, .L186
 2608 0a4e 2946     		mov	r1, r5
 2609 0a50 FFF7FEFF 		bl	tmc5041_writeInt
 2610              	.LVL347:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2611              		.loc 1 123 11 is_stmt 0 view .LVU800
 2612 0a54 0024     		movs	r4, #0
 2613 0a56 FFF78ABB 		b	.L30
 2614              	.LVL348:
 2615              	.L42:
 514:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VSENSE_MASK, TMC5041_VSEN
 2616              		.loc 1 514 3 is_stmt 1 view .LVU801
 2617 0a5a 2D01     		lsls	r5, r5, #4
 2618 0a5c 45F06C05 		orr	r5, r5, #108
 2619 0a60 EDB2     		uxtb	r5, r5
 515:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2620              		.loc 1 515 13 is_stmt 0 view .LVU802
 2621 0a62 7948     		ldr	r0, .L186
 2622              	.LVL349:
 515:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2623              		.loc 1 515 13 view .LVU803
 2624 0a64 2946     		mov	r1, r5
 2625              	.LVL350:
 514:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VSENSE_MASK, TMC5041_VSEN
 2626              		.loc 1 514 5 view .LVU804
 2627 0a66 34B9     		cbnz	r4, .L147
 515:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2628              		.loc 1 515 4 is_stmt 1 view .LVU805
 515:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2629              		.loc 1 515 13 is_stmt 0 view .LVU806
 2630 0a68 FFF7FEFF 		bl	tmc5041_readInt
 2631              	.LVL351:
 2632 0a6c C0F34040 		ubfx	r0, r0, #17, #1
 515:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2633              		.loc 1 515 11 view .LVU807
 2634 0a70 3060     		str	r0, [r6]
 2635 0a72 FFF77CBB 		b	.L30
 2636              	.L147:
 516:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_VSENSE_MASK, TMC5041_VSENSE_SHIFT
 2637              		.loc 1 516 10 is_stmt 1 view .LVU808
 517:boards/TMC5041_eval.c **** 		}
 2638              		.loc 1 517 4 view .LVU809
 2639 0a76 FFF7FEFF 		bl	tmc5041_readInt
 2640              	.LVL352:
 2641 0a7a 3368     		ldr	r3, [r6]
 2642 0a7c 5B04     		lsls	r3, r3, #17
 2643 0a7e 03F40033 		and	r3, r3, #131072
 2644 0a82 20F40032 		bic	r2, r0, #131072
 2645 0a86 1A43     		orrs	r2, r2, r3
 2646 0a88 6F48     		ldr	r0, .L186
 2647 0a8a 2946     		mov	r1, r5
 2648 0a8c FFF7FEFF 		bl	tmc5041_writeInt
 2649              	.LVL353:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2650              		.loc 1 123 11 is_stmt 0 view .LVU810
 2651 0a90 0024     		movs	r4, #0
 2652 0a92 FFF76CBB 		b	.L30
 2653              	.LVL354:
 2654              	.L41:
 522:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_DRVSTATUS(motor), TMC5041_CS_ACTUAL_MASK, TMC5041_
 2655              		.loc 1 522 3 is_stmt 1 view .LVU811
 522:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_DRVSTATUS(motor), TMC5041_CS_ACTUAL_MASK, TMC5041_
 2656              		.loc 1 522 5 is_stmt 0 view .LVU812
 2657 0a96 002C     		cmp	r4, #0
 2658 0a98 40F0CF80 		bne	.L173
 523:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2659              		.loc 1 523 4 is_stmt 1 view .LVU813
 523:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2660              		.loc 1 523 13 is_stmt 0 view .LVU814
 2661 0a9c 2901     		lsls	r1, r5, #4
 2662              	.LVL355:
 523:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2663              		.loc 1 523 13 view .LVU815
 2664 0a9e 41F06F01 		orr	r1, r1, #111
 2665 0aa2 6948     		ldr	r0, .L186
 2666              	.LVL356:
 523:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2667              		.loc 1 523 13 view .LVU816
 2668 0aa4 C9B2     		uxtb	r1, r1
 2669 0aa6 FFF7FEFF 		bl	tmc5041_readInt
 2670              	.LVL357:
 2671 0aaa C0F30440 		ubfx	r0, r0, #16, #5
 523:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2672              		.loc 1 523 11 view .LVU817
 2673 0aae 3060     		str	r0, [r6]
 2674 0ab0 FFF75DBB 		b	.L30
 2675              	.LVL358:
 2676              	.L40:
 530:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 2677              		.loc 1 530 3 is_stmt 1 view .LVU818
 2678 0ab4 2021     		movs	r1, #32
 2679              	.LVL359:
 530:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 2680              		.loc 1 530 3 is_stmt 0 view .LVU819
 2681 0ab6 01FA05F5 		lsl	r5, r1, r5
 2682 0aba 6DB2     		sxtb	r5, r5
 2683 0abc 45F01101 		orr	r1, r5, #17
 2684 0ac0 C9B2     		uxtb	r1, r1
 530:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 2685              		.loc 1 530 5 view .LVU820
 2686 0ac2 2CB9     		cbnz	r4, .L148
 531:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2687              		.loc 1 531 4 is_stmt 1 view .LVU821
 2688              	.LBB153:
 2689              	.LBI153:
  47:boards/TMC5041_eval.c **** {
 2690              		.loc 1 47 31 view .LVU822
 2691              	.LVL360:
  47:boards/TMC5041_eval.c **** {
 2692              		.loc 1 47 31 is_stmt 0 view .LVU823
 2693              	.LBE153:
  49:boards/TMC5041_eval.c **** 
 2694              		.loc 1 49 2 is_stmt 1 view .LVU824
  51:boards/TMC5041_eval.c **** }
 2695              		.loc 1 51 2 view .LVU825
 531:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2696              		.loc 1 531 13 is_stmt 0 view .LVU826
 2697 0ac4 6048     		ldr	r0, .L186
 2698              	.LVL361:
 531:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2699              		.loc 1 531 13 view .LVU827
 2700 0ac6 FFF7FEFF 		bl	tmc5041_readInt
 2701              	.LVL362:
 531:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2702              		.loc 1 531 11 view .LVU828
 2703 0aca 3060     		str	r0, [r6]
 2704 0acc FFF74FBB 		b	.L30
 2705              	.LVL363:
 2706              	.L148:
 532:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor),*value);
 2707              		.loc 1 532 10 is_stmt 1 view .LVU829
 533:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_SG_STOP_MASK, TMC5041_SG_STOP_SHIFT
 2708              		.loc 1 533 4 view .LVU830
 2709              	.LBB154:
 2710              	.LBI154:
  47:boards/TMC5041_eval.c **** {
 2711              		.loc 1 47 31 view .LVU831
  47:boards/TMC5041_eval.c **** {
 2712              		.loc 1 47 31 is_stmt 0 view .LVU832
 2713              	.LBE154:
  49:boards/TMC5041_eval.c **** 
 2714              		.loc 1 49 2 is_stmt 1 view .LVU833
  51:boards/TMC5041_eval.c **** }
 2715              		.loc 1 51 2 view .LVU834
 534:boards/TMC5041_eval.c **** 		}
 2716              		.loc 1 534 4 is_stmt 0 view .LVU835
 2717 0ad0 45F01405 		orr	r5, r5, #20
 533:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_SG_STOP_MASK, TMC5041_SG_STOP_SHIFT
 2718              		.loc 1 533 4 view .LVU836
 2719 0ad4 3268     		ldr	r2, [r6]
 2720 0ad6 5C48     		ldr	r0, .L186
 2721              	.LVL364:
 534:boards/TMC5041_eval.c **** 		}
 2722              		.loc 1 534 4 view .LVU837
 2723 0ad8 EDB2     		uxtb	r5, r5
 533:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_SWMODE(motor), TMC5041_SG_STOP_MASK, TMC5041_SG_STOP_SHIFT
 2724              		.loc 1 533 4 view .LVU838
 2725 0ada FFF7FEFF 		bl	tmc5041_writeInt
 2726              	.LVL365:
 534:boards/TMC5041_eval.c **** 		}
 2727              		.loc 1 534 4 is_stmt 1 view .LVU839
 2728 0ade 2946     		mov	r1, r5
 2729 0ae0 5948     		ldr	r0, .L186
 2730 0ae2 FFF7FEFF 		bl	tmc5041_readInt
 2731              	.LVL366:
 2732 0ae6 3368     		ldr	r3, [r6]
 2733 0ae8 002B     		cmp	r3, #0
 2734 0aea 20F48062 		bic	r2, r0, #1024
 2735 0aee 18BF     		it	ne
 2736 0af0 4FF48063 		movne	r3, #1024
 2737 0af4 5448     		ldr	r0, .L186
 2738 0af6 1A43     		orrs	r2, r2, r3
 2739 0af8 2946     		mov	r1, r5
 2740 0afa FFF7FEFF 		bl	tmc5041_writeInt
 2741              	.LVL367:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2742              		.loc 1 123 11 is_stmt 0 view .LVU840
 2743 0afe 0024     		movs	r4, #0
 2744 0b00 FFF735BB 		b	.L30
 2745              	.LVL368:
 2746              	.L39:
 539:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 2747              		.loc 1 539 3 is_stmt 1 view .LVU841
 2748 0b04 2021     		movs	r1, #32
 2749              	.LVL369:
 539:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 2750              		.loc 1 539 3 is_stmt 0 view .LVU842
 2751 0b06 A940     		lsls	r1, r1, r5
 2752 0b08 41F01101 		orr	r1, r1, #17
 2753 0b0c C9B2     		uxtb	r1, r1
 539:boards/TMC5041_eval.c **** 			*value = tmc5041_readInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor));
 2754              		.loc 1 539 5 view .LVU843
 2755 0b0e 2CB9     		cbnz	r4, .L150
 540:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2756              		.loc 1 540 4 is_stmt 1 view .LVU844
 2757              	.LBB155:
 2758              	.LBI155:
  47:boards/TMC5041_eval.c **** {
 2759              		.loc 1 47 31 view .LVU845
 2760              	.LVL370:
  47:boards/TMC5041_eval.c **** {
 2761              		.loc 1 47 31 is_stmt 0 view .LVU846
 2762              	.LBE155:
  49:boards/TMC5041_eval.c **** 
 2763              		.loc 1 49 2 is_stmt 1 view .LVU847
  51:boards/TMC5041_eval.c **** }
 2764              		.loc 1 51 2 view .LVU848
 540:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2765              		.loc 1 540 13 is_stmt 0 view .LVU849
 2766 0b10 4D48     		ldr	r0, .L186
 2767              	.LVL371:
 540:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2768              		.loc 1 540 13 view .LVU850
 2769 0b12 FFF7FEFF 		bl	tmc5041_readInt
 2770              	.LVL372:
 540:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2771              		.loc 1 540 11 view .LVU851
 2772 0b16 3060     		str	r0, [r6]
 2773 0b18 FFF729BB 		b	.L30
 2774              	.LVL373:
 2775              	.L150:
 541:boards/TMC5041_eval.c **** 			tmc5041_writeInt(motorToIC(motor), TMC5041_VCOOLTHRS(motor),*value);
 2776              		.loc 1 541 10 is_stmt 1 view .LVU852
 542:boards/TMC5041_eval.c **** 		}
 2777              		.loc 1 542 4 view .LVU853
 2778              	.LBB156:
 2779              	.LBI156:
  47:boards/TMC5041_eval.c **** {
 2780              		.loc 1 47 31 view .LVU854
  47:boards/TMC5041_eval.c **** {
 2781              		.loc 1 47 31 is_stmt 0 view .LVU855
 2782              	.LBE156:
  49:boards/TMC5041_eval.c **** 
 2783              		.loc 1 49 2 is_stmt 1 view .LVU856
  51:boards/TMC5041_eval.c **** }
 2784              		.loc 1 51 2 view .LVU857
 542:boards/TMC5041_eval.c **** 		}
 2785              		.loc 1 542 4 is_stmt 0 view .LVU858
 2786 0b1c 3268     		ldr	r2, [r6]
 2787 0b1e 4A48     		ldr	r0, .L186
 2788              	.LVL374:
 542:boards/TMC5041_eval.c **** 		}
 2789              		.loc 1 542 4 view .LVU859
 2790 0b20 FFF7FEFF 		bl	tmc5041_writeInt
 2791              	.LVL375:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2792              		.loc 1 123 11 view .LVU860
 2793 0b24 0024     		movs	r4, #0
 2794 0b26 FFF722BB 		b	.L30
 2795              	.LVL376:
 2796              	.L38:
 547:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_RNDTF_MASK, TMC5041_RNDTF
 2797              		.loc 1 547 3 is_stmt 1 view .LVU861
 2798 0b2a 2D01     		lsls	r5, r5, #4
 2799 0b2c 45F06C05 		orr	r5, r5, #108
 2800 0b30 EDB2     		uxtb	r5, r5
 548:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2801              		.loc 1 548 13 is_stmt 0 view .LVU862
 2802 0b32 4548     		ldr	r0, .L186
 2803              	.LVL377:
 548:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2804              		.loc 1 548 13 view .LVU863
 2805 0b34 2946     		mov	r1, r5
 2806              	.LVL378:
 547:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_RNDTF_MASK, TMC5041_RNDTF
 2807              		.loc 1 547 5 view .LVU864
 2808 0b36 34B9     		cbnz	r4, .L151
 548:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2809              		.loc 1 548 4 is_stmt 1 view .LVU865
 548:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2810              		.loc 1 548 13 is_stmt 0 view .LVU866
 2811 0b38 FFF7FEFF 		bl	tmc5041_readInt
 2812              	.LVL379:
 2813 0b3c C0F34030 		ubfx	r0, r0, #13, #1
 548:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2814              		.loc 1 548 11 view .LVU867
 2815 0b40 3060     		str	r0, [r6]
 2816 0b42 FFF714BB 		b	.L30
 2817              	.L151:
 549:boards/TMC5041_eval.c **** 			TMC5041_FIELD_WRITE(&TMC5041, TMC5041_CHOPCONF(motor), TMC5041_RNDTF_MASK, TMC5041_RNDTF_SHIFT, 
 2818              		.loc 1 549 10 is_stmt 1 view .LVU868
 550:boards/TMC5041_eval.c **** 		}
 2819              		.loc 1 550 4 view .LVU869
 2820 0b46 FFF7FEFF 		bl	tmc5041_readInt
 2821              	.LVL380:
 2822 0b4a 3368     		ldr	r3, [r6]
 2823 0b4c 5B03     		lsls	r3, r3, #13
 2824 0b4e 03F40053 		and	r3, r3, #8192
 2825 0b52 20F40052 		bic	r2, r0, #8192
 2826 0b56 1A43     		orrs	r2, r2, r3
 2827 0b58 3B48     		ldr	r0, .L186
 2828 0b5a 2946     		mov	r1, r5
 2829 0b5c FFF7FEFF 		bl	tmc5041_writeInt
 2830              	.LVL381:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2831              		.loc 1 123 11 is_stmt 0 view .LVU870
 2832 0b60 0024     		movs	r4, #0
 2833 0b62 FFF704BB 		b	.L30
 2834              	.LVL382:
 2835              	.L37:
 555:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_DRVSTATUS(motor), TMC5041_SG_RESULT_MASK, TMC5041_
 2836              		.loc 1 555 3 is_stmt 1 view .LVU871
 555:boards/TMC5041_eval.c **** 			*value = TMC5041_FIELD_READ(&TMC5041, TMC5041_DRVSTATUS(motor), TMC5041_SG_RESULT_MASK, TMC5041_
 2837              		.loc 1 555 5 is_stmt 0 view .LVU872
 2838 0b66 002C     		cmp	r4, #0
 2839 0b68 6AD1     		bne	.L175
 556:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2840              		.loc 1 556 4 is_stmt 1 view .LVU873
 556:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2841              		.loc 1 556 13 is_stmt 0 view .LVU874
 2842 0b6a 2901     		lsls	r1, r5, #4
 2843              	.LVL383:
 556:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2844              		.loc 1 556 13 view .LVU875
 2845 0b6c 41F06F01 		orr	r1, r1, #111
 2846 0b70 3548     		ldr	r0, .L186
 2847              	.LVL384:
 556:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2848              		.loc 1 556 13 view .LVU876
 2849 0b72 C9B2     		uxtb	r1, r1
 2850 0b74 FFF7FEFF 		bl	tmc5041_readInt
 2851              	.LVL385:
 2852 0b78 C0F30900 		ubfx	r0, r0, #0, #10
 556:boards/TMC5041_eval.c **** 		} else if(readWrite == WRITE) {
 2853              		.loc 1 556 11 view .LVU877
 2854 0b7c 3060     		str	r0, [r6]
 2855 0b7e FFF7F6BA 		b	.L30
 2856              	.LVL386:
 2857              	.L35:
 573:boards/TMC5041_eval.c **** 			// encoder enable
 2858              		.loc 1 573 3 is_stmt 1 view .LVU878
 573:boards/TMC5041_eval.c **** 			// encoder enable
 2859              		.loc 1 573 5 is_stmt 0 view .LVU879
 2860 0b82 CCB9     		cbnz	r4, .L152
 575:boards/TMC5041_eval.c **** 			{
 2861              		.loc 1 575 4 is_stmt 1 view .LVU880
 2862 0b84 012D     		cmp	r5, #1
 583:boards/TMC5041_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 2863              		.loc 1 583 17 is_stmt 0 view .LVU881
 2864 0b86 3048     		ldr	r0, .L186
 2865              	.LVL387:
 583:boards/TMC5041_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 2866              		.loc 1 583 17 view .LVU882
 2867 0b88 2146     		mov	r1, r4
 2868              	.LVL388:
 583:boards/TMC5041_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 2869              		.loc 1 583 17 view .LVU883
 2870 0b8a 0AD0     		beq	.L153
 578:boards/TMC5041_eval.c **** 				tempValue &= (1<<3) | (1<<4);
 2871              		.loc 1 578 5 is_stmt 1 view .LVU884
 2872              	.LBB157:
 2873              	.LBI157:
  47:boards/TMC5041_eval.c **** {
 2874              		.loc 1 47 31 view .LVU885
 2875              	.LVL389:
  47:boards/TMC5041_eval.c **** {
 2876              		.loc 1 47 31 is_stmt 0 view .LVU886
 2877              	.LBE157:
  49:boards/TMC5041_eval.c **** 
 2878              		.loc 1 49 2 is_stmt 1 view .LVU887
  51:boards/TMC5041_eval.c **** }
 2879              		.loc 1 51 2 view .LVU888
 578:boards/TMC5041_eval.c **** 				tempValue &= (1<<3) | (1<<4);
 2880              		.loc 1 578 17 is_stmt 0 view .LVU889
 2881 0b8c FFF7FEFF 		bl	tmc5041_readInt
 2882              	.LVL390:
 579:boards/TMC5041_eval.c **** 				*value = (tempValue == (1<<4))? 1 : 0;
 2883              		.loc 1 579 5 is_stmt 1 view .LVU890
 580:boards/TMC5041_eval.c **** 				break;
 2884              		.loc 1 580 5 view .LVU891
 579:boards/TMC5041_eval.c **** 				*value = (tempValue == (1<<4))? 1 : 0;
 2885              		.loc 1 579 15 is_stmt 0 view .LVU892
 2886 0b90 00F01800 		and	r0, r0, #24
 2887              	.LVL391:
 580:boards/TMC5041_eval.c **** 				break;
 2888              		.loc 1 580 39 view .LVU893
 2889 0b94 A0F11002 		sub	r2, r0, #16
 2890 0b98 5042     		rsbs	r0, r2, #0
 2891              	.LVL392:
 580:boards/TMC5041_eval.c **** 				break;
 2892              		.loc 1 580 39 view .LVU894
 2893 0b9a 5041     		adcs	r0, r0, r2
 580:boards/TMC5041_eval.c **** 				break;
 2894              		.loc 1 580 12 view .LVU895
 2895 0b9c 3060     		str	r0, [r6]
 581:boards/TMC5041_eval.c **** 			case 1:
 2896              		.loc 1 581 5 is_stmt 1 view .LVU896
 2897 0b9e FFF7E6BA 		b	.L30
 2898              	.LVL393:
 2899              	.L153:
 583:boards/TMC5041_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 2900              		.loc 1 583 5 view .LVU897
 2901              	.LBB158:
 2902              	.LBI158:
  47:boards/TMC5041_eval.c **** {
 2903              		.loc 1 47 31 view .LVU898
  47:boards/TMC5041_eval.c **** {
 2904              		.loc 1 47 31 is_stmt 0 view .LVU899
 2905              	.LBE158:
  49:boards/TMC5041_eval.c **** 
 2906              		.loc 1 49 2 is_stmt 1 view .LVU900
  51:boards/TMC5041_eval.c **** }
 2907              		.loc 1 51 2 view .LVU901
 583:boards/TMC5041_eval.c **** 				tempValue &= (1<<5) | (1<<6);
 2908              		.loc 1 583 17 is_stmt 0 view .LVU902
 2909 0ba2 FFF7FEFF 		bl	tmc5041_readInt
 2910              	.LVL394:
 584:boards/TMC5041_eval.c **** 				*value = (tempValue == (1<<5))? 1 : 0;
 2911              		.loc 1 584 5 is_stmt 1 view .LVU903
 585:boards/TMC5041_eval.c **** 				break;
 2912              		.loc 1 585 5 view .LVU904
 584:boards/TMC5041_eval.c **** 				*value = (tempValue == (1<<5))? 1 : 0;
 2913              		.loc 1 584 15 is_stmt 0 view .LVU905
 2914 0ba6 00F06000 		and	r0, r0, #96
 2915              	.LVL395:
 585:boards/TMC5041_eval.c **** 				break;
 2916              		.loc 1 585 39 view .LVU906
 2917 0baa A0F12003 		sub	r3, r0, #32
 2918 0bae 5842     		rsbs	r0, r3, #0
 2919              	.LVL396:
 585:boards/TMC5041_eval.c **** 				break;
 2920              		.loc 1 585 39 view .LVU907
 2921 0bb0 5841     		adcs	r0, r0, r3
 585:boards/TMC5041_eval.c **** 				break;
 2922              		.loc 1 585 12 view .LVU908
 2923 0bb2 3060     		str	r0, [r6]
 586:boards/TMC5041_eval.c **** 			}
 2924              		.loc 1 586 5 is_stmt 1 view .LVU909
 2925 0bb4 FFF7DBBA 		b	.L30
 2926              	.LVL397:
 2927              	.L152:
 588:boards/TMC5041_eval.c **** 			// encoder enable
 2928              		.loc 1 588 10 view .LVU910
 590:boards/TMC5041_eval.c **** 			{
 2929              		.loc 1 590 4 view .LVU911
 2930 0bb8 012D     		cmp	r5, #1
 601:boards/TMC5041_eval.c **** 				if(*value)
 2931              		.loc 1 601 17 is_stmt 0 view .LVU912
 2932 0bba 2348     		ldr	r0, .L186
 2933              	.LVL398:
 601:boards/TMC5041_eval.c **** 				if(*value)
 2934              		.loc 1 601 17 view .LVU913
 2935 0bbc 4FF00001 		mov	r1, #0
 2936              	.LVL399:
 601:boards/TMC5041_eval.c **** 				if(*value)
 2937              		.loc 1 601 17 view .LVU914
 2938 0bc0 11D0     		beq	.L154
 593:boards/TMC5041_eval.c **** 				if(*value)
 2939              		.loc 1 593 5 is_stmt 1 view .LVU915
 2940              	.LBB159:
 2941              	.LBI159:
  47:boards/TMC5041_eval.c **** {
 2942              		.loc 1 47 31 view .LVU916
 2943              	.LVL400:
  47:boards/TMC5041_eval.c **** {
 2944              		.loc 1 47 31 is_stmt 0 view .LVU917
 2945              	.LBE159:
  49:boards/TMC5041_eval.c **** 
 2946              		.loc 1 49 2 is_stmt 1 view .LVU918
  51:boards/TMC5041_eval.c **** }
 2947              		.loc 1 51 2 view .LVU919
 593:boards/TMC5041_eval.c **** 				if(*value)
 2948              		.loc 1 593 17 is_stmt 0 view .LVU920
 2949 0bc2 FFF7FEFF 		bl	tmc5041_readInt
 2950              	.LVL401:
 594:boards/TMC5041_eval.c **** 					tempValue = (tempValue & ~(1<<3)) | (1<<4);
 2951              		.loc 1 594 5 is_stmt 1 view .LVU921
 594:boards/TMC5041_eval.c **** 					tempValue = (tempValue & ~(1<<3)) | (1<<4);
 2952              		.loc 1 594 7 is_stmt 0 view .LVU922
 2953 0bc6 3368     		ldr	r3, [r6]
 2954 0bc8 20F01802 		bic	r2, r0, #24
 2955 0bcc 43B1     		cbz	r3, .L155
 595:boards/TMC5041_eval.c **** 				else
 2956              		.loc 1 595 6 is_stmt 1 view .LVU923
 595:boards/TMC5041_eval.c **** 				else
 2957              		.loc 1 595 16 is_stmt 0 view .LVU924
 2958 0bce 42F01002 		orr	r2, r2, #16
 2959              	.LVL402:
 2960              	.L156:
 598:boards/TMC5041_eval.c **** 				break;
 2961              		.loc 1 598 5 is_stmt 1 view .LVU925
 2962              	.LBB160:
 2963              	.LBI160:
  47:boards/TMC5041_eval.c **** {
 2964              		.loc 1 47 31 view .LVU926
  47:boards/TMC5041_eval.c **** {
 2965              		.loc 1 47 31 is_stmt 0 view .LVU927
 2966              	.LBE160:
  49:boards/TMC5041_eval.c **** 
 2967              		.loc 1 49 2 is_stmt 1 view .LVU928
  51:boards/TMC5041_eval.c **** }
 2968              		.loc 1 51 2 view .LVU929
 598:boards/TMC5041_eval.c **** 				break;
 2969              		.loc 1 598 5 is_stmt 0 view .LVU930
 2970 0bd2 1D48     		ldr	r0, .L186
 2971 0bd4 0021     		movs	r1, #0
 2972 0bd6 FFF7FEFF 		bl	tmc5041_writeInt
 2973              	.LVL403:
 599:boards/TMC5041_eval.c **** 			case 1:		// enable ENCODER2 - disable REF
 2974              		.loc 1 599 5 is_stmt 1 view .LVU931
 123:boards/TMC5041_eval.c **** 	int tempValue;
 2975              		.loc 1 123 11 is_stmt 0 view .LVU932
 2976 0bda 0024     		movs	r4, #0
 599:boards/TMC5041_eval.c **** 			case 1:		// enable ENCODER2 - disable REF
 2977              		.loc 1 599 5 view .LVU933
 2978 0bdc FFF7C7BA 		b	.L30
 2979              	.LVL404:
 2980              	.L155:
 597:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_GCONF, tempValue);
 2981              		.loc 1 597 6 is_stmt 1 view .LVU934
 597:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_GCONF, tempValue);
 2982              		.loc 1 597 16 is_stmt 0 view .LVU935
 2983 0be0 42F00802 		orr	r2, r2, #8
 2984              	.LVL405:
 597:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_GCONF, tempValue);
 2985              		.loc 1 597 16 view .LVU936
 2986 0be4 F5E7     		b	.L156
 2987              	.LVL406:
 2988              	.L154:
 601:boards/TMC5041_eval.c **** 				if(*value)
 2989              		.loc 1 601 5 is_stmt 1 view .LVU937
 2990              	.LBB161:
 2991              	.LBI161:
  47:boards/TMC5041_eval.c **** {
 2992              		.loc 1 47 31 view .LVU938
  47:boards/TMC5041_eval.c **** {
 2993              		.loc 1 47 31 is_stmt 0 view .LVU939
 2994              	.LBE161:
  49:boards/TMC5041_eval.c **** 
 2995              		.loc 1 49 2 is_stmt 1 view .LVU940
  51:boards/TMC5041_eval.c **** }
 2996              		.loc 1 51 2 view .LVU941
 601:boards/TMC5041_eval.c **** 				if(*value)
 2997              		.loc 1 601 17 is_stmt 0 view .LVU942
 2998 0be6 FFF7FEFF 		bl	tmc5041_readInt
 2999              	.LVL407:
 602:boards/TMC5041_eval.c **** 					//tempValue = (tempValue | (1<<5)) & ~(5<<5);
 3000              		.loc 1 602 5 is_stmt 1 view .LVU943
 602:boards/TMC5041_eval.c **** 					//tempValue = (tempValue | (1<<5)) & ~(5<<5);
 3001              		.loc 1 602 7 is_stmt 0 view .LVU944
 3002 0bea 3368     		ldr	r3, [r6]
 3003 0bec 20F06002 		bic	r2, r0, #96
 3004 0bf0 43B1     		cbz	r3, .L157
 604:boards/TMC5041_eval.c **** 				else
 3005              		.loc 1 604 6 is_stmt 1 view .LVU945
 604:boards/TMC5041_eval.c **** 				else
 3006              		.loc 1 604 16 is_stmt 0 view .LVU946
 3007 0bf2 42F02002 		orr	r2, r2, #32
 3008              	.LVL408:
 3009              	.L158:
 608:boards/TMC5041_eval.c **** 				break;
 3010              		.loc 1 608 5 is_stmt 1 view .LVU947
 3011              	.LBB162:
 3012              	.LBI162:
  47:boards/TMC5041_eval.c **** {
 3013              		.loc 1 47 31 view .LVU948
  47:boards/TMC5041_eval.c **** {
 3014              		.loc 1 47 31 is_stmt 0 view .LVU949
 3015              	.LBE162:
  49:boards/TMC5041_eval.c **** 
 3016              		.loc 1 49 2 is_stmt 1 view .LVU950
  51:boards/TMC5041_eval.c **** }
 3017              		.loc 1 51 2 view .LVU951
 608:boards/TMC5041_eval.c **** 				break;
 3018              		.loc 1 608 5 is_stmt 0 view .LVU952
 3019 0bf6 1448     		ldr	r0, .L186
 3020 0bf8 0021     		movs	r1, #0
 3021 0bfa FFF7FEFF 		bl	tmc5041_writeInt
 3022              	.LVL409:
 609:boards/TMC5041_eval.c **** 			}
 3023              		.loc 1 609 5 is_stmt 1 view .LVU953
 123:boards/TMC5041_eval.c **** 	int tempValue;
 3024              		.loc 1 123 11 is_stmt 0 view .LVU954
 3025 0bfe 0024     		movs	r4, #0
 609:boards/TMC5041_eval.c **** 			}
 3026              		.loc 1 609 5 view .LVU955
 3027 0c00 FFF7B5BA 		b	.L30
 3028              	.LVL410:
 3029              	.L157:
 607:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_GCONF, tempValue);
 3030              		.loc 1 607 6 is_stmt 1 view .LVU956
 607:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_GCONF, tempValue);
 3031              		.loc 1 607 16 is_stmt 0 view .LVU957
 3032 0c04 42F04002 		orr	r2, r2, #64
 3033              	.LVL411:
 607:boards/TMC5041_eval.c **** 				tmc5041_writeInt(motorToIC(motor), TMC5041_GCONF, tempValue);
 3034              		.loc 1 607 16 view .LVU958
 3035 0c08 F5E7     		b	.L158
 3036              	.LVL412:
 3037              	.L159:
 127:boards/TMC5041_eval.c **** 
 3038              		.loc 1 127 10 view .LVU959
 3039 0c0a 0824     		movs	r4, #8
 3040 0c0c FFF7AFBA 		b	.L30
 3041              	.LVL413:
 3042              	.L160:
 123:boards/TMC5041_eval.c **** 	int tempValue;
 3043              		.loc 1 123 11 view .LVU960
 3044 0c10 0024     		movs	r4, #0
 3045 0c12 FFF7ACBA 		b	.L30
 3046              	.LVL414:
 3047              	.L161:
 129:boards/TMC5041_eval.c **** 	{
 3048              		.loc 1 129 2 view .LVU961
 3049 0c16 0424     		movs	r4, #4
 3050 0c18 FFF7A9BA 		b	.L30
 3051              	.L163:
 163:boards/TMC5041_eval.c **** 		}
 3052              		.loc 1 163 11 view .LVU962
 3053 0c1c 0424     		movs	r4, #4
 3054 0c1e FFF7A6BA 		b	.L30
 3055              	.L165:
 3056 0c22 0424     		movs	r4, #4
 3057 0c24 FFF7A3BA 		b	.L30
 3058              	.L166:
 3059 0c28 0424     		movs	r4, #4
 3060 0c2a FFF7A0BA 		b	.L30
 3061              	.L167:
 3062 0c2e 0424     		movs	r4, #4
 3063 0c30 FFF79DBA 		b	.L30
 3064              	.L171:
 3065 0c34 0424     		movs	r4, #4
 3066 0c36 FFF79ABA 		b	.L30
 3067              	.LVL415:
 3068              	.L173:
 163:boards/TMC5041_eval.c **** 		}
 3069              		.loc 1 163 11 view .LVU963
 3070 0c3a 0424     		movs	r4, #4
 3071 0c3c FFF797BA 		b	.L30
 3072              	.L175:
 3073 0c40 0424     		movs	r4, #4
 3074              	.LVL416:
 163:boards/TMC5041_eval.c **** 		}
 3075              		.loc 1 163 11 view .LVU964
 3076 0c42 FFF794BA 		b	.L30
 3077              	.L187:
 3078 0c46 00BF     		.align	2
 3079              	.L186:
 3080 0c48 00000000 		.word	.LANCHOR0
 3081              		.cfi_endproc
 3082              	.LFE10:
 3084              		.align	1
 3085              		.syntax unified
 3086              		.thumb
 3087              		.thumb_func
 3088              		.fpu softvfp
 3090              	SAP:
 3091              	.LVL417:
 3092              	.LFB11:
 621:boards/TMC5041_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3093              		.loc 1 621 1 is_stmt 1 view -0
 3094              		.cfi_startproc
 3095              		@ args = 0, pretend = 0, frame = 8
 3096              		@ frame_needed = 0, uses_anonymous_args = 0
 622:boards/TMC5041_eval.c **** }
 3097              		.loc 1 622 2 view .LVU966
 621:boards/TMC5041_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3098              		.loc 1 621 1 is_stmt 0 view .LVU967
 3099 0c4c 07B5     		push	{r0, r1, r2, lr}
 3100              	.LCFI5:
 3101              		.cfi_def_cfa_offset 16
 3102              		.cfi_offset 14, -4
 621:boards/TMC5041_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3103              		.loc 1 621 1 view .LVU968
 3104 0c4e 0192     		str	r2, [sp, #4]
 622:boards/TMC5041_eval.c **** }
 3105              		.loc 1 622 9 view .LVU969
 3106 0c50 01AB     		add	r3, sp, #4
 3107 0c52 0246     		mov	r2, r0
 3108              	.LVL418:
 622:boards/TMC5041_eval.c **** }
 3109              		.loc 1 622 9 view .LVU970
 3110 0c54 0120     		movs	r0, #1
 3111              	.LVL419:
 622:boards/TMC5041_eval.c **** }
 3112              		.loc 1 622 9 view .LVU971
 3113 0c56 FFF73FFA 		bl	handleParameter
 3114              	.LVL420:
 623:boards/TMC5041_eval.c **** 
 3115              		.loc 1 623 1 view .LVU972
 3116 0c5a 03B0     		add	sp, sp, #12
 3117              	.LCFI6:
 3118              		.cfi_def_cfa_offset 4
 3119              		@ sp needed
 3120 0c5c 5DF804FB 		ldr	pc, [sp], #4
 3121              		.cfi_endproc
 3122              	.LFE11:
 3124              		.align	1
 3125              		.syntax unified
 3126              		.thumb
 3127              		.thumb_func
 3128              		.fpu softvfp
 3130              	GAP:
 3131              	.LVL421:
 3132              	.LFB12:
 626:boards/TMC5041_eval.c **** 	return handleParameter(READ, motor, type, value);
 3133              		.loc 1 626 1 is_stmt 1 view -0
 3134              		.cfi_startproc
 3135              		@ args = 0, pretend = 0, frame = 0
 3136              		@ frame_needed = 0, uses_anonymous_args = 0
 3137              		@ link register save eliminated.
 627:boards/TMC5041_eval.c **** }
 3138              		.loc 1 627 2 view .LVU974
 626:boards/TMC5041_eval.c **** 	return handleParameter(READ, motor, type, value);
 3139              		.loc 1 626 1 is_stmt 0 view .LVU975
 3140 0c60 1346     		mov	r3, r2
 627:boards/TMC5041_eval.c **** }
 3141              		.loc 1 627 9 view .LVU976
 3142 0c62 0246     		mov	r2, r0
 3143              	.LVL422:
 627:boards/TMC5041_eval.c **** }
 3144              		.loc 1 627 9 view .LVU977
 3145 0c64 0020     		movs	r0, #0
 3146              	.LVL423:
 627:boards/TMC5041_eval.c **** }
 3147              		.loc 1 627 9 view .LVU978
 3148 0c66 FFF737BA 		b	handleParameter
 3149              	.LVL424:
 627:boards/TMC5041_eval.c **** }
 3150              		.loc 1 627 9 view .LVU979
 3151              		.cfi_endproc
 3152              	.LFE12:
 3154              		.align	1
 3155              		.syntax unified
 3156              		.thumb
 3157              		.thumb_func
 3158              		.fpu softvfp
 3160              	restore:
 3161              	.LFB21:
 662:boards/TMC5041_eval.c **** 
 663:boards/TMC5041_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 664:boards/TMC5041_eval.c **** {
 665:boards/TMC5041_eval.c **** 	uint32_t errors = 0;
 666:boards/TMC5041_eval.c **** 
 667:boards/TMC5041_eval.c **** 	UNUSED(motor);
 668:boards/TMC5041_eval.c **** 
 669:boards/TMC5041_eval.c **** 	switch(type)
 670:boards/TMC5041_eval.c **** 	{
 671:boards/TMC5041_eval.c **** 	case 1:  // read interrupt pin INT
 672:boards/TMC5041_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.INT_ENCA))? 1 : 0;
 673:boards/TMC5041_eval.c **** 		break;
 674:boards/TMC5041_eval.c **** 	case 2:  // read position compare pin PP
 675:boards/TMC5041_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.PP_ENCB))? 1 : 0;
 676:boards/TMC5041_eval.c **** 		break;
 677:boards/TMC5041_eval.c **** 	default:
 678:boards/TMC5041_eval.c **** 		errors |= TMC_ERROR_TYPE;
 679:boards/TMC5041_eval.c **** 		break;
 680:boards/TMC5041_eval.c **** 	}
 681:boards/TMC5041_eval.c **** 	return errors;
 682:boards/TMC5041_eval.c **** }
 683:boards/TMC5041_eval.c **** 
 684:boards/TMC5041_eval.c **** static void deInit(void)
 685:boards/TMC5041_eval.c **** {
 686:boards/TMC5041_eval.c **** 	enableDriver(DRIVER_DISABLE);
 687:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN);
 688:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 689:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 690:boards/TMC5041_eval.c **** };
 691:boards/TMC5041_eval.c **** 
 692:boards/TMC5041_eval.c **** static uint8_t reset()
 693:boards/TMC5041_eval.c **** {
 694:boards/TMC5041_eval.c **** 	for(uint8_t motor = 0; motor < TMC5041_MOTORS; motor++)
 695:boards/TMC5041_eval.c **** 		if(tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor)) != 0)
 696:boards/TMC5041_eval.c **** 			return 0;
 697:boards/TMC5041_eval.c **** 
 698:boards/TMC5041_eval.c **** 	return tmc5041_reset(&TMC5041);
 699:boards/TMC5041_eval.c **** }
 700:boards/TMC5041_eval.c **** 
 701:boards/TMC5041_eval.c **** static uint8_t restore()
 702:boards/TMC5041_eval.c **** {
 3162              		.loc 1 702 1 is_stmt 1 view -0
 3163              		.cfi_startproc
 3164              		@ args = 0, pretend = 0, frame = 0
 3165              		@ frame_needed = 0, uses_anonymous_args = 0
 3166              		@ link register save eliminated.
 703:boards/TMC5041_eval.c **** 	return tmc5041_restore(&TMC5041);
 3167              		.loc 1 703 2 view .LVU981
 3168              		.loc 1 703 9 is_stmt 0 view .LVU982
 3169 0c6a 0148     		ldr	r0, .L191
 3170 0c6c FFF7FEBF 		b	tmc5041_restore
 3171              	.LVL425:
 3172              	.L192:
 3173              		.align	2
 3174              	.L191:
 3175 0c70 00000000 		.word	.LANCHOR0
 3176              		.cfi_endproc
 3177              	.LFE21:
 3179              		.align	1
 3180              		.syntax unified
 3181              		.thumb
 3182              		.thumb_func
 3183              		.fpu softvfp
 3185              	reset:
 3186              	.LFB20:
 693:boards/TMC5041_eval.c **** 	for(uint8_t motor = 0; motor < TMC5041_MOTORS; motor++)
 3187              		.loc 1 693 1 is_stmt 1 view -0
 3188              		.cfi_startproc
 3189              		@ args = 0, pretend = 0, frame = 0
 3190              		@ frame_needed = 0, uses_anonymous_args = 0
 694:boards/TMC5041_eval.c **** 		if(tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor)) != 0)
 3191              		.loc 1 694 2 view .LVU984
 3192              	.LBB163:
 694:boards/TMC5041_eval.c **** 		if(tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor)) != 0)
 3193              		.loc 1 694 6 view .LVU985
 3194              	.LVL426:
 694:boards/TMC5041_eval.c **** 		if(tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor)) != 0)
 3195              		.loc 1 694 25 view .LVU986
 695:boards/TMC5041_eval.c **** 			return 0;
 3196              		.loc 1 695 3 view .LVU987
 3197              	.LBB164:
 3198              	.LBI164:
  47:boards/TMC5041_eval.c **** {
 3199              		.loc 1 47 31 view .LVU988
  47:boards/TMC5041_eval.c **** {
 3200              		.loc 1 47 31 is_stmt 0 view .LVU989
 3201              	.LBE164:
 3202              	.LBE163:
  49:boards/TMC5041_eval.c **** 
 3203              		.loc 1 49 2 is_stmt 1 view .LVU990
  51:boards/TMC5041_eval.c **** }
 3204              		.loc 1 51 2 view .LVU991
 693:boards/TMC5041_eval.c **** 	for(uint8_t motor = 0; motor < TMC5041_MOTORS; motor++)
 3205              		.loc 1 693 1 is_stmt 0 view .LVU992
 3206 0c74 08B5     		push	{r3, lr}
 3207              	.LCFI7:
 3208              		.cfi_def_cfa_offset 8
 3209              		.cfi_offset 3, -8
 3210              		.cfi_offset 14, -4
 3211              	.LBB166:
 695:boards/TMC5041_eval.c **** 			return 0;
 3212              		.loc 1 695 6 view .LVU993
 3213 0c76 0848     		ldr	r0, .L197
 3214 0c78 2221     		movs	r1, #34
 3215 0c7a FFF7FEFF 		bl	tmc5041_readInt
 3216              	.LVL427:
 695:boards/TMC5041_eval.c **** 			return 0;
 3217              		.loc 1 695 5 view .LVU994
 3218 0c7e 48B9     		cbnz	r0, .L195
 694:boards/TMC5041_eval.c **** 		if(tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor)) != 0)
 3219              		.loc 1 694 49 is_stmt 1 view .LVU995
 3220              	.LVL428:
 694:boards/TMC5041_eval.c **** 		if(tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor)) != 0)
 3221              		.loc 1 694 25 view .LVU996
 695:boards/TMC5041_eval.c **** 			return 0;
 3222              		.loc 1 695 3 view .LVU997
 3223              	.LBB165:
  47:boards/TMC5041_eval.c **** {
 3224              		.loc 1 47 31 view .LVU998
  47:boards/TMC5041_eval.c **** {
 3225              		.loc 1 47 31 is_stmt 0 view .LVU999
 3226              	.LBE165:
 3227              	.LBE166:
  49:boards/TMC5041_eval.c **** 
 3228              		.loc 1 49 2 is_stmt 1 view .LVU1000
  51:boards/TMC5041_eval.c **** }
 3229              		.loc 1 51 2 view .LVU1001
 3230              	.LBB167:
 695:boards/TMC5041_eval.c **** 			return 0;
 3231              		.loc 1 695 6 is_stmt 0 view .LVU1002
 3232 0c80 0548     		ldr	r0, .L197
 3233 0c82 4221     		movs	r1, #66
 3234 0c84 FFF7FEFF 		bl	tmc5041_readInt
 3235              	.LVL429:
 695:boards/TMC5041_eval.c **** 			return 0;
 3236              		.loc 1 695 5 view .LVU1003
 3237 0c88 20B9     		cbnz	r0, .L195
 694:boards/TMC5041_eval.c **** 		if(tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor)) != 0)
 3238              		.loc 1 694 49 is_stmt 1 view .LVU1004
 3239              	.LVL430:
 694:boards/TMC5041_eval.c **** 		if(tmc5041_readInt(motorToIC(motor), TMC5041_VACTUAL(motor)) != 0)
 3240              		.loc 1 694 25 view .LVU1005
 3241              	.LBE167:
 698:boards/TMC5041_eval.c **** }
 3242              		.loc 1 698 2 view .LVU1006
 699:boards/TMC5041_eval.c **** 
 3243              		.loc 1 699 1 is_stmt 0 view .LVU1007
 3244 0c8a BDE80840 		pop	{r3, lr}
 3245              	.LCFI8:
 3246              		.cfi_remember_state
 3247              		.cfi_restore 14
 3248              		.cfi_restore 3
 3249              		.cfi_def_cfa_offset 0
 698:boards/TMC5041_eval.c **** }
 3250              		.loc 1 698 9 view .LVU1008
 3251 0c8e 0248     		ldr	r0, .L197
 3252 0c90 FFF7FEBF 		b	tmc5041_reset
 3253              	.LVL431:
 3254              	.L195:
 3255              	.LCFI9:
 3256              		.cfi_restore_state
 699:boards/TMC5041_eval.c **** 
 3257              		.loc 1 699 1 view .LVU1009
 3258 0c94 0020     		movs	r0, #0
 3259 0c96 08BD     		pop	{r3, pc}
 3260              	.L198:
 3261              		.align	2
 3262              	.L197:
 3263 0c98 00000000 		.word	.LANCHOR0
 3264              		.cfi_endproc
 3265              	.LFE20:
 3267              		.align	1
 3268              		.syntax unified
 3269              		.thumb
 3270              		.thumb_func
 3271              		.fpu softvfp
 3273              	userFunction:
 3274              	.LVL432:
 3275              	.LFB18:
 664:boards/TMC5041_eval.c **** 	uint32_t errors = 0;
 3276              		.loc 1 664 1 is_stmt 1 view -0
 3277              		.cfi_startproc
 3278              		@ args = 0, pretend = 0, frame = 0
 3279              		@ frame_needed = 0, uses_anonymous_args = 0
 665:boards/TMC5041_eval.c **** 
 3280              		.loc 1 665 2 view .LVU1011
 667:boards/TMC5041_eval.c **** 
 3281              		.loc 1 667 2 view .LVU1012
 669:boards/TMC5041_eval.c **** 	{
 3282              		.loc 1 669 2 view .LVU1013
 3283 0c9c 0128     		cmp	r0, #1
 664:boards/TMC5041_eval.c **** 	uint32_t errors = 0;
 3284              		.loc 1 664 1 is_stmt 0 view .LVU1014
 3285 0c9e 10B5     		push	{r4, lr}
 3286              	.LCFI10:
 3287              		.cfi_def_cfa_offset 8
 3288              		.cfi_offset 4, -8
 3289              		.cfi_offset 14, -4
 664:boards/TMC5041_eval.c **** 	uint32_t errors = 0;
 3290              		.loc 1 664 1 view .LVU1015
 3291 0ca0 1446     		mov	r4, r2
 669:boards/TMC5041_eval.c **** 	{
 3292              		.loc 1 669 2 view .LVU1016
 3293 0ca2 03D0     		beq	.L200
 3294 0ca4 0228     		cmp	r0, #2
 3295 0ca6 0FD0     		beq	.L201
 3296 0ca8 0420     		movs	r0, #4
 3297              	.LVL433:
 3298              	.L199:
 682:boards/TMC5041_eval.c **** 
 3299              		.loc 1 682 1 view .LVU1017
 3300 0caa 10BD     		pop	{r4, pc}
 3301              	.LVL434:
 3302              	.L200:
 3303              	.LBB170:
 3304              	.LBI170:
 663:boards/TMC5041_eval.c **** {
 3305              		.loc 1 663 17 is_stmt 1 view .LVU1018
 3306              	.LBB171:
 672:boards/TMC5041_eval.c **** 		break;
 3307              		.loc 1 672 3 view .LVU1019
 672:boards/TMC5041_eval.c **** 		break;
 3308              		.loc 1 672 16 is_stmt 0 view .LVU1020
 3309 0cac 0A4B     		ldr	r3, .L204
 672:boards/TMC5041_eval.c **** 		break;
 3310              		.loc 1 672 13 view .LVU1021
 3311 0cae 0B4A     		ldr	r2, .L204+4
 3312              	.LVL435:
 672:boards/TMC5041_eval.c **** 		break;
 3313              		.loc 1 672 20 view .LVU1022
 3314 0cb0 DB68     		ldr	r3, [r3, #12]
 672:boards/TMC5041_eval.c **** 		break;
 3315              		.loc 1 672 13 view .LVU1023
 3316 0cb2 D2F8A402 		ldr	r0, [r2, #676]
 3317              	.LVL436:
 672:boards/TMC5041_eval.c **** 		break;
 3318              		.loc 1 672 28 view .LVU1024
 3319 0cb6 1B68     		ldr	r3, [r3]
 672:boards/TMC5041_eval.c **** 		break;
 3320              		.loc 1 672 13 view .LVU1025
 3321 0cb8 5B6A     		ldr	r3, [r3, #36]
 3322              	.LVL437:
 3323              	.L203:
 672:boards/TMC5041_eval.c **** 		break;
 3324              		.loc 1 672 13 view .LVU1026
 3325              	.LBE171:
 3326              	.LBE170:
 675:boards/TMC5041_eval.c **** 		break;
 3327              		.loc 1 675 13 view .LVU1027
 3328 0cba 9847     		blx	r3
 3329              	.LVL438:
 675:boards/TMC5041_eval.c **** 		break;
 3330              		.loc 1 675 55 view .LVU1028
 3331 0cbc 0038     		subs	r0, r0, #0
 3332 0cbe 18BF     		it	ne
 3333 0cc0 0120     		movne	r0, #1
 675:boards/TMC5041_eval.c **** 		break;
 3334              		.loc 1 675 10 view .LVU1029
 3335 0cc2 2060     		str	r0, [r4]
 676:boards/TMC5041_eval.c **** 	default:
 3336              		.loc 1 676 3 is_stmt 1 view .LVU1030
 665:boards/TMC5041_eval.c **** 
 3337              		.loc 1 665 11 is_stmt 0 view .LVU1031
 3338 0cc4 0020     		movs	r0, #0
 681:boards/TMC5041_eval.c **** }
 3339              		.loc 1 681 2 is_stmt 1 view .LVU1032
 681:boards/TMC5041_eval.c **** }
 3340              		.loc 1 681 9 is_stmt 0 view .LVU1033
 3341 0cc6 F0E7     		b	.L199
 3342              	.LVL439:
 3343              	.L201:
 675:boards/TMC5041_eval.c **** 		break;
 3344              		.loc 1 675 3 is_stmt 1 view .LVU1034
 675:boards/TMC5041_eval.c **** 		break;
 3345              		.loc 1 675 16 is_stmt 0 view .LVU1035
 3346 0cc8 034B     		ldr	r3, .L204
 675:boards/TMC5041_eval.c **** 		break;
 3347              		.loc 1 675 13 view .LVU1036
 3348 0cca 044A     		ldr	r2, .L204+4
 3349              	.LVL440:
 675:boards/TMC5041_eval.c **** 		break;
 3350              		.loc 1 675 20 view .LVU1037
 3351 0ccc DB68     		ldr	r3, [r3, #12]
 675:boards/TMC5041_eval.c **** 		break;
 3352              		.loc 1 675 13 view .LVU1038
 3353 0cce D2F8A802 		ldr	r0, [r2, #680]
 3354              	.LVL441:
 675:boards/TMC5041_eval.c **** 		break;
 3355              		.loc 1 675 28 view .LVU1039
 3356 0cd2 1B68     		ldr	r3, [r3]
 675:boards/TMC5041_eval.c **** 		break;
 3357              		.loc 1 675 13 view .LVU1040
 3358 0cd4 5B6A     		ldr	r3, [r3, #36]
 3359 0cd6 F0E7     		b	.L203
 3360              	.L205:
 3361              		.align	2
 3362              	.L204:
 3363 0cd8 00000000 		.word	HAL
 3364 0cdc 00000000 		.word	.LANCHOR0
 3365              		.cfi_endproc
 3366              	.LFE18:
 3368              		.align	1
 3369              		.syntax unified
 3370              		.thumb
 3371              		.thumb_func
 3372              		.fpu softvfp
 3374              	enableDriver:
 3375              	.LVL442:
 3376              	.LFB22:
 704:boards/TMC5041_eval.c **** }
 705:boards/TMC5041_eval.c **** 
 706:boards/TMC5041_eval.c **** static void enableDriver(DriverState state)
 707:boards/TMC5041_eval.c **** {
 3377              		.loc 1 707 1 is_stmt 1 view -0
 3378              		.cfi_startproc
 3379              		@ args = 0, pretend = 0, frame = 0
 3380              		@ frame_needed = 0, uses_anonymous_args = 0
 3381              		@ link register save eliminated.
 708:boards/TMC5041_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 3382              		.loc 1 708 2 view .LVU1042
 3383              		.loc 1 708 4 is_stmt 0 view .LVU1043
 3384 0ce0 0228     		cmp	r0, #2
 709:boards/TMC5041_eval.c **** 		state = Evalboards.driverEnable;
 3385              		.loc 1 709 3 is_stmt 1 view .LVU1044
 3386              		.loc 1 709 9 is_stmt 0 view .LVU1045
 3387 0ce2 04BF     		itt	eq
 3388 0ce4 0C4B     		ldreq	r3, .L211
 3389 0ce6 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 3390              	.LVL443:
 710:boards/TMC5041_eval.c **** 
 711:boards/TMC5041_eval.c **** 	if(state ==  DRIVER_DISABLE)
 3391              		.loc 1 711 2 is_stmt 1 view .LVU1046
 3392              		.loc 1 711 4 is_stmt 0 view .LVU1047
 3393 0cea 38B9     		cbnz	r0, .L208
 712:boards/TMC5041_eval.c **** 		HAL.IOs->config->setHigh(Pins.DRV_ENN);
 3394              		.loc 1 712 3 is_stmt 1 view .LVU1048
 3395              		.loc 1 712 6 is_stmt 0 view .LVU1049
 3396 0cec 0B4B     		ldr	r3, .L211+4
 3397              		.loc 1 712 10 view .LVU1050
 3398 0cee DB68     		ldr	r3, [r3, #12]
 3399              		.loc 1 712 18 view .LVU1051
 3400 0cf0 1B68     		ldr	r3, [r3]
 3401              		.loc 1 712 3 view .LVU1052
 3402 0cf2 5B69     		ldr	r3, [r3, #20]
 3403              	.L210:
 3404              	.LBB174:
 3405              	.LBB175:
 713:boards/TMC5041_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 714:boards/TMC5041_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN);
 3406              		.loc 1 714 3 view .LVU1053
 3407 0cf4 0A4A     		ldr	r2, .L211+8
 3408 0cf6 D2F8A002 		ldr	r0, [r2, #672]
 3409 0cfa 1847     		bx	r3	@ indirect register sibling call
 3410              	.LVL444:
 3411              	.L208:
 3412              		.loc 1 714 3 view .LVU1054
 3413              	.LBE175:
 3414              	.LBE174:
 713:boards/TMC5041_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 3415              		.loc 1 713 7 is_stmt 1 view .LVU1055
 713:boards/TMC5041_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 3416              		.loc 1 713 9 is_stmt 0 view .LVU1056
 3417 0cfc 0128     		cmp	r0, #1
 3418 0cfe 09D1     		bne	.L206
 713:boards/TMC5041_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 3419              		.loc 1 713 49 discriminator 1 view .LVU1057
 3420 0d00 054B     		ldr	r3, .L211
 713:boards/TMC5041_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 3421              		.loc 1 713 35 discriminator 1 view .LVU1058
 3422 0d02 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 3423 0d06 012B     		cmp	r3, #1
 3424 0d08 04D1     		bne	.L206
 3425              	.LBB177:
 3426              	.LBI174:
 706:boards/TMC5041_eval.c **** {
 3427              		.loc 1 706 13 is_stmt 1 view .LVU1059
 3428              	.LVL445:
 3429              	.LBB176:
 3430              		.loc 1 714 3 view .LVU1060
 3431              		.loc 1 714 6 is_stmt 0 view .LVU1061
 3432 0d0a 044B     		ldr	r3, .L211+4
 3433              		.loc 1 714 10 view .LVU1062
 3434 0d0c DB68     		ldr	r3, [r3, #12]
 3435              		.loc 1 714 18 view .LVU1063
 3436 0d0e 1B68     		ldr	r3, [r3]
 3437              		.loc 1 714 3 view .LVU1064
 3438 0d10 9B69     		ldr	r3, [r3, #24]
 3439 0d12 EFE7     		b	.L210
 3440              	.LVL446:
 3441              	.L206:
 3442              		.loc 1 714 3 view .LVU1065
 3443              	.LBE176:
 3444              	.LBE177:
 715:boards/TMC5041_eval.c **** }
 3445              		.loc 1 715 1 view .LVU1066
 3446 0d14 7047     		bx	lr
 3447              	.L212:
 3448 0d16 00BF     		.align	2
 3449              	.L211:
 3450 0d18 00000000 		.word	Evalboards
 3451 0d1c 00000000 		.word	HAL
 3452 0d20 00000000 		.word	.LANCHOR0
 3453              		.cfi_endproc
 3454              	.LFE22:
 3456              		.align	1
 3457              		.syntax unified
 3458              		.thumb
 3459              		.thumb_func
 3460              		.fpu softvfp
 3462              	deInit:
 3463              	.LFB19:
 685:boards/TMC5041_eval.c **** 	enableDriver(DRIVER_DISABLE);
 3464              		.loc 1 685 1 is_stmt 1 view -0
 3465              		.cfi_startproc
 3466              		@ args = 0, pretend = 0, frame = 0
 3467              		@ frame_needed = 0, uses_anonymous_args = 0
 686:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN);
 3468              		.loc 1 686 2 view .LVU1068
 685:boards/TMC5041_eval.c **** 	enableDriver(DRIVER_DISABLE);
 3469              		.loc 1 685 1 is_stmt 0 view .LVU1069
 3470 0d24 70B5     		push	{r4, r5, r6, lr}
 3471              	.LCFI11:
 3472              		.cfi_def_cfa_offset 16
 3473              		.cfi_offset 4, -16
 3474              		.cfi_offset 5, -12
 3475              		.cfi_offset 6, -8
 3476              		.cfi_offset 14, -4
 686:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN);
 3477              		.loc 1 686 2 view .LVU1070
 3478 0d26 0020     		movs	r0, #0
 3479 0d28 FFF7DAFF 		bl	enableDriver
 3480              	.LVL447:
 687:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 3481              		.loc 1 687 2 is_stmt 1 view .LVU1071
 687:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 3482              		.loc 1 687 5 is_stmt 0 view .LVU1072
 3483 0d2c 094B     		ldr	r3, .L214
 687:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 3484              		.loc 1 687 2 view .LVU1073
 3485 0d2e 0A4C     		ldr	r4, .L214+4
 687:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 3486              		.loc 1 687 5 view .LVU1074
 3487 0d30 DD68     		ldr	r5, [r3, #12]
 687:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 3488              		.loc 1 687 2 view .LVU1075
 3489 0d32 D4F8A002 		ldr	r0, [r4, #672]
 687:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 3490              		.loc 1 687 17 view .LVU1076
 3491 0d36 2B68     		ldr	r3, [r5]
 687:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 3492              		.loc 1 687 2 view .LVU1077
 3493 0d38 9B68     		ldr	r3, [r3, #8]
 3494 0d3a 9847     		blx	r3
 3495              	.LVL448:
 688:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 3496              		.loc 1 688 2 is_stmt 1 view .LVU1078
 688:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 3497              		.loc 1 688 17 is_stmt 0 view .LVU1079
 3498 0d3c 2B68     		ldr	r3, [r5]
 688:boards/TMC5041_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 3499              		.loc 1 688 2 view .LVU1080
 3500 0d3e D4F8A402 		ldr	r0, [r4, #676]
 3501 0d42 9B68     		ldr	r3, [r3, #8]
 3502 0d44 9847     		blx	r3
 3503              	.LVL449:
 689:boards/TMC5041_eval.c **** };
 3504              		.loc 1 689 2 is_stmt 1 view .LVU1081
 689:boards/TMC5041_eval.c **** };
 3505              		.loc 1 689 17 is_stmt 0 view .LVU1082
 3506 0d46 2B68     		ldr	r3, [r5]
 689:boards/TMC5041_eval.c **** };
 3507              		.loc 1 689 2 view .LVU1083
 3508 0d48 D4F8A802 		ldr	r0, [r4, #680]
 3509 0d4c 9B68     		ldr	r3, [r3, #8]
 690:boards/TMC5041_eval.c **** 
 3510              		.loc 1 690 1 view .LVU1084
 3511 0d4e BDE87040 		pop	{r4, r5, r6, lr}
 3512              	.LCFI12:
 3513              		.cfi_restore 14
 3514              		.cfi_restore 6
 3515              		.cfi_restore 5
 3516              		.cfi_restore 4
 3517              		.cfi_def_cfa_offset 0
 689:boards/TMC5041_eval.c **** };
 3518              		.loc 1 689 2 view .LVU1085
 3519 0d52 1847     		bx	r3	@ indirect register sibling call
 3520              	.LVL450:
 3521              	.L215:
 3522              		.align	2
 3523              	.L214:
 3524 0d54 00000000 		.word	HAL
 3525 0d58 00000000 		.word	.LANCHOR0
 3526              		.cfi_endproc
 3527              	.LFE19:
 3529              		.align	1
 3530              		.syntax unified
 3531              		.thumb
 3532              		.thumb_func
 3533              		.fpu softvfp
 3535              	rotate:
 3536              	.LVL451:
 3537              	.LFB4:
  72:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
 3538              		.loc 1 72 1 is_stmt 1 view -0
 3539              		.cfi_startproc
 3540              		@ args = 0, pretend = 0, frame = 0
 3541              		@ frame_needed = 0, uses_anonymous_args = 0
  73:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 3542              		.loc 1 73 2 view .LVU1087
  73:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 3543              		.loc 1 73 4 is_stmt 0 view .LVU1088
 3544 0d5c 0128     		cmp	r0, #1
  72:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
 3545              		.loc 1 72 1 view .LVU1089
 3546 0d5e F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3547              	.LCFI13:
 3548              		.cfi_def_cfa_offset 24
 3549              		.cfi_offset 3, -24
 3550              		.cfi_offset 4, -20
 3551              		.cfi_offset 5, -16
 3552              		.cfi_offset 6, -12
 3553              		.cfi_offset 7, -8
 3554              		.cfi_offset 14, -4
  72:boards/TMC5041_eval.c **** 	if(motor >= TMC5041_MOTORS)
 3555              		.loc 1 72 1 view .LVU1090
 3556 0d60 0446     		mov	r4, r0
 3557 0d62 0E46     		mov	r6, r1
  73:boards/TMC5041_eval.c **** 		return TMC_ERROR_MOTOR;
 3558              		.loc 1 73 4 view .LVU1091
 3559 0d64 1AD8     		bhi	.L219
 3560              	.LVL452:
 3561              	.LBB182:
 3562              	.LBI182:
  71:boards/TMC5041_eval.c **** {
 3563              		.loc 1 71 17 is_stmt 1 view .LVU1092
 3564              	.LBB183:
  76:boards/TMC5041_eval.c **** 	TMC5041.vMaxModified[motor] = true;
 3565              		.loc 1 76 2 view .LVU1093
 3566              	.LBB184:
 3567              	.LBI184:
  47:boards/TMC5041_eval.c **** {
 3568              		.loc 1 47 31 view .LVU1094
  47:boards/TMC5041_eval.c **** {
 3569              		.loc 1 47 31 is_stmt 0 view .LVU1095
 3570              	.LBE184:
 3571              	.LBE183:
 3572              	.LBE182:
  49:boards/TMC5041_eval.c **** 
 3573              		.loc 1 49 2 is_stmt 1 view .LVU1096
  51:boards/TMC5041_eval.c **** }
 3574              		.loc 1 51 2 view .LVU1097
 3575              	.LBB188:
 3576              	.LBB186:
  76:boards/TMC5041_eval.c **** 	TMC5041.vMaxModified[motor] = true;
 3577              		.loc 1 76 37 is_stmt 0 view .LVU1098
 3578 0d66 2025     		movs	r5, #32
  76:boards/TMC5041_eval.c **** 	TMC5041.vMaxModified[motor] = true;
 3579              		.loc 1 76 2 view .LVU1099
 3580 0d68 0D4F     		ldr	r7, .L221
  76:boards/TMC5041_eval.c **** 	TMC5041.vMaxModified[motor] = true;
 3581              		.loc 1 76 37 view .LVU1100
 3582 0d6a 8540     		lsls	r5, r5, r0
 3583 0d6c 45F00701 		orr	r1, r5, #7
 3584              	.LVL453:
  76:boards/TMC5041_eval.c **** 	TMC5041.vMaxModified[motor] = true;
 3585              		.loc 1 76 2 view .LVU1101
 3586 0d70 86EAE672 		eor	r2, r6, r6, asr #31
 3587 0d74 A2EBE672 		sub	r2, r2, r6, asr #31
 3588 0d78 C9B2     		uxtb	r1, r1
 3589 0d7a 3846     		mov	r0, r7
 3590              	.LVL454:
  76:boards/TMC5041_eval.c **** 	TMC5041.vMaxModified[motor] = true;
 3591              		.loc 1 76 2 view .LVU1102
 3592 0d7c FFF7FEFF 		bl	tmc5041_writeInt
 3593              	.LVL455:
  77:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_RAMPMODE(motor), (velocity >= 0)? TMC5041_MODE_VELPOS:T
 3594              		.loc 1 77 2 is_stmt 1 view .LVU1103
  77:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_RAMPMODE(motor), (velocity >= 0)? TMC5041_MODE_VELPOS:T
 3595              		.loc 1 77 30 is_stmt 0 view .LVU1104
 3596 0d80 3C44     		add	r4, r4, r7
 3597              	.LVL456:
  77:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_RAMPMODE(motor), (velocity >= 0)? TMC5041_MODE_VELPOS:T
 3598              		.loc 1 77 30 view .LVU1105
 3599 0d82 0123     		movs	r3, #1
  78:boards/TMC5041_eval.c **** 	return TMC_ERROR_NONE;
 3600              		.loc 1 78 2 view .LVU1106
 3601 0d84 002E     		cmp	r6, #0
 3602 0d86 3846     		mov	r0, r7
 3603 0d88 ACBF     		ite	ge
 3604 0d8a 1A46     		movge	r2, r3
 3605 0d8c 0222     		movlt	r2, #2
 3606 0d8e E9B2     		uxtb	r1, r5
  77:boards/TMC5041_eval.c **** 	tmc5041_writeInt(motorToIC(motor), TMC5041_RAMPMODE(motor), (velocity >= 0)? TMC5041_MODE_VELPOS:T
 3607              		.loc 1 77 30 view .LVU1107
 3608 0d90 84F89832 		strb	r3, [r4, #664]
  78:boards/TMC5041_eval.c **** 	return TMC_ERROR_NONE;
 3609              		.loc 1 78 2 is_stmt 1 view .LVU1108
 3610              	.LBB185:
 3611              	.LBI185:
  47:boards/TMC5041_eval.c **** {
 3612              		.loc 1 47 31 view .LVU1109
 3613              	.LVL457:
  47:boards/TMC5041_eval.c **** {
 3614              		.loc 1 47 31 is_stmt 0 view .LVU1110
 3615              	.LBE185:
 3616              	.LBE186:
 3617              	.LBE188:
  49:boards/TMC5041_eval.c **** 
 3618              		.loc 1 49 2 is_stmt 1 view .LVU1111
  51:boards/TMC5041_eval.c **** }
 3619              		.loc 1 51 2 view .LVU1112
 3620              	.LBB189:
 3621              	.LBB187:
  78:boards/TMC5041_eval.c **** 	return TMC_ERROR_NONE;
 3622              		.loc 1 78 2 is_stmt 0 view .LVU1113
 3623 0d94 FFF7FEFF 		bl	tmc5041_writeInt
 3624              	.LVL458:
  79:boards/TMC5041_eval.c **** }
 3625              		.loc 1 79 2 is_stmt 1 view .LVU1114
  78:boards/TMC5041_eval.c **** 	return TMC_ERROR_NONE;
 3626              		.loc 1 78 2 is_stmt 0 view .LVU1115
 3627 0d98 0020     		movs	r0, #0
 3628              	.L216:
  78:boards/TMC5041_eval.c **** 	return TMC_ERROR_NONE;
 3629              		.loc 1 78 2 view .LVU1116
 3630              	.LBE187:
 3631              	.LBE189:
  80:boards/TMC5041_eval.c **** 
 3632              		.loc 1 80 1 view .LVU1117
 3633 0d9a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3634              	.LVL459:
 3635              	.L219:
  74:boards/TMC5041_eval.c **** 
 3636              		.loc 1 74 10 view .LVU1118
 3637 0d9c 0820     		movs	r0, #8
 3638              	.LVL460:
  74:boards/TMC5041_eval.c **** 
 3639              		.loc 1 74 10 view .LVU1119
 3640 0d9e FCE7     		b	.L216
 3641              	.L222:
 3642              		.align	2
 3643              	.L221:
 3644 0da0 00000000 		.word	.LANCHOR0
 3645              		.cfi_endproc
 3646              	.LFE4:
 3648              		.align	1
 3649              		.syntax unified
 3650              		.thumb
 3651              		.thumb_func
 3652              		.fpu softvfp
 3654              	stop:
 3655              	.LVL461:
 3656              	.LFB7:
  93:boards/TMC5041_eval.c **** 	return rotate(motor, 0);
 3657              		.loc 1 93 1 is_stmt 1 view -0
 3658              		.cfi_startproc
 3659              		@ args = 0, pretend = 0, frame = 0
 3660              		@ frame_needed = 0, uses_anonymous_args = 0
 3661              		@ link register save eliminated.
  94:boards/TMC5041_eval.c **** }
 3662              		.loc 1 94 2 view .LVU1121
  94:boards/TMC5041_eval.c **** }
 3663              		.loc 1 94 9 is_stmt 0 view .LVU1122
 3664 0da4 0021     		movs	r1, #0
 3665 0da6 D9E7     		b	rotate
 3666              	.LVL462:
  94:boards/TMC5041_eval.c **** }
 3667              		.loc 1 94 9 view .LVU1123
 3668              		.cfi_endproc
 3669              	.LFE7:
 3671              		.align	1
 3672              		.syntax unified
 3673              		.thumb
 3674              		.thumb_func
 3675              		.fpu softvfp
 3677              	left:
 3678              	.LVL463:
 3679              	.LFB6:
  88:boards/TMC5041_eval.c **** 	return rotate(motor, -velocity);
 3680              		.loc 1 88 1 is_stmt 1 view -0
 3681              		.cfi_startproc
 3682              		@ args = 0, pretend = 0, frame = 0
 3683              		@ frame_needed = 0, uses_anonymous_args = 0
 3684              		@ link register save eliminated.
  89:boards/TMC5041_eval.c **** }
 3685              		.loc 1 89 2 view .LVU1125
  89:boards/TMC5041_eval.c **** }
 3686              		.loc 1 89 9 is_stmt 0 view .LVU1126
 3687 0da8 4942     		rsbs	r1, r1, #0
 3688              	.LVL464:
  89:boards/TMC5041_eval.c **** }
 3689              		.loc 1 89 9 view .LVU1127
 3690 0daa D7E7     		b	rotate
 3691              	.LVL465:
  89:boards/TMC5041_eval.c **** }
 3692              		.loc 1 89 9 view .LVU1128
 3693              		.cfi_endproc
 3694              	.LFE6:
 3696              		.align	1
 3697              		.syntax unified
 3698              		.thumb
 3699              		.thumb_func
 3700              		.fpu softvfp
 3702              	right:
 3703              	.LVL466:
 3704              	.LFB5:
  83:boards/TMC5041_eval.c **** 	return rotate(motor, velocity);
 3705              		.loc 1 83 1 is_stmt 1 view -0
 3706              		.cfi_startproc
 3707              		@ args = 0, pretend = 0, frame = 0
 3708              		@ frame_needed = 0, uses_anonymous_args = 0
 3709              		@ link register save eliminated.
  84:boards/TMC5041_eval.c **** }
 3710              		.loc 1 84 2 view .LVU1130
  84:boards/TMC5041_eval.c **** }
 3711              		.loc 1 84 9 is_stmt 0 view .LVU1131
 3712 0dac D6E7     		b	rotate
 3713              	.LVL467:
  84:boards/TMC5041_eval.c **** }
 3714              		.loc 1 84 9 view .LVU1132
 3715              		.cfi_endproc
 3716              	.LFE5:
 3718              		.align	1
 3719              		.global	tmc5041_readWriteArray
 3720              		.syntax unified
 3721              		.thumb
 3722              		.thumb_func
 3723              		.fpu softvfp
 3725              	tmc5041_readWriteArray:
 3726              	.LVL468:
 3727              	.LFB3:
  66:boards/TMC5041_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
 3728              		.loc 1 66 1 is_stmt 1 view -0
 3729              		.cfi_startproc
 3730              		@ args = 0, pretend = 0, frame = 0
 3731              		@ frame_needed = 0, uses_anonymous_args = 0
 3732              		@ link register save eliminated.
  67:boards/TMC5041_eval.c **** }
 3733              		.loc 1 67 2 view .LVU1134
 3734              	.LBB190:
 3735              	.LBI190:
  56:boards/TMC5041_eval.c **** {
 3736              		.loc 1 56 34 view .LVU1135
 3737              	.LBB191:
  58:boards/TMC5041_eval.c **** 
 3738              		.loc 1 58 2 view .LVU1136
  60:boards/TMC5041_eval.c **** }
 3739              		.loc 1 60 2 view .LVU1137
  60:boards/TMC5041_eval.c **** }
 3740              		.loc 1 60 9 is_stmt 0 view .LVU1138
 3741 0dae 034B     		ldr	r3, .L227
 3742              	.LBE191:
 3743              	.LBE190:
  67:boards/TMC5041_eval.c **** }
 3744              		.loc 1 67 23 view .LVU1139
 3745 0db0 D3F8AC32 		ldr	r3, [r3, #684]
  66:boards/TMC5041_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
 3746              		.loc 1 66 1 view .LVU1140
 3747 0db4 0846     		mov	r0, r1
 3748              	.LVL469:
  67:boards/TMC5041_eval.c **** }
 3749              		.loc 1 67 2 view .LVU1141
 3750 0db6 DB68     		ldr	r3, [r3, #12]
 3751 0db8 1146     		mov	r1, r2
 3752              	.LVL470:
  67:boards/TMC5041_eval.c **** }
 3753              		.loc 1 67 2 view .LVU1142
 3754 0dba 1847     		bx	r3	@ indirect register sibling call
 3755              	.LVL471:
 3756              	.L228:
  67:boards/TMC5041_eval.c **** }
 3757              		.loc 1 67 2 view .LVU1143
 3758              		.align	2
 3759              	.L227:
 3760 0dbc 00000000 		.word	.LANCHOR0
 3761              		.cfi_endproc
 3762              	.LFE3:
 3764              		.align	1
 3765              		.global	TMC5041_init
 3766              		.syntax unified
 3767              		.thumb
 3768              		.thumb_func
 3769              		.fpu softvfp
 3771              	TMC5041_init:
 3772              	.LFB23:
 716:boards/TMC5041_eval.c **** 
 717:boards/TMC5041_eval.c **** void TMC5041_init(void)
 718:boards/TMC5041_eval.c **** {
 3773              		.loc 1 718 1 is_stmt 1 view -0
 3774              		.cfi_startproc
 3775              		@ args = 0, pretend = 0, frame = 0
 3776              		@ frame_needed = 0, uses_anonymous_args = 0
 719:boards/TMC5041_eval.c **** 	tmc5041_init(&TMC5041, 0, Evalboards.ch1.config, tmc5041_defaultRegisterResetState);
 3777              		.loc 1 719 2 view .LVU1145
 718:boards/TMC5041_eval.c **** 	tmc5041_init(&TMC5041, 0, Evalboards.ch1.config, tmc5041_defaultRegisterResetState);
 3778              		.loc 1 718 1 is_stmt 0 view .LVU1146
 3779 0dc0 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3780              	.LCFI14:
 3781              		.cfi_def_cfa_offset 24
 3782              		.cfi_offset 3, -24
 3783              		.cfi_offset 4, -20
 3784              		.cfi_offset 5, -16
 3785              		.cfi_offset 6, -12
 3786              		.cfi_offset 7, -8
 3787              		.cfi_offset 14, -4
 3788              		.loc 1 719 2 view .LVU1147
 3789 0dc2 304C     		ldr	r4, .L230
 3790 0dc4 304D     		ldr	r5, .L230+4
 720:boards/TMC5041_eval.c **** 
 721:boards/TMC5041_eval.c **** 	Pins.DRV_ENN   = &HAL.IOs->pins->DIO0;
 3791              		.loc 1 721 23 view .LVU1148
 3792 0dc6 314F     		ldr	r7, .L230+8
 719:boards/TMC5041_eval.c **** 
 3793              		.loc 1 719 2 view .LVU1149
 3794 0dc8 A269     		ldr	r2, [r4, #24]
 3795 0dca 314B     		ldr	r3, .L230+12
 3796 0dcc 0021     		movs	r1, #0
 3797 0dce 2846     		mov	r0, r5
 3798 0dd0 FFF7FEFF 		bl	tmc5041_init
 3799              	.LVL472:
 3800              		.loc 1 721 2 is_stmt 1 view .LVU1150
 3801              		.loc 1 721 23 is_stmt 0 view .LVU1151
 3802 0dd4 FE68     		ldr	r6, [r7, #12]
 3803              		.loc 1 721 27 view .LVU1152
 3804 0dd6 7368     		ldr	r3, [r6, #4]
 722:boards/TMC5041_eval.c **** 	Pins.INT_ENCA  = &HAL.IOs->pins->DIO5;
 3805              		.loc 1 722 19 view .LVU1153
 3806 0dd8 03F58472 		add	r2, r3, #264
 721:boards/TMC5041_eval.c **** 	Pins.INT_ENCA  = &HAL.IOs->pins->DIO5;
 3807              		.loc 1 721 19 view .LVU1154
 3808 0ddc 03F16800 		add	r0, r3, #104
 723:boards/TMC5041_eval.c **** 	Pins.PP_ENCB   = &HAL.IOs->pins->DIO6;
 3809              		.loc 1 723 19 view .LVU1155
 3810 0de0 03F59473 		add	r3, r3, #296
 3811              		.loc 1 723 17 view .LVU1156
 3812 0de4 C5F8A832 		str	r3, [r5, #680]
 724:boards/TMC5041_eval.c **** 
 725:boards/TMC5041_eval.c **** 	HAL.IOs->config->toOutput(Pins.DRV_ENN);
 3813              		.loc 1 725 17 view .LVU1157
 3814 0de8 3368     		ldr	r3, [r6]
 722:boards/TMC5041_eval.c **** 	Pins.PP_ENCB   = &HAL.IOs->pins->DIO6;
 3815              		.loc 1 722 17 view .LVU1158
 3816 0dea C5F8A422 		str	r2, [r5, #676]
 3817              		.loc 1 725 2 view .LVU1159
 3818 0dee DB68     		ldr	r3, [r3, #12]
 721:boards/TMC5041_eval.c **** 	Pins.INT_ENCA  = &HAL.IOs->pins->DIO5;
 3819              		.loc 1 721 17 view .LVU1160
 3820 0df0 C5F8A002 		str	r0, [r5, #672]
 722:boards/TMC5041_eval.c **** 	Pins.PP_ENCB   = &HAL.IOs->pins->DIO6;
 3821              		.loc 1 722 2 is_stmt 1 view .LVU1161
 723:boards/TMC5041_eval.c **** 
 3822              		.loc 1 723 2 view .LVU1162
 3823              		.loc 1 725 2 view .LVU1163
 3824 0df4 9847     		blx	r3
 3825              	.LVL473:
 726:boards/TMC5041_eval.c **** 	HAL.IOs->config->toInput(Pins.INT_ENCA);
 3826              		.loc 1 726 2 view .LVU1164
 3827              		.loc 1 726 17 is_stmt 0 view .LVU1165
 3828 0df6 3368     		ldr	r3, [r6]
 3829              		.loc 1 726 2 view .LVU1166
 3830 0df8 D5F8A402 		ldr	r0, [r5, #676]
 3831 0dfc 1B69     		ldr	r3, [r3, #16]
 3832 0dfe 9847     		blx	r3
 3833              	.LVL474:
 727:boards/TMC5041_eval.c **** 	HAL.IOs->config->toInput(Pins.PP_ENCB);
 3834              		.loc 1 727 2 is_stmt 1 view .LVU1167
 3835              		.loc 1 727 17 is_stmt 0 view .LVU1168
 3836 0e00 3368     		ldr	r3, [r6]
 3837              		.loc 1 727 2 view .LVU1169
 3838 0e02 D5F8A802 		ldr	r0, [r5, #680]
 3839 0e06 1B69     		ldr	r3, [r3, #16]
 3840 0e08 9847     		blx	r3
 3841              	.LVL475:
 728:boards/TMC5041_eval.c **** 
 729:boards/TMC5041_eval.c **** 	TMC5041_SPIChannel = &HAL.SPI->ch1;
 3842              		.loc 1 729 2 is_stmt 1 view .LVU1170
 730:boards/TMC5041_eval.c **** 	TMC5041_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 3843              		.loc 1 730 28 is_stmt 0 view .LVU1171
 3844 0e0a 7368     		ldr	r3, [r6, #4]
 729:boards/TMC5041_eval.c **** 	TMC5041_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 3845              		.loc 1 729 27 view .LVU1172
 3846 0e0c 3A69     		ldr	r2, [r7, #16]
 729:boards/TMC5041_eval.c **** 	TMC5041_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 3847              		.loc 1 729 21 view .LVU1173
 3848 0e0e C5F8AC22 		str	r2, [r5, #684]
 3849              		.loc 1 730 2 is_stmt 1 view .LVU1174
 3850              		.loc 1 730 28 is_stmt 0 view .LVU1175
 3851 0e12 03F53273 		add	r3, r3, #712
 3852              		.loc 1 730 26 view .LVU1176
 3853 0e16 5360     		str	r3, [r2, #4]
 731:boards/TMC5041_eval.c **** 
 732:boards/TMC5041_eval.c **** 	TMC5041_config = Evalboards.ch1.config;
 3854              		.loc 1 732 2 is_stmt 1 view .LVU1177
 3855              		.loc 1 732 33 is_stmt 0 view .LVU1178
 3856 0e18 A369     		ldr	r3, [r4, #24]
 733:boards/TMC5041_eval.c **** 
 734:boards/TMC5041_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 3857              		.loc 1 734 38 view .LVU1179
 3858 0e1a 1E4A     		ldr	r2, .L230+16
 3859 0e1c C3F80422 		str	r2, [r3, #516]
 735:boards/TMC5041_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 3860              		.loc 1 735 38 view .LVU1180
 3861 0e20 1D4A     		ldr	r2, .L230+20
 3862 0e22 C3F80822 		str	r2, [r3, #520]
 736:boards/TMC5041_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 3863              		.loc 1 736 38 view .LVU1181
 3864 0e26 0122     		movs	r2, #1
 3865 0e28 1A80     		strh	r2, [r3]	@ movhi
 732:boards/TMC5041_eval.c **** 
 3866              		.loc 1 732 17 view .LVU1182
 3867 0e2a C5F89C32 		str	r3, [r5, #668]
 734:boards/TMC5041_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 3868              		.loc 1 734 2 is_stmt 1 view .LVU1183
 735:boards/TMC5041_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 3869              		.loc 1 735 2 view .LVU1184
 3870              		.loc 1 736 2 view .LVU1185
 737:boards/TMC5041_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 3871              		.loc 1 737 2 view .LVU1186
 738:boards/TMC5041_eval.c **** 
 739:boards/TMC5041_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 3872              		.loc 1 739 2 view .LVU1187
 3873              		.loc 1 739 38 is_stmt 0 view .LVU1188
 3874 0e2e 1B4B     		ldr	r3, .L230+24
 3875 0e30 6362     		str	r3, [r4, #36]
 740:boards/TMC5041_eval.c **** 	Evalboards.ch1.right                = right;
 3876              		.loc 1 740 2 is_stmt 1 view .LVU1189
 3877              		.loc 1 740 38 is_stmt 0 view .LVU1190
 3878 0e32 1B4B     		ldr	r3, .L230+28
 3879 0e34 2362     		str	r3, [r4, #32]
 741:boards/TMC5041_eval.c **** 	Evalboards.ch1.left                 = left;
 3880              		.loc 1 741 2 is_stmt 1 view .LVU1191
 3881              		.loc 1 741 38 is_stmt 0 view .LVU1192
 3882 0e36 1B4B     		ldr	r3, .L230+32
 3883 0e38 E361     		str	r3, [r4, #28]
 742:boards/TMC5041_eval.c **** 	Evalboards.ch1.stop                 = stop;
 3884              		.loc 1 742 2 is_stmt 1 view .LVU1193
 3885              		.loc 1 742 38 is_stmt 0 view .LVU1194
 3886 0e3a 1B4B     		ldr	r3, .L230+36
 3887 0e3c A362     		str	r3, [r4, #40]
 743:boards/TMC5041_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 3888              		.loc 1 743 2 is_stmt 1 view .LVU1195
 3889              		.loc 1 743 38 is_stmt 0 view .LVU1196
 3890 0e3e 1B4B     		ldr	r3, .L230+40
 3891 0e40 E363     		str	r3, [r4, #60]
 744:boards/TMC5041_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 3892              		.loc 1 744 2 is_stmt 1 view .LVU1197
 3893              		.loc 1 744 38 is_stmt 0 view .LVU1198
 3894 0e42 1B4B     		ldr	r3, .L230+44
 3895 0e44 A363     		str	r3, [r4, #56]
 745:boards/TMC5041_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 3896              		.loc 1 745 2 is_stmt 1 view .LVU1199
 3897              		.loc 1 745 38 is_stmt 0 view .LVU1200
 3898 0e46 1B4B     		ldr	r3, .L230+48
 3899 0e48 E362     		str	r3, [r4, #44]
 746:boards/TMC5041_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 3900              		.loc 1 746 2 is_stmt 1 view .LVU1201
 3901              		.loc 1 746 38 is_stmt 0 view .LVU1202
 3902 0e4a 1B4B     		ldr	r3, .L230+52
 3903 0e4c 2363     		str	r3, [r4, #48]
 747:boards/TMC5041_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 3904              		.loc 1 747 2 is_stmt 1 view .LVU1203
 3905              		.loc 1 747 38 is_stmt 0 view .LVU1204
 3906 0e4e 1B4B     		ldr	r3, .L230+56
 3907 0e50 E364     		str	r3, [r4, #76]
 748:boards/TMC5041_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 3908              		.loc 1 748 2 is_stmt 1 view .LVU1205
 3909              		.loc 1 748 38 is_stmt 0 view .LVU1206
 3910 0e52 1B4B     		ldr	r3, .L230+60
 3911 0e54 A364     		str	r3, [r4, #72]
 749:boards/TMC5041_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 3912              		.loc 1 749 2 is_stmt 1 view .LVU1207
 3913              		.loc 1 749 38 is_stmt 0 view .LVU1208
 3914 0e56 1B4B     		ldr	r3, .L230+64
 3915 0e58 A365     		str	r3, [r4, #88]
 750:boards/TMC5041_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 3916              		.loc 1 750 2 is_stmt 1 view .LVU1209
 3917              		.loc 1 750 38 is_stmt 0 view .LVU1210
 3918 0e5a 1B4B     		ldr	r3, .L230+68
 3919 0e5c 6365     		str	r3, [r4, #84]
 751:boards/TMC5041_eval.c **** 	Evalboards.ch1.getMeasuredSpeed     = getMeasuredSpeed;
 3920              		.loc 1 751 2 is_stmt 1 view .LVU1211
 3921              		.loc 1 751 38 is_stmt 0 view .LVU1212
 3922 0e5e 1B4B     		ldr	r3, .L230+72
 3923 0e60 2365     		str	r3, [r4, #80]
 752:boards/TMC5041_eval.c **** 	Evalboards.ch1.enableDriver         = enableDriver;
 3924              		.loc 1 752 2 is_stmt 1 view .LVU1213
 3925              		.loc 1 752 38 is_stmt 0 view .LVU1214
 3926 0e62 1B4B     		ldr	r3, .L230+76
 3927 0e64 6366     		str	r3, [r4, #100]
 753:boards/TMC5041_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 3928              		.loc 1 753 2 is_stmt 1 view .LVU1215
 3929              		.loc 1 753 38 is_stmt 0 view .LVU1216
 3930 0e66 1B4B     		ldr	r3, .L230+80
 3931 0e68 2366     		str	r3, [r4, #96]
 754:boards/TMC5041_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC5041_MOTORS;
 3932              		.loc 1 754 2 is_stmt 1 view .LVU1217
 755:boards/TMC5041_eval.c **** 	Evalboards.ch1.VMMin                = VM_MIN;
 756:boards/TMC5041_eval.c **** 	Evalboards.ch1.VMMax                = VM_MAX;
 3933              		.loc 1 756 38 is_stmt 0 view .LVU1218
 3934 0e6a 3222     		movs	r2, #50
 3935 0e6c 4FF48C73 		mov	r3, #280
 3936 0e70 C4E90332 		strd	r3, r2, [r4, #12]
 754:boards/TMC5041_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC5041_MOTORS;
 3937              		.loc 1 754 38 view .LVU1219
 3938 0e74 0220     		movs	r0, #2
 757:boards/TMC5041_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 3939              		.loc 1 757 38 view .LVU1220
 3940 0e76 184B     		ldr	r3, .L230+84
 754:boards/TMC5041_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC5041_MOTORS;
 3941              		.loc 1 754 38 view .LVU1221
 3942 0e78 2075     		strb	r0, [r4, #20]
 755:boards/TMC5041_eval.c **** 	Evalboards.ch1.VMMin                = VM_MIN;
 3943              		.loc 1 755 2 is_stmt 1 view .LVU1222
 3944              		.loc 1 757 2 view .LVU1223
 3945              		.loc 1 757 38 is_stmt 0 view .LVU1224
 3946 0e7a E365     		str	r3, [r4, #92]
 758:boards/TMC5041_eval.c **** 
 759:boards/TMC5041_eval.c **** 	enableDriver(DRIVER_USE_GLOBAL_ENABLE);
 3947              		.loc 1 759 2 is_stmt 1 view .LVU1225
 760:boards/TMC5041_eval.c **** };
 3948              		.loc 1 760 1 is_stmt 0 view .LVU1226
 3949 0e7c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 3950              	.LCFI15:
 3951              		.cfi_restore 14
 3952              		.cfi_restore 7
 3953              		.cfi_restore 6
 3954              		.cfi_restore 5
 3955              		.cfi_restore 4
 3956              		.cfi_restore 3
 3957              		.cfi_def_cfa_offset 0
 759:boards/TMC5041_eval.c **** };
 3958              		.loc 1 759 2 view .LVU1227
 3959 0e80 2EE7     		b	enableDriver
 3960              	.LVL476:
 3961              	.L231:
 3962 0e82 00BF     		.align	2
 3963              	.L230:
 3964 0e84 00000000 		.word	Evalboards
 3965 0e88 00000000 		.word	.LANCHOR0
 3966 0e8c 00000000 		.word	HAL
 3967 0e90 00000000 		.word	.LANCHOR1
 3968 0e94 00000000 		.word	reset
 3969 0e98 00000000 		.word	restore
 3970 0e9c 00000000 		.word	rotate
 3971 0ea0 00000000 		.word	right
 3972 0ea4 00000000 		.word	left
 3973 0ea8 00000000 		.word	stop
 3974 0eac 00000000 		.word	GAP
 3975 0eb0 00000000 		.word	SAP
 3976 0eb4 00000000 		.word	moveTo
 3977 0eb8 00000000 		.word	moveBy
 3978 0ebc 00000000 		.word	writeRegister
 3979 0ec0 00000000 		.word	readRegister
 3980 0ec4 00000000 		.word	periodicJob
 3981 0ec8 00000000 		.word	userFunction
 3982 0ecc 00000000 		.word	getMeasuredSpeed
 3983 0ed0 00000000 		.word	enableDriver
 3984 0ed4 00000000 		.word	checkErrors
 3985 0ed8 00000000 		.word	deInit
 3986              		.cfi_endproc
 3987              	.LFE23:
 3989              		.comm	TMCMotionController,532,4
 3990              		.comm	TMCDriver,532,4
 3991              		.comm	Evalboards,244,4
 3992              		.comm	VitalSignsMonitor,20,4
 3993              		.comm	hwid,1,1
 3994              		.comm	HAL,48,4
 3995              		.comm	UART,40,4
 3996              		.comm	Timer,16,4
 3997              		.comm	WLAN,36,4
 3998              		.comm	RS232,36,4
 3999              		.comm	LEDs,28,4
 4000              		.comm	USB,36,4
 4001              		.comm	uart0_interrupt,1,1
 4002              		.comm	ADCs,32,4
 4003              		.comm	SPI,44,4
 4004              		.comm	IOMap,2088,4
 4005              		.comm	IOs,52,4
 4006              		.comm	Cpu,8,4
 4007              		.section	.rodata
 4008              		.align	2
 4009              		.set	.LANCHOR1,. + 0
 4012              	tmc5041_defaultRegisterResetState:
 4013 0000 00000000 		.word	0
 4014 0004 00000000 		.word	0
 4015 0008 00000000 		.word	0
 4016 000c 00000000 		.word	0
 4017 0010 00000000 		.word	0
 4018 0014 00000000 		.word	0
 4019 0018 00000000 		.word	0
 4020 001c 00000000 		.word	0
 4021 0020 00000000 		.word	0
 4022 0024 00000000 		.word	0
 4023 0028 00000000 		.word	0
 4024 002c 00000000 		.word	0
 4025 0030 00000000 		.word	0
 4026 0034 00000000 		.word	0
 4027 0038 00000000 		.word	0
 4028 003c 00000000 		.word	0
 4029 0040 00000000 		.word	0
 4030 0044 00000000 		.word	0
 4031 0048 00000000 		.word	0
 4032 004c 00000000 		.word	0
 4033 0050 00000000 		.word	0
 4034 0054 00000000 		.word	0
 4035 0058 00000000 		.word	0
 4036 005c 00000000 		.word	0
 4037 0060 00000000 		.word	0
 4038 0064 00000000 		.word	0
 4039 0068 00000000 		.word	0
 4040 006c 00000000 		.word	0
 4041 0070 00000000 		.word	0
 4042 0074 00000000 		.word	0
 4043 0078 00000000 		.word	0
 4044 007c 00000000 		.word	0
 4045 0080 00000000 		.word	0
 4046 0084 00000000 		.word	0
 4047 0088 00000000 		.word	0
 4048 008c 00000000 		.word	0
 4049 0090 00000000 		.word	0
 4050 0094 00000000 		.word	0
 4051 0098 00000000 		.word	0
 4052 009c 00000000 		.word	0
 4053 00a0 00000000 		.word	0
 4054 00a4 00000000 		.word	0
 4055 00a8 00000000 		.word	0
 4056 00ac 00000000 		.word	0
 4057 00b0 00000000 		.word	0
 4058 00b4 00000000 		.word	0
 4059 00b8 00000000 		.word	0
 4060 00bc 00000000 		.word	0
 4061 00c0 03170700 		.word	464643
 4062 00c4 00000000 		.word	0
 4063 00c8 FFFFFF00 		.word	16777215
 4064 00cc 00000000 		.word	0
 4065 00d0 00000000 		.word	0
 4066 00d4 00000000 		.word	0
 4067 00d8 00000000 		.word	0
 4068 00dc 00000000 		.word	0
 4069 00e0 00000000 		.word	0
 4070 00e4 00000000 		.word	0
 4071 00e8 00000000 		.word	0
 4072 00ec 00000000 		.word	0
 4073 00f0 00000000 		.word	0
 4074 00f4 00000000 		.word	0
 4075 00f8 00000000 		.word	0
 4076 00fc 00000000 		.word	0
 4077 0100 00000000 		.word	0
 4078 0104 00000000 		.word	0
 4079 0108 00000000 		.word	0
 4080 010c 00000000 		.word	0
 4081 0110 00000000 		.word	0
 4082 0114 00000000 		.word	0
 4083 0118 00000000 		.word	0
 4084 011c 00000000 		.word	0
 4085 0120 00000000 		.word	0
 4086 0124 00000000 		.word	0
 4087 0128 00000000 		.word	0
 4088 012c 00000000 		.word	0
 4089 0130 00000000 		.word	0
 4090 0134 00000000 		.word	0
 4091 0138 00000000 		.word	0
 4092 013c 00000000 		.word	0
 4093 0140 03170700 		.word	464643
 4094 0144 00000000 		.word	0
 4095 0148 FFFFFF00 		.word	16777215
 4096 014c 00000000 		.word	0
 4097 0150 00000000 		.word	0
 4098 0154 00000000 		.word	0
 4099 0158 00000000 		.word	0
 4100 015c 00000000 		.word	0
 4101 0160 00000000 		.word	0
 4102 0164 00000000 		.word	0
 4103 0168 00000000 		.word	0
 4104 016c 00000000 		.word	0
 4105 0170 00000000 		.word	0
 4106 0174 00000000 		.word	0
 4107 0178 00000000 		.word	0
 4108 017c 00000000 		.word	0
 4109 0180 54B5AAAA 		.word	-1431653036
 4110 0184 AA54954A 		.word	1251300522
 4111 0188 29294924 		.word	608774441
 4112 018c 22421010 		.word	269500962
 4113 0190 FFFFFFFB 		.word	-67108865
 4114 0194 7D77BBB5 		.word	-1246005379
 4115 0198 56552949 		.word	1227445590
 4116 019c 22424000 		.word	4211234
 4117 01a0 5680FFFF 		.word	-32682
 4118 01a4 0000F700 		.word	16187392
 4119 01a8 00000000 		.word	0
 4120 01ac 00000000 		.word	0
 4121 01b0 D5010100 		.word	66005
 4122 01b4 00000000 		.word	0
 4123 01b8 00000000 		.word	0
 4124 01bc 00000000 		.word	0
 4125 01c0 00000000 		.word	0
 4126 01c4 00000000 		.word	0
 4127 01c8 00000000 		.word	0
 4128 01cc 00000000 		.word	0
 4129 01d0 00000000 		.word	0
 4130 01d4 00000000 		.word	0
 4131 01d8 00000000 		.word	0
 4132 01dc 00000000 		.word	0
 4133 01e0 00000000 		.word	0
 4134 01e4 00000000 		.word	0
 4135 01e8 00000000 		.word	0
 4136 01ec 00000000 		.word	0
 4137 01f0 D5010100 		.word	66005
 4138 01f4 00000000 		.word	0
 4139 01f8 00000000 		.word	0
 4140 01fc 00000000 		.word	0
 4141              		.bss
 4142              		.align	2
 4143              		.set	.LANCHOR0,. + 0
 4146              	TMC5041:
 4147 0000 00000000 		.space	668
 4147      00000000 
 4147      00000000 
 4147      00000000 
 4147      00000000 
 4150              	TMC5041_config:
 4151 029c 00000000 		.space	4
 4154              	Pins:
 4155 02a0 00000000 		.space	12
 4155      00000000 
 4155      00000000 
 4158              	TMC5041_SPIChannel:
 4159 02ac 00000000 		.space	4
 4162              	ADCValue:
 4163 02b0 00000000 		.space	12
 4163      00000000 
 4163      00000000 
 4164              		.text
 4165              	.Letext0:
 4166              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 4167              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4168              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4169              		.file 5 "TMC-API/tmc/helpers/Types.h"
 4170              		.file 6 "TMC-API/tmc/helpers/Config.h"
 4171              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4172              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4173              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4174              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 4175              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 4176              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 4177              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 4178              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 4179              		.file 15 "./hal/IOs.h"
 4180              		.file 16 "./hal/IOMap.h"
 4181              		.file 17 "./hal/SPI.h"
 4182              		.file 18 "./hal/ADCs.h"
 4183              		.file 19 "./hal/RXTX.h"
 4184              		.file 20 "./hal/USB.h"
 4185              		.file 21 "./hal/LEDs.h"
 4186              		.file 22 "./hal/RS232.h"
 4187              		.file 23 "./hal/WLAN.h"
 4188              		.file 24 "./hal/Timer.h"
 4189              		.file 25 "./hal/UART.h"
 4190              		.file 26 "./hal/HAL.h"
 4191              		.file 27 "./tmc/VitalSignsMonitor.h"
 4192              		.file 28 "boards/Board.h"
 4193              		.file 29 "boards/TMCDriver.h"
 4194              		.file 30 "boards/TMCMotionController.h"
 4195              		.file 31 "TMC-API/tmc/ic/TMC5041/TMC5041.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC5041_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:22     .text:00000000 getMeasuredSpeed
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:54     .text:00000018 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:58     .text:0000001c $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:64     .text:0000001c checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:83     .text:00000024 $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:87     .text:00000028 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:93     .text:00000028 periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:114    .text:00000030 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:118    .text:00000034 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:124    .text:00000034 readRegister
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:156    .text:00000044 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:160    .text:00000048 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:166    .text:00000048 writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:185    .text:00000050 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:189    .text:00000054 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:195    .text:00000054 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:307    .text:000000ac $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:311    .text:000000b0 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:317    .text:000000b0 moveBy
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:379    .text:000000d4 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:383    .text:000000d8 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:389    .text:000000d8 handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:440    .text:00000108 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:490    .text:0000016c $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:506    .text:0000017c $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:536    .text:000001b8 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:1236   .text:00000484 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:1249   .text:00000488 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:1830   .text:00000646 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:1838   .text:0000064e $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:2004   .text:0000070c $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:2008   .text:00000710 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:2565   .text:00000a0c $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:2569   .text:00000a10 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3080   .text:00000c48 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3084   .text:00000c4c $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3090   .text:00000c4c SAP
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3130   .text:00000c60 GAP
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3160   .text:00000c6a restore
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3175   .text:00000c70 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3179   .text:00000c74 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3185   .text:00000c74 reset
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3263   .text:00000c98 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3267   .text:00000c9c $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3273   .text:00000c9c userFunction
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3363   .text:00000cd8 $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3368   .text:00000ce0 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3374   .text:00000ce0 enableDriver
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3450   .text:00000d18 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3456   .text:00000d24 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3462   .text:00000d24 deInit
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3524   .text:00000d54 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3529   .text:00000d5c $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3535   .text:00000d5c rotate
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3644   .text:00000da0 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3648   .text:00000da4 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3654   .text:00000da4 stop
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3677   .text:00000da8 left
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3702   .text:00000dac right
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3725   .text:00000dae tmc5041_readWriteArray
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3760   .text:00000dbc $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3764   .text:00000dc0 $t
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3771   .text:00000dc0 TMC5041_init
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:3964   .text:00000e84 $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:4008   .rodata:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:4012   .rodata:00000000 tmc5041_defaultRegisterResetState
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:4142   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:4146   .bss:00000000 TMC5041
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:4150   .bss:0000029c TMC5041_config
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:4154   .bss:000002a0 Pins
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:4158   .bss:000002ac TMC5041_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\ccPmHE4l.s:4162   .bss:000002b0 ADCValue

UNDEFINED SYMBOLS
tmc5041_periodicJob
tmc5041_readInt
tmc5041_writeInt
tmc5041_restore
tmc5041_reset
tmc5041_init
