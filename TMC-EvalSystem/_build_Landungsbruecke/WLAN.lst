   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"WLAN.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	rawRx:
  23              	.LVL0:
  24              	.LFB5:
  25              		.file 1 "hal/Landungsbruecke/tmc/WLAN.c"
   1:hal/Landungsbruecke/tmc/WLAN.c **** #include "hal/HAL.h"
   2:hal/Landungsbruecke/tmc/WLAN.c **** //#include "hal/WLAN.h"
   3:hal/Landungsbruecke/tmc/WLAN.c **** #include "hal/Landungsbruecke/freescale/Cpu.h"
   4:hal/Landungsbruecke/tmc/WLAN.c **** 
   5:hal/Landungsbruecke/tmc/WLAN.c **** #include <string.h>
   6:hal/Landungsbruecke/tmc/WLAN.c **** 
   7:hal/Landungsbruecke/tmc/WLAN.c **** #define BUFFER_SIZE           1024
   8:hal/Landungsbruecke/tmc/WLAN.c **** #define WLAN_CMD_BUFFER_SIZE  128 // ascii command string buffer
   9:hal/Landungsbruecke/tmc/WLAN.c **** 
  10:hal/Landungsbruecke/tmc/WLAN.c **** #define CMDBUFFER_END_CHAR '\0'
  11:hal/Landungsbruecke/tmc/WLAN.c **** 
  12:hal/Landungsbruecke/tmc/WLAN.c **** #define INTR_PRI 6
  13:hal/Landungsbruecke/tmc/WLAN.c **** 
  14:hal/Landungsbruecke/tmc/WLAN.c **** #define UART_TIMEOUT_VALUE 5
  15:hal/Landungsbruecke/tmc/WLAN.c **** 
  16:hal/Landungsbruecke/tmc/WLAN.c **** static void init();
  17:hal/Landungsbruecke/tmc/WLAN.c **** static void deInit();
  18:hal/Landungsbruecke/tmc/WLAN.c **** static void tx(uint8_t ch);
  19:hal/Landungsbruecke/tmc/WLAN.c **** static uint8_t rx(uint8_t *ch);
  20:hal/Landungsbruecke/tmc/WLAN.c **** static void txN(uint8_t *str, uint8_t number);
  21:hal/Landungsbruecke/tmc/WLAN.c **** static uint8_t rxN(uint8_t *ch, uint8_t number);
  22:hal/Landungsbruecke/tmc/WLAN.c **** static void clearBuffers(void);
  23:hal/Landungsbruecke/tmc/WLAN.c **** static uint32_t bytesAvailable();
  24:hal/Landungsbruecke/tmc/WLAN.c **** 
  25:hal/Landungsbruecke/tmc/WLAN.c **** // ring buffers (used in BufferingTypedef struct)
  26:hal/Landungsbruecke/tmc/WLAN.c **** static volatile uint8_t rxBuffer[BUFFER_SIZE];
  27:hal/Landungsbruecke/tmc/WLAN.c **** static volatile uint8_t txBuffer[BUFFER_SIZE];
  28:hal/Landungsbruecke/tmc/WLAN.c **** 
  29:hal/Landungsbruecke/tmc/WLAN.c **** static int8_t cmdBuffer[WLAN_CMD_BUFFER_SIZE];
  30:hal/Landungsbruecke/tmc/WLAN.c **** static uint32_t cmdBufferSize = 0;
  31:hal/Landungsbruecke/tmc/WLAN.c **** static uint32_t cmdEnabledTime; // systick timestamp when command mode sequence has been sent
  32:hal/Landungsbruecke/tmc/WLAN.c **** 
  33:hal/Landungsbruecke/tmc/WLAN.c **** static WLANStateTypedef wlanState = WLAN_DATA_MODE;
  34:hal/Landungsbruecke/tmc/WLAN.c **** 
  35:hal/Landungsbruecke/tmc/WLAN.c **** static volatile uint32_t available = 0;
  36:hal/Landungsbruecke/tmc/WLAN.c **** 
  37:hal/Landungsbruecke/tmc/WLAN.c **** uint32_t UART0_TimeoutTimer;
  38:hal/Landungsbruecke/tmc/WLAN.c **** 
  39:hal/Landungsbruecke/tmc/WLAN.c **** RXTXTypeDef WLAN =
  40:hal/Landungsbruecke/tmc/WLAN.c **** {
  41:hal/Landungsbruecke/tmc/WLAN.c **** 	.init            = init,
  42:hal/Landungsbruecke/tmc/WLAN.c **** 	.deInit          = deInit,
  43:hal/Landungsbruecke/tmc/WLAN.c **** 	.rx              = rx,
  44:hal/Landungsbruecke/tmc/WLAN.c **** 	.tx              = tx,
  45:hal/Landungsbruecke/tmc/WLAN.c **** 	.rxN             = rxN,
  46:hal/Landungsbruecke/tmc/WLAN.c **** 	.txN             = txN,
  47:hal/Landungsbruecke/tmc/WLAN.c **** 	.clearBuffers    = clearBuffers,
  48:hal/Landungsbruecke/tmc/WLAN.c **** 	.baudRate        = 57600,
  49:hal/Landungsbruecke/tmc/WLAN.c **** 	.bytesAvailable  = bytesAvailable
  50:hal/Landungsbruecke/tmc/WLAN.c **** 
  51:hal/Landungsbruecke/tmc/WLAN.c **** };
  52:hal/Landungsbruecke/tmc/WLAN.c **** 
  53:hal/Landungsbruecke/tmc/WLAN.c **** static RXTXBufferingTypeDef buffers =
  54:hal/Landungsbruecke/tmc/WLAN.c **** {
  55:hal/Landungsbruecke/tmc/WLAN.c **** 	.rx =
  56:hal/Landungsbruecke/tmc/WLAN.c **** 	{
  57:hal/Landungsbruecke/tmc/WLAN.c **** 		.read    = 0,
  58:hal/Landungsbruecke/tmc/WLAN.c **** 		.wrote   = 0,
  59:hal/Landungsbruecke/tmc/WLAN.c **** 		.buffer  = rxBuffer
  60:hal/Landungsbruecke/tmc/WLAN.c **** 	},
  61:hal/Landungsbruecke/tmc/WLAN.c **** 
  62:hal/Landungsbruecke/tmc/WLAN.c **** 	.tx =
  63:hal/Landungsbruecke/tmc/WLAN.c **** 	{
  64:hal/Landungsbruecke/tmc/WLAN.c **** 		.read    = 0,
  65:hal/Landungsbruecke/tmc/WLAN.c **** 		.wrote   = 0,
  66:hal/Landungsbruecke/tmc/WLAN.c **** 		.buffer  = txBuffer
  67:hal/Landungsbruecke/tmc/WLAN.c **** 	}
  68:hal/Landungsbruecke/tmc/WLAN.c **** };
  69:hal/Landungsbruecke/tmc/WLAN.c **** 
  70:hal/Landungsbruecke/tmc/WLAN.c **** static void init()
  71:hal/Landungsbruecke/tmc/WLAN.c **** {
  72:hal/Landungsbruecke/tmc/WLAN.c **** 	register uint16_t ubd;
  73:hal/Landungsbruecke/tmc/WLAN.c **** 
  74:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->toOutput(&HAL.IOs->pins->MIXED6);
  75:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->setLow(&HAL.IOs->pins->MIXED6);
  76:hal/Landungsbruecke/tmc/WLAN.c **** 
  77:hal/Landungsbruecke/tmc/WLAN.c **** 	SIM_SCGC4 |= SIM_SCGC4_UART0_MASK;
  78:hal/Landungsbruecke/tmc/WLAN.c **** 
  79:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_RX.configuration.GPIO_Mode = GPIO_Mode_AF3;
  80:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_TX.configuration.GPIO_Mode = GPIO_Mode_AF3;
  81:hal/Landungsbruecke/tmc/WLAN.c **** 
  82:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_RX);
  83:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_TX);
  84:hal/Landungsbruecke/tmc/WLAN.c **** 	/* Disable the transmitter and receiver */
  85:hal/Landungsbruecke/tmc/WLAN.c **** 	UART_C2_REG(UART0_BASE_PTR) &= ~(UART_C2_TE_MASK | UART_C2_RE_MASK );
  86:hal/Landungsbruecke/tmc/WLAN.c **** 
  87:hal/Landungsbruecke/tmc/WLAN.c **** 	/* Configure the UART for 8-bit mode, no parity */
  88:hal/Landungsbruecke/tmc/WLAN.c **** 	/* We need all default settings, so entire register is cleared */
  89:hal/Landungsbruecke/tmc/WLAN.c **** 	UART_C1_REG(UART0_BASE_PTR) = 0;
  90:hal/Landungsbruecke/tmc/WLAN.c **** 
  91:hal/Landungsbruecke/tmc/WLAN.c **** 	ubd = (CPU_BUS_CLK_HZ / 16) / (WLAN.baudRate);
  92:hal/Landungsbruecke/tmc/WLAN.c **** 
  93:hal/Landungsbruecke/tmc/WLAN.c **** 	UART_BDH_REG(UART0_BASE_PTR) = (ubd >> 8) & UART_BDH_SBR_MASK;
  94:hal/Landungsbruecke/tmc/WLAN.c **** 	UART_BDL_REG(UART0_BASE_PTR) = (ubd & UART_BDL_SBR_MASK);
  95:hal/Landungsbruecke/tmc/WLAN.c **** 
  96:hal/Landungsbruecke/tmc/WLAN.c **** 	/* Enable receiver and transmitter */
  97:hal/Landungsbruecke/tmc/WLAN.c **** 	UART_C2_REG(UART0_BASE_PTR) |= (UART_C2_TE_MASK | UART_C2_RE_MASK | UART_C2_RIE_MASK);
  98:hal/Landungsbruecke/tmc/WLAN.c **** 
  99:hal/Landungsbruecke/tmc/WLAN.c **** 	enable_irq(INT_UART0_RX_TX-16);
 100:hal/Landungsbruecke/tmc/WLAN.c **** }
 101:hal/Landungsbruecke/tmc/WLAN.c **** 
 102:hal/Landungsbruecke/tmc/WLAN.c **** static void deInit()
 103:hal/Landungsbruecke/tmc/WLAN.c **** {
 104:hal/Landungsbruecke/tmc/WLAN.c **** 	SIM_SCGC4 &= ~(SIM_SCGC4_UART0_MASK);
 105:hal/Landungsbruecke/tmc/WLAN.c **** 
 106:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_RX.configuration.GPIO_Mode = GPIO_Mode_IN;
 107:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_TX.configuration.GPIO_Mode = GPIO_Mode_IN;
 108:hal/Landungsbruecke/tmc/WLAN.c **** 
 109:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_RX);
 110:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_TX);
 111:hal/Landungsbruecke/tmc/WLAN.c **** 
 112:hal/Landungsbruecke/tmc/WLAN.c **** 	disable_irq(INT_UART0_RX_TX-16);
 113:hal/Landungsbruecke/tmc/WLAN.c **** 
 114:hal/Landungsbruecke/tmc/WLAN.c **** 	clearBuffers();
 115:hal/Landungsbruecke/tmc/WLAN.c **** }
 116:hal/Landungsbruecke/tmc/WLAN.c **** 
 117:hal/Landungsbruecke/tmc/WLAN.c **** void UART0_RX_TX_IRQHandler_WLAN(void)
 118:hal/Landungsbruecke/tmc/WLAN.c **** {
 119:hal/Landungsbruecke/tmc/WLAN.c **** 	uint32_t status = UART0_S1;
 120:hal/Landungsbruecke/tmc/WLAN.c **** 
 121:hal/Landungsbruecke/tmc/WLAN.c **** 	if(status & UART_S1_RDRF_MASK)
 122:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 123:hal/Landungsbruecke/tmc/WLAN.c **** 		buffers.rx.buffer[buffers.rx.wrote] = UART0_D;
 124:hal/Landungsbruecke/tmc/WLAN.c **** 		buffers.rx.wrote = (buffers.rx.wrote + 1) % BUFFER_SIZE;
 125:hal/Landungsbruecke/tmc/WLAN.c **** 		available++;
 126:hal/Landungsbruecke/tmc/WLAN.c **** 
 127:hal/Landungsbruecke/tmc/WLAN.c **** 		// reset timeout value
 128:hal/Landungsbruecke/tmc/WLAN.c **** 		UART0_TimeoutTimer = UART_TIMEOUT_VALUE;
 129:hal/Landungsbruecke/tmc/WLAN.c **** 		UART0_S1 &= ~(UART_S1_RDRF_MASK); // Zur√ºcksetzen InterruptFlag
 130:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 131:hal/Landungsbruecke/tmc/WLAN.c **** 
 132:hal/Landungsbruecke/tmc/WLAN.c **** 	if(status & UART_S1_TDRE_MASK)
 133:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 134:hal/Landungsbruecke/tmc/WLAN.c **** 		if(buffers.tx.read != buffers.tx.wrote)
 135:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 136:hal/Landungsbruecke/tmc/WLAN.c **** 			UART0_D	= buffers.tx.buffer[buffers.tx.read];
 137:hal/Landungsbruecke/tmc/WLAN.c **** 			buffers.tx.read = (buffers.tx.read + 1) % BUFFER_SIZE;
 138:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 139:hal/Landungsbruecke/tmc/WLAN.c **** 		else // empty buffer -> turn off send interrupt
 140:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 141:hal/Landungsbruecke/tmc/WLAN.c **** 			UART0_C2 &= ~UART_C2_TIE_MASK;
 142:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 143:hal/Landungsbruecke/tmc/WLAN.c **** 		UART0_S1 &= ~(UART_S1_TDRE_MASK); // Zur√ºcksetzen InterruptFlag
 144:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 145:hal/Landungsbruecke/tmc/WLAN.c **** }
 146:hal/Landungsbruecke/tmc/WLAN.c **** 
 147:hal/Landungsbruecke/tmc/WLAN.c **** // Send without checking for CMD/Data mode
 148:hal/Landungsbruecke/tmc/WLAN.c **** static void rawTx(uint8_t ch)
 149:hal/Landungsbruecke/tmc/WLAN.c **** {
 150:hal/Landungsbruecke/tmc/WLAN.c **** 	if(wlanState == WLAN_INIT_CMD_MODE)
 151:hal/Landungsbruecke/tmc/WLAN.c **** 		return;
 152:hal/Landungsbruecke/tmc/WLAN.c **** 
 153:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.tx.buffer[buffers.tx.wrote] = ch;
 154:hal/Landungsbruecke/tmc/WLAN.c **** 
 155:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.tx.wrote = (buffers.tx.wrote + 1) % BUFFER_SIZE;	// Move ring buffer index
 156:hal/Landungsbruecke/tmc/WLAN.c **** 
 157:hal/Landungsbruecke/tmc/WLAN.c **** 	// enable send interrupt
 158:hal/Landungsbruecke/tmc/WLAN.c **** 	UART0_C2 |= UART_C2_TIE_MASK;
 159:hal/Landungsbruecke/tmc/WLAN.c **** }
 160:hal/Landungsbruecke/tmc/WLAN.c **** 
 161:hal/Landungsbruecke/tmc/WLAN.c **** // Wrapper for rawTx, will silently fail if we're not in data mode
 162:hal/Landungsbruecke/tmc/WLAN.c **** // todo CHECK ADD 3: Should tx be given a return type in order to report failure to send? (LH) #1
 163:hal/Landungsbruecke/tmc/WLAN.c **** static void tx(uint8_t ch)
 164:hal/Landungsbruecke/tmc/WLAN.c **** {
 165:hal/Landungsbruecke/tmc/WLAN.c **** 	if(checkReadyToSend())
 166:hal/Landungsbruecke/tmc/WLAN.c **** 		rawTx(ch);
 167:hal/Landungsbruecke/tmc/WLAN.c **** }
 168:hal/Landungsbruecke/tmc/WLAN.c **** 
 169:hal/Landungsbruecke/tmc/WLAN.c **** static uint8_t rawRx(uint8_t *ch)
 170:hal/Landungsbruecke/tmc/WLAN.c **** {
  26              		.loc 1 170 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 171:hal/Landungsbruecke/tmc/WLAN.c **** 	if(buffers.rx.read == buffers.rx.wrote)
  31              		.loc 1 171 2 view .LVU1
  32              		.loc 1 171 15 is_stmt 0 view .LVU2
  33 0000 094A     		ldr	r2, .L4
  34              		.loc 1 171 4 view .LVU3
  35 0002 D2E90331 		ldrd	r3, r1, [r2, #12]
  36 0006 8B42     		cmp	r3, r1
  37 0008 0CD0     		beq	.L3
 172:hal/Landungsbruecke/tmc/WLAN.c **** 		return 0;
 173:hal/Landungsbruecke/tmc/WLAN.c **** 
 174:hal/Landungsbruecke/tmc/WLAN.c **** 	*ch = buffers.rx.buffer[buffers.rx.read];
  38              		.loc 1 174 2 is_stmt 1 view .LVU4
  39              		.loc 1 174 25 is_stmt 0 view .LVU5
  40 000a 5169     		ldr	r1, [r2, #20]
  41 000c C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
  42              		.loc 1 174 6 view .LVU6
  43 000e 0170     		strb	r1, [r0]
 175:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.rx.read = (buffers.rx.read + 1) % BUFFER_SIZE;	// Move ring buffer index
  44              		.loc 1 175 2 is_stmt 1 view .LVU7
  45              		.loc 1 175 37 is_stmt 0 view .LVU8
  46 0010 0133     		adds	r3, r3, #1
  47              		.loc 1 175 42 view .LVU9
  48 0012 C3F30903 		ubfx	r3, r3, #0, #10
  49              		.loc 1 175 18 view .LVU10
  50 0016 D360     		str	r3, [r2, #12]
 176:hal/Landungsbruecke/tmc/WLAN.c **** 	available--;
  51              		.loc 1 176 2 is_stmt 1 view .LVU11
  52              		.loc 1 176 11 is_stmt 0 view .LVU12
  53 0018 044A     		ldr	r2, .L4+4
  54 001a 1368     		ldr	r3, [r2]
  55 001c 013B     		subs	r3, r3, #1
  56 001e 1360     		str	r3, [r2]
 177:hal/Landungsbruecke/tmc/WLAN.c **** 
 178:hal/Landungsbruecke/tmc/WLAN.c **** 	return 1;
  57              		.loc 1 178 2 is_stmt 1 view .LVU13
  58              		.loc 1 178 9 is_stmt 0 view .LVU14
  59 0020 0120     		movs	r0, #1
  60              	.LVL1:
  61              		.loc 1 178 9 view .LVU15
  62 0022 7047     		bx	lr
  63              	.LVL2:
  64              	.L3:
 172:hal/Landungsbruecke/tmc/WLAN.c **** 
  65              		.loc 1 172 10 view .LVU16
  66 0024 0020     		movs	r0, #0
  67              	.LVL3:
 179:hal/Landungsbruecke/tmc/WLAN.c **** }
  68              		.loc 1 179 1 view .LVU17
  69 0026 7047     		bx	lr
  70              	.L5:
  71              		.align	2
  72              	.L4:
  73 0028 00000000 		.word	.LANCHOR0
  74 002c 00000000 		.word	.LANCHOR1
  75              		.cfi_endproc
  76              	.LFE5:
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu softvfp
  84              	rx:
  85              	.LVL4:
  86              	.LFB6:
 180:hal/Landungsbruecke/tmc/WLAN.c **** 
 181:hal/Landungsbruecke/tmc/WLAN.c **** static uint8_t rx(uint8_t *ch)
 182:hal/Landungsbruecke/tmc/WLAN.c **** {
  87              		.loc 1 182 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 183:hal/Landungsbruecke/tmc/WLAN.c **** 	if(wlanState != WLAN_DATA_MODE)
  92              		.loc 1 183 2 view .LVU19
  93              		.loc 1 183 15 is_stmt 0 view .LVU20
  94 0030 034B     		ldr	r3, .L8
  95              		.loc 1 183 4 view .LVU21
  96 0032 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  97 0034 022B     		cmp	r3, #2
  98 0036 00D1     		bne	.L7
 184:hal/Landungsbruecke/tmc/WLAN.c **** 		return 0;
 185:hal/Landungsbruecke/tmc/WLAN.c **** 
 186:hal/Landungsbruecke/tmc/WLAN.c **** 	return rawRx(ch);
  99              		.loc 1 186 2 is_stmt 1 view .LVU22
 100              		.loc 1 186 9 is_stmt 0 view .LVU23
 101 0038 E2E7     		b	rawRx
 102              	.LVL5:
 103              	.L7:
 187:hal/Landungsbruecke/tmc/WLAN.c **** }
 104              		.loc 1 187 1 view .LVU24
 105 003a 0020     		movs	r0, #0
 106              	.LVL6:
 107              		.loc 1 187 1 view .LVU25
 108 003c 7047     		bx	lr
 109              	.L9:
 110 003e 00BF     		.align	2
 111              	.L8:
 112 0040 00000000 		.word	.LANCHOR0
 113              		.cfi_endproc
 114              	.LFE6:
 116              		.align	1
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu softvfp
 122              	bytesAvailable:
 123              	.LFB10:
 188:hal/Landungsbruecke/tmc/WLAN.c **** 
 189:hal/Landungsbruecke/tmc/WLAN.c **** // todo CHECK ADD 3: Should txN be given a return type in order to report failure to send? (LH) #2
 190:hal/Landungsbruecke/tmc/WLAN.c **** static void txN(uint8_t *str, uint8_t number)
 191:hal/Landungsbruecke/tmc/WLAN.c **** {
 192:hal/Landungsbruecke/tmc/WLAN.c **** 	for(int32_t i = 0; i < number; i++)
 193:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 194:hal/Landungsbruecke/tmc/WLAN.c **** }
 195:hal/Landungsbruecke/tmc/WLAN.c **** 
 196:hal/Landungsbruecke/tmc/WLAN.c **** static uint8_t rxN(uint8_t *str, uint8_t number)
 197:hal/Landungsbruecke/tmc/WLAN.c **** {
 198:hal/Landungsbruecke/tmc/WLAN.c **** 	if(available < number)
 199:hal/Landungsbruecke/tmc/WLAN.c **** 		return 0;
 200:hal/Landungsbruecke/tmc/WLAN.c **** 
 201:hal/Landungsbruecke/tmc/WLAN.c **** 	for(int32_t i = 0; i < number; i++)
 202:hal/Landungsbruecke/tmc/WLAN.c **** 		rx(&str[i]);
 203:hal/Landungsbruecke/tmc/WLAN.c **** 
 204:hal/Landungsbruecke/tmc/WLAN.c **** 	return 1;
 205:hal/Landungsbruecke/tmc/WLAN.c **** }
 206:hal/Landungsbruecke/tmc/WLAN.c **** 
 207:hal/Landungsbruecke/tmc/WLAN.c **** static void clearBuffers(void)
 208:hal/Landungsbruecke/tmc/WLAN.c **** {
 209:hal/Landungsbruecke/tmc/WLAN.c **** 	disable_irq(INT_UART0_RX_TX-16);
 210:hal/Landungsbruecke/tmc/WLAN.c **** 	available         = 0;
 211:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.rx.read   = 0;
 212:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.rx.wrote  = 0;
 213:hal/Landungsbruecke/tmc/WLAN.c **** 
 214:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.tx.read   = 0;
 215:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.tx.wrote  = 0;
 216:hal/Landungsbruecke/tmc/WLAN.c **** 	enable_irq(INT_UART0_RX_TX-16);
 217:hal/Landungsbruecke/tmc/WLAN.c **** }
 218:hal/Landungsbruecke/tmc/WLAN.c **** 
 219:hal/Landungsbruecke/tmc/WLAN.c **** static uint32_t bytesAvailable()
 220:hal/Landungsbruecke/tmc/WLAN.c **** {
 124              		.loc 1 220 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 221:hal/Landungsbruecke/tmc/WLAN.c **** 	return available;
 129              		.loc 1 221 2 view .LVU27
 130              		.loc 1 221 9 is_stmt 0 view .LVU28
 131 0044 014B     		ldr	r3, .L11
 132 0046 1868     		ldr	r0, [r3]
 222:hal/Landungsbruecke/tmc/WLAN.c **** }
 133              		.loc 1 222 1 view .LVU29
 134 0048 7047     		bx	lr
 135              	.L12:
 136 004a 00BF     		.align	2
 137              	.L11:
 138 004c 00000000 		.word	.LANCHOR1
 139              		.cfi_endproc
 140              	.LFE10:
 142              		.align	1
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	clearBuffers:
 149              	.LFB9:
 208:hal/Landungsbruecke/tmc/WLAN.c **** 	disable_irq(INT_UART0_RX_TX-16);
 150              		.loc 1 208 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 209:hal/Landungsbruecke/tmc/WLAN.c **** 	available         = 0;
 154              		.loc 1 209 2 view .LVU31
 208:hal/Landungsbruecke/tmc/WLAN.c **** 	disable_irq(INT_UART0_RX_TX-16);
 155              		.loc 1 208 1 is_stmt 0 view .LVU32
 156 0050 08B5     		push	{r3, lr}
 157              	.LCFI0:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
 209:hal/Landungsbruecke/tmc/WLAN.c **** 	available         = 0;
 161              		.loc 1 209 2 view .LVU33
 162 0052 2D20     		movs	r0, #45
 163 0054 FFF7FEFF 		bl	disable_irq
 164              	.LVL7:
 210:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.rx.read   = 0;
 165              		.loc 1 210 2 is_stmt 1 view .LVU34
 210:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.rx.read   = 0;
 166              		.loc 1 210 20 is_stmt 0 view .LVU35
 167 0058 064A     		ldr	r2, .L14
 168 005a 0023     		movs	r3, #0
 169 005c 1360     		str	r3, [r2]
 211:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.rx.wrote  = 0;
 170              		.loc 1 211 2 is_stmt 1 view .LVU36
 211:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.rx.wrote  = 0;
 171              		.loc 1 211 20 is_stmt 0 view .LVU37
 172 005e 064A     		ldr	r2, .L14+4
 216:hal/Landungsbruecke/tmc/WLAN.c **** }
 173              		.loc 1 216 2 view .LVU38
 174 0060 2D20     		movs	r0, #45
 212:hal/Landungsbruecke/tmc/WLAN.c **** 
 175              		.loc 1 212 20 view .LVU39
 176 0062 C2E90333 		strd	r3, r3, [r2, #12]
 214:hal/Landungsbruecke/tmc/WLAN.c **** 	buffers.tx.wrote  = 0;
 177              		.loc 1 214 2 is_stmt 1 view .LVU40
 215:hal/Landungsbruecke/tmc/WLAN.c **** 	enable_irq(INT_UART0_RX_TX-16);
 178              		.loc 1 215 20 is_stmt 0 view .LVU41
 179 0066 C2E90033 		strd	r3, r3, [r2]
 216:hal/Landungsbruecke/tmc/WLAN.c **** }
 180              		.loc 1 216 2 is_stmt 1 view .LVU42
 217:hal/Landungsbruecke/tmc/WLAN.c **** 
 181              		.loc 1 217 1 is_stmt 0 view .LVU43
 182 006a BDE80840 		pop	{r3, lr}
 183              	.LCFI1:
 184              		.cfi_restore 14
 185              		.cfi_restore 3
 186              		.cfi_def_cfa_offset 0
 216:hal/Landungsbruecke/tmc/WLAN.c **** }
 187              		.loc 1 216 2 view .LVU44
 188 006e FFF7FEBF 		b	enable_irq
 189              	.LVL8:
 190              	.L15:
 191 0072 00BF     		.align	2
 192              	.L14:
 193 0074 00000000 		.word	.LANCHOR1
 194 0078 00000000 		.word	.LANCHOR0
 195              		.cfi_endproc
 196              	.LFE9:
 198              		.align	1
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu softvfp
 204              	deInit:
 205              	.LFB1:
 103:hal/Landungsbruecke/tmc/WLAN.c **** 	SIM_SCGC4 &= ~(SIM_SCGC4_UART0_MASK);
 206              		.loc 1 103 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 104:hal/Landungsbruecke/tmc/WLAN.c **** 
 210              		.loc 1 104 2 view .LVU46
 104:hal/Landungsbruecke/tmc/WLAN.c **** 
 211              		.loc 1 104 12 is_stmt 0 view .LVU47
 212 007c 1049     		ldr	r1, .L17
 213 007e 41F23402 		movw	r2, #4148
 103:hal/Landungsbruecke/tmc/WLAN.c **** 	SIM_SCGC4 &= ~(SIM_SCGC4_UART0_MASK);
 214              		.loc 1 103 1 view .LVU48
 215 0082 10B5     		push	{r4, lr}
 216              	.LCFI2:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 4, -8
 219              		.cfi_offset 14, -4
 104:hal/Landungsbruecke/tmc/WLAN.c **** 
 220              		.loc 1 104 12 view .LVU49
 221 0084 8B58     		ldr	r3, [r1, r2]
 222 0086 23F48063 		bic	r3, r3, #1024
 223 008a 8B50     		str	r3, [r1, r2]
 106:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_TX.configuration.GPIO_Mode = GPIO_Mode_IN;
 224              		.loc 1 106 2 is_stmt 1 view .LVU50
 106:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_TX.configuration.GPIO_Mode = GPIO_Mode_IN;
 225              		.loc 1 106 5 is_stmt 0 view .LVU51
 226 008c 0D4B     		ldr	r3, .L17+4
 227 008e DC68     		ldr	r4, [r3, #12]
 106:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_TX.configuration.GPIO_Mode = GPIO_Mode_IN;
 228              		.loc 1 106 9 view .LVU52
 229 0090 6068     		ldr	r0, [r4, #4]
 106:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_TX.configuration.GPIO_Mode = GPIO_Mode_IN;
 230              		.loc 1 106 53 view .LVU53
 231 0092 0823     		movs	r3, #8
 232 0094 80F87D34 		strb	r3, [r0, #1149]
 107:hal/Landungsbruecke/tmc/WLAN.c **** 
 233              		.loc 1 107 2 is_stmt 1 view .LVU54
 107:hal/Landungsbruecke/tmc/WLAN.c **** 
 234              		.loc 1 107 53 is_stmt 0 view .LVU55
 235 0098 80F85D34 		strb	r3, [r0, #1117]
 109:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_TX);
 236              		.loc 1 109 2 is_stmt 1 view .LVU56
 109:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_TX);
 237              		.loc 1 109 17 is_stmt 0 view .LVU57
 238 009c 2368     		ldr	r3, [r4]
 109:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_TX);
 239              		.loc 1 109 2 view .LVU58
 240 009e 00F58D60 		add	r0, r0, #1128
 241 00a2 1B68     		ldr	r3, [r3]
 242 00a4 9847     		blx	r3
 243              	.LVL9:
 110:hal/Landungsbruecke/tmc/WLAN.c **** 
 244              		.loc 1 110 2 is_stmt 1 view .LVU59
 110:hal/Landungsbruecke/tmc/WLAN.c **** 
 245              		.loc 1 110 17 is_stmt 0 view .LVU60
 246 00a6 D4E90030 		ldrd	r3, r0, [r4]
 110:hal/Landungsbruecke/tmc/WLAN.c **** 
 247              		.loc 1 110 2 view .LVU61
 248 00aa 1B68     		ldr	r3, [r3]
 249 00ac 00F58960 		add	r0, r0, #1096
 250 00b0 9847     		blx	r3
 251              	.LVL10:
 112:hal/Landungsbruecke/tmc/WLAN.c **** 
 252              		.loc 1 112 2 is_stmt 1 view .LVU62
 253 00b2 2D20     		movs	r0, #45
 254 00b4 FFF7FEFF 		bl	disable_irq
 255              	.LVL11:
 114:hal/Landungsbruecke/tmc/WLAN.c **** }
 256              		.loc 1 114 2 view .LVU63
 115:hal/Landungsbruecke/tmc/WLAN.c **** 
 257              		.loc 1 115 1 is_stmt 0 view .LVU64
 258 00b8 BDE81040 		pop	{r4, lr}
 259              	.LCFI3:
 260              		.cfi_restore 14
 261              		.cfi_restore 4
 262              		.cfi_def_cfa_offset 0
 114:hal/Landungsbruecke/tmc/WLAN.c **** }
 263              		.loc 1 114 2 view .LVU65
 264 00bc C8E7     		b	clearBuffers
 265              	.LVL12:
 266              	.L18:
 267 00be 00BF     		.align	2
 268              	.L17:
 269 00c0 00700440 		.word	1074032640
 270 00c4 00000000 		.word	HAL
 271              		.cfi_endproc
 272              	.LFE1:
 274              		.align	1
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu softvfp
 280              	init:
 281              	.LFB0:
  71:hal/Landungsbruecke/tmc/WLAN.c **** 	register uint16_t ubd;
 282              		.loc 1 71 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
  72:hal/Landungsbruecke/tmc/WLAN.c **** 
 286              		.loc 1 72 2 view .LVU67
  74:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->setLow(&HAL.IOs->pins->MIXED6);
 287              		.loc 1 74 2 view .LVU68
  74:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->setLow(&HAL.IOs->pins->MIXED6);
 288              		.loc 1 74 5 is_stmt 0 view .LVU69
 289 00c8 1F4B     		ldr	r3, .L20
  71:hal/Landungsbruecke/tmc/WLAN.c **** 	register uint16_t ubd;
 290              		.loc 1 71 1 view .LVU70
 291 00ca 10B5     		push	{r4, lr}
 292              	.LCFI4:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 4, -8
 295              		.cfi_offset 14, -4
  74:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->setLow(&HAL.IOs->pins->MIXED6);
 296              		.loc 1 74 5 view .LVU71
 297 00cc DC68     		ldr	r4, [r3, #12]
  74:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->setLow(&HAL.IOs->pins->MIXED6);
 298              		.loc 1 74 17 view .LVU72
 299 00ce D4E90030 		ldrd	r3, r0, [r4]
  74:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->setLow(&HAL.IOs->pins->MIXED6);
 300              		.loc 1 74 2 view .LVU73
 301 00d2 DB68     		ldr	r3, [r3, #12]
 302 00d4 00F5F160 		add	r0, r0, #1928
 303 00d8 9847     		blx	r3
 304              	.LVL13:
  75:hal/Landungsbruecke/tmc/WLAN.c **** 
 305              		.loc 1 75 2 is_stmt 1 view .LVU74
  75:hal/Landungsbruecke/tmc/WLAN.c **** 
 306              		.loc 1 75 17 is_stmt 0 view .LVU75
 307 00da D4E90030 		ldrd	r3, r0, [r4]
  75:hal/Landungsbruecke/tmc/WLAN.c **** 
 308              		.loc 1 75 2 view .LVU76
 309 00de 9B69     		ldr	r3, [r3, #24]
 310 00e0 00F5F160 		add	r0, r0, #1928
 311 00e4 9847     		blx	r3
 312              	.LVL14:
  77:hal/Landungsbruecke/tmc/WLAN.c **** 
 313              		.loc 1 77 2 is_stmt 1 view .LVU77
  77:hal/Landungsbruecke/tmc/WLAN.c **** 
 314              		.loc 1 77 12 is_stmt 0 view .LVU78
 315 00e6 1949     		ldr	r1, .L20+4
  79:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_TX.configuration.GPIO_Mode = GPIO_Mode_AF3;
 316              		.loc 1 79 9 view .LVU79
 317 00e8 6068     		ldr	r0, [r4, #4]
  77:hal/Landungsbruecke/tmc/WLAN.c **** 
 318              		.loc 1 77 12 view .LVU80
 319 00ea 41F23402 		movw	r2, #4148
  82:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_TX);
 320              		.loc 1 82 2 view .LVU81
 321 00ee 00F58D60 		add	r0, r0, #1128
  77:hal/Landungsbruecke/tmc/WLAN.c **** 
 322              		.loc 1 77 12 view .LVU82
 323 00f2 8B58     		ldr	r3, [r1, r2]
 324 00f4 43F48063 		orr	r3, r3, #1024
 325 00f8 8B50     		str	r3, [r1, r2]
  79:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_TX.configuration.GPIO_Mode = GPIO_Mode_AF3;
 326              		.loc 1 79 2 is_stmt 1 view .LVU83
  79:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->pins->WIRELESS_TX.configuration.GPIO_Mode = GPIO_Mode_AF3;
 327              		.loc 1 79 53 is_stmt 0 view .LVU84
 328 00fa 0323     		movs	r3, #3
 329 00fc 4375     		strb	r3, [r0, #21]
  80:hal/Landungsbruecke/tmc/WLAN.c **** 
 330              		.loc 1 80 2 is_stmt 1 view .LVU85
  80:hal/Landungsbruecke/tmc/WLAN.c **** 
 331              		.loc 1 80 53 is_stmt 0 view .LVU86
 332 00fe 00F80B3C 		strb	r3, [r0, #-11]
  82:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_TX);
 333              		.loc 1 82 2 is_stmt 1 view .LVU87
  82:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_TX);
 334              		.loc 1 82 17 is_stmt 0 view .LVU88
 335 0102 2368     		ldr	r3, [r4]
  82:hal/Landungsbruecke/tmc/WLAN.c **** 	HAL.IOs->config->set(&HAL.IOs->pins->WIRELESS_TX);
 336              		.loc 1 82 2 view .LVU89
 337 0104 1B68     		ldr	r3, [r3]
 338 0106 9847     		blx	r3
 339              	.LVL15:
  83:hal/Landungsbruecke/tmc/WLAN.c **** 	/* Disable the transmitter and receiver */
 340              		.loc 1 83 2 is_stmt 1 view .LVU90
  83:hal/Landungsbruecke/tmc/WLAN.c **** 	/* Disable the transmitter and receiver */
 341              		.loc 1 83 17 is_stmt 0 view .LVU91
 342 0108 D4E90030 		ldrd	r3, r0, [r4]
  83:hal/Landungsbruecke/tmc/WLAN.c **** 	/* Disable the transmitter and receiver */
 343              		.loc 1 83 2 view .LVU92
 344 010c 1B68     		ldr	r3, [r3]
 345 010e 00F58960 		add	r0, r0, #1096
 346 0112 9847     		blx	r3
 347              	.LVL16:
  85:hal/Landungsbruecke/tmc/WLAN.c **** 
 348              		.loc 1 85 2 is_stmt 1 view .LVU93
  85:hal/Landungsbruecke/tmc/WLAN.c **** 
 349              		.loc 1 85 30 is_stmt 0 view .LVU94
 350 0114 0E4B     		ldr	r3, .L20+8
 351 0116 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 352 0118 02F0F302 		and	r2, r2, #243
 353 011c DA70     		strb	r2, [r3, #3]
  89:hal/Landungsbruecke/tmc/WLAN.c **** 
 354              		.loc 1 89 2 is_stmt 1 view .LVU95
  89:hal/Landungsbruecke/tmc/WLAN.c **** 
 355              		.loc 1 89 30 is_stmt 0 view .LVU96
 356 011e 0022     		movs	r2, #0
 357 0120 9A70     		strb	r2, [r3, #2]
  91:hal/Landungsbruecke/tmc/WLAN.c **** 
 358              		.loc 1 91 2 is_stmt 1 view .LVU97
  91:hal/Landungsbruecke/tmc/WLAN.c **** 
 359              		.loc 1 91 30 is_stmt 0 view .LVU98
 360 0122 0C4A     		ldr	r2, .L20+12
 361 0124 D16B     		ldr	r1, [r2, #60]
 362 0126 0C4A     		ldr	r2, .L20+16
 363 0128 B2FBF1F2 		udiv	r2, r2, r1
 364              	.LVL17:
  93:hal/Landungsbruecke/tmc/WLAN.c **** 	UART_BDL_REG(UART0_BASE_PTR) = (ubd & UART_BDL_SBR_MASK);
 365              		.loc 1 93 2 is_stmt 1 view .LVU99
  93:hal/Landungsbruecke/tmc/WLAN.c **** 	UART_BDL_REG(UART0_BASE_PTR) = (ubd & UART_BDL_SBR_MASK);
 366              		.loc 1 93 44 is_stmt 0 view .LVU100
 367 012c C2F30421 		ubfx	r1, r2, #8, #5
  94:hal/Landungsbruecke/tmc/WLAN.c **** 
 368              		.loc 1 94 31 view .LVU101
 369 0130 D2B2     		uxtb	r2, r2
 370              	.LVL18:
  93:hal/Landungsbruecke/tmc/WLAN.c **** 	UART_BDL_REG(UART0_BASE_PTR) = (ubd & UART_BDL_SBR_MASK);
 371              		.loc 1 93 31 view .LVU102
 372 0132 1970     		strb	r1, [r3]
  94:hal/Landungsbruecke/tmc/WLAN.c **** 
 373              		.loc 1 94 2 is_stmt 1 view .LVU103
  94:hal/Landungsbruecke/tmc/WLAN.c **** 
 374              		.loc 1 94 31 is_stmt 0 view .LVU104
 375 0134 5A70     		strb	r2, [r3, #1]
  97:hal/Landungsbruecke/tmc/WLAN.c **** 
 376              		.loc 1 97 2 is_stmt 1 view .LVU105
  97:hal/Landungsbruecke/tmc/WLAN.c **** 
 377              		.loc 1 97 30 is_stmt 0 view .LVU106
 378 0136 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 379 0138 42F02C02 		orr	r2, r2, #44
 380 013c DA70     		strb	r2, [r3, #3]
  99:hal/Landungsbruecke/tmc/WLAN.c **** }
 381              		.loc 1 99 2 is_stmt 1 view .LVU107
 100:hal/Landungsbruecke/tmc/WLAN.c **** 
 382              		.loc 1 100 1 is_stmt 0 view .LVU108
 383 013e BDE81040 		pop	{r4, lr}
 384              	.LCFI5:
 385              		.cfi_restore 14
 386              		.cfi_restore 4
 387              		.cfi_def_cfa_offset 0
  99:hal/Landungsbruecke/tmc/WLAN.c **** }
 388              		.loc 1 99 2 view .LVU109
 389 0142 2D20     		movs	r0, #45
 390 0144 FFF7FEBF 		b	enable_irq
 391              	.LVL19:
 392              	.L21:
  99:hal/Landungsbruecke/tmc/WLAN.c **** }
 393              		.loc 1 99 2 view .LVU110
 394              		.align	2
 395              	.L20:
 396 0148 00000000 		.word	HAL
 397 014c 00700440 		.word	1074032640
 398 0150 00A00640 		.word	1074176000
 399 0154 00000000 		.word	.LANCHOR0
 400 0158 C0C62D00 		.word	3000000
 401              		.cfi_endproc
 402              	.LFE0:
 404              		.align	1
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu softvfp
 410              	rawTx:
 411              	.LVL20:
 412              	.LFB3:
 149:hal/Landungsbruecke/tmc/WLAN.c **** 	if(wlanState == WLAN_INIT_CMD_MODE)
 413              		.loc 1 149 1 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 150:hal/Landungsbruecke/tmc/WLAN.c **** 		return;
 418              		.loc 1 150 2 view .LVU112
 150:hal/Landungsbruecke/tmc/WLAN.c **** 		return;
 419              		.loc 1 150 15 is_stmt 0 view .LVU113
 420 015c 074A     		ldr	r2, .L27
 150:hal/Landungsbruecke/tmc/WLAN.c **** 		return;
 421              		.loc 1 150 4 view .LVU114
 422 015e 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 423 0160 5BB1     		cbz	r3, .L22
 424              	.LVL21:
 425              	.LBB5:
 426              	.LBI5:
 148:hal/Landungsbruecke/tmc/WLAN.c **** {
 427              		.loc 1 148 13 is_stmt 1 view .LVU115
 428              	.LBB6:
 153:hal/Landungsbruecke/tmc/WLAN.c **** 
 429              		.loc 1 153 2 view .LVU116
 153:hal/Landungsbruecke/tmc/WLAN.c **** 
 430              		.loc 1 153 19 is_stmt 0 view .LVU117
 431 0162 D2E90131 		ldrd	r3, r1, [r2, #4]
 153:hal/Landungsbruecke/tmc/WLAN.c **** 
 432              		.loc 1 153 38 view .LVU118
 433 0166 C854     		strb	r0, [r1, r3]
 155:hal/Landungsbruecke/tmc/WLAN.c **** 
 434              		.loc 1 155 2 is_stmt 1 view .LVU119
 155:hal/Landungsbruecke/tmc/WLAN.c **** 
 435              		.loc 1 155 39 is_stmt 0 view .LVU120
 436 0168 0133     		adds	r3, r3, #1
 155:hal/Landungsbruecke/tmc/WLAN.c **** 
 437              		.loc 1 155 44 view .LVU121
 438 016a C3F30903 		ubfx	r3, r3, #0, #10
 155:hal/Landungsbruecke/tmc/WLAN.c **** 
 439              		.loc 1 155 19 view .LVU122
 440 016e 5360     		str	r3, [r2, #4]
 158:hal/Landungsbruecke/tmc/WLAN.c **** }
 441              		.loc 1 158 2 is_stmt 1 view .LVU123
 158:hal/Landungsbruecke/tmc/WLAN.c **** }
 442              		.loc 1 158 11 is_stmt 0 view .LVU124
 443 0170 034A     		ldr	r2, .L27+4
 444 0172 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 445 0174 43F08003 		orr	r3, r3, #128
 446 0178 D370     		strb	r3, [r2, #3]
 447              	.LVL22:
 448              	.L22:
 158:hal/Landungsbruecke/tmc/WLAN.c **** }
 449              		.loc 1 158 11 view .LVU125
 450              	.LBE6:
 451              	.LBE5:
 159:hal/Landungsbruecke/tmc/WLAN.c **** 
 452              		.loc 1 159 1 view .LVU126
 453 017a 7047     		bx	lr
 454              	.L28:
 455              		.align	2
 456              	.L27:
 457 017c 00000000 		.word	.LANCHOR0
 458 0180 00A00640 		.word	1074176000
 459              		.cfi_endproc
 460              	.LFE3:
 462              		.align	1
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu softvfp
 468              	rxN:
 469              	.LVL23:
 470              	.LFB8:
 197:hal/Landungsbruecke/tmc/WLAN.c **** 	if(available < number)
 471              		.loc 1 197 1 is_stmt 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 198:hal/Landungsbruecke/tmc/WLAN.c **** 		return 0;
 475              		.loc 1 198 2 view .LVU128
 198:hal/Landungsbruecke/tmc/WLAN.c **** 		return 0;
 476              		.loc 1 198 15 is_stmt 0 view .LVU129
 477 0184 094B     		ldr	r3, .L34
 478 0186 1B68     		ldr	r3, [r3]
 198:hal/Landungsbruecke/tmc/WLAN.c **** 		return 0;
 479              		.loc 1 198 4 view .LVU130
 480 0188 9942     		cmp	r1, r3
 197:hal/Landungsbruecke/tmc/WLAN.c **** 	if(available < number)
 481              		.loc 1 197 1 view .LVU131
 482 018a 70B5     		push	{r4, r5, r6, lr}
 483              	.LCFI6:
 484              		.cfi_def_cfa_offset 16
 485              		.cfi_offset 4, -16
 486              		.cfi_offset 5, -12
 487              		.cfi_offset 6, -8
 488              		.cfi_offset 14, -4
 197:hal/Landungsbruecke/tmc/WLAN.c **** 	if(available < number)
 489              		.loc 1 197 1 view .LVU132
 490 018c 0646     		mov	r6, r0
 491 018e 0C46     		mov	r4, r1
 198:hal/Landungsbruecke/tmc/WLAN.c **** 		return 0;
 492              		.loc 1 198 4 view .LVU133
 493 0190 09D8     		bhi	.L33
 494              	.LBB11:
 495              	.LBB12:
 201:hal/Landungsbruecke/tmc/WLAN.c **** 		rx(&str[i]);
 496              		.loc 1 201 14 view .LVU134
 497 0192 0025     		movs	r5, #0
 498              	.LVL24:
 499              	.L31:
 201:hal/Landungsbruecke/tmc/WLAN.c **** 		rx(&str[i]);
 500              		.loc 1 201 21 is_stmt 1 view .LVU135
 201:hal/Landungsbruecke/tmc/WLAN.c **** 		rx(&str[i]);
 501              		.loc 1 201 2 is_stmt 0 view .LVU136
 502 0194 A542     		cmp	r5, r4
 503 0196 01DB     		blt	.L32
 504 0198 0120     		movs	r0, #1
 505              	.LVL25:
 506              	.L30:
 201:hal/Landungsbruecke/tmc/WLAN.c **** 		rx(&str[i]);
 507              		.loc 1 201 2 view .LVU137
 508              	.LBE12:
 509              	.LBE11:
 205:hal/Landungsbruecke/tmc/WLAN.c **** 
 510              		.loc 1 205 1 view .LVU138
 511 019a 70BD     		pop	{r4, r5, r6, pc}
 512              	.LVL26:
 513              	.L32:
 514              	.LBB14:
 515              	.LBB13:
 202:hal/Landungsbruecke/tmc/WLAN.c **** 
 516              		.loc 1 202 3 is_stmt 1 view .LVU139
 517 019c 7019     		adds	r0, r6, r5
 518 019e FFF747FF 		bl	rx
 519              	.LVL27:
 201:hal/Landungsbruecke/tmc/WLAN.c **** 		rx(&str[i]);
 520              		.loc 1 201 33 view .LVU140
 201:hal/Landungsbruecke/tmc/WLAN.c **** 		rx(&str[i]);
 521              		.loc 1 201 34 is_stmt 0 view .LVU141
 522 01a2 0135     		adds	r5, r5, #1
 523              	.LVL28:
 201:hal/Landungsbruecke/tmc/WLAN.c **** 		rx(&str[i]);
 524              		.loc 1 201 34 view .LVU142
 525 01a4 F6E7     		b	.L31
 526              	.LVL29:
 527              	.L33:
 201:hal/Landungsbruecke/tmc/WLAN.c **** 		rx(&str[i]);
 528              		.loc 1 201 34 view .LVU143
 529              	.LBE13:
 530              	.LBE14:
 199:hal/Landungsbruecke/tmc/WLAN.c **** 
 531              		.loc 1 199 10 view .LVU144
 532 01a6 0020     		movs	r0, #0
 533              	.LVL30:
 199:hal/Landungsbruecke/tmc/WLAN.c **** 
 534              		.loc 1 199 10 view .LVU145
 535 01a8 F7E7     		b	.L30
 536              	.L35:
 537 01aa 00BF     		.align	2
 538              	.L34:
 539 01ac 00000000 		.word	.LANCHOR1
 540              		.cfi_endproc
 541              	.LFE8:
 543              		.align	1
 544              		.global	UART0_RX_TX_IRQHandler_WLAN
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu softvfp
 550              	UART0_RX_TX_IRQHandler_WLAN:
 551              	.LFB2:
 118:hal/Landungsbruecke/tmc/WLAN.c **** 	uint32_t status = UART0_S1;
 552              		.loc 1 118 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 119:hal/Landungsbruecke/tmc/WLAN.c **** 
 556              		.loc 1 119 2 view .LVU147
 118:hal/Landungsbruecke/tmc/WLAN.c **** 	uint32_t status = UART0_S1;
 557              		.loc 1 118 1 is_stmt 0 view .LVU148
 558 01b0 30B5     		push	{r4, r5, lr}
 559              	.LCFI7:
 560              		.cfi_def_cfa_offset 12
 561              		.cfi_offset 4, -12
 562              		.cfi_offset 5, -8
 563              		.cfi_offset 14, -4
 119:hal/Landungsbruecke/tmc/WLAN.c **** 
 564              		.loc 1 119 20 view .LVU149
 565 01b2 1A4A     		ldr	r2, .L44
 566 01b4 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 121:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 567              		.loc 1 121 4 view .LVU150
 568 01b6 9906     		lsls	r1, r3, #26
 119:hal/Landungsbruecke/tmc/WLAN.c **** 
 569              		.loc 1 119 20 view .LVU151
 570 01b8 DCB2     		uxtb	r4, r3
 571              	.LVL31:
 121:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 572              		.loc 1 121 2 is_stmt 1 view .LVU152
 121:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 573              		.loc 1 121 4 is_stmt 0 view .LVU153
 574 01ba 14D5     		bpl	.L37
 123:hal/Landungsbruecke/tmc/WLAN.c **** 		buffers.rx.wrote = (buffers.rx.wrote + 1) % BUFFER_SIZE;
 575              		.loc 1 123 3 is_stmt 1 view .LVU154
 123:hal/Landungsbruecke/tmc/WLAN.c **** 		buffers.rx.wrote = (buffers.rx.wrote + 1) % BUFFER_SIZE;
 576              		.loc 1 123 31 is_stmt 0 view .LVU155
 577 01bc 1849     		ldr	r1, .L44+4
 123:hal/Landungsbruecke/tmc/WLAN.c **** 		buffers.rx.wrote = (buffers.rx.wrote + 1) % BUFFER_SIZE;
 578              		.loc 1 123 41 view .LVU156
 579 01be D079     		ldrb	r0, [r2, #7]	@ zero_extendqisi2
 123:hal/Landungsbruecke/tmc/WLAN.c **** 		buffers.rx.wrote = (buffers.rx.wrote + 1) % BUFFER_SIZE;
 580              		.loc 1 123 20 view .LVU157
 581 01c0 D1E90435 		ldrd	r3, r5, [r1, #16]
 123:hal/Landungsbruecke/tmc/WLAN.c **** 		buffers.rx.wrote = (buffers.rx.wrote + 1) % BUFFER_SIZE;
 582              		.loc 1 123 41 view .LVU158
 583 01c4 C0B2     		uxtb	r0, r0
 123:hal/Landungsbruecke/tmc/WLAN.c **** 		buffers.rx.wrote = (buffers.rx.wrote + 1) % BUFFER_SIZE;
 584              		.loc 1 123 39 view .LVU159
 585 01c6 E854     		strb	r0, [r5, r3]
 124:hal/Landungsbruecke/tmc/WLAN.c **** 		available++;
 586              		.loc 1 124 3 is_stmt 1 view .LVU160
 124:hal/Landungsbruecke/tmc/WLAN.c **** 		available++;
 587              		.loc 1 124 40 is_stmt 0 view .LVU161
 588 01c8 0133     		adds	r3, r3, #1
 124:hal/Landungsbruecke/tmc/WLAN.c **** 		available++;
 589              		.loc 1 124 45 view .LVU162
 590 01ca C3F30903 		ubfx	r3, r3, #0, #10
 124:hal/Landungsbruecke/tmc/WLAN.c **** 		available++;
 591              		.loc 1 124 20 view .LVU163
 592 01ce 0B61     		str	r3, [r1, #16]
 125:hal/Landungsbruecke/tmc/WLAN.c **** 
 593              		.loc 1 125 3 is_stmt 1 view .LVU164
 125:hal/Landungsbruecke/tmc/WLAN.c **** 
 594              		.loc 1 125 12 is_stmt 0 view .LVU165
 595 01d0 1449     		ldr	r1, .L44+8
 596 01d2 0B68     		ldr	r3, [r1]
 597 01d4 0133     		adds	r3, r3, #1
 598 01d6 0B60     		str	r3, [r1]
 128:hal/Landungsbruecke/tmc/WLAN.c **** 		UART0_S1 &= ~(UART_S1_RDRF_MASK); // Zur√ºcksetzen InterruptFlag
 599              		.loc 1 128 3 is_stmt 1 view .LVU166
 128:hal/Landungsbruecke/tmc/WLAN.c **** 		UART0_S1 &= ~(UART_S1_RDRF_MASK); // Zur√ºcksetzen InterruptFlag
 600              		.loc 1 128 22 is_stmt 0 view .LVU167
 601 01d8 134B     		ldr	r3, .L44+12
 602 01da 0521     		movs	r1, #5
 603 01dc 1960     		str	r1, [r3]
 129:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 604              		.loc 1 129 3 is_stmt 1 view .LVU168
 129:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 605              		.loc 1 129 12 is_stmt 0 view .LVU169
 606 01de 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 607 01e0 03F0DF03 		and	r3, r3, #223
 608 01e4 1371     		strb	r3, [r2, #4]
 609              	.L37:
 132:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 610              		.loc 1 132 2 is_stmt 1 view .LVU170
 132:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 611              		.loc 1 132 4 is_stmt 0 view .LVU171
 612 01e6 2306     		lsls	r3, r4, #24
 613 01e8 12D5     		bpl	.L36
 134:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 614              		.loc 1 134 3 is_stmt 1 view .LVU172
 134:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 615              		.loc 1 134 16 is_stmt 0 view .LVU173
 616 01ea 0D4A     		ldr	r2, .L44+4
 134:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 617              		.loc 1 134 5 view .LVU174
 618 01ec D2E90031 		ldrd	r3, r1, [r2]
 619 01f0 8B42     		cmp	r3, r1
 620 01f2 0A49     		ldr	r1, .L44
 621 01f4 0DD0     		beq	.L39
 136:hal/Landungsbruecke/tmc/WLAN.c **** 			buffers.tx.read = (buffers.tx.read + 1) % BUFFER_SIZE;
 622              		.loc 1 136 4 is_stmt 1 view .LVU175
 136:hal/Landungsbruecke/tmc/WLAN.c **** 			buffers.tx.read = (buffers.tx.read + 1) % BUFFER_SIZE;
 623              		.loc 1 136 31 is_stmt 0 view .LVU176
 624 01f6 9068     		ldr	r0, [r2, #8]
 625 01f8 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 137:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 626              		.loc 1 137 39 view .LVU177
 627 01fa 0133     		adds	r3, r3, #1
 136:hal/Landungsbruecke/tmc/WLAN.c **** 			buffers.tx.read = (buffers.tx.read + 1) % BUFFER_SIZE;
 628              		.loc 1 136 31 view .LVU178
 629 01fc C0B2     		uxtb	r0, r0
 137:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 630              		.loc 1 137 44 view .LVU179
 631 01fe C3F30903 		ubfx	r3, r3, #0, #10
 136:hal/Landungsbruecke/tmc/WLAN.c **** 			buffers.tx.read = (buffers.tx.read + 1) % BUFFER_SIZE;
 632              		.loc 1 136 12 view .LVU180
 633 0202 C871     		strb	r0, [r1, #7]
 137:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 634              		.loc 1 137 4 is_stmt 1 view .LVU181
 137:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 635              		.loc 1 137 20 is_stmt 0 view .LVU182
 636 0204 1360     		str	r3, [r2]
 637              	.L40:
 143:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 638              		.loc 1 143 3 is_stmt 1 view .LVU183
 143:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 639              		.loc 1 143 12 is_stmt 0 view .LVU184
 640 0206 054A     		ldr	r2, .L44
 641 0208 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 642 020a 03F07F03 		and	r3, r3, #127
 643 020e 1371     		strb	r3, [r2, #4]
 644              	.L36:
 145:hal/Landungsbruecke/tmc/WLAN.c **** 
 645              		.loc 1 145 1 view .LVU185
 646 0210 30BD     		pop	{r4, r5, pc}
 647              	.LVL32:
 648              	.L39:
 141:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 649              		.loc 1 141 4 is_stmt 1 view .LVU186
 141:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 650              		.loc 1 141 13 is_stmt 0 view .LVU187
 651 0212 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 652 0214 03F07F03 		and	r3, r3, #127
 653 0218 CB70     		strb	r3, [r1, #3]
 654 021a F4E7     		b	.L40
 655              	.L45:
 656              		.align	2
 657              	.L44:
 658 021c 00A00640 		.word	1074176000
 659 0220 00000000 		.word	.LANCHOR0
 660 0224 00000000 		.word	.LANCHOR1
 661 0228 00000000 		.word	UART0_TimeoutTimer
 662              		.cfi_endproc
 663              	.LFE2:
 665              		.align	1
 666              		.global	enableWLANCommandMode
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu softvfp
 672              	enableWLANCommandMode:
 673              	.LFB12:
 223:hal/Landungsbruecke/tmc/WLAN.c **** 
 224:hal/Landungsbruecke/tmc/WLAN.c **** uint32_t checkReadyToSend()
 225:hal/Landungsbruecke/tmc/WLAN.c **** {
 226:hal/Landungsbruecke/tmc/WLAN.c **** 	if(checkCmdModeEnabled())
 227:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 228:hal/Landungsbruecke/tmc/WLAN.c **** 		return false;
 229:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 230:hal/Landungsbruecke/tmc/WLAN.c **** 	else
 231:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 232:hal/Landungsbruecke/tmc/WLAN.c **** 		return (wlanState == WLAN_INIT_CMD_MODE)? false:true;
 233:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 234:hal/Landungsbruecke/tmc/WLAN.c **** }
 235:hal/Landungsbruecke/tmc/WLAN.c **** 
 236:hal/Landungsbruecke/tmc/WLAN.c **** void enableWLANCommandMode()
 237:hal/Landungsbruecke/tmc/WLAN.c **** {	/* To enable command mode, the escape character (default: $) needs to be sent 3 times.
 674              		.loc 1 237 1 is_stmt 1 view -0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 238:hal/Landungsbruecke/tmc/WLAN.c **** 	 * Additionally, both before and after that sequence there should be 250ms without data sent to th
 239:hal/Landungsbruecke/tmc/WLAN.c **** 	 * Since the configuration mode is supposed to be used as a simple testing tool,
 240:hal/Landungsbruecke/tmc/WLAN.c **** 	 * there is no check for the time span before the write. If the switching fails due to that,
 241:hal/Landungsbruecke/tmc/WLAN.c **** 	 * an error will be returned upon attempted command execution, just try to reenter command mode th
 242:hal/Landungsbruecke/tmc/WLAN.c **** 	 */
 243:hal/Landungsbruecke/tmc/WLAN.c **** 	wlanState = WLAN_CMD_MODE; // Block external write sources
 678              		.loc 1 243 2 view .LVU189
 237:hal/Landungsbruecke/tmc/WLAN.c **** 	 * Additionally, both before and after that sequence there should be 250ms without data sent to th
 679              		.loc 1 237 1 is_stmt 0 view .LVU190
 680 022c 10B5     		push	{r4, lr}
 681              	.LCFI8:
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 4, -8
 684              		.cfi_offset 14, -4
 685              		.loc 1 243 12 view .LVU191
 686 022e 0A4C     		ldr	r4, .L47
 687 0230 0123     		movs	r3, #1
 688 0232 2376     		strb	r3, [r4, #24]
 244:hal/Landungsbruecke/tmc/WLAN.c **** 
 245:hal/Landungsbruecke/tmc/WLAN.c **** 	clearBuffers();
 689              		.loc 1 245 2 is_stmt 1 view .LVU192
 690 0234 FFF70CFF 		bl	clearBuffers
 691              	.LVL33:
 246:hal/Landungsbruecke/tmc/WLAN.c **** 	rawTx('$'); // txN doesn't work, as WLAN_CMD_MODE prevents tx (which txN calls) from writing to th
 692              		.loc 1 246 2 view .LVU193
 693 0238 2420     		movs	r0, #36
 694 023a FFF78FFF 		bl	rawTx
 695              	.LVL34:
 247:hal/Landungsbruecke/tmc/WLAN.c **** 	rawTx('$');
 696              		.loc 1 247 2 view .LVU194
 697 023e 2420     		movs	r0, #36
 698 0240 FFF78CFF 		bl	rawTx
 699              	.LVL35:
 248:hal/Landungsbruecke/tmc/WLAN.c **** 	rawTx('$');
 700              		.loc 1 248 2 view .LVU195
 701 0244 2420     		movs	r0, #36
 702 0246 FFF789FF 		bl	rawTx
 703              	.LVL36:
 249:hal/Landungsbruecke/tmc/WLAN.c **** 	wlanState = WLAN_INIT_CMD_MODE; // Block all writes
 704              		.loc 1 249 2 view .LVU196
 705              		.loc 1 249 12 is_stmt 0 view .LVU197
 706 024a 0023     		movs	r3, #0
 707 024c 2376     		strb	r3, [r4, #24]
 250:hal/Landungsbruecke/tmc/WLAN.c **** 	cmdEnabledTime = systick_getTick();
 708              		.loc 1 250 2 is_stmt 1 view .LVU198
 709              		.loc 1 250 19 is_stmt 0 view .LVU199
 710 024e FFF7FEFF 		bl	systick_getTick
 711              	.LVL37:
 712              		.loc 1 250 17 view .LVU200
 713 0252 024B     		ldr	r3, .L47+4
 714 0254 5860     		str	r0, [r3, #4]
 251:hal/Landungsbruecke/tmc/WLAN.c **** }
 715              		.loc 1 251 1 view .LVU201
 716 0256 10BD     		pop	{r4, pc}
 717              	.L48:
 718              		.align	2
 719              	.L47:
 720 0258 00000000 		.word	.LANCHOR0
 721 025c 00000000 		.word	.LANCHOR1
 722              		.cfi_endproc
 723              	.LFE12:
 725              		.section	.rodata.str1.1,"aMS",%progbits,1
 726              	.LC0:
 727 0000 434D4400 		.ascii	"CMD\000"
 728              		.text
 729              		.align	1
 730              		.global	checkCmdModeEnabled
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 734              		.fpu softvfp
 736              	checkCmdModeEnabled:
 737              	.LFB13:
 252:hal/Landungsbruecke/tmc/WLAN.c **** 
 253:hal/Landungsbruecke/tmc/WLAN.c **** uint32_t checkCmdModeEnabled()
 254:hal/Landungsbruecke/tmc/WLAN.c **** {
 738              		.loc 1 254 1 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 8
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 255:hal/Landungsbruecke/tmc/WLAN.c **** 	if(wlanState == WLAN_CMD_MODE)
 742              		.loc 1 255 2 view .LVU203
 254:hal/Landungsbruecke/tmc/WLAN.c **** 	if(wlanState == WLAN_CMD_MODE)
 743              		.loc 1 254 1 is_stmt 0 view .LVU204
 744 0260 37B5     		push	{r0, r1, r2, r4, r5, lr}
 745              	.LCFI9:
 746              		.cfi_def_cfa_offset 24
 747              		.cfi_offset 4, -12
 748              		.cfi_offset 5, -8
 749              		.cfi_offset 14, -4
 750              		.loc 1 255 15 view .LVU205
 751 0262 114C     		ldr	r4, .L57
 752 0264 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 753              		.loc 1 255 4 view .LVU206
 754 0266 0128     		cmp	r0, #1
 755 0268 2546     		mov	r5, r4
 756 026a 11D0     		beq	.L49
 256:hal/Landungsbruecke/tmc/WLAN.c **** 		return true;
 257:hal/Landungsbruecke/tmc/WLAN.c **** 	else if(wlanState == WLAN_DATA_MODE)
 757              		.loc 1 257 7 is_stmt 1 view .LVU207
 758              		.loc 1 257 9 is_stmt 0 view .LVU208
 759 026c 0228     		cmp	r0, #2
 760 026e 01D1     		bne	.L51
 761              	.L56:
 258:hal/Landungsbruecke/tmc/WLAN.c **** 		return false;
 259:hal/Landungsbruecke/tmc/WLAN.c **** 
 260:hal/Landungsbruecke/tmc/WLAN.c **** 	uint8_t reply[4] = { 0 };	// expected reply: {'C','M','D'}, we're appending \0 so we have a NULL-t
 261:hal/Landungsbruecke/tmc/WLAN.c **** 	if(rxN(reply, 3))
 262:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 263:hal/Landungsbruecke/tmc/WLAN.c **** 		if(strcmp((const char *)reply, "CMD") == 0)
 264:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 265:hal/Landungsbruecke/tmc/WLAN.c **** 			wlanState = WLAN_CMD_MODE;
 266:hal/Landungsbruecke/tmc/WLAN.c **** 			return true;
 267:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 268:hal/Landungsbruecke/tmc/WLAN.c **** 		else
 269:hal/Landungsbruecke/tmc/WLAN.c **** 		{	// Unexpected answer - going back to data mode
 270:hal/Landungsbruecke/tmc/WLAN.c **** 			wlanState = WLAN_DATA_MODE;
 271:hal/Landungsbruecke/tmc/WLAN.c **** 			return false;
 762              		.loc 1 271 4 is_stmt 1 view .LVU209
 763              		.loc 1 271 11 is_stmt 0 view .LVU210
 764 0270 0020     		movs	r0, #0
 765 0272 0DE0     		b	.L49
 766              	.L51:
 260:hal/Landungsbruecke/tmc/WLAN.c **** 	if(rxN(reply, 3))
 767              		.loc 1 260 2 is_stmt 1 view .LVU211
 260:hal/Landungsbruecke/tmc/WLAN.c **** 	if(rxN(reply, 3))
 768              		.loc 1 260 10 is_stmt 0 view .LVU212
 769 0274 0023     		movs	r3, #0
 261:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 770              		.loc 1 261 5 view .LVU213
 771 0276 0321     		movs	r1, #3
 772 0278 01A8     		add	r0, sp, #4
 260:hal/Landungsbruecke/tmc/WLAN.c **** 	if(rxN(reply, 3))
 773              		.loc 1 260 10 view .LVU214
 774 027a 0193     		str	r3, [sp, #4]
 261:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 775              		.loc 1 261 2 is_stmt 1 view .LVU215
 261:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 776              		.loc 1 261 5 is_stmt 0 view .LVU216
 777 027c FFF782FF 		bl	rxN
 778              	.LVL38:
 261:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 779              		.loc 1 261 4 view .LVU217
 780 0280 40B1     		cbz	r0, .L52
 263:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 781              		.loc 1 263 3 is_stmt 1 view .LVU218
 263:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 782              		.loc 1 263 6 is_stmt 0 view .LVU219
 783 0282 0A49     		ldr	r1, .L57+4
 784 0284 01A8     		add	r0, sp, #4
 785 0286 FFF7FEFF 		bl	strcmp
 786              	.LVL39:
 263:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 787              		.loc 1 263 5 view .LVU220
 788 028a 50B9     		cbnz	r0, .L53
 265:hal/Landungsbruecke/tmc/WLAN.c **** 			return true;
 789              		.loc 1 265 4 is_stmt 1 view .LVU221
 265:hal/Landungsbruecke/tmc/WLAN.c **** 			return true;
 790              		.loc 1 265 14 is_stmt 0 view .LVU222
 791 028c 0120     		movs	r0, #1
 792 028e 2076     		strb	r0, [r4, #24]
 266:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 793              		.loc 1 266 4 is_stmt 1 view .LVU223
 794              	.L49:
 272:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 273:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 274:hal/Landungsbruecke/tmc/WLAN.c **** 	else
 275:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 276:hal/Landungsbruecke/tmc/WLAN.c **** 		if(timeSince(cmdEnabledTime) > 350)	// 250 ms from chip spec + 100ms, just to be safe
 277:hal/Landungsbruecke/tmc/WLAN.c **** 		{	// Too much time passed since attempted cmd mode switching happened - assuming it failed
 278:hal/Landungsbruecke/tmc/WLAN.c **** 			wlanState = WLAN_DATA_MODE;
 279:hal/Landungsbruecke/tmc/WLAN.c **** 			return false;
 280:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 281:hal/Landungsbruecke/tmc/WLAN.c **** 		else
 282:hal/Landungsbruecke/tmc/WLAN.c **** 		{	// Not enough time passed, we're not in command mode yet but we're still giving the chip time
 283:hal/Landungsbruecke/tmc/WLAN.c **** 			return false;
 284:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 285:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 286:hal/Landungsbruecke/tmc/WLAN.c **** }
 795              		.loc 1 286 1 is_stmt 0 view .LVU224
 796 0290 03B0     		add	sp, sp, #12
 797              	.LCFI10:
 798              		.cfi_remember_state
 799              		.cfi_def_cfa_offset 12
 800              		@ sp needed
 801 0292 30BD     		pop	{r4, r5, pc}
 802              	.L52:
 803              	.LCFI11:
 804              		.cfi_restore_state
 805              	.LBB17:
 806              	.LBI17:
 253:hal/Landungsbruecke/tmc/WLAN.c **** {
 807              		.loc 1 253 10 is_stmt 1 view .LVU225
 808              	.LBB18:
 276:hal/Landungsbruecke/tmc/WLAN.c **** 		{	// Too much time passed since attempted cmd mode switching happened - assuming it failed
 809              		.loc 1 276 3 view .LVU226
 276:hal/Landungsbruecke/tmc/WLAN.c **** 		{	// Too much time passed since attempted cmd mode switching happened - assuming it failed
 810              		.loc 1 276 6 is_stmt 0 view .LVU227
 811 0294 064B     		ldr	r3, .L57+8
 812 0296 5868     		ldr	r0, [r3, #4]
 813 0298 FFF7FEFF 		bl	timeSince
 814              	.LVL40:
 276:hal/Landungsbruecke/tmc/WLAN.c **** 		{	// Too much time passed since attempted cmd mode switching happened - assuming it failed
 815              		.loc 1 276 5 view .LVU228
 816 029c B0F5AF7F 		cmp	r0, #350
 817 02a0 E6D9     		bls	.L56
 818              	.L53:
 819              	.LBE18:
 820              	.LBE17:
 270:hal/Landungsbruecke/tmc/WLAN.c **** 			return false;
 821              		.loc 1 270 4 is_stmt 1 view .LVU229
 270:hal/Landungsbruecke/tmc/WLAN.c **** 			return false;
 822              		.loc 1 270 14 is_stmt 0 view .LVU230
 823 02a2 0223     		movs	r3, #2
 824 02a4 2B76     		strb	r3, [r5, #24]
 825 02a6 E3E7     		b	.L56
 826              	.L58:
 827              		.align	2
 828              	.L57:
 829 02a8 00000000 		.word	.LANCHOR0
 830 02ac 00000000 		.word	.LC0
 831 02b0 00000000 		.word	.LANCHOR1
 832              		.cfi_endproc
 833              	.LFE13:
 835              		.align	1
 836              		.global	checkReadyToSend
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu softvfp
 842              	checkReadyToSend:
 843              	.LFB11:
 225:hal/Landungsbruecke/tmc/WLAN.c **** 	if(checkCmdModeEnabled())
 844              		.loc 1 225 1 is_stmt 1 view -0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 226:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 848              		.loc 1 226 2 view .LVU232
 225:hal/Landungsbruecke/tmc/WLAN.c **** 	if(checkCmdModeEnabled())
 849              		.loc 1 225 1 is_stmt 0 view .LVU233
 850 02b4 08B5     		push	{r3, lr}
 851              	.LCFI12:
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 3, -8
 854              		.cfi_offset 14, -4
 226:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 855              		.loc 1 226 5 view .LVU234
 856 02b6 FFF7FEFF 		bl	checkCmdModeEnabled
 857              	.LVL41:
 226:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 858              		.loc 1 226 4 view .LVU235
 859 02ba 28B9     		cbnz	r0, .L61
 232:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 860              		.loc 1 232 3 is_stmt 1 view .LVU236
 232:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 861              		.loc 1 232 50 is_stmt 0 view .LVU237
 862 02bc 034B     		ldr	r3, .L62
 863 02be 187E     		ldrb	r0, [r3, #24]	@ zero_extendqisi2
 864 02c0 0038     		subs	r0, r0, #0
 865 02c2 18BF     		it	ne
 866 02c4 0120     		movne	r0, #1
 867              	.L59:
 234:hal/Landungsbruecke/tmc/WLAN.c **** 
 868              		.loc 1 234 1 view .LVU238
 869 02c6 08BD     		pop	{r3, pc}
 870              	.L61:
 228:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 871              		.loc 1 228 10 view .LVU239
 872 02c8 0020     		movs	r0, #0
 873 02ca FCE7     		b	.L59
 874              	.L63:
 875              		.align	2
 876              	.L62:
 877 02cc 00000000 		.word	.LANCHOR0
 878              		.cfi_endproc
 879              	.LFE11:
 881              		.align	1
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 885              		.fpu softvfp
 887              	tx:
 888              	.LVL42:
 889              	.LFB4:
 164:hal/Landungsbruecke/tmc/WLAN.c **** 	if(checkReadyToSend())
 890              		.loc 1 164 1 is_stmt 1 view -0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 165:hal/Landungsbruecke/tmc/WLAN.c **** 		rawTx(ch);
 894              		.loc 1 165 2 view .LVU241
 164:hal/Landungsbruecke/tmc/WLAN.c **** 	if(checkReadyToSend())
 895              		.loc 1 164 1 is_stmt 0 view .LVU242
 896 02d0 10B5     		push	{r4, lr}
 897              	.LCFI13:
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
 164:hal/Landungsbruecke/tmc/WLAN.c **** 	if(checkReadyToSend())
 901              		.loc 1 164 1 view .LVU243
 902 02d2 0446     		mov	r4, r0
 165:hal/Landungsbruecke/tmc/WLAN.c **** 		rawTx(ch);
 903              		.loc 1 165 5 view .LVU244
 904 02d4 FFF7FEFF 		bl	checkReadyToSend
 905              	.LVL43:
 165:hal/Landungsbruecke/tmc/WLAN.c **** 		rawTx(ch);
 906              		.loc 1 165 4 view .LVU245
 907 02d8 18B1     		cbz	r0, .L64
 166:hal/Landungsbruecke/tmc/WLAN.c **** }
 908              		.loc 1 166 3 is_stmt 1 view .LVU246
 909 02da 2046     		mov	r0, r4
 167:hal/Landungsbruecke/tmc/WLAN.c **** 
 910              		.loc 1 167 1 is_stmt 0 view .LVU247
 911 02dc BDE81040 		pop	{r4, lr}
 912              	.LCFI14:
 913              		.cfi_remember_state
 914              		.cfi_restore 14
 915              		.cfi_restore 4
 916              		.cfi_def_cfa_offset 0
 166:hal/Landungsbruecke/tmc/WLAN.c **** }
 917              		.loc 1 166 3 view .LVU248
 918 02e0 3CE7     		b	rawTx
 919              	.LVL44:
 920              	.L64:
 921              	.LCFI15:
 922              		.cfi_restore_state
 167:hal/Landungsbruecke/tmc/WLAN.c **** 
 923              		.loc 1 167 1 view .LVU249
 924 02e2 10BD     		pop	{r4, pc}
 925              		.cfi_endproc
 926              	.LFE4:
 928              		.align	1
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu softvfp
 934              	txN:
 935              	.LVL45:
 936              	.LFB7:
 191:hal/Landungsbruecke/tmc/WLAN.c **** 	for(int32_t i = 0; i < number; i++)
 937              		.loc 1 191 1 is_stmt 1 view -0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 192:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 941              		.loc 1 192 2 view .LVU251
 942              	.LBB19:
 192:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 943              		.loc 1 192 6 view .LVU252
 192:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 944              		.loc 1 192 6 is_stmt 0 view .LVU253
 945              	.LBE19:
 191:hal/Landungsbruecke/tmc/WLAN.c **** 	for(int32_t i = 0; i < number; i++)
 946              		.loc 1 191 1 view .LVU254
 947 02e4 70B5     		push	{r4, r5, r6, lr}
 948              	.LCFI16:
 949              		.cfi_def_cfa_offset 16
 950              		.cfi_offset 4, -16
 951              		.cfi_offset 5, -12
 952              		.cfi_offset 6, -8
 953              		.cfi_offset 14, -4
 191:hal/Landungsbruecke/tmc/WLAN.c **** 	for(int32_t i = 0; i < number; i++)
 954              		.loc 1 191 1 view .LVU255
 955 02e6 0646     		mov	r6, r0
 956 02e8 0D46     		mov	r5, r1
 957              	.LBB20:
 192:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 958              		.loc 1 192 14 view .LVU256
 959 02ea 0024     		movs	r4, #0
 960              	.LVL46:
 961              	.L67:
 192:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 962              		.loc 1 192 21 is_stmt 1 discriminator 1 view .LVU257
 192:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 963              		.loc 1 192 2 is_stmt 0 discriminator 1 view .LVU258
 964 02ec A542     		cmp	r5, r4
 965 02ee 00DC     		bgt	.L68
 966              	.LBE20:
 194:hal/Landungsbruecke/tmc/WLAN.c **** 
 967              		.loc 1 194 1 view .LVU259
 968 02f0 70BD     		pop	{r4, r5, r6, pc}
 969              	.LVL47:
 970              	.L68:
 971              	.LBB21:
 193:hal/Landungsbruecke/tmc/WLAN.c **** }
 972              		.loc 1 193 3 is_stmt 1 discriminator 3 view .LVU260
 973 02f2 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 974 02f4 FFF7ECFF 		bl	tx
 975              	.LVL48:
 192:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 976              		.loc 1 192 33 discriminator 3 view .LVU261
 192:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 977              		.loc 1 192 34 is_stmt 0 discriminator 3 view .LVU262
 978 02f8 0134     		adds	r4, r4, #1
 979              	.LVL49:
 192:hal/Landungsbruecke/tmc/WLAN.c **** 		tx(str[i]);
 980              		.loc 1 192 34 discriminator 3 view .LVU263
 981 02fa F7E7     		b	.L67
 982              	.LBE21:
 983              		.cfi_endproc
 984              	.LFE7:
 986              		.align	1
 987              		.global	handleWLANCommand
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu softvfp
 993              	handleWLANCommand:
 994              	.LVL50:
 995              	.LFB14:
 287:hal/Landungsbruecke/tmc/WLAN.c **** 
 288:hal/Landungsbruecke/tmc/WLAN.c **** uint32_t handleWLANCommand(BufferCommandTypedef cmd, uint32_t value)
 289:hal/Landungsbruecke/tmc/WLAN.c **** {
 996              		.loc 1 289 1 is_stmt 1 view -0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 290:hal/Landungsbruecke/tmc/WLAN.c **** 	switch(cmd)
 1000              		.loc 1 290 2 view .LVU265
 1001 02fc 0128     		cmp	r0, #1
 289:hal/Landungsbruecke/tmc/WLAN.c **** 	switch(cmd)
 1002              		.loc 1 289 1 is_stmt 0 view .LVU266
 1003 02fe 70B5     		push	{r4, r5, r6, lr}
 1004              	.LCFI17:
 1005              		.cfi_def_cfa_offset 16
 1006              		.cfi_offset 4, -16
 1007              		.cfi_offset 5, -12
 1008              		.cfi_offset 6, -8
 1009              		.cfi_offset 14, -4
 1010              		.loc 1 290 2 view .LVU267
 1011 0300 04D0     		beq	.L70
 1012 0302 0228     		cmp	r0, #2
 1013 0304 1CD0     		beq	.L71
 1014 0306 68B1     		cbz	r0, .L72
 1015 0308 0020     		movs	r0, #0
 1016              	.LVL51:
 1017              	.L69:
 291:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 292:hal/Landungsbruecke/tmc/WLAN.c **** 	case BUFFER_CLEAR:
 293:hal/Landungsbruecke/tmc/WLAN.c **** 		cmdBufferSize = 0;
 294:hal/Landungsbruecke/tmc/WLAN.c **** 		break;
 295:hal/Landungsbruecke/tmc/WLAN.c **** 	case BUFFER_WRITE:
 296:hal/Landungsbruecke/tmc/WLAN.c **** 		while((value & 0xFF) != CMDBUFFER_END_CHAR)
 297:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 298:hal/Landungsbruecke/tmc/WLAN.c **** 			if(cmdBufferSize == WLAN_CMD_BUFFER_SIZE)
 299:hal/Landungsbruecke/tmc/WLAN.c **** 			{
 300:hal/Landungsbruecke/tmc/WLAN.c **** 				if((value & 0xFF) != 0)	// Any value still remaining -> too much data for buffer -> return an e
 301:hal/Landungsbruecke/tmc/WLAN.c **** 					return 1;
 302:hal/Landungsbruecke/tmc/WLAN.c **** 				break;
 303:hal/Landungsbruecke/tmc/WLAN.c **** 			}
 304:hal/Landungsbruecke/tmc/WLAN.c **** 			cmdBuffer[cmdBufferSize] = value & 0xFF;
 305:hal/Landungsbruecke/tmc/WLAN.c **** 			value >>= 8;
 306:hal/Landungsbruecke/tmc/WLAN.c **** 			cmdBufferSize++;
 307:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 308:hal/Landungsbruecke/tmc/WLAN.c **** 		break;
 309:hal/Landungsbruecke/tmc/WLAN.c **** 	case BUFFER_EXECUTE:
 310:hal/Landungsbruecke/tmc/WLAN.c **** 		// Abort if not in command mode. IDE/User should switch to command mode before executing
 311:hal/Landungsbruecke/tmc/WLAN.c **** 		if(!checkCmdModeEnabled())
 312:hal/Landungsbruecke/tmc/WLAN.c **** 			return 1;
 313:hal/Landungsbruecke/tmc/WLAN.c **** 
 314:hal/Landungsbruecke/tmc/WLAN.c **** 		for(uint32_t i = 0; i < cmdBufferSize; i++)
 315:hal/Landungsbruecke/tmc/WLAN.c **** 			rawTx(cmdBuffer[i]); // Can't use txN since its blocked from sending while in command mode
 316:hal/Landungsbruecke/tmc/WLAN.c **** 		rawTx('\r'); // End of command character
 317:hal/Landungsbruecke/tmc/WLAN.c **** 
 318:hal/Landungsbruecke/tmc/WLAN.c **** 		cmdBufferSize = 0;
 319:hal/Landungsbruecke/tmc/WLAN.c **** 		break;
 320:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 321:hal/Landungsbruecke/tmc/WLAN.c **** 
 322:hal/Landungsbruecke/tmc/WLAN.c **** 	return 0;
 323:hal/Landungsbruecke/tmc/WLAN.c **** }
 1018              		.loc 1 323 1 view .LVU268
 1019 030a 70BD     		pop	{r4, r5, r6, pc}
 1020              	.LVL52:
 1021              	.L70:
 1022              		.loc 1 323 1 view .LVU269
 1023 030c 184B     		ldr	r3, .L90
 1024 030e 9A68     		ldr	r2, [r3, #8]
 290:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 1025              		.loc 1 290 2 view .LVU270
 1026 0310 0024     		movs	r4, #0
 304:hal/Landungsbruecke/tmc/WLAN.c **** 			value >>= 8;
 1027              		.loc 1 304 29 view .LVU271
 1028 0312 03F10C05 		add	r5, r3, #12
 1029              	.LVL53:
 1030              	.L74:
 296:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 1031              		.loc 1 296 8 is_stmt 1 view .LVU272
 1032 0316 11F0FF00 		ands	r0, r1, #255
 1033 031a 06D1     		bne	.L77
 296:hal/Landungsbruecke/tmc/WLAN.c **** 		{
 1034              		.loc 1 296 8 is_stmt 0 view .LVU273
 1035 031c 002C     		cmp	r4, #0
 1036 031e F4D0     		beq	.L69
 1037 0320 9A60     		str	r2, [r3, #8]
 1038 0322 F2E7     		b	.L69
 1039              	.LVL54:
 1040              	.L72:
 293:hal/Landungsbruecke/tmc/WLAN.c **** 		break;
 1041              		.loc 1 293 3 is_stmt 1 view .LVU274
 293:hal/Landungsbruecke/tmc/WLAN.c **** 		break;
 1042              		.loc 1 293 17 is_stmt 0 view .LVU275
 1043 0324 124B     		ldr	r3, .L90
 1044 0326 9860     		str	r0, [r3, #8]
 294:hal/Landungsbruecke/tmc/WLAN.c **** 	case BUFFER_WRITE:
 1045              		.loc 1 294 3 is_stmt 1 view .LVU276
 1046 0328 EFE7     		b	.L69
 1047              	.LVL55:
 1048              	.L77:
 298:hal/Landungsbruecke/tmc/WLAN.c **** 			{
 1049              		.loc 1 298 4 view .LVU277
 298:hal/Landungsbruecke/tmc/WLAN.c **** 			{
 1050              		.loc 1 298 6 is_stmt 0 view .LVU278
 1051 032a 802A     		cmp	r2, #128
 1052 032c 03D1     		bne	.L75
 1053 032e 04B1     		cbz	r4, .L76
 1054 0330 9A60     		str	r2, [r3, #8]
 1055              	.LVL56:
 1056              	.L76:
 301:hal/Landungsbruecke/tmc/WLAN.c **** 				break;
 1057              		.loc 1 301 13 view .LVU279
 1058 0332 0120     		movs	r0, #1
 1059 0334 E9E7     		b	.L69
 1060              	.LVL57:
 1061              	.L75:
 304:hal/Landungsbruecke/tmc/WLAN.c **** 			value >>= 8;
 1062              		.loc 1 304 4 is_stmt 1 view .LVU280
 304:hal/Landungsbruecke/tmc/WLAN.c **** 			value >>= 8;
 1063              		.loc 1 304 29 is_stmt 0 view .LVU281
 1064 0336 5155     		strb	r1, [r2, r5]
 305:hal/Landungsbruecke/tmc/WLAN.c **** 			cmdBufferSize++;
 1065              		.loc 1 305 4 is_stmt 1 view .LVU282
 306:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 1066              		.loc 1 306 17 is_stmt 0 view .LVU283
 1067 0338 0124     		movs	r4, #1
 305:hal/Landungsbruecke/tmc/WLAN.c **** 			cmdBufferSize++;
 1068              		.loc 1 305 10 view .LVU284
 1069 033a 090A     		lsrs	r1, r1, #8
 1070              	.LVL58:
 306:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 1071              		.loc 1 306 4 is_stmt 1 view .LVU285
 306:hal/Landungsbruecke/tmc/WLAN.c **** 		}
 1072              		.loc 1 306 17 is_stmt 0 view .LVU286
 1073 033c 0132     		adds	r2, r2, #1
 1074 033e EAE7     		b	.L74
 1075              	.LVL59:
 1076              	.L71:
 311:hal/Landungsbruecke/tmc/WLAN.c **** 			return 1;
 1077              		.loc 1 311 3 is_stmt 1 view .LVU287
 311:hal/Landungsbruecke/tmc/WLAN.c **** 			return 1;
 1078              		.loc 1 311 7 is_stmt 0 view .LVU288
 1079 0340 FFF7FEFF 		bl	checkCmdModeEnabled
 1080              	.LVL60:
 311:hal/Landungsbruecke/tmc/WLAN.c **** 			return 1;
 1081              		.loc 1 311 5 view .LVU289
 1082 0344 0028     		cmp	r0, #0
 1083 0346 F4D0     		beq	.L76
 1084 0348 0A4D     		ldr	r5, .L90+4
 1085              	.LBB22:
 314:hal/Landungsbruecke/tmc/WLAN.c **** 			rawTx(cmdBuffer[i]); // Can't use txN since its blocked from sending while in command mode
 1086              		.loc 1 314 16 view .LVU290
 1087 034a 0024     		movs	r4, #0
 314:hal/Landungsbruecke/tmc/WLAN.c **** 			rawTx(cmdBuffer[i]); // Can't use txN since its blocked from sending while in command mode
 1088              		.loc 1 314 25 view .LVU291
 1089 034c A5F10C06 		sub	r6, r5, #12
 1090              	.L79:
 1091              	.LVL61:
 314:hal/Landungsbruecke/tmc/WLAN.c **** 			rawTx(cmdBuffer[i]); // Can't use txN since its blocked from sending while in command mode
 1092              		.loc 1 314 23 is_stmt 1 discriminator 1 view .LVU292
 314:hal/Landungsbruecke/tmc/WLAN.c **** 			rawTx(cmdBuffer[i]); // Can't use txN since its blocked from sending while in command mode
 1093              		.loc 1 314 3 is_stmt 0 discriminator 1 view .LVU293
 1094 0350 B368     		ldr	r3, [r6, #8]
 1095 0352 A342     		cmp	r3, r4
 1096 0354 05D8     		bhi	.L80
 1097              	.LBE22:
 316:hal/Landungsbruecke/tmc/WLAN.c **** 
 1098              		.loc 1 316 3 is_stmt 1 view .LVU294
 1099 0356 0D20     		movs	r0, #13
 1100 0358 FFF700FF 		bl	rawTx
 1101              	.LVL62:
 318:hal/Landungsbruecke/tmc/WLAN.c **** 		break;
 1102              		.loc 1 318 3 view .LVU295
 318:hal/Landungsbruecke/tmc/WLAN.c **** 		break;
 1103              		.loc 1 318 17 is_stmt 0 view .LVU296
 1104 035c 0020     		movs	r0, #0
 1105 035e B060     		str	r0, [r6, #8]
 319:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 1106              		.loc 1 319 3 is_stmt 1 view .LVU297
 1107 0360 D3E7     		b	.L69
 1108              	.L80:
 1109              	.LBB23:
 315:hal/Landungsbruecke/tmc/WLAN.c **** 		rawTx('\r'); // End of command character
 1110              		.loc 1 315 4 discriminator 3 view .LVU298
 1111 0362 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 1112 0366 FFF7F9FE 		bl	rawTx
 1113              	.LVL63:
 314:hal/Landungsbruecke/tmc/WLAN.c **** 			rawTx(cmdBuffer[i]); // Can't use txN since its blocked from sending while in command mode
 1114              		.loc 1 314 42 discriminator 3 view .LVU299
 314:hal/Landungsbruecke/tmc/WLAN.c **** 			rawTx(cmdBuffer[i]); // Can't use txN since its blocked from sending while in command mode
 1115              		.loc 1 314 43 is_stmt 0 discriminator 3 view .LVU300
 1116 036a 0134     		adds	r4, r4, #1
 1117              	.LVL64:
 314:hal/Landungsbruecke/tmc/WLAN.c **** 			rawTx(cmdBuffer[i]); // Can't use txN since its blocked from sending while in command mode
 1118              		.loc 1 314 43 discriminator 3 view .LVU301
 1119 036c F0E7     		b	.L79
 1120              	.L91:
 1121 036e 00BF     		.align	2
 1122              	.L90:
 1123 0370 00000000 		.word	.LANCHOR1
 1124 0374 0C000000 		.word	.LANCHOR1+12
 1125              	.LBE23:
 1126              		.cfi_endproc
 1127              	.LFE14:
 1129              		.align	1
 1130              		.global	getCMDReply
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1134              		.fpu softvfp
 1136              	getCMDReply:
 1137              	.LFB15:
 324:hal/Landungsbruecke/tmc/WLAN.c **** 
 325:hal/Landungsbruecke/tmc/WLAN.c **** uint32_t getCMDReply()
 326:hal/Landungsbruecke/tmc/WLAN.c **** {
 1138              		.loc 1 326 1 is_stmt 1 view -0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 8
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 327:hal/Landungsbruecke/tmc/WLAN.c **** 	uint8_t cmdReply;
 1142              		.loc 1 327 2 view .LVU303
 328:hal/Landungsbruecke/tmc/WLAN.c **** 	uint32_t result = 0;
 1143              		.loc 1 328 2 view .LVU304
 1144              	.LVL65:
 329:hal/Landungsbruecke/tmc/WLAN.c **** 
 330:hal/Landungsbruecke/tmc/WLAN.c **** 	for(int i = 0; i < 4; i++)
 1145              		.loc 1 330 2 view .LVU305
 1146              	.LBB24:
 1147              		.loc 1 330 6 view .LVU306
 1148              		.loc 1 330 17 view .LVU307
 1149              	.LBE24:
 326:hal/Landungsbruecke/tmc/WLAN.c **** 	uint8_t cmdReply;
 1150              		.loc 1 326 1 is_stmt 0 view .LVU308
 1151 0378 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1152              	.LCFI18:
 1153              		.cfi_def_cfa_offset 24
 1154              		.cfi_offset 4, -12
 1155              		.cfi_offset 5, -8
 1156              		.cfi_offset 14, -4
 326:hal/Landungsbruecke/tmc/WLAN.c **** 	uint8_t cmdReply;
 1157              		.loc 1 326 1 view .LVU309
 1158 037a 0425     		movs	r5, #4
 328:hal/Landungsbruecke/tmc/WLAN.c **** 	uint32_t result = 0;
 1159              		.loc 1 328 11 view .LVU310
 1160 037c 0024     		movs	r4, #0
 1161              	.LVL66:
 1162              	.L94:
 1163              	.LBB25:
 331:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 332:hal/Landungsbruecke/tmc/WLAN.c **** 		if(rawRx(&cmdReply) == 0)
 1164              		.loc 1 332 3 is_stmt 1 view .LVU311
 1165              		.loc 1 332 6 is_stmt 0 view .LVU312
 1166 037e 0DF10700 		add	r0, sp, #7
 1167 0382 FFF73DFE 		bl	rawRx
 1168              	.LVL67:
 1169              		.loc 1 332 5 view .LVU313
 1170 0386 08B9     		cbnz	r0, .L93
 333:hal/Landungsbruecke/tmc/WLAN.c **** 			cmdReply = 0;
 1171              		.loc 1 333 4 is_stmt 1 view .LVU314
 1172              		.loc 1 333 13 is_stmt 0 view .LVU315
 1173 0388 8DF80700 		strb	r0, [sp, #7]
 1174              	.L93:
 334:hal/Landungsbruecke/tmc/WLAN.c **** 		// First character is in the smallest byte of result
 335:hal/Landungsbruecke/tmc/WLAN.c **** 		result |= cmdReply << 24;
 1175              		.loc 1 335 3 is_stmt 1 discriminator 2 view .LVU316
 1176              		.loc 1 335 22 is_stmt 0 discriminator 2 view .LVU317
 1177 038c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 330:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 1178              		.loc 1 330 2 discriminator 2 view .LVU318
 1179 0390 013D     		subs	r5, r5, #1
 1180              	.LVL68:
 1181              		.loc 1 335 10 discriminator 2 view .LVU319
 1182 0392 44EA0364 		orr	r4, r4, r3, lsl #24
 1183              	.LVL69:
 336:hal/Landungsbruecke/tmc/WLAN.c **** 		result >>= 8;
 1184              		.loc 1 336 3 is_stmt 1 discriminator 2 view .LVU320
 1185              		.loc 1 336 10 is_stmt 0 discriminator 2 view .LVU321
 1186 0396 4FEA1424 		lsr	r4, r4, #8
 1187              	.LVL70:
 330:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 1188              		.loc 1 330 24 is_stmt 1 discriminator 2 view .LVU322
 330:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 1189              		.loc 1 330 17 discriminator 2 view .LVU323
 330:hal/Landungsbruecke/tmc/WLAN.c **** 	{
 1190              		.loc 1 330 2 is_stmt 0 discriminator 2 view .LVU324
 1191 039a F0D1     		bne	.L94
 1192              	.LBE25:
 337:hal/Landungsbruecke/tmc/WLAN.c **** 	}
 338:hal/Landungsbruecke/tmc/WLAN.c **** 
 339:hal/Landungsbruecke/tmc/WLAN.c **** 	return result;
 1193              		.loc 1 339 2 is_stmt 1 view .LVU325
 340:hal/Landungsbruecke/tmc/WLAN.c **** }
 1194              		.loc 1 340 1 is_stmt 0 view .LVU326
 1195 039c 2046     		mov	r0, r4
 1196 039e 03B0     		add	sp, sp, #12
 1197              	.LCFI19:
 1198              		.cfi_def_cfa_offset 12
 1199              		@ sp needed
 1200 03a0 30BD     		pop	{r4, r5, pc}
 1201              		.loc 1 340 1 view .LVU327
 1202              		.cfi_endproc
 1203              	.LFE15:
 1205              		.comm	UART0_TimeoutTimer,4,4
 1206              		.comm	hwid,1,1
 1207              		.comm	HAL,48,4
 1208              		.comm	UART,40,4
 1209              		.comm	Timer,16,4
 1210              		.global	WLAN
 1211              		.comm	RS232,36,4
 1212              		.comm	LEDs,28,4
 1213              		.comm	USB,36,4
 1214              		.comm	uart0_interrupt,1,1
 1215              		.comm	ADCs,32,4
 1216              		.comm	SPI,44,4
 1217              		.comm	IOMap,2088,4
 1218              		.comm	IOs,52,4
 1219              		.comm	Cpu,8,4
 1220              		.data
 1221              		.align	2
 1222              		.set	.LANCHOR0,. + 0
 1225              	buffers:
 1226 0000 00000000 		.word	0
 1227 0004 00000000 		.word	0
 1228 0008 8C000000 		.word	txBuffer
 1229 000c 00000000 		.word	0
 1230 0010 00000000 		.word	0
 1231 0014 8C040000 		.word	rxBuffer
 1234              	wlanState:
 1235 0018 02       		.byte	2
 1236 0019 000000   		.space	3
 1239              	WLAN:
 1240 001c 00000000 		.word	init
 1241 0020 00000000 		.word	deInit
 1242 0024 00000000 		.word	tx
 1243 0028 00000000 		.word	rx
 1244 002c 00000000 		.word	txN
 1245 0030 00000000 		.word	rxN
 1246 0034 00000000 		.word	clearBuffers
 1247 0038 00000000 		.word	bytesAvailable
 1248 003c 00E10000 		.word	57600
 1249              		.bss
 1250              		.align	2
 1251              		.set	.LANCHOR1,. + 0
 1254              	available:
 1255 0000 00000000 		.space	4
 1258              	cmdEnabledTime:
 1259 0004 00000000 		.space	4
 1262              	cmdBufferSize:
 1263 0008 00000000 		.space	4
 1266              	cmdBuffer:
 1267 000c 00000000 		.space	128
 1267      00000000 
 1267      00000000 
 1267      00000000 
 1267      00000000 
 1270              	txBuffer:
 1271 008c 00000000 		.space	1024
 1271      00000000 
 1271      00000000 
 1271      00000000 
 1271      00000000 
 1274              	rxBuffer:
 1275 048c 00000000 		.space	1024
 1275      00000000 
 1275      00000000 
 1275      00000000 
 1275      00000000 
 1278              	ADCValue:
 1279 088c 00000000 		.space	12
 1279      00000000 
 1279      00000000 
 1280              		.text
 1281              	.Letext0:
 1282              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 1283              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1284              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1285              		.file 5 "TMC-API/tmc/helpers/Types.h"
 1286              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1287              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1288              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1289              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1290              		.file 10 "hal/Landungsbruecke/freescale/MK20D10.h"
 1291              		.file 11 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 1292              		.file 12 "./hal/Landungsbruecke/freescale/Cpu.h"
 1293              		.file 13 "./hal/IOs.h"
 1294              		.file 14 "./hal/IOMap.h"
 1295              		.file 15 "./hal/SPI.h"
 1296              		.file 16 "./hal/ADCs.h"
 1297              		.file 17 "./hal/RXTX.h"
 1298              		.file 18 "./hal/USB.h"
 1299              		.file 19 "./hal/LEDs.h"
 1300              		.file 20 "./hal/RS232.h"
 1301              		.file 21 "./hal/WLAN.h"
 1302              		.file 22 "./hal/Timer.h"
 1303              		.file 23 "./hal/UART.h"
 1304              		.file 24 "./hal/HAL.h"
 1305              		.file 25 "./hal/SysTick.h"
 1306              		.file 26 "./hal/Landungsbruecke/freescale/nvic.h"
 1307              		.file 27 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
DEFINED SYMBOLS
                            *ABS*:00000000 WLAN.c
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:22     .text:00000000 rawRx
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:73     .text:00000028 $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:78     .text:00000030 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:84     .text:00000030 rx
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:112    .text:00000040 $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:116    .text:00000044 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:122    .text:00000044 bytesAvailable
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:138    .text:0000004c $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:142    .text:00000050 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:148    .text:00000050 clearBuffers
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:193    .text:00000074 $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:198    .text:0000007c $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:204    .text:0000007c deInit
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:269    .text:000000c0 $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:274    .text:000000c8 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:280    .text:000000c8 init
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:396    .text:00000148 $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:404    .text:0000015c $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:410    .text:0000015c rawTx
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:457    .text:0000017c $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:462    .text:00000184 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:468    .text:00000184 rxN
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:539    .text:000001ac $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:543    .text:000001b0 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:550    .text:000001b0 UART0_RX_TX_IRQHandler_WLAN
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:658    .text:0000021c $d
                            *COM*:00000004 UART0_TimeoutTimer
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:665    .text:0000022c $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:672    .text:0000022c enableWLANCommandMode
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:720    .text:00000258 $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:729    .text:00000260 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:736    .text:00000260 checkCmdModeEnabled
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:829    .text:000002a8 $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:835    .text:000002b4 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:842    .text:000002b4 checkReadyToSend
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:877    .text:000002cc $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:881    .text:000002d0 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:887    .text:000002d0 tx
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:934    .text:000002e4 txN
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:993    .text:000002fc handleWLANCommand
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1123   .text:00000370 $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1129   .text:00000378 $t
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1136   .text:00000378 getCMDReply
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1239   .data:0000001c WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1221   .data:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1225   .data:00000000 buffers
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1270   .bss:0000008c txBuffer
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1274   .bss:0000048c rxBuffer
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1234   .data:00000018 wlanState
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1250   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1254   .bss:00000000 available
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1258   .bss:00000004 cmdEnabledTime
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1262   .bss:00000008 cmdBufferSize
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1266   .bss:0000000c cmdBuffer
C:\Users\Shubham\AppData\Local\Temp\cccya3EM.s:1278   .bss:0000088c ADCValue

UNDEFINED SYMBOLS
disable_irq
enable_irq
systick_getTick
strcmp
timeSince
