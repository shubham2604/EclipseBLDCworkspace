   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"Board.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	deInit:
  23              	.LFB1:
  24              		.file 1 "boards/Board.c"
   1:boards/Board.c **** #include "Board.h"
   2:boards/Board.c **** 
   3:boards/Board.c **** static void deInit(void) {}
  25              		.loc 1 3 26 view -0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              		.loc 1 3 27 view .LVU1
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
  33              	.LFE1:
  35              		.align	1
  36              		.syntax unified
  37              		.thumb
  38              		.thumb_func
  39              		.fpu softvfp
  41              	dummy_Motor:
  42              	.LVL0:
  43              	.LFB2:
   4:boards/Board.c **** 
   5:boards/Board.c **** // Evalboard channel function dummies
   6:boards/Board.c **** static uint32_t dummy_Motor(uint8_t motor)
   7:boards/Board.c **** {
  44              		.loc 1 7 1 view -0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
   8:boards/Board.c **** 	UNUSED(motor);
  49              		.loc 1 8 2 view .LVU3
   9:boards/Board.c **** 	return TMC_ERROR_FUNCTION;
  50              		.loc 1 9 2 view .LVU4
  10:boards/Board.c **** }
  51              		.loc 1 10 1 is_stmt 0 view .LVU5
  52 0002 0220     		movs	r0, #2
  53              	.LVL1:
  54              		.loc 1 10 1 view .LVU6
  55 0004 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE2:
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	dummy_MotorValue:
  66              	.LVL2:
  67              	.LFB3:
  11:boards/Board.c **** 
  12:boards/Board.c **** static uint32_t dummy_MotorValue(uint8_t motor, int32_t value)
  13:boards/Board.c **** {
  68              		.loc 1 13 1 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  14:boards/Board.c **** 	UNUSED(motor);
  73              		.loc 1 14 2 view .LVU8
  15:boards/Board.c **** 	UNUSED(value);
  74              		.loc 1 15 2 view .LVU9
  16:boards/Board.c **** 	return TMC_ERROR_FUNCTION;
  75              		.loc 1 16 2 view .LVU10
  17:boards/Board.c **** }
  76              		.loc 1 17 1 is_stmt 0 view .LVU11
  77 0006 0220     		movs	r0, #2
  78              	.LVL3:
  79              		.loc 1 17 1 view .LVU12
  80 0008 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE3:
  84              		.align	1
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
  90              	dummy_AddressRef:
  91              	.LVL4:
  92              	.LFB4:
  18:boards/Board.c **** 
  19:boards/Board.c **** static void dummy_AddressRef(uint8_t motor, uint8_t address, int32_t *value)
  20:boards/Board.c **** {
  93              		.loc 1 20 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  21:boards/Board.c **** 	UNUSED(motor);
  98              		.loc 1 21 2 view .LVU14
  22:boards/Board.c **** 	UNUSED(address);
  99              		.loc 1 22 2 view .LVU15
  23:boards/Board.c **** 	UNUSED(value);
 100              		.loc 1 23 2 view .LVU16
  24:boards/Board.c **** }
 101              		.loc 1 24 1 is_stmt 0 view .LVU17
 102 000a 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE4:
 106              		.align	1
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu softvfp
 112              	dummy_AddressValue:
 113              	.LVL5:
 114              	.LFB5:
  25:boards/Board.c **** 
  26:boards/Board.c **** static void dummy_AddressValue(uint8_t motor, uint8_t address, int32_t value)
  27:boards/Board.c **** {
 115              		.loc 1 27 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
  28:boards/Board.c **** 	UNUSED(motor);
 120              		.loc 1 28 2 view .LVU19
  29:boards/Board.c **** 	UNUSED(address);
 121              		.loc 1 29 2 view .LVU20
  30:boards/Board.c **** 	UNUSED(value);
 122              		.loc 1 30 2 view .LVU21
  31:boards/Board.c **** }
 123              		.loc 1 31 1 is_stmt 0 view .LVU22
 124 000c 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE5:
 128              		.align	1
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu softvfp
 134              	dummy_MotorRef:
 135              	.LVL6:
 136              	.LFB6:
  32:boards/Board.c **** 
  33:boards/Board.c **** static uint32_t dummy_MotorRef(uint8_t motor, int32_t *value)
  34:boards/Board.c **** {
 137              		.loc 1 34 1 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
  35:boards/Board.c **** 	UNUSED(motor);
 142              		.loc 1 35 2 view .LVU24
  36:boards/Board.c **** 	UNUSED(value);
 143              		.loc 1 36 2 view .LVU25
  37:boards/Board.c **** 	return TMC_ERROR_FUNCTION;
 144              		.loc 1 37 2 view .LVU26
  38:boards/Board.c **** }
 145              		.loc 1 38 1 is_stmt 0 view .LVU27
 146 000e 0220     		movs	r0, #2
 147              	.LVL7:
 148              		.loc 1 38 1 view .LVU28
 149 0010 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE6:
 153              		.align	1
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu softvfp
 159              	dummy_TypeMotorValue:
 160              	.LVL8:
 161              	.LFB7:
  39:boards/Board.c **** 
  40:boards/Board.c **** static uint32_t dummy_TypeMotorValue(uint8_t type, uint8_t motor, int32_t value)
  41:boards/Board.c **** {
 162              		.loc 1 41 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
  42:boards/Board.c **** 	UNUSED(type);
 167              		.loc 1 42 2 view .LVU30
  43:boards/Board.c **** 	UNUSED(motor);
 168              		.loc 1 43 2 view .LVU31
  44:boards/Board.c **** 	UNUSED(value);
 169              		.loc 1 44 2 view .LVU32
  45:boards/Board.c **** 	return TMC_ERROR_FUNCTION;
 170              		.loc 1 45 2 view .LVU33
  46:boards/Board.c **** }
 171              		.loc 1 46 1 is_stmt 0 view .LVU34
 172 0012 0220     		movs	r0, #2
 173              	.LVL9:
 174              		.loc 1 46 1 view .LVU35
 175 0014 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE7:
 179              		.align	1
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	dummy_TypeMotorRef:
 186              	.LVL10:
 187              	.LFB8:
  47:boards/Board.c **** 
  48:boards/Board.c **** static uint32_t dummy_TypeMotorRef(uint8_t type, uint8_t motor, int32_t *value)
  49:boards/Board.c **** {
 188              		.loc 1 49 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
  50:boards/Board.c **** 	UNUSED(type);
 193              		.loc 1 50 2 view .LVU37
  51:boards/Board.c **** 	UNUSED(motor);
 194              		.loc 1 51 2 view .LVU38
  52:boards/Board.c **** 	UNUSED(value);
 195              		.loc 1 52 2 view .LVU39
  53:boards/Board.c **** 	return TMC_ERROR_FUNCTION;
 196              		.loc 1 53 2 view .LVU40
  54:boards/Board.c **** }
 197              		.loc 1 54 1 is_stmt 0 view .LVU41
 198 0016 0220     		movs	r0, #2
 199              	.LVL11:
 200              		.loc 1 54 1 view .LVU42
 201 0018 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE8:
 205              		.align	1
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu softvfp
 211              	delegationReturn:
 212              	.LFB10:
  55:boards/Board.c **** 
  56:boards/Board.c **** static uint32_t dummy_getLimit(uint8_t type, uint8_t motor, int32_t *value)
  57:boards/Board.c **** {
  58:boards/Board.c **** 	UNUSED(type);
  59:boards/Board.c **** 	UNUSED(motor);
  60:boards/Board.c **** 	UNUSED(value);
  61:boards/Board.c **** 	return TMC_ERROR_FUNCTION;
  62:boards/Board.c **** }
  63:boards/Board.c **** 
  64:boards/Board.c **** static uint8_t delegationReturn(void)
  65:boards/Board.c **** {
 213              		.loc 1 65 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
  66:boards/Board.c **** 	return 1;
 218              		.loc 1 66 2 view .LVU44
  67:boards/Board.c **** }
 219              		.loc 1 67 1 is_stmt 0 view .LVU45
 220 001a 0120     		movs	r0, #1
 221 001c 7047     		bx	lr
 222              		.cfi_endproc
 223              	.LFE10:
 225              		.align	1
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	enableDriver:
 232              	.LVL12:
 233              	.LFB11:
  68:boards/Board.c **** 
  69:boards/Board.c **** static void enableDriver(DriverState state)
  70:boards/Board.c **** {
 234              		.loc 1 70 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
  71:boards/Board.c **** 	UNUSED(state);
 239              		.loc 1 71 2 view .LVU47
  72:boards/Board.c **** }
 240              		.loc 1 72 1 is_stmt 0 view .LVU48
 241 001e 7047     		bx	lr
 242              		.cfi_endproc
 243              	.LFE11:
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu softvfp
 251              	dummy_getLimit:
 252              	.LFB18:
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257 0020 0220     		movs	r0, #2
 258 0022 7047     		bx	lr
 259              		.cfi_endproc
 260              	.LFE18:
 262              		.align	1
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu softvfp
 268              	periodicJob:
 269              	.LFB16:
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274 0024 7047     		bx	lr
 275              		.cfi_endproc
 276              	.LFE16:
 278              		.align	1
 279              		.global	board_setDummyFunctions
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu softvfp
 285              	board_setDummyFunctions:
 286              	.LVL13:
 287              	.LFB13:
  73:boards/Board.c **** 
  74:boards/Board.c **** static void periodicJob(uint32_t tick)
  75:boards/Board.c **** {
  76:boards/Board.c **** 	UNUSED(tick);
  77:boards/Board.c **** }
  78:boards/Board.c **** 
  79:boards/Board.c **** void board_setDummyFunctions(EvalboardFunctionsTypeDef *channel)
  80:boards/Board.c **** {
 288              		.loc 1 80 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
  81:boards/Board.c **** 	channel->config->reset     = delegationReturn;
 292              		.loc 1 81 2 view .LVU50
 293              		.loc 1 81 9 is_stmt 0 view .LVU51
 294 0026 8369     		ldr	r3, [r0, #24]
 295              		.loc 1 81 29 view .LVU52
 296 0028 124A     		ldr	r2, .L14
  82:boards/Board.c **** 	channel->config->restore   = delegationReturn;
  83:boards/Board.c **** 
  84:boards/Board.c **** 	channel->deInit            = deInit;
  85:boards/Board.c **** 	channel->periodicJob       = periodicJob;
  86:boards/Board.c **** 	channel->left              = dummy_MotorValue;
  87:boards/Board.c **** 	channel->stop              = dummy_Motor;
 297              		.loc 1 87 29 view .LVU53
 298 002a 1349     		ldr	r1, .L14+4
  80:boards/Board.c **** 	channel->config->reset     = delegationReturn;
 299              		.loc 1 80 1 view .LVU54
 300 002c 10B5     		push	{r4, lr}
 301              	.LCFI0:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 4, -8
 304              		.cfi_offset 14, -4
  82:boards/Board.c **** 	channel->config->restore   = delegationReturn;
 305              		.loc 1 82 29 view .LVU55
 306 002e C3E98122 		strd	r2, r2, [r3, #516]
  84:boards/Board.c **** 	channel->periodicJob       = periodicJob;
 307              		.loc 1 84 2 is_stmt 1 view .LVU56
  84:boards/Board.c **** 	channel->periodicJob       = periodicJob;
 308              		.loc 1 84 29 is_stmt 0 view .LVU57
 309 0032 124B     		ldr	r3, .L14+8
 310 0034 C365     		str	r3, [r0, #92]
  85:boards/Board.c **** 	channel->left              = dummy_MotorValue;
 311              		.loc 1 85 2 is_stmt 1 view .LVU58
  86:boards/Board.c **** 	channel->stop              = dummy_Motor;
 312              		.loc 1 86 29 is_stmt 0 view .LVU59
 313 0036 124B     		ldr	r3, .L14+12
 314 0038 C361     		str	r3, [r0, #28]
  88:boards/Board.c **** 	channel->moveTo            = dummy_MotorValue;
 315              		.loc 1 88 29 view .LVU60
 316 003a C0E90A13 		strd	r1, r3, [r0, #40]
  89:boards/Board.c **** 	channel->moveBy            = dummy_MotorRef;
 317              		.loc 1 89 29 view .LVU61
 318 003e 1149     		ldr	r1, .L14+16
  90:boards/Board.c **** 	channel->moveProfile       = dummy_MotorValue;
  91:boards/Board.c **** 	channel->right             = dummy_MotorValue;
 319              		.loc 1 91 29 view .LVU62
 320 0040 0362     		str	r3, [r0, #32]
  90:boards/Board.c **** 	channel->moveProfile       = dummy_MotorValue;
 321              		.loc 1 90 29 view .LVU63
 322 0042 C0E90C13 		strd	r1, r3, [r0, #48]
  92:boards/Board.c **** 	channel->GAP               = dummy_TypeMotorRef;
  93:boards/Board.c **** 	channel->readRegister      = dummy_AddressRef;
 323              		.loc 1 93 29 view .LVU64
 324 0046 104B     		ldr	r3, .L14+20
 325 0048 8364     		str	r3, [r0, #72]
  94:boards/Board.c **** 	channel->writeRegister     = dummy_AddressValue;
 326              		.loc 1 94 29 view .LVU65
 327 004a 104B     		ldr	r3, .L14+24
 328 004c C364     		str	r3, [r0, #76]
  95:boards/Board.c **** 	channel->SAP               = dummy_TypeMotorValue;
 329              		.loc 1 95 29 view .LVU66
 330 004e 104B     		ldr	r3, .L14+28
 331 0050 8363     		str	r3, [r0, #56]
  96:boards/Board.c **** 	channel->STAP              = dummy_TypeMotorValue;
  97:boards/Board.c **** 	channel->RSAP              = dummy_TypeMotorValue;
 332              		.loc 1 97 29 view .LVU67
 333 0052 C0E91033 		strd	r3, r3, [r0, #64]
  98:boards/Board.c **** 	channel->userFunction      = dummy_TypeMotorRef;
  99:boards/Board.c **** 	channel->getMeasuredSpeed  = dummy_MotorRef;
 100:boards/Board.c **** 	channel->checkErrors       = periodicJob;
 101:boards/Board.c **** 	channel->enableDriver      = enableDriver;
 334              		.loc 1 101 29 view .LVU68
 335 0056 0F4B     		ldr	r3, .L14+32
 336 0058 4366     		str	r3, [r0, #100]
 102:boards/Board.c **** 
 103:boards/Board.c **** 	channel->fullCover         = NULL;
 337              		.loc 1 103 29 view .LVU69
 338 005a 0023     		movs	r3, #0
  92:boards/Board.c **** 	channel->readRegister      = dummy_AddressRef;
 339              		.loc 1 92 29 view .LVU70
 340 005c 0E4C     		ldr	r4, .L14+36
 341              		.loc 1 103 29 view .LVU71
 342 005e C366     		str	r3, [r0, #108]
 104:boards/Board.c **** 	channel->getMin            = dummy_getLimit;
 343              		.loc 1 104 29 view .LVU72
 344 0060 0E4B     		ldr	r3, .L14+40
  85:boards/Board.c **** 	channel->left              = dummy_MotorValue;
 345              		.loc 1 85 29 view .LVU73
 346 0062 0F4A     		ldr	r2, .L14+44
 347 0064 8265     		str	r2, [r0, #88]
  86:boards/Board.c **** 	channel->stop              = dummy_Motor;
 348              		.loc 1 86 2 is_stmt 1 view .LVU74
  87:boards/Board.c **** 	channel->moveTo            = dummy_MotorValue;
 349              		.loc 1 87 2 view .LVU75
  89:boards/Board.c **** 	channel->moveProfile       = dummy_MotorValue;
 350              		.loc 1 89 2 view .LVU76
  91:boards/Board.c **** 	channel->GAP               = dummy_TypeMotorRef;
 351              		.loc 1 91 2 view .LVU77
  92:boards/Board.c **** 	channel->readRegister      = dummy_AddressRef;
 352              		.loc 1 92 2 view .LVU78
  99:boards/Board.c **** 	channel->checkErrors       = periodicJob;
 353              		.loc 1 99 29 is_stmt 0 view .LVU79
 354 0066 C0E91414 		strd	r1, r4, [r0, #80]
 105:boards/Board.c **** 	channel->getMax            = dummy_getLimit;
 355              		.loc 1 105 29 view .LVU80
 356 006a C0E91C33 		strd	r3, r3, [r0, #112]
  92:boards/Board.c **** 	channel->readRegister      = dummy_AddressRef;
 357              		.loc 1 92 29 view .LVU81
 358 006e C463     		str	r4, [r0, #60]
  93:boards/Board.c **** 	channel->writeRegister     = dummy_AddressValue;
 359              		.loc 1 93 2 is_stmt 1 view .LVU82
  94:boards/Board.c **** 	channel->SAP               = dummy_TypeMotorValue;
 360              		.loc 1 94 2 view .LVU83
  95:boards/Board.c **** 	channel->STAP              = dummy_TypeMotorValue;
 361              		.loc 1 95 2 view .LVU84
  96:boards/Board.c **** 	channel->RSAP              = dummy_TypeMotorValue;
 362              		.loc 1 96 2 view .LVU85
  98:boards/Board.c **** 	channel->getMeasuredSpeed  = dummy_MotorRef;
 363              		.loc 1 98 2 view .LVU86
 100:boards/Board.c **** 	channel->enableDriver      = enableDriver;
 364              		.loc 1 100 2 view .LVU87
 100:boards/Board.c **** 	channel->enableDriver      = enableDriver;
 365              		.loc 1 100 29 is_stmt 0 view .LVU88
 366 0070 0266     		str	r2, [r0, #96]
 101:boards/Board.c **** 
 367              		.loc 1 101 2 is_stmt 1 view .LVU89
 103:boards/Board.c **** 	channel->getMin            = dummy_getLimit;
 368              		.loc 1 103 2 view .LVU90
 104:boards/Board.c **** 	channel->getMax            = dummy_getLimit;
 369              		.loc 1 104 2 view .LVU91
 106:boards/Board.c **** }
 370              		.loc 1 106 1 is_stmt 0 view .LVU92
 371 0072 10BD     		pop	{r4, pc}
 372              	.L15:
 373              		.align	2
 374              	.L14:
 375 0074 00000000 		.word	delegationReturn
 376 0078 00000000 		.word	dummy_Motor
 377 007c 00000000 		.word	deInit
 378 0080 00000000 		.word	dummy_MotorValue
 379 0084 00000000 		.word	dummy_MotorRef
 380 0088 00000000 		.word	dummy_AddressRef
 381 008c 00000000 		.word	dummy_AddressValue
 382 0090 00000000 		.word	dummy_TypeMotorValue
 383 0094 00000000 		.word	enableDriver
 384 0098 00000000 		.word	dummy_TypeMotorRef
 385 009c 00000000 		.word	dummy_getLimit
 386 00a0 00000000 		.word	periodicJob
 387              		.cfi_endproc
 388              	.LFE13:
 390              		.align	1
 391              		.global	periodicJobDummy
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu softvfp
 397              	periodicJobDummy:
 398              	.LVL14:
 399              	.LFB14:
 107:boards/Board.c **** 
 108:boards/Board.c **** void periodicJobDummy(uint32_t tick)
 109:boards/Board.c **** {
 400              		.loc 1 109 1 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 110:boards/Board.c **** 	UNUSED(tick);
 405              		.loc 1 110 2 view .LVU94
 111:boards/Board.c **** }
 406              		.loc 1 111 1 is_stmt 0 view .LVU95
 407 00a4 7047     		bx	lr
 408              		.cfi_endproc
 409              	.LFE14:
 411              		.comm	TMCMotionController,532,4
 412              		.comm	TMCDriver,532,4
 413              		.comm	Evalboards,244,4
 414              		.comm	VitalSignsMonitor,20,4
 415              		.comm	hwid,1,1
 416              		.comm	HAL,48,4
 417              		.comm	UART,40,4
 418              		.comm	Timer,16,4
 419              		.comm	WLAN,36,4
 420              		.comm	RS232,36,4
 421              		.comm	LEDs,28,4
 422              		.comm	USB,36,4
 423              		.comm	uart0_interrupt,1,1
 424              		.comm	ADCs,32,4
 425              		.comm	SPI,44,4
 426              		.comm	IOMap,2088,4
 427              		.comm	IOs,52,4
 428              		.comm	Cpu,8,4
 429              		.bss
 430              		.align	1
 433              	ADCValue:
 434 0000 00000000 		.space	12
 434      00000000 
 434      00000000 
 435              		.text
 436              	.Letext0:
 437              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 438              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 439              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 440              		.file 5 "TMC-API/tmc/helpers/Types.h"
 441              		.file 6 "TMC-API/tmc/helpers/Config.h"
 442              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 443              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 444              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 445              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 446              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 447              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 448              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 449              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 450              		.file 15 "./hal/IOs.h"
 451              		.file 16 "./hal/IOMap.h"
 452              		.file 17 "./hal/SPI.h"
 453              		.file 18 "./hal/ADCs.h"
 454              		.file 19 "./hal/RXTX.h"
 455              		.file 20 "./hal/USB.h"
 456              		.file 21 "./hal/LEDs.h"
 457              		.file 22 "./hal/RS232.h"
 458              		.file 23 "./hal/WLAN.h"
 459              		.file 24 "./hal/Timer.h"
 460              		.file 25 "./hal/UART.h"
 461              		.file 26 "./hal/HAL.h"
 462              		.file 27 "./tmc/VitalSignsMonitor.h"
 463              		.file 28 "boards/Board.h"
 464              		.file 29 "boards/TMCDriver.h"
 465              		.file 30 "boards/TMCMotionController.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Board.c
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:22     .text:00000000 deInit
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:41     .text:00000002 dummy_Motor
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:65     .text:00000006 dummy_MotorValue
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:90     .text:0000000a dummy_AddressRef
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:112    .text:0000000c dummy_AddressValue
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:134    .text:0000000e dummy_MotorRef
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:159    .text:00000012 dummy_TypeMotorValue
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:185    .text:00000016 dummy_TypeMotorRef
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:211    .text:0000001a delegationReturn
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:231    .text:0000001e enableDriver
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:251    .text:00000020 dummy_getLimit
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:268    .text:00000024 periodicJob
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:285    .text:00000026 board_setDummyFunctions
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:375    .text:00000074 $d
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:390    .text:000000a4 $t
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:397    .text:000000a4 periodicJobDummy
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:000000f4 Evalboards
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000030 HAL
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:430    .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\cc0wYuy2.s:433    .bss:00000000 ADCValue

NO UNDEFINED SYMBOLS
