   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC5161_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	getMeasuredSpeed:
  23              	.LVL0:
  24              	.LFB13:
  25              		.file 1 "boards/TMC5161_eval.c"
   1:boards/TMC5161_eval.c **** #include "Board.h"
   2:boards/TMC5161_eval.c **** #include "tmc/ic/TMC5161/TMC5161.h"
   3:boards/TMC5161_eval.c **** 
   4:boards/TMC5161_eval.c **** #define VM_MIN         50   // VM[V/10] min
   5:boards/TMC5161_eval.c **** #define VM_MAX         660  // VM[V/10] max
   6:boards/TMC5161_eval.c **** 
   7:boards/TMC5161_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
   8:boards/TMC5161_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
   9:boards/TMC5161_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
  10:boards/TMC5161_eval.c **** static uint32_t stop(uint8_t motor);
  11:boards/TMC5161_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  12:boards/TMC5161_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  13:boards/TMC5161_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  14:boards/TMC5161_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  15:boards/TMC5161_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value);
  16:boards/TMC5161_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value);
  17:boards/TMC5161_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value);
  18:boards/TMC5161_eval.c **** 
  19:boards/TMC5161_eval.c **** static void periodicJob(uint32_t tick);
  20:boards/TMC5161_eval.c **** static void checkErrors(uint32_t tick);
  21:boards/TMC5161_eval.c **** static void deInit(void);
  22:boards/TMC5161_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  23:boards/TMC5161_eval.c **** 
  24:boards/TMC5161_eval.c **** static uint8_t reset();
  25:boards/TMC5161_eval.c **** static void enableDriver(DriverState state);
  26:boards/TMC5161_eval.c **** 
  27:boards/TMC5161_eval.c **** static SPIChannelTypeDef *TMC5161_SPIChannel;
  28:boards/TMC5161_eval.c **** static TMC5161TypeDef TMC5161;
  29:boards/TMC5161_eval.c **** static uint32_t vmax_position;
  30:boards/TMC5161_eval.c **** 
  31:boards/TMC5161_eval.c **** static inline TMC5161TypeDef *motorToIC(uint8_t motor)
  32:boards/TMC5161_eval.c **** {
  33:boards/TMC5161_eval.c **** 	UNUSED(motor);
  34:boards/TMC5161_eval.c **** 
  35:boards/TMC5161_eval.c **** 	return &TMC5161;
  36:boards/TMC5161_eval.c **** }
  37:boards/TMC5161_eval.c **** 
  38:boards/TMC5161_eval.c **** static inline SPIChannelTypeDef *channelToSPI(uint8_t channel)
  39:boards/TMC5161_eval.c **** {
  40:boards/TMC5161_eval.c **** 	UNUSED(channel);
  41:boards/TMC5161_eval.c **** 
  42:boards/TMC5161_eval.c **** 	return TMC5161_SPIChannel;
  43:boards/TMC5161_eval.c **** }
  44:boards/TMC5161_eval.c **** 
  45:boards/TMC5161_eval.c **** // SPI Wrapper for API
  46:boards/TMC5161_eval.c **** void tmc5161_readWriteArray(uint8_t channel, uint8_t *data, size_t length)
  47:boards/TMC5161_eval.c **** {
  48:boards/TMC5161_eval.c **** 	// Map the channel to the corresponding SPI channel
  49:boards/TMC5161_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
  50:boards/TMC5161_eval.c **** }
  51:boards/TMC5161_eval.c **** 
  52:boards/TMC5161_eval.c **** typedef struct
  53:boards/TMC5161_eval.c **** {
  54:boards/TMC5161_eval.c **** 	IOPinTypeDef  *REFL_UC;
  55:boards/TMC5161_eval.c **** 	IOPinTypeDef  *REFR_UC;
  56:boards/TMC5161_eval.c **** 	IOPinTypeDef  *DRV_ENN_CFG6;
  57:boards/TMC5161_eval.c **** 	IOPinTypeDef  *ENCA_DCIN_CFG5;
  58:boards/TMC5161_eval.c **** 	IOPinTypeDef  *ENCB_DCEN_CFG4;
  59:boards/TMC5161_eval.c **** 	IOPinTypeDef  *ENCN_DCO;
  60:boards/TMC5161_eval.c **** 	IOPinTypeDef  *SD_MODE;
  61:boards/TMC5161_eval.c **** 	IOPinTypeDef  *SPI_MODE;
  62:boards/TMC5161_eval.c **** 	IOPinTypeDef  *SWN_DIAG0;
  63:boards/TMC5161_eval.c **** 	IOPinTypeDef  *SWP_DIAG1;
  64:boards/TMC5161_eval.c **** } PinsTypeDef;
  65:boards/TMC5161_eval.c **** 
  66:boards/TMC5161_eval.c **** static PinsTypeDef Pins;
  67:boards/TMC5161_eval.c **** 
  68:boards/TMC5161_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
  69:boards/TMC5161_eval.c **** {
  70:boards/TMC5161_eval.c **** 	tmc5161_rotate(motorToIC(motor), velocity);
  71:boards/TMC5161_eval.c **** 
  72:boards/TMC5161_eval.c **** 	return 0;
  73:boards/TMC5161_eval.c **** }
  74:boards/TMC5161_eval.c **** 
  75:boards/TMC5161_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
  76:boards/TMC5161_eval.c **** {
  77:boards/TMC5161_eval.c **** 	tmc5161_right(motorToIC(motor), velocity);
  78:boards/TMC5161_eval.c **** 
  79:boards/TMC5161_eval.c **** 	return 0;
  80:boards/TMC5161_eval.c **** }
  81:boards/TMC5161_eval.c **** 
  82:boards/TMC5161_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
  83:boards/TMC5161_eval.c **** {
  84:boards/TMC5161_eval.c **** 	tmc5161_left(motorToIC(motor), velocity);
  85:boards/TMC5161_eval.c **** 
  86:boards/TMC5161_eval.c **** 	return 0;
  87:boards/TMC5161_eval.c **** }
  88:boards/TMC5161_eval.c **** 
  89:boards/TMC5161_eval.c **** static uint32_t stop(uint8_t motor)
  90:boards/TMC5161_eval.c **** {
  91:boards/TMC5161_eval.c **** 	tmc5161_stop(motorToIC(motor));
  92:boards/TMC5161_eval.c **** 
  93:boards/TMC5161_eval.c **** 	return 0;
  94:boards/TMC5161_eval.c **** }
  95:boards/TMC5161_eval.c **** 
  96:boards/TMC5161_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
  97:boards/TMC5161_eval.c **** {
  98:boards/TMC5161_eval.c **** 	tmc5161_moveTo(motorToIC(motor), position, vmax_position);
  99:boards/TMC5161_eval.c **** 
 100:boards/TMC5161_eval.c **** 	return 0;
 101:boards/TMC5161_eval.c **** }
 102:boards/TMC5161_eval.c **** 
 103:boards/TMC5161_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 104:boards/TMC5161_eval.c **** {
 105:boards/TMC5161_eval.c **** 	tmc5161_moveBy(motorToIC(motor), ticks, vmax_position);
 106:boards/TMC5161_eval.c **** 
 107:boards/TMC5161_eval.c **** 	return 0;
 108:boards/TMC5161_eval.c **** }
 109:boards/TMC5161_eval.c **** 
 110:boards/TMC5161_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 111:boards/TMC5161_eval.c **** {
 112:boards/TMC5161_eval.c **** 	uint32_t buffer;
 113:boards/TMC5161_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 114:boards/TMC5161_eval.c **** 
 115:boards/TMC5161_eval.c **** 	if(motor >= TMC5161_MOTORS)
 116:boards/TMC5161_eval.c **** 		return TMC_ERROR_MOTOR;
 117:boards/TMC5161_eval.c **** 
 118:boards/TMC5161_eval.c **** 	switch(type)
 119:boards/TMC5161_eval.c **** 	{
 120:boards/TMC5161_eval.c **** 	case 0:
 121:boards/TMC5161_eval.c **** 		// Target position
 122:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 123:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_XTARGET);
 124:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 125:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_XTARGET, *value);
 126:boards/TMC5161_eval.c **** 		}
 127:boards/TMC5161_eval.c **** 		break;
 128:boards/TMC5161_eval.c **** 	case 1:
 129:boards/TMC5161_eval.c **** 		// Actual position
 130:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 131:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_XACTUAL);
 132:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 133:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_XACTUAL, *value);
 134:boards/TMC5161_eval.c **** 		}
 135:boards/TMC5161_eval.c **** 		break;
 136:boards/TMC5161_eval.c **** 	case 2:
 137:boards/TMC5161_eval.c **** 		// Target speed
 138:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 139:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VMAX);
 140:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 141:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_VMAX, abs(*value));
 142:boards/TMC5161_eval.c **** 		}
 143:boards/TMC5161_eval.c **** 		break;
 144:boards/TMC5161_eval.c **** 	case 3:
 145:boards/TMC5161_eval.c **** 		// Actual speed
 146:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 147:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VACTUAL);
 148:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 149:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 150:boards/TMC5161_eval.c **** 			errors |= TMC_ERROR_TYPE;
 151:boards/TMC5161_eval.c **** 		}
 152:boards/TMC5161_eval.c **** 		break;
 153:boards/TMC5161_eval.c **** 	case 4:
 154:boards/TMC5161_eval.c **** 		// Maximum speed
 155:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 156:boards/TMC5161_eval.c **** 			*value = vmax_position;
 157:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 158:boards/TMC5161_eval.c **** 			vmax_position = abs(*value);
 159:boards/TMC5161_eval.c **** 			if(tmc5161_readInt(motorToIC(motor), TMC5161_RAMPMODE) == TMC5161_MODE_POSITION)
 160:boards/TMC5161_eval.c **** 				tmc5161_writeInt(motorToIC(motor), TMC5161_VMAX, vmax_position);
 161:boards/TMC5161_eval.c **** 		}
 162:boards/TMC5161_eval.c **** 		break;
 163:boards/TMC5161_eval.c **** 	case 5:
 164:boards/TMC5161_eval.c **** 		// Maximum acceleration
 165:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 166:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_AMAX);
 167:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 168:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_AMAX, *value);
 169:boards/TMC5161_eval.c **** 		}
 170:boards/TMC5161_eval.c **** 		break;
 171:boards/TMC5161_eval.c **** 	case 6:
 172:boards/TMC5161_eval.c **** 		// Maximum current
 173:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 174:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IRUN_MASK, TMC5161_IRU
 175:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 176:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IRUN_MASK, TMC5161_IRUN_SHIFT
 177:boards/TMC5161_eval.c **** 		}
 178:boards/TMC5161_eval.c **** 		break;
 179:boards/TMC5161_eval.c **** 	case 7:
 180:boards/TMC5161_eval.c **** 		// Standby current
 181:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 182:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IHOLD_MASK, TMC5161_IH
 183:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 184:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IHOLD_MASK, TMC5161_IHOLD_SHI
 185:boards/TMC5161_eval.c **** 		}
 186:boards/TMC5161_eval.c **** 		break;
 187:boards/TMC5161_eval.c **** 	case 8:
 188:boards/TMC5161_eval.c **** 		// Position reached flag
 189:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 190:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_RAMPSTAT, TMC5161_POSITION_REACHED_MASK, T
 191:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 192:boards/TMC5161_eval.c **** 			errors |= TMC_ERROR_TYPE;
 193:boards/TMC5161_eval.c **** 		}
 194:boards/TMC5161_eval.c **** 		break;
 195:boards/TMC5161_eval.c **** 	case 10:
 196:boards/TMC5161_eval.c **** 		// Right endstop
 197:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 198:boards/TMC5161_eval.c **** 			*value = !TMC5161_FIELD_READ(motorToIC(motor), TMC5161_RAMPSTAT, TMC5161_STATUS_STOP_R_MASK, TMC
 199:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 200:boards/TMC5161_eval.c **** 			errors |= TMC_ERROR_TYPE;
 201:boards/TMC5161_eval.c **** 		}
 202:boards/TMC5161_eval.c **** 		break;
 203:boards/TMC5161_eval.c **** 	case 11:
 204:boards/TMC5161_eval.c **** 		// Left endstop
 205:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 206:boards/TMC5161_eval.c **** 			*value = !TMC5161_FIELD_READ(motorToIC(motor), TMC5161_RAMPSTAT, TMC5161_STATUS_STOP_L_MASK, TMC
 207:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 208:boards/TMC5161_eval.c **** 			errors |= TMC_ERROR_TYPE;
 209:boards/TMC5161_eval.c **** 		}
 210:boards/TMC5161_eval.c **** 		break;
 211:boards/TMC5161_eval.c **** 	case 12:
 212:boards/TMC5161_eval.c **** 		// Automatic right stop
 213:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 214:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_R_ENABLE_MASK, TMC516
 215:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 216:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_R_ENABLE_MASK, TMC5161_STOP_
 217:boards/TMC5161_eval.c **** 		}
 218:boards/TMC5161_eval.c **** 		break;
 219:boards/TMC5161_eval.c **** 	case 13:
 220:boards/TMC5161_eval.c **** 		// Automatic left stop
 221:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 222:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_L_ENABLE_MASK, TMC516
 223:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 224:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_L_ENABLE_MASK, TMC5161_STOP_
 225:boards/TMC5161_eval.c **** 		}
 226:boards/TMC5161_eval.c **** 		break;
 227:boards/TMC5161_eval.c **** 	case 14:
 228:boards/TMC5161_eval.c **** 		// SW_MODE Register
 229:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 230:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_SWMODE);
 231:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 232:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_SWMODE, *value);
 233:boards/TMC5161_eval.c **** 		}
 234:boards/TMC5161_eval.c **** 		break;
 235:boards/TMC5161_eval.c **** 	case 15:
 236:boards/TMC5161_eval.c **** 		// Acceleration A1
 237:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 238:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_A1);
 239:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 240:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_A1, *value);
 241:boards/TMC5161_eval.c **** 		}
 242:boards/TMC5161_eval.c **** 		break;
 243:boards/TMC5161_eval.c **** 	case 16:
 244:boards/TMC5161_eval.c **** 		// Velocity V1
 245:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 246:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_V1);
 247:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 248:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_V1, *value);
 249:boards/TMC5161_eval.c **** 		}
 250:boards/TMC5161_eval.c **** 		break;
 251:boards/TMC5161_eval.c **** 	case 17:
 252:boards/TMC5161_eval.c **** 		// Maximum Deceleration
 253:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 254:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_DMAX);
 255:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 256:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_DMAX, *value);
 257:boards/TMC5161_eval.c **** 		}
 258:boards/TMC5161_eval.c **** 		break;
 259:boards/TMC5161_eval.c **** 	case 18:
 260:boards/TMC5161_eval.c **** 		// Deceleration D1
 261:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 262:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_D1);
 263:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 264:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_D1, *value);
 265:boards/TMC5161_eval.c **** 		}
 266:boards/TMC5161_eval.c **** 		break;
 267:boards/TMC5161_eval.c **** 	case 19:
 268:boards/TMC5161_eval.c **** 		// Velocity VSTART
 269:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 270:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VSTART);
 271:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 272:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_VSTART, *value);
 273:boards/TMC5161_eval.c **** 		}
 274:boards/TMC5161_eval.c **** 		break;
 275:boards/TMC5161_eval.c **** 	case 20:
 276:boards/TMC5161_eval.c **** 		// Velocity VSTOP
 277:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 278:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VSTOP);
 279:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 280:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_VSTOP, *value);
 281:boards/TMC5161_eval.c **** 		}
 282:boards/TMC5161_eval.c **** 		break;
 283:boards/TMC5161_eval.c **** 	case 21:
 284:boards/TMC5161_eval.c **** 		// Waiting time after ramp down
 285:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 286:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_TZEROWAIT);
 287:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 288:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TZEROWAIT, *value);
 289:boards/TMC5161_eval.c **** 		}
 290:boards/TMC5161_eval.c **** 		break;
 291:boards/TMC5161_eval.c **** 	case 23:
 292:boards/TMC5161_eval.c **** 		// Speed threshold for high speed mode
 293:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 294:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_THIGH);
 295:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 296:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 297:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((*value)? *value:1));
 298:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_THIGH, *value);
 299:boards/TMC5161_eval.c **** 		}
 300:boards/TMC5161_eval.c **** 		break;
 301:boards/TMC5161_eval.c **** 	case 24:
 302:boards/TMC5161_eval.c **** 		// Minimum speed for switching to dcStep
 303:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 304:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VDCMIN);
 305:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 306:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_VDCMIN, *value);
 307:boards/TMC5161_eval.c **** 		}
 308:boards/TMC5161_eval.c **** 		break;
 309:boards/TMC5161_eval.c **** 	case 27:
 310:boards/TMC5161_eval.c **** 		// High speed chopper mode
 311:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 312:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHCHM_MASK, TMC5161_V
 313:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 314:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHCHM_MASK, TMC5161_VHIGHCHM
 315:boards/TMC5161_eval.c **** 		}
 316:boards/TMC5161_eval.c **** 		break;
 317:boards/TMC5161_eval.c **** 	case 28:
 318:boards/TMC5161_eval.c **** 		// High speed fullstep mode
 319:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 320:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHFS_MASK, TMC5161_VH
 321:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 322:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHFS_MASK, TMC5161_VHIGHFS_S
 323:boards/TMC5161_eval.c **** 		}
 324:boards/TMC5161_eval.c **** 		break;
 325:boards/TMC5161_eval.c **** 	case 29:
 326:boards/TMC5161_eval.c **** 		// Measured Speed
 327:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 328:boards/TMC5161_eval.c **** 			*value = TMC5161.velocity;
 329:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 330:boards/TMC5161_eval.c **** 			errors |= TMC_ERROR_TYPE;
 331:boards/TMC5161_eval.c **** 		}
 332:boards/TMC5161_eval.c **** 		break;
 333:boards/TMC5161_eval.c **** 	case 33:
 334:boards/TMC5161_eval.c **** 		// Analog I Scale
 335:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 336:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_GCONF, TMC5161_RECALIBRATE_MASK, TMC5161_R
 337:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 338:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_GCONF, TMC5161_RECALIBRATE_MASK, TMC5161_RECALIBR
 339:boards/TMC5161_eval.c **** 		}
 340:boards/TMC5161_eval.c **** 		break;
 341:boards/TMC5161_eval.c **** 	case 34:
 342:boards/TMC5161_eval.c **** 		// Internal RSense
 343:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 344:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_GCONF, TMC5161_REFR_DIR_MASK, TMC5161_REFR
 345:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 346:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_GCONF, TMC5161_REFR_DIR_MASK, TMC5161_REFR_DIR_SH
 347:boards/TMC5161_eval.c **** 		}
 348:boards/TMC5161_eval.c **** 		break;
 349:boards/TMC5161_eval.c **** 	case 140:
 350:boards/TMC5161_eval.c **** 		// Microstep Resolution
 351:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 352:boards/TMC5161_eval.c **** 			*value = 0x100 >> TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_MRES_MASK, TMC5
 353:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 354:boards/TMC5161_eval.c **** 			switch(*value)
 355:boards/TMC5161_eval.c **** 			{
 356:boards/TMC5161_eval.c **** 				case 1:    *value = 8;   break;
 357:boards/TMC5161_eval.c **** 				case 2:    *value = 7;   break;
 358:boards/TMC5161_eval.c **** 				case 4:    *value = 6;   break;
 359:boards/TMC5161_eval.c **** 				case 8:    *value = 5;   break;
 360:boards/TMC5161_eval.c **** 				case 16:   *value = 4;   break;
 361:boards/TMC5161_eval.c **** 				case 32:   *value = 3;   break;
 362:boards/TMC5161_eval.c **** 				case 64:   *value = 2;   break;
 363:boards/TMC5161_eval.c **** 				case 128:  *value = 1;   break;
 364:boards/TMC5161_eval.c **** 				case 256:  *value = 0;   break;
 365:boards/TMC5161_eval.c **** 				default:   *value = -1;  break;
 366:boards/TMC5161_eval.c **** 			}
 367:boards/TMC5161_eval.c **** 
 368:boards/TMC5161_eval.c **** 			if(*value != -1)
 369:boards/TMC5161_eval.c **** 			{
 370:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_MRES_MASK, TMC5161_MRES_SHIFT,
 371:boards/TMC5161_eval.c **** 			}
 372:boards/TMC5161_eval.c **** 			else
 373:boards/TMC5161_eval.c **** 			{
 374:boards/TMC5161_eval.c **** 				errors |= TMC_ERROR_VALUE;
 375:boards/TMC5161_eval.c **** 			}
 376:boards/TMC5161_eval.c **** 		}
 377:boards/TMC5161_eval.c **** 		break;
 378:boards/TMC5161_eval.c **** 	case 162:
 379:boards/TMC5161_eval.c **** 		// Chopper blank time
 380:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 381:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TBL_MASK, TMC5161_TBL_SH
 382:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 383:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TBL_MASK, TMC5161_TBL_SHIFT, *v
 384:boards/TMC5161_eval.c **** 		}
 385:boards/TMC5161_eval.c **** 		break;
 386:boards/TMC5161_eval.c **** 	case 163:
 387:boards/TMC5161_eval.c **** 		// Constant TOff Mode
 388:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 389:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_CHM_MASK, TMC5161_CHM_SH
 390:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 391:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_CHM_MASK, TMC5161_CHM_SHIFT, *v
 392:boards/TMC5161_eval.c **** 		}
 393:boards/TMC5161_eval.c **** 		break;
 394:boards/TMC5161_eval.c **** 	case 164:
 395:boards/TMC5161_eval.c **** 		// Disable fast decay comparator
 396:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 397:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_DISFDCC_MASK, TMC5161_DI
 398:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 399:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_DISFDCC_MASK, TMC5161_DISFDCC_S
 400:boards/TMC5161_eval.c **** 		}
 401:boards/TMC5161_eval.c **** 		break;
 402:boards/TMC5161_eval.c **** 	case 165:
 403:boards/TMC5161_eval.c **** 		// Chopper hysteresis end / fast decay time
 404:boards/TMC5161_eval.c **** 		buffer = tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF);
 405:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 406:boards/TMC5161_eval.c **** 			if(buffer & (1 << TMC5161_CHM_SHIFT))
 407:boards/TMC5161_eval.c **** 			{
 408:boards/TMC5161_eval.c **** 				*value = (buffer >> TMC5161_HEND_SHIFT) & TMC5161_HEND_MASK;
 409:boards/TMC5161_eval.c **** 			}
 410:boards/TMC5161_eval.c **** 			else
 411:boards/TMC5161_eval.c **** 			{
 412:boards/TMC5161_eval.c **** 				*value = (tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF) >> TMC5161_TFD_ALL_SHIFT) & TMC51
 413:boards/TMC5161_eval.c **** 				if(buffer & TMC5161_TFD_3_SHIFT)
 414:boards/TMC5161_eval.c **** 					*value |= 1<<3; // MSB wird zu value dazugefügt
 415:boards/TMC5161_eval.c **** 			}
 416:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 417:boards/TMC5161_eval.c **** 			if(tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF) & (1<<14))
 418:boards/TMC5161_eval.c **** 			{
 419:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_HEND_MASK, TMC5161_HEND_SHIFT,
 420:boards/TMC5161_eval.c **** 			}
 421:boards/TMC5161_eval.c **** 			else
 422:boards/TMC5161_eval.c **** 			{
 423:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TFD_3_MASK, TMC5161_TFD_3_SHIF
 424:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TFD_ALL_MASK, TMC5161_TFD_ALL_
 425:boards/TMC5161_eval.c **** 			}
 426:boards/TMC5161_eval.c **** 		}
 427:boards/TMC5161_eval.c **** 		break;
 428:boards/TMC5161_eval.c **** 	case 166:
 429:boards/TMC5161_eval.c **** 		// Chopper hysteresis start / sine wave offset
 430:boards/TMC5161_eval.c **** 		buffer = tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF);
 431:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 432:boards/TMC5161_eval.c **** 			if(buffer & (1 << TMC5161_CHM_SHIFT))
 433:boards/TMC5161_eval.c **** 			{
 434:boards/TMC5161_eval.c **** 				*value = (buffer >> TMC5161_HSTRT_SHIFT) & TMC5161_HSTRT_MASK;
 435:boards/TMC5161_eval.c **** 			}
 436:boards/TMC5161_eval.c **** 			else
 437:boards/TMC5161_eval.c **** 			{
 438:boards/TMC5161_eval.c **** 				*value = (buffer >> TMC5161_OFFSET_SHIFT) & TMC5161_OFFSET_MASK;
 439:boards/TMC5161_eval.c **** 				if(buffer & (1 << TMC5161_TFD_3_SHIFT))
 440:boards/TMC5161_eval.c **** 					*value |= 1<<3; // MSB wird zu value dazugefügt
 441:boards/TMC5161_eval.c **** 			}
 442:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 443:boards/TMC5161_eval.c **** 			if(buffer & (1 << TMC5161_CHM_SHIFT))
 444:boards/TMC5161_eval.c **** 			{
 445:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_HSTRT_MASK, TMC5161_HSTRT_SHIF
 446:boards/TMC5161_eval.c **** 			}
 447:boards/TMC5161_eval.c **** 			else
 448:boards/TMC5161_eval.c **** 			{
 449:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_OFFSET_MASK, TMC5161_OFFSET_SH
 450:boards/TMC5161_eval.c **** 			}
 451:boards/TMC5161_eval.c **** 		}
 452:boards/TMC5161_eval.c **** 		break;
 453:boards/TMC5161_eval.c **** 	case 167:
 454:boards/TMC5161_eval.c **** 		// Chopper off time
 455:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 456:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TOFF_MASK, TMC5161_TOFF_
 457:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 458:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TOFF_MASK, TMC5161_TOFF_SHIFT, 
 459:boards/TMC5161_eval.c **** 		}
 460:boards/TMC5161_eval.c **** 		break;
 461:boards/TMC5161_eval.c **** 	case 168:
 462:boards/TMC5161_eval.c **** 		// smartEnergy current minimum (SEIMIN)
 463:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 464:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEIMIN_MASK, TMC5161_SEI
 465:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 466:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEIMIN_MASK, TMC5161_SEIMIN_SHI
 467:boards/TMC5161_eval.c **** 		}
 468:boards/TMC5161_eval.c **** 		break;
 469:boards/TMC5161_eval.c **** 	case 169:
 470:boards/TMC5161_eval.c **** 		// smartEnergy current down step
 471:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 472:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEDN_MASK, TMC5161_SEDN_
 473:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 474:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEDN_MASK, TMC5161_SEDN_SHIFT, 
 475:boards/TMC5161_eval.c **** 		}
 476:boards/TMC5161_eval.c **** 		break;
 477:boards/TMC5161_eval.c **** 	case 170:
 478:boards/TMC5161_eval.c **** 		// smartEnergy hysteresis
 479:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 480:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMAX_MASK, TMC5161_SEMA
 481:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 482:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMAX_MASK, TMC5161_SEMAX_SHIFT
 483:boards/TMC5161_eval.c **** 		}
 484:boards/TMC5161_eval.c **** 		break;
 485:boards/TMC5161_eval.c **** 	case 171:
 486:boards/TMC5161_eval.c **** 		// smartEnergy current up step
 487:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 488:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEUP_MASK, TMC5161_SEUP_
 489:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 490:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEUP_MASK, TMC5161_SEUP_SHIFT, 
 491:boards/TMC5161_eval.c **** 		}
 492:boards/TMC5161_eval.c **** 		break;
 493:boards/TMC5161_eval.c **** 	case 172:
 494:boards/TMC5161_eval.c **** 		// smartEnergy hysteresis start
 495:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 496:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMIN_MASK, TMC5161_SEMI
 497:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 498:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMIN_MASK, TMC5161_SEMIN_SHIFT
 499:boards/TMC5161_eval.c **** 		}
 500:boards/TMC5161_eval.c **** 		break;
 501:boards/TMC5161_eval.c **** 	case 173:
 502:boards/TMC5161_eval.c **** 		// stallGuard2 filter enable
 503:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 504:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SFILT_MASK, TMC5161_SFIL
 505:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 506:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SFILT_MASK, TMC5161_SFILT_SHIFT
 507:boards/TMC5161_eval.c **** 		}
 508:boards/TMC5161_eval.c **** 		break;
 509:boards/TMC5161_eval.c **** 	case 174:
 510:boards/TMC5161_eval.c **** 		// stallGuard2 threshold
 511:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 512:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SGT_MASK, TMC5161_SGT_SH
 513:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 514:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 515:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SGT_MASK, TMC5161_SGT_SHIFT, *v
 516:boards/TMC5161_eval.c **** 		}
 517:boards/TMC5161_eval.c **** 		break;
 518:boards/TMC5161_eval.c **** 	case 180:
 519:boards/TMC5161_eval.c **** 		// smartEnergy actual current
 520:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 521:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_DRVSTATUS, TMC5161_CS_ACTUAL_MASK, TMC5161
 522:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 523:boards/TMC5161_eval.c **** 			errors |= TMC_ERROR_TYPE;
 524:boards/TMC5161_eval.c **** 		}
 525:boards/TMC5161_eval.c **** 		break;
 526:boards/TMC5161_eval.c **** 	case 181:
 527:boards/TMC5161_eval.c **** 		// smartEnergy stall velocity
 528:boards/TMC5161_eval.c **** 		//this function sort of doubles with 182 but is necessary to allow cross chip compliance
 529:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 530:boards/TMC5161_eval.c **** 			if(TMC5161_FIELD_READ(motorToIC(motor), TMC5161_SWMODE, TMC5161_SG_STOP_MASK, TMC5161_SG_STOP_SH
 531:boards/TMC5161_eval.c **** 			{
 532:boards/TMC5161_eval.c **** 				buffer = tmc5161_readInt(motorToIC(motor), TMC5161_TCOOLTHRS);
 533:boards/TMC5161_eval.c **** 				*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 534:boards/TMC5161_eval.c **** 			}
 535:boards/TMC5161_eval.c **** 			else
 536:boards/TMC5161_eval.c **** 			{
 537:boards/TMC5161_eval.c **** 				*value = 0;
 538:boards/TMC5161_eval.c **** 			}
 539:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 540:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_SWMODE, TMC5161_SG_STOP_MASK, TMC5161_SG_STOP_SHI
 541:boards/TMC5161_eval.c **** 
 542:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 543:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 544:boards/TMC5161_eval.c **** 		}
 545:boards/TMC5161_eval.c **** 		break;
 546:boards/TMC5161_eval.c **** 	case 182:
 547:boards/TMC5161_eval.c **** 		// smartEnergy threshold speed
 548:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 549:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_TCOOLTHRS);
 550:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 551:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 552:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 553:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 554:boards/TMC5161_eval.c **** 		}
 555:boards/TMC5161_eval.c **** 		break;
 556:boards/TMC5161_eval.c **** 	case 184:
 557:boards/TMC5161_eval.c **** 		// Random TOff mode
 558:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 559:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_RNDTF_MASK, TMC5161_RNDT
 560:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 561:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_RNDTF_MASK, TMC5161_RNDTF_SHIFT
 562:boards/TMC5161_eval.c **** 		}
 563:boards/TMC5161_eval.c **** 		break;
 564:boards/TMC5161_eval.c **** 	case 185:
 565:boards/TMC5161_eval.c **** 		// Chopper synchronization
 566:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 567:boards/TMC5161_eval.c **** 			*value = (tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF) >> 20) & 0x0F;
 568:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 569:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF);
 570:boards/TMC5161_eval.c **** 			buffer &= ~(0x0F<<20);
 571:boards/TMC5161_eval.c **** 			buffer |= (*value & 0x0F) << 20;
 572:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_CHOPCONF,buffer);
 573:boards/TMC5161_eval.c **** 		}
 574:boards/TMC5161_eval.c **** 		break;
 575:boards/TMC5161_eval.c **** 	case 186:
 576:boards/TMC5161_eval.c **** 		// PWM threshold speed
 577:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 578:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_TPWMTHRS);
 579:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 580:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 581:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 582:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TPWMTHRS, *value);
 583:boards/TMC5161_eval.c **** 		}
 584:boards/TMC5161_eval.c **** 		break;
 585:boards/TMC5161_eval.c **** 	case 187:
 586:boards/TMC5161_eval.c **** 		// PWM gradient
 587:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 588:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_GRAD_MASK, TMC5161_PW
 589:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 590:boards/TMC5161_eval.c **** 			// Set gradient
 591:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_GRAD_MASK, TMC5161_PWM_GRAD_
 592:boards/TMC5161_eval.c **** 			// Enable/disable stealthChop accordingly
 593:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_GCONF, TMC5161_EN_PWM_MODE_MASK, TMC5161_EN_PWM_M
 594:boards/TMC5161_eval.c **** 		}
 595:boards/TMC5161_eval.c **** 		break;
 596:boards/TMC5161_eval.c **** 	case 188:
 597:boards/TMC5161_eval.c **** 		// PWM amplitude
 598:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 599:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_OFS_MASK, TMC5161_PWM
 600:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 601:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_PWMCONF, TMC5161_GLOBAL_SCALER_MASK, TMC5161_GLOB
 602:boards/TMC5161_eval.c **** 		}
 603:boards/TMC5161_eval.c **** 		break;
 604:boards/TMC5161_eval.c **** 	case 191:
 605:boards/TMC5161_eval.c **** 		// PWM frequency
 606:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 607:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_FREQ_MASK, TMC5161_PW
 608:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 609:boards/TMC5161_eval.c **** 			if(*value >= 0 && *value < 4)
 610:boards/TMC5161_eval.c **** 			{
 611:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_FREQ_MASK, TMC5161_PWM_FREQ
 612:boards/TMC5161_eval.c **** 			}
 613:boards/TMC5161_eval.c **** 			else
 614:boards/TMC5161_eval.c **** 			{
 615:boards/TMC5161_eval.c **** 				errors |= TMC_ERROR_VALUE;
 616:boards/TMC5161_eval.c **** 			}
 617:boards/TMC5161_eval.c **** 		}
 618:boards/TMC5161_eval.c **** 		break;
 619:boards/TMC5161_eval.c **** 	case 192:
 620:boards/TMC5161_eval.c **** 		// PWM autoscale
 621:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 622:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_AUTOSCALE_MASK, TMC51
 623:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 624:boards/TMC5161_eval.c **** 			if(*value >= 0 && *value < 2)
 625:boards/TMC5161_eval.c **** 			{
 626:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_AUTOSCALE_MASK, TMC5161_PWM
 627:boards/TMC5161_eval.c **** 			}
 628:boards/TMC5161_eval.c **** 			else
 629:boards/TMC5161_eval.c **** 			{
 630:boards/TMC5161_eval.c **** 				errors |= TMC_ERROR_VALUE;
 631:boards/TMC5161_eval.c **** 			}
 632:boards/TMC5161_eval.c **** 		}
 633:boards/TMC5161_eval.c **** 		break;
 634:boards/TMC5161_eval.c **** 	case 204:
 635:boards/TMC5161_eval.c **** 		// Freewheeling mode
 636:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 637:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_FREEWHEEL_MASK, TMC5161_F
 638:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 639:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_PWMCONF, TMC5161_FREEWHEEL_MASK, TMC5161_FREEWHEE
 640:boards/TMC5161_eval.c **** 		}
 641:boards/TMC5161_eval.c **** 		break;
 642:boards/TMC5161_eval.c **** 	case 206:
 643:boards/TMC5161_eval.c **** 		// Load value
 644:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 645:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_DRVSTATUS, TMC5161_SG_RESULT_MASK, TMC5161
 646:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 647:boards/TMC5161_eval.c **** 			errors |= TMC_ERROR_TYPE;
 648:boards/TMC5161_eval.c **** 		}
 649:boards/TMC5161_eval.c **** 		break;
 650:boards/TMC5161_eval.c **** 	case 209:
 651:boards/TMC5161_eval.c **** 		// Encoder position
 652:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 653:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_XENC);
 654:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 655:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_XENC, *value);
 656:boards/TMC5161_eval.c **** 		}
 657:boards/TMC5161_eval.c **** 		break;
 658:boards/TMC5161_eval.c **** 	case 210:
 659:boards/TMC5161_eval.c **** 		// Encoder Resolution
 660:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 661:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_ENC_CONST);
 662:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 663:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_ENC_CONST, *value);
 664:boards/TMC5161_eval.c **** 		}
 665:boards/TMC5161_eval.c **** 		break;
 666:boards/TMC5161_eval.c **** 	default:
 667:boards/TMC5161_eval.c **** 		errors |= TMC_ERROR_TYPE;
 668:boards/TMC5161_eval.c **** 		break;
 669:boards/TMC5161_eval.c **** 	}
 670:boards/TMC5161_eval.c **** 	return errors;
 671:boards/TMC5161_eval.c **** }
 672:boards/TMC5161_eval.c **** 
 673:boards/TMC5161_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 674:boards/TMC5161_eval.c **** {
 675:boards/TMC5161_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 676:boards/TMC5161_eval.c **** }
 677:boards/TMC5161_eval.c **** 
 678:boards/TMC5161_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 679:boards/TMC5161_eval.c **** {
 680:boards/TMC5161_eval.c **** 	return handleParameter(READ, motor, type, value);
 681:boards/TMC5161_eval.c **** }
 682:boards/TMC5161_eval.c **** 
 683:boards/TMC5161_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value)
 684:boards/TMC5161_eval.c **** {
  26              		.loc 1 684 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 685:boards/TMC5161_eval.c **** 	if(motor >= TMC5161_MOTORS)
  31              		.loc 1 685 2 view .LVU1
  32              		.loc 1 685 4 is_stmt 0 view .LVU2
  33 0000 18B9     		cbnz	r0, .L3
 686:boards/TMC5161_eval.c **** 		return TMC_ERROR_MOTOR;
 687:boards/TMC5161_eval.c **** 
 688:boards/TMC5161_eval.c **** 	*value = TMC5161.velocity;
  34              		.loc 1 688 2 is_stmt 1 view .LVU3
  35              		.loc 1 688 18 is_stmt 0 view .LVU4
  36 0002 034B     		ldr	r3, .L4
  37              		.loc 1 688 9 view .LVU5
  38 0004 5B68     		ldr	r3, [r3, #4]
  39 0006 0B60     		str	r3, [r1]
 689:boards/TMC5161_eval.c **** 
 690:boards/TMC5161_eval.c **** 	return TMC_ERROR_NONE;
  40              		.loc 1 690 2 is_stmt 1 view .LVU6
  41              		.loc 1 690 9 is_stmt 0 view .LVU7
  42 0008 7047     		bx	lr
  43              	.L3:
 686:boards/TMC5161_eval.c **** 		return TMC_ERROR_MOTOR;
  44              		.loc 1 686 10 view .LVU8
  45 000a 0820     		movs	r0, #8
  46              	.LVL1:
 691:boards/TMC5161_eval.c **** }
  47              		.loc 1 691 1 view .LVU9
  48 000c 7047     		bx	lr
  49              	.L5:
  50 000e 00BF     		.align	2
  51              	.L4:
  52 0010 00000000 		.word	.LANCHOR0
  53              		.cfi_endproc
  54              	.LFE13:
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	checkErrors:
  63              	.LVL2:
  64              	.LFB17:
 692:boards/TMC5161_eval.c **** 
 693:boards/TMC5161_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
 694:boards/TMC5161_eval.c **** {
 695:boards/TMC5161_eval.c **** 	UNUSED(motor);
 696:boards/TMC5161_eval.c **** 	tmc5161_writeInt(&TMC5161, address, value);
 697:boards/TMC5161_eval.c **** }
 698:boards/TMC5161_eval.c **** 
 699:boards/TMC5161_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
 700:boards/TMC5161_eval.c **** {
 701:boards/TMC5161_eval.c **** 	UNUSED(motor);
 702:boards/TMC5161_eval.c **** 	*value = tmc5161_readInt(&TMC5161, address);
 703:boards/TMC5161_eval.c **** }
 704:boards/TMC5161_eval.c **** 
 705:boards/TMC5161_eval.c **** static void periodicJob(uint32_t tick)
 706:boards/TMC5161_eval.c **** {
 707:boards/TMC5161_eval.c **** 	tmc5161_periodicJob(&TMC5161, tick);
 708:boards/TMC5161_eval.c **** }
 709:boards/TMC5161_eval.c **** 
 710:boards/TMC5161_eval.c **** static void checkErrors(uint32_t tick)
 711:boards/TMC5161_eval.c **** {
  65              		.loc 1 711 1 is_stmt 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
 712:boards/TMC5161_eval.c **** 	UNUSED(tick);
  70              		.loc 1 712 2 view .LVU11
 713:boards/TMC5161_eval.c **** 	Evalboards.ch1.errors = 0;
  71              		.loc 1 713 2 view .LVU12
  72              		.loc 1 713 24 is_stmt 0 view .LVU13
  73 0014 014B     		ldr	r3, .L7
  74 0016 0022     		movs	r2, #0
  75 0018 9A60     		str	r2, [r3, #8]
 714:boards/TMC5161_eval.c **** }
  76              		.loc 1 714 1 view .LVU14
  77 001a 7047     		bx	lr
  78              	.L8:
  79              		.align	2
  80              	.L7:
  81 001c 00000000 		.word	Evalboards
  82              		.cfi_endproc
  83              	.LFE17:
  85              		.align	1
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu softvfp
  91              	userFunction:
  92              	.LVL3:
  93              	.LFB18:
 715:boards/TMC5161_eval.c **** 
 716:boards/TMC5161_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 717:boards/TMC5161_eval.c **** {
  94              		.loc 1 717 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
 718:boards/TMC5161_eval.c **** 	uint32_t buffer;
  98              		.loc 1 718 2 view .LVU16
 719:boards/TMC5161_eval.c **** 	uint32_t errors = 0;
  99              		.loc 1 719 2 view .LVU17
 720:boards/TMC5161_eval.c **** 
 721:boards/TMC5161_eval.c **** 	UNUSED(motor);
 100              		.loc 1 721 2 view .LVU18
 722:boards/TMC5161_eval.c **** 
 723:boards/TMC5161_eval.c **** 	switch(type)
 101              		.loc 1 723 2 view .LVU19
 102 0020 0628     		cmp	r0, #6
 717:boards/TMC5161_eval.c **** 	uint32_t buffer;
 103              		.loc 1 717 1 is_stmt 0 view .LVU20
 104 0022 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 105              	.LCFI0:
 106              		.cfi_def_cfa_offset 24
 107              		.cfi_offset 3, -24
 108              		.cfi_offset 4, -20
 109              		.cfi_offset 5, -16
 110              		.cfi_offset 6, -12
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 717:boards/TMC5161_eval.c **** 	uint32_t buffer;
 113              		.loc 1 717 1 view .LVU21
 114 0024 0C46     		mov	r4, r1
 115 0026 1546     		mov	r5, r2
 116              		.loc 1 723 2 view .LVU22
 117 0028 07D8     		bhi	.L10
 118 002a 0628     		cmp	r0, #6
 119 002c 08D8     		bhi	.L31
 120 002e DFE800F0 		tbb	[pc, r0]
 121              	.LVL4:
 122              	.L13:
 123 0032 09       		.byte	(.L18-.L13)/2
 124 0033 07       		.byte	(.L31-.L13)/2
 125 0034 33       		.byte	(.L17-.L13)/2
 126 0035 45       		.byte	(.L16-.L13)/2
 127 0036 5B       		.byte	(.L15-.L13)/2
 128 0037 7C       		.byte	(.L14-.L13)/2
 129 0038 89       		.byte	(.L12-.L13)/2
 130 0039 00       		.p2align 1
 131              	.L10:
 132              		.loc 1 723 2 view .LVU23
 133 003a FC28     		cmp	r0, #252
 134 003c 00F08A80 		beq	.L19
 135              	.LVL5:
 136              	.L31:
 137              		.loc 1 723 2 view .LVU24
 138 0040 0424     		movs	r4, #4
 139 0042 18E0     		b	.L9
 140              	.L18:
 724:boards/TMC5161_eval.c **** 	{
 725:boards/TMC5161_eval.c **** 	case 0:  // simulate reference switches, set high to support external ref swiches
 726:boards/TMC5161_eval.c **** 		/*
 727:boards/TMC5161_eval.c **** 		 * The the TMC5161 ref switch input is pulled high by external resistor an can be pulled low eith
 728:boards/TMC5161_eval.c **** 		 * this µC or external signal. To use external signal make sure the signals from µC are high or
 729:boards/TMC5161_eval.c **** 		 */
 730:boards/TMC5161_eval.c **** 		if(!(*value & ~3))
 141              		.loc 1 730 3 is_stmt 1 view .LVU25
 142              		.loc 1 730 8 is_stmt 0 view .LVU26
 143 0044 2A68     		ldr	r2, [r5]
 144              		.loc 1 730 5 view .LVU27
 145 0046 32F00303 		bics	r3, r2, #3
 146 004a 40F09480 		bne	.L32
 731:boards/TMC5161_eval.c **** 		{
 732:boards/TMC5161_eval.c **** 			if(*value & (1<<0))
 147              		.loc 1 732 4 is_stmt 1 view .LVU28
 148 004e 4B4B     		ldr	r3, .L40
 149 0050 4B4E     		ldr	r6, .L40+4
 150 0052 DF68     		ldr	r7, [r3, #12]
 151 0054 D6F89402 		ldr	r0, [r6, #660]
 152              	.LVL6:
 153              		.loc 1 732 4 is_stmt 0 view .LVU29
 154 0058 3B68     		ldr	r3, [r7]
 155              		.loc 1 732 6 view .LVU30
 156 005a D207     		lsls	r2, r2, #31
 157 005c 0DD5     		bpl	.L20
 733:boards/TMC5161_eval.c **** 			{
 734:boards/TMC5161_eval.c **** 				HAL.IOs->config->toInput(Pins.REFR_UC); // pull up -> set it to floating causes high
 158              		.loc 1 734 5 is_stmt 1 view .LVU31
 159 005e 1B69     		ldr	r3, [r3, #16]
 160              	.LVL7:
 161              	.L34:
 735:boards/TMC5161_eval.c **** 			}
 736:boards/TMC5161_eval.c **** 			else
 737:boards/TMC5161_eval.c **** 			{
 738:boards/TMC5161_eval.c **** 				HAL.IOs->config->toOutput(Pins.REFR_UC);
 739:boards/TMC5161_eval.c **** 				HAL.IOs->config->setLow(Pins.REFR_UC);
 162              		.loc 1 739 5 is_stmt 0 view .LVU32
 163 0060 9847     		blx	r3
 164              	.LVL8:
 740:boards/TMC5161_eval.c **** 			}
 741:boards/TMC5161_eval.c **** 
 742:boards/TMC5161_eval.c **** 			if(*value & (1<<1))
 165              		.loc 1 742 4 is_stmt 1 view .LVU33
 166              		.loc 1 742 14 is_stmt 0 view .LVU34
 167 0062 2C68     		ldr	r4, [r5]
 168 0064 3B68     		ldr	r3, [r7]
 169 0066 D6F89002 		ldr	r0, [r6, #656]
 170              		.loc 1 742 6 view .LVU35
 171 006a 14F00204 		ands	r4, r4, #2
 172 006e 0BD0     		beq	.L22
 743:boards/TMC5161_eval.c **** 			{
 744:boards/TMC5161_eval.c **** 				HAL.IOs->config->toInput(Pins.REFL_UC); // pull up -> set it to floating causes high
 173              		.loc 1 744 5 is_stmt 1 view .LVU36
 174 0070 1B69     		ldr	r3, [r3, #16]
 175              	.L36:
 745:boards/TMC5161_eval.c **** 			}
 746:boards/TMC5161_eval.c **** 			else
 747:boards/TMC5161_eval.c **** 			{
 748:boards/TMC5161_eval.c **** 				HAL.IOs->config->toOutput(Pins.REFL_UC);
 749:boards/TMC5161_eval.c **** 				HAL.IOs->config->setLow(Pins.REFL_UC);
 750:boards/TMC5161_eval.c **** 			}
 751:boards/TMC5161_eval.c **** 		}
 752:boards/TMC5161_eval.c **** 		else
 753:boards/TMC5161_eval.c **** 		{
 754:boards/TMC5161_eval.c **** 			errors |= TMC_ERROR_VALUE;
 755:boards/TMC5161_eval.c **** 		}
 756:boards/TMC5161_eval.c **** 		break;
 757:boards/TMC5161_eval.c **** //	case 1:  // set analogue current duty
 758:boards/TMC5161_eval.c **** //		/*
 759:boards/TMC5161_eval.c **** //		 * Current will be defined by analogue *value voltage or current signal. In any case this funct
 760:boards/TMC5161_eval.c **** //		 * will generate a analogue voltage by PWM for up to 50% duty and a switch for the other 50%.
 761:boards/TMC5161_eval.c **** //		 * The reference voltage will be AIN_REF = VCC_IO * *value/20000 with *value = {0..20000}
 762:boards/TMC5161_eval.c **** //		 */
 763:boards/TMC5161_eval.c **** //
 764:boards/TMC5161_eval.c **** //		buffer = (uint32_t) *value;
 765:boards/TMC5161_eval.c **** //
 766:boards/TMC5161_eval.c **** //		if(buffer <= 20000)
 767:boards/TMC5161_eval.c **** //		{
 768:boards/TMC5161_eval.c **** //			if(buffer > 10000)HAL.IOs->config->setHigh(Pins.AIN_REF_SW);
 769:boards/TMC5161_eval.c **** //			else HAL.IOs->config->setLow(Pins.AIN_REF_SW);
 770:boards/TMC5161_eval.c **** //
 771:boards/TMC5161_eval.c **** //			Timer.setDuty(buffer%10001);
 772:boards/TMC5161_eval.c **** //		}
 773:boards/TMC5161_eval.c **** //		else errors |= TMC_ERROR_VALUE;
 774:boards/TMC5161_eval.c **** //		break;
 775:boards/TMC5161_eval.c **** 	case 2:  // Use internal clock
 776:boards/TMC5161_eval.c **** 		/*
 777:boards/TMC5161_eval.c **** 		 * Internel clock will be enabled by calling this function with a *value != 0 and unpower and rep
 778:boards/TMC5161_eval.c **** 		 */
 779:boards/TMC5161_eval.c **** 		if(*value)
 780:boards/TMC5161_eval.c **** 		{
 781:boards/TMC5161_eval.c **** 			HAL.IOs->config->toOutput(&HAL.IOs->pins->CLK16);
 782:boards/TMC5161_eval.c **** 			HAL.IOs->config->setLow(&HAL.IOs->pins->CLK16);
 176              		.loc 1 782 4 is_stmt 0 view .LVU37
 177 0072 9847     		blx	r3
 178              	.LVL9:
 179              	.L37:
 719:boards/TMC5161_eval.c **** 
 180              		.loc 1 719 11 view .LVU38
 181 0074 0024     		movs	r4, #0
 182              	.LVL10:
 183              	.L9:
 783:boards/TMC5161_eval.c **** 		}
 784:boards/TMC5161_eval.c **** 		else
 785:boards/TMC5161_eval.c **** 		{
 786:boards/TMC5161_eval.c **** 			HAL.IOs->config->reset(&HAL.IOs->pins->CLK16);
 787:boards/TMC5161_eval.c **** 		}
 788:boards/TMC5161_eval.c **** 		break;
 789:boards/TMC5161_eval.c **** 	case 3: // Write/Read SD_MODE pin
 790:boards/TMC5161_eval.c **** 		if(motor)
 791:boards/TMC5161_eval.c **** 		{	// Write
 792:boards/TMC5161_eval.c **** 			// Use Bit 0 here explicitly to allow extension of the UF for more pins if ever needed
 793:boards/TMC5161_eval.c **** 			if(*value & 0x00000001)
 794:boards/TMC5161_eval.c **** 				HAL.IOs->config->setHigh(Pins.SD_MODE);
 795:boards/TMC5161_eval.c **** 			else
 796:boards/TMC5161_eval.c **** 				HAL.IOs->config->setLow(Pins.SD_MODE);
 797:boards/TMC5161_eval.c **** 		}
 798:boards/TMC5161_eval.c **** 		else
 799:boards/TMC5161_eval.c **** 		{	// Read
 800:boards/TMC5161_eval.c **** 			*value = (HAL.IOs->config->isHigh(Pins.SD_MODE))? 1:0;
 801:boards/TMC5161_eval.c **** 		}
 802:boards/TMC5161_eval.c **** 		break;
 803:boards/TMC5161_eval.c **** 	case 4:  // set or release/read ENCB_[DCEN_CFG4]
 804:boards/TMC5161_eval.c **** 		switch(buffer = *value)
 805:boards/TMC5161_eval.c **** 		{
 806:boards/TMC5161_eval.c **** 		case 0:
 807:boards/TMC5161_eval.c **** 			HAL.IOs->config->toOutput(Pins.ENCB_DCEN_CFG4);
 808:boards/TMC5161_eval.c **** 			HAL.IOs->config->setLow(Pins.ENCB_DCEN_CFG4);
 809:boards/TMC5161_eval.c **** 			break;
 810:boards/TMC5161_eval.c **** 		case 1:
 811:boards/TMC5161_eval.c **** 			HAL.IOs->config->toOutput(Pins.ENCB_DCEN_CFG4);
 812:boards/TMC5161_eval.c **** 			HAL.IOs->config->setHigh(Pins.ENCB_DCEN_CFG4);
 813:boards/TMC5161_eval.c **** 			break;
 814:boards/TMC5161_eval.c **** 		default:
 815:boards/TMC5161_eval.c **** 			HAL.IOs->config->toInput(Pins.ENCB_DCEN_CFG4);
 816:boards/TMC5161_eval.c **** 			buffer = HAL.IOs->config->isHigh(Pins.ENCB_DCEN_CFG4);;
 817:boards/TMC5161_eval.c **** 			break;
 818:boards/TMC5161_eval.c **** 		}
 819:boards/TMC5161_eval.c **** 		*value = buffer;
 820:boards/TMC5161_eval.c **** 		break;
 821:boards/TMC5161_eval.c **** 	case 5:  // read interrupt pin SWN_DIAG0
 822:boards/TMC5161_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.SWN_DIAG0))? 1:0;
 823:boards/TMC5161_eval.c **** 		break;
 824:boards/TMC5161_eval.c **** 	case 6:  // read interrupt pin SWP_DIAG1
 825:boards/TMC5161_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.SWP_DIAG1))? 1:0;
 826:boards/TMC5161_eval.c **** 		break;
 827:boards/TMC5161_eval.c **** //	case 7:  // enable single wire interface (SWSEL)
 828:boards/TMC5161_eval.c **** //			if(*value == 1) HAL.IOs->config->setHigh(Pins.SWSEL);
 829:boards/TMC5161_eval.c **** //			else HAL.IOs->config->setLow(Pins.SWSEL);
 830:boards/TMC5161_eval.c **** //		break;
 831:boards/TMC5161_eval.c **** 	case 252:
 832:boards/TMC5161_eval.c **** 		if(*value)
 833:boards/TMC5161_eval.c **** 		{
 834:boards/TMC5161_eval.c **** 			HAL.IOs->config->toOutput(Pins.ENCB_DCEN_CFG4);
 835:boards/TMC5161_eval.c **** 			HAL.IOs->config->setLow(Pins.ENCB_DCEN_CFG4);
 836:boards/TMC5161_eval.c **** 		}
 837:boards/TMC5161_eval.c **** 		else
 838:boards/TMC5161_eval.c **** 		{
 839:boards/TMC5161_eval.c **** 			HAL.IOs->config->toInput(Pins.ENCB_DCEN_CFG4);
 840:boards/TMC5161_eval.c **** 		}
 841:boards/TMC5161_eval.c **** 		break;
 842:boards/TMC5161_eval.c **** 	default:
 843:boards/TMC5161_eval.c **** 		errors |= TMC_ERROR_TYPE;
 844:boards/TMC5161_eval.c **** 		break;
 845:boards/TMC5161_eval.c **** 	}
 846:boards/TMC5161_eval.c **** 	return errors;
 847:boards/TMC5161_eval.c **** }
 184              		.loc 1 847 1 view .LVU39
 185 0076 2046     		mov	r0, r4
 186 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 187              	.LVL11:
 188              	.L20:
 738:boards/TMC5161_eval.c **** 				HAL.IOs->config->setLow(Pins.REFR_UC);
 189              		.loc 1 738 5 is_stmt 1 view .LVU40
 190 007a DB68     		ldr	r3, [r3, #12]
 191 007c 9847     		blx	r3
 192              	.LVL12:
 739:boards/TMC5161_eval.c **** 			}
 193              		.loc 1 739 5 view .LVU41
 739:boards/TMC5161_eval.c **** 			}
 194              		.loc 1 739 20 is_stmt 0 view .LVU42
 195 007e 3B68     		ldr	r3, [r7]
 739:boards/TMC5161_eval.c **** 			}
 196              		.loc 1 739 5 view .LVU43
 197 0080 D6F89402 		ldr	r0, [r6, #660]
 198 0084 9B69     		ldr	r3, [r3, #24]
 199 0086 EBE7     		b	.L34
 200              	.L22:
 748:boards/TMC5161_eval.c **** 				HAL.IOs->config->setLow(Pins.REFL_UC);
 201              		.loc 1 748 5 is_stmt 1 view .LVU44
 202 0088 DB68     		ldr	r3, [r3, #12]
 203 008a 9847     		blx	r3
 204              	.LVL13:
 749:boards/TMC5161_eval.c **** 			}
 205              		.loc 1 749 5 view .LVU45
 749:boards/TMC5161_eval.c **** 			}
 206              		.loc 1 749 20 is_stmt 0 view .LVU46
 207 008c 3B68     		ldr	r3, [r7]
 749:boards/TMC5161_eval.c **** 			}
 208              		.loc 1 749 5 view .LVU47
 209 008e D6F89002 		ldr	r0, [r6, #656]
 210 0092 9B69     		ldr	r3, [r3, #24]
 211              	.L38:
 839:boards/TMC5161_eval.c **** 		}
 212              		.loc 1 839 4 view .LVU48
 213 0094 9847     		blx	r3
 214              	.LVL14:
 215 0096 EEE7     		b	.L9
 216              	.LVL15:
 217              	.L17:
 779:boards/TMC5161_eval.c **** 		{
 218              		.loc 1 779 3 is_stmt 1 view .LVU49
 219 0098 384B     		ldr	r3, .L40
 779:boards/TMC5161_eval.c **** 		{
 220              		.loc 1 779 5 is_stmt 0 view .LVU50
 221 009a 2C68     		ldr	r4, [r5]
 222 009c DE68     		ldr	r6, [r3, #12]
 223 009e D6E90030 		ldrd	r3, r0, [r6]
 224              	.LVL16:
 779:boards/TMC5161_eval.c **** 		{
 225              		.loc 1 779 5 view .LVU51
 226 00a2 00F5F470 		add	r0, r0, #488
 227 00a6 3CB1     		cbz	r4, .L23
 781:boards/TMC5161_eval.c **** 			HAL.IOs->config->setLow(&HAL.IOs->pins->CLK16);
 228              		.loc 1 781 4 is_stmt 1 view .LVU52
 229 00a8 DB68     		ldr	r3, [r3, #12]
 230 00aa 9847     		blx	r3
 231              	.LVL17:
 782:boards/TMC5161_eval.c **** 		}
 232              		.loc 1 782 4 view .LVU53
 782:boards/TMC5161_eval.c **** 		}
 233              		.loc 1 782 19 is_stmt 0 view .LVU54
 234 00ac D6E90030 		ldrd	r3, r0, [r6]
 782:boards/TMC5161_eval.c **** 		}
 235              		.loc 1 782 4 view .LVU55
 236 00b0 9B69     		ldr	r3, [r3, #24]
 237 00b2 00F5F470 		add	r0, r0, #488
 238 00b6 DCE7     		b	.L36
 239              	.LVL18:
 240              	.L23:
 786:boards/TMC5161_eval.c **** 		}
 241              		.loc 1 786 4 is_stmt 1 view .LVU56
 242 00b8 9B68     		ldr	r3, [r3, #8]
 243 00ba EBE7     		b	.L38
 244              	.LVL19:
 245              	.L16:
 790:boards/TMC5161_eval.c **** 		{	// Write
 246              		.loc 1 790 3 view .LVU57
 247 00bc 304B     		ldr	r3, .L40+4
 248 00be D3F8A802 		ldr	r0, [r3, #680]
 249              	.LVL20:
 790:boards/TMC5161_eval.c **** 		{	// Write
 250              		.loc 1 790 3 is_stmt 0 view .LVU58
 251 00c2 2E4B     		ldr	r3, .L40
 252 00c4 DB68     		ldr	r3, [r3, #12]
 253 00c6 1B68     		ldr	r3, [r3]
 790:boards/TMC5161_eval.c **** 		{	// Write
 254              		.loc 1 790 5 view .LVU59
 255 00c8 39B1     		cbz	r1, .L24
 793:boards/TMC5161_eval.c **** 				HAL.IOs->config->setHigh(Pins.SD_MODE);
 256              		.loc 1 793 4 is_stmt 1 view .LVU60
 793:boards/TMC5161_eval.c **** 				HAL.IOs->config->setHigh(Pins.SD_MODE);
 257              		.loc 1 793 14 is_stmt 0 view .LVU61
 258 00ca 2C68     		ldr	r4, [r5]
 793:boards/TMC5161_eval.c **** 				HAL.IOs->config->setHigh(Pins.SD_MODE);
 259              		.loc 1 793 6 view .LVU62
 260 00cc 14F00104 		ands	r4, r4, #1
 261 00d0 01D0     		beq	.L25
 794:boards/TMC5161_eval.c **** 			else
 262              		.loc 1 794 5 is_stmt 1 view .LVU63
 263 00d2 5B69     		ldr	r3, [r3, #20]
 264 00d4 CDE7     		b	.L36
 265              	.L25:
 796:boards/TMC5161_eval.c **** 		}
 266              		.loc 1 796 5 view .LVU64
 267 00d6 9B69     		ldr	r3, [r3, #24]
 268 00d8 DCE7     		b	.L38
 269              	.L24:
 800:boards/TMC5161_eval.c **** 		}
 270              		.loc 1 800 4 view .LVU65
 800:boards/TMC5161_eval.c **** 		}
 271              		.loc 1 800 14 is_stmt 0 view .LVU66
 272 00da 5B6A     		ldr	r3, [r3, #36]
 273 00dc 9847     		blx	r3
 274              	.LVL21:
 800:boards/TMC5161_eval.c **** 		}
 275              		.loc 1 800 55 view .LVU67
 276 00de 0038     		subs	r0, r0, #0
 277 00e0 18BF     		it	ne
 278 00e2 0120     		movne	r0, #1
 800:boards/TMC5161_eval.c **** 		}
 279              		.loc 1 800 11 view .LVU68
 280 00e4 2860     		str	r0, [r5]
 281 00e6 C6E7     		b	.L9
 282              	.LVL22:
 283              	.L15:
 804:boards/TMC5161_eval.c **** 		{
 284              		.loc 1 804 3 is_stmt 1 view .LVU69
 285 00e8 244B     		ldr	r3, .L40
 286 00ea 254E     		ldr	r6, .L40+4
 287 00ec DF68     		ldr	r7, [r3, #12]
 804:boards/TMC5161_eval.c **** 		{
 288              		.loc 1 804 19 is_stmt 0 view .LVU70
 289 00ee 2C68     		ldr	r4, [r5]
 290              	.LVL23:
 804:boards/TMC5161_eval.c **** 		{
 291              		.loc 1 804 19 view .LVU71
 292 00f0 3B68     		ldr	r3, [r7]
 293 00f2 D6F8A002 		ldr	r0, [r6, #672]
 294              	.LVL24:
 804:boards/TMC5161_eval.c **** 		{
 295              		.loc 1 804 19 view .LVU72
 296 00f6 54B1     		cbz	r4, .L26
 297 00f8 012C     		cmp	r4, #1
 298 00fa 11D0     		beq	.L27
 815:boards/TMC5161_eval.c **** 			buffer = HAL.IOs->config->isHigh(Pins.ENCB_DCEN_CFG4);;
 299              		.loc 1 815 4 is_stmt 1 view .LVU73
 300 00fc 1B69     		ldr	r3, [r3, #16]
 301 00fe 9847     		blx	r3
 302              	.LVL25:
 816:boards/TMC5161_eval.c **** 			break;
 303              		.loc 1 816 4 view .LVU74
 816:boards/TMC5161_eval.c **** 			break;
 304              		.loc 1 816 28 is_stmt 0 view .LVU75
 305 0100 3B68     		ldr	r3, [r7]
 816:boards/TMC5161_eval.c **** 			break;
 306              		.loc 1 816 13 view .LVU76
 307 0102 D6F8A002 		ldr	r0, [r6, #672]
 308 0106 5B6A     		ldr	r3, [r3, #36]
 309 0108 9847     		blx	r3
 310              	.LVL26:
 311 010a 0446     		mov	r4, r0
 312              	.LVL27:
 816:boards/TMC5161_eval.c **** 			break;
 313              		.loc 1 816 58 is_stmt 1 view .LVU77
 817:boards/TMC5161_eval.c **** 		}
 314              		.loc 1 817 4 view .LVU78
 315 010c 06E0     		b	.L29
 316              	.LVL28:
 317              	.L26:
 807:boards/TMC5161_eval.c **** 			HAL.IOs->config->setLow(Pins.ENCB_DCEN_CFG4);
 318              		.loc 1 807 4 view .LVU79
 319 010e DB68     		ldr	r3, [r3, #12]
 320 0110 9847     		blx	r3
 321              	.LVL29:
 808:boards/TMC5161_eval.c **** 			break;
 322              		.loc 1 808 4 view .LVU80
 808:boards/TMC5161_eval.c **** 			break;
 323              		.loc 1 808 19 is_stmt 0 view .LVU81
 324 0112 3B68     		ldr	r3, [r7]
 808:boards/TMC5161_eval.c **** 			break;
 325              		.loc 1 808 4 view .LVU82
 326 0114 9B69     		ldr	r3, [r3, #24]
 327              	.L35:
 812:boards/TMC5161_eval.c **** 			break;
 328              		.loc 1 812 4 view .LVU83
 329 0116 D6F8A002 		ldr	r0, [r6, #672]
 330 011a 9847     		blx	r3
 331              	.LVL30:
 813:boards/TMC5161_eval.c **** 		default:
 332              		.loc 1 813 4 is_stmt 1 view .LVU84
 333              	.L29:
 819:boards/TMC5161_eval.c **** 		break;
 334              		.loc 1 819 3 view .LVU85
 819:boards/TMC5161_eval.c **** 		break;
 335              		.loc 1 819 10 is_stmt 0 view .LVU86
 336 011c 2C60     		str	r4, [r5]
 820:boards/TMC5161_eval.c **** 	case 5:  // read interrupt pin SWN_DIAG0
 337              		.loc 1 820 3 is_stmt 1 view .LVU87
 338 011e A9E7     		b	.L37
 339              	.LVL31:
 340              	.L27:
 811:boards/TMC5161_eval.c **** 			HAL.IOs->config->setHigh(Pins.ENCB_DCEN_CFG4);
 341              		.loc 1 811 4 view .LVU88
 342 0120 DB68     		ldr	r3, [r3, #12]
 343 0122 9847     		blx	r3
 344              	.LVL32:
 812:boards/TMC5161_eval.c **** 			break;
 345              		.loc 1 812 4 view .LVU89
 812:boards/TMC5161_eval.c **** 			break;
 346              		.loc 1 812 19 is_stmt 0 view .LVU90
 347 0124 3B68     		ldr	r3, [r7]
 812:boards/TMC5161_eval.c **** 			break;
 348              		.loc 1 812 4 view .LVU91
 349 0126 5B69     		ldr	r3, [r3, #20]
 350 0128 F5E7     		b	.L35
 351              	.LVL33:
 352              	.L14:
 822:boards/TMC5161_eval.c **** 		break;
 353              		.loc 1 822 3 is_stmt 1 view .LVU92
 822:boards/TMC5161_eval.c **** 		break;
 354              		.loc 1 822 16 is_stmt 0 view .LVU93
 355 012a 144B     		ldr	r3, .L40
 822:boards/TMC5161_eval.c **** 		break;
 356              		.loc 1 822 13 view .LVU94
 357 012c 144A     		ldr	r2, .L40+4
 822:boards/TMC5161_eval.c **** 		break;
 358              		.loc 1 822 20 view .LVU95
 359 012e DB68     		ldr	r3, [r3, #12]
 822:boards/TMC5161_eval.c **** 		break;
 360              		.loc 1 822 13 view .LVU96
 361 0130 D2F8B002 		ldr	r0, [r2, #688]
 362              	.LVL34:
 822:boards/TMC5161_eval.c **** 		break;
 363              		.loc 1 822 28 view .LVU97
 364 0134 1B68     		ldr	r3, [r3]
 822:boards/TMC5161_eval.c **** 		break;
 365              		.loc 1 822 13 view .LVU98
 366 0136 5B6A     		ldr	r3, [r3, #36]
 367              	.L39:
 825:boards/TMC5161_eval.c **** 		break;
 368              		.loc 1 825 13 view .LVU99
 369 0138 9847     		blx	r3
 370              	.LVL35:
 825:boards/TMC5161_eval.c **** 		break;
 371              		.loc 1 825 56 view .LVU100
 372 013a 0038     		subs	r0, r0, #0
 373 013c 18BF     		it	ne
 374 013e 0120     		movne	r0, #1
 825:boards/TMC5161_eval.c **** 		break;
 375              		.loc 1 825 10 view .LVU101
 376 0140 2860     		str	r0, [r5]
 826:boards/TMC5161_eval.c **** //	case 7:  // enable single wire interface (SWSEL)
 377              		.loc 1 826 3 is_stmt 1 view .LVU102
 378 0142 97E7     		b	.L37
 379              	.LVL36:
 380              	.L12:
 825:boards/TMC5161_eval.c **** 		break;
 381              		.loc 1 825 3 view .LVU103
 825:boards/TMC5161_eval.c **** 		break;
 382              		.loc 1 825 16 is_stmt 0 view .LVU104
 383 0144 0D4B     		ldr	r3, .L40
 825:boards/TMC5161_eval.c **** 		break;
 384              		.loc 1 825 13 view .LVU105
 385 0146 0E4A     		ldr	r2, .L40+4
 825:boards/TMC5161_eval.c **** 		break;
 386              		.loc 1 825 20 view .LVU106
 387 0148 DB68     		ldr	r3, [r3, #12]
 825:boards/TMC5161_eval.c **** 		break;
 388              		.loc 1 825 13 view .LVU107
 389 014a D2F8B402 		ldr	r0, [r2, #692]
 390              	.LVL37:
 825:boards/TMC5161_eval.c **** 		break;
 391              		.loc 1 825 28 view .LVU108
 392 014e 1B68     		ldr	r3, [r3]
 825:boards/TMC5161_eval.c **** 		break;
 393              		.loc 1 825 13 view .LVU109
 394 0150 5B6A     		ldr	r3, [r3, #36]
 395 0152 F1E7     		b	.L39
 396              	.LVL38:
 397              	.L19:
 832:boards/TMC5161_eval.c **** 		{
 398              		.loc 1 832 3 is_stmt 1 view .LVU110
 399 0154 094B     		ldr	r3, .L40
 400 0156 0A4E     		ldr	r6, .L40+4
 401 0158 DF68     		ldr	r7, [r3, #12]
 832:boards/TMC5161_eval.c **** 		{
 402              		.loc 1 832 5 is_stmt 0 view .LVU111
 403 015a 1468     		ldr	r4, [r2]
 404 015c 3B68     		ldr	r3, [r7]
 405 015e D6F8A002 		ldr	r0, [r6, #672]
 406              	.LVL39:
 832:boards/TMC5161_eval.c **** 		{
 407              		.loc 1 832 5 view .LVU112
 408 0162 34B1     		cbz	r4, .L30
 834:boards/TMC5161_eval.c **** 			HAL.IOs->config->setLow(Pins.ENCB_DCEN_CFG4);
 409              		.loc 1 834 4 is_stmt 1 view .LVU113
 410 0164 DB68     		ldr	r3, [r3, #12]
 411 0166 9847     		blx	r3
 412              	.LVL40:
 835:boards/TMC5161_eval.c **** 		}
 413              		.loc 1 835 4 view .LVU114
 835:boards/TMC5161_eval.c **** 		}
 414              		.loc 1 835 19 is_stmt 0 view .LVU115
 415 0168 3B68     		ldr	r3, [r7]
 835:boards/TMC5161_eval.c **** 		}
 416              		.loc 1 835 4 view .LVU116
 417 016a D6F8A002 		ldr	r0, [r6, #672]
 418 016e 9B69     		ldr	r3, [r3, #24]
 419 0170 7FE7     		b	.L36
 420              	.LVL41:
 421              	.L30:
 839:boards/TMC5161_eval.c **** 		}
 422              		.loc 1 839 4 is_stmt 1 view .LVU117
 423 0172 1B69     		ldr	r3, [r3, #16]
 424 0174 8EE7     		b	.L38
 425              	.LVL42:
 426              	.L32:
 754:boards/TMC5161_eval.c **** 		}
 427              		.loc 1 754 11 is_stmt 0 view .LVU118
 428 0176 1024     		movs	r4, #16
 429              	.LVL43:
 846:boards/TMC5161_eval.c **** }
 430              		.loc 1 846 2 is_stmt 1 view .LVU119
 846:boards/TMC5161_eval.c **** }
 431              		.loc 1 846 9 is_stmt 0 view .LVU120
 432 0178 7DE7     		b	.L9
 433              	.L41:
 434 017a 00BF     		.align	2
 435              	.L40:
 436 017c 00000000 		.word	HAL
 437 0180 00000000 		.word	.LANCHOR0
 438              		.cfi_endproc
 439              	.LFE18:
 441              		.align	1
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu softvfp
 447              	deInit:
 448              	.LFB19:
 848:boards/TMC5161_eval.c **** 
 849:boards/TMC5161_eval.c **** static void deInit(void)
 850:boards/TMC5161_eval.c **** {
 449              		.loc 1 850 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 851:boards/TMC5161_eval.c **** 	HAL.IOs->config->setLow(Pins.DRV_ENN_CFG6);
 453              		.loc 1 851 2 view .LVU122
 454              		.loc 1 851 5 is_stmt 0 view .LVU123
 455 0184 234B     		ldr	r3, .L43
 850:boards/TMC5161_eval.c **** 	HAL.IOs->config->setLow(Pins.DRV_ENN_CFG6);
 456              		.loc 1 850 1 view .LVU124
 457 0186 70B5     		push	{r4, r5, r6, lr}
 458              	.LCFI1:
 459              		.cfi_def_cfa_offset 16
 460              		.cfi_offset 4, -16
 461              		.cfi_offset 5, -12
 462              		.cfi_offset 6, -8
 463              		.cfi_offset 14, -4
 464              		.loc 1 851 5 view .LVU125
 465 0188 DD68     		ldr	r5, [r3, #12]
 466              		.loc 1 851 2 view .LVU126
 467 018a 234C     		ldr	r4, .L43+4
 468              		.loc 1 851 17 view .LVU127
 469 018c 2B68     		ldr	r3, [r5]
 470              		.loc 1 851 2 view .LVU128
 471 018e D4F89802 		ldr	r0, [r4, #664]
 472 0192 9B69     		ldr	r3, [r3, #24]
 473 0194 9847     		blx	r3
 474              	.LVL44:
 852:boards/TMC5161_eval.c **** 	HAL.IOs->config->setLow(Pins.SD_MODE);
 475              		.loc 1 852 2 is_stmt 1 view .LVU129
 476              		.loc 1 852 17 is_stmt 0 view .LVU130
 477 0196 2B68     		ldr	r3, [r5]
 478              		.loc 1 852 2 view .LVU131
 479 0198 D4F8A802 		ldr	r0, [r4, #680]
 480 019c 9B69     		ldr	r3, [r3, #24]
 481 019e 9847     		blx	r3
 482              	.LVL45:
 853:boards/TMC5161_eval.c **** 	HAL.IOs->config->setLow(Pins.SPI_MODE);
 483              		.loc 1 853 2 is_stmt 1 view .LVU132
 484              		.loc 1 853 17 is_stmt 0 view .LVU133
 485 01a0 2B68     		ldr	r3, [r5]
 486              		.loc 1 853 2 view .LVU134
 487 01a2 D4F8AC02 		ldr	r0, [r4, #684]
 488 01a6 9B69     		ldr	r3, [r3, #24]
 489 01a8 9847     		blx	r3
 490              	.LVL46:
 854:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.ENCA_DCIN_CFG5);
 491              		.loc 1 854 2 is_stmt 1 view .LVU135
 492              		.loc 1 854 17 is_stmt 0 view .LVU136
 493 01aa 2B68     		ldr	r3, [r5]
 494              		.loc 1 854 2 view .LVU137
 495 01ac D4F89C02 		ldr	r0, [r4, #668]
 496 01b0 9B68     		ldr	r3, [r3, #8]
 497 01b2 9847     		blx	r3
 498              	.LVL47:
 855:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.ENCB_DCEN_CFG4);
 499              		.loc 1 855 2 is_stmt 1 view .LVU138
 500              		.loc 1 855 17 is_stmt 0 view .LVU139
 501 01b4 2B68     		ldr	r3, [r5]
 502              		.loc 1 855 2 view .LVU140
 503 01b6 D4F8A002 		ldr	r0, [r4, #672]
 504 01ba 9B68     		ldr	r3, [r3, #8]
 505 01bc 9847     		blx	r3
 506              	.LVL48:
 856:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.ENCN_DCO);
 507              		.loc 1 856 2 is_stmt 1 view .LVU141
 508              		.loc 1 856 17 is_stmt 0 view .LVU142
 509 01be 2B68     		ldr	r3, [r5]
 510              		.loc 1 856 2 view .LVU143
 511 01c0 D4F8A402 		ldr	r0, [r4, #676]
 512 01c4 9B68     		ldr	r3, [r3, #8]
 513 01c6 9847     		blx	r3
 514              	.LVL49:
 857:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.REFL_UC);
 515              		.loc 1 857 2 is_stmt 1 view .LVU144
 516              		.loc 1 857 17 is_stmt 0 view .LVU145
 517 01c8 2B68     		ldr	r3, [r5]
 518              		.loc 1 857 2 view .LVU146
 519 01ca D4F89002 		ldr	r0, [r4, #656]
 520 01ce 9B68     		ldr	r3, [r3, #8]
 521 01d0 9847     		blx	r3
 522              	.LVL50:
 858:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.REFR_UC);
 523              		.loc 1 858 2 is_stmt 1 view .LVU147
 524              		.loc 1 858 17 is_stmt 0 view .LVU148
 525 01d2 2B68     		ldr	r3, [r5]
 526              		.loc 1 858 2 view .LVU149
 527 01d4 D4F89402 		ldr	r0, [r4, #660]
 528 01d8 9B68     		ldr	r3, [r3, #8]
 529 01da 9847     		blx	r3
 530              	.LVL51:
 859:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.SWN_DIAG0);
 531              		.loc 1 859 2 is_stmt 1 view .LVU150
 532              		.loc 1 859 17 is_stmt 0 view .LVU151
 533 01dc 2B68     		ldr	r3, [r5]
 534              		.loc 1 859 2 view .LVU152
 535 01de D4F8B002 		ldr	r0, [r4, #688]
 536 01e2 9B68     		ldr	r3, [r3, #8]
 537 01e4 9847     		blx	r3
 538              	.LVL52:
 860:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.SWP_DIAG1);
 539              		.loc 1 860 2 is_stmt 1 view .LVU153
 540              		.loc 1 860 17 is_stmt 0 view .LVU154
 541 01e6 2B68     		ldr	r3, [r5]
 542              		.loc 1 860 2 view .LVU155
 543 01e8 D4F8B402 		ldr	r0, [r4, #692]
 544 01ec 9B68     		ldr	r3, [r3, #8]
 545 01ee 9847     		blx	r3
 546              	.LVL53:
 861:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN_CFG6);
 547              		.loc 1 861 2 is_stmt 1 view .LVU156
 548              		.loc 1 861 17 is_stmt 0 view .LVU157
 549 01f0 2B68     		ldr	r3, [r5]
 550              		.loc 1 861 2 view .LVU158
 551 01f2 D4F89802 		ldr	r0, [r4, #664]
 552 01f6 9B68     		ldr	r3, [r3, #8]
 553 01f8 9847     		blx	r3
 554              	.LVL54:
 862:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.SD_MODE);
 555              		.loc 1 862 2 is_stmt 1 view .LVU159
 556              		.loc 1 862 17 is_stmt 0 view .LVU160
 557 01fa 2B68     		ldr	r3, [r5]
 558              		.loc 1 862 2 view .LVU161
 559 01fc D4F8A802 		ldr	r0, [r4, #680]
 560 0200 9B68     		ldr	r3, [r3, #8]
 561 0202 9847     		blx	r3
 562              	.LVL55:
 863:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.SPI_MODE);
 563              		.loc 1 863 2 is_stmt 1 view .LVU162
 564              		.loc 1 863 17 is_stmt 0 view .LVU163
 565 0204 2B68     		ldr	r3, [r5]
 566              		.loc 1 863 2 view .LVU164
 567 0206 D4F8AC02 		ldr	r0, [r4, #684]
 568 020a 9B68     		ldr	r3, [r3, #8]
 864:boards/TMC5161_eval.c **** };
 569              		.loc 1 864 1 view .LVU165
 570 020c BDE87040 		pop	{r4, r5, r6, lr}
 571              	.LCFI2:
 572              		.cfi_restore 14
 573              		.cfi_restore 6
 574              		.cfi_restore 5
 575              		.cfi_restore 4
 576              		.cfi_def_cfa_offset 0
 863:boards/TMC5161_eval.c **** 	HAL.IOs->config->reset(Pins.SPI_MODE);
 577              		.loc 1 863 2 view .LVU166
 578 0210 1847     		bx	r3	@ indirect register sibling call
 579              	.LVL56:
 580              	.L44:
 581 0212 00BF     		.align	2
 582              	.L43:
 583 0214 00000000 		.word	HAL
 584 0218 00000000 		.word	.LANCHOR0
 585              		.cfi_endproc
 586              	.LFE19:
 588              		.align	1
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu softvfp
 594              	periodicJob:
 595              	.LVL57:
 596              	.LFB16:
 706:boards/TMC5161_eval.c **** 	tmc5161_periodicJob(&TMC5161, tick);
 597              		.loc 1 706 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 707:boards/TMC5161_eval.c **** }
 602              		.loc 1 707 2 view .LVU168
 706:boards/TMC5161_eval.c **** 	tmc5161_periodicJob(&TMC5161, tick);
 603              		.loc 1 706 1 is_stmt 0 view .LVU169
 604 021c 0146     		mov	r1, r0
 707:boards/TMC5161_eval.c **** }
 605              		.loc 1 707 2 view .LVU170
 606 021e 0148     		ldr	r0, .L46
 607              	.LVL58:
 707:boards/TMC5161_eval.c **** }
 608              		.loc 1 707 2 view .LVU171
 609 0220 FFF7FEBF 		b	tmc5161_periodicJob
 610              	.LVL59:
 611              	.L47:
 707:boards/TMC5161_eval.c **** }
 612              		.loc 1 707 2 view .LVU172
 613              		.align	2
 614              	.L46:
 615 0224 00000000 		.word	.LANCHOR0
 616              		.cfi_endproc
 617              	.LFE16:
 619              		.align	1
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu softvfp
 625              	readRegister:
 626              	.LVL60:
 627              	.LFB15:
 700:boards/TMC5161_eval.c **** 	UNUSED(motor);
 628              		.loc 1 700 1 is_stmt 1 view -0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 701:boards/TMC5161_eval.c **** 	*value = tmc5161_readInt(&TMC5161, address);
 632              		.loc 1 701 2 view .LVU174
 702:boards/TMC5161_eval.c **** }
 633              		.loc 1 702 2 view .LVU175
 700:boards/TMC5161_eval.c **** 	UNUSED(motor);
 634              		.loc 1 700 1 is_stmt 0 view .LVU176
 635 0228 10B5     		push	{r4, lr}
 636              	.LCFI3:
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 4, -8
 639              		.cfi_offset 14, -4
 702:boards/TMC5161_eval.c **** }
 640              		.loc 1 702 11 view .LVU177
 641 022a 0348     		ldr	r0, .L49
 642              	.LVL61:
 700:boards/TMC5161_eval.c **** 	UNUSED(motor);
 643              		.loc 1 700 1 view .LVU178
 644 022c 1446     		mov	r4, r2
 702:boards/TMC5161_eval.c **** }
 645              		.loc 1 702 11 view .LVU179
 646 022e FFF7FEFF 		bl	tmc5161_readInt
 647              	.LVL62:
 702:boards/TMC5161_eval.c **** }
 648              		.loc 1 702 9 view .LVU180
 649 0232 2060     		str	r0, [r4]
 703:boards/TMC5161_eval.c **** 
 650              		.loc 1 703 1 view .LVU181
 651 0234 10BD     		pop	{r4, pc}
 652              	.LVL63:
 653              	.L50:
 703:boards/TMC5161_eval.c **** 
 654              		.loc 1 703 1 view .LVU182
 655 0236 00BF     		.align	2
 656              	.L49:
 657 0238 00000000 		.word	.LANCHOR0
 658              		.cfi_endproc
 659              	.LFE15:
 661              		.align	1
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 665              		.fpu softvfp
 667              	writeRegister:
 668              	.LVL64:
 669              	.LFB14:
 694:boards/TMC5161_eval.c **** 	UNUSED(motor);
 670              		.loc 1 694 1 is_stmt 1 view -0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 695:boards/TMC5161_eval.c **** 	tmc5161_writeInt(&TMC5161, address, value);
 675              		.loc 1 695 2 view .LVU184
 696:boards/TMC5161_eval.c **** }
 676              		.loc 1 696 2 view .LVU185
 677 023c 0148     		ldr	r0, .L52
 678              	.LVL65:
 696:boards/TMC5161_eval.c **** }
 679              		.loc 1 696 2 is_stmt 0 view .LVU186
 680 023e FFF7FEBF 		b	tmc5161_writeInt
 681              	.LVL66:
 682              	.L53:
 696:boards/TMC5161_eval.c **** }
 683              		.loc 1 696 2 view .LVU187
 684 0242 00BF     		.align	2
 685              	.L52:
 686 0244 00000000 		.word	.LANCHOR0
 687              		.cfi_endproc
 688              	.LFE14:
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu softvfp
 696              	handleParameter:
 697              	.LVL67:
 698              	.LFB10:
 111:boards/TMC5161_eval.c **** 	uint32_t buffer;
 699              		.loc 1 111 1 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 112:boards/TMC5161_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 703              		.loc 1 112 2 view .LVU189
 113:boards/TMC5161_eval.c **** 
 704              		.loc 1 113 2 view .LVU190
 115:boards/TMC5161_eval.c **** 		return TMC_ERROR_MOTOR;
 705              		.loc 1 115 2 view .LVU191
 111:boards/TMC5161_eval.c **** 	uint32_t buffer;
 706              		.loc 1 111 1 is_stmt 0 view .LVU192
 707 0248 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 708              	.LCFI4:
 709              		.cfi_def_cfa_offset 24
 710              		.cfi_offset 3, -24
 711              		.cfi_offset 4, -20
 712              		.cfi_offset 5, -16
 713              		.cfi_offset 6, -12
 714              		.cfi_offset 7, -8
 715              		.cfi_offset 14, -4
 111:boards/TMC5161_eval.c **** 	uint32_t buffer;
 716              		.loc 1 111 1 view .LVU193
 717 024a 0646     		mov	r6, r0
 718 024c 1D46     		mov	r5, r3
 115:boards/TMC5161_eval.c **** 		return TMC_ERROR_MOTOR;
 719              		.loc 1 115 4 view .LVU194
 720 024e 0029     		cmp	r1, #0
 721 0250 40F02786 		bne	.L197
 118:boards/TMC5161_eval.c **** 	{
 722              		.loc 1 118 2 is_stmt 1 view .LVU195
 723 0254 222A     		cmp	r2, #34
 724 0256 74D8     		bhi	.L56
 725 0258 222A     		cmp	r2, #34
 726 025a 00F22886 		bhi	.L199
 727 025e DFE812F0 		tbh	[pc, r2, lsl #1]
 728              	.LVL68:
 729              	.L88:
 730 0262 7800     		.2byte	(.L115-.L88)/2
 731 0264 8700     		.2byte	(.L114-.L88)/2
 732 0266 9600     		.2byte	(.L113-.L88)/2
 733 0268 A800     		.2byte	(.L112-.L88)/2
 734 026a B800     		.2byte	(.L111-.L88)/2
 735 026c D400     		.2byte	(.L110-.L88)/2
 736 026e E300     		.2byte	(.L109-.L88)/2
 737 0270 FC00     		.2byte	(.L108-.L88)/2
 738 0272 1401     		.2byte	(.L107-.L88)/2
 739 0274 2606     		.2byte	(.L199-.L88)/2
 740 0276 2001     		.2byte	(.L106-.L88)/2
 741 0278 2F01     		.2byte	(.L105-.L88)/2
 742 027a 3C01     		.2byte	(.L104-.L88)/2
 743 027c 5501     		.2byte	(.L103-.L88)/2
 744 027e 6D01     		.2byte	(.L102-.L88)/2
 745 0280 7C01     		.2byte	(.L101-.L88)/2
 746 0282 8B01     		.2byte	(.L100-.L88)/2
 747 0284 9A01     		.2byte	(.L99-.L88)/2
 748 0286 A901     		.2byte	(.L98-.L88)/2
 749 0288 B801     		.2byte	(.L97-.L88)/2
 750 028a C701     		.2byte	(.L96-.L88)/2
 751 028c D801     		.2byte	(.L95-.L88)/2
 752 028e 2606     		.2byte	(.L199-.L88)/2
 753 0290 E701     		.2byte	(.L94-.L88)/2
 754 0292 0C02     		.2byte	(.L93-.L88)/2
 755 0294 2606     		.2byte	(.L199-.L88)/2
 756 0296 2606     		.2byte	(.L199-.L88)/2
 757 0298 1B02     		.2byte	(.L92-.L88)/2
 758 029a 3402     		.2byte	(.L91-.L88)/2
 759 029c 4D02     		.2byte	(.L90-.L88)/2
 760 029e 2606     		.2byte	(.L199-.L88)/2
 761 02a0 2606     		.2byte	(.L199-.L88)/2
 762 02a2 2606     		.2byte	(.L199-.L88)/2
 763 02a4 5502     		.2byte	(.L89-.L88)/2
 764 02a6 6F02     		.2byte	(.L87-.L88)/2
 765              		.p2align 1
 766              	.L116:
 118:boards/TMC5161_eval.c **** 	{
 767              		.loc 1 118 2 is_stmt 0 view .LVU196
 768 02a8 8C3A     		subs	r2, r2, #140
 769              	.LVL69:
 118:boards/TMC5161_eval.c **** 	{
 770              		.loc 1 118 2 view .LVU197
 771 02aa 462A     		cmp	r2, #70
 772 02ac 00F2FC85 		bhi	.L198
 773 02b0 DFE812F0 		tbh	[pc, r2, lsl #1]
 774              	.L59:
 775 02b4 6102     		.2byte	(.L86-.L59)/2
 776 02b6 FA05     		.2byte	(.L198-.L59)/2
 777 02b8 FA05     		.2byte	(.L198-.L59)/2
 778 02ba FA05     		.2byte	(.L198-.L59)/2
 779 02bc FA05     		.2byte	(.L198-.L59)/2
 780 02be FA05     		.2byte	(.L198-.L59)/2
 781 02c0 FA05     		.2byte	(.L198-.L59)/2
 782 02c2 FA05     		.2byte	(.L198-.L59)/2
 783 02c4 FA05     		.2byte	(.L198-.L59)/2
 784 02c6 FA05     		.2byte	(.L198-.L59)/2
 785 02c8 FA05     		.2byte	(.L198-.L59)/2
 786 02ca FA05     		.2byte	(.L198-.L59)/2
 787 02cc FA05     		.2byte	(.L198-.L59)/2
 788 02ce FA05     		.2byte	(.L198-.L59)/2
 789 02d0 FA05     		.2byte	(.L198-.L59)/2
 790 02d2 FA05     		.2byte	(.L198-.L59)/2
 791 02d4 FA05     		.2byte	(.L198-.L59)/2
 792 02d6 FA05     		.2byte	(.L198-.L59)/2
 793 02d8 FA05     		.2byte	(.L198-.L59)/2
 794 02da FA05     		.2byte	(.L198-.L59)/2
 795 02dc FA05     		.2byte	(.L198-.L59)/2
 796 02de FA05     		.2byte	(.L198-.L59)/2
 797 02e0 AF02     		.2byte	(.L85-.L59)/2
 798 02e2 C802     		.2byte	(.L84-.L59)/2
 799 02e4 E102     		.2byte	(.L83-.L59)/2
 800 02e6 FE02     		.2byte	(.L82-.L59)/2
 801 02e8 4F03     		.2byte	(.L81-.L59)/2
 802 02ea 8803     		.2byte	(.L80-.L59)/2
 803 02ec A003     		.2byte	(.L79-.L59)/2
 804 02ee B803     		.2byte	(.L78-.L59)/2
 805 02f0 D103     		.2byte	(.L77-.L59)/2
 806 02f2 EA03     		.2byte	(.L76-.L59)/2
 807 02f4 0304     		.2byte	(.L75-.L59)/2
 808 02f6 1B04     		.2byte	(.L74-.L59)/2
 809 02f8 3404     		.2byte	(.L73-.L59)/2
 810 02fa FA05     		.2byte	(.L198-.L59)/2
 811 02fc FA05     		.2byte	(.L198-.L59)/2
 812 02fe FA05     		.2byte	(.L198-.L59)/2
 813 0300 FA05     		.2byte	(.L198-.L59)/2
 814 0302 FA05     		.2byte	(.L198-.L59)/2
 815 0304 5504     		.2byte	(.L72-.L59)/2
 816 0306 6404     		.2byte	(.L71-.L59)/2
 817 0308 A404     		.2byte	(.L70-.L59)/2
 818 030a FA05     		.2byte	(.L198-.L59)/2
 819 030c CB04     		.2byte	(.L69-.L59)/2
 820 030e E604     		.2byte	(.L68-.L59)/2
 821 0310 0105     		.2byte	(.L67-.L59)/2
 822 0312 2805     		.2byte	(.L66-.L59)/2
 823 0314 5105     		.2byte	(.L65-.L59)/2
 824 0316 FA05     		.2byte	(.L198-.L59)/2
 825 0318 FA05     		.2byte	(.L198-.L59)/2
 826 031a 6805     		.2byte	(.L64-.L59)/2
 827 031c 8905     		.2byte	(.L63-.L59)/2
 828 031e FA05     		.2byte	(.L198-.L59)/2
 829 0320 FA05     		.2byte	(.L198-.L59)/2
 830 0322 FA05     		.2byte	(.L198-.L59)/2
 831 0324 FA05     		.2byte	(.L198-.L59)/2
 832 0326 FA05     		.2byte	(.L198-.L59)/2
 833 0328 FA05     		.2byte	(.L198-.L59)/2
 834 032a FA05     		.2byte	(.L198-.L59)/2
 835 032c FA05     		.2byte	(.L198-.L59)/2
 836 032e FA05     		.2byte	(.L198-.L59)/2
 837 0330 FA05     		.2byte	(.L198-.L59)/2
 838 0332 FA05     		.2byte	(.L198-.L59)/2
 839 0334 A905     		.2byte	(.L62-.L59)/2
 840 0336 FA05     		.2byte	(.L198-.L59)/2
 841 0338 C405     		.2byte	(.L61-.L59)/2
 842 033a FA05     		.2byte	(.L198-.L59)/2
 843 033c FA05     		.2byte	(.L198-.L59)/2
 844 033e D005     		.2byte	(.L60-.L59)/2
 845 0340 E605     		.2byte	(.L58-.L59)/2
 846              	.LVL70:
 847              		.p2align 1
 848              	.L56:
 118:boards/TMC5161_eval.c **** 	{
 849              		.loc 1 118 2 view .LVU198
 850 0342 02F17403 		add	r3, r2, #116
 851              	.LVL71:
 118:boards/TMC5161_eval.c **** 	{
 852              		.loc 1 118 2 view .LVU199
 853 0346 DBB2     		uxtb	r3, r3
 854 0348 462B     		cmp	r3, #70
 855 034a ADD9     		bls	.L116
 856 034c 0424     		movs	r4, #4
 857              	.LVL72:
 858              	.L54:
 671:boards/TMC5161_eval.c **** 
 859              		.loc 1 671 1 view .LVU200
 860 034e 2046     		mov	r0, r4
 861 0350 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 862              	.LVL73:
 863              	.L115:
 122:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_XTARGET);
 864              		.loc 1 122 3 is_stmt 1 view .LVU201
 122:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_XTARGET);
 865              		.loc 1 122 5 is_stmt 0 view .LVU202
 866 0352 30B9     		cbnz	r0, .L117
 123:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 867              		.loc 1 123 4 is_stmt 1 view .LVU203
 868              	.LBB308:
 869              	.LBI308:
  31:boards/TMC5161_eval.c **** {
 870              		.loc 1 31 31 view .LVU204
 871              	.LVL74:
  31:boards/TMC5161_eval.c **** {
 872              		.loc 1 31 31 is_stmt 0 view .LVU205
 873              	.LBE308:
  33:boards/TMC5161_eval.c **** 
 874              		.loc 1 33 2 is_stmt 1 view .LVU206
  35:boards/TMC5161_eval.c **** }
 875              		.loc 1 35 2 view .LVU207
 123:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 876              		.loc 1 123 13 is_stmt 0 view .LVU208
 877 0354 AA48     		ldr	r0, .L219
 878              	.LVL75:
 123:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 879              		.loc 1 123 13 view .LVU209
 880 0356 2D21     		movs	r1, #45
 881              	.LVL76:
 123:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 882              		.loc 1 123 13 view .LVU210
 883 0358 FFF7FEFF 		bl	tmc5161_readInt
 884              	.LVL77:
 113:boards/TMC5161_eval.c **** 
 885              		.loc 1 113 11 view .LVU211
 886 035c 3446     		mov	r4, r6
 123:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 887              		.loc 1 123 11 view .LVU212
 888 035e 2860     		str	r0, [r5]
 889 0360 F5E7     		b	.L54
 890              	.LVL78:
 891              	.L117:
 124:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_XTARGET, *value);
 892              		.loc 1 124 10 is_stmt 1 view .LVU213
 125:boards/TMC5161_eval.c **** 		}
 893              		.loc 1 125 4 view .LVU214
 894              	.LBB309:
 895              	.LBI309:
  31:boards/TMC5161_eval.c **** {
 896              		.loc 1 31 31 view .LVU215
  31:boards/TMC5161_eval.c **** {
 897              		.loc 1 31 31 is_stmt 0 view .LVU216
 898              	.LBE309:
  33:boards/TMC5161_eval.c **** 
 899              		.loc 1 33 2 is_stmt 1 view .LVU217
  35:boards/TMC5161_eval.c **** }
 900              		.loc 1 35 2 view .LVU218
 125:boards/TMC5161_eval.c **** 		}
 901              		.loc 1 125 4 is_stmt 0 view .LVU219
 902 0362 2A68     		ldr	r2, [r5]
 903              	.LVL79:
 125:boards/TMC5161_eval.c **** 		}
 904              		.loc 1 125 4 view .LVU220
 905 0364 A648     		ldr	r0, .L219
 906              	.LVL80:
 125:boards/TMC5161_eval.c **** 		}
 907              		.loc 1 125 4 view .LVU221
 908 0366 2D21     		movs	r1, #45
 909              	.LVL81:
 125:boards/TMC5161_eval.c **** 		}
 910              		.loc 1 125 4 view .LVU222
 911 0368 FFF7FEFF 		bl	tmc5161_writeInt
 912              	.LVL82:
 113:boards/TMC5161_eval.c **** 
 913              		.loc 1 113 11 view .LVU223
 914 036c 0024     		movs	r4, #0
 915 036e EEE7     		b	.L54
 916              	.LVL83:
 917              	.L114:
 130:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_XACTUAL);
 918              		.loc 1 130 3 is_stmt 1 view .LVU224
 130:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_XACTUAL);
 919              		.loc 1 130 5 is_stmt 0 view .LVU225
 920 0370 30B9     		cbnz	r0, .L118
 131:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 921              		.loc 1 131 4 is_stmt 1 view .LVU226
 922              	.LBB310:
 923              	.LBI310:
  31:boards/TMC5161_eval.c **** {
 924              		.loc 1 31 31 view .LVU227
 925              	.LVL84:
  31:boards/TMC5161_eval.c **** {
 926              		.loc 1 31 31 is_stmt 0 view .LVU228
 927              	.LBE310:
  33:boards/TMC5161_eval.c **** 
 928              		.loc 1 33 2 is_stmt 1 view .LVU229
  35:boards/TMC5161_eval.c **** }
 929              		.loc 1 35 2 view .LVU230
 131:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 930              		.loc 1 131 13 is_stmt 0 view .LVU231
 931 0372 A348     		ldr	r0, .L219
 932              	.LVL85:
 131:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 933              		.loc 1 131 13 view .LVU232
 934 0374 2121     		movs	r1, #33
 935              	.LVL86:
 131:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 936              		.loc 1 131 13 view .LVU233
 937 0376 FFF7FEFF 		bl	tmc5161_readInt
 938              	.LVL87:
 113:boards/TMC5161_eval.c **** 
 939              		.loc 1 113 11 view .LVU234
 940 037a 3446     		mov	r4, r6
 131:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 941              		.loc 1 131 11 view .LVU235
 942 037c 2860     		str	r0, [r5]
 943 037e E6E7     		b	.L54
 944              	.LVL88:
 945              	.L118:
 132:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_XACTUAL, *value);
 946              		.loc 1 132 10 is_stmt 1 view .LVU236
 133:boards/TMC5161_eval.c **** 		}
 947              		.loc 1 133 4 view .LVU237
 948              	.LBB311:
 949              	.LBI311:
  31:boards/TMC5161_eval.c **** {
 950              		.loc 1 31 31 view .LVU238
  31:boards/TMC5161_eval.c **** {
 951              		.loc 1 31 31 is_stmt 0 view .LVU239
 952              	.LBE311:
  33:boards/TMC5161_eval.c **** 
 953              		.loc 1 33 2 is_stmt 1 view .LVU240
  35:boards/TMC5161_eval.c **** }
 954              		.loc 1 35 2 view .LVU241
 133:boards/TMC5161_eval.c **** 		}
 955              		.loc 1 133 4 is_stmt 0 view .LVU242
 956 0380 2A68     		ldr	r2, [r5]
 957              	.LVL89:
 133:boards/TMC5161_eval.c **** 		}
 958              		.loc 1 133 4 view .LVU243
 959 0382 9F48     		ldr	r0, .L219
 960              	.LVL90:
 133:boards/TMC5161_eval.c **** 		}
 961              		.loc 1 133 4 view .LVU244
 962 0384 2121     		movs	r1, #33
 963              	.LVL91:
 133:boards/TMC5161_eval.c **** 		}
 964              		.loc 1 133 4 view .LVU245
 965 0386 FFF7FEFF 		bl	tmc5161_writeInt
 966              	.LVL92:
 113:boards/TMC5161_eval.c **** 
 967              		.loc 1 113 11 view .LVU246
 968 038a 0024     		movs	r4, #0
 969 038c DFE7     		b	.L54
 970              	.LVL93:
 971              	.L113:
 138:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VMAX);
 972              		.loc 1 138 3 is_stmt 1 view .LVU247
 138:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VMAX);
 973              		.loc 1 138 5 is_stmt 0 view .LVU248
 974 038e 30B9     		cbnz	r0, .L119
 139:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 975              		.loc 1 139 4 is_stmt 1 view .LVU249
 976              	.LBB312:
 977              	.LBI312:
  31:boards/TMC5161_eval.c **** {
 978              		.loc 1 31 31 view .LVU250
 979              	.LVL94:
  31:boards/TMC5161_eval.c **** {
 980              		.loc 1 31 31 is_stmt 0 view .LVU251
 981              	.LBE312:
  33:boards/TMC5161_eval.c **** 
 982              		.loc 1 33 2 is_stmt 1 view .LVU252
  35:boards/TMC5161_eval.c **** }
 983              		.loc 1 35 2 view .LVU253
 139:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 984              		.loc 1 139 13 is_stmt 0 view .LVU254
 985 0390 9B48     		ldr	r0, .L219
 986              	.LVL95:
 139:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 987              		.loc 1 139 13 view .LVU255
 988 0392 2721     		movs	r1, #39
 989              	.LVL96:
 139:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 990              		.loc 1 139 13 view .LVU256
 991 0394 FFF7FEFF 		bl	tmc5161_readInt
 992              	.LVL97:
 113:boards/TMC5161_eval.c **** 
 993              		.loc 1 113 11 view .LVU257
 994 0398 3446     		mov	r4, r6
 139:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 995              		.loc 1 139 11 view .LVU258
 996 039a 2860     		str	r0, [r5]
 997 039c D7E7     		b	.L54
 998              	.LVL98:
 999              	.L119:
 140:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_VMAX, abs(*value));
 1000              		.loc 1 140 10 is_stmt 1 view .LVU259
 141:boards/TMC5161_eval.c **** 		}
 1001              		.loc 1 141 4 view .LVU260
 1002              	.LBB313:
 1003              	.LBI313:
  31:boards/TMC5161_eval.c **** {
 1004              		.loc 1 31 31 view .LVU261
  31:boards/TMC5161_eval.c **** {
 1005              		.loc 1 31 31 is_stmt 0 view .LVU262
 1006              	.LBE313:
  33:boards/TMC5161_eval.c **** 
 1007              		.loc 1 33 2 is_stmt 1 view .LVU263
  35:boards/TMC5161_eval.c **** }
 1008              		.loc 1 35 2 view .LVU264
 141:boards/TMC5161_eval.c **** 		}
 1009              		.loc 1 141 53 is_stmt 0 view .LVU265
 1010 039e 2A68     		ldr	r2, [r5]
 1011              	.LVL99:
 141:boards/TMC5161_eval.c **** 		}
 1012              		.loc 1 141 4 view .LVU266
 1013 03a0 9748     		ldr	r0, .L219
 1014              	.LVL100:
 141:boards/TMC5161_eval.c **** 		}
 1015              		.loc 1 141 4 view .LVU267
 1016 03a2 002A     		cmp	r2, #0
 1017 03a4 B8BF     		it	lt
 1018 03a6 5242     		rsblt	r2, r2, #0
 1019 03a8 2721     		movs	r1, #39
 1020              	.LVL101:
 141:boards/TMC5161_eval.c **** 		}
 1021              		.loc 1 141 4 view .LVU268
 1022 03aa FFF7FEFF 		bl	tmc5161_writeInt
 1023              	.LVL102:
 113:boards/TMC5161_eval.c **** 
 1024              		.loc 1 113 11 view .LVU269
 1025 03ae 0024     		movs	r4, #0
 1026 03b0 CDE7     		b	.L54
 1027              	.LVL103:
 1028              	.L112:
 146:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VACTUAL);
 1029              		.loc 1 146 3 is_stmt 1 view .LVU270
 146:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VACTUAL);
 1030              		.loc 1 146 5 is_stmt 0 view .LVU271
 1031 03b2 0028     		cmp	r0, #0
 1032 03b4 40F07E85 		bne	.L200
 147:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1033              		.loc 1 147 4 is_stmt 1 view .LVU272
 1034              	.LBB314:
 1035              	.LBI314:
  31:boards/TMC5161_eval.c **** {
 1036              		.loc 1 31 31 view .LVU273
 1037              	.LVL104:
  31:boards/TMC5161_eval.c **** {
 1038              		.loc 1 31 31 is_stmt 0 view .LVU274
 1039              	.LBE314:
  33:boards/TMC5161_eval.c **** 
 1040              		.loc 1 33 2 is_stmt 1 view .LVU275
  35:boards/TMC5161_eval.c **** }
 1041              		.loc 1 35 2 view .LVU276
 147:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1042              		.loc 1 147 13 is_stmt 0 view .LVU277
 1043 03b8 9148     		ldr	r0, .L219
 1044              	.LVL105:
 147:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1045              		.loc 1 147 13 view .LVU278
 1046 03ba 2221     		movs	r1, #34
 1047              	.LVL106:
 147:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1048              		.loc 1 147 13 view .LVU279
 1049 03bc FFF7FEFF 		bl	tmc5161_readInt
 1050              	.LVL107:
 148:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1051              		.loc 1 148 4 is_stmt 1 view .LVU280
 148:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1052              		.loc 1 148 13 is_stmt 0 view .LVU281
 1053 03c0 10F40003 		ands	r3, r0, #8388608
 1054 03c4 18BF     		it	ne
 1055 03c6 4FF07F43 		movne	r3, #-16777216
 1056 03ca 1843     		orrs	r0, r0, r3
 148:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1057              		.loc 1 148 11 view .LVU282
 1058 03cc 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 1059              		.loc 1 113 11 view .LVU283
 1060 03ce 3446     		mov	r4, r6
 1061 03d0 BDE7     		b	.L54
 1062              	.LVL108:
 1063              	.L111:
 155:boards/TMC5161_eval.c **** 			*value = vmax_position;
 1064              		.loc 1 155 3 is_stmt 1 view .LVU284
 1065 03d2 8B4F     		ldr	r7, .L219
 155:boards/TMC5161_eval.c **** 			*value = vmax_position;
 1066              		.loc 1 155 5 is_stmt 0 view .LVU285
 1067 03d4 20B9     		cbnz	r0, .L121
 156:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1068              		.loc 1 156 4 is_stmt 1 view .LVU286
 156:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1069              		.loc 1 156 11 is_stmt 0 view .LVU287
 1070 03d6 D7F8B832 		ldr	r3, [r7, #696]
 1071 03da 2B60     		str	r3, [r5]
 113:boards/TMC5161_eval.c **** 
 1072              		.loc 1 113 11 view .LVU288
 1073 03dc 0446     		mov	r4, r0
 1074 03de B6E7     		b	.L54
 1075              	.L121:
 157:boards/TMC5161_eval.c **** 			vmax_position = abs(*value);
 1076              		.loc 1 157 10 is_stmt 1 view .LVU289
 158:boards/TMC5161_eval.c **** 			if(tmc5161_readInt(motorToIC(motor), TMC5161_RAMPMODE) == TMC5161_MODE_POSITION)
 1077              		.loc 1 158 4 view .LVU290
 158:boards/TMC5161_eval.c **** 			if(tmc5161_readInt(motorToIC(motor), TMC5161_RAMPMODE) == TMC5161_MODE_POSITION)
 1078              		.loc 1 158 20 is_stmt 0 view .LVU291
 1079 03e0 2B68     		ldr	r3, [r5]
 1080 03e2 002B     		cmp	r3, #0
 1081 03e4 B8BF     		it	lt
 1082 03e6 5B42     		rsblt	r3, r3, #0
 159:boards/TMC5161_eval.c **** 				tmc5161_writeInt(motorToIC(motor), TMC5161_VMAX, vmax_position);
 1083              		.loc 1 159 7 view .LVU292
 1084 03e8 2021     		movs	r1, #32
 1085              	.LVL109:
 159:boards/TMC5161_eval.c **** 				tmc5161_writeInt(motorToIC(motor), TMC5161_VMAX, vmax_position);
 1086              		.loc 1 159 7 view .LVU293
 1087 03ea 3846     		mov	r0, r7
 1088              	.LVL110:
 158:boards/TMC5161_eval.c **** 			if(tmc5161_readInt(motorToIC(motor), TMC5161_RAMPMODE) == TMC5161_MODE_POSITION)
 1089              		.loc 1 158 18 view .LVU294
 1090 03ec C7F8B832 		str	r3, [r7, #696]
 159:boards/TMC5161_eval.c **** 				tmc5161_writeInt(motorToIC(motor), TMC5161_VMAX, vmax_position);
 1091              		.loc 1 159 4 is_stmt 1 view .LVU295
 1092              	.LBB315:
 1093              	.LBI315:
  31:boards/TMC5161_eval.c **** {
 1094              		.loc 1 31 31 view .LVU296
 1095              	.LVL111:
  31:boards/TMC5161_eval.c **** {
 1096              		.loc 1 31 31 is_stmt 0 view .LVU297
 1097              	.LBE315:
  33:boards/TMC5161_eval.c **** 
 1098              		.loc 1 33 2 is_stmt 1 view .LVU298
  35:boards/TMC5161_eval.c **** }
 1099              		.loc 1 35 2 view .LVU299
 159:boards/TMC5161_eval.c **** 				tmc5161_writeInt(motorToIC(motor), TMC5161_VMAX, vmax_position);
 1100              		.loc 1 159 7 is_stmt 0 view .LVU300
 1101 03f0 FFF7FEFF 		bl	tmc5161_readInt
 1102              	.LVL112:
 159:boards/TMC5161_eval.c **** 				tmc5161_writeInt(motorToIC(motor), TMC5161_VMAX, vmax_position);
 1103              		.loc 1 159 6 view .LVU301
 1104 03f4 0446     		mov	r4, r0
 1105 03f6 08B1     		cbz	r0, .L122
 1106              	.LVL113:
 1107              	.L164:
 113:boards/TMC5161_eval.c **** 
 1108              		.loc 1 113 11 view .LVU302
 1109 03f8 0024     		movs	r4, #0
 1110 03fa A8E7     		b	.L54
 1111              	.LVL114:
 1112              	.L122:
 160:boards/TMC5161_eval.c **** 		}
 1113              		.loc 1 160 5 is_stmt 1 view .LVU303
 1114              	.LBB316:
 1115              	.LBI316:
  31:boards/TMC5161_eval.c **** {
 1116              		.loc 1 31 31 view .LVU304
  31:boards/TMC5161_eval.c **** {
 1117              		.loc 1 31 31 is_stmt 0 view .LVU305
 1118              	.LBE316:
  33:boards/TMC5161_eval.c **** 
 1119              		.loc 1 33 2 is_stmt 1 view .LVU306
  35:boards/TMC5161_eval.c **** }
 1120              		.loc 1 35 2 view .LVU307
 160:boards/TMC5161_eval.c **** 		}
 1121              		.loc 1 160 5 is_stmt 0 view .LVU308
 1122 03fc D7F8B822 		ldr	r2, [r7, #696]
 1123 0400 2721     		movs	r1, #39
 1124 0402 3846     		mov	r0, r7
 1125 0404 FFF7FEFF 		bl	tmc5161_writeInt
 1126              	.LVL115:
 1127 0408 A1E7     		b	.L54
 1128              	.LVL116:
 1129              	.L110:
 165:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_AMAX);
 1130              		.loc 1 165 3 is_stmt 1 view .LVU309
 165:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_AMAX);
 1131              		.loc 1 165 5 is_stmt 0 view .LVU310
 1132 040a 30B9     		cbnz	r0, .L123
 166:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1133              		.loc 1 166 4 is_stmt 1 view .LVU311
 1134              	.LBB317:
 1135              	.LBI317:
  31:boards/TMC5161_eval.c **** {
 1136              		.loc 1 31 31 view .LVU312
 1137              	.LVL117:
  31:boards/TMC5161_eval.c **** {
 1138              		.loc 1 31 31 is_stmt 0 view .LVU313
 1139              	.LBE317:
  33:boards/TMC5161_eval.c **** 
 1140              		.loc 1 33 2 is_stmt 1 view .LVU314
  35:boards/TMC5161_eval.c **** }
 1141              		.loc 1 35 2 view .LVU315
 166:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1142              		.loc 1 166 13 is_stmt 0 view .LVU316
 1143 040c 7C48     		ldr	r0, .L219
 1144              	.LVL118:
 166:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1145              		.loc 1 166 13 view .LVU317
 1146 040e 2621     		movs	r1, #38
 1147              	.LVL119:
 166:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1148              		.loc 1 166 13 view .LVU318
 1149 0410 FFF7FEFF 		bl	tmc5161_readInt
 1150              	.LVL120:
 113:boards/TMC5161_eval.c **** 
 1151              		.loc 1 113 11 view .LVU319
 1152 0414 3446     		mov	r4, r6
 166:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1153              		.loc 1 166 11 view .LVU320
 1154 0416 2860     		str	r0, [r5]
 1155 0418 99E7     		b	.L54
 1156              	.LVL121:
 1157              	.L123:
 167:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_AMAX, *value);
 1158              		.loc 1 167 10 is_stmt 1 view .LVU321
 168:boards/TMC5161_eval.c **** 		}
 1159              		.loc 1 168 4 view .LVU322
 1160              	.LBB318:
 1161              	.LBI318:
  31:boards/TMC5161_eval.c **** {
 1162              		.loc 1 31 31 view .LVU323
  31:boards/TMC5161_eval.c **** {
 1163              		.loc 1 31 31 is_stmt 0 view .LVU324
 1164              	.LBE318:
  33:boards/TMC5161_eval.c **** 
 1165              		.loc 1 33 2 is_stmt 1 view .LVU325
  35:boards/TMC5161_eval.c **** }
 1166              		.loc 1 35 2 view .LVU326
 168:boards/TMC5161_eval.c **** 		}
 1167              		.loc 1 168 4 is_stmt 0 view .LVU327
 1168 041a 2A68     		ldr	r2, [r5]
 1169              	.LVL122:
 168:boards/TMC5161_eval.c **** 		}
 1170              		.loc 1 168 4 view .LVU328
 1171 041c 7848     		ldr	r0, .L219
 1172              	.LVL123:
 168:boards/TMC5161_eval.c **** 		}
 1173              		.loc 1 168 4 view .LVU329
 1174 041e 2621     		movs	r1, #38
 1175              	.LVL124:
 168:boards/TMC5161_eval.c **** 		}
 1176              		.loc 1 168 4 view .LVU330
 1177 0420 FFF7FEFF 		bl	tmc5161_writeInt
 1178              	.LVL125:
 113:boards/TMC5161_eval.c **** 
 1179              		.loc 1 113 11 view .LVU331
 1180 0424 0024     		movs	r4, #0
 1181 0426 92E7     		b	.L54
 1182              	.LVL126:
 1183              	.L109:
 173:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IRUN_MASK, TMC5161_IRU
 1184              		.loc 1 173 3 is_stmt 1 view .LVU332
 174:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1185              		.loc 1 174 13 is_stmt 0 view .LVU333
 1186 0428 7548     		ldr	r0, .L219
 1187              	.LVL127:
 174:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1188              		.loc 1 174 13 view .LVU334
 1189 042a 1021     		movs	r1, #16
 1190              	.LVL128:
 173:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IRUN_MASK, TMC5161_IRU
 1191              		.loc 1 173 5 view .LVU335
 1192 042c 36B9     		cbnz	r6, .L124
 174:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1193              		.loc 1 174 4 is_stmt 1 view .LVU336
 1194              	.LBB319:
 1195              	.LBI319:
  31:boards/TMC5161_eval.c **** {
 1196              		.loc 1 31 31 view .LVU337
 1197              	.LVL129:
  31:boards/TMC5161_eval.c **** {
 1198              		.loc 1 31 31 is_stmt 0 view .LVU338
 1199              	.LBE319:
  33:boards/TMC5161_eval.c **** 
 1200              		.loc 1 33 2 is_stmt 1 view .LVU339
  35:boards/TMC5161_eval.c **** }
 1201              		.loc 1 35 2 view .LVU340
 174:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1202              		.loc 1 174 13 is_stmt 0 view .LVU341
 1203 042e FFF7FEFF 		bl	tmc5161_readInt
 1204              	.LVL130:
 174:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1205              		.loc 1 174 13 view .LVU342
 1206 0432 C0F30420 		ubfx	r0, r0, #8, #5
 174:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1207              		.loc 1 174 11 view .LVU343
 1208 0436 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 1209              		.loc 1 113 11 view .LVU344
 1210 0438 3446     		mov	r4, r6
 1211 043a 88E7     		b	.L54
 1212              	.LVL131:
 1213              	.L124:
 175:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IRUN_MASK, TMC5161_IRUN_SHIFT
 1214              		.loc 1 175 10 is_stmt 1 view .LVU345
 176:boards/TMC5161_eval.c **** 		}
 1215              		.loc 1 176 4 view .LVU346
 1216              	.LBB320:
 1217              	.LBI320:
  31:boards/TMC5161_eval.c **** {
 1218              		.loc 1 31 31 view .LVU347
  31:boards/TMC5161_eval.c **** {
 1219              		.loc 1 31 31 is_stmt 0 view .LVU348
 1220              	.LBE320:
  33:boards/TMC5161_eval.c **** 
 1221              		.loc 1 33 2 is_stmt 1 view .LVU349
  35:boards/TMC5161_eval.c **** }
 1222              		.loc 1 35 2 view .LVU350
 1223              	.LBB321:
 1224              	.LBI321:
  31:boards/TMC5161_eval.c **** {
 1225              		.loc 1 31 31 view .LVU351
  31:boards/TMC5161_eval.c **** {
 1226              		.loc 1 31 31 is_stmt 0 view .LVU352
 1227              	.LBE321:
  33:boards/TMC5161_eval.c **** 
 1228              		.loc 1 33 2 is_stmt 1 view .LVU353
  35:boards/TMC5161_eval.c **** }
 1229              		.loc 1 35 2 view .LVU354
 176:boards/TMC5161_eval.c **** 		}
 1230              		.loc 1 176 4 is_stmt 0 view .LVU355
 1231 043c FFF7FEFF 		bl	tmc5161_readInt
 1232              	.LVL132:
 176:boards/TMC5161_eval.c **** 		}
 1233              		.loc 1 176 4 view .LVU356
 1234 0440 2B68     		ldr	r3, [r5]
 1235 0442 1B02     		lsls	r3, r3, #8
 1236 0444 03F4F853 		and	r3, r3, #7936
 1237 0448 20F4F852 		bic	r2, r0, #7936
 1238 044c 1A43     		orrs	r2, r2, r3
 1239 044e 6C48     		ldr	r0, .L219
 1240 0450 1021     		movs	r1, #16
 1241 0452 FFF7FEFF 		bl	tmc5161_writeInt
 1242              	.LVL133:
 113:boards/TMC5161_eval.c **** 
 1243              		.loc 1 113 11 view .LVU357
 1244 0456 0024     		movs	r4, #0
 1245 0458 79E7     		b	.L54
 1246              	.LVL134:
 1247              	.L108:
 181:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IHOLD_MASK, TMC5161_IH
 1248              		.loc 1 181 3 is_stmt 1 view .LVU358
 182:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1249              		.loc 1 182 13 is_stmt 0 view .LVU359
 1250 045a 6948     		ldr	r0, .L219
 1251              	.LVL135:
 182:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1252              		.loc 1 182 13 view .LVU360
 1253 045c 1021     		movs	r1, #16
 1254              	.LVL136:
 181:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IHOLD_MASK, TMC5161_IH
 1255              		.loc 1 181 5 view .LVU361
 1256 045e 36B9     		cbnz	r6, .L125
 182:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1257              		.loc 1 182 4 is_stmt 1 view .LVU362
 1258              	.LBB322:
 1259              	.LBI322:
  31:boards/TMC5161_eval.c **** {
 1260              		.loc 1 31 31 view .LVU363
 1261              	.LVL137:
  31:boards/TMC5161_eval.c **** {
 1262              		.loc 1 31 31 is_stmt 0 view .LVU364
 1263              	.LBE322:
  33:boards/TMC5161_eval.c **** 
 1264              		.loc 1 33 2 is_stmt 1 view .LVU365
  35:boards/TMC5161_eval.c **** }
 1265              		.loc 1 35 2 view .LVU366
 182:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1266              		.loc 1 182 13 is_stmt 0 view .LVU367
 1267 0460 FFF7FEFF 		bl	tmc5161_readInt
 1268              	.LVL138:
 182:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1269              		.loc 1 182 13 view .LVU368
 1270 0464 00F01F00 		and	r0, r0, #31
 182:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1271              		.loc 1 182 11 view .LVU369
 1272 0468 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 1273              		.loc 1 113 11 view .LVU370
 1274 046a 3446     		mov	r4, r6
 1275 046c 6FE7     		b	.L54
 1276              	.LVL139:
 1277              	.L125:
 183:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_IHOLD_IRUN, TMC5161_IHOLD_MASK, TMC5161_IHOLD_SHI
 1278              		.loc 1 183 10 is_stmt 1 view .LVU371
 184:boards/TMC5161_eval.c **** 		}
 1279              		.loc 1 184 4 view .LVU372
 1280              	.LBB323:
 1281              	.LBI323:
  31:boards/TMC5161_eval.c **** {
 1282              		.loc 1 31 31 view .LVU373
  31:boards/TMC5161_eval.c **** {
 1283              		.loc 1 31 31 is_stmt 0 view .LVU374
 1284              	.LBE323:
  33:boards/TMC5161_eval.c **** 
 1285              		.loc 1 33 2 is_stmt 1 view .LVU375
  35:boards/TMC5161_eval.c **** }
 1286              		.loc 1 35 2 view .LVU376
 1287              	.LBB324:
 1288              	.LBI324:
  31:boards/TMC5161_eval.c **** {
 1289              		.loc 1 31 31 view .LVU377
  31:boards/TMC5161_eval.c **** {
 1290              		.loc 1 31 31 is_stmt 0 view .LVU378
 1291              	.LBE324:
  33:boards/TMC5161_eval.c **** 
 1292              		.loc 1 33 2 is_stmt 1 view .LVU379
  35:boards/TMC5161_eval.c **** }
 1293              		.loc 1 35 2 view .LVU380
 184:boards/TMC5161_eval.c **** 		}
 1294              		.loc 1 184 4 is_stmt 0 view .LVU381
 1295 046e FFF7FEFF 		bl	tmc5161_readInt
 1296              	.LVL140:
 184:boards/TMC5161_eval.c **** 		}
 1297              		.loc 1 184 4 view .LVU382
 1298 0472 2A68     		ldr	r2, [r5]
 1299 0474 20F01F00 		bic	r0, r0, #31
 1300 0478 02F01F02 		and	r2, r2, #31
 1301 047c 0243     		orrs	r2, r2, r0
 1302 047e 1021     		movs	r1, #16
 1303 0480 5F48     		ldr	r0, .L219
 1304 0482 FFF7FEFF 		bl	tmc5161_writeInt
 1305              	.LVL141:
 113:boards/TMC5161_eval.c **** 
 1306              		.loc 1 113 11 view .LVU383
 1307 0486 0024     		movs	r4, #0
 1308 0488 61E7     		b	.L54
 1309              	.LVL142:
 1310              	.L107:
 189:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_RAMPSTAT, TMC5161_POSITION_REACHED_MASK, T
 1311              		.loc 1 189 3 is_stmt 1 view .LVU384
 189:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_RAMPSTAT, TMC5161_POSITION_REACHED_MASK, T
 1312              		.loc 1 189 5 is_stmt 0 view .LVU385
 1313 048a 0028     		cmp	r0, #0
 1314 048c 40F01585 		bne	.L202
 190:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1315              		.loc 1 190 4 is_stmt 1 view .LVU386
 1316              	.LBB325:
 1317              	.LBI325:
  31:boards/TMC5161_eval.c **** {
 1318              		.loc 1 31 31 view .LVU387
 1319              	.LVL143:
  31:boards/TMC5161_eval.c **** {
 1320              		.loc 1 31 31 is_stmt 0 view .LVU388
 1321              	.LBE325:
  33:boards/TMC5161_eval.c **** 
 1322              		.loc 1 33 2 is_stmt 1 view .LVU389
  35:boards/TMC5161_eval.c **** }
 1323              		.loc 1 35 2 view .LVU390
 190:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1324              		.loc 1 190 13 is_stmt 0 view .LVU391
 1325 0490 5B48     		ldr	r0, .L219
 1326              	.LVL144:
 190:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1327              		.loc 1 190 13 view .LVU392
 1328 0492 3521     		movs	r1, #53
 1329              	.LVL145:
 190:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1330              		.loc 1 190 13 view .LVU393
 1331 0494 FFF7FEFF 		bl	tmc5161_readInt
 1332              	.LVL146:
 190:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1333              		.loc 1 190 13 view .LVU394
 1334 0498 C0F34020 		ubfx	r0, r0, #9, #1
 190:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1335              		.loc 1 190 11 view .LVU395
 1336 049c 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 1337              		.loc 1 113 11 view .LVU396
 1338 049e 3446     		mov	r4, r6
 1339 04a0 55E7     		b	.L54
 1340              	.LVL147:
 1341              	.L106:
 197:boards/TMC5161_eval.c **** 			*value = !TMC5161_FIELD_READ(motorToIC(motor), TMC5161_RAMPSTAT, TMC5161_STATUS_STOP_R_MASK, TMC
 1342              		.loc 1 197 3 is_stmt 1 view .LVU397
 197:boards/TMC5161_eval.c **** 			*value = !TMC5161_FIELD_READ(motorToIC(motor), TMC5161_RAMPSTAT, TMC5161_STATUS_STOP_R_MASK, TMC
 1343              		.loc 1 197 5 is_stmt 0 view .LVU398
 1344 04a2 0028     		cmp	r0, #0
 1345 04a4 40F00C85 		bne	.L203
 198:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1346              		.loc 1 198 4 is_stmt 1 view .LVU399
 1347              	.LBB326:
 1348              	.LBI326:
  31:boards/TMC5161_eval.c **** {
 1349              		.loc 1 31 31 view .LVU400
 1350              	.LVL148:
  31:boards/TMC5161_eval.c **** {
 1351              		.loc 1 31 31 is_stmt 0 view .LVU401
 1352              	.LBE326:
  33:boards/TMC5161_eval.c **** 
 1353              		.loc 1 33 2 is_stmt 1 view .LVU402
  35:boards/TMC5161_eval.c **** }
 1354              		.loc 1 35 2 view .LVU403
 198:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1355              		.loc 1 198 14 is_stmt 0 view .LVU404
 1356 04a8 5548     		ldr	r0, .L219
 1357              	.LVL149:
 198:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1358              		.loc 1 198 14 view .LVU405
 1359 04aa 3521     		movs	r1, #53
 1360              	.LVL150:
 198:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1361              		.loc 1 198 14 view .LVU406
 1362 04ac FFF7FEFF 		bl	tmc5161_readInt
 1363              	.LVL151:
 198:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1364              		.loc 1 198 13 view .LVU407
 1365 04b0 10F0020F 		tst	r0, #2
 1366 04b4 0CBF     		ite	eq
 1367 04b6 0123     		moveq	r3, #1
 1368 04b8 0023     		movne	r3, #0
 198:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1369              		.loc 1 198 11 view .LVU408
 1370 04ba 2B60     		str	r3, [r5]
 113:boards/TMC5161_eval.c **** 
 1371              		.loc 1 113 11 view .LVU409
 1372 04bc 3446     		mov	r4, r6
 1373 04be 46E7     		b	.L54
 1374              	.LVL152:
 1375              	.L105:
 205:boards/TMC5161_eval.c **** 			*value = !TMC5161_FIELD_READ(motorToIC(motor), TMC5161_RAMPSTAT, TMC5161_STATUS_STOP_L_MASK, TMC
 1376              		.loc 1 205 3 is_stmt 1 view .LVU410
 205:boards/TMC5161_eval.c **** 			*value = !TMC5161_FIELD_READ(motorToIC(motor), TMC5161_RAMPSTAT, TMC5161_STATUS_STOP_L_MASK, TMC
 1377              		.loc 1 205 5 is_stmt 0 view .LVU411
 1378 04c0 0028     		cmp	r0, #0
 1379 04c2 40F00085 		bne	.L204
 206:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1380              		.loc 1 206 4 is_stmt 1 view .LVU412
 1381              	.LBB327:
 1382              	.LBI327:
  31:boards/TMC5161_eval.c **** {
 1383              		.loc 1 31 31 view .LVU413
 1384              	.LVL153:
  31:boards/TMC5161_eval.c **** {
 1385              		.loc 1 31 31 is_stmt 0 view .LVU414
 1386              	.LBE327:
  33:boards/TMC5161_eval.c **** 
 1387              		.loc 1 33 2 is_stmt 1 view .LVU415
  35:boards/TMC5161_eval.c **** }
 1388              		.loc 1 35 2 view .LVU416
 206:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1389              		.loc 1 206 14 is_stmt 0 view .LVU417
 1390 04c6 4E48     		ldr	r0, .L219
 1391              	.LVL154:
 206:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1392              		.loc 1 206 14 view .LVU418
 1393 04c8 3521     		movs	r1, #53
 1394              	.LVL155:
 206:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1395              		.loc 1 206 14 view .LVU419
 1396 04ca FFF7FEFF 		bl	tmc5161_readInt
 1397              	.LVL156:
 206:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1398              		.loc 1 206 11 view .LVU420
 1399 04ce C043     		mvns	r0, r0
 1400 04d0 00F00100 		and	r0, r0, #1
 1401 04d4 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 1402              		.loc 1 113 11 view .LVU421
 1403 04d6 3446     		mov	r4, r6
 1404 04d8 39E7     		b	.L54
 1405              	.LVL157:
 1406              	.L104:
 213:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_R_ENABLE_MASK, TMC516
 1407              		.loc 1 213 3 is_stmt 1 view .LVU422
 214:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1408              		.loc 1 214 13 is_stmt 0 view .LVU423
 1409 04da 4948     		ldr	r0, .L219
 1410              	.LVL158:
 214:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1411              		.loc 1 214 13 view .LVU424
 1412 04dc 3421     		movs	r1, #52
 1413              	.LVL159:
 213:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_R_ENABLE_MASK, TMC516
 1414              		.loc 1 213 5 view .LVU425
 1415 04de 36B9     		cbnz	r6, .L126
 214:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1416              		.loc 1 214 4 is_stmt 1 view .LVU426
 1417              	.LBB328:
 1418              	.LBI328:
  31:boards/TMC5161_eval.c **** {
 1419              		.loc 1 31 31 view .LVU427
 1420              	.LVL160:
  31:boards/TMC5161_eval.c **** {
 1421              		.loc 1 31 31 is_stmt 0 view .LVU428
 1422              	.LBE328:
  33:boards/TMC5161_eval.c **** 
 1423              		.loc 1 33 2 is_stmt 1 view .LVU429
  35:boards/TMC5161_eval.c **** }
 1424              		.loc 1 35 2 view .LVU430
 214:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1425              		.loc 1 214 13 is_stmt 0 view .LVU431
 1426 04e0 FFF7FEFF 		bl	tmc5161_readInt
 1427              	.LVL161:
 214:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1428              		.loc 1 214 13 view .LVU432
 1429 04e4 C0F34000 		ubfx	r0, r0, #1, #1
 214:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1430              		.loc 1 214 11 view .LVU433
 1431 04e8 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 1432              		.loc 1 113 11 view .LVU434
 1433 04ea 3446     		mov	r4, r6
 1434 04ec 2FE7     		b	.L54
 1435              	.LVL162:
 1436              	.L126:
 215:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_R_ENABLE_MASK, TMC5161_STOP_
 1437              		.loc 1 215 10 is_stmt 1 view .LVU435
 216:boards/TMC5161_eval.c **** 		}
 1438              		.loc 1 216 4 view .LVU436
 1439              	.LBB329:
 1440              	.LBI329:
  31:boards/TMC5161_eval.c **** {
 1441              		.loc 1 31 31 view .LVU437
  31:boards/TMC5161_eval.c **** {
 1442              		.loc 1 31 31 is_stmt 0 view .LVU438
 1443              	.LBE329:
  33:boards/TMC5161_eval.c **** 
 1444              		.loc 1 33 2 is_stmt 1 view .LVU439
  35:boards/TMC5161_eval.c **** }
 1445              		.loc 1 35 2 view .LVU440
 1446              	.LBB330:
 1447              	.LBI330:
  31:boards/TMC5161_eval.c **** {
 1448              		.loc 1 31 31 view .LVU441
  31:boards/TMC5161_eval.c **** {
 1449              		.loc 1 31 31 is_stmt 0 view .LVU442
 1450              	.LBE330:
  33:boards/TMC5161_eval.c **** 
 1451              		.loc 1 33 2 is_stmt 1 view .LVU443
  35:boards/TMC5161_eval.c **** }
 1452              		.loc 1 35 2 view .LVU444
 216:boards/TMC5161_eval.c **** 		}
 1453              		.loc 1 216 4 is_stmt 0 view .LVU445
 1454 04ee FFF7FEFF 		bl	tmc5161_readInt
 1455              	.LVL163:
 216:boards/TMC5161_eval.c **** 		}
 1456              		.loc 1 216 4 view .LVU446
 1457 04f2 2B68     		ldr	r3, [r5]
 1458 04f4 5B00     		lsls	r3, r3, #1
 1459 04f6 03F00203 		and	r3, r3, #2
 1460 04fa 20F00202 		bic	r2, r0, #2
 1461 04fe 1A43     		orrs	r2, r2, r3
 1462 0500 3F48     		ldr	r0, .L219
 1463 0502 3421     		movs	r1, #52
 1464 0504 FFF7FEFF 		bl	tmc5161_writeInt
 1465              	.LVL164:
 113:boards/TMC5161_eval.c **** 
 1466              		.loc 1 113 11 view .LVU447
 1467 0508 0024     		movs	r4, #0
 1468 050a 20E7     		b	.L54
 1469              	.LVL165:
 1470              	.L103:
 221:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_L_ENABLE_MASK, TMC516
 1471              		.loc 1 221 3 is_stmt 1 view .LVU448
 222:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1472              		.loc 1 222 13 is_stmt 0 view .LVU449
 1473 050c 3C48     		ldr	r0, .L219
 1474              	.LVL166:
 222:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1475              		.loc 1 222 13 view .LVU450
 1476 050e 3421     		movs	r1, #52
 1477              	.LVL167:
 221:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_L_ENABLE_MASK, TMC516
 1478              		.loc 1 221 5 view .LVU451
 1479 0510 36B9     		cbnz	r6, .L127
 222:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1480              		.loc 1 222 4 is_stmt 1 view .LVU452
 1481              	.LBB331:
 1482              	.LBI331:
  31:boards/TMC5161_eval.c **** {
 1483              		.loc 1 31 31 view .LVU453
 1484              	.LVL168:
  31:boards/TMC5161_eval.c **** {
 1485              		.loc 1 31 31 is_stmt 0 view .LVU454
 1486              	.LBE331:
  33:boards/TMC5161_eval.c **** 
 1487              		.loc 1 33 2 is_stmt 1 view .LVU455
  35:boards/TMC5161_eval.c **** }
 1488              		.loc 1 35 2 view .LVU456
 222:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1489              		.loc 1 222 13 is_stmt 0 view .LVU457
 1490 0512 FFF7FEFF 		bl	tmc5161_readInt
 1491              	.LVL169:
 222:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1492              		.loc 1 222 13 view .LVU458
 1493 0516 00F00100 		and	r0, r0, #1
 222:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1494              		.loc 1 222 11 view .LVU459
 1495 051a 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 1496              		.loc 1 113 11 view .LVU460
 1497 051c 3446     		mov	r4, r6
 1498 051e 16E7     		b	.L54
 1499              	.LVL170:
 1500              	.L127:
 223:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_SWMODE, TMC5161_STOP_L_ENABLE_MASK, TMC5161_STOP_
 1501              		.loc 1 223 10 is_stmt 1 view .LVU461
 224:boards/TMC5161_eval.c **** 		}
 1502              		.loc 1 224 4 view .LVU462
 1503              	.LBB332:
 1504              	.LBI332:
  31:boards/TMC5161_eval.c **** {
 1505              		.loc 1 31 31 view .LVU463
  31:boards/TMC5161_eval.c **** {
 1506              		.loc 1 31 31 is_stmt 0 view .LVU464
 1507              	.LBE332:
  33:boards/TMC5161_eval.c **** 
 1508              		.loc 1 33 2 is_stmt 1 view .LVU465
  35:boards/TMC5161_eval.c **** }
 1509              		.loc 1 35 2 view .LVU466
 1510              	.LBB333:
 1511              	.LBI333:
  31:boards/TMC5161_eval.c **** {
 1512              		.loc 1 31 31 view .LVU467
  31:boards/TMC5161_eval.c **** {
 1513              		.loc 1 31 31 is_stmt 0 view .LVU468
 1514              	.LBE333:
  33:boards/TMC5161_eval.c **** 
 1515              		.loc 1 33 2 is_stmt 1 view .LVU469
  35:boards/TMC5161_eval.c **** }
 1516              		.loc 1 35 2 view .LVU470
 224:boards/TMC5161_eval.c **** 		}
 1517              		.loc 1 224 4 is_stmt 0 view .LVU471
 1518 0520 FFF7FEFF 		bl	tmc5161_readInt
 1519              	.LVL171:
 224:boards/TMC5161_eval.c **** 		}
 1520              		.loc 1 224 4 view .LVU472
 1521 0524 2A68     		ldr	r2, [r5]
 1522 0526 20F00100 		bic	r0, r0, #1
 1523 052a 02F00102 		and	r2, r2, #1
 1524 052e 0243     		orrs	r2, r2, r0
 1525 0530 3421     		movs	r1, #52
 1526 0532 3348     		ldr	r0, .L219
 1527 0534 FFF7FEFF 		bl	tmc5161_writeInt
 1528              	.LVL172:
 113:boards/TMC5161_eval.c **** 
 1529              		.loc 1 113 11 view .LVU473
 1530 0538 0024     		movs	r4, #0
 1531 053a 08E7     		b	.L54
 1532              	.LVL173:
 1533              	.L102:
 229:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_SWMODE);
 1534              		.loc 1 229 3 is_stmt 1 view .LVU474
 229:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_SWMODE);
 1535              		.loc 1 229 5 is_stmt 0 view .LVU475
 1536 053c 30B9     		cbnz	r0, .L128
 230:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1537              		.loc 1 230 4 is_stmt 1 view .LVU476
 1538              	.LBB334:
 1539              	.LBI334:
  31:boards/TMC5161_eval.c **** {
 1540              		.loc 1 31 31 view .LVU477
 1541              	.LVL174:
  31:boards/TMC5161_eval.c **** {
 1542              		.loc 1 31 31 is_stmt 0 view .LVU478
 1543              	.LBE334:
  33:boards/TMC5161_eval.c **** 
 1544              		.loc 1 33 2 is_stmt 1 view .LVU479
  35:boards/TMC5161_eval.c **** }
 1545              		.loc 1 35 2 view .LVU480
 230:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1546              		.loc 1 230 13 is_stmt 0 view .LVU481
 1547 053e 3048     		ldr	r0, .L219
 1548              	.LVL175:
 230:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1549              		.loc 1 230 13 view .LVU482
 1550 0540 3421     		movs	r1, #52
 1551              	.LVL176:
 230:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1552              		.loc 1 230 13 view .LVU483
 1553 0542 FFF7FEFF 		bl	tmc5161_readInt
 1554              	.LVL177:
 113:boards/TMC5161_eval.c **** 
 1555              		.loc 1 113 11 view .LVU484
 1556 0546 3446     		mov	r4, r6
 230:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1557              		.loc 1 230 11 view .LVU485
 1558 0548 2860     		str	r0, [r5]
 1559 054a 00E7     		b	.L54
 1560              	.LVL178:
 1561              	.L128:
 231:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_SWMODE, *value);
 1562              		.loc 1 231 10 is_stmt 1 view .LVU486
 232:boards/TMC5161_eval.c **** 		}
 1563              		.loc 1 232 4 view .LVU487
 1564              	.LBB335:
 1565              	.LBI335:
  31:boards/TMC5161_eval.c **** {
 1566              		.loc 1 31 31 view .LVU488
  31:boards/TMC5161_eval.c **** {
 1567              		.loc 1 31 31 is_stmt 0 view .LVU489
 1568              	.LBE335:
  33:boards/TMC5161_eval.c **** 
 1569              		.loc 1 33 2 is_stmt 1 view .LVU490
  35:boards/TMC5161_eval.c **** }
 1570              		.loc 1 35 2 view .LVU491
 232:boards/TMC5161_eval.c **** 		}
 1571              		.loc 1 232 4 is_stmt 0 view .LVU492
 1572 054c 2A68     		ldr	r2, [r5]
 1573              	.LVL179:
 232:boards/TMC5161_eval.c **** 		}
 1574              		.loc 1 232 4 view .LVU493
 1575 054e 2C48     		ldr	r0, .L219
 1576              	.LVL180:
 232:boards/TMC5161_eval.c **** 		}
 1577              		.loc 1 232 4 view .LVU494
 1578 0550 3421     		movs	r1, #52
 1579              	.LVL181:
 232:boards/TMC5161_eval.c **** 		}
 1580              		.loc 1 232 4 view .LVU495
 1581 0552 FFF7FEFF 		bl	tmc5161_writeInt
 1582              	.LVL182:
 113:boards/TMC5161_eval.c **** 
 1583              		.loc 1 113 11 view .LVU496
 1584 0556 0024     		movs	r4, #0
 1585 0558 F9E6     		b	.L54
 1586              	.LVL183:
 1587              	.L101:
 237:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_A1);
 1588              		.loc 1 237 3 is_stmt 1 view .LVU497
 237:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_A1);
 1589              		.loc 1 237 5 is_stmt 0 view .LVU498
 1590 055a 30B9     		cbnz	r0, .L129
 238:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1591              		.loc 1 238 4 is_stmt 1 view .LVU499
 1592              	.LBB336:
 1593              	.LBI336:
  31:boards/TMC5161_eval.c **** {
 1594              		.loc 1 31 31 view .LVU500
 1595              	.LVL184:
  31:boards/TMC5161_eval.c **** {
 1596              		.loc 1 31 31 is_stmt 0 view .LVU501
 1597              	.LBE336:
  33:boards/TMC5161_eval.c **** 
 1598              		.loc 1 33 2 is_stmt 1 view .LVU502
  35:boards/TMC5161_eval.c **** }
 1599              		.loc 1 35 2 view .LVU503
 238:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1600              		.loc 1 238 13 is_stmt 0 view .LVU504
 1601 055c 2848     		ldr	r0, .L219
 1602              	.LVL185:
 238:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1603              		.loc 1 238 13 view .LVU505
 1604 055e 2421     		movs	r1, #36
 1605              	.LVL186:
 238:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1606              		.loc 1 238 13 view .LVU506
 1607 0560 FFF7FEFF 		bl	tmc5161_readInt
 1608              	.LVL187:
 113:boards/TMC5161_eval.c **** 
 1609              		.loc 1 113 11 view .LVU507
 1610 0564 3446     		mov	r4, r6
 238:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1611              		.loc 1 238 11 view .LVU508
 1612 0566 2860     		str	r0, [r5]
 1613 0568 F1E6     		b	.L54
 1614              	.LVL188:
 1615              	.L129:
 239:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_A1, *value);
 1616              		.loc 1 239 10 is_stmt 1 view .LVU509
 240:boards/TMC5161_eval.c **** 		}
 1617              		.loc 1 240 4 view .LVU510
 1618              	.LBB337:
 1619              	.LBI337:
  31:boards/TMC5161_eval.c **** {
 1620              		.loc 1 31 31 view .LVU511
  31:boards/TMC5161_eval.c **** {
 1621              		.loc 1 31 31 is_stmt 0 view .LVU512
 1622              	.LBE337:
  33:boards/TMC5161_eval.c **** 
 1623              		.loc 1 33 2 is_stmt 1 view .LVU513
  35:boards/TMC5161_eval.c **** }
 1624              		.loc 1 35 2 view .LVU514
 240:boards/TMC5161_eval.c **** 		}
 1625              		.loc 1 240 4 is_stmt 0 view .LVU515
 1626 056a 2A68     		ldr	r2, [r5]
 1627              	.LVL189:
 240:boards/TMC5161_eval.c **** 		}
 1628              		.loc 1 240 4 view .LVU516
 1629 056c 2448     		ldr	r0, .L219
 1630              	.LVL190:
 240:boards/TMC5161_eval.c **** 		}
 1631              		.loc 1 240 4 view .LVU517
 1632 056e 2421     		movs	r1, #36
 1633              	.LVL191:
 240:boards/TMC5161_eval.c **** 		}
 1634              		.loc 1 240 4 view .LVU518
 1635 0570 FFF7FEFF 		bl	tmc5161_writeInt
 1636              	.LVL192:
 113:boards/TMC5161_eval.c **** 
 1637              		.loc 1 113 11 view .LVU519
 1638 0574 0024     		movs	r4, #0
 1639 0576 EAE6     		b	.L54
 1640              	.LVL193:
 1641              	.L100:
 245:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_V1);
 1642              		.loc 1 245 3 is_stmt 1 view .LVU520
 245:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_V1);
 1643              		.loc 1 245 5 is_stmt 0 view .LVU521
 1644 0578 30B9     		cbnz	r0, .L130
 246:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1645              		.loc 1 246 4 is_stmt 1 view .LVU522
 1646              	.LBB338:
 1647              	.LBI338:
  31:boards/TMC5161_eval.c **** {
 1648              		.loc 1 31 31 view .LVU523
 1649              	.LVL194:
  31:boards/TMC5161_eval.c **** {
 1650              		.loc 1 31 31 is_stmt 0 view .LVU524
 1651              	.LBE338:
  33:boards/TMC5161_eval.c **** 
 1652              		.loc 1 33 2 is_stmt 1 view .LVU525
  35:boards/TMC5161_eval.c **** }
 1653              		.loc 1 35 2 view .LVU526
 246:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1654              		.loc 1 246 13 is_stmt 0 view .LVU527
 1655 057a 2148     		ldr	r0, .L219
 1656              	.LVL195:
 246:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1657              		.loc 1 246 13 view .LVU528
 1658 057c 2521     		movs	r1, #37
 1659              	.LVL196:
 246:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1660              		.loc 1 246 13 view .LVU529
 1661 057e FFF7FEFF 		bl	tmc5161_readInt
 1662              	.LVL197:
 113:boards/TMC5161_eval.c **** 
 1663              		.loc 1 113 11 view .LVU530
 1664 0582 3446     		mov	r4, r6
 246:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1665              		.loc 1 246 11 view .LVU531
 1666 0584 2860     		str	r0, [r5]
 1667 0586 E2E6     		b	.L54
 1668              	.LVL198:
 1669              	.L130:
 247:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_V1, *value);
 1670              		.loc 1 247 10 is_stmt 1 view .LVU532
 248:boards/TMC5161_eval.c **** 		}
 1671              		.loc 1 248 4 view .LVU533
 1672              	.LBB339:
 1673              	.LBI339:
  31:boards/TMC5161_eval.c **** {
 1674              		.loc 1 31 31 view .LVU534
  31:boards/TMC5161_eval.c **** {
 1675              		.loc 1 31 31 is_stmt 0 view .LVU535
 1676              	.LBE339:
  33:boards/TMC5161_eval.c **** 
 1677              		.loc 1 33 2 is_stmt 1 view .LVU536
  35:boards/TMC5161_eval.c **** }
 1678              		.loc 1 35 2 view .LVU537
 248:boards/TMC5161_eval.c **** 		}
 1679              		.loc 1 248 4 is_stmt 0 view .LVU538
 1680 0588 2A68     		ldr	r2, [r5]
 1681              	.LVL199:
 248:boards/TMC5161_eval.c **** 		}
 1682              		.loc 1 248 4 view .LVU539
 1683 058a 1D48     		ldr	r0, .L219
 1684              	.LVL200:
 248:boards/TMC5161_eval.c **** 		}
 1685              		.loc 1 248 4 view .LVU540
 1686 058c 2521     		movs	r1, #37
 1687              	.LVL201:
 248:boards/TMC5161_eval.c **** 		}
 1688              		.loc 1 248 4 view .LVU541
 1689 058e FFF7FEFF 		bl	tmc5161_writeInt
 1690              	.LVL202:
 113:boards/TMC5161_eval.c **** 
 1691              		.loc 1 113 11 view .LVU542
 1692 0592 0024     		movs	r4, #0
 1693 0594 DBE6     		b	.L54
 1694              	.LVL203:
 1695              	.L99:
 253:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_DMAX);
 1696              		.loc 1 253 3 is_stmt 1 view .LVU543
 253:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_DMAX);
 1697              		.loc 1 253 5 is_stmt 0 view .LVU544
 1698 0596 30B9     		cbnz	r0, .L131
 254:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1699              		.loc 1 254 4 is_stmt 1 view .LVU545
 1700              	.LBB340:
 1701              	.LBI340:
  31:boards/TMC5161_eval.c **** {
 1702              		.loc 1 31 31 view .LVU546
 1703              	.LVL204:
  31:boards/TMC5161_eval.c **** {
 1704              		.loc 1 31 31 is_stmt 0 view .LVU547
 1705              	.LBE340:
  33:boards/TMC5161_eval.c **** 
 1706              		.loc 1 33 2 is_stmt 1 view .LVU548
  35:boards/TMC5161_eval.c **** }
 1707              		.loc 1 35 2 view .LVU549
 254:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1708              		.loc 1 254 13 is_stmt 0 view .LVU550
 1709 0598 1948     		ldr	r0, .L219
 1710              	.LVL205:
 254:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1711              		.loc 1 254 13 view .LVU551
 1712 059a 2821     		movs	r1, #40
 1713              	.LVL206:
 254:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1714              		.loc 1 254 13 view .LVU552
 1715 059c FFF7FEFF 		bl	tmc5161_readInt
 1716              	.LVL207:
 113:boards/TMC5161_eval.c **** 
 1717              		.loc 1 113 11 view .LVU553
 1718 05a0 3446     		mov	r4, r6
 254:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1719              		.loc 1 254 11 view .LVU554
 1720 05a2 2860     		str	r0, [r5]
 1721 05a4 D3E6     		b	.L54
 1722              	.LVL208:
 1723              	.L131:
 255:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_DMAX, *value);
 1724              		.loc 1 255 10 is_stmt 1 view .LVU555
 256:boards/TMC5161_eval.c **** 		}
 1725              		.loc 1 256 4 view .LVU556
 1726              	.LBB341:
 1727              	.LBI341:
  31:boards/TMC5161_eval.c **** {
 1728              		.loc 1 31 31 view .LVU557
  31:boards/TMC5161_eval.c **** {
 1729              		.loc 1 31 31 is_stmt 0 view .LVU558
 1730              	.LBE341:
  33:boards/TMC5161_eval.c **** 
 1731              		.loc 1 33 2 is_stmt 1 view .LVU559
  35:boards/TMC5161_eval.c **** }
 1732              		.loc 1 35 2 view .LVU560
 256:boards/TMC5161_eval.c **** 		}
 1733              		.loc 1 256 4 is_stmt 0 view .LVU561
 1734 05a6 2A68     		ldr	r2, [r5]
 1735              	.LVL209:
 256:boards/TMC5161_eval.c **** 		}
 1736              		.loc 1 256 4 view .LVU562
 1737 05a8 1548     		ldr	r0, .L219
 1738              	.LVL210:
 256:boards/TMC5161_eval.c **** 		}
 1739              		.loc 1 256 4 view .LVU563
 1740 05aa 2821     		movs	r1, #40
 1741              	.LVL211:
 256:boards/TMC5161_eval.c **** 		}
 1742              		.loc 1 256 4 view .LVU564
 1743 05ac FFF7FEFF 		bl	tmc5161_writeInt
 1744              	.LVL212:
 113:boards/TMC5161_eval.c **** 
 1745              		.loc 1 113 11 view .LVU565
 1746 05b0 0024     		movs	r4, #0
 1747 05b2 CCE6     		b	.L54
 1748              	.LVL213:
 1749              	.L98:
 261:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_D1);
 1750              		.loc 1 261 3 is_stmt 1 view .LVU566
 261:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_D1);
 1751              		.loc 1 261 5 is_stmt 0 view .LVU567
 1752 05b4 30B9     		cbnz	r0, .L132
 262:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1753              		.loc 1 262 4 is_stmt 1 view .LVU568
 1754              	.LBB342:
 1755              	.LBI342:
  31:boards/TMC5161_eval.c **** {
 1756              		.loc 1 31 31 view .LVU569
 1757              	.LVL214:
  31:boards/TMC5161_eval.c **** {
 1758              		.loc 1 31 31 is_stmt 0 view .LVU570
 1759              	.LBE342:
  33:boards/TMC5161_eval.c **** 
 1760              		.loc 1 33 2 is_stmt 1 view .LVU571
  35:boards/TMC5161_eval.c **** }
 1761              		.loc 1 35 2 view .LVU572
 262:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1762              		.loc 1 262 13 is_stmt 0 view .LVU573
 1763 05b6 1248     		ldr	r0, .L219
 1764              	.LVL215:
 262:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1765              		.loc 1 262 13 view .LVU574
 1766 05b8 2A21     		movs	r1, #42
 1767              	.LVL216:
 262:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1768              		.loc 1 262 13 view .LVU575
 1769 05ba FFF7FEFF 		bl	tmc5161_readInt
 1770              	.LVL217:
 113:boards/TMC5161_eval.c **** 
 1771              		.loc 1 113 11 view .LVU576
 1772 05be 3446     		mov	r4, r6
 262:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1773              		.loc 1 262 11 view .LVU577
 1774 05c0 2860     		str	r0, [r5]
 1775 05c2 C4E6     		b	.L54
 1776              	.LVL218:
 1777              	.L132:
 263:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_D1, *value);
 1778              		.loc 1 263 10 is_stmt 1 view .LVU578
 264:boards/TMC5161_eval.c **** 		}
 1779              		.loc 1 264 4 view .LVU579
 1780              	.LBB343:
 1781              	.LBI343:
  31:boards/TMC5161_eval.c **** {
 1782              		.loc 1 31 31 view .LVU580
  31:boards/TMC5161_eval.c **** {
 1783              		.loc 1 31 31 is_stmt 0 view .LVU581
 1784              	.LBE343:
  33:boards/TMC5161_eval.c **** 
 1785              		.loc 1 33 2 is_stmt 1 view .LVU582
  35:boards/TMC5161_eval.c **** }
 1786              		.loc 1 35 2 view .LVU583
 264:boards/TMC5161_eval.c **** 		}
 1787              		.loc 1 264 4 is_stmt 0 view .LVU584
 1788 05c4 2A68     		ldr	r2, [r5]
 1789              	.LVL219:
 264:boards/TMC5161_eval.c **** 		}
 1790              		.loc 1 264 4 view .LVU585
 1791 05c6 0E48     		ldr	r0, .L219
 1792              	.LVL220:
 264:boards/TMC5161_eval.c **** 		}
 1793              		.loc 1 264 4 view .LVU586
 1794 05c8 2A21     		movs	r1, #42
 1795              	.LVL221:
 264:boards/TMC5161_eval.c **** 		}
 1796              		.loc 1 264 4 view .LVU587
 1797 05ca FFF7FEFF 		bl	tmc5161_writeInt
 1798              	.LVL222:
 113:boards/TMC5161_eval.c **** 
 1799              		.loc 1 113 11 view .LVU588
 1800 05ce 0024     		movs	r4, #0
 1801 05d0 BDE6     		b	.L54
 1802              	.LVL223:
 1803              	.L97:
 269:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VSTART);
 1804              		.loc 1 269 3 is_stmt 1 view .LVU589
 269:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VSTART);
 1805              		.loc 1 269 5 is_stmt 0 view .LVU590
 1806 05d2 30B9     		cbnz	r0, .L133
 270:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1807              		.loc 1 270 4 is_stmt 1 view .LVU591
 1808              	.LBB344:
 1809              	.LBI344:
  31:boards/TMC5161_eval.c **** {
 1810              		.loc 1 31 31 view .LVU592
 1811              	.LVL224:
  31:boards/TMC5161_eval.c **** {
 1812              		.loc 1 31 31 is_stmt 0 view .LVU593
 1813              	.LBE344:
  33:boards/TMC5161_eval.c **** 
 1814              		.loc 1 33 2 is_stmt 1 view .LVU594
  35:boards/TMC5161_eval.c **** }
 1815              		.loc 1 35 2 view .LVU595
 270:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1816              		.loc 1 270 13 is_stmt 0 view .LVU596
 1817 05d4 0A48     		ldr	r0, .L219
 1818              	.LVL225:
 270:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1819              		.loc 1 270 13 view .LVU597
 1820 05d6 2321     		movs	r1, #35
 1821              	.LVL226:
 270:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1822              		.loc 1 270 13 view .LVU598
 1823 05d8 FFF7FEFF 		bl	tmc5161_readInt
 1824              	.LVL227:
 113:boards/TMC5161_eval.c **** 
 1825              		.loc 1 113 11 view .LVU599
 1826 05dc 3446     		mov	r4, r6
 270:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1827              		.loc 1 270 11 view .LVU600
 1828 05de 2860     		str	r0, [r5]
 1829 05e0 B5E6     		b	.L54
 1830              	.LVL228:
 1831              	.L133:
 271:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_VSTART, *value);
 1832              		.loc 1 271 10 is_stmt 1 view .LVU601
 272:boards/TMC5161_eval.c **** 		}
 1833              		.loc 1 272 4 view .LVU602
 1834              	.LBB345:
 1835              	.LBI345:
  31:boards/TMC5161_eval.c **** {
 1836              		.loc 1 31 31 view .LVU603
  31:boards/TMC5161_eval.c **** {
 1837              		.loc 1 31 31 is_stmt 0 view .LVU604
 1838              	.LBE345:
  33:boards/TMC5161_eval.c **** 
 1839              		.loc 1 33 2 is_stmt 1 view .LVU605
  35:boards/TMC5161_eval.c **** }
 1840              		.loc 1 35 2 view .LVU606
 272:boards/TMC5161_eval.c **** 		}
 1841              		.loc 1 272 4 is_stmt 0 view .LVU607
 1842 05e2 2A68     		ldr	r2, [r5]
 1843              	.LVL229:
 272:boards/TMC5161_eval.c **** 		}
 1844              		.loc 1 272 4 view .LVU608
 1845 05e4 0648     		ldr	r0, .L219
 1846              	.LVL230:
 272:boards/TMC5161_eval.c **** 		}
 1847              		.loc 1 272 4 view .LVU609
 1848 05e6 2321     		movs	r1, #35
 1849              	.LVL231:
 272:boards/TMC5161_eval.c **** 		}
 1850              		.loc 1 272 4 view .LVU610
 1851 05e8 FFF7FEFF 		bl	tmc5161_writeInt
 1852              	.LVL232:
 113:boards/TMC5161_eval.c **** 
 1853              		.loc 1 113 11 view .LVU611
 1854 05ec 0024     		movs	r4, #0
 1855 05ee AEE6     		b	.L54
 1856              	.LVL233:
 1857              	.L96:
 277:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VSTOP);
 1858              		.loc 1 277 3 is_stmt 1 view .LVU612
 277:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VSTOP);
 1859              		.loc 1 277 5 is_stmt 0 view .LVU613
 1860 05f0 40B9     		cbnz	r0, .L134
 278:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1861              		.loc 1 278 4 is_stmt 1 view .LVU614
 1862              	.LBB346:
 1863              	.LBI346:
  31:boards/TMC5161_eval.c **** {
 1864              		.loc 1 31 31 view .LVU615
 1865              	.LVL234:
  31:boards/TMC5161_eval.c **** {
 1866              		.loc 1 31 31 is_stmt 0 view .LVU616
 1867              	.LBE346:
  33:boards/TMC5161_eval.c **** 
 1868              		.loc 1 33 2 is_stmt 1 view .LVU617
  35:boards/TMC5161_eval.c **** }
 1869              		.loc 1 35 2 view .LVU618
 278:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1870              		.loc 1 278 13 is_stmt 0 view .LVU619
 1871 05f2 0348     		ldr	r0, .L219
 1872              	.LVL235:
 278:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1873              		.loc 1 278 13 view .LVU620
 1874 05f4 2B21     		movs	r1, #43
 1875              	.LVL236:
 278:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1876              		.loc 1 278 13 view .LVU621
 1877 05f6 FFF7FEFF 		bl	tmc5161_readInt
 1878              	.LVL237:
 113:boards/TMC5161_eval.c **** 
 1879              		.loc 1 113 11 view .LVU622
 1880 05fa 3446     		mov	r4, r6
 278:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1881              		.loc 1 278 11 view .LVU623
 1882 05fc 2860     		str	r0, [r5]
 1883 05fe A6E6     		b	.L54
 1884              	.L220:
 1885              		.align	2
 1886              	.L219:
 1887 0600 00000000 		.word	.LANCHOR0
 1888              	.LVL238:
 1889              	.L134:
 279:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_VSTOP, *value);
 1890              		.loc 1 279 10 is_stmt 1 view .LVU624
 280:boards/TMC5161_eval.c **** 		}
 1891              		.loc 1 280 4 view .LVU625
 1892              	.LBB347:
 1893              	.LBI347:
  31:boards/TMC5161_eval.c **** {
 1894              		.loc 1 31 31 view .LVU626
  31:boards/TMC5161_eval.c **** {
 1895              		.loc 1 31 31 is_stmt 0 view .LVU627
 1896              	.LBE347:
  33:boards/TMC5161_eval.c **** 
 1897              		.loc 1 33 2 is_stmt 1 view .LVU628
  35:boards/TMC5161_eval.c **** }
 1898              		.loc 1 35 2 view .LVU629
 280:boards/TMC5161_eval.c **** 		}
 1899              		.loc 1 280 4 is_stmt 0 view .LVU630
 1900 0604 2A68     		ldr	r2, [r5]
 1901              	.LVL239:
 280:boards/TMC5161_eval.c **** 		}
 1902              		.loc 1 280 4 view .LVU631
 1903 0606 A848     		ldr	r0, .L221
 1904              	.LVL240:
 280:boards/TMC5161_eval.c **** 		}
 1905              		.loc 1 280 4 view .LVU632
 1906 0608 2B21     		movs	r1, #43
 1907              	.LVL241:
 280:boards/TMC5161_eval.c **** 		}
 1908              		.loc 1 280 4 view .LVU633
 1909 060a FFF7FEFF 		bl	tmc5161_writeInt
 1910              	.LVL242:
 113:boards/TMC5161_eval.c **** 
 1911              		.loc 1 113 11 view .LVU634
 1912 060e 0024     		movs	r4, #0
 1913 0610 9DE6     		b	.L54
 1914              	.LVL243:
 1915              	.L95:
 285:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_TZEROWAIT);
 1916              		.loc 1 285 3 is_stmt 1 view .LVU635
 285:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_TZEROWAIT);
 1917              		.loc 1 285 5 is_stmt 0 view .LVU636
 1918 0612 30B9     		cbnz	r0, .L135
 286:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1919              		.loc 1 286 4 is_stmt 1 view .LVU637
 1920              	.LBB348:
 1921              	.LBI348:
  31:boards/TMC5161_eval.c **** {
 1922              		.loc 1 31 31 view .LVU638
 1923              	.LVL244:
  31:boards/TMC5161_eval.c **** {
 1924              		.loc 1 31 31 is_stmt 0 view .LVU639
 1925              	.LBE348:
  33:boards/TMC5161_eval.c **** 
 1926              		.loc 1 33 2 is_stmt 1 view .LVU640
  35:boards/TMC5161_eval.c **** }
 1927              		.loc 1 35 2 view .LVU641
 286:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1928              		.loc 1 286 13 is_stmt 0 view .LVU642
 1929 0614 A448     		ldr	r0, .L221
 1930              	.LVL245:
 286:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1931              		.loc 1 286 13 view .LVU643
 1932 0616 2C21     		movs	r1, #44
 1933              	.LVL246:
 286:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1934              		.loc 1 286 13 view .LVU644
 1935 0618 FFF7FEFF 		bl	tmc5161_readInt
 1936              	.LVL247:
 113:boards/TMC5161_eval.c **** 
 1937              		.loc 1 113 11 view .LVU645
 1938 061c 3446     		mov	r4, r6
 286:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1939              		.loc 1 286 11 view .LVU646
 1940 061e 2860     		str	r0, [r5]
 1941 0620 95E6     		b	.L54
 1942              	.LVL248:
 1943              	.L135:
 287:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TZEROWAIT, *value);
 1944              		.loc 1 287 10 is_stmt 1 view .LVU647
 288:boards/TMC5161_eval.c **** 		}
 1945              		.loc 1 288 4 view .LVU648
 1946              	.LBB349:
 1947              	.LBI349:
  31:boards/TMC5161_eval.c **** {
 1948              		.loc 1 31 31 view .LVU649
  31:boards/TMC5161_eval.c **** {
 1949              		.loc 1 31 31 is_stmt 0 view .LVU650
 1950              	.LBE349:
  33:boards/TMC5161_eval.c **** 
 1951              		.loc 1 33 2 is_stmt 1 view .LVU651
  35:boards/TMC5161_eval.c **** }
 1952              		.loc 1 35 2 view .LVU652
 288:boards/TMC5161_eval.c **** 		}
 1953              		.loc 1 288 4 is_stmt 0 view .LVU653
 1954 0622 2A68     		ldr	r2, [r5]
 1955              	.LVL249:
 288:boards/TMC5161_eval.c **** 		}
 1956              		.loc 1 288 4 view .LVU654
 1957 0624 A048     		ldr	r0, .L221
 1958              	.LVL250:
 288:boards/TMC5161_eval.c **** 		}
 1959              		.loc 1 288 4 view .LVU655
 1960 0626 2C21     		movs	r1, #44
 1961              	.LVL251:
 288:boards/TMC5161_eval.c **** 		}
 1962              		.loc 1 288 4 view .LVU656
 1963 0628 FFF7FEFF 		bl	tmc5161_writeInt
 1964              	.LVL252:
 113:boards/TMC5161_eval.c **** 
 1965              		.loc 1 113 11 view .LVU657
 1966 062c 0024     		movs	r4, #0
 1967 062e 8EE6     		b	.L54
 1968              	.LVL253:
 1969              	.L94:
 293:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_THIGH);
 1970              		.loc 1 293 3 is_stmt 1 view .LVU658
 1971 0630 9E4C     		ldr	r4, .L221+4
 293:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_THIGH);
 1972              		.loc 1 293 5 is_stmt 0 view .LVU659
 1973 0632 80B9     		cbnz	r0, .L136
 294:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 1974              		.loc 1 294 4 is_stmt 1 view .LVU660
 1975              	.LBB350:
 1976              	.LBI350:
  31:boards/TMC5161_eval.c **** {
 1977              		.loc 1 31 31 view .LVU661
 1978              	.LVL254:
  31:boards/TMC5161_eval.c **** {
 1979              		.loc 1 31 31 is_stmt 0 view .LVU662
 1980              	.LBE350:
  33:boards/TMC5161_eval.c **** 
 1981              		.loc 1 33 2 is_stmt 1 view .LVU663
  35:boards/TMC5161_eval.c **** }
 1982              		.loc 1 35 2 view .LVU664
 294:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 1983              		.loc 1 294 13 is_stmt 0 view .LVU665
 1984 0634 9C48     		ldr	r0, .L221
 1985              	.LVL255:
 294:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 1986              		.loc 1 294 13 view .LVU666
 1987 0636 1521     		movs	r1, #21
 1988              	.LVL256:
 294:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 1989              		.loc 1 294 13 view .LVU667
 1990 0638 FFF7FEFF 		bl	tmc5161_readInt
 1991              	.LVL257:
 295:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1992              		.loc 1 295 4 is_stmt 1 view .LVU668
 295:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1993              		.loc 1 295 13 is_stmt 0 view .LVU669
 1994 063c 0128     		cmp	r0, #1
 1995 063e 38BF     		it	cc
 1996 0640 0120     		movcc	r0, #1
 1997              	.LVL258:
 295:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 1998              		.loc 1 295 13 view .LVU670
 1999 0642 4FF08073 		mov	r3, #16777216
 2000 0646 B3FBF0F0 		udiv	r0, r3, r0
 295:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2001              		.loc 1 295 11 view .LVU671
 2002 064a A042     		cmp	r0, r4
 2003 064c 94BF     		ite	ls
 2004 064e 2860     		strls	r0, [r5]
 2005 0650 2C60     		strhi	r4, [r5]
 113:boards/TMC5161_eval.c **** 
 2006              		.loc 1 113 11 view .LVU672
 2007 0652 3446     		mov	r4, r6
 2008 0654 7BE6     		b	.L54
 2009              	.LVL259:
 2010              	.L136:
 296:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((*value)? *value:1));
 2011              		.loc 1 296 10 is_stmt 1 view .LVU673
 297:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_THIGH, *value);
 2012              		.loc 1 297 4 view .LVU674
 297:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_THIGH, *value);
 2013              		.loc 1 297 13 is_stmt 0 view .LVU675
 2014 0656 2B68     		ldr	r3, [r5]
 298:boards/TMC5161_eval.c **** 		}
 2015              		.loc 1 298 4 view .LVU676
 2016 0658 9348     		ldr	r0, .L221
 2017              	.LVL260:
 297:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_THIGH, *value);
 2018              		.loc 1 297 13 view .LVU677
 2019 065a 002B     		cmp	r3, #0
 2020 065c 08BF     		it	eq
 2021 065e 0123     		moveq	r3, #1
 2022 0660 4FF08072 		mov	r2, #16777216
 2023              	.LVL261:
 297:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_THIGH, *value);
 2024              		.loc 1 297 13 view .LVU678
 2025 0664 92FBF3F2 		sdiv	r2, r2, r3
 2026 0668 A242     		cmp	r2, r4
 2027 066a A8BF     		it	ge
 2028 066c 2246     		movge	r2, r4
 297:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_THIGH, *value);
 2029              		.loc 1 297 11 view .LVU679
 2030 066e 2A60     		str	r2, [r5]
 298:boards/TMC5161_eval.c **** 		}
 2031              		.loc 1 298 4 is_stmt 1 view .LVU680
 2032              	.LBB351:
 2033              	.LBI351:
  31:boards/TMC5161_eval.c **** {
 2034              		.loc 1 31 31 view .LVU681
 2035              	.LVL262:
  31:boards/TMC5161_eval.c **** {
 2036              		.loc 1 31 31 is_stmt 0 view .LVU682
 2037              	.LBE351:
  33:boards/TMC5161_eval.c **** 
 2038              		.loc 1 33 2 is_stmt 1 view .LVU683
  35:boards/TMC5161_eval.c **** }
 2039              		.loc 1 35 2 view .LVU684
 298:boards/TMC5161_eval.c **** 		}
 2040              		.loc 1 298 4 is_stmt 0 view .LVU685
 2041 0670 1521     		movs	r1, #21
 2042              	.LVL263:
 298:boards/TMC5161_eval.c **** 		}
 2043              		.loc 1 298 4 view .LVU686
 2044 0672 FFF7FEFF 		bl	tmc5161_writeInt
 2045              	.LVL264:
 113:boards/TMC5161_eval.c **** 
 2046              		.loc 1 113 11 view .LVU687
 2047 0676 0024     		movs	r4, #0
 2048 0678 69E6     		b	.L54
 2049              	.LVL265:
 2050              	.L93:
 303:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VDCMIN);
 2051              		.loc 1 303 3 is_stmt 1 view .LVU688
 303:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_VDCMIN);
 2052              		.loc 1 303 5 is_stmt 0 view .LVU689
 2053 067a 30B9     		cbnz	r0, .L138
 304:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2054              		.loc 1 304 4 is_stmt 1 view .LVU690
 2055              	.LBB352:
 2056              	.LBI352:
  31:boards/TMC5161_eval.c **** {
 2057              		.loc 1 31 31 view .LVU691
 2058              	.LVL266:
  31:boards/TMC5161_eval.c **** {
 2059              		.loc 1 31 31 is_stmt 0 view .LVU692
 2060              	.LBE352:
  33:boards/TMC5161_eval.c **** 
 2061              		.loc 1 33 2 is_stmt 1 view .LVU693
  35:boards/TMC5161_eval.c **** }
 2062              		.loc 1 35 2 view .LVU694
 304:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2063              		.loc 1 304 13 is_stmt 0 view .LVU695
 2064 067c 8A48     		ldr	r0, .L221
 2065              	.LVL267:
 304:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2066              		.loc 1 304 13 view .LVU696
 2067 067e 3321     		movs	r1, #51
 2068              	.LVL268:
 304:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2069              		.loc 1 304 13 view .LVU697
 2070 0680 FFF7FEFF 		bl	tmc5161_readInt
 2071              	.LVL269:
 113:boards/TMC5161_eval.c **** 
 2072              		.loc 1 113 11 view .LVU698
 2073 0684 3446     		mov	r4, r6
 304:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2074              		.loc 1 304 11 view .LVU699
 2075 0686 2860     		str	r0, [r5]
 2076 0688 61E6     		b	.L54
 2077              	.LVL270:
 2078              	.L138:
 305:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_VDCMIN, *value);
 2079              		.loc 1 305 10 is_stmt 1 view .LVU700
 306:boards/TMC5161_eval.c **** 		}
 2080              		.loc 1 306 4 view .LVU701
 2081              	.LBB353:
 2082              	.LBI353:
  31:boards/TMC5161_eval.c **** {
 2083              		.loc 1 31 31 view .LVU702
  31:boards/TMC5161_eval.c **** {
 2084              		.loc 1 31 31 is_stmt 0 view .LVU703
 2085              	.LBE353:
  33:boards/TMC5161_eval.c **** 
 2086              		.loc 1 33 2 is_stmt 1 view .LVU704
  35:boards/TMC5161_eval.c **** }
 2087              		.loc 1 35 2 view .LVU705
 306:boards/TMC5161_eval.c **** 		}
 2088              		.loc 1 306 4 is_stmt 0 view .LVU706
 2089 068a 2A68     		ldr	r2, [r5]
 2090              	.LVL271:
 306:boards/TMC5161_eval.c **** 		}
 2091              		.loc 1 306 4 view .LVU707
 2092 068c 8648     		ldr	r0, .L221
 2093              	.LVL272:
 306:boards/TMC5161_eval.c **** 		}
 2094              		.loc 1 306 4 view .LVU708
 2095 068e 3321     		movs	r1, #51
 2096              	.LVL273:
 306:boards/TMC5161_eval.c **** 		}
 2097              		.loc 1 306 4 view .LVU709
 2098 0690 FFF7FEFF 		bl	tmc5161_writeInt
 2099              	.LVL274:
 113:boards/TMC5161_eval.c **** 
 2100              		.loc 1 113 11 view .LVU710
 2101 0694 0024     		movs	r4, #0
 2102 0696 5AE6     		b	.L54
 2103              	.LVL275:
 2104              	.L92:
 311:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHCHM_MASK, TMC5161_V
 2105              		.loc 1 311 3 is_stmt 1 view .LVU711
 312:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2106              		.loc 1 312 13 is_stmt 0 view .LVU712
 2107 0698 8348     		ldr	r0, .L221
 2108              	.LVL276:
 312:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2109              		.loc 1 312 13 view .LVU713
 2110 069a 6C21     		movs	r1, #108
 2111              	.LVL277:
 311:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHCHM_MASK, TMC5161_V
 2112              		.loc 1 311 5 view .LVU714
 2113 069c 36B9     		cbnz	r6, .L139
 312:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2114              		.loc 1 312 4 is_stmt 1 view .LVU715
 2115              	.LBB354:
 2116              	.LBI354:
  31:boards/TMC5161_eval.c **** {
 2117              		.loc 1 31 31 view .LVU716
 2118              	.LVL278:
  31:boards/TMC5161_eval.c **** {
 2119              		.loc 1 31 31 is_stmt 0 view .LVU717
 2120              	.LBE354:
  33:boards/TMC5161_eval.c **** 
 2121              		.loc 1 33 2 is_stmt 1 view .LVU718
  35:boards/TMC5161_eval.c **** }
 2122              		.loc 1 35 2 view .LVU719
 312:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2123              		.loc 1 312 13 is_stmt 0 view .LVU720
 2124 069e FFF7FEFF 		bl	tmc5161_readInt
 2125              	.LVL279:
 312:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2126              		.loc 1 312 13 view .LVU721
 2127 06a2 C0F3C040 		ubfx	r0, r0, #19, #1
 312:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2128              		.loc 1 312 11 view .LVU722
 2129 06a6 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 2130              		.loc 1 113 11 view .LVU723
 2131 06a8 3446     		mov	r4, r6
 2132 06aa 50E6     		b	.L54
 2133              	.LVL280:
 2134              	.L139:
 313:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHCHM_MASK, TMC5161_VHIGHCHM
 2135              		.loc 1 313 10 is_stmt 1 view .LVU724
 314:boards/TMC5161_eval.c **** 		}
 2136              		.loc 1 314 4 view .LVU725
 2137              	.LBB355:
 2138              	.LBI355:
  31:boards/TMC5161_eval.c **** {
 2139              		.loc 1 31 31 view .LVU726
  31:boards/TMC5161_eval.c **** {
 2140              		.loc 1 31 31 is_stmt 0 view .LVU727
 2141              	.LBE355:
  33:boards/TMC5161_eval.c **** 
 2142              		.loc 1 33 2 is_stmt 1 view .LVU728
  35:boards/TMC5161_eval.c **** }
 2143              		.loc 1 35 2 view .LVU729
 2144              	.LBB356:
 2145              	.LBI356:
  31:boards/TMC5161_eval.c **** {
 2146              		.loc 1 31 31 view .LVU730
  31:boards/TMC5161_eval.c **** {
 2147              		.loc 1 31 31 is_stmt 0 view .LVU731
 2148              	.LBE356:
  33:boards/TMC5161_eval.c **** 
 2149              		.loc 1 33 2 is_stmt 1 view .LVU732
  35:boards/TMC5161_eval.c **** }
 2150              		.loc 1 35 2 view .LVU733
 314:boards/TMC5161_eval.c **** 		}
 2151              		.loc 1 314 4 is_stmt 0 view .LVU734
 2152 06ac FFF7FEFF 		bl	tmc5161_readInt
 2153              	.LVL281:
 314:boards/TMC5161_eval.c **** 		}
 2154              		.loc 1 314 4 view .LVU735
 2155 06b0 2B68     		ldr	r3, [r5]
 2156 06b2 DB04     		lsls	r3, r3, #19
 2157 06b4 03F40023 		and	r3, r3, #524288
 2158 06b8 20F40022 		bic	r2, r0, #524288
 2159 06bc 1A43     		orrs	r2, r2, r3
 2160 06be 7A48     		ldr	r0, .L221
 2161 06c0 6C21     		movs	r1, #108
 2162 06c2 FFF7FEFF 		bl	tmc5161_writeInt
 2163              	.LVL282:
 113:boards/TMC5161_eval.c **** 
 2164              		.loc 1 113 11 view .LVU736
 2165 06c6 0024     		movs	r4, #0
 2166 06c8 41E6     		b	.L54
 2167              	.LVL283:
 2168              	.L91:
 319:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHFS_MASK, TMC5161_VH
 2169              		.loc 1 319 3 is_stmt 1 view .LVU737
 320:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2170              		.loc 1 320 13 is_stmt 0 view .LVU738
 2171 06ca 7748     		ldr	r0, .L221
 2172              	.LVL284:
 320:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2173              		.loc 1 320 13 view .LVU739
 2174 06cc 6C21     		movs	r1, #108
 2175              	.LVL285:
 319:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHFS_MASK, TMC5161_VH
 2176              		.loc 1 319 5 view .LVU740
 2177 06ce 36B9     		cbnz	r6, .L140
 320:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2178              		.loc 1 320 4 is_stmt 1 view .LVU741
 2179              	.LBB357:
 2180              	.LBI357:
  31:boards/TMC5161_eval.c **** {
 2181              		.loc 1 31 31 view .LVU742
 2182              	.LVL286:
  31:boards/TMC5161_eval.c **** {
 2183              		.loc 1 31 31 is_stmt 0 view .LVU743
 2184              	.LBE357:
  33:boards/TMC5161_eval.c **** 
 2185              		.loc 1 33 2 is_stmt 1 view .LVU744
  35:boards/TMC5161_eval.c **** }
 2186              		.loc 1 35 2 view .LVU745
 320:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2187              		.loc 1 320 13 is_stmt 0 view .LVU746
 2188 06d0 FFF7FEFF 		bl	tmc5161_readInt
 2189              	.LVL287:
 320:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2190              		.loc 1 320 13 view .LVU747
 2191 06d4 C0F38040 		ubfx	r0, r0, #18, #1
 320:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2192              		.loc 1 320 11 view .LVU748
 2193 06d8 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 2194              		.loc 1 113 11 view .LVU749
 2195 06da 3446     		mov	r4, r6
 2196 06dc 37E6     		b	.L54
 2197              	.LVL288:
 2198              	.L140:
 321:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_VHIGHFS_MASK, TMC5161_VHIGHFS_S
 2199              		.loc 1 321 10 is_stmt 1 view .LVU750
 322:boards/TMC5161_eval.c **** 		}
 2200              		.loc 1 322 4 view .LVU751
 2201              	.LBB358:
 2202              	.LBI358:
  31:boards/TMC5161_eval.c **** {
 2203              		.loc 1 31 31 view .LVU752
  31:boards/TMC5161_eval.c **** {
 2204              		.loc 1 31 31 is_stmt 0 view .LVU753
 2205              	.LBE358:
  33:boards/TMC5161_eval.c **** 
 2206              		.loc 1 33 2 is_stmt 1 view .LVU754
  35:boards/TMC5161_eval.c **** }
 2207              		.loc 1 35 2 view .LVU755
 2208              	.LBB359:
 2209              	.LBI359:
  31:boards/TMC5161_eval.c **** {
 2210              		.loc 1 31 31 view .LVU756
  31:boards/TMC5161_eval.c **** {
 2211              		.loc 1 31 31 is_stmt 0 view .LVU757
 2212              	.LBE359:
  33:boards/TMC5161_eval.c **** 
 2213              		.loc 1 33 2 is_stmt 1 view .LVU758
  35:boards/TMC5161_eval.c **** }
 2214              		.loc 1 35 2 view .LVU759
 322:boards/TMC5161_eval.c **** 		}
 2215              		.loc 1 322 4 is_stmt 0 view .LVU760
 2216 06de FFF7FEFF 		bl	tmc5161_readInt
 2217              	.LVL289:
 322:boards/TMC5161_eval.c **** 		}
 2218              		.loc 1 322 4 view .LVU761
 2219 06e2 2B68     		ldr	r3, [r5]
 2220 06e4 9B04     		lsls	r3, r3, #18
 2221 06e6 03F48023 		and	r3, r3, #262144
 2222 06ea 20F48022 		bic	r2, r0, #262144
 2223 06ee 1A43     		orrs	r2, r2, r3
 2224 06f0 6D48     		ldr	r0, .L221
 2225 06f2 6C21     		movs	r1, #108
 2226 06f4 FFF7FEFF 		bl	tmc5161_writeInt
 2227              	.LVL290:
 113:boards/TMC5161_eval.c **** 
 2228              		.loc 1 113 11 view .LVU762
 2229 06f8 0024     		movs	r4, #0
 2230 06fa 28E6     		b	.L54
 2231              	.LVL291:
 2232              	.L90:
 327:boards/TMC5161_eval.c **** 			*value = TMC5161.velocity;
 2233              		.loc 1 327 3 is_stmt 1 view .LVU763
 327:boards/TMC5161_eval.c **** 			*value = TMC5161.velocity;
 2234              		.loc 1 327 5 is_stmt 0 view .LVU764
 2235 06fc 0028     		cmp	r0, #0
 2236 06fe 40F0E583 		bne	.L206
 328:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2237              		.loc 1 328 4 is_stmt 1 view .LVU765
 328:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2238              		.loc 1 328 20 is_stmt 0 view .LVU766
 2239 0702 694B     		ldr	r3, .L221
 328:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2240              		.loc 1 328 11 view .LVU767
 2241 0704 5B68     		ldr	r3, [r3, #4]
 2242 0706 2B60     		str	r3, [r5]
 113:boards/TMC5161_eval.c **** 
 2243              		.loc 1 113 11 view .LVU768
 2244 0708 0446     		mov	r4, r0
 2245 070a 20E6     		b	.L54
 2246              	.L89:
 335:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_GCONF, TMC5161_RECALIBRATE_MASK, TMC5161_R
 2247              		.loc 1 335 3 is_stmt 1 view .LVU769
 335:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_GCONF, TMC5161_RECALIBRATE_MASK, TMC5161_R
 2248              		.loc 1 335 5 is_stmt 0 view .LVU770
 2249 070c 40B9     		cbnz	r0, .L141
 336:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2250              		.loc 1 336 4 is_stmt 1 view .LVU771
 2251              	.LBB360:
 2252              	.LBI360:
  31:boards/TMC5161_eval.c **** {
 2253              		.loc 1 31 31 view .LVU772
 2254              	.LVL292:
  31:boards/TMC5161_eval.c **** {
 2255              		.loc 1 31 31 is_stmt 0 view .LVU773
 2256              	.LBE360:
  33:boards/TMC5161_eval.c **** 
 2257              		.loc 1 33 2 is_stmt 1 view .LVU774
  35:boards/TMC5161_eval.c **** }
 2258              		.loc 1 35 2 view .LVU775
 336:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2259              		.loc 1 336 13 is_stmt 0 view .LVU776
 2260 070e 0146     		mov	r1, r0
 2261              	.LVL293:
 336:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2262              		.loc 1 336 13 view .LVU777
 2263 0710 6548     		ldr	r0, .L221
 2264              	.LVL294:
 336:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2265              		.loc 1 336 13 view .LVU778
 2266 0712 FFF7FEFF 		bl	tmc5161_readInt
 2267              	.LVL295:
 336:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2268              		.loc 1 336 13 view .LVU779
 2269 0716 00F00100 		and	r0, r0, #1
 336:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2270              		.loc 1 336 11 view .LVU780
 2271 071a 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 2272              		.loc 1 113 11 view .LVU781
 2273 071c 3446     		mov	r4, r6
 2274 071e 16E6     		b	.L54
 2275              	.LVL296:
 2276              	.L141:
 337:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_GCONF, TMC5161_RECALIBRATE_MASK, TMC5161_RECALIBR
 2277              		.loc 1 337 10 is_stmt 1 view .LVU782
 338:boards/TMC5161_eval.c **** 		}
 2278              		.loc 1 338 4 view .LVU783
 2279              	.LBB361:
 2280              	.LBI361:
  31:boards/TMC5161_eval.c **** {
 2281              		.loc 1 31 31 view .LVU784
  31:boards/TMC5161_eval.c **** {
 2282              		.loc 1 31 31 is_stmt 0 view .LVU785
 2283              	.LBE361:
  33:boards/TMC5161_eval.c **** 
 2284              		.loc 1 33 2 is_stmt 1 view .LVU786
  35:boards/TMC5161_eval.c **** }
 2285              		.loc 1 35 2 view .LVU787
 2286              	.LBB362:
 2287              	.LBI362:
  31:boards/TMC5161_eval.c **** {
 2288              		.loc 1 31 31 view .LVU788
  31:boards/TMC5161_eval.c **** {
 2289              		.loc 1 31 31 is_stmt 0 view .LVU789
 2290              	.LBE362:
  33:boards/TMC5161_eval.c **** 
 2291              		.loc 1 33 2 is_stmt 1 view .LVU790
  35:boards/TMC5161_eval.c **** }
 2292              		.loc 1 35 2 view .LVU791
 338:boards/TMC5161_eval.c **** 		}
 2293              		.loc 1 338 4 is_stmt 0 view .LVU792
 2294 0720 0021     		movs	r1, #0
 2295              	.LVL297:
 338:boards/TMC5161_eval.c **** 		}
 2296              		.loc 1 338 4 view .LVU793
 2297 0722 6148     		ldr	r0, .L221
 2298              	.LVL298:
 338:boards/TMC5161_eval.c **** 		}
 2299              		.loc 1 338 4 view .LVU794
 2300 0724 FFF7FEFF 		bl	tmc5161_readInt
 2301              	.LVL299:
 338:boards/TMC5161_eval.c **** 		}
 2302              		.loc 1 338 4 view .LVU795
 2303 0728 2A68     		ldr	r2, [r5]
 2304 072a 20F00100 		bic	r0, r0, #1
 2305 072e 02F00102 		and	r2, r2, #1
 2306 0732 0243     		orrs	r2, r2, r0
 2307 0734 0021     		movs	r1, #0
 2308 0736 5C48     		ldr	r0, .L221
 2309 0738 FFF7FEFF 		bl	tmc5161_writeInt
 2310              	.LVL300:
 113:boards/TMC5161_eval.c **** 
 2311              		.loc 1 113 11 view .LVU796
 2312 073c 0024     		movs	r4, #0
 2313 073e 06E6     		b	.L54
 2314              	.LVL301:
 2315              	.L87:
 343:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_GCONF, TMC5161_REFR_DIR_MASK, TMC5161_REFR
 2316              		.loc 1 343 3 is_stmt 1 view .LVU797
 343:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_GCONF, TMC5161_REFR_DIR_MASK, TMC5161_REFR
 2317              		.loc 1 343 5 is_stmt 0 view .LVU798
 2318 0740 40B9     		cbnz	r0, .L142
 344:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2319              		.loc 1 344 4 is_stmt 1 view .LVU799
 2320              	.LBB363:
 2321              	.LBI363:
  31:boards/TMC5161_eval.c **** {
 2322              		.loc 1 31 31 view .LVU800
 2323              	.LVL302:
  31:boards/TMC5161_eval.c **** {
 2324              		.loc 1 31 31 is_stmt 0 view .LVU801
 2325              	.LBE363:
  33:boards/TMC5161_eval.c **** 
 2326              		.loc 1 33 2 is_stmt 1 view .LVU802
  35:boards/TMC5161_eval.c **** }
 2327              		.loc 1 35 2 view .LVU803
 344:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2328              		.loc 1 344 13 is_stmt 0 view .LVU804
 2329 0742 0146     		mov	r1, r0
 2330              	.LVL303:
 344:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2331              		.loc 1 344 13 view .LVU805
 2332 0744 5848     		ldr	r0, .L221
 2333              	.LVL304:
 344:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2334              		.loc 1 344 13 view .LVU806
 2335 0746 FFF7FEFF 		bl	tmc5161_readInt
 2336              	.LVL305:
 344:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2337              		.loc 1 344 13 view .LVU807
 2338 074a C0F34000 		ubfx	r0, r0, #1, #1
 344:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2339              		.loc 1 344 11 view .LVU808
 2340 074e 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 2341              		.loc 1 113 11 view .LVU809
 2342 0750 3446     		mov	r4, r6
 2343 0752 FCE5     		b	.L54
 2344              	.LVL306:
 2345              	.L142:
 345:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_GCONF, TMC5161_REFR_DIR_MASK, TMC5161_REFR_DIR_SH
 2346              		.loc 1 345 10 is_stmt 1 view .LVU810
 346:boards/TMC5161_eval.c **** 		}
 2347              		.loc 1 346 4 view .LVU811
 2348              	.LBB364:
 2349              	.LBI364:
  31:boards/TMC5161_eval.c **** {
 2350              		.loc 1 31 31 view .LVU812
  31:boards/TMC5161_eval.c **** {
 2351              		.loc 1 31 31 is_stmt 0 view .LVU813
 2352              	.LBE364:
  33:boards/TMC5161_eval.c **** 
 2353              		.loc 1 33 2 is_stmt 1 view .LVU814
  35:boards/TMC5161_eval.c **** }
 2354              		.loc 1 35 2 view .LVU815
 2355              	.LBB365:
 2356              	.LBI365:
  31:boards/TMC5161_eval.c **** {
 2357              		.loc 1 31 31 view .LVU816
  31:boards/TMC5161_eval.c **** {
 2358              		.loc 1 31 31 is_stmt 0 view .LVU817
 2359              	.LBE365:
  33:boards/TMC5161_eval.c **** 
 2360              		.loc 1 33 2 is_stmt 1 view .LVU818
  35:boards/TMC5161_eval.c **** }
 2361              		.loc 1 35 2 view .LVU819
 346:boards/TMC5161_eval.c **** 		}
 2362              		.loc 1 346 4 is_stmt 0 view .LVU820
 2363 0754 0021     		movs	r1, #0
 2364              	.LVL307:
 346:boards/TMC5161_eval.c **** 		}
 2365              		.loc 1 346 4 view .LVU821
 2366 0756 5448     		ldr	r0, .L221
 2367              	.LVL308:
 346:boards/TMC5161_eval.c **** 		}
 2368              		.loc 1 346 4 view .LVU822
 2369 0758 FFF7FEFF 		bl	tmc5161_readInt
 2370              	.LVL309:
 346:boards/TMC5161_eval.c **** 		}
 2371              		.loc 1 346 4 view .LVU823
 2372 075c 2B68     		ldr	r3, [r5]
 2373 075e 5B00     		lsls	r3, r3, #1
 2374 0760 03F00203 		and	r3, r3, #2
 2375 0764 20F00202 		bic	r2, r0, #2
 2376 0768 1A43     		orrs	r2, r2, r3
 2377 076a 4F48     		ldr	r0, .L221
 2378 076c 0021     		movs	r1, #0
 2379 076e FFF7FEFF 		bl	tmc5161_writeInt
 2380              	.LVL310:
 113:boards/TMC5161_eval.c **** 
 2381              		.loc 1 113 11 view .LVU824
 2382 0772 0024     		movs	r4, #0
 2383 0774 EBE5     		b	.L54
 2384              	.LVL311:
 2385              	.L86:
 351:boards/TMC5161_eval.c **** 			*value = 0x100 >> TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_MRES_MASK, TMC5
 2386              		.loc 1 351 3 is_stmt 1 view .LVU825
 351:boards/TMC5161_eval.c **** 			*value = 0x100 >> TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_MRES_MASK, TMC5
 2387              		.loc 1 351 5 is_stmt 0 view .LVU826
 2388 0776 5EB9     		cbnz	r6, .L143
 352:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2389              		.loc 1 352 4 is_stmt 1 view .LVU827
 2390              	.LBB366:
 2391              	.LBI366:
  31:boards/TMC5161_eval.c **** {
 2392              		.loc 1 31 31 view .LVU828
 2393              	.LVL312:
  31:boards/TMC5161_eval.c **** {
 2394              		.loc 1 31 31 is_stmt 0 view .LVU829
 2395              	.LBE366:
  33:boards/TMC5161_eval.c **** 
 2396              		.loc 1 33 2 is_stmt 1 view .LVU830
  35:boards/TMC5161_eval.c **** }
 2397              		.loc 1 35 2 view .LVU831
 352:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2398              		.loc 1 352 22 is_stmt 0 view .LVU832
 2399 0778 4B48     		ldr	r0, .L221
 2400              	.LVL313:
 352:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2401              		.loc 1 352 22 view .LVU833
 2402 077a 6C21     		movs	r1, #108
 2403              	.LVL314:
 352:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2404              		.loc 1 352 22 view .LVU834
 2405 077c FFF7FEFF 		bl	tmc5161_readInt
 2406              	.LVL315:
 2407 0780 C0F30363 		ubfx	r3, r0, #24, #4
 352:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2408              		.loc 1 352 19 view .LVU835
 2409 0784 4FF48070 		mov	r0, #256
 2410 0788 1841     		asrs	r0, r0, r3
 352:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2411              		.loc 1 352 11 view .LVU836
 2412 078a 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 2413              		.loc 1 113 11 view .LVU837
 2414 078c 3446     		mov	r4, r6
 2415 078e DEE5     		b	.L54
 2416              	.LVL316:
 2417              	.L143:
 353:boards/TMC5161_eval.c **** 			switch(*value)
 2418              		.loc 1 353 10 is_stmt 1 view .LVU838
 354:boards/TMC5161_eval.c **** 			{
 2419              		.loc 1 354 4 view .LVU839
 354:boards/TMC5161_eval.c **** 			{
 2420              		.loc 1 354 11 is_stmt 0 view .LVU840
 2421 0790 2B68     		ldr	r3, [r5]
 2422 0792 102B     		cmp	r3, #16
 2423 0794 35D0     		beq	.L144
 2424 0796 0ADC     		bgt	.L145
 2425 0798 013B     		subs	r3, r3, #1
 2426 079a 072B     		cmp	r3, #7
 2427 079c 0ED8     		bhi	.L146
 2428 079e 072B     		cmp	r3, #7
 2429 07a0 0CD8     		bhi	.L146
 2430 07a2 DFE803F0 		tbb	[pc, r3]
 2431              	.L148:
 2432 07a6 15       		.byte	(.L151-.L148)/2
 2433 07a7 28       		.byte	(.L150-.L148)/2
 2434 07a8 0B       		.byte	(.L146-.L148)/2
 2435 07a9 2A       		.byte	(.L149-.L148)/2
 2436 07aa 0B       		.byte	(.L146-.L148)/2
 2437 07ab 0B       		.byte	(.L146-.L148)/2
 2438 07ac 0B       		.byte	(.L146-.L148)/2
 2439 07ad 2C       		.byte	(.L147-.L148)/2
 2440              		.p2align 1
 2441              	.L145:
 2442 07ae 802B     		cmp	r3, #128
 2443 07b0 2DD0     		beq	.L152
 2444 07b2 08DC     		bgt	.L153
 2445 07b4 202B     		cmp	r3, #32
 2446 07b6 26D0     		beq	.L154
 2447 07b8 402B     		cmp	r3, #64
 2448 07ba 26D0     		beq	.L155
 2449              	.L146:
 365:boards/TMC5161_eval.c **** 			}
 2450              		.loc 1 365 16 is_stmt 1 view .LVU841
 365:boards/TMC5161_eval.c **** 			}
 2451              		.loc 1 365 23 is_stmt 0 view .LVU842
 2452 07bc 4FF0FF33 		mov	r3, #-1
 2453 07c0 2B60     		str	r3, [r5]
 365:boards/TMC5161_eval.c **** 			}
 2454              		.loc 1 365 30 is_stmt 1 view .LVU843
 368:boards/TMC5161_eval.c **** 			{
 2455              		.loc 1 368 4 view .LVU844
 374:boards/TMC5161_eval.c **** 			}
 2456              		.loc 1 374 12 is_stmt 0 view .LVU845
 2457 07c2 1024     		movs	r4, #16
 2458 07c4 C3E5     		b	.L54
 2459              	.L153:
 374:boards/TMC5161_eval.c **** 			}
 2460              		.loc 1 374 12 view .LVU846
 2461 07c6 B3F5807F 		cmp	r3, #256
 2462 07ca F7D1     		bne	.L146
 364:boards/TMC5161_eval.c **** 				default:   *value = -1;  break;
 2463              		.loc 1 364 16 is_stmt 1 view .LVU847
 364:boards/TMC5161_eval.c **** 				default:   *value = -1;  break;
 2464              		.loc 1 364 23 is_stmt 0 view .LVU848
 2465 07cc 0023     		movs	r3, #0
 2466 07ce 00E0     		b	.L218
 2467              	.L151:
 356:boards/TMC5161_eval.c **** 				case 2:    *value = 7;   break;
 2468              		.loc 1 356 16 is_stmt 1 view .LVU849
 356:boards/TMC5161_eval.c **** 				case 2:    *value = 7;   break;
 2469              		.loc 1 356 23 is_stmt 0 view .LVU850
 2470 07d0 0823     		movs	r3, #8
 2471              	.L218:
 364:boards/TMC5161_eval.c **** 				default:   *value = -1;  break;
 2472              		.loc 1 364 23 view .LVU851
 2473 07d2 2B60     		str	r3, [r5]
 364:boards/TMC5161_eval.c **** 				default:   *value = -1;  break;
 2474              		.loc 1 364 30 is_stmt 1 view .LVU852
 368:boards/TMC5161_eval.c **** 			{
 2475              		.loc 1 368 4 view .LVU853
 370:boards/TMC5161_eval.c **** 			}
 2476              		.loc 1 370 5 view .LVU854
 2477              	.LBB367:
 2478              	.LBI367:
  31:boards/TMC5161_eval.c **** {
 2479              		.loc 1 31 31 view .LVU855
 2480              	.LVL317:
  31:boards/TMC5161_eval.c **** {
 2481              		.loc 1 31 31 is_stmt 0 view .LVU856
 2482              	.LBE367:
  33:boards/TMC5161_eval.c **** 
 2483              		.loc 1 33 2 is_stmt 1 view .LVU857
  35:boards/TMC5161_eval.c **** }
 2484              		.loc 1 35 2 view .LVU858
 2485              	.LBB368:
 2486              	.LBI368:
  31:boards/TMC5161_eval.c **** {
 2487              		.loc 1 31 31 view .LVU859
  31:boards/TMC5161_eval.c **** {
 2488              		.loc 1 31 31 is_stmt 0 view .LVU860
 2489              	.LBE368:
  33:boards/TMC5161_eval.c **** 
 2490              		.loc 1 33 2 is_stmt 1 view .LVU861
  35:boards/TMC5161_eval.c **** }
 2491              		.loc 1 35 2 view .LVU862
 370:boards/TMC5161_eval.c **** 			}
 2492              		.loc 1 370 5 is_stmt 0 view .LVU863
 2493 07d4 6C21     		movs	r1, #108
 2494              	.LVL318:
 370:boards/TMC5161_eval.c **** 			}
 2495              		.loc 1 370 5 view .LVU864
 2496 07d6 3448     		ldr	r0, .L221
 2497              	.LVL319:
 370:boards/TMC5161_eval.c **** 			}
 2498              		.loc 1 370 5 view .LVU865
 2499 07d8 FFF7FEFF 		bl	tmc5161_readInt
 2500              	.LVL320:
 2501 07dc 2B68     		ldr	r3, [r5]
 2502 07de 1B06     		lsls	r3, r3, #24
 2503 07e0 03F07063 		and	r3, r3, #251658240
 2504 07e4 20F07062 		bic	r2, r0, #251658240
 2505 07e8 1A43     		orrs	r2, r2, r3
 2506 07ea 2F48     		ldr	r0, .L221
 2507 07ec 6C21     		movs	r1, #108
 2508 07ee FFF7FEFF 		bl	tmc5161_writeInt
 2509              	.LVL321:
 113:boards/TMC5161_eval.c **** 
 2510              		.loc 1 113 11 view .LVU866
 2511 07f2 0024     		movs	r4, #0
 2512 07f4 ABE5     		b	.L54
 2513              	.LVL322:
 2514              	.L150:
 357:boards/TMC5161_eval.c **** 				case 4:    *value = 6;   break;
 2515              		.loc 1 357 16 is_stmt 1 view .LVU867
 357:boards/TMC5161_eval.c **** 				case 4:    *value = 6;   break;
 2516              		.loc 1 357 23 is_stmt 0 view .LVU868
 2517 07f6 0723     		movs	r3, #7
 2518 07f8 EBE7     		b	.L218
 2519              	.L149:
 358:boards/TMC5161_eval.c **** 				case 8:    *value = 5;   break;
 2520              		.loc 1 358 16 is_stmt 1 view .LVU869
 358:boards/TMC5161_eval.c **** 				case 8:    *value = 5;   break;
 2521              		.loc 1 358 23 is_stmt 0 view .LVU870
 2522 07fa 0623     		movs	r3, #6
 2523 07fc E9E7     		b	.L218
 2524              	.L147:
 359:boards/TMC5161_eval.c **** 				case 16:   *value = 4;   break;
 2525              		.loc 1 359 16 is_stmt 1 view .LVU871
 359:boards/TMC5161_eval.c **** 				case 16:   *value = 4;   break;
 2526              		.loc 1 359 23 is_stmt 0 view .LVU872
 2527 07fe 0523     		movs	r3, #5
 2528 0800 E7E7     		b	.L218
 2529              	.L144:
 360:boards/TMC5161_eval.c **** 				case 32:   *value = 3;   break;
 2530              		.loc 1 360 16 is_stmt 1 view .LVU873
 360:boards/TMC5161_eval.c **** 				case 32:   *value = 3;   break;
 2531              		.loc 1 360 23 is_stmt 0 view .LVU874
 2532 0802 0423     		movs	r3, #4
 2533 0804 E5E7     		b	.L218
 2534              	.L154:
 361:boards/TMC5161_eval.c **** 				case 64:   *value = 2;   break;
 2535              		.loc 1 361 16 is_stmt 1 view .LVU875
 361:boards/TMC5161_eval.c **** 				case 64:   *value = 2;   break;
 2536              		.loc 1 361 23 is_stmt 0 view .LVU876
 2537 0806 0323     		movs	r3, #3
 2538 0808 E3E7     		b	.L218
 2539              	.L155:
 362:boards/TMC5161_eval.c **** 				case 128:  *value = 1;   break;
 2540              		.loc 1 362 16 is_stmt 1 view .LVU877
 362:boards/TMC5161_eval.c **** 				case 128:  *value = 1;   break;
 2541              		.loc 1 362 23 is_stmt 0 view .LVU878
 2542 080a 0223     		movs	r3, #2
 2543 080c E1E7     		b	.L218
 2544              	.L152:
 363:boards/TMC5161_eval.c **** 				case 256:  *value = 0;   break;
 2545              		.loc 1 363 16 is_stmt 1 view .LVU879
 363:boards/TMC5161_eval.c **** 				case 256:  *value = 0;   break;
 2546              		.loc 1 363 23 is_stmt 0 view .LVU880
 2547 080e 0123     		movs	r3, #1
 2548 0810 DFE7     		b	.L218
 2549              	.L85:
 380:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TBL_MASK, TMC5161_TBL_SH
 2550              		.loc 1 380 3 is_stmt 1 view .LVU881
 381:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2551              		.loc 1 381 13 is_stmt 0 view .LVU882
 2552 0812 2548     		ldr	r0, .L221
 2553              	.LVL323:
 381:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2554              		.loc 1 381 13 view .LVU883
 2555 0814 6C21     		movs	r1, #108
 2556              	.LVL324:
 380:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TBL_MASK, TMC5161_TBL_SH
 2557              		.loc 1 380 5 view .LVU884
 2558 0816 36B9     		cbnz	r6, .L158
 381:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2559              		.loc 1 381 4 is_stmt 1 view .LVU885
 2560              	.LBB369:
 2561              	.LBI369:
  31:boards/TMC5161_eval.c **** {
 2562              		.loc 1 31 31 view .LVU886
 2563              	.LVL325:
  31:boards/TMC5161_eval.c **** {
 2564              		.loc 1 31 31 is_stmt 0 view .LVU887
 2565              	.LBE369:
  33:boards/TMC5161_eval.c **** 
 2566              		.loc 1 33 2 is_stmt 1 view .LVU888
  35:boards/TMC5161_eval.c **** }
 2567              		.loc 1 35 2 view .LVU889
 381:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2568              		.loc 1 381 13 is_stmt 0 view .LVU890
 2569 0818 FFF7FEFF 		bl	tmc5161_readInt
 2570              	.LVL326:
 2571 081c C0F3C130 		ubfx	r0, r0, #15, #2
 381:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2572              		.loc 1 381 11 view .LVU891
 2573 0820 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 2574              		.loc 1 113 11 view .LVU892
 2575 0822 3446     		mov	r4, r6
 2576 0824 93E5     		b	.L54
 2577              	.LVL327:
 2578              	.L158:
 382:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TBL_MASK, TMC5161_TBL_SHIFT, *v
 2579              		.loc 1 382 10 is_stmt 1 view .LVU893
 383:boards/TMC5161_eval.c **** 		}
 2580              		.loc 1 383 4 view .LVU894
 2581              	.LBB370:
 2582              	.LBI370:
  31:boards/TMC5161_eval.c **** {
 2583              		.loc 1 31 31 view .LVU895
  31:boards/TMC5161_eval.c **** {
 2584              		.loc 1 31 31 is_stmt 0 view .LVU896
 2585              	.LBE370:
  33:boards/TMC5161_eval.c **** 
 2586              		.loc 1 33 2 is_stmt 1 view .LVU897
  35:boards/TMC5161_eval.c **** }
 2587              		.loc 1 35 2 view .LVU898
 2588              	.LBB371:
 2589              	.LBI371:
  31:boards/TMC5161_eval.c **** {
 2590              		.loc 1 31 31 view .LVU899
  31:boards/TMC5161_eval.c **** {
 2591              		.loc 1 31 31 is_stmt 0 view .LVU900
 2592              	.LBE371:
  33:boards/TMC5161_eval.c **** 
 2593              		.loc 1 33 2 is_stmt 1 view .LVU901
  35:boards/TMC5161_eval.c **** }
 2594              		.loc 1 35 2 view .LVU902
 383:boards/TMC5161_eval.c **** 		}
 2595              		.loc 1 383 4 is_stmt 0 view .LVU903
 2596 0826 FFF7FEFF 		bl	tmc5161_readInt
 2597              	.LVL328:
 2598 082a 2B68     		ldr	r3, [r5]
 2599 082c DB03     		lsls	r3, r3, #15
 2600 082e 03F4C033 		and	r3, r3, #98304
 2601 0832 20F4C032 		bic	r2, r0, #98304
 2602 0836 1A43     		orrs	r2, r2, r3
 2603 0838 1B48     		ldr	r0, .L221
 2604 083a 6C21     		movs	r1, #108
 2605 083c FFF7FEFF 		bl	tmc5161_writeInt
 2606              	.LVL329:
 113:boards/TMC5161_eval.c **** 
 2607              		.loc 1 113 11 view .LVU904
 2608 0840 0024     		movs	r4, #0
 2609 0842 84E5     		b	.L54
 2610              	.LVL330:
 2611              	.L84:
 388:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_CHM_MASK, TMC5161_CHM_SH
 2612              		.loc 1 388 3 is_stmt 1 view .LVU905
 389:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2613              		.loc 1 389 13 is_stmt 0 view .LVU906
 2614 0844 1848     		ldr	r0, .L221
 2615              	.LVL331:
 389:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2616              		.loc 1 389 13 view .LVU907
 2617 0846 6C21     		movs	r1, #108
 2618              	.LVL332:
 388:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_CHM_MASK, TMC5161_CHM_SH
 2619              		.loc 1 388 5 view .LVU908
 2620 0848 36B9     		cbnz	r6, .L159
 389:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2621              		.loc 1 389 4 is_stmt 1 view .LVU909
 2622              	.LBB372:
 2623              	.LBI372:
  31:boards/TMC5161_eval.c **** {
 2624              		.loc 1 31 31 view .LVU910
 2625              	.LVL333:
  31:boards/TMC5161_eval.c **** {
 2626              		.loc 1 31 31 is_stmt 0 view .LVU911
 2627              	.LBE372:
  33:boards/TMC5161_eval.c **** 
 2628              		.loc 1 33 2 is_stmt 1 view .LVU912
  35:boards/TMC5161_eval.c **** }
 2629              		.loc 1 35 2 view .LVU913
 389:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2630              		.loc 1 389 13 is_stmt 0 view .LVU914
 2631 084a FFF7FEFF 		bl	tmc5161_readInt
 2632              	.LVL334:
 2633 084e C0F38030 		ubfx	r0, r0, #14, #1
 389:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2634              		.loc 1 389 11 view .LVU915
 2635 0852 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 2636              		.loc 1 113 11 view .LVU916
 2637 0854 3446     		mov	r4, r6
 2638 0856 7AE5     		b	.L54
 2639              	.LVL335:
 2640              	.L159:
 390:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_CHM_MASK, TMC5161_CHM_SHIFT, *v
 2641              		.loc 1 390 10 is_stmt 1 view .LVU917
 391:boards/TMC5161_eval.c **** 		}
 2642              		.loc 1 391 4 view .LVU918
 2643              	.LBB373:
 2644              	.LBI373:
  31:boards/TMC5161_eval.c **** {
 2645              		.loc 1 31 31 view .LVU919
  31:boards/TMC5161_eval.c **** {
 2646              		.loc 1 31 31 is_stmt 0 view .LVU920
 2647              	.LBE373:
  33:boards/TMC5161_eval.c **** 
 2648              		.loc 1 33 2 is_stmt 1 view .LVU921
  35:boards/TMC5161_eval.c **** }
 2649              		.loc 1 35 2 view .LVU922
 2650              	.LBB374:
 2651              	.LBI374:
  31:boards/TMC5161_eval.c **** {
 2652              		.loc 1 31 31 view .LVU923
  31:boards/TMC5161_eval.c **** {
 2653              		.loc 1 31 31 is_stmt 0 view .LVU924
 2654              	.LBE374:
  33:boards/TMC5161_eval.c **** 
 2655              		.loc 1 33 2 is_stmt 1 view .LVU925
  35:boards/TMC5161_eval.c **** }
 2656              		.loc 1 35 2 view .LVU926
 391:boards/TMC5161_eval.c **** 		}
 2657              		.loc 1 391 4 is_stmt 0 view .LVU927
 2658 0858 FFF7FEFF 		bl	tmc5161_readInt
 2659              	.LVL336:
 2660 085c 2B68     		ldr	r3, [r5]
 2661 085e 9B03     		lsls	r3, r3, #14
 2662 0860 03F48043 		and	r3, r3, #16384
 2663 0864 20F48042 		bic	r2, r0, #16384
 2664 0868 1A43     		orrs	r2, r2, r3
 2665 086a 0F48     		ldr	r0, .L221
 2666 086c 6C21     		movs	r1, #108
 2667 086e FFF7FEFF 		bl	tmc5161_writeInt
 2668              	.LVL337:
 113:boards/TMC5161_eval.c **** 
 2669              		.loc 1 113 11 view .LVU928
 2670 0872 0024     		movs	r4, #0
 2671 0874 6BE5     		b	.L54
 2672              	.LVL338:
 2673              	.L83:
 396:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_DISFDCC_MASK, TMC5161_DI
 2674              		.loc 1 396 3 is_stmt 1 view .LVU929
 397:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2675              		.loc 1 397 13 is_stmt 0 view .LVU930
 2676 0876 0C48     		ldr	r0, .L221
 2677              	.LVL339:
 397:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2678              		.loc 1 397 13 view .LVU931
 2679 0878 6C21     		movs	r1, #108
 2680              	.LVL340:
 396:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_DISFDCC_MASK, TMC5161_DI
 2681              		.loc 1 396 5 view .LVU932
 2682 087a 36B9     		cbnz	r6, .L160
 397:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2683              		.loc 1 397 4 is_stmt 1 view .LVU933
 2684              	.LBB375:
 2685              	.LBI375:
  31:boards/TMC5161_eval.c **** {
 2686              		.loc 1 31 31 view .LVU934
 2687              	.LVL341:
  31:boards/TMC5161_eval.c **** {
 2688              		.loc 1 31 31 is_stmt 0 view .LVU935
 2689              	.LBE375:
  33:boards/TMC5161_eval.c **** 
 2690              		.loc 1 33 2 is_stmt 1 view .LVU936
  35:boards/TMC5161_eval.c **** }
 2691              		.loc 1 35 2 view .LVU937
 397:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2692              		.loc 1 397 13 is_stmt 0 view .LVU938
 2693 087c FFF7FEFF 		bl	tmc5161_readInt
 2694              	.LVL342:
 2695 0880 C0F30030 		ubfx	r0, r0, #12, #1
 397:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 2696              		.loc 1 397 11 view .LVU939
 2697 0884 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 2698              		.loc 1 113 11 view .LVU940
 2699 0886 3446     		mov	r4, r6
 2700 0888 61E5     		b	.L54
 2701              	.LVL343:
 2702              	.L160:
 398:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_DISFDCC_MASK, TMC5161_DISFDCC_S
 2703              		.loc 1 398 10 is_stmt 1 view .LVU941
 399:boards/TMC5161_eval.c **** 		}
 2704              		.loc 1 399 4 view .LVU942
 2705              	.LBB376:
 2706              	.LBI376:
  31:boards/TMC5161_eval.c **** {
 2707              		.loc 1 31 31 view .LVU943
  31:boards/TMC5161_eval.c **** {
 2708              		.loc 1 31 31 is_stmt 0 view .LVU944
 2709              	.LBE376:
  33:boards/TMC5161_eval.c **** 
 2710              		.loc 1 33 2 is_stmt 1 view .LVU945
  35:boards/TMC5161_eval.c **** }
 2711              		.loc 1 35 2 view .LVU946
 2712              	.LBB377:
 2713              	.LBI377:
  31:boards/TMC5161_eval.c **** {
 2714              		.loc 1 31 31 view .LVU947
  31:boards/TMC5161_eval.c **** {
 2715              		.loc 1 31 31 is_stmt 0 view .LVU948
 2716              	.LBE377:
  33:boards/TMC5161_eval.c **** 
 2717              		.loc 1 33 2 is_stmt 1 view .LVU949
  35:boards/TMC5161_eval.c **** }
 2718              		.loc 1 35 2 view .LVU950
 399:boards/TMC5161_eval.c **** 		}
 2719              		.loc 1 399 4 is_stmt 0 view .LVU951
 2720 088a FFF7FEFF 		bl	tmc5161_readInt
 2721              	.LVL344:
 2722 088e 2B68     		ldr	r3, [r5]
 2723 0890 1B03     		lsls	r3, r3, #12
 2724 0892 03F48053 		and	r3, r3, #4096
 2725 0896 20F48052 		bic	r2, r0, #4096
 2726 089a 1A43     		orrs	r2, r2, r3
 2727 089c 0248     		ldr	r0, .L221
 2728 089e 6C21     		movs	r1, #108
 2729 08a0 FFF7FEFF 		bl	tmc5161_writeInt
 2730              	.LVL345:
 113:boards/TMC5161_eval.c **** 
 2731              		.loc 1 113 11 view .LVU952
 2732 08a4 0024     		movs	r4, #0
 2733 08a6 52E5     		b	.L54
 2734              	.L222:
 2735              		.align	2
 2736              	.L221:
 2737 08a8 00000000 		.word	.LANCHOR0
 2738 08ac FFFF0F00 		.word	1048575
 2739              	.LVL346:
 2740              	.L82:
 404:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 2741              		.loc 1 404 3 is_stmt 1 view .LVU953
 2742              	.LBB378:
 2743              	.LBI378:
  31:boards/TMC5161_eval.c **** {
 2744              		.loc 1 31 31 view .LVU954
  31:boards/TMC5161_eval.c **** {
 2745              		.loc 1 31 31 is_stmt 0 view .LVU955
 2746              	.LBE378:
  33:boards/TMC5161_eval.c **** 
 2747              		.loc 1 33 2 is_stmt 1 view .LVU956
  35:boards/TMC5161_eval.c **** }
 2748              		.loc 1 35 2 view .LVU957
 404:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 2749              		.loc 1 404 12 is_stmt 0 view .LVU958
 2750 08b0 B148     		ldr	r0, .L223
 2751              	.LVL347:
 404:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 2752              		.loc 1 404 12 view .LVU959
 2753 08b2 6C21     		movs	r1, #108
 2754              	.LVL348:
 404:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 2755              		.loc 1 404 12 view .LVU960
 2756 08b4 FFF7FEFF 		bl	tmc5161_readInt
 2757              	.LVL349:
 2758 08b8 0746     		mov	r7, r0
 2759              	.LVL350:
 405:boards/TMC5161_eval.c **** 			if(buffer & (1 << TMC5161_CHM_SHIFT))
 2760              		.loc 1 405 3 is_stmt 1 view .LVU961
 405:boards/TMC5161_eval.c **** 			if(buffer & (1 << TMC5161_CHM_SHIFT))
 2761              		.loc 1 405 5 is_stmt 0 view .LVU962
 2762 08ba CEB9     		cbnz	r6, .L161
 406:boards/TMC5161_eval.c **** 			{
 2763              		.loc 1 406 4 is_stmt 1 view .LVU963
 406:boards/TMC5161_eval.c **** 			{
 2764              		.loc 1 406 6 is_stmt 0 view .LVU964
 2765 08bc 10F48044 		ands	r4, r0, #16384
 2766 08c0 05D0     		beq	.L162
 408:boards/TMC5161_eval.c **** 			}
 2767              		.loc 1 408 5 is_stmt 1 view .LVU965
 408:boards/TMC5161_eval.c **** 			}
 2768              		.loc 1 408 22 is_stmt 0 view .LVU966
 2769 08c2 C709     		lsrs	r7, r0, #7
 408:boards/TMC5161_eval.c **** 			}
 2770              		.loc 1 408 45 view .LVU967
 2771 08c4 07F4F067 		and	r7, r7, #1920
 408:boards/TMC5161_eval.c **** 			}
 2772              		.loc 1 408 12 view .LVU968
 2773 08c8 2F60     		str	r7, [r5]
 113:boards/TMC5161_eval.c **** 
 2774              		.loc 1 113 11 view .LVU969
 2775 08ca 3446     		mov	r4, r6
 2776 08cc 3FE5     		b	.L54
 2777              	.L162:
 412:boards/TMC5161_eval.c **** 				if(buffer & TMC5161_TFD_3_SHIFT)
 2778              		.loc 1 412 5 is_stmt 1 view .LVU970
 2779              	.LBB379:
 2780              	.LBI379:
  31:boards/TMC5161_eval.c **** {
 2781              		.loc 1 31 31 view .LVU971
 2782              	.LVL351:
  31:boards/TMC5161_eval.c **** {
 2783              		.loc 1 31 31 is_stmt 0 view .LVU972
 2784              	.LBE379:
  33:boards/TMC5161_eval.c **** 
 2785              		.loc 1 33 2 is_stmt 1 view .LVU973
  35:boards/TMC5161_eval.c **** }
 2786              		.loc 1 35 2 view .LVU974
 412:boards/TMC5161_eval.c **** 				if(buffer & TMC5161_TFD_3_SHIFT)
 2787              		.loc 1 412 15 is_stmt 0 view .LVU975
 2788 08ce AA48     		ldr	r0, .L223
 2789              	.LVL352:
 412:boards/TMC5161_eval.c **** 				if(buffer & TMC5161_TFD_3_SHIFT)
 2790              		.loc 1 412 15 view .LVU976
 2791 08d0 6C21     		movs	r1, #108
 2792 08d2 FFF7FEFF 		bl	tmc5161_readInt
 2793              	.LVL353:
 413:boards/TMC5161_eval.c **** 					*value |= 1<<3; // MSB wird zu value dazugefügt
 2794              		.loc 1 413 7 view .LVU977
 2795 08d6 17F00B0F 		tst	r7, #11
 412:boards/TMC5161_eval.c **** 				if(buffer & TMC5161_TFD_3_SHIFT)
 2796              		.loc 1 412 67 view .LVU978
 2797 08da 4FEA2010 		asr	r0, r0, #4
 412:boards/TMC5161_eval.c **** 				if(buffer & TMC5161_TFD_3_SHIFT)
 2798              		.loc 1 412 93 view .LVU979
 2799 08de 00F07000 		and	r0, r0, #112
 413:boards/TMC5161_eval.c **** 					*value |= 1<<3; // MSB wird zu value dazugefügt
 2800              		.loc 1 413 5 is_stmt 1 view .LVU980
 413:boards/TMC5161_eval.c **** 					*value |= 1<<3; // MSB wird zu value dazugefügt
 2801              		.loc 1 413 7 is_stmt 0 view .LVU981
 2802 08e2 01D1     		bne	.L163
 412:boards/TMC5161_eval.c **** 				if(buffer & TMC5161_TFD_3_SHIFT)
 2803              		.loc 1 412 12 view .LVU982
 2804 08e4 2860     		str	r0, [r5]
 2805 08e6 87E5     		b	.L164
 2806              	.L163:
 414:boards/TMC5161_eval.c **** 			}
 2807              		.loc 1 414 6 is_stmt 1 view .LVU983
 414:boards/TMC5161_eval.c **** 			}
 2808              		.loc 1 414 13 is_stmt 0 view .LVU984
 2809 08e8 40F00800 		orr	r0, r0, #8
 2810 08ec 2860     		str	r0, [r5]
 2811 08ee 2EE5     		b	.L54
 2812              	.LVL354:
 2813              	.L161:
 416:boards/TMC5161_eval.c **** 			if(tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF) & (1<<14))
 2814              		.loc 1 416 10 is_stmt 1 view .LVU985
 417:boards/TMC5161_eval.c **** 			{
 2815              		.loc 1 417 4 view .LVU986
 2816              	.LBB380:
 2817              	.LBI380:
  31:boards/TMC5161_eval.c **** {
 2818              		.loc 1 31 31 view .LVU987
  31:boards/TMC5161_eval.c **** {
 2819              		.loc 1 31 31 is_stmt 0 view .LVU988
 2820              	.LBE380:
  33:boards/TMC5161_eval.c **** 
 2821              		.loc 1 33 2 is_stmt 1 view .LVU989
  35:boards/TMC5161_eval.c **** }
 2822              		.loc 1 35 2 view .LVU990
 417:boards/TMC5161_eval.c **** 			{
 2823              		.loc 1 417 7 is_stmt 0 view .LVU991
 2824 08f0 6C21     		movs	r1, #108
 2825 08f2 A148     		ldr	r0, .L223
 2826              	.LVL355:
 417:boards/TMC5161_eval.c **** 			{
 2827              		.loc 1 417 7 view .LVU992
 2828 08f4 FFF7FEFF 		bl	tmc5161_readInt
 2829              	.LVL356:
 417:boards/TMC5161_eval.c **** 			{
 2830              		.loc 1 417 6 view .LVU993
 2831 08f8 10F48044 		ands	r4, r0, #16384
 419:boards/TMC5161_eval.c **** 			}
 2832              		.loc 1 419 5 view .LVU994
 2833 08fc 4FF06C01 		mov	r1, #108
 2834 0900 9D48     		ldr	r0, .L223
 417:boards/TMC5161_eval.c **** 			{
 2835              		.loc 1 417 6 view .LVU995
 2836 0902 0ED0     		beq	.L165
 419:boards/TMC5161_eval.c **** 			}
 2837              		.loc 1 419 5 is_stmt 1 view .LVU996
 2838              	.LBB381:
 2839              	.LBI381:
  31:boards/TMC5161_eval.c **** {
 2840              		.loc 1 31 31 view .LVU997
 2841              	.LVL357:
  31:boards/TMC5161_eval.c **** {
 2842              		.loc 1 31 31 is_stmt 0 view .LVU998
 2843              	.LBE381:
  33:boards/TMC5161_eval.c **** 
 2844              		.loc 1 33 2 is_stmt 1 view .LVU999
  35:boards/TMC5161_eval.c **** }
 2845              		.loc 1 35 2 view .LVU1000
 2846              	.LBB382:
 2847              	.LBI382:
  31:boards/TMC5161_eval.c **** {
 2848              		.loc 1 31 31 view .LVU1001
  31:boards/TMC5161_eval.c **** {
 2849              		.loc 1 31 31 is_stmt 0 view .LVU1002
 2850              	.LBE382:
  33:boards/TMC5161_eval.c **** 
 2851              		.loc 1 33 2 is_stmt 1 view .LVU1003
  35:boards/TMC5161_eval.c **** }
 2852              		.loc 1 35 2 view .LVU1004
 419:boards/TMC5161_eval.c **** 			}
 2853              		.loc 1 419 5 is_stmt 0 view .LVU1005
 2854 0904 FFF7FEFF 		bl	tmc5161_readInt
 2855              	.LVL358:
 2856 0908 2B68     		ldr	r3, [r5]
 2857 090a DB01     		lsls	r3, r3, #7
 2858 090c 03F4F063 		and	r3, r3, #1920
 2859 0910 20F4F062 		bic	r2, r0, #1920
 2860 0914 1A43     		orrs	r2, r2, r3
 2861 0916 9848     		ldr	r0, .L223
 2862 0918 6C21     		movs	r1, #108
 2863 091a FFF7FEFF 		bl	tmc5161_writeInt
 2864              	.LVL359:
 113:boards/TMC5161_eval.c **** 
 2865              		.loc 1 113 11 view .LVU1006
 2866 091e 0024     		movs	r4, #0
 2867 0920 15E5     		b	.L54
 2868              	.LVL360:
 2869              	.L165:
 423:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TFD_ALL_MASK, TMC5161_TFD_ALL_
 2870              		.loc 1 423 5 is_stmt 1 view .LVU1007
 2871              	.LBB383:
 2872              	.LBI383:
  31:boards/TMC5161_eval.c **** {
 2873              		.loc 1 31 31 view .LVU1008
  31:boards/TMC5161_eval.c **** {
 2874              		.loc 1 31 31 is_stmt 0 view .LVU1009
 2875              	.LBE383:
  33:boards/TMC5161_eval.c **** 
 2876              		.loc 1 33 2 is_stmt 1 view .LVU1010
  35:boards/TMC5161_eval.c **** }
 2877              		.loc 1 35 2 view .LVU1011
 2878              	.LBB384:
 2879              	.LBI384:
  31:boards/TMC5161_eval.c **** {
 2880              		.loc 1 31 31 view .LVU1012
  31:boards/TMC5161_eval.c **** {
 2881              		.loc 1 31 31 is_stmt 0 view .LVU1013
 2882              	.LBE384:
  33:boards/TMC5161_eval.c **** 
 2883              		.loc 1 33 2 is_stmt 1 view .LVU1014
  35:boards/TMC5161_eval.c **** }
 2884              		.loc 1 35 2 view .LVU1015
 423:boards/TMC5161_eval.c **** 				TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TFD_ALL_MASK, TMC5161_TFD_ALL_
 2885              		.loc 1 423 5 is_stmt 0 view .LVU1016
 2886 0922 FFF7FEFF 		bl	tmc5161_readInt
 2887              	.LVL361:
 2888 0926 6C21     		movs	r1, #108
 2889 0928 20F40062 		bic	r2, r0, #2048
 2890 092c 9248     		ldr	r0, .L223
 2891 092e FFF7FEFF 		bl	tmc5161_writeInt
 2892              	.LVL362:
 424:boards/TMC5161_eval.c **** 			}
 2893              		.loc 1 424 5 is_stmt 1 view .LVU1017
 2894              	.LBB385:
 2895              	.LBI385:
  31:boards/TMC5161_eval.c **** {
 2896              		.loc 1 31 31 view .LVU1018
  31:boards/TMC5161_eval.c **** {
 2897              		.loc 1 31 31 is_stmt 0 view .LVU1019
 2898              	.LBE385:
  33:boards/TMC5161_eval.c **** 
 2899              		.loc 1 33 2 is_stmt 1 view .LVU1020
  35:boards/TMC5161_eval.c **** }
 2900              		.loc 1 35 2 view .LVU1021
 2901              	.LBB386:
 2902              	.LBI386:
  31:boards/TMC5161_eval.c **** {
 2903              		.loc 1 31 31 view .LVU1022
  31:boards/TMC5161_eval.c **** {
 2904              		.loc 1 31 31 is_stmt 0 view .LVU1023
 2905              	.LBE386:
  33:boards/TMC5161_eval.c **** 
 2906              		.loc 1 33 2 is_stmt 1 view .LVU1024
  35:boards/TMC5161_eval.c **** }
 2907              		.loc 1 35 2 view .LVU1025
 424:boards/TMC5161_eval.c **** 			}
 2908              		.loc 1 424 5 is_stmt 0 view .LVU1026
 2909 0932 6C21     		movs	r1, #108
 2910 0934 9048     		ldr	r0, .L223
 2911 0936 FFF7FEFF 		bl	tmc5161_readInt
 2912              	.LVL363:
 2913 093a 2B68     		ldr	r3, [r5]
 2914 093c 1B01     		lsls	r3, r3, #4
 2915 093e 03F07003 		and	r3, r3, #112
 2916 0942 20F07002 		bic	r2, r0, #112
 2917 0946 1A43     		orrs	r2, r2, r3
 2918 0948 8B48     		ldr	r0, .L223
 2919 094a 6C21     		movs	r1, #108
 2920 094c FFF7FEFF 		bl	tmc5161_writeInt
 2921              	.LVL364:
 2922 0950 FDE4     		b	.L54
 2923              	.LVL365:
 2924              	.L81:
 430:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 2925              		.loc 1 430 3 is_stmt 1 view .LVU1027
 2926              	.LBB387:
 2927              	.LBI387:
  31:boards/TMC5161_eval.c **** {
 2928              		.loc 1 31 31 view .LVU1028
  31:boards/TMC5161_eval.c **** {
 2929              		.loc 1 31 31 is_stmt 0 view .LVU1029
 2930              	.LBE387:
  33:boards/TMC5161_eval.c **** 
 2931              		.loc 1 33 2 is_stmt 1 view .LVU1030
  35:boards/TMC5161_eval.c **** }
 2932              		.loc 1 35 2 view .LVU1031
 430:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 2933              		.loc 1 430 12 is_stmt 0 view .LVU1032
 2934 0952 8948     		ldr	r0, .L223
 2935              	.LVL366:
 430:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 2936              		.loc 1 430 12 view .LVU1033
 2937 0954 6C21     		movs	r1, #108
 2938              	.LVL367:
 430:boards/TMC5161_eval.c **** 		if(readWrite == READ) {
 2939              		.loc 1 430 12 view .LVU1034
 2940 0956 FFF7FEFF 		bl	tmc5161_readInt
 2941              	.LVL368:
 431:boards/TMC5161_eval.c **** 			if(buffer & (1 << TMC5161_CHM_SHIFT))
 2942              		.loc 1 431 3 is_stmt 1 view .LVU1035
 2943 095a 00F48044 		and	r4, r0, #16384
 431:boards/TMC5161_eval.c **** 			if(buffer & (1 << TMC5161_CHM_SHIFT))
 2944              		.loc 1 431 5 is_stmt 0 view .LVU1036
 2945 095e 8EB9     		cbnz	r6, .L166
 432:boards/TMC5161_eval.c **** 			{
 2946              		.loc 1 432 4 is_stmt 1 view .LVU1037
 432:boards/TMC5161_eval.c **** 			{
 2947              		.loc 1 432 6 is_stmt 0 view .LVU1038
 2948 0960 2CB1     		cbz	r4, .L167
 434:boards/TMC5161_eval.c **** 			}
 2949              		.loc 1 434 5 is_stmt 1 view .LVU1039
 434:boards/TMC5161_eval.c **** 			}
 2950              		.loc 1 434 22 is_stmt 0 view .LVU1040
 2951 0962 0009     		lsrs	r0, r0, #4
 2952              	.LVL369:
 434:boards/TMC5161_eval.c **** 			}
 2953              		.loc 1 434 46 view .LVU1041
 2954 0964 00F07000 		and	r0, r0, #112
 434:boards/TMC5161_eval.c **** 			}
 2955              		.loc 1 434 12 view .LVU1042
 2956 0968 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 2957              		.loc 1 113 11 view .LVU1043
 2958 096a 3446     		mov	r4, r6
 2959 096c EFE4     		b	.L54
 2960              	.LVL370:
 2961              	.L167:
 438:boards/TMC5161_eval.c **** 				if(buffer & (1 << TMC5161_TFD_3_SHIFT))
 2962              		.loc 1 438 5 is_stmt 1 view .LVU1044
 438:boards/TMC5161_eval.c **** 				if(buffer & (1 << TMC5161_TFD_3_SHIFT))
 2963              		.loc 1 438 22 is_stmt 0 view .LVU1045
 2964 096e C309     		lsrs	r3, r0, #7
 439:boards/TMC5161_eval.c **** 					*value |= 1<<3; // MSB wird zu value dazugefügt
 2965              		.loc 1 439 7 view .LVU1046
 2966 0970 0205     		lsls	r2, r0, #20
 438:boards/TMC5161_eval.c **** 				if(buffer & (1 << TMC5161_TFD_3_SHIFT))
 2967              		.loc 1 438 47 view .LVU1047
 2968 0972 03F4F063 		and	r3, r3, #1920
 439:boards/TMC5161_eval.c **** 					*value |= 1<<3; // MSB wird zu value dazugefügt
 2969              		.loc 1 439 5 is_stmt 1 view .LVU1048
 439:boards/TMC5161_eval.c **** 					*value |= 1<<3; // MSB wird zu value dazugefügt
 2970              		.loc 1 439 7 is_stmt 0 view .LVU1049
 2971 0976 01D4     		bmi	.L168
 438:boards/TMC5161_eval.c **** 				if(buffer & (1 << TMC5161_TFD_3_SHIFT))
 2972              		.loc 1 438 12 view .LVU1050
 2973 0978 2B60     		str	r3, [r5]
 2974 097a 3DE5     		b	.L164
 2975              	.L168:
 440:boards/TMC5161_eval.c **** 			}
 2976              		.loc 1 440 6 is_stmt 1 view .LVU1051
 440:boards/TMC5161_eval.c **** 			}
 2977              		.loc 1 440 13 is_stmt 0 view .LVU1052
 2978 097c 43F00803 		orr	r3, r3, #8
 2979 0980 2B60     		str	r3, [r5]
 2980 0982 E4E4     		b	.L54
 2981              	.L166:
 442:boards/TMC5161_eval.c **** 			if(buffer & (1 << TMC5161_CHM_SHIFT))
 2982              		.loc 1 442 10 is_stmt 1 view .LVU1053
 443:boards/TMC5161_eval.c **** 			{
 2983              		.loc 1 443 4 view .LVU1054
 445:boards/TMC5161_eval.c **** 			}
 2984              		.loc 1 445 5 is_stmt 0 view .LVU1055
 2985 0984 7C48     		ldr	r0, .L223
 2986              	.LVL371:
 445:boards/TMC5161_eval.c **** 			}
 2987              		.loc 1 445 5 view .LVU1056
 2988 0986 6C21     		movs	r1, #108
 443:boards/TMC5161_eval.c **** 			{
 2989              		.loc 1 443 6 view .LVU1057
 2990 0988 74B1     		cbz	r4, .L169
 445:boards/TMC5161_eval.c **** 			}
 2991              		.loc 1 445 5 is_stmt 1 view .LVU1058
 2992              	.LBB388:
 2993              	.LBI388:
  31:boards/TMC5161_eval.c **** {
 2994              		.loc 1 31 31 view .LVU1059
 2995              	.LVL372:
  31:boards/TMC5161_eval.c **** {
 2996              		.loc 1 31 31 is_stmt 0 view .LVU1060
 2997              	.LBE388:
  33:boards/TMC5161_eval.c **** 
 2998              		.loc 1 33 2 is_stmt 1 view .LVU1061
  35:boards/TMC5161_eval.c **** }
 2999              		.loc 1 35 2 view .LVU1062
 3000              	.LBB389:
 3001              	.LBI389:
  31:boards/TMC5161_eval.c **** {
 3002              		.loc 1 31 31 view .LVU1063
  31:boards/TMC5161_eval.c **** {
 3003              		.loc 1 31 31 is_stmt 0 view .LVU1064
 3004              	.LBE389:
  33:boards/TMC5161_eval.c **** 
 3005              		.loc 1 33 2 is_stmt 1 view .LVU1065
  35:boards/TMC5161_eval.c **** }
 3006              		.loc 1 35 2 view .LVU1066
 445:boards/TMC5161_eval.c **** 			}
 3007              		.loc 1 445 5 is_stmt 0 view .LVU1067
 3008 098a FFF7FEFF 		bl	tmc5161_readInt
 3009              	.LVL373:
 3010 098e 2B68     		ldr	r3, [r5]
 3011 0990 1B01     		lsls	r3, r3, #4
 3012 0992 03F07003 		and	r3, r3, #112
 3013 0996 20F07002 		bic	r2, r0, #112
 3014 099a 1A43     		orrs	r2, r2, r3
 3015 099c 7648     		ldr	r0, .L223
 3016 099e 6C21     		movs	r1, #108
 3017 09a0 FFF7FEFF 		bl	tmc5161_writeInt
 3018              	.LVL374:
 113:boards/TMC5161_eval.c **** 
 3019              		.loc 1 113 11 view .LVU1068
 3020 09a4 0024     		movs	r4, #0
 3021 09a6 D2E4     		b	.L54
 3022              	.LVL375:
 3023              	.L169:
 449:boards/TMC5161_eval.c **** 			}
 3024              		.loc 1 449 5 is_stmt 1 view .LVU1069
 3025              	.LBB390:
 3026              	.LBI390:
  31:boards/TMC5161_eval.c **** {
 3027              		.loc 1 31 31 view .LVU1070
  31:boards/TMC5161_eval.c **** {
 3028              		.loc 1 31 31 is_stmt 0 view .LVU1071
 3029              	.LBE390:
  33:boards/TMC5161_eval.c **** 
 3030              		.loc 1 33 2 is_stmt 1 view .LVU1072
  35:boards/TMC5161_eval.c **** }
 3031              		.loc 1 35 2 view .LVU1073
 3032              	.LBB391:
 3033              	.LBI391:
  31:boards/TMC5161_eval.c **** {
 3034              		.loc 1 31 31 view .LVU1074
  31:boards/TMC5161_eval.c **** {
 3035              		.loc 1 31 31 is_stmt 0 view .LVU1075
 3036              	.LBE391:
  33:boards/TMC5161_eval.c **** 
 3037              		.loc 1 33 2 is_stmt 1 view .LVU1076
  35:boards/TMC5161_eval.c **** }
 3038              		.loc 1 35 2 view .LVU1077
 449:boards/TMC5161_eval.c **** 			}
 3039              		.loc 1 449 5 is_stmt 0 view .LVU1078
 3040 09a8 FFF7FEFF 		bl	tmc5161_readInt
 3041              	.LVL376:
 3042 09ac 2B68     		ldr	r3, [r5]
 3043 09ae DB01     		lsls	r3, r3, #7
 3044 09b0 03F4F063 		and	r3, r3, #1920
 3045 09b4 20F4F062 		bic	r2, r0, #1920
 3046 09b8 1A43     		orrs	r2, r2, r3
 3047 09ba 6F48     		ldr	r0, .L223
 3048 09bc 6C21     		movs	r1, #108
 3049 09be FFF7FEFF 		bl	tmc5161_writeInt
 3050              	.LVL377:
 3051 09c2 C4E4     		b	.L54
 3052              	.LVL378:
 3053              	.L80:
 455:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TOFF_MASK, TMC5161_TOFF_
 3054              		.loc 1 455 3 is_stmt 1 view .LVU1079
 456:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3055              		.loc 1 456 13 is_stmt 0 view .LVU1080
 3056 09c4 6C48     		ldr	r0, .L223
 3057              	.LVL379:
 456:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3058              		.loc 1 456 13 view .LVU1081
 3059 09c6 6C21     		movs	r1, #108
 3060              	.LVL380:
 455:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TOFF_MASK, TMC5161_TOFF_
 3061              		.loc 1 455 5 view .LVU1082
 3062 09c8 36B9     		cbnz	r6, .L170
 456:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3063              		.loc 1 456 4 is_stmt 1 view .LVU1083
 3064              	.LBB392:
 3065              	.LBI392:
  31:boards/TMC5161_eval.c **** {
 3066              		.loc 1 31 31 view .LVU1084
 3067              	.LVL381:
  31:boards/TMC5161_eval.c **** {
 3068              		.loc 1 31 31 is_stmt 0 view .LVU1085
 3069              	.LBE392:
  33:boards/TMC5161_eval.c **** 
 3070              		.loc 1 33 2 is_stmt 1 view .LVU1086
  35:boards/TMC5161_eval.c **** }
 3071              		.loc 1 35 2 view .LVU1087
 456:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3072              		.loc 1 456 13 is_stmt 0 view .LVU1088
 3073 09ca FFF7FEFF 		bl	tmc5161_readInt
 3074              	.LVL382:
 3075 09ce 00F00F00 		and	r0, r0, #15
 456:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3076              		.loc 1 456 11 view .LVU1089
 3077 09d2 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3078              		.loc 1 113 11 view .LVU1090
 3079 09d4 3446     		mov	r4, r6
 3080 09d6 BAE4     		b	.L54
 3081              	.LVL383:
 3082              	.L170:
 457:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_TOFF_MASK, TMC5161_TOFF_SHIFT, 
 3083              		.loc 1 457 10 is_stmt 1 view .LVU1091
 458:boards/TMC5161_eval.c **** 		}
 3084              		.loc 1 458 4 view .LVU1092
 3085              	.LBB393:
 3086              	.LBI393:
  31:boards/TMC5161_eval.c **** {
 3087              		.loc 1 31 31 view .LVU1093
  31:boards/TMC5161_eval.c **** {
 3088              		.loc 1 31 31 is_stmt 0 view .LVU1094
 3089              	.LBE393:
  33:boards/TMC5161_eval.c **** 
 3090              		.loc 1 33 2 is_stmt 1 view .LVU1095
  35:boards/TMC5161_eval.c **** }
 3091              		.loc 1 35 2 view .LVU1096
 3092              	.LBB394:
 3093              	.LBI394:
  31:boards/TMC5161_eval.c **** {
 3094              		.loc 1 31 31 view .LVU1097
  31:boards/TMC5161_eval.c **** {
 3095              		.loc 1 31 31 is_stmt 0 view .LVU1098
 3096              	.LBE394:
  33:boards/TMC5161_eval.c **** 
 3097              		.loc 1 33 2 is_stmt 1 view .LVU1099
  35:boards/TMC5161_eval.c **** }
 3098              		.loc 1 35 2 view .LVU1100
 458:boards/TMC5161_eval.c **** 		}
 3099              		.loc 1 458 4 is_stmt 0 view .LVU1101
 3100 09d8 FFF7FEFF 		bl	tmc5161_readInt
 3101              	.LVL384:
 3102 09dc 2A68     		ldr	r2, [r5]
 3103 09de 20F00F00 		bic	r0, r0, #15
 3104 09e2 02F00F02 		and	r2, r2, #15
 3105 09e6 0243     		orrs	r2, r2, r0
 3106 09e8 6C21     		movs	r1, #108
 3107 09ea 6348     		ldr	r0, .L223
 3108 09ec FFF7FEFF 		bl	tmc5161_writeInt
 3109              	.LVL385:
 113:boards/TMC5161_eval.c **** 
 3110              		.loc 1 113 11 view .LVU1102
 3111 09f0 0024     		movs	r4, #0
 3112 09f2 ACE4     		b	.L54
 3113              	.LVL386:
 3114              	.L79:
 463:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEIMIN_MASK, TMC5161_SEI
 3115              		.loc 1 463 3 is_stmt 1 view .LVU1103
 464:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3116              		.loc 1 464 13 is_stmt 0 view .LVU1104
 3117 09f4 6048     		ldr	r0, .L223
 3118              	.LVL387:
 464:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3119              		.loc 1 464 13 view .LVU1105
 3120 09f6 6D21     		movs	r1, #109
 3121              	.LVL388:
 463:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEIMIN_MASK, TMC5161_SEI
 3122              		.loc 1 463 5 view .LVU1106
 3123 09f8 36B9     		cbnz	r6, .L171
 464:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3124              		.loc 1 464 4 is_stmt 1 view .LVU1107
 3125              	.LBB395:
 3126              	.LBI395:
  31:boards/TMC5161_eval.c **** {
 3127              		.loc 1 31 31 view .LVU1108
 3128              	.LVL389:
  31:boards/TMC5161_eval.c **** {
 3129              		.loc 1 31 31 is_stmt 0 view .LVU1109
 3130              	.LBE395:
  33:boards/TMC5161_eval.c **** 
 3131              		.loc 1 33 2 is_stmt 1 view .LVU1110
  35:boards/TMC5161_eval.c **** }
 3132              		.loc 1 35 2 view .LVU1111
 464:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3133              		.loc 1 464 13 is_stmt 0 view .LVU1112
 3134 09fa FFF7FEFF 		bl	tmc5161_readInt
 3135              	.LVL390:
 3136 09fe C0F3C030 		ubfx	r0, r0, #15, #1
 464:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3137              		.loc 1 464 11 view .LVU1113
 3138 0a02 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3139              		.loc 1 113 11 view .LVU1114
 3140 0a04 3446     		mov	r4, r6
 3141 0a06 A2E4     		b	.L54
 3142              	.LVL391:
 3143              	.L171:
 465:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEIMIN_MASK, TMC5161_SEIMIN_SHI
 3144              		.loc 1 465 10 is_stmt 1 view .LVU1115
 466:boards/TMC5161_eval.c **** 		}
 3145              		.loc 1 466 4 view .LVU1116
 3146              	.LBB396:
 3147              	.LBI396:
  31:boards/TMC5161_eval.c **** {
 3148              		.loc 1 31 31 view .LVU1117
  31:boards/TMC5161_eval.c **** {
 3149              		.loc 1 31 31 is_stmt 0 view .LVU1118
 3150              	.LBE396:
  33:boards/TMC5161_eval.c **** 
 3151              		.loc 1 33 2 is_stmt 1 view .LVU1119
  35:boards/TMC5161_eval.c **** }
 3152              		.loc 1 35 2 view .LVU1120
 3153              	.LBB397:
 3154              	.LBI397:
  31:boards/TMC5161_eval.c **** {
 3155              		.loc 1 31 31 view .LVU1121
  31:boards/TMC5161_eval.c **** {
 3156              		.loc 1 31 31 is_stmt 0 view .LVU1122
 3157              	.LBE397:
  33:boards/TMC5161_eval.c **** 
 3158              		.loc 1 33 2 is_stmt 1 view .LVU1123
  35:boards/TMC5161_eval.c **** }
 3159              		.loc 1 35 2 view .LVU1124
 466:boards/TMC5161_eval.c **** 		}
 3160              		.loc 1 466 4 is_stmt 0 view .LVU1125
 3161 0a08 FFF7FEFF 		bl	tmc5161_readInt
 3162              	.LVL392:
 3163 0a0c 2B68     		ldr	r3, [r5]
 3164 0a0e DB03     		lsls	r3, r3, #15
 3165 0a10 9BB2     		uxth	r3, r3
 3166 0a12 20F40042 		bic	r2, r0, #32768
 3167 0a16 1A43     		orrs	r2, r2, r3
 3168 0a18 5748     		ldr	r0, .L223
 3169 0a1a 6D21     		movs	r1, #109
 3170 0a1c FFF7FEFF 		bl	tmc5161_writeInt
 3171              	.LVL393:
 113:boards/TMC5161_eval.c **** 
 3172              		.loc 1 113 11 view .LVU1126
 3173 0a20 0024     		movs	r4, #0
 3174 0a22 94E4     		b	.L54
 3175              	.LVL394:
 3176              	.L78:
 471:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEDN_MASK, TMC5161_SEDN_
 3177              		.loc 1 471 3 is_stmt 1 view .LVU1127
 472:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3178              		.loc 1 472 13 is_stmt 0 view .LVU1128
 3179 0a24 5448     		ldr	r0, .L223
 3180              	.LVL395:
 472:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3181              		.loc 1 472 13 view .LVU1129
 3182 0a26 6D21     		movs	r1, #109
 3183              	.LVL396:
 471:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEDN_MASK, TMC5161_SEDN_
 3184              		.loc 1 471 5 view .LVU1130
 3185 0a28 36B9     		cbnz	r6, .L172
 472:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3186              		.loc 1 472 4 is_stmt 1 view .LVU1131
 3187              	.LBB398:
 3188              	.LBI398:
  31:boards/TMC5161_eval.c **** {
 3189              		.loc 1 31 31 view .LVU1132
 3190              	.LVL397:
  31:boards/TMC5161_eval.c **** {
 3191              		.loc 1 31 31 is_stmt 0 view .LVU1133
 3192              	.LBE398:
  33:boards/TMC5161_eval.c **** 
 3193              		.loc 1 33 2 is_stmt 1 view .LVU1134
  35:boards/TMC5161_eval.c **** }
 3194              		.loc 1 35 2 view .LVU1135
 472:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3195              		.loc 1 472 13 is_stmt 0 view .LVU1136
 3196 0a2a FFF7FEFF 		bl	tmc5161_readInt
 3197              	.LVL398:
 3198 0a2e C0F34130 		ubfx	r0, r0, #13, #2
 472:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3199              		.loc 1 472 11 view .LVU1137
 3200 0a32 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3201              		.loc 1 113 11 view .LVU1138
 3202 0a34 3446     		mov	r4, r6
 3203 0a36 8AE4     		b	.L54
 3204              	.LVL399:
 3205              	.L172:
 473:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEDN_MASK, TMC5161_SEDN_SHIFT, 
 3206              		.loc 1 473 10 is_stmt 1 view .LVU1139
 474:boards/TMC5161_eval.c **** 		}
 3207              		.loc 1 474 4 view .LVU1140
 3208              	.LBB399:
 3209              	.LBI399:
  31:boards/TMC5161_eval.c **** {
 3210              		.loc 1 31 31 view .LVU1141
  31:boards/TMC5161_eval.c **** {
 3211              		.loc 1 31 31 is_stmt 0 view .LVU1142
 3212              	.LBE399:
  33:boards/TMC5161_eval.c **** 
 3213              		.loc 1 33 2 is_stmt 1 view .LVU1143
  35:boards/TMC5161_eval.c **** }
 3214              		.loc 1 35 2 view .LVU1144
 3215              	.LBB400:
 3216              	.LBI400:
  31:boards/TMC5161_eval.c **** {
 3217              		.loc 1 31 31 view .LVU1145
  31:boards/TMC5161_eval.c **** {
 3218              		.loc 1 31 31 is_stmt 0 view .LVU1146
 3219              	.LBE400:
  33:boards/TMC5161_eval.c **** 
 3220              		.loc 1 33 2 is_stmt 1 view .LVU1147
  35:boards/TMC5161_eval.c **** }
 3221              		.loc 1 35 2 view .LVU1148
 474:boards/TMC5161_eval.c **** 		}
 3222              		.loc 1 474 4 is_stmt 0 view .LVU1149
 3223 0a38 FFF7FEFF 		bl	tmc5161_readInt
 3224              	.LVL400:
 3225 0a3c 2B68     		ldr	r3, [r5]
 3226 0a3e 5B03     		lsls	r3, r3, #13
 3227 0a40 03F4C043 		and	r3, r3, #24576
 3228 0a44 20F4C042 		bic	r2, r0, #24576
 3229 0a48 1A43     		orrs	r2, r2, r3
 3230 0a4a 4B48     		ldr	r0, .L223
 3231 0a4c 6D21     		movs	r1, #109
 3232 0a4e FFF7FEFF 		bl	tmc5161_writeInt
 3233              	.LVL401:
 113:boards/TMC5161_eval.c **** 
 3234              		.loc 1 113 11 view .LVU1150
 3235 0a52 0024     		movs	r4, #0
 3236 0a54 7BE4     		b	.L54
 3237              	.LVL402:
 3238              	.L77:
 479:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMAX_MASK, TMC5161_SEMA
 3239              		.loc 1 479 3 is_stmt 1 view .LVU1151
 480:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3240              		.loc 1 480 13 is_stmt 0 view .LVU1152
 3241 0a56 4848     		ldr	r0, .L223
 3242              	.LVL403:
 480:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3243              		.loc 1 480 13 view .LVU1153
 3244 0a58 6D21     		movs	r1, #109
 3245              	.LVL404:
 479:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMAX_MASK, TMC5161_SEMA
 3246              		.loc 1 479 5 view .LVU1154
 3247 0a5a 36B9     		cbnz	r6, .L173
 480:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3248              		.loc 1 480 4 is_stmt 1 view .LVU1155
 3249              	.LBB401:
 3250              	.LBI401:
  31:boards/TMC5161_eval.c **** {
 3251              		.loc 1 31 31 view .LVU1156
 3252              	.LVL405:
  31:boards/TMC5161_eval.c **** {
 3253              		.loc 1 31 31 is_stmt 0 view .LVU1157
 3254              	.LBE401:
  33:boards/TMC5161_eval.c **** 
 3255              		.loc 1 33 2 is_stmt 1 view .LVU1158
  35:boards/TMC5161_eval.c **** }
 3256              		.loc 1 35 2 view .LVU1159
 480:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3257              		.loc 1 480 13 is_stmt 0 view .LVU1160
 3258 0a5c FFF7FEFF 		bl	tmc5161_readInt
 3259              	.LVL406:
 3260 0a60 C0F30320 		ubfx	r0, r0, #8, #4
 480:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3261              		.loc 1 480 11 view .LVU1161
 3262 0a64 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3263              		.loc 1 113 11 view .LVU1162
 3264 0a66 3446     		mov	r4, r6
 3265 0a68 71E4     		b	.L54
 3266              	.LVL407:
 3267              	.L173:
 481:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMAX_MASK, TMC5161_SEMAX_SHIFT
 3268              		.loc 1 481 10 is_stmt 1 view .LVU1163
 482:boards/TMC5161_eval.c **** 		}
 3269              		.loc 1 482 4 view .LVU1164
 3270              	.LBB402:
 3271              	.LBI402:
  31:boards/TMC5161_eval.c **** {
 3272              		.loc 1 31 31 view .LVU1165
  31:boards/TMC5161_eval.c **** {
 3273              		.loc 1 31 31 is_stmt 0 view .LVU1166
 3274              	.LBE402:
  33:boards/TMC5161_eval.c **** 
 3275              		.loc 1 33 2 is_stmt 1 view .LVU1167
  35:boards/TMC5161_eval.c **** }
 3276              		.loc 1 35 2 view .LVU1168
 3277              	.LBB403:
 3278              	.LBI403:
  31:boards/TMC5161_eval.c **** {
 3279              		.loc 1 31 31 view .LVU1169
  31:boards/TMC5161_eval.c **** {
 3280              		.loc 1 31 31 is_stmt 0 view .LVU1170
 3281              	.LBE403:
  33:boards/TMC5161_eval.c **** 
 3282              		.loc 1 33 2 is_stmt 1 view .LVU1171
  35:boards/TMC5161_eval.c **** }
 3283              		.loc 1 35 2 view .LVU1172
 482:boards/TMC5161_eval.c **** 		}
 3284              		.loc 1 482 4 is_stmt 0 view .LVU1173
 3285 0a6a FFF7FEFF 		bl	tmc5161_readInt
 3286              	.LVL408:
 3287 0a6e 2B68     		ldr	r3, [r5]
 3288 0a70 1B02     		lsls	r3, r3, #8
 3289 0a72 03F47063 		and	r3, r3, #3840
 3290 0a76 20F47062 		bic	r2, r0, #3840
 3291 0a7a 1A43     		orrs	r2, r2, r3
 3292 0a7c 3E48     		ldr	r0, .L223
 3293 0a7e 6D21     		movs	r1, #109
 3294 0a80 FFF7FEFF 		bl	tmc5161_writeInt
 3295              	.LVL409:
 113:boards/TMC5161_eval.c **** 
 3296              		.loc 1 113 11 view .LVU1174
 3297 0a84 0024     		movs	r4, #0
 3298 0a86 62E4     		b	.L54
 3299              	.LVL410:
 3300              	.L76:
 487:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEUP_MASK, TMC5161_SEUP_
 3301              		.loc 1 487 3 is_stmt 1 view .LVU1175
 488:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3302              		.loc 1 488 13 is_stmt 0 view .LVU1176
 3303 0a88 3B48     		ldr	r0, .L223
 3304              	.LVL411:
 488:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3305              		.loc 1 488 13 view .LVU1177
 3306 0a8a 6D21     		movs	r1, #109
 3307              	.LVL412:
 487:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEUP_MASK, TMC5161_SEUP_
 3308              		.loc 1 487 5 view .LVU1178
 3309 0a8c 36B9     		cbnz	r6, .L174
 488:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3310              		.loc 1 488 4 is_stmt 1 view .LVU1179
 3311              	.LBB404:
 3312              	.LBI404:
  31:boards/TMC5161_eval.c **** {
 3313              		.loc 1 31 31 view .LVU1180
 3314              	.LVL413:
  31:boards/TMC5161_eval.c **** {
 3315              		.loc 1 31 31 is_stmt 0 view .LVU1181
 3316              	.LBE404:
  33:boards/TMC5161_eval.c **** 
 3317              		.loc 1 33 2 is_stmt 1 view .LVU1182
  35:boards/TMC5161_eval.c **** }
 3318              		.loc 1 35 2 view .LVU1183
 488:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3319              		.loc 1 488 13 is_stmt 0 view .LVU1184
 3320 0a8e FFF7FEFF 		bl	tmc5161_readInt
 3321              	.LVL414:
 3322 0a92 C0F34110 		ubfx	r0, r0, #5, #2
 488:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3323              		.loc 1 488 11 view .LVU1185
 3324 0a96 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3325              		.loc 1 113 11 view .LVU1186
 3326 0a98 3446     		mov	r4, r6
 3327 0a9a 58E4     		b	.L54
 3328              	.LVL415:
 3329              	.L174:
 489:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEUP_MASK, TMC5161_SEUP_SHIFT, 
 3330              		.loc 1 489 10 is_stmt 1 view .LVU1187
 490:boards/TMC5161_eval.c **** 		}
 3331              		.loc 1 490 4 view .LVU1188
 3332              	.LBB405:
 3333              	.LBI405:
  31:boards/TMC5161_eval.c **** {
 3334              		.loc 1 31 31 view .LVU1189
  31:boards/TMC5161_eval.c **** {
 3335              		.loc 1 31 31 is_stmt 0 view .LVU1190
 3336              	.LBE405:
  33:boards/TMC5161_eval.c **** 
 3337              		.loc 1 33 2 is_stmt 1 view .LVU1191
  35:boards/TMC5161_eval.c **** }
 3338              		.loc 1 35 2 view .LVU1192
 3339              	.LBB406:
 3340              	.LBI406:
  31:boards/TMC5161_eval.c **** {
 3341              		.loc 1 31 31 view .LVU1193
  31:boards/TMC5161_eval.c **** {
 3342              		.loc 1 31 31 is_stmt 0 view .LVU1194
 3343              	.LBE406:
  33:boards/TMC5161_eval.c **** 
 3344              		.loc 1 33 2 is_stmt 1 view .LVU1195
  35:boards/TMC5161_eval.c **** }
 3345              		.loc 1 35 2 view .LVU1196
 490:boards/TMC5161_eval.c **** 		}
 3346              		.loc 1 490 4 is_stmt 0 view .LVU1197
 3347 0a9c FFF7FEFF 		bl	tmc5161_readInt
 3348              	.LVL416:
 3349 0aa0 2B68     		ldr	r3, [r5]
 3350 0aa2 5B01     		lsls	r3, r3, #5
 3351 0aa4 03F06003 		and	r3, r3, #96
 3352 0aa8 20F06002 		bic	r2, r0, #96
 3353 0aac 1A43     		orrs	r2, r2, r3
 3354 0aae 3248     		ldr	r0, .L223
 3355 0ab0 6D21     		movs	r1, #109
 3356 0ab2 FFF7FEFF 		bl	tmc5161_writeInt
 3357              	.LVL417:
 113:boards/TMC5161_eval.c **** 
 3358              		.loc 1 113 11 view .LVU1198
 3359 0ab6 0024     		movs	r4, #0
 3360 0ab8 49E4     		b	.L54
 3361              	.LVL418:
 3362              	.L75:
 495:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMIN_MASK, TMC5161_SEMI
 3363              		.loc 1 495 3 is_stmt 1 view .LVU1199
 496:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3364              		.loc 1 496 13 is_stmt 0 view .LVU1200
 3365 0aba 2F48     		ldr	r0, .L223
 3366              	.LVL419:
 496:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3367              		.loc 1 496 13 view .LVU1201
 3368 0abc 6D21     		movs	r1, #109
 3369              	.LVL420:
 495:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMIN_MASK, TMC5161_SEMI
 3370              		.loc 1 495 5 view .LVU1202
 3371 0abe 36B9     		cbnz	r6, .L175
 496:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3372              		.loc 1 496 4 is_stmt 1 view .LVU1203
 3373              	.LBB407:
 3374              	.LBI407:
  31:boards/TMC5161_eval.c **** {
 3375              		.loc 1 31 31 view .LVU1204
 3376              	.LVL421:
  31:boards/TMC5161_eval.c **** {
 3377              		.loc 1 31 31 is_stmt 0 view .LVU1205
 3378              	.LBE407:
  33:boards/TMC5161_eval.c **** 
 3379              		.loc 1 33 2 is_stmt 1 view .LVU1206
  35:boards/TMC5161_eval.c **** }
 3380              		.loc 1 35 2 view .LVU1207
 496:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3381              		.loc 1 496 13 is_stmt 0 view .LVU1208
 3382 0ac0 FFF7FEFF 		bl	tmc5161_readInt
 3383              	.LVL422:
 3384 0ac4 00F00F00 		and	r0, r0, #15
 496:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3385              		.loc 1 496 11 view .LVU1209
 3386 0ac8 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3387              		.loc 1 113 11 view .LVU1210
 3388 0aca 3446     		mov	r4, r6
 3389 0acc 3FE4     		b	.L54
 3390              	.LVL423:
 3391              	.L175:
 497:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SEMIN_MASK, TMC5161_SEMIN_SHIFT
 3392              		.loc 1 497 10 is_stmt 1 view .LVU1211
 498:boards/TMC5161_eval.c **** 		}
 3393              		.loc 1 498 4 view .LVU1212
 3394              	.LBB408:
 3395              	.LBI408:
  31:boards/TMC5161_eval.c **** {
 3396              		.loc 1 31 31 view .LVU1213
  31:boards/TMC5161_eval.c **** {
 3397              		.loc 1 31 31 is_stmt 0 view .LVU1214
 3398              	.LBE408:
  33:boards/TMC5161_eval.c **** 
 3399              		.loc 1 33 2 is_stmt 1 view .LVU1215
  35:boards/TMC5161_eval.c **** }
 3400              		.loc 1 35 2 view .LVU1216
 3401              	.LBB409:
 3402              	.LBI409:
  31:boards/TMC5161_eval.c **** {
 3403              		.loc 1 31 31 view .LVU1217
  31:boards/TMC5161_eval.c **** {
 3404              		.loc 1 31 31 is_stmt 0 view .LVU1218
 3405              	.LBE409:
  33:boards/TMC5161_eval.c **** 
 3406              		.loc 1 33 2 is_stmt 1 view .LVU1219
  35:boards/TMC5161_eval.c **** }
 3407              		.loc 1 35 2 view .LVU1220
 498:boards/TMC5161_eval.c **** 		}
 3408              		.loc 1 498 4 is_stmt 0 view .LVU1221
 3409 0ace FFF7FEFF 		bl	tmc5161_readInt
 3410              	.LVL424:
 3411 0ad2 2A68     		ldr	r2, [r5]
 3412 0ad4 20F00F00 		bic	r0, r0, #15
 3413 0ad8 02F00F02 		and	r2, r2, #15
 3414 0adc 0243     		orrs	r2, r2, r0
 3415 0ade 6D21     		movs	r1, #109
 3416 0ae0 2548     		ldr	r0, .L223
 3417 0ae2 FFF7FEFF 		bl	tmc5161_writeInt
 3418              	.LVL425:
 113:boards/TMC5161_eval.c **** 
 3419              		.loc 1 113 11 view .LVU1222
 3420 0ae6 0024     		movs	r4, #0
 3421 0ae8 31E4     		b	.L54
 3422              	.LVL426:
 3423              	.L74:
 503:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SFILT_MASK, TMC5161_SFIL
 3424              		.loc 1 503 3 is_stmt 1 view .LVU1223
 504:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3425              		.loc 1 504 13 is_stmt 0 view .LVU1224
 3426 0aea 2348     		ldr	r0, .L223
 3427              	.LVL427:
 504:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3428              		.loc 1 504 13 view .LVU1225
 3429 0aec 6D21     		movs	r1, #109
 3430              	.LVL428:
 503:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SFILT_MASK, TMC5161_SFIL
 3431              		.loc 1 503 5 view .LVU1226
 3432 0aee 36B9     		cbnz	r6, .L176
 504:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3433              		.loc 1 504 4 is_stmt 1 view .LVU1227
 3434              	.LBB410:
 3435              	.LBI410:
  31:boards/TMC5161_eval.c **** {
 3436              		.loc 1 31 31 view .LVU1228
 3437              	.LVL429:
  31:boards/TMC5161_eval.c **** {
 3438              		.loc 1 31 31 is_stmt 0 view .LVU1229
 3439              	.LBE410:
  33:boards/TMC5161_eval.c **** 
 3440              		.loc 1 33 2 is_stmt 1 view .LVU1230
  35:boards/TMC5161_eval.c **** }
 3441              		.loc 1 35 2 view .LVU1231
 504:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3442              		.loc 1 504 13 is_stmt 0 view .LVU1232
 3443 0af0 FFF7FEFF 		bl	tmc5161_readInt
 3444              	.LVL430:
 3445 0af4 C0F30060 		ubfx	r0, r0, #24, #1
 504:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3446              		.loc 1 504 11 view .LVU1233
 3447 0af8 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3448              		.loc 1 113 11 view .LVU1234
 3449 0afa 3446     		mov	r4, r6
 3450 0afc 27E4     		b	.L54
 3451              	.LVL431:
 3452              	.L176:
 505:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SFILT_MASK, TMC5161_SFILT_SHIFT
 3453              		.loc 1 505 10 is_stmt 1 view .LVU1235
 506:boards/TMC5161_eval.c **** 		}
 3454              		.loc 1 506 4 view .LVU1236
 3455              	.LBB411:
 3456              	.LBI411:
  31:boards/TMC5161_eval.c **** {
 3457              		.loc 1 31 31 view .LVU1237
  31:boards/TMC5161_eval.c **** {
 3458              		.loc 1 31 31 is_stmt 0 view .LVU1238
 3459              	.LBE411:
  33:boards/TMC5161_eval.c **** 
 3460              		.loc 1 33 2 is_stmt 1 view .LVU1239
  35:boards/TMC5161_eval.c **** }
 3461              		.loc 1 35 2 view .LVU1240
 3462              	.LBB412:
 3463              	.LBI412:
  31:boards/TMC5161_eval.c **** {
 3464              		.loc 1 31 31 view .LVU1241
  31:boards/TMC5161_eval.c **** {
 3465              		.loc 1 31 31 is_stmt 0 view .LVU1242
 3466              	.LBE412:
  33:boards/TMC5161_eval.c **** 
 3467              		.loc 1 33 2 is_stmt 1 view .LVU1243
  35:boards/TMC5161_eval.c **** }
 3468              		.loc 1 35 2 view .LVU1244
 506:boards/TMC5161_eval.c **** 		}
 3469              		.loc 1 506 4 is_stmt 0 view .LVU1245
 3470 0afe FFF7FEFF 		bl	tmc5161_readInt
 3471              	.LVL432:
 3472 0b02 2B68     		ldr	r3, [r5]
 3473 0b04 1B06     		lsls	r3, r3, #24
 3474 0b06 03F08073 		and	r3, r3, #16777216
 3475 0b0a 20F08072 		bic	r2, r0, #16777216
 3476 0b0e 1A43     		orrs	r2, r2, r3
 3477 0b10 1948     		ldr	r0, .L223
 3478 0b12 6D21     		movs	r1, #109
 3479 0b14 FFF7FEFF 		bl	tmc5161_writeInt
 3480              	.LVL433:
 113:boards/TMC5161_eval.c **** 
 3481              		.loc 1 113 11 view .LVU1246
 3482 0b18 0024     		movs	r4, #0
 3483 0b1a 18E4     		b	.L54
 3484              	.LVL434:
 3485              	.L73:
 511:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SGT_MASK, TMC5161_SGT_SH
 3486              		.loc 1 511 3 is_stmt 1 view .LVU1247
 512:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3487              		.loc 1 512 13 is_stmt 0 view .LVU1248
 3488 0b1c 1648     		ldr	r0, .L223
 3489              	.LVL435:
 512:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3490              		.loc 1 512 13 view .LVU1249
 3491 0b1e 6D21     		movs	r1, #109
 3492              	.LVL436:
 511:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SGT_MASK, TMC5161_SGT_SH
 3493              		.loc 1 511 5 view .LVU1250
 3494 0b20 6EB9     		cbnz	r6, .L177
 512:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3495              		.loc 1 512 4 is_stmt 1 view .LVU1251
 3496              	.LBB413:
 3497              	.LBI413:
  31:boards/TMC5161_eval.c **** {
 3498              		.loc 1 31 31 view .LVU1252
 3499              	.LVL437:
  31:boards/TMC5161_eval.c **** {
 3500              		.loc 1 31 31 is_stmt 0 view .LVU1253
 3501              	.LBE413:
  33:boards/TMC5161_eval.c **** 
 3502              		.loc 1 33 2 is_stmt 1 view .LVU1254
  35:boards/TMC5161_eval.c **** }
 3503              		.loc 1 35 2 view .LVU1255
 512:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3504              		.loc 1 512 13 is_stmt 0 view .LVU1256
 3505 0b22 FFF7FEFF 		bl	tmc5161_readInt
 3506              	.LVL438:
 3507 0b26 0314     		asrs	r3, r0, #16
 513:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3508              		.loc 1 513 13 view .LVU1257
 3509 0b28 13F04003 		ands	r3, r3, #64
 512:boards/TMC5161_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3510              		.loc 1 512 13 view .LVU1258
 3511 0b2c C0F30640 		ubfx	r0, r0, #16, #7
 513:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3512              		.loc 1 513 4 is_stmt 1 view .LVU1259
 513:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3513              		.loc 1 513 13 is_stmt 0 view .LVU1260
 3514 0b30 18BF     		it	ne
 3515 0b32 6FF07F03 		mvnne	r3, #127
 3516 0b36 1843     		orrs	r0, r0, r3
 513:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3517              		.loc 1 513 11 view .LVU1261
 3518 0b38 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3519              		.loc 1 113 11 view .LVU1262
 3520 0b3a 3446     		mov	r4, r6
 3521 0b3c 07E4     		b	.L54
 3522              	.LVL439:
 3523              	.L177:
 514:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_COOLCONF, TMC5161_SGT_MASK, TMC5161_SGT_SHIFT, *v
 3524              		.loc 1 514 10 is_stmt 1 view .LVU1263
 515:boards/TMC5161_eval.c **** 		}
 3525              		.loc 1 515 4 view .LVU1264
 3526              	.LBB414:
 3527              	.LBI414:
  31:boards/TMC5161_eval.c **** {
 3528              		.loc 1 31 31 view .LVU1265
  31:boards/TMC5161_eval.c **** {
 3529              		.loc 1 31 31 is_stmt 0 view .LVU1266
 3530              	.LBE414:
  33:boards/TMC5161_eval.c **** 
 3531              		.loc 1 33 2 is_stmt 1 view .LVU1267
  35:boards/TMC5161_eval.c **** }
 3532              		.loc 1 35 2 view .LVU1268
 3533              	.LBB415:
 3534              	.LBI415:
  31:boards/TMC5161_eval.c **** {
 3535              		.loc 1 31 31 view .LVU1269
  31:boards/TMC5161_eval.c **** {
 3536              		.loc 1 31 31 is_stmt 0 view .LVU1270
 3537              	.LBE415:
  33:boards/TMC5161_eval.c **** 
 3538              		.loc 1 33 2 is_stmt 1 view .LVU1271
  35:boards/TMC5161_eval.c **** }
 3539              		.loc 1 35 2 view .LVU1272
 515:boards/TMC5161_eval.c **** 		}
 3540              		.loc 1 515 4 is_stmt 0 view .LVU1273
 3541 0b3e FFF7FEFF 		bl	tmc5161_readInt
 3542              	.LVL440:
 3543 0b42 2B68     		ldr	r3, [r5]
 3544 0b44 1B04     		lsls	r3, r3, #16
 3545 0b46 03F4FE03 		and	r3, r3, #8323072
 3546 0b4a 20F4FE02 		bic	r2, r0, #8323072
 3547 0b4e 1A43     		orrs	r2, r2, r3
 3548 0b50 0948     		ldr	r0, .L223
 3549 0b52 6D21     		movs	r1, #109
 3550 0b54 FFF7FEFF 		bl	tmc5161_writeInt
 3551              	.LVL441:
 113:boards/TMC5161_eval.c **** 
 3552              		.loc 1 113 11 view .LVU1274
 3553 0b58 0024     		movs	r4, #0
 3554 0b5a FFF7F8BB 		b	.L54
 3555              	.LVL442:
 3556              	.L72:
 520:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_DRVSTATUS, TMC5161_CS_ACTUAL_MASK, TMC5161
 3557              		.loc 1 520 3 is_stmt 1 view .LVU1275
 520:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_DRVSTATUS, TMC5161_CS_ACTUAL_MASK, TMC5161
 3558              		.loc 1 520 5 is_stmt 0 view .LVU1276
 3559 0b5e 002E     		cmp	r6, #0
 3560 0b60 40F0B781 		bne	.L208
 521:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3561              		.loc 1 521 4 is_stmt 1 view .LVU1277
 3562              	.LBB416:
 3563              	.LBI416:
  31:boards/TMC5161_eval.c **** {
 3564              		.loc 1 31 31 view .LVU1278
 3565              	.LVL443:
  31:boards/TMC5161_eval.c **** {
 3566              		.loc 1 31 31 is_stmt 0 view .LVU1279
 3567              	.LBE416:
  33:boards/TMC5161_eval.c **** 
 3568              		.loc 1 33 2 is_stmt 1 view .LVU1280
  35:boards/TMC5161_eval.c **** }
 3569              		.loc 1 35 2 view .LVU1281
 521:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3570              		.loc 1 521 13 is_stmt 0 view .LVU1282
 3571 0b64 0448     		ldr	r0, .L223
 3572              	.LVL444:
 521:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3573              		.loc 1 521 13 view .LVU1283
 3574 0b66 6F21     		movs	r1, #111
 3575              	.LVL445:
 521:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3576              		.loc 1 521 13 view .LVU1284
 3577 0b68 FFF7FEFF 		bl	tmc5161_readInt
 3578              	.LVL446:
 3579 0b6c C0F30440 		ubfx	r0, r0, #16, #5
 521:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3580              		.loc 1 521 11 view .LVU1285
 3581 0b70 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3582              		.loc 1 113 11 view .LVU1286
 3583 0b72 3446     		mov	r4, r6
 3584 0b74 FFF7EBBB 		b	.L54
 3585              	.L224:
 3586              		.align	2
 3587              	.L223:
 3588 0b78 00000000 		.word	.LANCHOR0
 3589              	.LVL447:
 3590              	.L71:
 529:boards/TMC5161_eval.c **** 			if(TMC5161_FIELD_READ(motorToIC(motor), TMC5161_SWMODE, TMC5161_SG_STOP_MASK, TMC5161_SG_STOP_SH
 3591              		.loc 1 529 3 is_stmt 1 view .LVU1287
 530:boards/TMC5161_eval.c **** 			{
 3592              		.loc 1 530 7 is_stmt 0 view .LVU1288
 3593 0b7c BE48     		ldr	r0, .L225
 3594              	.LVL448:
 530:boards/TMC5161_eval.c **** 			{
 3595              		.loc 1 530 7 view .LVU1289
 3596 0b7e 3421     		movs	r1, #52
 3597              	.LVL449:
 529:boards/TMC5161_eval.c **** 			if(TMC5161_FIELD_READ(motorToIC(motor), TMC5161_SWMODE, TMC5161_SG_STOP_MASK, TMC5161_SG_STOP_SH
 3598              		.loc 1 529 5 view .LVU1290
 3599 0b80 D6B9     		cbnz	r6, .L179
 530:boards/TMC5161_eval.c **** 			{
 3600              		.loc 1 530 4 is_stmt 1 view .LVU1291
 3601              	.LBB417:
 3602              	.LBI417:
  31:boards/TMC5161_eval.c **** {
 3603              		.loc 1 31 31 view .LVU1292
 3604              	.LVL450:
  31:boards/TMC5161_eval.c **** {
 3605              		.loc 1 31 31 is_stmt 0 view .LVU1293
 3606              	.LBE417:
  33:boards/TMC5161_eval.c **** 
 3607              		.loc 1 33 2 is_stmt 1 view .LVU1294
  35:boards/TMC5161_eval.c **** }
 3608              		.loc 1 35 2 view .LVU1295
 530:boards/TMC5161_eval.c **** 			{
 3609              		.loc 1 530 7 is_stmt 0 view .LVU1296
 3610 0b82 FFF7FEFF 		bl	tmc5161_readInt
 3611              	.LVL451:
 530:boards/TMC5161_eval.c **** 			{
 3612              		.loc 1 530 6 view .LVU1297
 3613 0b86 4305     		lsls	r3, r0, #21
 3614 0b88 12D5     		bpl	.L180
 532:boards/TMC5161_eval.c **** 				*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3615              		.loc 1 532 5 is_stmt 1 view .LVU1298
 3616              	.LBB418:
 3617              	.LBI418:
  31:boards/TMC5161_eval.c **** {
 3618              		.loc 1 31 31 view .LVU1299
 3619              	.LVL452:
  31:boards/TMC5161_eval.c **** {
 3620              		.loc 1 31 31 is_stmt 0 view .LVU1300
 3621              	.LBE418:
  33:boards/TMC5161_eval.c **** 
 3622              		.loc 1 33 2 is_stmt 1 view .LVU1301
  35:boards/TMC5161_eval.c **** }
 3623              		.loc 1 35 2 view .LVU1302
 532:boards/TMC5161_eval.c **** 				*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3624              		.loc 1 532 14 is_stmt 0 view .LVU1303
 3625 0b8a BB48     		ldr	r0, .L225
 3626 0b8c 1421     		movs	r1, #20
 3627 0b8e FFF7FEFF 		bl	tmc5161_readInt
 3628              	.LVL453:
 533:boards/TMC5161_eval.c **** 			}
 3629              		.loc 1 533 5 is_stmt 1 view .LVU1304
 533:boards/TMC5161_eval.c **** 			}
 3630              		.loc 1 533 14 is_stmt 0 view .LVU1305
 3631 0b92 0128     		cmp	r0, #1
 3632 0b94 38BF     		it	cc
 3633 0b96 0120     		movcc	r0, #1
 3634              	.LVL454:
 533:boards/TMC5161_eval.c **** 			}
 3635              		.loc 1 533 14 view .LVU1306
 3636 0b98 4FF08073 		mov	r3, #16777216
 3637 0b9c B3FBF0F0 		udiv	r0, r3, r0
 533:boards/TMC5161_eval.c **** 			}
 3638              		.loc 1 533 12 view .LVU1307
 3639 0ba0 B64B     		ldr	r3, .L225+4
 3640 0ba2 9842     		cmp	r0, r3
 3641 0ba4 94BF     		ite	ls
 3642 0ba6 2860     		strls	r0, [r5]
 3643 0ba8 2B60     		strhi	r3, [r5]
 113:boards/TMC5161_eval.c **** 
 3644              		.loc 1 113 11 view .LVU1308
 3645 0baa 3446     		mov	r4, r6
 3646 0bac FFF7CFBB 		b	.L54
 3647              	.LVL455:
 3648              	.L180:
 537:boards/TMC5161_eval.c **** 			}
 3649              		.loc 1 537 5 is_stmt 1 view .LVU1309
 537:boards/TMC5161_eval.c **** 			}
 3650              		.loc 1 537 12 is_stmt 0 view .LVU1310
 3651 0bb0 2E60     		str	r6, [r5]
 113:boards/TMC5161_eval.c **** 
 3652              		.loc 1 113 11 view .LVU1311
 3653 0bb2 3446     		mov	r4, r6
 3654 0bb4 FFF7CBBB 		b	.L54
 3655              	.LVL456:
 3656              	.L179:
 539:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_SWMODE, TMC5161_SG_STOP_MASK, TMC5161_SG_STOP_SHI
 3657              		.loc 1 539 10 is_stmt 1 view .LVU1312
 540:boards/TMC5161_eval.c **** 
 3658              		.loc 1 540 4 view .LVU1313
 3659              	.LBB419:
 3660              	.LBI419:
  31:boards/TMC5161_eval.c **** {
 3661              		.loc 1 31 31 view .LVU1314
  31:boards/TMC5161_eval.c **** {
 3662              		.loc 1 31 31 is_stmt 0 view .LVU1315
 3663              	.LBE419:
  33:boards/TMC5161_eval.c **** 
 3664              		.loc 1 33 2 is_stmt 1 view .LVU1316
  35:boards/TMC5161_eval.c **** }
 3665              		.loc 1 35 2 view .LVU1317
 3666              	.LBB420:
 3667              	.LBI420:
  31:boards/TMC5161_eval.c **** {
 3668              		.loc 1 31 31 view .LVU1318
  31:boards/TMC5161_eval.c **** {
 3669              		.loc 1 31 31 is_stmt 0 view .LVU1319
 3670              	.LBE420:
  33:boards/TMC5161_eval.c **** 
 3671              		.loc 1 33 2 is_stmt 1 view .LVU1320
  35:boards/TMC5161_eval.c **** }
 3672              		.loc 1 35 2 view .LVU1321
 540:boards/TMC5161_eval.c **** 
 3673              		.loc 1 540 4 is_stmt 0 view .LVU1322
 3674 0bb8 FFF7FEFF 		bl	tmc5161_readInt
 3675              	.LVL457:
 3676 0bbc 2B68     		ldr	r3, [r5]
 3677 0bbe 002B     		cmp	r3, #0
 3678 0bc0 18BF     		it	ne
 3679 0bc2 4FF48063 		movne	r3, #1024
 3680 0bc6 20F48062 		bic	r2, r0, #1024
 3681 0bca 1A43     		orrs	r2, r2, r3
 3682 0bcc AA48     		ldr	r0, .L225
 3683 0bce 3421     		movs	r1, #52
 3684 0bd0 FFF7FEFF 		bl	tmc5161_writeInt
 3685              	.LVL458:
 542:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 3686              		.loc 1 542 4 is_stmt 1 view .LVU1323
 542:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 3687              		.loc 1 542 13 is_stmt 0 view .LVU1324
 3688 0bd4 2B68     		ldr	r3, [r5]
 543:boards/TMC5161_eval.c **** 		}
 3689              		.loc 1 543 4 view .LVU1325
 3690 0bd6 A848     		ldr	r0, .L225
 542:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 3691              		.loc 1 542 13 view .LVU1326
 3692 0bd8 002B     		cmp	r3, #0
 3693 0bda 08BF     		it	eq
 3694 0bdc 0123     		moveq	r3, #1
 3695 0bde 4FF08072 		mov	r2, #16777216
 3696 0be2 92FBF3F2 		sdiv	r2, r2, r3
 3697 0be6 A54B     		ldr	r3, .L225+4
 3698 0be8 9A42     		cmp	r2, r3
 3699 0bea A8BF     		it	ge
 3700 0bec 1A46     		movge	r2, r3
 542:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 3701              		.loc 1 542 11 view .LVU1327
 3702 0bee 2A60     		str	r2, [r5]
 543:boards/TMC5161_eval.c **** 		}
 3703              		.loc 1 543 4 is_stmt 1 view .LVU1328
 3704              	.LBB421:
 3705              	.LBI421:
  31:boards/TMC5161_eval.c **** {
 3706              		.loc 1 31 31 view .LVU1329
 3707              	.LVL459:
  31:boards/TMC5161_eval.c **** {
 3708              		.loc 1 31 31 is_stmt 0 view .LVU1330
 3709              	.LBE421:
  33:boards/TMC5161_eval.c **** 
 3710              		.loc 1 33 2 is_stmt 1 view .LVU1331
  35:boards/TMC5161_eval.c **** }
 3711              		.loc 1 35 2 view .LVU1332
 543:boards/TMC5161_eval.c **** 		}
 3712              		.loc 1 543 4 is_stmt 0 view .LVU1333
 3713 0bf0 1421     		movs	r1, #20
 3714 0bf2 FFF7FEFF 		bl	tmc5161_writeInt
 3715              	.LVL460:
 113:boards/TMC5161_eval.c **** 
 3716              		.loc 1 113 11 view .LVU1334
 3717 0bf6 0024     		movs	r4, #0
 3718 0bf8 FFF7A9BB 		b	.L54
 3719              	.LVL461:
 3720              	.L70:
 548:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_TCOOLTHRS);
 3721              		.loc 1 548 3 is_stmt 1 view .LVU1335
 3722 0bfc 9F4C     		ldr	r4, .L225+4
 548:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_TCOOLTHRS);
 3723              		.loc 1 548 5 is_stmt 0 view .LVU1336
 3724 0bfe 8EB9     		cbnz	r6, .L183
 549:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3725              		.loc 1 549 4 is_stmt 1 view .LVU1337
 3726              	.LBB422:
 3727              	.LBI422:
  31:boards/TMC5161_eval.c **** {
 3728              		.loc 1 31 31 view .LVU1338
 3729              	.LVL462:
  31:boards/TMC5161_eval.c **** {
 3730              		.loc 1 31 31 is_stmt 0 view .LVU1339
 3731              	.LBE422:
  33:boards/TMC5161_eval.c **** 
 3732              		.loc 1 33 2 is_stmt 1 view .LVU1340
  35:boards/TMC5161_eval.c **** }
 3733              		.loc 1 35 2 view .LVU1341
 549:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3734              		.loc 1 549 13 is_stmt 0 view .LVU1342
 3735 0c00 9D48     		ldr	r0, .L225
 3736              	.LVL463:
 549:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3737              		.loc 1 549 13 view .LVU1343
 3738 0c02 1421     		movs	r1, #20
 3739              	.LVL464:
 549:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3740              		.loc 1 549 13 view .LVU1344
 3741 0c04 FFF7FEFF 		bl	tmc5161_readInt
 3742              	.LVL465:
 550:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3743              		.loc 1 550 4 is_stmt 1 view .LVU1345
 550:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3744              		.loc 1 550 13 is_stmt 0 view .LVU1346
 3745 0c08 0128     		cmp	r0, #1
 3746 0c0a 38BF     		it	cc
 3747 0c0c 0120     		movcc	r0, #1
 3748              	.LVL466:
 550:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3749              		.loc 1 550 13 view .LVU1347
 3750 0c0e 4FF08073 		mov	r3, #16777216
 3751 0c12 B3FBF0F0 		udiv	r0, r3, r0
 550:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3752              		.loc 1 550 11 view .LVU1348
 3753 0c16 A042     		cmp	r0, r4
 3754 0c18 94BF     		ite	ls
 3755 0c1a 2860     		strls	r0, [r5]
 3756 0c1c 2C60     		strhi	r4, [r5]
 113:boards/TMC5161_eval.c **** 
 3757              		.loc 1 113 11 view .LVU1349
 3758 0c1e 3446     		mov	r4, r6
 3759 0c20 FFF795BB 		b	.L54
 3760              	.LVL467:
 3761              	.L183:
 551:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 3762              		.loc 1 551 10 is_stmt 1 view .LVU1350
 552:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 3763              		.loc 1 552 4 view .LVU1351
 552:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 3764              		.loc 1 552 13 is_stmt 0 view .LVU1352
 3765 0c24 2B68     		ldr	r3, [r5]
 553:boards/TMC5161_eval.c **** 		}
 3766              		.loc 1 553 4 view .LVU1353
 3767 0c26 9448     		ldr	r0, .L225
 3768              	.LVL468:
 552:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 3769              		.loc 1 552 13 view .LVU1354
 3770 0c28 002B     		cmp	r3, #0
 3771 0c2a 08BF     		it	eq
 3772 0c2c 0123     		moveq	r3, #1
 3773 0c2e 4FF08072 		mov	r2, #16777216
 3774 0c32 92FBF3F2 		sdiv	r2, r2, r3
 3775 0c36 A242     		cmp	r2, r4
 3776 0c38 A8BF     		it	ge
 3777 0c3a 2246     		movge	r2, r4
 552:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TCOOLTHRS, *value);
 3778              		.loc 1 552 11 view .LVU1355
 3779 0c3c 2A60     		str	r2, [r5]
 553:boards/TMC5161_eval.c **** 		}
 3780              		.loc 1 553 4 is_stmt 1 view .LVU1356
 3781              	.LBB423:
 3782              	.LBI423:
  31:boards/TMC5161_eval.c **** {
 3783              		.loc 1 31 31 view .LVU1357
 3784              	.LVL469:
  31:boards/TMC5161_eval.c **** {
 3785              		.loc 1 31 31 is_stmt 0 view .LVU1358
 3786              	.LBE423:
  33:boards/TMC5161_eval.c **** 
 3787              		.loc 1 33 2 is_stmt 1 view .LVU1359
  35:boards/TMC5161_eval.c **** }
 3788              		.loc 1 35 2 view .LVU1360
 553:boards/TMC5161_eval.c **** 		}
 3789              		.loc 1 553 4 is_stmt 0 view .LVU1361
 3790 0c3e 1421     		movs	r1, #20
 3791              	.LVL470:
 553:boards/TMC5161_eval.c **** 		}
 3792              		.loc 1 553 4 view .LVU1362
 3793 0c40 FFF7FEFF 		bl	tmc5161_writeInt
 3794              	.LVL471:
 113:boards/TMC5161_eval.c **** 
 3795              		.loc 1 113 11 view .LVU1363
 3796 0c44 0024     		movs	r4, #0
 3797 0c46 FFF782BB 		b	.L54
 3798              	.LVL472:
 3799              	.L69:
 558:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_RNDTF_MASK, TMC5161_RNDT
 3800              		.loc 1 558 3 is_stmt 1 view .LVU1364
 559:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3801              		.loc 1 559 13 is_stmt 0 view .LVU1365
 3802 0c4a 8B48     		ldr	r0, .L225
 3803              	.LVL473:
 559:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3804              		.loc 1 559 13 view .LVU1366
 3805 0c4c 6C21     		movs	r1, #108
 3806              	.LVL474:
 558:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_RNDTF_MASK, TMC5161_RNDT
 3807              		.loc 1 558 5 view .LVU1367
 3808 0c4e 3EB9     		cbnz	r6, .L185
 559:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3809              		.loc 1 559 4 is_stmt 1 view .LVU1368
 3810              	.LBB424:
 3811              	.LBI424:
  31:boards/TMC5161_eval.c **** {
 3812              		.loc 1 31 31 view .LVU1369
 3813              	.LVL475:
  31:boards/TMC5161_eval.c **** {
 3814              		.loc 1 31 31 is_stmt 0 view .LVU1370
 3815              	.LBE424:
  33:boards/TMC5161_eval.c **** 
 3816              		.loc 1 33 2 is_stmt 1 view .LVU1371
  35:boards/TMC5161_eval.c **** }
 3817              		.loc 1 35 2 view .LVU1372
 559:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3818              		.loc 1 559 13 is_stmt 0 view .LVU1373
 3819 0c50 FFF7FEFF 		bl	tmc5161_readInt
 3820              	.LVL476:
 3821 0c54 C0F34030 		ubfx	r0, r0, #13, #1
 559:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3822              		.loc 1 559 11 view .LVU1374
 3823 0c58 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3824              		.loc 1 113 11 view .LVU1375
 3825 0c5a 3446     		mov	r4, r6
 3826 0c5c FFF777BB 		b	.L54
 3827              	.LVL477:
 3828              	.L185:
 560:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_CHOPCONF, TMC5161_RNDTF_MASK, TMC5161_RNDTF_SHIFT
 3829              		.loc 1 560 10 is_stmt 1 view .LVU1376
 561:boards/TMC5161_eval.c **** 		}
 3830              		.loc 1 561 4 view .LVU1377
 3831              	.LBB425:
 3832              	.LBI425:
  31:boards/TMC5161_eval.c **** {
 3833              		.loc 1 31 31 view .LVU1378
  31:boards/TMC5161_eval.c **** {
 3834              		.loc 1 31 31 is_stmt 0 view .LVU1379
 3835              	.LBE425:
  33:boards/TMC5161_eval.c **** 
 3836              		.loc 1 33 2 is_stmt 1 view .LVU1380
  35:boards/TMC5161_eval.c **** }
 3837              		.loc 1 35 2 view .LVU1381
 3838              	.LBB426:
 3839              	.LBI426:
  31:boards/TMC5161_eval.c **** {
 3840              		.loc 1 31 31 view .LVU1382
  31:boards/TMC5161_eval.c **** {
 3841              		.loc 1 31 31 is_stmt 0 view .LVU1383
 3842              	.LBE426:
  33:boards/TMC5161_eval.c **** 
 3843              		.loc 1 33 2 is_stmt 1 view .LVU1384
  35:boards/TMC5161_eval.c **** }
 3844              		.loc 1 35 2 view .LVU1385
 561:boards/TMC5161_eval.c **** 		}
 3845              		.loc 1 561 4 is_stmt 0 view .LVU1386
 3846 0c60 FFF7FEFF 		bl	tmc5161_readInt
 3847              	.LVL478:
 3848 0c64 2B68     		ldr	r3, [r5]
 3849 0c66 5B03     		lsls	r3, r3, #13
 3850 0c68 03F40053 		and	r3, r3, #8192
 3851 0c6c 20F40052 		bic	r2, r0, #8192
 3852 0c70 1A43     		orrs	r2, r2, r3
 3853 0c72 8148     		ldr	r0, .L225
 3854 0c74 6C21     		movs	r1, #108
 3855 0c76 FFF7FEFF 		bl	tmc5161_writeInt
 3856              	.LVL479:
 113:boards/TMC5161_eval.c **** 
 3857              		.loc 1 113 11 view .LVU1387
 3858 0c7a 0024     		movs	r4, #0
 3859 0c7c FFF767BB 		b	.L54
 3860              	.LVL480:
 3861              	.L68:
 566:boards/TMC5161_eval.c **** 			*value = (tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF) >> 20) & 0x0F;
 3862              		.loc 1 566 3 is_stmt 1 view .LVU1388
 567:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3863              		.loc 1 567 14 is_stmt 0 view .LVU1389
 3864 0c80 7D48     		ldr	r0, .L225
 3865              	.LVL481:
 567:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3866              		.loc 1 567 14 view .LVU1390
 3867 0c82 6C21     		movs	r1, #108
 3868              	.LVL482:
 566:boards/TMC5161_eval.c **** 			*value = (tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF) >> 20) & 0x0F;
 3869              		.loc 1 566 5 view .LVU1391
 3870 0c84 3EB9     		cbnz	r6, .L186
 567:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3871              		.loc 1 567 4 is_stmt 1 view .LVU1392
 3872              	.LBB427:
 3873              	.LBI427:
  31:boards/TMC5161_eval.c **** {
 3874              		.loc 1 31 31 view .LVU1393
 3875              	.LVL483:
  31:boards/TMC5161_eval.c **** {
 3876              		.loc 1 31 31 is_stmt 0 view .LVU1394
 3877              	.LBE427:
  33:boards/TMC5161_eval.c **** 
 3878              		.loc 1 33 2 is_stmt 1 view .LVU1395
  35:boards/TMC5161_eval.c **** }
 3879              		.loc 1 35 2 view .LVU1396
 567:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3880              		.loc 1 567 14 is_stmt 0 view .LVU1397
 3881 0c86 FFF7FEFF 		bl	tmc5161_readInt
 3882              	.LVL484:
 567:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3883              		.loc 1 567 73 view .LVU1398
 3884 0c8a C0F30350 		ubfx	r0, r0, #20, #4
 567:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3885              		.loc 1 567 11 view .LVU1399
 3886 0c8e 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 3887              		.loc 1 113 11 view .LVU1400
 3888 0c90 3446     		mov	r4, r6
 3889 0c92 FFF75CBB 		b	.L54
 3890              	.LVL485:
 3891              	.L186:
 568:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_CHOPCONF);
 3892              		.loc 1 568 10 is_stmt 1 view .LVU1401
 569:boards/TMC5161_eval.c **** 			buffer &= ~(0x0F<<20);
 3893              		.loc 1 569 4 view .LVU1402
 3894              	.LBB428:
 3895              	.LBI428:
  31:boards/TMC5161_eval.c **** {
 3896              		.loc 1 31 31 view .LVU1403
  31:boards/TMC5161_eval.c **** {
 3897              		.loc 1 31 31 is_stmt 0 view .LVU1404
 3898              	.LBE428:
  33:boards/TMC5161_eval.c **** 
 3899              		.loc 1 33 2 is_stmt 1 view .LVU1405
  35:boards/TMC5161_eval.c **** }
 3900              		.loc 1 35 2 view .LVU1406
 569:boards/TMC5161_eval.c **** 			buffer &= ~(0x0F<<20);
 3901              		.loc 1 569 13 is_stmt 0 view .LVU1407
 3902 0c96 FFF7FEFF 		bl	tmc5161_readInt
 3903              	.LVL486:
 570:boards/TMC5161_eval.c **** 			buffer |= (*value & 0x0F) << 20;
 3904              		.loc 1 570 4 is_stmt 1 view .LVU1408
 571:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_CHOPCONF,buffer);
 3905              		.loc 1 571 30 is_stmt 0 view .LVU1409
 3906 0c9a 2B68     		ldr	r3, [r5]
 3907 0c9c 1B05     		lsls	r3, r3, #20
 570:boards/TMC5161_eval.c **** 			buffer |= (*value & 0x0F) << 20;
 3908              		.loc 1 570 11 view .LVU1410
 3909 0c9e 20F47002 		bic	r2, r0, #15728640
 3910              	.LVL487:
 571:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_CHOPCONF,buffer);
 3911              		.loc 1 571 4 is_stmt 1 view .LVU1411
 572:boards/TMC5161_eval.c **** 		}
 3912              		.loc 1 572 4 view .LVU1412
 3913              	.LBB429:
 3914              	.LBI429:
  31:boards/TMC5161_eval.c **** {
 3915              		.loc 1 31 31 view .LVU1413
  31:boards/TMC5161_eval.c **** {
 3916              		.loc 1 31 31 is_stmt 0 view .LVU1414
 3917              	.LBE429:
  33:boards/TMC5161_eval.c **** 
 3918              		.loc 1 33 2 is_stmt 1 view .LVU1415
  35:boards/TMC5161_eval.c **** }
 3919              		.loc 1 35 2 view .LVU1416
 571:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_CHOPCONF,buffer);
 3920              		.loc 1 571 30 is_stmt 0 view .LVU1417
 3921 0ca2 03F47003 		and	r3, r3, #15728640
 572:boards/TMC5161_eval.c **** 		}
 3922              		.loc 1 572 4 view .LVU1418
 3923 0ca6 7448     		ldr	r0, .L225
 3924 0ca8 1A43     		orrs	r2, r2, r3
 3925              	.LVL488:
 572:boards/TMC5161_eval.c **** 		}
 3926              		.loc 1 572 4 view .LVU1419
 3927 0caa 6C21     		movs	r1, #108
 3928 0cac FFF7FEFF 		bl	tmc5161_writeInt
 3929              	.LVL489:
 113:boards/TMC5161_eval.c **** 
 3930              		.loc 1 113 11 view .LVU1420
 3931 0cb0 0024     		movs	r4, #0
 3932 0cb2 FFF74CBB 		b	.L54
 3933              	.LVL490:
 3934              	.L67:
 577:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_TPWMTHRS);
 3935              		.loc 1 577 3 is_stmt 1 view .LVU1421
 3936 0cb6 714C     		ldr	r4, .L225+4
 577:boards/TMC5161_eval.c **** 			buffer = tmc5161_readInt(motorToIC(motor), TMC5161_TPWMTHRS);
 3937              		.loc 1 577 5 is_stmt 0 view .LVU1422
 3938 0cb8 8EB9     		cbnz	r6, .L187
 578:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3939              		.loc 1 578 4 is_stmt 1 view .LVU1423
 3940              	.LBB430:
 3941              	.LBI430:
  31:boards/TMC5161_eval.c **** {
 3942              		.loc 1 31 31 view .LVU1424
 3943              	.LVL491:
  31:boards/TMC5161_eval.c **** {
 3944              		.loc 1 31 31 is_stmt 0 view .LVU1425
 3945              	.LBE430:
  33:boards/TMC5161_eval.c **** 
 3946              		.loc 1 33 2 is_stmt 1 view .LVU1426
  35:boards/TMC5161_eval.c **** }
 3947              		.loc 1 35 2 view .LVU1427
 578:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3948              		.loc 1 578 13 is_stmt 0 view .LVU1428
 3949 0cba 6F48     		ldr	r0, .L225
 3950              	.LVL492:
 578:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3951              		.loc 1 578 13 view .LVU1429
 3952 0cbc 1321     		movs	r1, #19
 3953              	.LVL493:
 578:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 3954              		.loc 1 578 13 view .LVU1430
 3955 0cbe FFF7FEFF 		bl	tmc5161_readInt
 3956              	.LVL494:
 579:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3957              		.loc 1 579 4 is_stmt 1 view .LVU1431
 579:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3958              		.loc 1 579 13 is_stmt 0 view .LVU1432
 3959 0cc2 0128     		cmp	r0, #1
 3960 0cc4 38BF     		it	cc
 3961 0cc6 0120     		movcc	r0, #1
 3962              	.LVL495:
 579:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3963              		.loc 1 579 13 view .LVU1433
 3964 0cc8 4FF08073 		mov	r3, #16777216
 3965 0ccc B3FBF0F0 		udiv	r0, r3, r0
 579:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 3966              		.loc 1 579 11 view .LVU1434
 3967 0cd0 A042     		cmp	r0, r4
 3968 0cd2 94BF     		ite	ls
 3969 0cd4 2860     		strls	r0, [r5]
 3970 0cd6 2C60     		strhi	r4, [r5]
 113:boards/TMC5161_eval.c **** 
 3971              		.loc 1 113 11 view .LVU1435
 3972 0cd8 3446     		mov	r4, r6
 3973 0cda FFF738BB 		b	.L54
 3974              	.LVL496:
 3975              	.L187:
 580:boards/TMC5161_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 3976              		.loc 1 580 10 is_stmt 1 view .LVU1436
 581:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TPWMTHRS, *value);
 3977              		.loc 1 581 4 view .LVU1437
 581:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TPWMTHRS, *value);
 3978              		.loc 1 581 13 is_stmt 0 view .LVU1438
 3979 0cde 2B68     		ldr	r3, [r5]
 582:boards/TMC5161_eval.c **** 		}
 3980              		.loc 1 582 4 view .LVU1439
 3981 0ce0 6548     		ldr	r0, .L225
 3982              	.LVL497:
 581:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TPWMTHRS, *value);
 3983              		.loc 1 581 13 view .LVU1440
 3984 0ce2 002B     		cmp	r3, #0
 3985 0ce4 08BF     		it	eq
 3986 0ce6 0123     		moveq	r3, #1
 3987 0ce8 4FF08072 		mov	r2, #16777216
 3988 0cec 92FBF3F2 		sdiv	r2, r2, r3
 3989 0cf0 A242     		cmp	r2, r4
 3990 0cf2 A8BF     		it	ge
 3991 0cf4 2246     		movge	r2, r4
 581:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_TPWMTHRS, *value);
 3992              		.loc 1 581 11 view .LVU1441
 3993 0cf6 2A60     		str	r2, [r5]
 582:boards/TMC5161_eval.c **** 		}
 3994              		.loc 1 582 4 is_stmt 1 view .LVU1442
 3995              	.LBB431:
 3996              	.LBI431:
  31:boards/TMC5161_eval.c **** {
 3997              		.loc 1 31 31 view .LVU1443
 3998              	.LVL498:
  31:boards/TMC5161_eval.c **** {
 3999              		.loc 1 31 31 is_stmt 0 view .LVU1444
 4000              	.LBE431:
  33:boards/TMC5161_eval.c **** 
 4001              		.loc 1 33 2 is_stmt 1 view .LVU1445
  35:boards/TMC5161_eval.c **** }
 4002              		.loc 1 35 2 view .LVU1446
 582:boards/TMC5161_eval.c **** 		}
 4003              		.loc 1 582 4 is_stmt 0 view .LVU1447
 4004 0cf8 1321     		movs	r1, #19
 4005              	.LVL499:
 582:boards/TMC5161_eval.c **** 		}
 4006              		.loc 1 582 4 view .LVU1448
 4007 0cfa FFF7FEFF 		bl	tmc5161_writeInt
 4008              	.LVL500:
 113:boards/TMC5161_eval.c **** 
 4009              		.loc 1 113 11 view .LVU1449
 4010 0cfe 0024     		movs	r4, #0
 4011 0d00 FFF725BB 		b	.L54
 4012              	.LVL501:
 4013              	.L66:
 587:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_GRAD_MASK, TMC5161_PW
 4014              		.loc 1 587 3 is_stmt 1 view .LVU1450
 588:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4015              		.loc 1 588 13 is_stmt 0 view .LVU1451
 4016 0d04 5C48     		ldr	r0, .L225
 4017              	.LVL502:
 588:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4018              		.loc 1 588 13 view .LVU1452
 4019 0d06 7021     		movs	r1, #112
 4020              	.LVL503:
 587:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_GRAD_MASK, TMC5161_PW
 4021              		.loc 1 587 5 view .LVU1453
 4022 0d08 3EB9     		cbnz	r6, .L189
 588:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4023              		.loc 1 588 4 is_stmt 1 view .LVU1454
 4024              	.LBB432:
 4025              	.LBI432:
  31:boards/TMC5161_eval.c **** {
 4026              		.loc 1 31 31 view .LVU1455
 4027              	.LVL504:
  31:boards/TMC5161_eval.c **** {
 4028              		.loc 1 31 31 is_stmt 0 view .LVU1456
 4029              	.LBE432:
  33:boards/TMC5161_eval.c **** 
 4030              		.loc 1 33 2 is_stmt 1 view .LVU1457
  35:boards/TMC5161_eval.c **** }
 4031              		.loc 1 35 2 view .LVU1458
 588:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4032              		.loc 1 588 13 is_stmt 0 view .LVU1459
 4033 0d0a FFF7FEFF 		bl	tmc5161_readInt
 4034              	.LVL505:
 4035 0d0e C0F30720 		ubfx	r0, r0, #8, #8
 588:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4036              		.loc 1 588 11 view .LVU1460
 4037 0d12 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 4038              		.loc 1 113 11 view .LVU1461
 4039 0d14 3446     		mov	r4, r6
 4040 0d16 FFF71ABB 		b	.L54
 4041              	.LVL506:
 4042              	.L189:
 589:boards/TMC5161_eval.c **** 			// Set gradient
 4043              		.loc 1 589 10 is_stmt 1 view .LVU1462
 591:boards/TMC5161_eval.c **** 			// Enable/disable stealthChop accordingly
 4044              		.loc 1 591 4 view .LVU1463
 4045              	.LBB433:
 4046              	.LBI433:
  31:boards/TMC5161_eval.c **** {
 4047              		.loc 1 31 31 view .LVU1464
  31:boards/TMC5161_eval.c **** {
 4048              		.loc 1 31 31 is_stmt 0 view .LVU1465
 4049              	.LBE433:
  33:boards/TMC5161_eval.c **** 
 4050              		.loc 1 33 2 is_stmt 1 view .LVU1466
  35:boards/TMC5161_eval.c **** }
 4051              		.loc 1 35 2 view .LVU1467
 4052              	.LBB434:
 4053              	.LBI434:
  31:boards/TMC5161_eval.c **** {
 4054              		.loc 1 31 31 view .LVU1468
  31:boards/TMC5161_eval.c **** {
 4055              		.loc 1 31 31 is_stmt 0 view .LVU1469
 4056              	.LBE434:
  33:boards/TMC5161_eval.c **** 
 4057              		.loc 1 33 2 is_stmt 1 view .LVU1470
  35:boards/TMC5161_eval.c **** }
 4058              		.loc 1 35 2 view .LVU1471
 591:boards/TMC5161_eval.c **** 			// Enable/disable stealthChop accordingly
 4059              		.loc 1 591 4 is_stmt 0 view .LVU1472
 4060 0d1a FFF7FEFF 		bl	tmc5161_readInt
 4061              	.LVL507:
 4062 0d1e 2B68     		ldr	r3, [r5]
 4063 0d20 1B02     		lsls	r3, r3, #8
 4064 0d22 9BB2     		uxth	r3, r3
 4065 0d24 20F47F42 		bic	r2, r0, #65280
 4066 0d28 1A43     		orrs	r2, r2, r3
 4067 0d2a 5348     		ldr	r0, .L225
 4068 0d2c 7021     		movs	r1, #112
 4069 0d2e FFF7FEFF 		bl	tmc5161_writeInt
 4070              	.LVL508:
 593:boards/TMC5161_eval.c **** 		}
 4071              		.loc 1 593 4 is_stmt 1 view .LVU1473
 4072              	.LBB435:
 4073              	.LBI435:
  31:boards/TMC5161_eval.c **** {
 4074              		.loc 1 31 31 view .LVU1474
  31:boards/TMC5161_eval.c **** {
 4075              		.loc 1 31 31 is_stmt 0 view .LVU1475
 4076              	.LBE435:
  33:boards/TMC5161_eval.c **** 
 4077              		.loc 1 33 2 is_stmt 1 view .LVU1476
  35:boards/TMC5161_eval.c **** }
 4078              		.loc 1 35 2 view .LVU1477
 4079              	.LBB436:
 4080              	.LBI436:
  31:boards/TMC5161_eval.c **** {
 4081              		.loc 1 31 31 view .LVU1478
  31:boards/TMC5161_eval.c **** {
 4082              		.loc 1 31 31 is_stmt 0 view .LVU1479
 4083              	.LBE436:
  33:boards/TMC5161_eval.c **** 
 4084              		.loc 1 33 2 is_stmt 1 view .LVU1480
  35:boards/TMC5161_eval.c **** }
 4085              		.loc 1 35 2 view .LVU1481
 593:boards/TMC5161_eval.c **** 		}
 4086              		.loc 1 593 4 is_stmt 0 view .LVU1482
 4087 0d32 0021     		movs	r1, #0
 4088 0d34 5048     		ldr	r0, .L225
 4089 0d36 FFF7FEFF 		bl	tmc5161_readInt
 4090              	.LVL509:
 4091 0d3a 2B68     		ldr	r3, [r5]
 4092 0d3c 002B     		cmp	r3, #0
 4093 0d3e 20F00402 		bic	r2, r0, #4
 4094 0d42 18BF     		it	ne
 4095 0d44 0423     		movne	r3, #4
 4096 0d46 4C48     		ldr	r0, .L225
 4097 0d48 1A43     		orrs	r2, r2, r3
 4098 0d4a 0021     		movs	r1, #0
 4099 0d4c FFF7FEFF 		bl	tmc5161_writeInt
 4100              	.LVL510:
 113:boards/TMC5161_eval.c **** 
 4101              		.loc 1 113 11 view .LVU1483
 4102 0d50 0024     		movs	r4, #0
 4103 0d52 FFF7FCBA 		b	.L54
 4104              	.LVL511:
 4105              	.L65:
 598:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_OFS_MASK, TMC5161_PWM
 4106              		.loc 1 598 3 is_stmt 1 view .LVU1484
 599:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4107              		.loc 1 599 13 is_stmt 0 view .LVU1485
 4108 0d56 4848     		ldr	r0, .L225
 4109              	.LVL512:
 599:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4110              		.loc 1 599 13 view .LVU1486
 4111 0d58 7021     		movs	r1, #112
 4112              	.LVL513:
 598:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_OFS_MASK, TMC5161_PWM
 4113              		.loc 1 598 5 view .LVU1487
 4114 0d5a 36B9     		cbnz	r6, .L191
 599:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4115              		.loc 1 599 4 is_stmt 1 view .LVU1488
 4116              	.LBB437:
 4117              	.LBI437:
  31:boards/TMC5161_eval.c **** {
 4118              		.loc 1 31 31 view .LVU1489
 4119              	.LVL514:
  31:boards/TMC5161_eval.c **** {
 4120              		.loc 1 31 31 is_stmt 0 view .LVU1490
 4121              	.LBE437:
  33:boards/TMC5161_eval.c **** 
 4122              		.loc 1 33 2 is_stmt 1 view .LVU1491
  35:boards/TMC5161_eval.c **** }
 4123              		.loc 1 35 2 view .LVU1492
 599:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4124              		.loc 1 599 13 is_stmt 0 view .LVU1493
 4125 0d5c FFF7FEFF 		bl	tmc5161_readInt
 4126              	.LVL515:
 4127 0d60 C0B2     		uxtb	r0, r0
 599:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4128              		.loc 1 599 11 view .LVU1494
 4129 0d62 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 4130              		.loc 1 113 11 view .LVU1495
 4131 0d64 3446     		mov	r4, r6
 4132 0d66 FFF7F2BA 		b	.L54
 4133              	.LVL516:
 4134              	.L191:
 600:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_PWMCONF, TMC5161_GLOBAL_SCALER_MASK, TMC5161_GLOB
 4135              		.loc 1 600 10 is_stmt 1 view .LVU1496
 601:boards/TMC5161_eval.c **** 		}
 4136              		.loc 1 601 4 view .LVU1497
 4137              	.LBB438:
 4138              	.LBI438:
  31:boards/TMC5161_eval.c **** {
 4139              		.loc 1 31 31 view .LVU1498
  31:boards/TMC5161_eval.c **** {
 4140              		.loc 1 31 31 is_stmt 0 view .LVU1499
 4141              	.LBE438:
  33:boards/TMC5161_eval.c **** 
 4142              		.loc 1 33 2 is_stmt 1 view .LVU1500
  35:boards/TMC5161_eval.c **** }
 4143              		.loc 1 35 2 view .LVU1501
 4144              	.LBB439:
 4145              	.LBI439:
  31:boards/TMC5161_eval.c **** {
 4146              		.loc 1 31 31 view .LVU1502
  31:boards/TMC5161_eval.c **** {
 4147              		.loc 1 31 31 is_stmt 0 view .LVU1503
 4148              	.LBE439:
  33:boards/TMC5161_eval.c **** 
 4149              		.loc 1 33 2 is_stmt 1 view .LVU1504
  35:boards/TMC5161_eval.c **** }
 4150              		.loc 1 35 2 view .LVU1505
 601:boards/TMC5161_eval.c **** 		}
 4151              		.loc 1 601 4 is_stmt 0 view .LVU1506
 4152 0d6a FFF7FEFF 		bl	tmc5161_readInt
 4153              	.LVL517:
 4154 0d6e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4155 0d70 20F0FF00 		bic	r0, r0, #255
 4156 0d74 0243     		orrs	r2, r2, r0
 4157 0d76 7021     		movs	r1, #112
 4158 0d78 3F48     		ldr	r0, .L225
 4159 0d7a FFF7FEFF 		bl	tmc5161_writeInt
 4160              	.LVL518:
 113:boards/TMC5161_eval.c **** 
 4161              		.loc 1 113 11 view .LVU1507
 4162 0d7e 0024     		movs	r4, #0
 4163 0d80 FFF7E5BA 		b	.L54
 4164              	.LVL519:
 4165              	.L64:
 606:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_FREQ_MASK, TMC5161_PW
 4166              		.loc 1 606 3 is_stmt 1 view .LVU1508
 606:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_FREQ_MASK, TMC5161_PW
 4167              		.loc 1 606 5 is_stmt 0 view .LVU1509
 4168 0d84 4EB9     		cbnz	r6, .L192
 607:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4169              		.loc 1 607 4 is_stmt 1 view .LVU1510
 4170              	.LBB440:
 4171              	.LBI440:
  31:boards/TMC5161_eval.c **** {
 4172              		.loc 1 31 31 view .LVU1511
 4173              	.LVL520:
  31:boards/TMC5161_eval.c **** {
 4174              		.loc 1 31 31 is_stmt 0 view .LVU1512
 4175              	.LBE440:
  33:boards/TMC5161_eval.c **** 
 4176              		.loc 1 33 2 is_stmt 1 view .LVU1513
  35:boards/TMC5161_eval.c **** }
 4177              		.loc 1 35 2 view .LVU1514
 607:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4178              		.loc 1 607 13 is_stmt 0 view .LVU1515
 4179 0d86 3C48     		ldr	r0, .L225
 4180              	.LVL521:
 607:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4181              		.loc 1 607 13 view .LVU1516
 4182 0d88 7021     		movs	r1, #112
 4183              	.LVL522:
 607:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4184              		.loc 1 607 13 view .LVU1517
 4185 0d8a FFF7FEFF 		bl	tmc5161_readInt
 4186              	.LVL523:
 4187 0d8e C0F30140 		ubfx	r0, r0, #16, #2
 607:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4188              		.loc 1 607 11 view .LVU1518
 4189 0d92 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 4190              		.loc 1 113 11 view .LVU1519
 4191 0d94 3446     		mov	r4, r6
 4192 0d96 FFF7DABA 		b	.L54
 4193              	.LVL524:
 4194              	.L192:
 608:boards/TMC5161_eval.c **** 			if(*value >= 0 && *value < 4)
 4195              		.loc 1 608 10 is_stmt 1 view .LVU1520
 609:boards/TMC5161_eval.c **** 			{
 4196              		.loc 1 609 4 view .LVU1521
 609:boards/TMC5161_eval.c **** 			{
 4197              		.loc 1 609 6 is_stmt 0 view .LVU1522
 4198 0d9a 2B68     		ldr	r3, [r5]
 4199 0d9c 032B     		cmp	r3, #3
 4200 0d9e 00F29B80 		bhi	.L214
 611:boards/TMC5161_eval.c **** 			}
 4201              		.loc 1 611 5 is_stmt 1 view .LVU1523
 4202              	.LBB441:
 4203              	.LBI441:
  31:boards/TMC5161_eval.c **** {
 4204              		.loc 1 31 31 view .LVU1524
 4205              	.LVL525:
  31:boards/TMC5161_eval.c **** {
 4206              		.loc 1 31 31 is_stmt 0 view .LVU1525
 4207              	.LBE441:
  33:boards/TMC5161_eval.c **** 
 4208              		.loc 1 33 2 is_stmt 1 view .LVU1526
  35:boards/TMC5161_eval.c **** }
 4209              		.loc 1 35 2 view .LVU1527
 4210              	.LBB442:
 4211              	.LBI442:
  31:boards/TMC5161_eval.c **** {
 4212              		.loc 1 31 31 view .LVU1528
  31:boards/TMC5161_eval.c **** {
 4213              		.loc 1 31 31 is_stmt 0 view .LVU1529
 4214              	.LBE442:
  33:boards/TMC5161_eval.c **** 
 4215              		.loc 1 33 2 is_stmt 1 view .LVU1530
  35:boards/TMC5161_eval.c **** }
 4216              		.loc 1 35 2 view .LVU1531
 611:boards/TMC5161_eval.c **** 			}
 4217              		.loc 1 611 5 is_stmt 0 view .LVU1532
 4218 0da2 7021     		movs	r1, #112
 4219              	.LVL526:
 611:boards/TMC5161_eval.c **** 			}
 4220              		.loc 1 611 5 view .LVU1533
 4221 0da4 3448     		ldr	r0, .L225
 4222              	.LVL527:
 611:boards/TMC5161_eval.c **** 			}
 4223              		.loc 1 611 5 view .LVU1534
 4224 0da6 FFF7FEFF 		bl	tmc5161_readInt
 4225              	.LVL528:
 4226 0daa 2B68     		ldr	r3, [r5]
 4227 0dac 1B04     		lsls	r3, r3, #16
 4228 0dae 03F44033 		and	r3, r3, #196608
 4229 0db2 20F44032 		bic	r2, r0, #196608
 4230 0db6 1A43     		orrs	r2, r2, r3
 4231 0db8 2F48     		ldr	r0, .L225
 4232 0dba 7021     		movs	r1, #112
 4233 0dbc FFF7FEFF 		bl	tmc5161_writeInt
 4234              	.LVL529:
 113:boards/TMC5161_eval.c **** 
 4235              		.loc 1 113 11 view .LVU1535
 4236 0dc0 0024     		movs	r4, #0
 4237 0dc2 FFF7C4BA 		b	.L54
 4238              	.LVL530:
 4239              	.L63:
 621:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_AUTOSCALE_MASK, TMC51
 4240              		.loc 1 621 3 is_stmt 1 view .LVU1536
 621:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_PWM_AUTOSCALE_MASK, TMC51
 4241              		.loc 1 621 5 is_stmt 0 view .LVU1537
 4242 0dc6 4EB9     		cbnz	r6, .L193
 622:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4243              		.loc 1 622 4 is_stmt 1 view .LVU1538
 4244              	.LBB443:
 4245              	.LBI443:
  31:boards/TMC5161_eval.c **** {
 4246              		.loc 1 31 31 view .LVU1539
 4247              	.LVL531:
  31:boards/TMC5161_eval.c **** {
 4248              		.loc 1 31 31 is_stmt 0 view .LVU1540
 4249              	.LBE443:
  33:boards/TMC5161_eval.c **** 
 4250              		.loc 1 33 2 is_stmt 1 view .LVU1541
  35:boards/TMC5161_eval.c **** }
 4251              		.loc 1 35 2 view .LVU1542
 622:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4252              		.loc 1 622 13 is_stmt 0 view .LVU1543
 4253 0dc8 2B48     		ldr	r0, .L225
 4254              	.LVL532:
 622:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4255              		.loc 1 622 13 view .LVU1544
 4256 0dca 7021     		movs	r1, #112
 4257              	.LVL533:
 622:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4258              		.loc 1 622 13 view .LVU1545
 4259 0dcc FFF7FEFF 		bl	tmc5161_readInt
 4260              	.LVL534:
 4261 0dd0 C0F38040 		ubfx	r0, r0, #18, #1
 622:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4262              		.loc 1 622 11 view .LVU1546
 4263 0dd4 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 4264              		.loc 1 113 11 view .LVU1547
 4265 0dd6 3446     		mov	r4, r6
 4266 0dd8 FFF7B9BA 		b	.L54
 4267              	.LVL535:
 4268              	.L193:
 623:boards/TMC5161_eval.c **** 			if(*value >= 0 && *value < 2)
 4269              		.loc 1 623 10 is_stmt 1 view .LVU1548
 624:boards/TMC5161_eval.c **** 			{
 4270              		.loc 1 624 4 view .LVU1549
 624:boards/TMC5161_eval.c **** 			{
 4271              		.loc 1 624 6 is_stmt 0 view .LVU1550
 4272 0ddc 2B68     		ldr	r3, [r5]
 4273 0dde 012B     		cmp	r3, #1
 4274 0de0 7DD8     		bhi	.L215
 626:boards/TMC5161_eval.c **** 			}
 4275              		.loc 1 626 5 is_stmt 1 view .LVU1551
 4276              	.LBB444:
 4277              	.LBI444:
  31:boards/TMC5161_eval.c **** {
 4278              		.loc 1 31 31 view .LVU1552
 4279              	.LVL536:
  31:boards/TMC5161_eval.c **** {
 4280              		.loc 1 31 31 is_stmt 0 view .LVU1553
 4281              	.LBE444:
  33:boards/TMC5161_eval.c **** 
 4282              		.loc 1 33 2 is_stmt 1 view .LVU1554
  35:boards/TMC5161_eval.c **** }
 4283              		.loc 1 35 2 view .LVU1555
 4284              	.LBB445:
 4285              	.LBI445:
  31:boards/TMC5161_eval.c **** {
 4286              		.loc 1 31 31 view .LVU1556
  31:boards/TMC5161_eval.c **** {
 4287              		.loc 1 31 31 is_stmt 0 view .LVU1557
 4288              	.LBE445:
  33:boards/TMC5161_eval.c **** 
 4289              		.loc 1 33 2 is_stmt 1 view .LVU1558
  35:boards/TMC5161_eval.c **** }
 4290              		.loc 1 35 2 view .LVU1559
 626:boards/TMC5161_eval.c **** 			}
 4291              		.loc 1 626 5 is_stmt 0 view .LVU1560
 4292 0de2 7021     		movs	r1, #112
 4293              	.LVL537:
 626:boards/TMC5161_eval.c **** 			}
 4294              		.loc 1 626 5 view .LVU1561
 4295 0de4 2448     		ldr	r0, .L225
 4296              	.LVL538:
 626:boards/TMC5161_eval.c **** 			}
 4297              		.loc 1 626 5 view .LVU1562
 4298 0de6 FFF7FEFF 		bl	tmc5161_readInt
 4299              	.LVL539:
 4300 0dea 2B68     		ldr	r3, [r5]
 4301 0dec 9B04     		lsls	r3, r3, #18
 4302 0dee 03F48023 		and	r3, r3, #262144
 4303 0df2 20F48022 		bic	r2, r0, #262144
 4304 0df6 1A43     		orrs	r2, r2, r3
 4305 0df8 1F48     		ldr	r0, .L225
 4306 0dfa 7021     		movs	r1, #112
 4307 0dfc FFF7FEFF 		bl	tmc5161_writeInt
 4308              	.LVL540:
 113:boards/TMC5161_eval.c **** 
 4309              		.loc 1 113 11 view .LVU1563
 4310 0e00 0024     		movs	r4, #0
 4311 0e02 FFF7A4BA 		b	.L54
 4312              	.LVL541:
 4313              	.L62:
 636:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_FREEWHEEL_MASK, TMC5161_F
 4314              		.loc 1 636 3 is_stmt 1 view .LVU1564
 637:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4315              		.loc 1 637 13 is_stmt 0 view .LVU1565
 4316 0e06 1C48     		ldr	r0, .L225
 4317              	.LVL542:
 637:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4318              		.loc 1 637 13 view .LVU1566
 4319 0e08 7021     		movs	r1, #112
 4320              	.LVL543:
 636:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_PWMCONF, TMC5161_FREEWHEEL_MASK, TMC5161_F
 4321              		.loc 1 636 5 view .LVU1567
 4322 0e0a 3EB9     		cbnz	r6, .L194
 637:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4323              		.loc 1 637 4 is_stmt 1 view .LVU1568
 4324              	.LBB446:
 4325              	.LBI446:
  31:boards/TMC5161_eval.c **** {
 4326              		.loc 1 31 31 view .LVU1569
 4327              	.LVL544:
  31:boards/TMC5161_eval.c **** {
 4328              		.loc 1 31 31 is_stmt 0 view .LVU1570
 4329              	.LBE446:
  33:boards/TMC5161_eval.c **** 
 4330              		.loc 1 33 2 is_stmt 1 view .LVU1571
  35:boards/TMC5161_eval.c **** }
 4331              		.loc 1 35 2 view .LVU1572
 637:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4332              		.loc 1 637 13 is_stmt 0 view .LVU1573
 4333 0e0c FFF7FEFF 		bl	tmc5161_readInt
 4334              	.LVL545:
 4335 0e10 C0F30150 		ubfx	r0, r0, #20, #2
 637:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4336              		.loc 1 637 11 view .LVU1574
 4337 0e14 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 4338              		.loc 1 113 11 view .LVU1575
 4339 0e16 3446     		mov	r4, r6
 4340 0e18 FFF799BA 		b	.L54
 4341              	.LVL546:
 4342              	.L194:
 638:boards/TMC5161_eval.c **** 			TMC5161_FIELD_UPDATE(motorToIC(motor), TMC5161_PWMCONF, TMC5161_FREEWHEEL_MASK, TMC5161_FREEWHEE
 4343              		.loc 1 638 10 is_stmt 1 view .LVU1576
 639:boards/TMC5161_eval.c **** 		}
 4344              		.loc 1 639 4 view .LVU1577
 4345              	.LBB447:
 4346              	.LBI447:
  31:boards/TMC5161_eval.c **** {
 4347              		.loc 1 31 31 view .LVU1578
  31:boards/TMC5161_eval.c **** {
 4348              		.loc 1 31 31 is_stmt 0 view .LVU1579
 4349              	.LBE447:
  33:boards/TMC5161_eval.c **** 
 4350              		.loc 1 33 2 is_stmt 1 view .LVU1580
  35:boards/TMC5161_eval.c **** }
 4351              		.loc 1 35 2 view .LVU1581
 4352              	.LBB448:
 4353              	.LBI448:
  31:boards/TMC5161_eval.c **** {
 4354              		.loc 1 31 31 view .LVU1582
  31:boards/TMC5161_eval.c **** {
 4355              		.loc 1 31 31 is_stmt 0 view .LVU1583
 4356              	.LBE448:
  33:boards/TMC5161_eval.c **** 
 4357              		.loc 1 33 2 is_stmt 1 view .LVU1584
  35:boards/TMC5161_eval.c **** }
 4358              		.loc 1 35 2 view .LVU1585
 639:boards/TMC5161_eval.c **** 		}
 4359              		.loc 1 639 4 is_stmt 0 view .LVU1586
 4360 0e1c FFF7FEFF 		bl	tmc5161_readInt
 4361              	.LVL547:
 4362 0e20 2B68     		ldr	r3, [r5]
 4363 0e22 1B05     		lsls	r3, r3, #20
 4364 0e24 03F44013 		and	r3, r3, #3145728
 4365 0e28 20F44012 		bic	r2, r0, #3145728
 4366 0e2c 1A43     		orrs	r2, r2, r3
 4367 0e2e 1248     		ldr	r0, .L225
 4368 0e30 7021     		movs	r1, #112
 4369 0e32 FFF7FEFF 		bl	tmc5161_writeInt
 4370              	.LVL548:
 113:boards/TMC5161_eval.c **** 
 4371              		.loc 1 113 11 view .LVU1587
 4372 0e36 0024     		movs	r4, #0
 4373 0e38 FFF789BA 		b	.L54
 4374              	.LVL549:
 4375              	.L61:
 644:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_DRVSTATUS, TMC5161_SG_RESULT_MASK, TMC5161
 4376              		.loc 1 644 3 is_stmt 1 view .LVU1588
 644:boards/TMC5161_eval.c **** 			*value = TMC5161_FIELD_READ(motorToIC(motor), TMC5161_DRVSTATUS, TMC5161_SG_RESULT_MASK, TMC5161
 4377              		.loc 1 644 5 is_stmt 0 view .LVU1589
 4378 0e3c 002E     		cmp	r6, #0
 4379 0e3e 51D1     		bne	.L216
 645:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4380              		.loc 1 645 4 is_stmt 1 view .LVU1590
 4381              	.LBB449:
 4382              	.LBI449:
  31:boards/TMC5161_eval.c **** {
 4383              		.loc 1 31 31 view .LVU1591
 4384              	.LVL550:
  31:boards/TMC5161_eval.c **** {
 4385              		.loc 1 31 31 is_stmt 0 view .LVU1592
 4386              	.LBE449:
  33:boards/TMC5161_eval.c **** 
 4387              		.loc 1 33 2 is_stmt 1 view .LVU1593
  35:boards/TMC5161_eval.c **** }
 4388              		.loc 1 35 2 view .LVU1594
 645:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4389              		.loc 1 645 13 is_stmt 0 view .LVU1595
 4390 0e40 0D48     		ldr	r0, .L225
 4391              	.LVL551:
 645:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4392              		.loc 1 645 13 view .LVU1596
 4393 0e42 6F21     		movs	r1, #111
 4394              	.LVL552:
 645:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4395              		.loc 1 645 13 view .LVU1597
 4396 0e44 FFF7FEFF 		bl	tmc5161_readInt
 4397              	.LVL553:
 4398 0e48 C0F30900 		ubfx	r0, r0, #0, #10
 645:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4399              		.loc 1 645 11 view .LVU1598
 4400 0e4c 2860     		str	r0, [r5]
 113:boards/TMC5161_eval.c **** 
 4401              		.loc 1 113 11 view .LVU1599
 4402 0e4e 3446     		mov	r4, r6
 4403 0e50 FFF77DBA 		b	.L54
 4404              	.LVL554:
 4405              	.L60:
 652:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_XENC);
 4406              		.loc 1 652 3 is_stmt 1 view .LVU1600
 652:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_XENC);
 4407              		.loc 1 652 5 is_stmt 0 view .LVU1601
 4408 0e54 3EB9     		cbnz	r6, .L195
 653:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4409              		.loc 1 653 4 is_stmt 1 view .LVU1602
 4410              	.LBB450:
 4411              	.LBI450:
  31:boards/TMC5161_eval.c **** {
 4412              		.loc 1 31 31 view .LVU1603
 4413              	.LVL555:
  31:boards/TMC5161_eval.c **** {
 4414              		.loc 1 31 31 is_stmt 0 view .LVU1604
 4415              	.LBE450:
  33:boards/TMC5161_eval.c **** 
 4416              		.loc 1 33 2 is_stmt 1 view .LVU1605
  35:boards/TMC5161_eval.c **** }
 4417              		.loc 1 35 2 view .LVU1606
 653:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4418              		.loc 1 653 13 is_stmt 0 view .LVU1607
 4419 0e56 0848     		ldr	r0, .L225
 4420              	.LVL556:
 653:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4421              		.loc 1 653 13 view .LVU1608
 4422 0e58 3921     		movs	r1, #57
 4423              	.LVL557:
 653:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4424              		.loc 1 653 13 view .LVU1609
 4425 0e5a FFF7FEFF 		bl	tmc5161_readInt
 4426              	.LVL558:
 113:boards/TMC5161_eval.c **** 
 4427              		.loc 1 113 11 view .LVU1610
 4428 0e5e 3446     		mov	r4, r6
 653:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4429              		.loc 1 653 11 view .LVU1611
 4430 0e60 2860     		str	r0, [r5]
 4431 0e62 FFF774BA 		b	.L54
 4432              	.LVL559:
 4433              	.L195:
 654:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_XENC, *value);
 4434              		.loc 1 654 10 is_stmt 1 view .LVU1612
 655:boards/TMC5161_eval.c **** 		}
 4435              		.loc 1 655 4 view .LVU1613
 4436              	.LBB451:
 4437              	.LBI451:
  31:boards/TMC5161_eval.c **** {
 4438              		.loc 1 31 31 view .LVU1614
  31:boards/TMC5161_eval.c **** {
 4439              		.loc 1 31 31 is_stmt 0 view .LVU1615
 4440              	.LBE451:
  33:boards/TMC5161_eval.c **** 
 4441              		.loc 1 33 2 is_stmt 1 view .LVU1616
  35:boards/TMC5161_eval.c **** }
 4442              		.loc 1 35 2 view .LVU1617
 655:boards/TMC5161_eval.c **** 		}
 4443              		.loc 1 655 4 is_stmt 0 view .LVU1618
 4444 0e66 2A68     		ldr	r2, [r5]
 4445 0e68 0348     		ldr	r0, .L225
 4446              	.LVL560:
 655:boards/TMC5161_eval.c **** 		}
 4447              		.loc 1 655 4 view .LVU1619
 4448 0e6a 3921     		movs	r1, #57
 4449              	.LVL561:
 655:boards/TMC5161_eval.c **** 		}
 4450              		.loc 1 655 4 view .LVU1620
 4451 0e6c FFF7FEFF 		bl	tmc5161_writeInt
 4452              	.LVL562:
 113:boards/TMC5161_eval.c **** 
 4453              		.loc 1 113 11 view .LVU1621
 4454 0e70 0024     		movs	r4, #0
 4455 0e72 FFF76CBA 		b	.L54
 4456              	.L226:
 4457 0e76 00BF     		.align	2
 4458              	.L225:
 4459 0e78 00000000 		.word	.LANCHOR0
 4460 0e7c FFFF0F00 		.word	1048575
 4461              	.LVL563:
 4462              	.L58:
 660:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_ENC_CONST);
 4463              		.loc 1 660 3 is_stmt 1 view .LVU1622
 660:boards/TMC5161_eval.c **** 			*value = tmc5161_readInt(motorToIC(motor), TMC5161_ENC_CONST);
 4464              		.loc 1 660 5 is_stmt 0 view .LVU1623
 4465 0e80 3EB9     		cbnz	r6, .L196
 661:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4466              		.loc 1 661 4 is_stmt 1 view .LVU1624
 4467              	.LBB452:
 4468              	.LBI452:
  31:boards/TMC5161_eval.c **** {
 4469              		.loc 1 31 31 view .LVU1625
 4470              	.LVL564:
  31:boards/TMC5161_eval.c **** {
 4471              		.loc 1 31 31 is_stmt 0 view .LVU1626
 4472              	.LBE452:
  33:boards/TMC5161_eval.c **** 
 4473              		.loc 1 33 2 is_stmt 1 view .LVU1627
  35:boards/TMC5161_eval.c **** }
 4474              		.loc 1 35 2 view .LVU1628
 661:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4475              		.loc 1 661 13 is_stmt 0 view .LVU1629
 4476 0e82 1A48     		ldr	r0, .L227
 4477              	.LVL565:
 661:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4478              		.loc 1 661 13 view .LVU1630
 4479 0e84 3A21     		movs	r1, #58
 4480              	.LVL566:
 661:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4481              		.loc 1 661 13 view .LVU1631
 4482 0e86 FFF7FEFF 		bl	tmc5161_readInt
 4483              	.LVL567:
 113:boards/TMC5161_eval.c **** 
 4484              		.loc 1 113 11 view .LVU1632
 4485 0e8a 3446     		mov	r4, r6
 661:boards/TMC5161_eval.c **** 		} else if(readWrite == WRITE) {
 4486              		.loc 1 661 11 view .LVU1633
 4487 0e8c 2860     		str	r0, [r5]
 4488 0e8e FFF75EBA 		b	.L54
 4489              	.LVL568:
 4490              	.L196:
 662:boards/TMC5161_eval.c **** 			tmc5161_writeInt(motorToIC(motor), TMC5161_ENC_CONST, *value);
 4491              		.loc 1 662 10 is_stmt 1 view .LVU1634
 663:boards/TMC5161_eval.c **** 		}
 4492              		.loc 1 663 4 view .LVU1635
 4493              	.LBB453:
 4494              	.LBI453:
  31:boards/TMC5161_eval.c **** {
 4495              		.loc 1 31 31 view .LVU1636
  31:boards/TMC5161_eval.c **** {
 4496              		.loc 1 31 31 is_stmt 0 view .LVU1637
 4497              	.LBE453:
  33:boards/TMC5161_eval.c **** 
 4498              		.loc 1 33 2 is_stmt 1 view .LVU1638
  35:boards/TMC5161_eval.c **** }
 4499              		.loc 1 35 2 view .LVU1639
 663:boards/TMC5161_eval.c **** 		}
 4500              		.loc 1 663 4 is_stmt 0 view .LVU1640
 4501 0e92 2A68     		ldr	r2, [r5]
 4502 0e94 1548     		ldr	r0, .L227
 4503              	.LVL569:
 663:boards/TMC5161_eval.c **** 		}
 4504              		.loc 1 663 4 view .LVU1641
 4505 0e96 3A21     		movs	r1, #58
 4506              	.LVL570:
 663:boards/TMC5161_eval.c **** 		}
 4507              		.loc 1 663 4 view .LVU1642
 4508 0e98 FFF7FEFF 		bl	tmc5161_writeInt
 4509              	.LVL571:
 113:boards/TMC5161_eval.c **** 
 4510              		.loc 1 113 11 view .LVU1643
 4511 0e9c 0024     		movs	r4, #0
 4512 0e9e FFF756BA 		b	.L54
 4513              	.LVL572:
 4514              	.L197:
 116:boards/TMC5161_eval.c **** 
 4515              		.loc 1 116 10 view .LVU1644
 4516 0ea2 0824     		movs	r4, #8
 4517 0ea4 FFF753BA 		b	.L54
 4518              	.LVL573:
 4519              	.L198:
 118:boards/TMC5161_eval.c **** 	{
 4520              		.loc 1 118 2 view .LVU1645
 4521 0ea8 0424     		movs	r4, #4
 4522 0eaa FFF750BA 		b	.L54
 4523              	.LVL574:
 4524              	.L199:
 118:boards/TMC5161_eval.c **** 	{
 4525              		.loc 1 118 2 view .LVU1646
 4526 0eae 0424     		movs	r4, #4
 4527 0eb0 FFF74DBA 		b	.L54
 4528              	.L200:
 150:boards/TMC5161_eval.c **** 		}
 4529              		.loc 1 150 11 view .LVU1647
 4530 0eb4 0424     		movs	r4, #4
 4531 0eb6 FFF74ABA 		b	.L54
 4532              	.L202:
 4533 0eba 0424     		movs	r4, #4
 4534 0ebc FFF747BA 		b	.L54
 4535              	.L203:
 4536 0ec0 0424     		movs	r4, #4
 4537 0ec2 FFF744BA 		b	.L54
 4538              	.L204:
 4539 0ec6 0424     		movs	r4, #4
 4540 0ec8 FFF741BA 		b	.L54
 4541              	.L206:
 4542 0ecc 0424     		movs	r4, #4
 4543 0ece FFF73EBA 		b	.L54
 4544              	.LVL575:
 4545              	.L208:
 150:boards/TMC5161_eval.c **** 		}
 4546              		.loc 1 150 11 view .LVU1648
 4547 0ed2 0424     		movs	r4, #4
 4548 0ed4 FFF73BBA 		b	.L54
 4549              	.L214:
 615:boards/TMC5161_eval.c **** 			}
 4550              		.loc 1 615 12 view .LVU1649
 4551 0ed8 1024     		movs	r4, #16
 4552 0eda FFF738BA 		b	.L54
 4553              	.L215:
 615:boards/TMC5161_eval.c **** 			}
 4554              		.loc 1 615 12 view .LVU1650
 4555 0ede 1024     		movs	r4, #16
 4556 0ee0 FFF735BA 		b	.L54
 4557              	.L216:
 150:boards/TMC5161_eval.c **** 		}
 4558              		.loc 1 150 11 view .LVU1651
 4559 0ee4 0424     		movs	r4, #4
 4560              	.LVL576:
 150:boards/TMC5161_eval.c **** 		}
 4561              		.loc 1 150 11 view .LVU1652
 4562 0ee6 FFF732BA 		b	.L54
 4563              	.L228:
 4564 0eea 00BF     		.align	2
 4565              	.L227:
 4566 0eec 00000000 		.word	.LANCHOR0
 4567              		.cfi_endproc
 4568              	.LFE10:
 4570              		.align	1
 4571              		.syntax unified
 4572              		.thumb
 4573              		.thumb_func
 4574              		.fpu softvfp
 4576              	SAP:
 4577              	.LVL577:
 4578              	.LFB11:
 674:boards/TMC5161_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 4579              		.loc 1 674 1 is_stmt 1 view -0
 4580              		.cfi_startproc
 4581              		@ args = 0, pretend = 0, frame = 8
 4582              		@ frame_needed = 0, uses_anonymous_args = 0
 675:boards/TMC5161_eval.c **** }
 4583              		.loc 1 675 2 view .LVU1654
 674:boards/TMC5161_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 4584              		.loc 1 674 1 is_stmt 0 view .LVU1655
 4585 0ef0 07B5     		push	{r0, r1, r2, lr}
 4586              	.LCFI5:
 4587              		.cfi_def_cfa_offset 16
 4588              		.cfi_offset 14, -4
 674:boards/TMC5161_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 4589              		.loc 1 674 1 view .LVU1656
 4590 0ef2 0192     		str	r2, [sp, #4]
 675:boards/TMC5161_eval.c **** }
 4591              		.loc 1 675 9 view .LVU1657
 4592 0ef4 01AB     		add	r3, sp, #4
 4593 0ef6 0246     		mov	r2, r0
 4594              	.LVL578:
 675:boards/TMC5161_eval.c **** }
 4595              		.loc 1 675 9 view .LVU1658
 4596 0ef8 0120     		movs	r0, #1
 4597              	.LVL579:
 675:boards/TMC5161_eval.c **** }
 4598              		.loc 1 675 9 view .LVU1659
 4599 0efa FFF7A5F9 		bl	handleParameter
 4600              	.LVL580:
 676:boards/TMC5161_eval.c **** 
 4601              		.loc 1 676 1 view .LVU1660
 4602 0efe 03B0     		add	sp, sp, #12
 4603              	.LCFI6:
 4604              		.cfi_def_cfa_offset 4
 4605              		@ sp needed
 4606 0f00 5DF804FB 		ldr	pc, [sp], #4
 4607              		.cfi_endproc
 4608              	.LFE11:
 4610              		.align	1
 4611              		.syntax unified
 4612              		.thumb
 4613              		.thumb_func
 4614              		.fpu softvfp
 4616              	GAP:
 4617              	.LVL581:
 4618              	.LFB12:
 679:boards/TMC5161_eval.c **** 	return handleParameter(READ, motor, type, value);
 4619              		.loc 1 679 1 is_stmt 1 view -0
 4620              		.cfi_startproc
 4621              		@ args = 0, pretend = 0, frame = 0
 4622              		@ frame_needed = 0, uses_anonymous_args = 0
 4623              		@ link register save eliminated.
 680:boards/TMC5161_eval.c **** }
 4624              		.loc 1 680 2 view .LVU1662
 679:boards/TMC5161_eval.c **** 	return handleParameter(READ, motor, type, value);
 4625              		.loc 1 679 1 is_stmt 0 view .LVU1663
 4626 0f04 1346     		mov	r3, r2
 680:boards/TMC5161_eval.c **** }
 4627              		.loc 1 680 9 view .LVU1664
 4628 0f06 0246     		mov	r2, r0
 4629              	.LVL582:
 680:boards/TMC5161_eval.c **** }
 4630              		.loc 1 680 9 view .LVU1665
 4631 0f08 0020     		movs	r0, #0
 4632              	.LVL583:
 680:boards/TMC5161_eval.c **** }
 4633              		.loc 1 680 9 view .LVU1666
 4634 0f0a FFF79DB9 		b	handleParameter
 4635              	.LVL584:
 680:boards/TMC5161_eval.c **** }
 4636              		.loc 1 680 9 view .LVU1667
 4637              		.cfi_endproc
 4638              	.LFE12:
 4640              		.align	1
 4641              		.syntax unified
 4642              		.thumb
 4643              		.thumb_func
 4644              		.fpu softvfp
 4646              	moveBy:
 4647              	.LVL585:
 4648              	.LFB9:
 104:boards/TMC5161_eval.c **** 	tmc5161_moveBy(motorToIC(motor), ticks, vmax_position);
 4649              		.loc 1 104 1 is_stmt 1 view -0
 4650              		.cfi_startproc
 4651              		@ args = 0, pretend = 0, frame = 0
 4652              		@ frame_needed = 0, uses_anonymous_args = 0
 105:boards/TMC5161_eval.c **** 
 4653              		.loc 1 105 2 view .LVU1669
 4654              	.LBB454:
 4655              	.LBI454:
  31:boards/TMC5161_eval.c **** {
 4656              		.loc 1 31 31 view .LVU1670
  31:boards/TMC5161_eval.c **** {
 4657              		.loc 1 31 31 is_stmt 0 view .LVU1671
 4658              	.LBE454:
  33:boards/TMC5161_eval.c **** 
 4659              		.loc 1 33 2 is_stmt 1 view .LVU1672
  35:boards/TMC5161_eval.c **** }
 4660              		.loc 1 35 2 view .LVU1673
 104:boards/TMC5161_eval.c **** 	tmc5161_moveBy(motorToIC(motor), ticks, vmax_position);
 4661              		.loc 1 104 1 is_stmt 0 view .LVU1674
 4662 0f0e 08B5     		push	{r3, lr}
 4663              	.LCFI7:
 4664              		.cfi_def_cfa_offset 8
 4665              		.cfi_offset 3, -8
 4666              		.cfi_offset 14, -4
 105:boards/TMC5161_eval.c **** 
 4667              		.loc 1 105 2 view .LVU1675
 4668 0f10 0348     		ldr	r0, .L232
 4669              	.LVL586:
 105:boards/TMC5161_eval.c **** 
 4670              		.loc 1 105 2 view .LVU1676
 4671 0f12 D0F8B822 		ldr	r2, [r0, #696]
 4672 0f16 FFF7FEFF 		bl	tmc5161_moveBy
 4673              	.LVL587:
 107:boards/TMC5161_eval.c **** }
 4674              		.loc 1 107 2 is_stmt 1 view .LVU1677
 108:boards/TMC5161_eval.c **** 
 4675              		.loc 1 108 1 is_stmt 0 view .LVU1678
 4676 0f1a 0020     		movs	r0, #0
 4677 0f1c 08BD     		pop	{r3, pc}
 4678              	.L233:
 4679 0f1e 00BF     		.align	2
 4680              	.L232:
 4681 0f20 00000000 		.word	.LANCHOR0
 4682              		.cfi_endproc
 4683              	.LFE9:
 4685              		.align	1
 4686              		.syntax unified
 4687              		.thumb
 4688              		.thumb_func
 4689              		.fpu softvfp
 4691              	moveTo:
 4692              	.LVL588:
 4693              	.LFB8:
  97:boards/TMC5161_eval.c **** 	tmc5161_moveTo(motorToIC(motor), position, vmax_position);
 4694              		.loc 1 97 1 is_stmt 1 view -0
 4695              		.cfi_startproc
 4696              		@ args = 0, pretend = 0, frame = 0
 4697              		@ frame_needed = 0, uses_anonymous_args = 0
  98:boards/TMC5161_eval.c **** 
 4698              		.loc 1 98 2 view .LVU1680
 4699              	.LBB455:
 4700              	.LBI455:
  31:boards/TMC5161_eval.c **** {
 4701              		.loc 1 31 31 view .LVU1681
  31:boards/TMC5161_eval.c **** {
 4702              		.loc 1 31 31 is_stmt 0 view .LVU1682
 4703              	.LBE455:
  33:boards/TMC5161_eval.c **** 
 4704              		.loc 1 33 2 is_stmt 1 view .LVU1683
  35:boards/TMC5161_eval.c **** }
 4705              		.loc 1 35 2 view .LVU1684
  97:boards/TMC5161_eval.c **** 	tmc5161_moveTo(motorToIC(motor), position, vmax_position);
 4706              		.loc 1 97 1 is_stmt 0 view .LVU1685
 4707 0f24 08B5     		push	{r3, lr}
 4708              	.LCFI8:
 4709              		.cfi_def_cfa_offset 8
 4710              		.cfi_offset 3, -8
 4711              		.cfi_offset 14, -4
  98:boards/TMC5161_eval.c **** 
 4712              		.loc 1 98 2 view .LVU1686
 4713 0f26 0348     		ldr	r0, .L235
 4714              	.LVL589:
  98:boards/TMC5161_eval.c **** 
 4715              		.loc 1 98 2 view .LVU1687
 4716 0f28 D0F8B822 		ldr	r2, [r0, #696]
 4717 0f2c FFF7FEFF 		bl	tmc5161_moveTo
 4718              	.LVL590:
 100:boards/TMC5161_eval.c **** }
 4719              		.loc 1 100 2 is_stmt 1 view .LVU1688
 101:boards/TMC5161_eval.c **** 
 4720              		.loc 1 101 1 is_stmt 0 view .LVU1689
 4721 0f30 0020     		movs	r0, #0
 4722 0f32 08BD     		pop	{r3, pc}
 4723              	.L236:
 4724              		.align	2
 4725              	.L235:
 4726 0f34 00000000 		.word	.LANCHOR0
 4727              		.cfi_endproc
 4728              	.LFE8:
 4730              		.align	1
 4731              		.syntax unified
 4732              		.thumb
 4733              		.thumb_func
 4734              		.fpu softvfp
 4736              	stop:
 4737              	.LVL591:
 4738              	.LFB7:
  90:boards/TMC5161_eval.c **** 	tmc5161_stop(motorToIC(motor));
 4739              		.loc 1 90 1 is_stmt 1 view -0
 4740              		.cfi_startproc
 4741              		@ args = 0, pretend = 0, frame = 0
 4742              		@ frame_needed = 0, uses_anonymous_args = 0
  91:boards/TMC5161_eval.c **** 
 4743              		.loc 1 91 2 view .LVU1691
 4744              	.LBB456:
 4745              	.LBI456:
  31:boards/TMC5161_eval.c **** {
 4746              		.loc 1 31 31 view .LVU1692
  31:boards/TMC5161_eval.c **** {
 4747              		.loc 1 31 31 is_stmt 0 view .LVU1693
 4748              	.LBE456:
  33:boards/TMC5161_eval.c **** 
 4749              		.loc 1 33 2 is_stmt 1 view .LVU1694
  35:boards/TMC5161_eval.c **** }
 4750              		.loc 1 35 2 view .LVU1695
  90:boards/TMC5161_eval.c **** 	tmc5161_stop(motorToIC(motor));
 4751              		.loc 1 90 1 is_stmt 0 view .LVU1696
 4752 0f38 08B5     		push	{r3, lr}
 4753              	.LCFI9:
 4754              		.cfi_def_cfa_offset 8
 4755              		.cfi_offset 3, -8
 4756              		.cfi_offset 14, -4
  91:boards/TMC5161_eval.c **** 
 4757              		.loc 1 91 2 view .LVU1697
 4758 0f3a 0248     		ldr	r0, .L238
 4759              	.LVL592:
  91:boards/TMC5161_eval.c **** 
 4760              		.loc 1 91 2 view .LVU1698
 4761 0f3c FFF7FEFF 		bl	tmc5161_stop
 4762              	.LVL593:
  93:boards/TMC5161_eval.c **** }
 4763              		.loc 1 93 2 is_stmt 1 view .LVU1699
  94:boards/TMC5161_eval.c **** 
 4764              		.loc 1 94 1 is_stmt 0 view .LVU1700
 4765 0f40 0020     		movs	r0, #0
 4766 0f42 08BD     		pop	{r3, pc}
 4767              	.L239:
 4768              		.align	2
 4769              	.L238:
 4770 0f44 00000000 		.word	.LANCHOR0
 4771              		.cfi_endproc
 4772              	.LFE7:
 4774              		.align	1
 4775              		.syntax unified
 4776              		.thumb
 4777              		.thumb_func
 4778              		.fpu softvfp
 4780              	left:
 4781              	.LVL594:
 4782              	.LFB6:
  83:boards/TMC5161_eval.c **** 	tmc5161_left(motorToIC(motor), velocity);
 4783              		.loc 1 83 1 is_stmt 1 view -0
 4784              		.cfi_startproc
 4785              		@ args = 0, pretend = 0, frame = 0
 4786              		@ frame_needed = 0, uses_anonymous_args = 0
  84:boards/TMC5161_eval.c **** 
 4787              		.loc 1 84 2 view .LVU1702
 4788              	.LBB457:
 4789              	.LBI457:
  31:boards/TMC5161_eval.c **** {
 4790              		.loc 1 31 31 view .LVU1703
  31:boards/TMC5161_eval.c **** {
 4791              		.loc 1 31 31 is_stmt 0 view .LVU1704
 4792              	.LBE457:
  33:boards/TMC5161_eval.c **** 
 4793              		.loc 1 33 2 is_stmt 1 view .LVU1705
  35:boards/TMC5161_eval.c **** }
 4794              		.loc 1 35 2 view .LVU1706
  83:boards/TMC5161_eval.c **** 	tmc5161_left(motorToIC(motor), velocity);
 4795              		.loc 1 83 1 is_stmt 0 view .LVU1707
 4796 0f48 08B5     		push	{r3, lr}
 4797              	.LCFI10:
 4798              		.cfi_def_cfa_offset 8
 4799              		.cfi_offset 3, -8
 4800              		.cfi_offset 14, -4
  84:boards/TMC5161_eval.c **** 
 4801              		.loc 1 84 2 view .LVU1708
 4802 0f4a 0248     		ldr	r0, .L241
 4803              	.LVL595:
  84:boards/TMC5161_eval.c **** 
 4804              		.loc 1 84 2 view .LVU1709
 4805 0f4c FFF7FEFF 		bl	tmc5161_left
 4806              	.LVL596:
  86:boards/TMC5161_eval.c **** }
 4807              		.loc 1 86 2 is_stmt 1 view .LVU1710
  87:boards/TMC5161_eval.c **** 
 4808              		.loc 1 87 1 is_stmt 0 view .LVU1711
 4809 0f50 0020     		movs	r0, #0
 4810 0f52 08BD     		pop	{r3, pc}
 4811              	.L242:
 4812              		.align	2
 4813              	.L241:
 4814 0f54 00000000 		.word	.LANCHOR0
 4815              		.cfi_endproc
 4816              	.LFE6:
 4818              		.align	1
 4819              		.syntax unified
 4820              		.thumb
 4821              		.thumb_func
 4822              		.fpu softvfp
 4824              	right:
 4825              	.LVL597:
 4826              	.LFB5:
  76:boards/TMC5161_eval.c **** 	tmc5161_right(motorToIC(motor), velocity);
 4827              		.loc 1 76 1 is_stmt 1 view -0
 4828              		.cfi_startproc
 4829              		@ args = 0, pretend = 0, frame = 0
 4830              		@ frame_needed = 0, uses_anonymous_args = 0
  77:boards/TMC5161_eval.c **** 
 4831              		.loc 1 77 2 view .LVU1713
 4832              	.LBB458:
 4833              	.LBI458:
  31:boards/TMC5161_eval.c **** {
 4834              		.loc 1 31 31 view .LVU1714
  31:boards/TMC5161_eval.c **** {
 4835              		.loc 1 31 31 is_stmt 0 view .LVU1715
 4836              	.LBE458:
  33:boards/TMC5161_eval.c **** 
 4837              		.loc 1 33 2 is_stmt 1 view .LVU1716
  35:boards/TMC5161_eval.c **** }
 4838              		.loc 1 35 2 view .LVU1717
  76:boards/TMC5161_eval.c **** 	tmc5161_right(motorToIC(motor), velocity);
 4839              		.loc 1 76 1 is_stmt 0 view .LVU1718
 4840 0f58 08B5     		push	{r3, lr}
 4841              	.LCFI11:
 4842              		.cfi_def_cfa_offset 8
 4843              		.cfi_offset 3, -8
 4844              		.cfi_offset 14, -4
  77:boards/TMC5161_eval.c **** 
 4845              		.loc 1 77 2 view .LVU1719
 4846 0f5a 0248     		ldr	r0, .L244
 4847              	.LVL598:
  77:boards/TMC5161_eval.c **** 
 4848              		.loc 1 77 2 view .LVU1720
 4849 0f5c FFF7FEFF 		bl	tmc5161_right
 4850              	.LVL599:
  79:boards/TMC5161_eval.c **** }
 4851              		.loc 1 79 2 is_stmt 1 view .LVU1721
  80:boards/TMC5161_eval.c **** 
 4852              		.loc 1 80 1 is_stmt 0 view .LVU1722
 4853 0f60 0020     		movs	r0, #0
 4854 0f62 08BD     		pop	{r3, pc}
 4855              	.L245:
 4856              		.align	2
 4857              	.L244:
 4858 0f64 00000000 		.word	.LANCHOR0
 4859              		.cfi_endproc
 4860              	.LFE5:
 4862              		.align	1
 4863              		.syntax unified
 4864              		.thumb
 4865              		.thumb_func
 4866              		.fpu softvfp
 4868              	rotate:
 4869              	.LVL600:
 4870              	.LFB4:
  69:boards/TMC5161_eval.c **** 	tmc5161_rotate(motorToIC(motor), velocity);
 4871              		.loc 1 69 1 is_stmt 1 view -0
 4872              		.cfi_startproc
 4873              		@ args = 0, pretend = 0, frame = 0
 4874              		@ frame_needed = 0, uses_anonymous_args = 0
  70:boards/TMC5161_eval.c **** 
 4875              		.loc 1 70 2 view .LVU1724
 4876              	.LBB459:
 4877              	.LBI459:
  31:boards/TMC5161_eval.c **** {
 4878              		.loc 1 31 31 view .LVU1725
  31:boards/TMC5161_eval.c **** {
 4879              		.loc 1 31 31 is_stmt 0 view .LVU1726
 4880              	.LBE459:
  33:boards/TMC5161_eval.c **** 
 4881              		.loc 1 33 2 is_stmt 1 view .LVU1727
  35:boards/TMC5161_eval.c **** }
 4882              		.loc 1 35 2 view .LVU1728
  69:boards/TMC5161_eval.c **** 	tmc5161_rotate(motorToIC(motor), velocity);
 4883              		.loc 1 69 1 is_stmt 0 view .LVU1729
 4884 0f68 08B5     		push	{r3, lr}
 4885              	.LCFI12:
 4886              		.cfi_def_cfa_offset 8
 4887              		.cfi_offset 3, -8
 4888              		.cfi_offset 14, -4
  70:boards/TMC5161_eval.c **** 
 4889              		.loc 1 70 2 view .LVU1730
 4890 0f6a 0248     		ldr	r0, .L247
 4891              	.LVL601:
  70:boards/TMC5161_eval.c **** 
 4892              		.loc 1 70 2 view .LVU1731
 4893 0f6c FFF7FEFF 		bl	tmc5161_rotate
 4894              	.LVL602:
  72:boards/TMC5161_eval.c **** }
 4895              		.loc 1 72 2 is_stmt 1 view .LVU1732
  73:boards/TMC5161_eval.c **** 
 4896              		.loc 1 73 1 is_stmt 0 view .LVU1733
 4897 0f70 0020     		movs	r0, #0
 4898 0f72 08BD     		pop	{r3, pc}
 4899              	.L248:
 4900              		.align	2
 4901              	.L247:
 4902 0f74 00000000 		.word	.LANCHOR0
 4903              		.cfi_endproc
 4904              	.LFE4:
 4906              		.align	1
 4907              		.syntax unified
 4908              		.thumb
 4909              		.thumb_func
 4910              		.fpu softvfp
 4912              	restore:
 4913              	.LFB21:
 865:boards/TMC5161_eval.c **** 
 866:boards/TMC5161_eval.c **** static uint8_t reset()
 867:boards/TMC5161_eval.c **** {
 868:boards/TMC5161_eval.c **** 	if(!tmc5161_readInt(&TMC5161, TMC5161_VACTUAL))
 869:boards/TMC5161_eval.c **** 		tmc5161_reset(&TMC5161);
 870:boards/TMC5161_eval.c **** 
 871:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 872:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 873:boards/TMC5161_eval.c **** 
 874:boards/TMC5161_eval.c **** 	return 1;
 875:boards/TMC5161_eval.c **** }
 876:boards/TMC5161_eval.c **** 
 877:boards/TMC5161_eval.c **** static uint8_t restore()
 878:boards/TMC5161_eval.c **** {
 4914              		.loc 1 878 1 is_stmt 1 view -0
 4915              		.cfi_startproc
 4916              		@ args = 0, pretend = 0, frame = 0
 4917              		@ frame_needed = 0, uses_anonymous_args = 0
 4918              		@ link register save eliminated.
 879:boards/TMC5161_eval.c **** 	return tmc5161_restore(&TMC5161);
 4919              		.loc 1 879 2 view .LVU1735
 4920              		.loc 1 879 9 is_stmt 0 view .LVU1736
 4921 0f78 0148     		ldr	r0, .L250
 4922 0f7a FFF7FEBF 		b	tmc5161_restore
 4923              	.LVL603:
 4924              	.L251:
 4925 0f7e 00BF     		.align	2
 4926              	.L250:
 4927 0f80 00000000 		.word	.LANCHOR0
 4928              		.cfi_endproc
 4929              	.LFE21:
 4931              		.align	1
 4932              		.syntax unified
 4933              		.thumb
 4934              		.thumb_func
 4935              		.fpu softvfp
 4937              	reset:
 4938              	.LFB20:
 867:boards/TMC5161_eval.c **** 	if(!tmc5161_readInt(&TMC5161, TMC5161_VACTUAL))
 4939              		.loc 1 867 1 is_stmt 1 view -0
 4940              		.cfi_startproc
 4941              		@ args = 0, pretend = 0, frame = 0
 4942              		@ frame_needed = 0, uses_anonymous_args = 0
 868:boards/TMC5161_eval.c **** 		tmc5161_reset(&TMC5161);
 4943              		.loc 1 868 2 view .LVU1738
 867:boards/TMC5161_eval.c **** 	if(!tmc5161_readInt(&TMC5161, TMC5161_VACTUAL))
 4944              		.loc 1 867 1 is_stmt 0 view .LVU1739
 4945 0f84 38B5     		push	{r3, r4, r5, lr}
 4946              	.LCFI13:
 4947              		.cfi_def_cfa_offset 16
 4948              		.cfi_offset 3, -16
 4949              		.cfi_offset 4, -12
 4950              		.cfi_offset 5, -8
 4951              		.cfi_offset 14, -4
 868:boards/TMC5161_eval.c **** 		tmc5161_reset(&TMC5161);
 4952              		.loc 1 868 6 view .LVU1740
 4953 0f86 0B48     		ldr	r0, .L254
 4954 0f88 0A4C     		ldr	r4, .L254
 4955 0f8a 2221     		movs	r1, #34
 4956 0f8c FFF7FEFF 		bl	tmc5161_readInt
 4957              	.LVL604:
 868:boards/TMC5161_eval.c **** 		tmc5161_reset(&TMC5161);
 4958              		.loc 1 868 4 view .LVU1741
 4959 0f90 10B9     		cbnz	r0, .L253
 869:boards/TMC5161_eval.c **** 
 4960              		.loc 1 869 3 is_stmt 1 view .LVU1742
 4961 0f92 2046     		mov	r0, r4
 4962 0f94 FFF7FEFF 		bl	tmc5161_reset
 4963              	.LVL605:
 4964              	.L253:
 871:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 4965              		.loc 1 871 2 view .LVU1743
 871:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 4966              		.loc 1 871 5 is_stmt 0 view .LVU1744
 4967 0f98 074B     		ldr	r3, .L254+4
 871:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 4968              		.loc 1 871 2 view .LVU1745
 4969 0f9a D4F89002 		ldr	r0, [r4, #656]
 871:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 4970              		.loc 1 871 5 view .LVU1746
 4971 0f9e DD68     		ldr	r5, [r3, #12]
 871:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 4972              		.loc 1 871 17 view .LVU1747
 4973 0fa0 2B68     		ldr	r3, [r5]
 871:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 4974              		.loc 1 871 2 view .LVU1748
 4975 0fa2 1B69     		ldr	r3, [r3, #16]
 4976 0fa4 9847     		blx	r3
 4977              	.LVL606:
 872:boards/TMC5161_eval.c **** 
 4978              		.loc 1 872 2 is_stmt 1 view .LVU1749
 872:boards/TMC5161_eval.c **** 
 4979              		.loc 1 872 17 is_stmt 0 view .LVU1750
 4980 0fa6 2B68     		ldr	r3, [r5]
 872:boards/TMC5161_eval.c **** 
 4981              		.loc 1 872 2 view .LVU1751
 4982 0fa8 D4F89402 		ldr	r0, [r4, #660]
 4983 0fac 1B69     		ldr	r3, [r3, #16]
 4984 0fae 9847     		blx	r3
 4985              	.LVL607:
 874:boards/TMC5161_eval.c **** }
 4986              		.loc 1 874 2 is_stmt 1 view .LVU1752
 875:boards/TMC5161_eval.c **** 
 4987              		.loc 1 875 1 is_stmt 0 view .LVU1753
 4988 0fb0 0120     		movs	r0, #1
 4989 0fb2 38BD     		pop	{r3, r4, r5, pc}
 4990              	.L255:
 4991              		.align	2
 4992              	.L254:
 4993 0fb4 00000000 		.word	.LANCHOR0
 4994 0fb8 00000000 		.word	HAL
 4995              		.cfi_endproc
 4996              	.LFE20:
 4998              		.align	1
 4999              		.syntax unified
 5000              		.thumb
 5001              		.thumb_func
 5002              		.fpu softvfp
 5004              	enableDriver:
 5005              	.LVL608:
 5006              	.LFB22:
 880:boards/TMC5161_eval.c **** }
 881:boards/TMC5161_eval.c **** 
 882:boards/TMC5161_eval.c **** static void enableDriver(DriverState state)
 883:boards/TMC5161_eval.c **** {
 5007              		.loc 1 883 1 is_stmt 1 view -0
 5008              		.cfi_startproc
 5009              		@ args = 0, pretend = 0, frame = 0
 5010              		@ frame_needed = 0, uses_anonymous_args = 0
 5011              		@ link register save eliminated.
 884:boards/TMC5161_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 5012              		.loc 1 884 2 view .LVU1755
 5013              		.loc 1 884 4 is_stmt 0 view .LVU1756
 5014 0fbc 0228     		cmp	r0, #2
 885:boards/TMC5161_eval.c **** 		state = Evalboards.driverEnable;
 5015              		.loc 1 885 3 is_stmt 1 view .LVU1757
 5016              		.loc 1 885 9 is_stmt 0 view .LVU1758
 5017 0fbe 04BF     		itt	eq
 5018 0fc0 0C4B     		ldreq	r3, .L261
 5019 0fc2 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 5020              	.LVL609:
 886:boards/TMC5161_eval.c **** 
 887:boards/TMC5161_eval.c **** 	if(state ==  DRIVER_DISABLE)
 5021              		.loc 1 887 2 is_stmt 1 view .LVU1759
 5022              		.loc 1 887 4 is_stmt 0 view .LVU1760
 5023 0fc6 38B9     		cbnz	r0, .L258
 888:boards/TMC5161_eval.c **** 		HAL.IOs->config->setHigh(Pins.DRV_ENN_CFG6);
 5024              		.loc 1 888 3 is_stmt 1 view .LVU1761
 5025              		.loc 1 888 6 is_stmt 0 view .LVU1762
 5026 0fc8 0B4B     		ldr	r3, .L261+4
 5027              		.loc 1 888 10 view .LVU1763
 5028 0fca DB68     		ldr	r3, [r3, #12]
 5029              		.loc 1 888 18 view .LVU1764
 5030 0fcc 1B68     		ldr	r3, [r3]
 5031              		.loc 1 888 3 view .LVU1765
 5032 0fce 5B69     		ldr	r3, [r3, #20]
 5033              	.L260:
 5034              	.LBB462:
 5035              	.LBB463:
 889:boards/TMC5161_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 890:boards/TMC5161_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN_CFG6);
 5036              		.loc 1 890 3 view .LVU1766
 5037 0fd0 0A4A     		ldr	r2, .L261+8
 5038 0fd2 D2F89802 		ldr	r0, [r2, #664]
 5039 0fd6 1847     		bx	r3	@ indirect register sibling call
 5040              	.LVL610:
 5041              	.L258:
 5042              		.loc 1 890 3 view .LVU1767
 5043              	.LBE463:
 5044              	.LBE462:
 889:boards/TMC5161_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 5045              		.loc 1 889 7 is_stmt 1 view .LVU1768
 889:boards/TMC5161_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 5046              		.loc 1 889 9 is_stmt 0 view .LVU1769
 5047 0fd8 0128     		cmp	r0, #1
 5048 0fda 09D1     		bne	.L256
 889:boards/TMC5161_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 5049              		.loc 1 889 49 discriminator 1 view .LVU1770
 5050 0fdc 054B     		ldr	r3, .L261
 889:boards/TMC5161_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 5051              		.loc 1 889 35 discriminator 1 view .LVU1771
 5052 0fde 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 5053 0fe2 012B     		cmp	r3, #1
 5054 0fe4 04D1     		bne	.L256
 5055              	.LBB465:
 5056              	.LBI462:
 882:boards/TMC5161_eval.c **** {
 5057              		.loc 1 882 13 is_stmt 1 view .LVU1772
 5058              	.LVL611:
 5059              	.LBB464:
 5060              		.loc 1 890 3 view .LVU1773
 5061              		.loc 1 890 6 is_stmt 0 view .LVU1774
 5062 0fe6 044B     		ldr	r3, .L261+4
 5063              		.loc 1 890 10 view .LVU1775
 5064 0fe8 DB68     		ldr	r3, [r3, #12]
 5065              		.loc 1 890 18 view .LVU1776
 5066 0fea 1B68     		ldr	r3, [r3]
 5067              		.loc 1 890 3 view .LVU1777
 5068 0fec 9B69     		ldr	r3, [r3, #24]
 5069 0fee EFE7     		b	.L260
 5070              	.LVL612:
 5071              	.L256:
 5072              		.loc 1 890 3 view .LVU1778
 5073              	.LBE464:
 5074              	.LBE465:
 891:boards/TMC5161_eval.c **** }
 5075              		.loc 1 891 1 view .LVU1779
 5076 0ff0 7047     		bx	lr
 5077              	.L262:
 5078 0ff2 00BF     		.align	2
 5079              	.L261:
 5080 0ff4 00000000 		.word	Evalboards
 5081 0ff8 00000000 		.word	HAL
 5082 0ffc 00000000 		.word	.LANCHOR0
 5083              		.cfi_endproc
 5084              	.LFE22:
 5086              		.align	1
 5087              		.syntax unified
 5088              		.thumb
 5089              		.thumb_func
 5090              		.fpu softvfp
 5092              	configCallback:
 5093              	.LVL613:
 5094              	.LFB23:
 892:boards/TMC5161_eval.c **** 
 893:boards/TMC5161_eval.c **** static void configCallback(TMC5161TypeDef *tmc5161, ConfigState state)
 894:boards/TMC5161_eval.c **** {
 5095              		.loc 1 894 1 is_stmt 1 view -0
 5096              		.cfi_startproc
 5097              		@ args = 0, pretend = 0, frame = 0
 5098              		@ frame_needed = 0, uses_anonymous_args = 0
 895:boards/TMC5161_eval.c **** 	if(state == CONFIG_RESET)
 5099              		.loc 1 895 2 view .LVU1781
 5100              		.loc 1 895 4 is_stmt 0 view .LVU1782
 5101 1000 0129     		cmp	r1, #1
 894:boards/TMC5161_eval.c **** 	if(state == CONFIG_RESET)
 5102              		.loc 1 894 1 view .LVU1783
 5103 1002 10B5     		push	{r4, lr}
 5104              	.LCFI14:
 5105              		.cfi_def_cfa_offset 8
 5106              		.cfi_offset 4, -8
 5107              		.cfi_offset 14, -4
 894:boards/TMC5161_eval.c **** 	if(state == CONFIG_RESET)
 5108              		.loc 1 894 1 view .LVU1784
 5109 1004 0446     		mov	r4, r0
 5110              		.loc 1 895 4 view .LVU1785
 5111 1006 0FD1     		bne	.L263
 5112              	.LVL614:
 5113              	.LBB468:
 5114              	.LBI468:
 893:boards/TMC5161_eval.c **** {
 5115              		.loc 1 893 13 is_stmt 1 view .LVU1786
 5116              	.LBB469:
 896:boards/TMC5161_eval.c **** 	{	// Change hardware-preset registers here
 897:boards/TMC5161_eval.c **** 		tmc5161_writeInt(tmc5161, TMC5161_SHORT_CONF, 0x00010C0C);
 5117              		.loc 1 897 3 view .LVU1787
 5118 1008 084A     		ldr	r2, .L265
 5119 100a 0921     		movs	r1, #9
 5120              	.LVL615:
 5121              		.loc 1 897 3 is_stmt 0 view .LVU1788
 5122 100c FFF7FEFF 		bl	tmc5161_writeInt
 5123              	.LVL616:
 898:boards/TMC5161_eval.c **** 		tmc5161_writeInt(tmc5161, TMC5161_DRV_CONF, 0x00080200);
 5124              		.loc 1 898 3 is_stmt 1 view .LVU1789
 5125 1010 2046     		mov	r0, r4
 5126 1012 074A     		ldr	r2, .L265+4
 5127 1014 0A21     		movs	r1, #10
 5128 1016 FFF7FEFF 		bl	tmc5161_writeInt
 5129              	.LVL617:
 899:boards/TMC5161_eval.c **** 		tmc5161_writeInt(tmc5161, TMC5161_PWMCONF, 0xC40C001E);
 5130              		.loc 1 899 3 view .LVU1790
 5131 101a 2046     		mov	r0, r4
 5132 101c 054A     		ldr	r2, .L265+8
 5133              	.LBE469:
 5134              	.LBE468:
 900:boards/TMC5161_eval.c **** 	}
 901:boards/TMC5161_eval.c **** }
 5135              		.loc 1 901 1 is_stmt 0 view .LVU1791
 5136 101e BDE81040 		pop	{r4, lr}
 5137              	.LCFI15:
 5138              		.cfi_remember_state
 5139              		.cfi_restore 14
 5140              		.cfi_restore 4
 5141              		.cfi_def_cfa_offset 0
 5142              	.LVL618:
 5143              	.LBB471:
 5144              	.LBB470:
 899:boards/TMC5161_eval.c **** 		tmc5161_writeInt(tmc5161, TMC5161_PWMCONF, 0xC40C001E);
 5145              		.loc 1 899 3 view .LVU1792
 5146 1022 7021     		movs	r1, #112
 5147 1024 FFF7FEBF 		b	tmc5161_writeInt
 5148              	.LVL619:
 5149              	.L263:
 5150              	.LCFI16:
 5151              		.cfi_restore_state
 899:boards/TMC5161_eval.c **** 		tmc5161_writeInt(tmc5161, TMC5161_PWMCONF, 0xC40C001E);
 5152              		.loc 1 899 3 view .LVU1793
 5153              	.LBE470:
 5154              	.LBE471:
 5155              		.loc 1 901 1 view .LVU1794
 5156 1028 10BD     		pop	{r4, pc}
 5157              	.L266:
 5158 102a 00BF     		.align	2
 5159              	.L265:
 5160 102c 0C0C0100 		.word	68620
 5161 1030 00020800 		.word	524800
 5162 1034 1E000CC4 		.word	-1005846498
 5163              		.cfi_endproc
 5164              	.LFE23:
 5166              		.align	1
 5167              		.global	tmc5161_readWriteArray
 5168              		.syntax unified
 5169              		.thumb
 5170              		.thumb_func
 5171              		.fpu softvfp
 5173              	tmc5161_readWriteArray:
 5174              	.LVL620:
 5175              	.LFB3:
  47:boards/TMC5161_eval.c **** 	// Map the channel to the corresponding SPI channel
 5176              		.loc 1 47 1 is_stmt 1 view -0
 5177              		.cfi_startproc
 5178              		@ args = 0, pretend = 0, frame = 0
 5179              		@ frame_needed = 0, uses_anonymous_args = 0
 5180              		@ link register save eliminated.
  49:boards/TMC5161_eval.c **** }
 5181              		.loc 1 49 2 view .LVU1796
 5182              	.LBB472:
 5183              	.LBI472:
  38:boards/TMC5161_eval.c **** {
 5184              		.loc 1 38 34 view .LVU1797
 5185              	.LBB473:
  40:boards/TMC5161_eval.c **** 
 5186              		.loc 1 40 2 view .LVU1798
  42:boards/TMC5161_eval.c **** }
 5187              		.loc 1 42 2 view .LVU1799
  42:boards/TMC5161_eval.c **** }
 5188              		.loc 1 42 9 is_stmt 0 view .LVU1800
 5189 1038 034B     		ldr	r3, .L268
 5190              	.LBE473:
 5191              	.LBE472:
  49:boards/TMC5161_eval.c **** }
 5192              		.loc 1 49 23 view .LVU1801
 5193 103a D3F8BC32 		ldr	r3, [r3, #700]
  47:boards/TMC5161_eval.c **** 	// Map the channel to the corresponding SPI channel
 5194              		.loc 1 47 1 view .LVU1802
 5195 103e 0846     		mov	r0, r1
 5196              	.LVL621:
  49:boards/TMC5161_eval.c **** }
 5197              		.loc 1 49 2 view .LVU1803
 5198 1040 DB68     		ldr	r3, [r3, #12]
 5199 1042 1146     		mov	r1, r2
 5200              	.LVL622:
  49:boards/TMC5161_eval.c **** }
 5201              		.loc 1 49 2 view .LVU1804
 5202 1044 1847     		bx	r3	@ indirect register sibling call
 5203              	.LVL623:
 5204              	.L269:
  49:boards/TMC5161_eval.c **** }
 5205              		.loc 1 49 2 view .LVU1805
 5206 1046 00BF     		.align	2
 5207              	.L268:
 5208 1048 00000000 		.word	.LANCHOR0
 5209              		.cfi_endproc
 5210              	.LFE3:
 5212              		.align	1
 5213              		.global	TMC5161_init
 5214              		.syntax unified
 5215              		.thumb
 5216              		.thumb_func
 5217              		.fpu softvfp
 5219              	TMC5161_init:
 5220              	.LFB24:
 902:boards/TMC5161_eval.c **** 
 903:boards/TMC5161_eval.c **** void TMC5161_init(void)
 904:boards/TMC5161_eval.c **** {
 5221              		.loc 1 904 1 is_stmt 1 view -0
 5222              		.cfi_startproc
 5223              		@ args = 0, pretend = 0, frame = 0
 5224              		@ frame_needed = 0, uses_anonymous_args = 0
 905:boards/TMC5161_eval.c **** 	tmc5161_init(&TMC5161, 0, Evalboards.ch1.config, tmc5161_defaultRegisterResetState);
 5225              		.loc 1 905 2 view .LVU1807
 904:boards/TMC5161_eval.c **** 	tmc5161_init(&TMC5161, 0, Evalboards.ch1.config, tmc5161_defaultRegisterResetState);
 5226              		.loc 1 904 1 is_stmt 0 view .LVU1808
 5227 104c F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5228              	.LCFI17:
 5229              		.cfi_def_cfa_offset 24
 5230              		.cfi_offset 3, -24
 5231              		.cfi_offset 4, -20
 5232              		.cfi_offset 5, -16
 5233              		.cfi_offset 6, -12
 5234              		.cfi_offset 7, -8
 5235              		.cfi_offset 14, -4
 5236              		.loc 1 905 2 view .LVU1809
 5237 104e 5A4C     		ldr	r4, .L271
 5238 1050 5A4D     		ldr	r5, .L271+4
 5239 1052 5B4B     		ldr	r3, .L271+8
 5240 1054 AA69     		ldr	r2, [r5, #24]
 906:boards/TMC5161_eval.c **** 	tmc5161_setCallback(&TMC5161, configCallback);
 907:boards/TMC5161_eval.c **** 
 908:boards/TMC5161_eval.c **** 	Pins.DRV_ENN_CFG6    = &HAL.IOs->pins->DIO0;
 5241              		.loc 1 908 29 view .LVU1810
 5242 1056 5B4F     		ldr	r7, .L271+12
 905:boards/TMC5161_eval.c **** 	tmc5161_setCallback(&TMC5161, configCallback);
 5243              		.loc 1 905 2 view .LVU1811
 5244 1058 2046     		mov	r0, r4
 5245 105a 0021     		movs	r1, #0
 5246 105c FFF7FEFF 		bl	tmc5161_init
 5247              	.LVL624:
 906:boards/TMC5161_eval.c **** 	tmc5161_setCallback(&TMC5161, configCallback);
 5248              		.loc 1 906 2 is_stmt 1 view .LVU1812
 5249 1060 5949     		ldr	r1, .L271+16
 5250 1062 2046     		mov	r0, r4
 5251 1064 FFF7FEFF 		bl	tmc5161_setCallback
 5252              	.LVL625:
 5253              		.loc 1 908 2 view .LVU1813
 5254              		.loc 1 908 29 is_stmt 0 view .LVU1814
 5255 1068 FE68     		ldr	r6, [r7, #12]
 5256              		.loc 1 908 33 view .LVU1815
 5257 106a 7368     		ldr	r3, [r6, #4]
 909:boards/TMC5161_eval.c **** 	Pins.ENCN_DCO        = &HAL.IOs->pins->DIO1;
 5258              		.loc 1 909 25 view .LVU1816
 5259 106c 03F18802 		add	r2, r3, #136
 5260              		.loc 1 909 23 view .LVU1817
 5261 1070 C4F8A422 		str	r2, [r4, #676]
 910:boards/TMC5161_eval.c **** 	Pins.ENCA_DCIN_CFG5  = &HAL.IOs->pins->DIO2;
 5262              		.loc 1 910 25 view .LVU1818
 5263 1074 03F1A802 		add	r2, r3, #168
 5264              		.loc 1 910 23 view .LVU1819
 5265 1078 C4F89C22 		str	r2, [r4, #668]
 911:boards/TMC5161_eval.c **** 	Pins.ENCB_DCEN_CFG4  = &HAL.IOs->pins->DIO3;
 5266              		.loc 1 911 25 view .LVU1820
 5267 107c 03F1C802 		add	r2, r3, #200
 5268              		.loc 1 911 23 view .LVU1821
 5269 1080 C4F8A022 		str	r2, [r4, #672]
 912:boards/TMC5161_eval.c **** 	Pins.REFL_UC         = &HAL.IOs->pins->DIO6;
 5270              		.loc 1 912 25 view .LVU1822
 5271 1084 03F59472 		add	r2, r3, #296
 5272              		.loc 1 912 23 view .LVU1823
 5273 1088 C4F89022 		str	r2, [r4, #656]
 913:boards/TMC5161_eval.c **** 	Pins.REFR_UC         = &HAL.IOs->pins->DIO7;
 5274              		.loc 1 913 25 view .LVU1824
 5275 108c 03F5A472 		add	r2, r3, #328
 5276              		.loc 1 913 23 view .LVU1825
 5277 1090 C4F89422 		str	r2, [r4, #660]
 914:boards/TMC5161_eval.c **** 	Pins.SD_MODE         = &HAL.IOs->pins->DIO9;
 5278              		.loc 1 914 25 view .LVU1826
 5279 1094 03F5C472 		add	r2, r3, #392
 5280              		.loc 1 914 23 view .LVU1827
 5281 1098 C4F8A822 		str	r2, [r4, #680]
 915:boards/TMC5161_eval.c **** 	Pins.SPI_MODE        = &HAL.IOs->pins->DIO11;
 5282              		.loc 1 915 25 view .LVU1828
 5283 109c 03F5E472 		add	r2, r3, #456
 908:boards/TMC5161_eval.c **** 	Pins.ENCN_DCO        = &HAL.IOs->pins->DIO1;
 5284              		.loc 1 908 25 view .LVU1829
 5285 10a0 03F16800 		add	r0, r3, #104
 5286              		.loc 1 915 23 view .LVU1830
 5287 10a4 C4F8AC22 		str	r2, [r4, #684]
 916:boards/TMC5161_eval.c **** 	Pins.SWP_DIAG1       = &HAL.IOs->pins->DIO15;
 5288              		.loc 1 916 25 view .LVU1831
 5289 10a8 03F56A72 		add	r2, r3, #936
 917:boards/TMC5161_eval.c **** 	Pins.SWN_DIAG0       = &HAL.IOs->pins->DIO16;
 5290              		.loc 1 917 25 view .LVU1832
 5291 10ac 03F57273 		add	r3, r3, #968
 5292              		.loc 1 917 23 view .LVU1833
 5293 10b0 C4F8B032 		str	r3, [r4, #688]
 918:boards/TMC5161_eval.c **** 
 919:boards/TMC5161_eval.c **** 	HAL.IOs->config->toOutput(Pins.DRV_ENN_CFG6);
 5294              		.loc 1 919 17 view .LVU1834
 5295 10b4 3368     		ldr	r3, [r6]
 916:boards/TMC5161_eval.c **** 	Pins.SWN_DIAG0       = &HAL.IOs->pins->DIO16;
 5296              		.loc 1 916 23 view .LVU1835
 5297 10b6 C4F8B422 		str	r2, [r4, #692]
 5298              		.loc 1 919 2 view .LVU1836
 5299 10ba DB68     		ldr	r3, [r3, #12]
 908:boards/TMC5161_eval.c **** 	Pins.ENCN_DCO        = &HAL.IOs->pins->DIO1;
 5300              		.loc 1 908 23 view .LVU1837
 5301 10bc C4F89802 		str	r0, [r4, #664]
 909:boards/TMC5161_eval.c **** 	Pins.ENCA_DCIN_CFG5  = &HAL.IOs->pins->DIO2;
 5302              		.loc 1 909 2 is_stmt 1 view .LVU1838
 910:boards/TMC5161_eval.c **** 	Pins.ENCB_DCEN_CFG4  = &HAL.IOs->pins->DIO3;
 5303              		.loc 1 910 2 view .LVU1839
 911:boards/TMC5161_eval.c **** 	Pins.REFL_UC         = &HAL.IOs->pins->DIO6;
 5304              		.loc 1 911 2 view .LVU1840
 912:boards/TMC5161_eval.c **** 	Pins.REFR_UC         = &HAL.IOs->pins->DIO7;
 5305              		.loc 1 912 2 view .LVU1841
 913:boards/TMC5161_eval.c **** 	Pins.SD_MODE         = &HAL.IOs->pins->DIO9;
 5306              		.loc 1 913 2 view .LVU1842
 914:boards/TMC5161_eval.c **** 	Pins.SPI_MODE        = &HAL.IOs->pins->DIO11;
 5307              		.loc 1 914 2 view .LVU1843
 915:boards/TMC5161_eval.c **** 	Pins.SWP_DIAG1       = &HAL.IOs->pins->DIO15;
 5308              		.loc 1 915 2 view .LVU1844
 916:boards/TMC5161_eval.c **** 	Pins.SWN_DIAG0       = &HAL.IOs->pins->DIO16;
 5309              		.loc 1 916 2 view .LVU1845
 917:boards/TMC5161_eval.c **** 
 5310              		.loc 1 917 2 view .LVU1846
 5311              		.loc 1 919 2 view .LVU1847
 5312 10c0 9847     		blx	r3
 5313              	.LVL626:
 920:boards/TMC5161_eval.c **** 	HAL.IOs->config->toOutput(Pins.SD_MODE);
 5314              		.loc 1 920 2 view .LVU1848
 5315              		.loc 1 920 17 is_stmt 0 view .LVU1849
 5316 10c2 3368     		ldr	r3, [r6]
 5317              		.loc 1 920 2 view .LVU1850
 5318 10c4 D4F8A802 		ldr	r0, [r4, #680]
 5319 10c8 DB68     		ldr	r3, [r3, #12]
 5320 10ca 9847     		blx	r3
 5321              	.LVL627:
 921:boards/TMC5161_eval.c **** 	HAL.IOs->config->toOutput(Pins.SPI_MODE);
 5322              		.loc 1 921 2 is_stmt 1 view .LVU1851
 5323              		.loc 1 921 17 is_stmt 0 view .LVU1852
 5324 10cc 3368     		ldr	r3, [r6]
 5325              		.loc 1 921 2 view .LVU1853
 5326 10ce D4F8AC02 		ldr	r0, [r4, #684]
 5327 10d2 DB68     		ldr	r3, [r3, #12]
 5328 10d4 9847     		blx	r3
 5329              	.LVL628:
 922:boards/TMC5161_eval.c **** 
 923:boards/TMC5161_eval.c **** 	HAL.IOs->config->setHigh(Pins.DRV_ENN_CFG6);
 5330              		.loc 1 923 2 is_stmt 1 view .LVU1854
 5331              		.loc 1 923 17 is_stmt 0 view .LVU1855
 5332 10d6 3368     		ldr	r3, [r6]
 5333              		.loc 1 923 2 view .LVU1856
 5334 10d8 D4F89802 		ldr	r0, [r4, #664]
 5335 10dc 5B69     		ldr	r3, [r3, #20]
 5336 10de 9847     		blx	r3
 5337              	.LVL629:
 924:boards/TMC5161_eval.c **** 	HAL.IOs->config->setLow(Pins.SD_MODE);
 5338              		.loc 1 924 2 is_stmt 1 view .LVU1857
 5339              		.loc 1 924 17 is_stmt 0 view .LVU1858
 5340 10e0 3368     		ldr	r3, [r6]
 5341              		.loc 1 924 2 view .LVU1859
 5342 10e2 D4F8A802 		ldr	r0, [r4, #680]
 5343 10e6 9B69     		ldr	r3, [r3, #24]
 5344 10e8 9847     		blx	r3
 5345              	.LVL630:
 925:boards/TMC5161_eval.c **** 	HAL.IOs->config->setHigh(Pins.SPI_MODE);
 5346              		.loc 1 925 2 is_stmt 1 view .LVU1860
 5347              		.loc 1 925 17 is_stmt 0 view .LVU1861
 5348 10ea 3368     		ldr	r3, [r6]
 5349              		.loc 1 925 2 view .LVU1862
 5350 10ec D4F8AC02 		ldr	r0, [r4, #684]
 5351 10f0 5B69     		ldr	r3, [r3, #20]
 5352 10f2 9847     		blx	r3
 5353              	.LVL631:
 926:boards/TMC5161_eval.c **** 
 927:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.ENCN_DCO);
 5354              		.loc 1 927 2 is_stmt 1 view .LVU1863
 5355              		.loc 1 927 17 is_stmt 0 view .LVU1864
 5356 10f4 3368     		ldr	r3, [r6]
 5357              		.loc 1 927 2 view .LVU1865
 5358 10f6 D4F8A402 		ldr	r0, [r4, #676]
 5359 10fa 1B69     		ldr	r3, [r3, #16]
 5360 10fc 9847     		blx	r3
 5361              	.LVL632:
 928:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.ENCB_DCEN_CFG4);
 5362              		.loc 1 928 2 is_stmt 1 view .LVU1866
 5363              		.loc 1 928 17 is_stmt 0 view .LVU1867
 5364 10fe 3368     		ldr	r3, [r6]
 5365              		.loc 1 928 2 view .LVU1868
 5366 1100 D4F8A002 		ldr	r0, [r4, #672]
 5367 1104 1B69     		ldr	r3, [r3, #16]
 5368 1106 9847     		blx	r3
 5369              	.LVL633:
 929:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.ENCA_DCIN_CFG5);
 5370              		.loc 1 929 2 is_stmt 1 view .LVU1869
 5371              		.loc 1 929 17 is_stmt 0 view .LVU1870
 5372 1108 3368     		ldr	r3, [r6]
 5373              		.loc 1 929 2 view .LVU1871
 5374 110a D4F89C02 		ldr	r0, [r4, #668]
 5375 110e 1B69     		ldr	r3, [r3, #16]
 5376 1110 9847     		blx	r3
 5377              	.LVL634:
 930:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.SWN_DIAG0);
 5378              		.loc 1 930 2 is_stmt 1 view .LVU1872
 5379              		.loc 1 930 17 is_stmt 0 view .LVU1873
 5380 1112 3368     		ldr	r3, [r6]
 5381              		.loc 1 930 2 view .LVU1874
 5382 1114 D4F8B002 		ldr	r0, [r4, #688]
 5383 1118 1B69     		ldr	r3, [r3, #16]
 5384 111a 9847     		blx	r3
 5385              	.LVL635:
 931:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.SWP_DIAG1);
 5386              		.loc 1 931 2 is_stmt 1 view .LVU1875
 5387              		.loc 1 931 17 is_stmt 0 view .LVU1876
 5388 111c 3368     		ldr	r3, [r6]
 5389              		.loc 1 931 2 view .LVU1877
 5390 111e D4F8B402 		ldr	r0, [r4, #692]
 5391 1122 1B69     		ldr	r3, [r3, #16]
 5392 1124 9847     		blx	r3
 5393              	.LVL636:
 932:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 5394              		.loc 1 932 2 is_stmt 1 view .LVU1878
 5395              		.loc 1 932 17 is_stmt 0 view .LVU1879
 5396 1126 3368     		ldr	r3, [r6]
 5397              		.loc 1 932 2 view .LVU1880
 5398 1128 D4F89002 		ldr	r0, [r4, #656]
 5399 112c 1B69     		ldr	r3, [r3, #16]
 5400 112e 9847     		blx	r3
 5401              	.LVL637:
 933:boards/TMC5161_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 5402              		.loc 1 933 2 is_stmt 1 view .LVU1881
 5403              		.loc 1 933 17 is_stmt 0 view .LVU1882
 5404 1130 3368     		ldr	r3, [r6]
 5405              		.loc 1 933 2 view .LVU1883
 5406 1132 D4F89402 		ldr	r0, [r4, #660]
 5407 1136 1B69     		ldr	r3, [r3, #16]
 5408 1138 9847     		blx	r3
 5409              	.LVL638:
 934:boards/TMC5161_eval.c **** 
 935:boards/TMC5161_eval.c **** 	// Disable CLK output -> use internal 12 MHz clock
 936:boards/TMC5161_eval.c **** 	// Switchable via user function
 937:boards/TMC5161_eval.c **** 	//HAL.IOs->config->toOutput(&HAL.IOs->pins->CLK16);
 938:boards/TMC5161_eval.c **** 	//HAL.IOs->config->setLow(&HAL.IOs->pins->CLK16);
 939:boards/TMC5161_eval.c **** 
 940:boards/TMC5161_eval.c **** 	TMC5161_SPIChannel = &HAL.SPI->ch1;
 5410              		.loc 1 940 2 is_stmt 1 view .LVU1884
 941:boards/TMC5161_eval.c **** 	TMC5161_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 5411              		.loc 1 941 28 is_stmt 0 view .LVU1885
 5412 113a 7368     		ldr	r3, [r6, #4]
 940:boards/TMC5161_eval.c **** 	TMC5161_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 5413              		.loc 1 940 27 view .LVU1886
 5414 113c 3A69     		ldr	r2, [r7, #16]
 940:boards/TMC5161_eval.c **** 	TMC5161_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 5415              		.loc 1 940 21 view .LVU1887
 5416 113e C4F8BC22 		str	r2, [r4, #700]
 5417              		.loc 1 941 2 is_stmt 1 view .LVU1888
 5418              		.loc 1 941 28 is_stmt 0 view .LVU1889
 5419 1142 03F53273 		add	r3, r3, #712
 5420              		.loc 1 941 26 view .LVU1890
 5421 1146 5360     		str	r3, [r2, #4]
 942:boards/TMC5161_eval.c **** 
 943:boards/TMC5161_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 5422              		.loc 1 943 2 is_stmt 1 view .LVU1891
 5423              		.loc 1 943 16 is_stmt 0 view .LVU1892
 5424 1148 AB69     		ldr	r3, [r5, #24]
 5425              		.loc 1 943 38 view .LVU1893
 5426 114a 204A     		ldr	r2, .L271+20
 5427 114c C3F80422 		str	r2, [r3, #516]
 944:boards/TMC5161_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 5428              		.loc 1 944 2 is_stmt 1 view .LVU1894
 5429              		.loc 1 944 38 is_stmt 0 view .LVU1895
 5430 1150 1F4A     		ldr	r2, .L271+24
 5431 1152 C3F80822 		str	r2, [r3, #520]
 945:boards/TMC5161_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 5432              		.loc 1 945 2 is_stmt 1 view .LVU1896
 946:boards/TMC5161_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 5433              		.loc 1 946 2 view .LVU1897
 945:boards/TMC5161_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 5434              		.loc 1 945 38 is_stmt 0 view .LVU1898
 5435 1156 0122     		movs	r2, #1
 5436 1158 1A80     		strh	r2, [r3]	@ movhi
 947:boards/TMC5161_eval.c **** 
 948:boards/TMC5161_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 5437              		.loc 1 948 2 is_stmt 1 view .LVU1899
 5438              		.loc 1 948 38 is_stmt 0 view .LVU1900
 5439 115a 1E4B     		ldr	r3, .L271+28
 5440 115c 6B62     		str	r3, [r5, #36]
 949:boards/TMC5161_eval.c **** 	Evalboards.ch1.right                = right;
 5441              		.loc 1 949 2 is_stmt 1 view .LVU1901
 5442              		.loc 1 949 38 is_stmt 0 view .LVU1902
 5443 115e 1E4B     		ldr	r3, .L271+32
 5444 1160 2B62     		str	r3, [r5, #32]
 950:boards/TMC5161_eval.c **** 	Evalboards.ch1.left                 = left;
 5445              		.loc 1 950 2 is_stmt 1 view .LVU1903
 5446              		.loc 1 950 38 is_stmt 0 view .LVU1904
 5447 1162 1E4B     		ldr	r3, .L271+36
 5448 1164 EB61     		str	r3, [r5, #28]
 951:boards/TMC5161_eval.c **** 	Evalboards.ch1.stop                 = stop;
 5449              		.loc 1 951 2 is_stmt 1 view .LVU1905
 5450              		.loc 1 951 38 is_stmt 0 view .LVU1906
 5451 1166 1E4B     		ldr	r3, .L271+40
 5452 1168 AB62     		str	r3, [r5, #40]
 952:boards/TMC5161_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 5453              		.loc 1 952 2 is_stmt 1 view .LVU1907
 5454              		.loc 1 952 38 is_stmt 0 view .LVU1908
 5455 116a 1E4B     		ldr	r3, .L271+44
 5456 116c EB63     		str	r3, [r5, #60]
 953:boards/TMC5161_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 5457              		.loc 1 953 2 is_stmt 1 view .LVU1909
 5458              		.loc 1 953 38 is_stmt 0 view .LVU1910
 5459 116e 1E4B     		ldr	r3, .L271+48
 5460 1170 AB63     		str	r3, [r5, #56]
 954:boards/TMC5161_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 5461              		.loc 1 954 2 is_stmt 1 view .LVU1911
 5462              		.loc 1 954 38 is_stmt 0 view .LVU1912
 5463 1172 1E4B     		ldr	r3, .L271+52
 5464 1174 EB62     		str	r3, [r5, #44]
 955:boards/TMC5161_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 5465              		.loc 1 955 2 is_stmt 1 view .LVU1913
 5466              		.loc 1 955 38 is_stmt 0 view .LVU1914
 5467 1176 1E4B     		ldr	r3, .L271+56
 5468 1178 2B63     		str	r3, [r5, #48]
 956:boards/TMC5161_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 5469              		.loc 1 956 2 is_stmt 1 view .LVU1915
 5470              		.loc 1 956 38 is_stmt 0 view .LVU1916
 5471 117a 1E4B     		ldr	r3, .L271+60
 5472 117c EB64     		str	r3, [r5, #76]
 957:boards/TMC5161_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 5473              		.loc 1 957 2 is_stmt 1 view .LVU1917
 5474              		.loc 1 957 38 is_stmt 0 view .LVU1918
 5475 117e 1E4B     		ldr	r3, .L271+64
 5476 1180 AB64     		str	r3, [r5, #72]
 958:boards/TMC5161_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 5477              		.loc 1 958 2 is_stmt 1 view .LVU1919
 5478              		.loc 1 958 38 is_stmt 0 view .LVU1920
 5479 1182 1E4B     		ldr	r3, .L271+68
 5480 1184 AB65     		str	r3, [r5, #88]
 959:boards/TMC5161_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 5481              		.loc 1 959 2 is_stmt 1 view .LVU1921
 5482              		.loc 1 959 38 is_stmt 0 view .LVU1922
 5483 1186 1E4B     		ldr	r3, .L271+72
 5484 1188 6B65     		str	r3, [r5, #84]
 960:boards/TMC5161_eval.c **** 	Evalboards.ch1.getMeasuredSpeed     = getMeasuredSpeed;
 5485              		.loc 1 960 2 is_stmt 1 view .LVU1923
 5486              		.loc 1 960 38 is_stmt 0 view .LVU1924
 5487 118a 1E4B     		ldr	r3, .L271+76
 5488 118c 2B65     		str	r3, [r5, #80]
 961:boards/TMC5161_eval.c **** 	Evalboards.ch1.enableDriver         = enableDriver;
 5489              		.loc 1 961 2 is_stmt 1 view .LVU1925
 5490              		.loc 1 961 38 is_stmt 0 view .LVU1926
 5491 118e 1E4B     		ldr	r3, .L271+80
 5492 1190 6B66     		str	r3, [r5, #100]
 962:boards/TMC5161_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 5493              		.loc 1 962 2 is_stmt 1 view .LVU1927
 5494              		.loc 1 962 38 is_stmt 0 view .LVU1928
 5495 1192 1E4B     		ldr	r3, .L271+84
 5496 1194 2B66     		str	r3, [r5, #96]
 963:boards/TMC5161_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC5161_MOTORS;
 5497              		.loc 1 963 2 is_stmt 1 view .LVU1929
 5498              		.loc 1 963 38 is_stmt 0 view .LVU1930
 5499 1196 2A75     		strb	r2, [r5, #20]
 964:boards/TMC5161_eval.c **** 	Evalboards.ch1.VMMin                = VM_MIN;
 5500              		.loc 1 964 2 is_stmt 1 view .LVU1931
 965:boards/TMC5161_eval.c **** 	Evalboards.ch1.VMMax                = VM_MAX;
 5501              		.loc 1 965 38 is_stmt 0 view .LVU1932
 5502 1198 4FF42573 		mov	r3, #660
 5503 119c 3222     		movs	r2, #50
 5504 119e C5E90332 		strd	r3, r2, [r5, #12]
 966:boards/TMC5161_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 5505              		.loc 1 966 2 is_stmt 1 view .LVU1933
 5506              		.loc 1 966 38 is_stmt 0 view .LVU1934
 5507 11a2 1B4B     		ldr	r3, .L271+88
 5508 11a4 EB65     		str	r3, [r5, #92]
 967:boards/TMC5161_eval.c **** 
 968:boards/TMC5161_eval.c **** 	vmax_position = TMC5161.config->shadowRegister[TMC5161_VMAX];
 5509              		.loc 1 968 2 is_stmt 1 view .LVU1935
 5510              		.loc 1 968 48 is_stmt 0 view .LVU1936
 5511 11a6 2368     		ldr	r3, [r4]
 5512              		.loc 1 968 16 view .LVU1937
 5513 11a8 D3F8A030 		ldr	r3, [r3, #160]
 5514 11ac C4F8B832 		str	r3, [r4, #696]
 969:boards/TMC5161_eval.c **** 
 970:boards/TMC5161_eval.c **** 	enableDriver(DRIVER_USE_GLOBAL_ENABLE);
 5515              		.loc 1 970 2 is_stmt 1 view .LVU1938
 5516 11b0 0220     		movs	r0, #2
 971:boards/TMC5161_eval.c **** };
 5517              		.loc 1 971 1 is_stmt 0 view .LVU1939
 5518 11b2 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 5519              	.LCFI18:
 5520              		.cfi_restore 14
 5521              		.cfi_restore 7
 5522              		.cfi_restore 6
 5523              		.cfi_restore 5
 5524              		.cfi_restore 4
 5525              		.cfi_restore 3
 5526              		.cfi_def_cfa_offset 0
 970:boards/TMC5161_eval.c **** };
 5527              		.loc 1 970 2 view .LVU1940
 5528 11b6 01E7     		b	enableDriver
 5529              	.LVL639:
 5530              	.L272:
 5531              		.align	2
 5532              	.L271:
 5533 11b8 00000000 		.word	.LANCHOR0
 5534 11bc 00000000 		.word	Evalboards
 5535 11c0 00000000 		.word	.LANCHOR1
 5536 11c4 00000000 		.word	HAL
 5537 11c8 00000000 		.word	configCallback
 5538 11cc 00000000 		.word	reset
 5539 11d0 00000000 		.word	restore
 5540 11d4 00000000 		.word	rotate
 5541 11d8 00000000 		.word	right
 5542 11dc 00000000 		.word	left
 5543 11e0 00000000 		.word	stop
 5544 11e4 00000000 		.word	GAP
 5545 11e8 00000000 		.word	SAP
 5546 11ec 00000000 		.word	moveTo
 5547 11f0 00000000 		.word	moveBy
 5548 11f4 00000000 		.word	writeRegister
 5549 11f8 00000000 		.word	readRegister
 5550 11fc 00000000 		.word	periodicJob
 5551 1200 00000000 		.word	userFunction
 5552 1204 00000000 		.word	getMeasuredSpeed
 5553 1208 00000000 		.word	enableDriver
 5554 120c 00000000 		.word	checkErrors
 5555 1210 00000000 		.word	deInit
 5556              		.cfi_endproc
 5557              	.LFE24:
 5559              		.comm	TMCMotionController,532,4
 5560              		.comm	TMCDriver,532,4
 5561              		.comm	Evalboards,244,4
 5562              		.comm	VitalSignsMonitor,20,4
 5563              		.comm	hwid,1,1
 5564              		.comm	HAL,48,4
 5565              		.comm	UART,40,4
 5566              		.comm	Timer,16,4
 5567              		.comm	WLAN,36,4
 5568              		.comm	RS232,36,4
 5569              		.comm	LEDs,28,4
 5570              		.comm	USB,36,4
 5571              		.comm	uart0_interrupt,1,1
 5572              		.comm	ADCs,32,4
 5573              		.comm	SPI,44,4
 5574              		.comm	IOMap,2088,4
 5575              		.comm	IOs,52,4
 5576              		.comm	Cpu,8,4
 5577              		.section	.rodata
 5578              		.align	2
 5579              		.set	.LANCHOR1,. + 0
 5582              	tmc5161_defaultRegisterResetState:
 5583 0000 08000000 		.word	8
 5584 0004 00000000 		.word	0
 5585 0008 00000000 		.word	0
 5586 000c 00000000 		.word	0
 5587 0010 00000000 		.word	0
 5588 0014 00000000 		.word	0
 5589 0018 00000000 		.word	0
 5590 001c 00000000 		.word	0
 5591 0020 00000000 		.word	0
 5592 0024 0C0C0100 		.word	68620
 5593 0028 00020800 		.word	524800
 5594 002c 00000000 		.word	0
 5595 0030 00000000 		.word	0
 5596 0034 00000000 		.word	0
 5597 0038 00000000 		.word	0
 5598 003c 00000000 		.word	0
 5599 0040 030A0700 		.word	461315
 5600 0044 0A000000 		.word	10
 5601 0048 00000000 		.word	0
 5602 004c 00000000 		.word	0
 5603 0050 00000000 		.word	0
 5604 0054 00000000 		.word	0
 5605 0058 00000000 		.word	0
 5606 005c 00000000 		.word	0
 5607 0060 00000000 		.word	0
 5608 0064 00000000 		.word	0
 5609 0068 00000000 		.word	0
 5610 006c 01000000 		.word	1
 5611 0070 00000000 		.word	0
 5612 0074 00000000 		.word	0
 5613 0078 00000000 		.word	0
 5614 007c 00000000 		.word	0
 5615 0080 00000000 		.word	0
 5616 0084 00000000 		.word	0
 5617 0088 00000000 		.word	0
 5618 008c 00000000 		.word	0
 5619 0090 00000000 		.word	0
 5620 0094 00000000 		.word	0
 5621 0098 00000000 		.word	0
 5622 009c 00000000 		.word	0
 5623 00a0 00000000 		.word	0
 5624 00a4 00000000 		.word	0
 5625 00a8 00000000 		.word	0
 5626 00ac 00000000 		.word	0
 5627 00b0 00000000 		.word	0
 5628 00b4 00000000 		.word	0
 5629 00b8 00000000 		.word	0
 5630 00bc 00000000 		.word	0
 5631 00c0 00000000 		.word	0
 5632 00c4 00000000 		.word	0
 5633 00c8 00000000 		.word	0
 5634 00cc 00000000 		.word	0
 5635 00d0 00000000 		.word	0
 5636 00d4 00000000 		.word	0
 5637 00d8 00000000 		.word	0
 5638 00dc 00000000 		.word	0
 5639 00e0 00000000 		.word	0
 5640 00e4 00000000 		.word	0
 5641 00e8 00000100 		.word	65536
 5642 00ec 00000000 		.word	0
 5643 00f0 00000000 		.word	0
 5644 00f4 00000000 		.word	0
 5645 00f8 00000000 		.word	0
 5646 00fc 00000000 		.word	0
 5647 0100 00000000 		.word	0
 5648 0104 00000000 		.word	0
 5649 0108 00000000 		.word	0
 5650 010c 00000000 		.word	0
 5651 0110 00000000 		.word	0
 5652 0114 00000000 		.word	0
 5653 0118 00000000 		.word	0
 5654 011c 00000000 		.word	0
 5655 0120 00000000 		.word	0
 5656 0124 00000000 		.word	0
 5657 0128 00000000 		.word	0
 5658 012c 00000000 		.word	0
 5659 0130 00000000 		.word	0
 5660 0134 00000000 		.word	0
 5661 0138 00000000 		.word	0
 5662 013c 00000000 		.word	0
 5663 0140 00000000 		.word	0
 5664 0144 00000000 		.word	0
 5665 0148 00000000 		.word	0
 5666 014c 00000000 		.word	0
 5667 0150 00000000 		.word	0
 5668 0154 00000000 		.word	0
 5669 0158 00000000 		.word	0
 5670 015c 00000000 		.word	0
 5671 0160 00000000 		.word	0
 5672 0164 00000000 		.word	0
 5673 0168 00000000 		.word	0
 5674 016c 00000000 		.word	0
 5675 0170 00000000 		.word	0
 5676 0174 00000000 		.word	0
 5677 0178 00000000 		.word	0
 5678 017c 00000000 		.word	0
 5679 0180 00000000 		.word	0
 5680 0184 00000000 		.word	0
 5681 0188 00000000 		.word	0
 5682 018c 00000000 		.word	0
 5683 0190 00000000 		.word	0
 5684 0194 00000000 		.word	0
 5685 0198 00000000 		.word	0
 5686 019c 00000000 		.word	0
 5687 01a0 00000000 		.word	0
 5688 01a4 00000000 		.word	0
 5689 01a8 00000000 		.word	0
 5690 01ac 00000000 		.word	0
 5691 01b0 53014100 		.word	4260179
 5692 01b4 00000000 		.word	0
 5693 01b8 00000000 		.word	0
 5694 01bc 00000000 		.word	0
 5695 01c0 1E000CC4 		.word	-1005846498
 5696 01c4 00000000 		.word	0
 5697 01c8 00000000 		.word	0
 5698 01cc 00000000 		.word	0
 5699 01d0 00000000 		.word	0
 5700 01d4 00000000 		.word	0
 5701 01d8 00000000 		.word	0
 5702 01dc 00000000 		.word	0
 5703 01e0 00000000 		.word	0
 5704 01e4 00000000 		.word	0
 5705 01e8 00000000 		.word	0
 5706 01ec 00000000 		.word	0
 5707 01f0 00000000 		.word	0
 5708 01f4 00000000 		.word	0
 5709 01f8 00000000 		.word	0
 5710 01fc 00000000 		.word	0
 5711              		.bss
 5712              		.align	2
 5713              		.set	.LANCHOR0,. + 0
 5716              	TMC5161:
 5717 0000 00000000 		.space	656
 5717      00000000 
 5717      00000000 
 5717      00000000 
 5717      00000000 
 5720              	Pins:
 5721 0290 00000000 		.space	40
 5721      00000000 
 5721      00000000 
 5721      00000000 
 5721      00000000 
 5724              	vmax_position:
 5725 02b8 00000000 		.space	4
 5728              	TMC5161_SPIChannel:
 5729 02bc 00000000 		.space	4
 5732              	ADCValue:
 5733 02c0 00000000 		.space	12
 5733      00000000 
 5733      00000000 
 5734              		.text
 5735              	.Letext0:
 5736              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 5737              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5738              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5739              		.file 5 "TMC-API/tmc/helpers/Types.h"
 5740              		.file 6 "TMC-API/tmc/helpers/Config.h"
 5741              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5742              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5743              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5744              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 5745              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 5746              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 5747              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 5748              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 5749              		.file 15 "./hal/IOs.h"
 5750              		.file 16 "./hal/IOMap.h"
 5751              		.file 17 "./hal/SPI.h"
 5752              		.file 18 "./hal/ADCs.h"
 5753              		.file 19 "./hal/RXTX.h"
 5754              		.file 20 "./hal/USB.h"
 5755              		.file 21 "./hal/LEDs.h"
 5756              		.file 22 "./hal/RS232.h"
 5757              		.file 23 "./hal/WLAN.h"
 5758              		.file 24 "./hal/Timer.h"
 5759              		.file 25 "./hal/UART.h"
 5760              		.file 26 "./hal/HAL.h"
 5761              		.file 27 "./tmc/VitalSignsMonitor.h"
 5762              		.file 28 "boards/Board.h"
 5763              		.file 29 "boards/TMCDriver.h"
 5764              		.file 30 "boards/TMCMotionController.h"
 5765              		.file 31 "TMC-API/tmc/ic/TMC5161/TMC5161.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC5161_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:22     .text:00000000 getMeasuredSpeed
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:52     .text:00000010 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:56     .text:00000014 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:62     .text:00000014 checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:81     .text:0000001c $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:85     .text:00000020 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:91     .text:00000020 userFunction
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:123    .text:00000032 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:436    .text:0000017c $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:441    .text:00000184 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:447    .text:00000184 deInit
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:583    .text:00000214 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:588    .text:0000021c $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:594    .text:0000021c periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:615    .text:00000224 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:619    .text:00000228 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:625    .text:00000228 readRegister
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:657    .text:00000238 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:661    .text:0000023c $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:667    .text:0000023c writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:686    .text:00000244 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:690    .text:00000248 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:696    .text:00000248 handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:730    .text:00000262 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:765    .text:000002a8 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:775    .text:000002b4 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:847    .text:00000342 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:1887   .text:00000600 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:1900   .text:00000604 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:2432   .text:000007a6 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:2440   .text:000007ae $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:2737   .text:000008a8 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:2750   .text:000008b0 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:3588   .text:00000b78 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:3593   .text:00000b7c $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4459   .text:00000e78 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4465   .text:00000e80 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4566   .text:00000eec $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4570   .text:00000ef0 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4576   .text:00000ef0 SAP
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4616   .text:00000f04 GAP
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4646   .text:00000f0e moveBy
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4681   .text:00000f20 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4685   .text:00000f24 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4691   .text:00000f24 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4726   .text:00000f34 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4730   .text:00000f38 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4736   .text:00000f38 stop
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4770   .text:00000f44 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4774   .text:00000f48 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4780   .text:00000f48 left
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4814   .text:00000f54 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4818   .text:00000f58 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4824   .text:00000f58 right
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4858   .text:00000f64 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4862   .text:00000f68 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4868   .text:00000f68 rotate
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4902   .text:00000f74 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4906   .text:00000f78 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4912   .text:00000f78 restore
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4927   .text:00000f80 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4931   .text:00000f84 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4937   .text:00000f84 reset
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4993   .text:00000fb4 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:4998   .text:00000fbc $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5004   .text:00000fbc enableDriver
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5080   .text:00000ff4 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5086   .text:00001000 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5092   .text:00001000 configCallback
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5160   .text:0000102c $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5166   .text:00001038 $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5173   .text:00001038 tmc5161_readWriteArray
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5208   .text:00001048 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5212   .text:0000104c $t
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5219   .text:0000104c TMC5161_init
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5533   .text:000011b8 $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5578   .rodata:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5582   .rodata:00000000 tmc5161_defaultRegisterResetState
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5712   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5716   .bss:00000000 TMC5161
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5720   .bss:00000290 Pins
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5724   .bss:000002b8 vmax_position
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5728   .bss:000002bc TMC5161_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:5732   .bss:000002c0 ADCValue
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:130    .text:00000039 $d
C:\Users\Shubham\AppData\Local\Temp\ccVYkQpK.s:130    .text:0000003a $t

UNDEFINED SYMBOLS
tmc5161_periodicJob
tmc5161_readInt
tmc5161_writeInt
tmc5161_moveBy
tmc5161_moveTo
tmc5161_stop
tmc5161_left
tmc5161_right
tmc5161_rotate
tmc5161_restore
tmc5161_reset
tmc5161_init
tmc5161_setCallback
