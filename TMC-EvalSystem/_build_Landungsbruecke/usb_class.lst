   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usb_class.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	USB_Error_Service
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	USB_Error_Service:
  24              	.LVL0:
  25              	.LFB5:
  26              		.file 1 "hal/Landungsbruecke/freescale/USB_CDC/usb_class.c"
   1:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /******************************************************************************
   2:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
   3:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Freescale Semiconductor Inc.
   4:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * (c) Copyright 2004-2010 Freescale Semiconductor, Inc.
   5:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * ALL RIGHTS RESERVED.
   6:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
   7:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
   8:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
   9:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * THIS SOFTWARE IS PROVIDED BY FREESCALE "AS IS" AND ANY EXPRESSED OR
  10:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  11:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  12:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * IN NO EVENT SHALL FREESCALE OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  13:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  14:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  15:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  16:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  17:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  18:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  19:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * THE POSSIBILITY OF SUCH DAMAGE.
  20:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  21:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  **************************************************************************//*!
  22:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  23:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @file usb_class.c
  24:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  25:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @author
  26:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  27:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @version
  28:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  29:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @date
  30:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  31:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The file contains USB stack Class module implementation.
  32:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  33:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
  34:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
  35:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /******************************************************************************
  36:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Includes
  37:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
  38:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #include "usb_class.h"      /* USB class Header File */
  39:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #include "usb_devapi.h"     /* USB device Header file */
  40:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #include "usb_framework.h"  /* USB framework module header file */
  41:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #include "hidef.h"          /* for EnableInterrupts; macro */
  42:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
  43:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #if 0 /* << EST */
  44:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #if (defined _MCF51MM256_H) || (defined _MCF51JE256_H)
  45:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #include "exceptions.h"
  46:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #endif
  47:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #else
  48:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /* device is Kinetis K20D72 << EST */
  49:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #endif
  50:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /*****************************************************************************
  51:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Constant and Macro's
  52:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
  53:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
  54:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /****************************************************************************
  55:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Global Variables
  56:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ****************************************************************************/
  57:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  /* Class callback pointer */
  58:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** static USB_CLASS_CALLBACK g_class_callback = NULL;
  59:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /* save the device state before device goes to suspend state */
  60:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** static uint_8 g_device_state_before_suspend;
  61:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /*****************************************************************************
  62:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Local Types - None
  63:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
  64:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
  65:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /*****************************************************************************
  66:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Local Functions Prototypes
  67:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
  68:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Suspend_Service (PTR_USB_DEV_EVENT_STRUCT event );
  69:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Resume_Service (PTR_USB_DEV_EVENT_STRUCT event );
  70:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Stall_Service (PTR_USB_DEV_EVENT_STRUCT event );
  71:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Sof_Service (PTR_USB_DEV_EVENT_STRUCT event );
  72:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Reset_Service (PTR_USB_DEV_EVENT_STRUCT event );
  73:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Error_Service (PTR_USB_DEV_EVENT_STRUCT event );
  74:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
  75:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /*****************************************************************************
  76:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Local Variables
  77:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
  78:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
  79:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  /*****************************************************************************
  80:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Local Functions - None
  81:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
  82:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
  83:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /*****************************************************************************
  84:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Global Functions
  85:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
  86:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #if 0 /* << EST */
  87:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #if (defined(_MC9S08MM128_H) || defined(_MC9S08JE128_H))
  88:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #pragma CODE_SEG DEFAULT
  89:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #endif
  90:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #else
  91:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /* device is Kinetis K20D72 << EST */
  92:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #endif
  93:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
  94:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  95:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Suspend_Service
  96:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  97:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function is called when host suspends the USB port
  98:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
  99:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param event     : Pointer to USB Event Structure
 100:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 101:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return None
 102:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 103:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Sets the device state as USB_STATE_SUSPEND
 104:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 105:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Suspend_Service (
 106:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     PTR_USB_DEV_EVENT_STRUCT event /* [IN] Pointer to USB Event Structure */
 107:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 108:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 109:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Get the status of the device before suspend, so that on resume we
 110:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****        can get back to the same state */
 111:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_get_status(&(event->controller_ID),
 112:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATUS_DEVICE_STATE, &g_device_state_before_suspend);
 113:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Set the device state in the Device Layer to SUSPEND */
 114:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_set_status(&(event->controller_ID), USB_STATUS_DEVICE_STATE,
 115:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATE_SUSPEND);
 116:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 117:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* let the application know that bus suspend has taken place */
 118:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     g_class_callback(event->controller_ID, USB_APP_BUS_SUSPEND, NULL);
 119:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 120:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     return;
 121:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 122:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 123:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 124:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 125:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Resume_Service
 126:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 127:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function is called when host resumes the USB port
 128:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 129:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param event     : Pointer to USB Event Structure
 130:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 131:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return None
 132:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 133:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Restore the state of the device before suspend
 134:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 135:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Resume_Service (
 136:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     PTR_USB_DEV_EVENT_STRUCT event /* [IN] Pointer to USB Event Structure */
 137:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 138:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 139:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 device_state;
 140:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_get_status(&(event->controller_ID), USB_STATUS_DEVICE_STATE,
 141:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         &device_state);
 142:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     if(device_state == USB_STATE_SUSPEND)
 143:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     {
 144:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         /*
 145:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****            Set the device state in the Device Layer to the state
 146:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****            before suspend
 147:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         */
 148:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (void)_usb_device_set_status(&(event->controller_ID),
 149:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_STATUS_DEVICE_STATE, g_device_state_before_suspend);
 150:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     }
 151:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 152:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* let the application know that bus resume has taken place */
 153:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     g_class_callback(event->controller_ID, USB_APP_BUS_RESUME, NULL);
 154:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 155:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     return;
 156:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 157:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 158:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 159:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 160:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Stall_Service
 161:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 162:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function is called when endpoint is stalled
 163:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 164:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param event: Pointer to USB Event Structure
 165:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 166:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return None
 167:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 168:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * This function sends STALL Packet for the endpoint to be stalled. Also, sets
 169:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * the status of Endpoint as STALLED
 170:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 171:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Stall_Service (
 172:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     PTR_USB_DEV_EVENT_STRUCT event /* [IN] Pointer to USB Event Structure */
 173:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 174:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 175:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     if(event->ep_num == CONTROL_ENDPOINT)
 176:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     {
 177:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         /* Update the Endpoint Status in the Device Layer to Idle */
 178:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (void)_usb_device_set_status(&(event->controller_ID),
 179:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             (uint_8)(USB_STATUS_ENDPOINT | CONTROL_ENDPOINT |
 180:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             (event->direction << USB_COMPONENT_DIRECTION_SHIFT)),
 181:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             (uint_16)USB_STATUS_IDLE);
 182:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     }
 183:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     return;
 184:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 185:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 186:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 187:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 188:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Sof_Service
 189:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 190:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function is called when SOF flag is set (from ISR)
 191:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 192:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param event: Pointer to USB Event Structure
 193:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 194:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return None
 195:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 196:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * This function is called when SOF token is received by controller. Updates
 197:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * SOF Count status.
 198:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 199:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Sof_Service (
 200:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     PTR_USB_DEV_EVENT_STRUCT event     /* [IN] Pointer to USB Event Structure */
 201:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 202:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 203:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_16 sof_count;
 204:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 205:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* update SOF */
 206:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     sof_count = event->buffer_ptr[0];
 207:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     sof_count <<= SOF_HIGH_BYTE_SHIFT;
 208:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     sof_count |= event->buffer_ptr[1];
 209:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 210:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* write SOF to status */
 211:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_set_status(&(event->controller_ID), USB_STATUS_SOF_COUNT,
 212:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8)sof_count);
 213:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     return;
 214:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 215:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 216:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 217:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Reset_Service
 218:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 219:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function is called upon a bus reset event.
 220:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****               Initializes the control endpoint.
 221:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 222:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param event: Pointer to USB Event Structure
 223:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 224:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return None
 225:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 226:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Reset Callback function. This function re-initializes CONTROL Endpoint
 227:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 228:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Reset_Service (
 229:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     PTR_USB_DEV_EVENT_STRUCT event  /* [IN] Pointer to USB Event Structure */
 230:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 231:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 232:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 233:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     USB_EP_STRUCT ep_struct;
 234:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 err;
 235:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 236:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Initialize the endpoint 0 in both directions */
 237:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     ep_struct.direction = USB_SEND;
 238:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     ep_struct.ep_num = CONTROL_ENDPOINT;
 239:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     ep_struct.size = CONTROL_MAX_PACKET_SIZE;
 240:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     ep_struct.type = USB_CONTROL_PIPE;
 241:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 242:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Deinit Endpoint in case its already initialized */
 243:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     err = _usb_device_deinit_endpoint(&(event->controller_ID),
 244:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     	ep_struct.ep_num, ep_struct.direction);
 245:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* now initialize the endpoint */
 246:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     err = _usb_device_init_endpoint(&(event->controller_ID),
 247:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     		ep_struct.ep_num, (uint_16)ep_struct.size, ep_struct.direction, ep_struct.type, TRUE);
 248:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 249:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     ep_struct.direction = USB_RECV;
 250:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Deinit Endpoint in case its already initialized */
 251:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_deinit_endpoint(&(event->controller_ID),
 252:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     	ep_struct.ep_num, ep_struct.direction);
 253:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* now initialize the endpoint */
 254:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_init_endpoint(&(event->controller_ID),
 255:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     		ep_struct.ep_num, (uint_16)ep_struct.size, ep_struct.direction, ep_struct.type, TRUE);
 256:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 257:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* set the default device state */
 258:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_set_status(&(event->controller_ID), USB_STATUS_DEVICE_STATE,
 259:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATE_DEFAULT);
 260:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 261:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* set the default device state */
 262:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_set_status(&(event->controller_ID), USB_STATUS_DEVICE,
 263:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         SELF_POWERED >> SELF_POWER_BIT_SHIFT);
 264:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 265:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* set the EndPoint Status as Idle in the device layer */
 266:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_set_status(&(event->controller_ID),
 267:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8)(USB_STATUS_ENDPOINT | CONTROL_ENDPOINT |
 268:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (USB_SEND << USB_COMPONENT_DIRECTION_SHIFT)),
 269:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATUS_IDLE);
 270:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* let the application know that bus reset has taken place */
 271:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     g_class_callback(event->controller_ID, USB_APP_BUS_RESET, NULL);
 272:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 273:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 	UNUSED(err);
 274:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     return;
 275:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 276:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 277:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 278:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 279:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Error_Service
 280:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 281:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function is called when an error has been detected
 282:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 283:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param event: Pointer to USB Event Structure
 284:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 285:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return None
 286:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 287:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Calls application with the error code received from the lower layer
 288:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 289:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Error_Service (
 290:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     PTR_USB_DEV_EVENT_STRUCT event /* [IN] Pointer to USB Event Structure */
 291:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 292:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
  27              		.loc 1 292 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 293:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* notify the application of the error */
 294:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     g_class_callback(event->controller_ID, USB_APP_ERROR,
  32              		.loc 1 294 5 view .LVU1
  33 0000 034B     		ldr	r3, .L2
 295:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8*)(&(event->errors)));
  34              		.loc 1 295 9 is_stmt 0 view .LVU2
  35 0002 0246     		mov	r2, r0
 294:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8*)(&(event->errors)));
  36              		.loc 1 294 5 view .LVU3
  37 0004 1B68     		ldr	r3, [r3]
  38 0006 12F8080B 		ldrb	r0, [r2], #8	@ zero_extendqisi2
  39              	.LVL1:
 294:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8*)(&(event->errors)));
  40              		.loc 1 294 5 view .LVU4
  41 000a 0521     		movs	r1, #5
  42 000c 1847     		bx	r3	@ indirect register sibling call
  43              	.LVL2:
  44              	.L3:
 294:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8*)(&(event->errors)));
  45              		.loc 1 294 5 view .LVU5
  46 000e 00BF     		.align	2
  47              	.L2:
  48 0010 00000000 		.word	.LANCHOR0
  49              		.cfi_endproc
  50              	.LFE5:
  52              		.align	1
  53              		.global	USB_Suspend_Service
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu softvfp
  59              	USB_Suspend_Service:
  60              	.LVL3:
  61              	.LFB0:
 108:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Get the status of the device before suspend, so that on resume we
  62              		.loc 1 108 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
 111:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATUS_DEVICE_STATE, &g_device_state_before_suspend);
  66              		.loc 1 111 5 view .LVU7
 108:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Get the status of the device before suspend, so that on resume we
  67              		.loc 1 108 1 is_stmt 0 view .LVU8
  68 0014 70B5     		push	{r4, r5, r6, lr}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 16
  71              		.cfi_offset 4, -16
  72              		.cfi_offset 5, -12
  73              		.cfi_offset 6, -8
  74              		.cfi_offset 14, -4
 111:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATUS_DEVICE_STATE, &g_device_state_before_suspend);
  75              		.loc 1 111 11 view .LVU9
  76 0016 094D     		ldr	r5, .L5
 108:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Get the status of the device before suspend, so that on resume we
  77              		.loc 1 108 1 view .LVU10
  78 0018 0446     		mov	r4, r0
 111:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATUS_DEVICE_STATE, &g_device_state_before_suspend);
  79              		.loc 1 111 11 view .LVU11
  80 001a 2A1D     		adds	r2, r5, #4
  81 001c 0121     		movs	r1, #1
  82 001e FFF7FEFF 		bl	_usb_device_get_status
  83              	.LVL4:
 114:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATE_SUSPEND);
  84              		.loc 1 114 5 is_stmt 1 view .LVU12
 114:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATE_SUSPEND);
  85              		.loc 1 114 11 is_stmt 0 view .LVU13
  86 0022 8022     		movs	r2, #128
  87 0024 0121     		movs	r1, #1
  88 0026 2046     		mov	r0, r4
  89 0028 FFF7FEFF 		bl	_usb_device_set_status
  90              	.LVL5:
 118:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
  91              		.loc 1 118 5 is_stmt 1 view .LVU14
  92 002c 2B68     		ldr	r3, [r5]
  93 002e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
  94 0030 0022     		movs	r2, #0
 121:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
  95              		.loc 1 121 1 is_stmt 0 view .LVU15
  96 0032 BDE87040 		pop	{r4, r5, r6, lr}
  97              	.LCFI1:
  98              		.cfi_restore 14
  99              		.cfi_restore 6
 100              		.cfi_restore 5
 101              		.cfi_restore 4
 102              		.cfi_def_cfa_offset 0
 103              	.LVL6:
 118:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 104              		.loc 1 118 5 view .LVU16
 105 0036 0A21     		movs	r1, #10
 106 0038 1847     		bx	r3	@ indirect register sibling call
 107              	.LVL7:
 108              	.L6:
 109 003a 00BF     		.align	2
 110              	.L5:
 111 003c 00000000 		.word	.LANCHOR0
 112              		.cfi_endproc
 113              	.LFE0:
 115              		.align	1
 116              		.global	USB_Resume_Service
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu softvfp
 122              	USB_Resume_Service:
 123              	.LVL8:
 124              	.LFB1:
 138:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 device_state;
 125              		.loc 1 138 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 139:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     (void)_usb_device_get_status(&(event->controller_ID), USB_STATUS_DEVICE_STATE,
 129              		.loc 1 139 5 view .LVU18
 140:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         &device_state);
 130              		.loc 1 140 5 view .LVU19
 138:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 device_state;
 131              		.loc 1 138 1 is_stmt 0 view .LVU20
 132 0040 37B5     		push	{r0, r1, r2, r4, r5, lr}
 133              	.LCFI2:
 134              		.cfi_def_cfa_offset 24
 135              		.cfi_offset 4, -12
 136              		.cfi_offset 5, -8
 137              		.cfi_offset 14, -4
 140:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         &device_state);
 138              		.loc 1 140 11 view .LVU21
 139 0042 0121     		movs	r1, #1
 140 0044 0DF10702 		add	r2, sp, #7
 138:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 device_state;
 141              		.loc 1 138 1 view .LVU22
 142 0048 0446     		mov	r4, r0
 140:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         &device_state);
 143              		.loc 1 140 11 view .LVU23
 144 004a FFF7FEFF 		bl	_usb_device_get_status
 145              	.LVL9:
 142:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     {
 146              		.loc 1 142 5 is_stmt 1 view .LVU24
 142:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     {
 147              		.loc 1 142 7 is_stmt 0 view .LVU25
 148 004e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 149 0052 074D     		ldr	r5, .L9
 150 0054 802B     		cmp	r3, #128
 151 0056 04D1     		bne	.L8
 148:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_STATUS_DEVICE_STATE, g_device_state_before_suspend);
 152              		.loc 1 148 9 is_stmt 1 view .LVU26
 148:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_STATUS_DEVICE_STATE, g_device_state_before_suspend);
 153              		.loc 1 148 15 is_stmt 0 view .LVU27
 154 0058 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 155 005a 0121     		movs	r1, #1
 156 005c 2046     		mov	r0, r4
 157 005e FFF7FEFF 		bl	_usb_device_set_status
 158              	.LVL10:
 159              	.L8:
 153:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 160              		.loc 1 153 5 is_stmt 1 view .LVU28
 161 0062 2B68     		ldr	r3, [r5]
 162 0064 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 163 0066 0022     		movs	r2, #0
 164 0068 0B21     		movs	r1, #11
 165 006a 9847     		blx	r3
 166              	.LVL11:
 155:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 167              		.loc 1 155 5 view .LVU29
 156:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 168              		.loc 1 156 1 is_stmt 0 view .LVU30
 169 006c 03B0     		add	sp, sp, #12
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 12
 172              		@ sp needed
 173 006e 30BD     		pop	{r4, r5, pc}
 174              	.LVL12:
 175              	.L10:
 156:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 176              		.loc 1 156 1 view .LVU31
 177              		.align	2
 178              	.L9:
 179 0070 00000000 		.word	.LANCHOR0
 180              		.cfi_endproc
 181              	.LFE1:
 183              		.align	1
 184              		.global	USB_Sof_Service
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu softvfp
 190              	USB_Sof_Service:
 191              	.LVL13:
 192              	.LFB3:
 202:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_16 sof_count;
 193              		.loc 1 202 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 203:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 198              		.loc 1 203 5 view .LVU33
 206:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     sof_count <<= SOF_HIGH_BYTE_SHIFT;
 199              		.loc 1 206 5 view .LVU34
 207:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     sof_count |= event->buffer_ptr[1];
 200              		.loc 1 207 5 view .LVU35
 208:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 201              		.loc 1 208 5 view .LVU36
 211:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8)sof_count);
 202              		.loc 1 211 5 view .LVU37
 206:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     sof_count <<= SOF_HIGH_BYTE_SHIFT;
 203              		.loc 1 206 22 is_stmt 0 view .LVU38
 204 0074 4368     		ldr	r3, [r0, #4]	@ unaligned
 211:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8)sof_count);
 205              		.loc 1 211 11 view .LVU39
 206 0076 1A88     		ldrh	r2, [r3]	@ unaligned
 207 0078 52BA     		rev16	r2, r2
 208 007a D2B2     		uxtb	r2, r2
 209 007c 0521     		movs	r1, #5
 210 007e FFF7FEBF 		b	_usb_device_set_status
 211              	.LVL14:
 211:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8)sof_count);
 212              		.loc 1 211 11 view .LVU40
 213              		.cfi_endproc
 214              	.LFE3:
 216              		.align	1
 217              		.global	USB_Reset_Service
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu softvfp
 223              	USB_Reset_Service:
 224              	.LVL15:
 225              	.LFB4:
 231:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 226              		.loc 1 231 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 233:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 err;
 230              		.loc 1 233 5 view .LVU42
 234:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 231              		.loc 1 234 5 view .LVU43
 237:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     ep_struct.ep_num = CONTROL_ENDPOINT;
 232              		.loc 1 237 5 view .LVU44
 238:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     ep_struct.size = CONTROL_MAX_PACKET_SIZE;
 233              		.loc 1 238 5 view .LVU45
 239:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     ep_struct.type = USB_CONTROL_PIPE;
 234              		.loc 1 239 5 view .LVU46
 240:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 235              		.loc 1 240 5 view .LVU47
 243:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     	ep_struct.ep_num, ep_struct.direction);
 236              		.loc 1 243 5 view .LVU48
 231:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 237              		.loc 1 231 1 is_stmt 0 view .LVU49
 238 0082 73B5     		push	{r0, r1, r4, r5, r6, lr}
 239              	.LCFI4:
 240              		.cfi_def_cfa_offset 24
 241              		.cfi_offset 4, -16
 242              		.cfi_offset 5, -12
 243              		.cfi_offset 6, -8
 244              		.cfi_offset 14, -4
 243:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     	ep_struct.ep_num, ep_struct.direction);
 245              		.loc 1 243 11 view .LVU50
 246 0084 0122     		movs	r2, #1
 246:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     		ep_struct.ep_num, (uint_16)ep_struct.size, ep_struct.direction, ep_struct.type, TRUE);
 247              		.loc 1 246 11 view .LVU51
 248 0086 0025     		movs	r5, #0
 231:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 249              		.loc 1 231 1 view .LVU52
 250 0088 0446     		mov	r4, r0
 246:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     		ep_struct.ep_num, (uint_16)ep_struct.size, ep_struct.direction, ep_struct.type, TRUE);
 251              		.loc 1 246 11 view .LVU53
 252 008a 0126     		movs	r6, #1
 243:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     	ep_struct.ep_num, ep_struct.direction);
 253              		.loc 1 243 11 view .LVU54
 254 008c 0021     		movs	r1, #0
 255 008e FFF7FEFF 		bl	_usb_device_deinit_endpoint
 256              	.LVL16:
 246:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     		ep_struct.ep_num, (uint_16)ep_struct.size, ep_struct.direction, ep_struct.type, TRUE);
 257              		.loc 1 246 5 is_stmt 1 view .LVU55
 246:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     		ep_struct.ep_num, (uint_16)ep_struct.size, ep_struct.direction, ep_struct.type, TRUE);
 258              		.loc 1 246 11 is_stmt 0 view .LVU56
 259 0092 3346     		mov	r3, r6
 260 0094 2946     		mov	r1, r5
 261 0096 CDE90056 		strd	r5, r6, [sp]
 262 009a 1022     		movs	r2, #16
 263 009c 2046     		mov	r0, r4
 264 009e FFF7FEFF 		bl	_usb_device_init_endpoint
 265              	.LVL17:
 249:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Deinit Endpoint in case its already initialized */
 266              		.loc 1 249 5 is_stmt 1 view .LVU57
 251:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     	ep_struct.ep_num, ep_struct.direction);
 267              		.loc 1 251 5 view .LVU58
 251:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     	ep_struct.ep_num, ep_struct.direction);
 268              		.loc 1 251 11 is_stmt 0 view .LVU59
 269 00a2 2A46     		mov	r2, r5
 270 00a4 2946     		mov	r1, r5
 271 00a6 2046     		mov	r0, r4
 272 00a8 FFF7FEFF 		bl	_usb_device_deinit_endpoint
 273              	.LVL18:
 254:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     		ep_struct.ep_num, (uint_16)ep_struct.size, ep_struct.direction, ep_struct.type, TRUE);
 274              		.loc 1 254 5 is_stmt 1 view .LVU60
 254:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     		ep_struct.ep_num, (uint_16)ep_struct.size, ep_struct.direction, ep_struct.type, TRUE);
 275              		.loc 1 254 11 is_stmt 0 view .LVU61
 276 00ac 2B46     		mov	r3, r5
 277 00ae 2946     		mov	r1, r5
 278 00b0 CDE90056 		strd	r5, r6, [sp]
 279 00b4 1022     		movs	r2, #16
 280 00b6 2046     		mov	r0, r4
 281 00b8 FFF7FEFF 		bl	_usb_device_init_endpoint
 282              	.LVL19:
 258:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATE_DEFAULT);
 283              		.loc 1 258 5 is_stmt 1 view .LVU62
 258:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         USB_STATE_DEFAULT);
 284              		.loc 1 258 11 is_stmt 0 view .LVU63
 285 00bc 3146     		mov	r1, r6
 286 00be 0222     		movs	r2, #2
 287 00c0 2046     		mov	r0, r4
 288 00c2 FFF7FEFF 		bl	_usb_device_set_status
 289              	.LVL20:
 262:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         SELF_POWERED >> SELF_POWER_BIT_SHIFT);
 290              		.loc 1 262 5 is_stmt 1 view .LVU64
 262:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         SELF_POWERED >> SELF_POWER_BIT_SHIFT);
 291              		.loc 1 262 11 is_stmt 0 view .LVU65
 292 00c6 3246     		mov	r2, r6
 293 00c8 0621     		movs	r1, #6
 294 00ca 2046     		mov	r0, r4
 295 00cc FFF7FEFF 		bl	_usb_device_set_status
 296              	.LVL21:
 266:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8)(USB_STATUS_ENDPOINT | CONTROL_ENDPOINT |
 297              		.loc 1 266 5 is_stmt 1 view .LVU66
 266:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (uint_8)(USB_STATUS_ENDPOINT | CONTROL_ENDPOINT |
 298              		.loc 1 266 11 is_stmt 0 view .LVU67
 299 00d0 2A46     		mov	r2, r5
 300 00d2 9021     		movs	r1, #144
 301 00d4 2046     		mov	r0, r4
 302 00d6 FFF7FEFF 		bl	_usb_device_set_status
 303              	.LVL22:
 271:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 304              		.loc 1 271 5 is_stmt 1 view .LVU68
 305 00da 044B     		ldr	r3, .L13
 306 00dc 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 307 00de 1B68     		ldr	r3, [r3]
 308 00e0 2A46     		mov	r2, r5
 309 00e2 2946     		mov	r1, r5
 275:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 310              		.loc 1 275 1 is_stmt 0 view .LVU69
 311 00e4 02B0     		add	sp, sp, #8
 312              	.LCFI5:
 313              		.cfi_def_cfa_offset 16
 314              		@ sp needed
 315 00e6 BDE87040 		pop	{r4, r5, r6, lr}
 316              	.LCFI6:
 317              		.cfi_restore 14
 318              		.cfi_restore 6
 319              		.cfi_restore 5
 320              		.cfi_restore 4
 321              		.cfi_def_cfa_offset 0
 322              	.LVL23:
 271:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 323              		.loc 1 271 5 view .LVU70
 324 00ea 1847     		bx	r3	@ indirect register sibling call
 325              	.LVL24:
 326              	.L14:
 327              		.align	2
 328              	.L13:
 329 00ec 00000000 		.word	.LANCHOR0
 330              		.cfi_endproc
 331              	.LFE4:
 333              		.align	1
 334              		.global	USB_Stall_Service
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu softvfp
 340              	USB_Stall_Service:
 341              	.LVL25:
 342              	.LFB2:
 174:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     if(event->ep_num == CONTROL_ENDPOINT)
 343              		.loc 1 174 1 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 175:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     {
 348              		.loc 1 175 5 view .LVU72
 175:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     {
 349              		.loc 1 175 7 is_stmt 0 view .LVU73
 350 00f0 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 351 00f2 3AB9     		cbnz	r2, .L15
 352              	.LVL26:
 353              	.LBB4:
 354              	.LBI4:
 171:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     PTR_USB_DEV_EVENT_STRUCT event /* [IN] Pointer to USB Event Structure */
 355              		.loc 1 171 6 is_stmt 1 view .LVU74
 356              	.LBB5:
 178:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             (uint_8)(USB_STATUS_ENDPOINT | CONTROL_ENDPOINT |
 357              		.loc 1 178 9 view .LVU75
 180:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             (uint_16)USB_STATUS_IDLE);
 358              		.loc 1 180 19 is_stmt 0 view .LVU76
 359 00f4 C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
 180:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             (uint_16)USB_STATUS_IDLE);
 360              		.loc 1 180 31 view .LVU77
 361 00f6 C901     		lsls	r1, r1, #7
 179:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             (event->direction << USB_COMPONENT_DIRECTION_SHIFT)),
 362              		.loc 1 179 61 view .LVU78
 363 00f8 41F01001 		orr	r1, r1, #16
 178:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             (uint_8)(USB_STATUS_ENDPOINT | CONTROL_ENDPOINT |
 364              		.loc 1 178 15 view .LVU79
 365 00fc 01F09001 		and	r1, r1, #144
 366 0100 FFF7FEBF 		b	_usb_device_set_status
 367              	.LVL27:
 368              	.L15:
 178:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             (uint_8)(USB_STATUS_ENDPOINT | CONTROL_ENDPOINT |
 369              		.loc 1 178 15 view .LVU80
 370              	.LBE5:
 371              	.LBE4:
 184:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 372              		.loc 1 184 1 view .LVU81
 373 0104 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE2:
 377              		.align	1
 378              		.global	USB_Class_Init
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu softvfp
 384              	USB_Class_Init:
 385              	.LVL28:
 386              	.LFB6:
 296:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     return;
 297:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 298:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 299:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 300:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 301:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 302:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Class_Init
 303:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 304:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function initializes the Class Module
 305:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 306:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param controller_ID         : Controller ID
 307:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param class_callback        : Class callback
 308:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param other_req_callback    : Other Requests Callback
 309:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 310:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return status
 311:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *         USB_OK           : When Successfull
 312:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *         Others           : Errors
 313:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 314:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Initializes USB Class Module
 315:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 316:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** uint_8 USB_Class_Init (
 317:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8    controller_ID,                /* [IN] Controller ID */
 318:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     USB_CLASS_CALLBACK class_callback,      /* [IN] Class Callback */
 319:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     USB_REQ_FUNC       other_req_callback   /* [IN] Other Requests Callback */
 320:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 321:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 387              		.loc 1 321 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 322:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 status = USB_Framework_Init(controller_ID,class_callback,
 391              		.loc 1 322 5 view .LVU83
 321:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 status = USB_Framework_Init(controller_ID,class_callback,
 392              		.loc 1 321 1 is_stmt 0 view .LVU84
 393 0106 37B5     		push	{r0, r1, r2, r4, r5, lr}
 394              	.LCFI7:
 395              		.cfi_def_cfa_offset 24
 396              		.cfi_offset 4, -12
 397              		.cfi_offset 5, -8
 398              		.cfi_offset 14, -4
 321:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 status = USB_Framework_Init(controller_ID,class_callback,
 399              		.loc 1 321 1 view .LVU85
 400 0108 0C46     		mov	r4, r1
 401 010a 8DF80700 		strb	r0, [sp, #7]
 402              		.loc 1 322 21 view .LVU86
 403 010e FFF7FEFF 		bl	USB_Framework_Init
 404              	.LVL29:
 323:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         other_req_callback);
 324:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 325:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* save callback address */
 326:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     g_class_callback = class_callback;
 405              		.loc 1 326 5 is_stmt 1 view .LVU87
 406              		.loc 1 326 22 is_stmt 0 view .LVU88
 407 0112 1F4D     		ldr	r5, .L19
 408 0114 2C60     		str	r4, [r5]
 327:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 328:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     if(status == USB_OK)
 409              		.loc 1 328 5 is_stmt 1 view .LVU89
 410              		.loc 1 328 7 is_stmt 0 view .LVU90
 411 0116 0446     		mov	r4, r0
 412              	.LVL30:
 413              		.loc 1 328 7 view .LVU91
 414 0118 0028     		cmp	r0, #0
 415 011a 36D1     		bne	.L18
 329:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     {
 330:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         /* Register all the services here */
 331:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         status |= _usb_device_register_service(controller_ID,
 416              		.loc 1 331 9 is_stmt 1 view .LVU92
 417              		.loc 1 331 19 is_stmt 0 view .LVU93
 418 011c 1D4A     		ldr	r2, .L19+4
 419 011e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 420              	.LVL31:
 421              		.loc 1 331 19 view .LVU94
 422 0122 1021     		movs	r1, #16
 423 0124 FFF7FEFF 		bl	_usb_device_register_service
 424              	.LVL32:
 332:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_BUS_RESET, USB_Reset_Service);
 333:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         status |= _usb_device_register_service(controller_ID,
 425              		.loc 1 333 19 view .LVU95
 426 0128 1B4A     		ldr	r2, .L19+8
 331:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_BUS_RESET, USB_Reset_Service);
 427              		.loc 1 331 19 view .LVU96
 428 012a 0446     		mov	r4, r0
 429              	.LVL33:
 430              		.loc 1 333 9 is_stmt 1 view .LVU97
 431              		.loc 1 333 19 is_stmt 0 view .LVU98
 432 012c 1221     		movs	r1, #18
 433 012e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 434 0132 FFF7FEFF 		bl	_usb_device_register_service
 435              	.LVL34:
 334:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_SOF,USB_Sof_Service);
 335:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         status |= _usb_device_register_service(controller_ID,
 436              		.loc 1 335 19 view .LVU99
 437 0136 194A     		ldr	r2, .L19+12
 333:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_SOF,USB_Sof_Service);
 438              		.loc 1 333 16 view .LVU100
 439 0138 0443     		orrs	r4, r4, r0
 440              	.LVL35:
 441              		.loc 1 335 19 view .LVU101
 442 013a 1421     		movs	r1, #20
 443 013c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 444 0140 FFF7FEFF 		bl	_usb_device_register_service
 445              	.LVL36:
 333:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_SOF,USB_Sof_Service);
 446              		.loc 1 333 16 view .LVU102
 447 0144 E4B2     		uxtb	r4, r4
 448              	.LVL37:
 449              		.loc 1 335 9 is_stmt 1 view .LVU103
 336:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_SLEEP,USB_Suspend_Service);
 337:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         status |= _usb_device_register_service(controller_ID,
 450              		.loc 1 337 19 is_stmt 0 view .LVU104
 451 0146 164A     		ldr	r2, .L19+16
 335:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_SLEEP,USB_Suspend_Service);
 452              		.loc 1 335 16 view .LVU105
 453 0148 0443     		orrs	r4, r4, r0
 454              	.LVL38:
 455              		.loc 1 337 19 view .LVU106
 456 014a 1321     		movs	r1, #19
 457 014c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 458 0150 FFF7FEFF 		bl	_usb_device_register_service
 459              	.LVL39:
 335:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_SLEEP,USB_Suspend_Service);
 460              		.loc 1 335 16 view .LVU107
 461 0154 E4B2     		uxtb	r4, r4
 462              	.LVL40:
 463              		.loc 1 337 9 is_stmt 1 view .LVU108
 338:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_RESUME,USB_Resume_Service);
 339:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         status |= _usb_device_register_service(controller_ID,
 464              		.loc 1 339 19 is_stmt 0 view .LVU109
 465 0156 134A     		ldr	r2, .L19+20
 337:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_RESUME,USB_Resume_Service);
 466              		.loc 1 337 16 view .LVU110
 467 0158 0443     		orrs	r4, r4, r0
 468              	.LVL41:
 469              		.loc 1 339 19 view .LVU111
 470 015a 1721     		movs	r1, #23
 471 015c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 472 0160 FFF7FEFF 		bl	_usb_device_register_service
 473              	.LVL42:
 337:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_RESUME,USB_Resume_Service);
 474              		.loc 1 337 16 view .LVU112
 475 0164 E4B2     		uxtb	r4, r4
 476              	.LVL43:
 477              		.loc 1 339 9 is_stmt 1 view .LVU113
 340:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_STALL,USB_Stall_Service);
 341:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         status |= _usb_device_register_service(controller_ID,
 478              		.loc 1 341 19 is_stmt 0 view .LVU114
 479 0166 104A     		ldr	r2, .L19+24
 339:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_STALL,USB_Stall_Service);
 480              		.loc 1 339 16 view .LVU115
 481 0168 0443     		orrs	r4, r4, r0
 482              	.LVL44:
 483              		.loc 1 341 19 view .LVU116
 484 016a 1621     		movs	r1, #22
 485 016c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 486 0170 FFF7FEFF 		bl	_usb_device_register_service
 487              	.LVL45:
 339:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_STALL,USB_Stall_Service);
 488              		.loc 1 339 16 view .LVU117
 489 0174 E4B2     		uxtb	r4, r4
 490              	.LVL46:
 491              		.loc 1 341 9 is_stmt 1 view .LVU118
 492              		.loc 1 341 16 is_stmt 0 view .LVU119
 493 0176 0443     		orrs	r4, r4, r0
 494              	.LVL47:
 342:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_ERROR,USB_Error_Service);
 343:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 344:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         /* set the device state as powered */
 345:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         (void)_usb_device_set_status(&controller_ID,
 495              		.loc 1 345 15 view .LVU120
 496 0178 0322     		movs	r2, #3
 497 017a 0121     		movs	r1, #1
 498 017c 0DF10700 		add	r0, sp, #7
 499 0180 FFF7FEFF 		bl	_usb_device_set_status
 500              	.LVL48:
 346:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_STATUS_DEVICE_STATE,USB_STATE_POWERED);
 347:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         g_device_state_before_suspend = USB_STATE_POWERED;
 501              		.loc 1 347 39 view .LVU121
 502 0184 0323     		movs	r3, #3
 341:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_SERVICE_ERROR,USB_Error_Service);
 503              		.loc 1 341 16 view .LVU122
 504 0186 E4B2     		uxtb	r4, r4
 505              	.LVL49:
 345:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****             USB_STATUS_DEVICE_STATE,USB_STATE_POWERED);
 506              		.loc 1 345 9 is_stmt 1 view .LVU123
 507              		.loc 1 347 9 view .LVU124
 508              		.loc 1 347 39 is_stmt 0 view .LVU125
 509 0188 2B71     		strb	r3, [r5, #4]
 510              	.LVL50:
 511              	.L18:
 348:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     }
 349:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 350:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     return status;
 512              		.loc 1 350 5 is_stmt 1 view .LVU126
 351:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 513              		.loc 1 351 1 is_stmt 0 view .LVU127
 514 018a 2046     		mov	r0, r4
 515 018c 03B0     		add	sp, sp, #12
 516              	.LCFI8:
 517              		.cfi_def_cfa_offset 12
 518              		@ sp needed
 519 018e 30BD     		pop	{r4, r5, pc}
 520              	.LVL51:
 521              	.L20:
 522              		.loc 1 351 1 view .LVU128
 523              		.align	2
 524              	.L19:
 525 0190 00000000 		.word	.LANCHOR0
 526 0194 00000000 		.word	USB_Reset_Service
 527 0198 00000000 		.word	USB_Sof_Service
 528 019c 00000000 		.word	USB_Suspend_Service
 529 01a0 00000000 		.word	USB_Resume_Service
 530 01a4 00000000 		.word	USB_Stall_Service
 531 01a8 00000000 		.word	USB_Error_Service
 532              		.cfi_endproc
 533              	.LFE6:
 535              		.align	1
 536              		.global	USB_Class_DeInit
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 540              		.fpu softvfp
 542              	USB_Class_DeInit:
 543              	.LVL52:
 544              	.LFB7:
 352:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 353:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 354:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 355:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Class_DeInit
 356:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 357:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function De-initializes the Class Module
 358:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 359:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param controller_ID         : Controller ID
 360:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 361:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return status
 362:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *         USB_OK           : When Successfull
 363:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *         Others           : Errors
 364:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 365:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * De-initializes USB Class Module
 366:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 367:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** uint_8 USB_Class_DeInit
 368:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** (
 369:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8    controller_ID          /* [IN] Controller ID */
 370:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 371:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 545              		.loc 1 371 1 is_stmt 1 view -0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 8
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 372:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 status = USB_OK;
 549              		.loc 1 372 5 view .LVU130
 373:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Free class_callback */
 374:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     g_class_callback = NULL;
 550              		.loc 1 374 5 view .LVU131
 371:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 status = USB_OK;
 551              		.loc 1 371 1 is_stmt 0 view .LVU132
 552 01ac 13B5     		push	{r0, r1, r4, lr}
 553              	.LCFI9:
 554              		.cfi_def_cfa_offset 16
 555              		.cfi_offset 4, -8
 556              		.cfi_offset 14, -4
 557              		.loc 1 374 22 view .LVU133
 558 01ae 1B4B     		ldr	r3, .L23
 371:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 status = USB_OK;
 559              		.loc 1 371 1 view .LVU134
 560 01b0 8DF80700 		strb	r0, [sp, #7]
 561              		.loc 1 374 22 view .LVU135
 562 01b4 0022     		movs	r2, #0
 375:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 376:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     /* Unegister all the services here */
 377:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_BUS_RESET);
 563              		.loc 1 377 15 view .LVU136
 564 01b6 1021     		movs	r1, #16
 565 01b8 0DF10700 		add	r0, sp, #7
 566              	.LVL53:
 374:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 567              		.loc 1 374 22 view .LVU137
 568 01bc 1A60     		str	r2, [r3]
 569              		.loc 1 377 5 is_stmt 1 view .LVU138
 570              		.loc 1 377 15 is_stmt 0 view .LVU139
 571 01be FFF7FEFF 		bl	_usb_device_unregister_service
 572              	.LVL54:
 378:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_SOF);
 573              		.loc 1 378 15 view .LVU140
 574 01c2 1221     		movs	r1, #18
 377:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_SOF);
 575              		.loc 1 377 15 view .LVU141
 576 01c4 0446     		mov	r4, r0
 577              	.LVL55:
 578              		.loc 1 378 5 is_stmt 1 view .LVU142
 579              		.loc 1 378 15 is_stmt 0 view .LVU143
 580 01c6 0DF10700 		add	r0, sp, #7
 581 01ca FFF7FEFF 		bl	_usb_device_unregister_service
 582              	.LVL56:
 379:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_SLEEP);
 583              		.loc 1 379 15 view .LVU144
 584 01ce 1421     		movs	r1, #20
 378:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_SOF);
 585              		.loc 1 378 12 view .LVU145
 586 01d0 0443     		orrs	r4, r4, r0
 587              	.LVL57:
 588              		.loc 1 379 15 view .LVU146
 589 01d2 0DF10700 		add	r0, sp, #7
 590 01d6 FFF7FEFF 		bl	_usb_device_unregister_service
 591              	.LVL58:
 378:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_SOF);
 592              		.loc 1 378 12 view .LVU147
 593 01da E4B2     		uxtb	r4, r4
 594              	.LVL59:
 595              		.loc 1 379 5 is_stmt 1 view .LVU148
 596              		.loc 1 379 12 is_stmt 0 view .LVU149
 597 01dc 0443     		orrs	r4, r4, r0
 598              	.LVL60:
 380:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_RESUME);
 599              		.loc 1 380 15 view .LVU150
 600 01de 1321     		movs	r1, #19
 601 01e0 0DF10700 		add	r0, sp, #7
 602 01e4 FFF7FEFF 		bl	_usb_device_unregister_service
 603              	.LVL61:
 379:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_SLEEP);
 604              		.loc 1 379 12 view .LVU151
 605 01e8 E4B2     		uxtb	r4, r4
 606              	.LVL62:
 607              		.loc 1 380 5 is_stmt 1 view .LVU152
 608              		.loc 1 380 12 is_stmt 0 view .LVU153
 609 01ea 0443     		orrs	r4, r4, r0
 610              	.LVL63:
 381:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_STALL);
 611              		.loc 1 381 15 view .LVU154
 612 01ec 1721     		movs	r1, #23
 613 01ee 0DF10700 		add	r0, sp, #7
 614 01f2 FFF7FEFF 		bl	_usb_device_unregister_service
 615              	.LVL64:
 380:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_RESUME);
 616              		.loc 1 380 12 view .LVU155
 617 01f6 E4B2     		uxtb	r4, r4
 618              	.LVL65:
 619              		.loc 1 381 5 is_stmt 1 view .LVU156
 620              		.loc 1 381 12 is_stmt 0 view .LVU157
 621 01f8 2043     		orrs	r0, r0, r4
 622 01fa C4B2     		uxtb	r4, r0
 623              	.LVL66:
 382:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     status |= _usb_device_unregister_service(&controller_ID,USB_SERVICE_ERROR);
 624              		.loc 1 382 5 is_stmt 1 view .LVU158
 625              		.loc 1 382 15 is_stmt 0 view .LVU159
 626 01fc 1621     		movs	r1, #22
 627 01fe 0DF10700 		add	r0, sp, #7
 628 0202 FFF7FEFF 		bl	_usb_device_unregister_service
 629              	.LVL67:
 630              		.loc 1 382 12 view .LVU160
 631 0206 2043     		orrs	r0, r0, r4
 632              	.LVL68:
 383:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 384:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     if(status == USB_OK)
 633              		.loc 1 384 5 is_stmt 1 view .LVU161
 634              		.loc 1 384 7 is_stmt 0 view .LVU162
 635 0208 10F0FF00 		ands	r0, r0, #255
 636              	.LVL69:
 637              		.loc 1 384 7 view .LVU163
 638 020c 03D1     		bne	.L22
 385:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         /* Call Framework deinit function */
 386:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****         status = USB_Framework_DeInit(controller_ID);
 639              		.loc 1 386 9 is_stmt 1 view .LVU164
 640              		.loc 1 386 18 is_stmt 0 view .LVU165
 641 020e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 642 0212 FFF7FEFF 		bl	USB_Framework_DeInit
 643              	.LVL70:
 644              	.L22:
 387:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 388:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     return status;
 645              		.loc 1 388 5 is_stmt 1 view .LVU166
 389:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 646              		.loc 1 389 1 is_stmt 0 view .LVU167
 647 0216 02B0     		add	sp, sp, #8
 648              	.LCFI10:
 649              		.cfi_def_cfa_offset 8
 650              		@ sp needed
 651 0218 10BD     		pop	{r4, pc}
 652              	.L24:
 653 021a 00BF     		.align	2
 654              	.L23:
 655 021c 00000000 		.word	.LANCHOR0
 656              		.cfi_endproc
 657              	.LFE7:
 659              		.align	1
 660              		.global	USB_Class_Initiate_Resume
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 664              		.fpu softvfp
 666              	USB_Class_Initiate_Resume:
 667              	.LVL71:
 668              	.LFB8:
 390:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 391:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 392:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 393:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Class_Initiate_Resume
 394:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 395:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function initiates resume procedure
 396:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 397:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param controller_ID         : Controller ID
 398:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 399:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return device_state
 400:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************/
 401:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** uint_8 USB_Class_Initiate_Resume(
 402:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 		uint_8           controller_ID /* [IN] Controller ID */
 403:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 404:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 669              		.loc 1 404 1 is_stmt 1 view -0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 16
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 405:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   uint_8 device_state, state;
 673              		.loc 1 405 3 view .LVU169
 406:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 407:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   (void)_usb_device_get_status(&controller_ID, USB_STATUS_DEVICE_STATE,
 674              		.loc 1 407 3 view .LVU170
 404:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   uint_8 device_state, state;
 675              		.loc 1 404 1 is_stmt 0 view .LVU171
 676 0220 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 677              	.LCFI11:
 678              		.cfi_def_cfa_offset 24
 679              		.cfi_offset 4, -8
 680              		.cfi_offset 14, -4
 681              		.loc 1 407 9 view .LVU172
 682 0222 0121     		movs	r1, #1
 404:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   uint_8 device_state, state;
 683              		.loc 1 404 1 view .LVU173
 684 0224 8DF80700 		strb	r0, [sp, #7]
 685              		.loc 1 407 9 view .LVU174
 686 0228 0DF10E02 		add	r2, sp, #14
 687 022c 0DF10700 		add	r0, sp, #7
 688              	.LVL72:
 689              		.loc 1 407 9 view .LVU175
 690 0230 FFF7FEFF 		bl	_usb_device_get_status
 691              	.LVL73:
 408:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   		&device_state);
 409:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   (void)_usb_device_get_status(&controller_ID, USB_STATUS_DEVICE, &state);
 692              		.loc 1 409 3 is_stmt 1 view .LVU176
 693              		.loc 1 409 9 is_stmt 0 view .LVU177
 694 0234 0DF10F02 		add	r2, sp, #15
 695 0238 0621     		movs	r1, #6
 696 023a 0DF10700 		add	r0, sp, #7
 697 023e FFF7FEFF 		bl	_usb_device_get_status
 698              	.LVL74:
 410:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   if((device_state == USB_STATE_SUSPEND) &&
 699              		.loc 1 410 3 is_stmt 1 view .LVU178
 700              		.loc 1 410 5 is_stmt 0 view .LVU179
 701 0242 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 702 0246 802B     		cmp	r3, #128
 703 0248 18D1     		bne	.L27
 704              		.loc 1 410 42 discriminator 1 view .LVU180
 705 024a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 706 024e 9B07     		lsls	r3, r3, #30
 707 0250 14D5     		bpl	.L27
 411:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****       (state & REMOTE_WAKEUP_STATUS_MASK ) &&
 412:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****       (USB_Frame_Remote_Wakeup(controller_ID) == TRUE))
 708              		.loc 1 412 8 view .LVU181
 709 0252 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 710 0256 FFF7FEFF 		bl	USB_Desc_Remote_Wakeup
 711              	.LVL75:
 411:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****       (state & REMOTE_WAKEUP_STATUS_MASK ) &&
 712              		.loc 1 411 44 view .LVU182
 713 025a 0128     		cmp	r0, #1
 714              		.loc 1 412 8 view .LVU183
 715 025c 0446     		mov	r4, r0
 411:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****       (state & REMOTE_WAKEUP_STATUS_MASK ) &&
 716              		.loc 1 411 44 view .LVU184
 717 025e 0DD1     		bne	.L27
 413:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   {
 414:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****       DisableInterrupts;
 718              		.loc 1 414 7 is_stmt 1 view .LVU185
 719              		.syntax unified
 720              	@ 414 "hal/Landungsbruecke/freescale/USB_CDC/usb_class.c" 1
 721 0260 72B6     		CPSID  i
 722              	@ 0 "" 2
 415:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #if 0
 416:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 		#if (defined _MCF51MM256_H) || (defined _MCF51JE256_H)
 417:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 		usb_int_dis();
 418:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 		#endif
 419:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #else /* << EST */
 420:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 		/* device is Kinetis K20D72 << EST */
 421:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #endif
 422:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   /* Resume the bus */
 423:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 	_usb_device_assert_resume(&controller_ID);
 723              		.loc 1 423 2 view .LVU186
 724              		.thumb
 725              		.syntax unified
 726 0262 0DF10700 		add	r0, sp, #7
 727 0266 FFF7FEFF 		bl	_usb_device_assert_resume
 728              	.LVL76:
 424:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 425:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 	device_state = USB_STATE_CONFIG;
 729              		.loc 1 425 2 view .LVU187
 730              		.loc 1 425 15 is_stmt 0 view .LVU188
 731 026a 0022     		movs	r2, #0
 426:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****       /* Set the device state in the Device Layer to DEFAULT */
 427:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****       (void)_usb_device_set_status(&controller_ID, USB_STATUS_DEVICE_STATE,
 732              		.loc 1 427 13 view .LVU189
 733 026c 2146     		mov	r1, r4
 734 026e 0DF10700 		add	r0, sp, #7
 425:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****       /* Set the device state in the Device Layer to DEFAULT */
 735              		.loc 1 425 15 view .LVU190
 736 0272 8DF80E20 		strb	r2, [sp, #14]
 737              		.loc 1 427 7 is_stmt 1 view .LVU191
 738              		.loc 1 427 13 is_stmt 0 view .LVU192
 739 0276 FFF7FEFF 		bl	_usb_device_set_status
 740              	.LVL77:
 428:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****           USB_STATE_CONFIG);
 429:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****       EnableInterrupts;;
 741              		.loc 1 429 7 is_stmt 1 view .LVU193
 742              		.syntax unified
 743              	@ 429 "hal/Landungsbruecke/freescale/USB_CDC/usb_class.c" 1
 744 027a 62B6     		CPSIE  i
 745              	@ 0 "" 2
 746              		.thumb
 747              		.syntax unified
 748              	.L27:
 749              		.loc 1 429 24 discriminator 1 view .LVU194
 430:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 	#if (defined _MCF51MM256_H) || (defined _MCF51JE256_H)
 431:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 	usb_int_en();
 432:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 	#endif
 433:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   }
 434:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****   return device_state;
 750              		.loc 1 434 3 discriminator 1 view .LVU195
 435:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 751              		.loc 1 435 1 is_stmt 0 discriminator 1 view .LVU196
 752 027c 9DF80E00 		ldrb	r0, [sp, #14]	@ zero_extendqisi2
 753 0280 04B0     		add	sp, sp, #16
 754              	.LCFI12:
 755              		.cfi_def_cfa_offset 8
 756              		@ sp needed
 757 0282 10BD     		pop	{r4, pc}
 758              		.cfi_endproc
 759              	.LFE8:
 761              		.align	1
 762              		.global	USB_Class_Send_Data
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu softvfp
 768              	USB_Class_Send_Data:
 769              	.LVL78:
 770              	.LFB9:
 436:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 437:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 438:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 439:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name  USB_Class_Send_Data
 440:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 441:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief The function calls the device to send data upon receiving an IN token
 442:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 443:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param controller_ID     : Controller ID
 444:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param ep_num            : Endpoint number
 445:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param buff_ptr          : Buffer to send
 446:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param size              : Length of transfer
 447:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 448:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return status
 449:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *         USB_OK           : When Successfull
 450:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *         Others           : Errors
 451:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 452:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Used by Application to send Data on USB Bus if not suspended
 453:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 454:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** uint_8 USB_Class_Send_Data (
 455:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8           controller_ID, /* [IN] Controller ID */
 456:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8           ep_num,        /* [IN] Endpoint number */
 457:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8_ptr       buff_ptr,      /* [IN] Buffer to send */
 458:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     USB_PACKET_SIZE  size           /* [IN] Length of the transfer */
 459:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** )
 460:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 771              		.loc 1 460 1 is_stmt 1 view -0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 8
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 461:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 462:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 status = USB_OK;
 775              		.loc 1 462 5 view .LVU198
 463:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 device_state;
 776              		.loc 1 463 5 view .LVU199
 464:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 465:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     device_state = USB_Class_Initiate_Resume(controller_ID);
 777              		.loc 1 465 5 view .LVU200
 460:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 778              		.loc 1 460 1 is_stmt 0 view .LVU201
 779 0284 73B5     		push	{r0, r1, r4, r5, r6, lr}
 780              	.LCFI13:
 781              		.cfi_def_cfa_offset 24
 782              		.cfi_offset 4, -16
 783              		.cfi_offset 5, -12
 784              		.cfi_offset 6, -8
 785              		.cfi_offset 14, -4
 460:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 786              		.loc 1 460 1 view .LVU202
 787 0286 0C46     		mov	r4, r1
 788 0288 1546     		mov	r5, r2
 789 028a 1E46     		mov	r6, r3
 790 028c 8DF80700 		strb	r0, [sp, #7]
 791              		.loc 1 465 20 view .LVU203
 792 0290 FFF7FEFF 		bl	USB_Class_Initiate_Resume
 793              	.LVL79:
 466:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 467:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     if(device_state != USB_STATE_SUSPEND)
 794              		.loc 1 467 5 is_stmt 1 view .LVU204
 795              		.loc 1 467 7 is_stmt 0 view .LVU205
 796 0294 8028     		cmp	r0, #128
 797 0296 08D0     		beq	.L34
 468:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     {    /* if not suspended */
 469:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****          status = _usb_device_send_data(&controller_ID, ep_num, buff_ptr, size);
 798              		.loc 1 469 10 is_stmt 1 view .LVU206
 799              		.loc 1 469 19 is_stmt 0 view .LVU207
 800 0298 3346     		mov	r3, r6
 801 029a 2A46     		mov	r2, r5
 802 029c 2146     		mov	r1, r4
 803 029e 0DF10700 		add	r0, sp, #7
 804              	.LVL80:
 805              		.loc 1 469 19 view .LVU208
 806 02a2 FFF7FEFF 		bl	_usb_device_send_data
 807              	.LVL81:
 808              	.L33:
 470:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     }
 471:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 472:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     return status;
 809              		.loc 1 472 5 is_stmt 1 view .LVU209
 473:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  }
 810              		.loc 1 473 2 is_stmt 0 view .LVU210
 811 02a6 02B0     		add	sp, sp, #8
 812              	.LCFI14:
 813              		.cfi_remember_state
 814              		.cfi_def_cfa_offset 16
 815              		@ sp needed
 816 02a8 70BD     		pop	{r4, r5, r6, pc}
 817              	.LVL82:
 818              	.L34:
 819              	.LCFI15:
 820              		.cfi_restore_state
 462:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 device_state;
 821              		.loc 1 462 12 view .LVU211
 822 02aa 0020     		movs	r0, #0
 823              	.LVL83:
 462:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     uint_8 device_state;
 824              		.loc 1 462 12 view .LVU212
 825 02ac FBE7     		b	.L33
 826              		.cfi_endproc
 827              	.LFE9:
 829              		.align	1
 830              		.global	USB_Class_Periodic_Task
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 834              		.fpu softvfp
 836              	USB_Class_Periodic_Task:
 837              	.LFB10:
 474:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** 
 475:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** /**************************************************************************//*!
 476:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 477:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @name   USB_Class_Periodic_Task
 478:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 479:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @brief  The function calls for periodic tasks
 480:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 481:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @param  None
 482:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *
 483:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * @return None
 484:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  ******************************************************************************
 485:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  * Called to check for any pending requests
 486:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****  *****************************************************************************/
 487:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** void USB_Class_Periodic_Task (void)
 488:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** {
 838              		.loc 1 488 1 is_stmt 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 489:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #ifdef DELAYED_PROCESSING
 490:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c ****     USB_Framework_Periodic_Task();
 491:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** #endif
 492:hal/Landungsbruecke/freescale/USB_CDC/usb_class.c **** }
 843              		.loc 1 492 1 view .LVU214
 844 02ae 7047     		bx	lr
 845              		.cfi_endproc
 846              	.LFE10:
 848              		.comm	Cpu,8,4
 849              		.bss
 850              		.align	2
 851              		.set	.LANCHOR0,. + 0
 854              	g_class_callback:
 855 0000 00000000 		.space	4
 858              	g_device_state_before_suspend:
 859 0004 00       		.space	1
 860              		.text
 861              	.Letext0:
 862              		.file 2 "hal/Landungsbruecke/freescale/USB_CDC/types.h"
 863              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 864              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 865              		.file 5 "TMC-API/tmc/helpers/Types.h"
 866              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 867              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 868              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 869              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 870              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 871              		.file 11 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 872              		.file 12 "./hal/Landungsbruecke/freescale/Cpu.h"
 873              		.file 13 "hal/Landungsbruecke/freescale/USB_CDC/usb_devapi.h"
 874              		.file 14 "hal/Landungsbruecke/freescale/USB_CDC/usb_class.h"
 875              		.file 15 "hal/Landungsbruecke/freescale/USB_CDC/usb_descriptor.h"
 876              		.file 16 "hal/Landungsbruecke/freescale/USB_CDC/usb_framework.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usb_class.c
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:23     .text:00000000 USB_Error_Service
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:48     .text:00000010 $d
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:52     .text:00000014 $t
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:59     .text:00000014 USB_Suspend_Service
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:111    .text:0000003c $d
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:115    .text:00000040 $t
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:122    .text:00000040 USB_Resume_Service
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:179    .text:00000070 $d
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:183    .text:00000074 $t
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:190    .text:00000074 USB_Sof_Service
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:223    .text:00000082 USB_Reset_Service
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:329    .text:000000ec $d
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:333    .text:000000f0 $t
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:340    .text:000000f0 USB_Stall_Service
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:384    .text:00000106 USB_Class_Init
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:525    .text:00000190 $d
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:535    .text:000001ac $t
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:542    .text:000001ac USB_Class_DeInit
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:655    .text:0000021c $d
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:659    .text:00000220 $t
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:666    .text:00000220 USB_Class_Initiate_Resume
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:768    .text:00000284 USB_Class_Send_Data
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:836    .text:000002ae USB_Class_Periodic_Task
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:850    .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:854    .bss:00000000 g_class_callback
C:\Users\Shubham\AppData\Local\Temp\ccRipyiE.s:858    .bss:00000004 g_device_state_before_suspend

UNDEFINED SYMBOLS
_usb_device_get_status
_usb_device_set_status
_usb_device_deinit_endpoint
_usb_device_init_endpoint
USB_Framework_Init
_usb_device_register_service
_usb_device_unregister_service
USB_Framework_DeInit
USB_Desc_Remote_Wakeup
_usb_device_assert_resume
_usb_device_send_data
