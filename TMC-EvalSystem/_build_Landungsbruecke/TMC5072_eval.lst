   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC5072_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	getMeasuredSpeed:
  23              	.LVL0:
  24              	.LFB13:
  25              		.file 1 "boards/TMC5072_eval.c"
   1:boards/TMC5072_eval.c **** #include "Board.h"
   2:boards/TMC5072_eval.c **** #include "tmc/ic/TMC5072/TMC5072.h"
   3:boards/TMC5072_eval.c **** 
   4:boards/TMC5072_eval.c **** #define ERRORS_VM        (1<<0)
   5:boards/TMC5072_eval.c **** #define ERRORS_VM_UNDER  (1<<1)
   6:boards/TMC5072_eval.c **** #define ERRORS_VM_OVER   (1<<2)
   7:boards/TMC5072_eval.c **** 
   8:boards/TMC5072_eval.c **** #define VM_MIN  50   // VM[V/10] min
   9:boards/TMC5072_eval.c **** #define VM_MAX  280  // VM[V/10] max +10%
  10:boards/TMC5072_eval.c **** 
  11:boards/TMC5072_eval.c **** #define DEFAULT_CHANNEL 0
  12:boards/TMC5072_eval.c **** 
  13:boards/TMC5072_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
  14:boards/TMC5072_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
  15:boards/TMC5072_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
  16:boards/TMC5072_eval.c **** static uint32_t stop(uint8_t motor);
  17:boards/TMC5072_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  18:boards/TMC5072_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  19:boards/TMC5072_eval.c **** 
  20:boards/TMC5072_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  21:boards/TMC5072_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  22:boards/TMC5072_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value);
  23:boards/TMC5072_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value);
  24:boards/TMC5072_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value);
  25:boards/TMC5072_eval.c **** 
  26:boards/TMC5072_eval.c **** static void periodicJob(uint32_t tick);
  27:boards/TMC5072_eval.c **** static void checkErrors	(uint32_t tick);
  28:boards/TMC5072_eval.c **** static void deInit(void);
  29:boards/TMC5072_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  30:boards/TMC5072_eval.c **** 
  31:boards/TMC5072_eval.c **** static uint8_t reset();
  32:boards/TMC5072_eval.c **** static void configCallback(TMC5072TypeDef *tmc5072, ConfigState state);
  33:boards/TMC5072_eval.c **** static void enableDriver(DriverState state);
  34:boards/TMC5072_eval.c **** 
  35:boards/TMC5072_eval.c **** static SPIChannelTypeDef *TMC5072_SPIChannel;
  36:boards/TMC5072_eval.c **** static TMC5072TypeDef TMC5072;
  37:boards/TMC5072_eval.c **** static uint32_t vmax_position[TMC5072_MOTORS];
  38:boards/TMC5072_eval.c **** 
  39:boards/TMC5072_eval.c **** // Translate motor number to TMC5130TypeDef
  40:boards/TMC5072_eval.c **** // When using multiple ICs you can map them here
  41:boards/TMC5072_eval.c **** static inline TMC5072TypeDef *motorToIC(uint8_t motor)
  42:boards/TMC5072_eval.c **** {
  43:boards/TMC5072_eval.c **** 	UNUSED(motor);
  44:boards/TMC5072_eval.c **** 
  45:boards/TMC5072_eval.c **** 	return &TMC5072;
  46:boards/TMC5072_eval.c **** }
  47:boards/TMC5072_eval.c **** 
  48:boards/TMC5072_eval.c **** // Translate channel number to SPI channel
  49:boards/TMC5072_eval.c **** // When using multiple ICs you can map them here
  50:boards/TMC5072_eval.c **** static inline SPIChannelTypeDef *channelToSPI(uint8_t channel)
  51:boards/TMC5072_eval.c **** {
  52:boards/TMC5072_eval.c **** 	UNUSED(channel);
  53:boards/TMC5072_eval.c **** 
  54:boards/TMC5072_eval.c **** 	return TMC5072_SPIChannel;
  55:boards/TMC5072_eval.c **** }
  56:boards/TMC5072_eval.c **** 
  57:boards/TMC5072_eval.c **** // SPI Wrapper for API
  58:boards/TMC5072_eval.c **** void tmc5072_readWriteArray(uint8_t channel, uint8_t *data, size_t length)
  59:boards/TMC5072_eval.c **** {
  60:boards/TMC5072_eval.c **** 	// Map the channel to the corresponding SPI channel
  61:boards/TMC5072_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
  62:boards/TMC5072_eval.c **** }
  63:boards/TMC5072_eval.c **** 
  64:boards/TMC5072_eval.c **** typedef struct
  65:boards/TMC5072_eval.c **** {
  66:boards/TMC5072_eval.c **** 	IOPinTypeDef  *DRV_ENN;
  67:boards/TMC5072_eval.c **** 	IOPinTypeDef  *INT_ENCA;
  68:boards/TMC5072_eval.c **** 	IOPinTypeDef  *PP_ENCB;
  69:boards/TMC5072_eval.c **** 	IOPinTypeDef  *SWSEL;
  70:boards/TMC5072_eval.c **** 	IOPinTypeDef  *SWIOP1;
  71:boards/TMC5072_eval.c **** 	IOPinTypeDef  *SWIOP2;
  72:boards/TMC5072_eval.c **** 	IOPinTypeDef  *SWION;
  73:boards/TMC5072_eval.c **** 
  74:boards/TMC5072_eval.c **** } PinsTypeDef;
  75:boards/TMC5072_eval.c **** 
  76:boards/TMC5072_eval.c **** static PinsTypeDef Pins;
  77:boards/TMC5072_eval.c **** 
  78:boards/TMC5072_eval.c **** // => Functions forwarded to API
  79:boards/TMC5072_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
  80:boards/TMC5072_eval.c **** {
  81:boards/TMC5072_eval.c **** 	tmc5072_rotate(motorToIC(motor), motor, velocity);
  82:boards/TMC5072_eval.c **** 
  83:boards/TMC5072_eval.c **** 	return 0;
  84:boards/TMC5072_eval.c **** }
  85:boards/TMC5072_eval.c **** 
  86:boards/TMC5072_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
  87:boards/TMC5072_eval.c **** {
  88:boards/TMC5072_eval.c **** 	tmc5072_right(motorToIC(motor), motor, velocity);
  89:boards/TMC5072_eval.c **** 
  90:boards/TMC5072_eval.c **** 	return 0;
  91:boards/TMC5072_eval.c **** }
  92:boards/TMC5072_eval.c **** 
  93:boards/TMC5072_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
  94:boards/TMC5072_eval.c **** {
  95:boards/TMC5072_eval.c **** 	tmc5072_left(motorToIC(motor), motor, velocity);
  96:boards/TMC5072_eval.c **** 
  97:boards/TMC5072_eval.c **** 	return 0;
  98:boards/TMC5072_eval.c **** }
  99:boards/TMC5072_eval.c **** 
 100:boards/TMC5072_eval.c **** static uint32_t stop(uint8_t motor)
 101:boards/TMC5072_eval.c **** {
 102:boards/TMC5072_eval.c **** 	tmc5072_stop(motorToIC(motor), motor);
 103:boards/TMC5072_eval.c **** 
 104:boards/TMC5072_eval.c **** 	return 0;
 105:boards/TMC5072_eval.c **** }
 106:boards/TMC5072_eval.c **** 
 107:boards/TMC5072_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
 108:boards/TMC5072_eval.c **** {
 109:boards/TMC5072_eval.c **** 	tmc5072_moveTo(motorToIC(motor), motor, position, vmax_position[motor]);
 110:boards/TMC5072_eval.c **** 
 111:boards/TMC5072_eval.c **** 	return 0;
 112:boards/TMC5072_eval.c **** }
 113:boards/TMC5072_eval.c **** 
 114:boards/TMC5072_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 115:boards/TMC5072_eval.c **** {
 116:boards/TMC5072_eval.c **** 	tmc5072_moveBy(motorToIC(motor), motor, vmax_position[motor], ticks);
 117:boards/TMC5072_eval.c **** 
 118:boards/TMC5072_eval.c **** 	return 0;
 119:boards/TMC5072_eval.c **** }
 120:boards/TMC5072_eval.c **** // <= Functions forwarded to API
 121:boards/TMC5072_eval.c **** 
 122:boards/TMC5072_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 123:boards/TMC5072_eval.c **** {
 124:boards/TMC5072_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 125:boards/TMC5072_eval.c **** 	int tempValue;
 126:boards/TMC5072_eval.c **** 
 127:boards/TMC5072_eval.c **** 	if(motor >= TMC5072_MOTORS)
 128:boards/TMC5072_eval.c **** 		return TMC_ERROR_MOTOR;
 129:boards/TMC5072_eval.c **** 
 130:boards/TMC5072_eval.c **** 	switch(type)
 131:boards/TMC5072_eval.c **** 	{
 132:boards/TMC5072_eval.c **** 	case 0:
 133:boards/TMC5072_eval.c **** 		// Target position
 134:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 135:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_XTARGET(motor));
 136:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 137:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_XTARGET(motor), *value);
 138:boards/TMC5072_eval.c **** 		}
 139:boards/TMC5072_eval.c **** 		break;
 140:boards/TMC5072_eval.c **** 	case 1:
 141:boards/TMC5072_eval.c **** 		// actual position
 142:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 143:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_XACTUAL(motor));
 144:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 145:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_XACTUAL(motor), *value);
 146:boards/TMC5072_eval.c **** 		}
 147:boards/TMC5072_eval.c **** 		break;
 148:boards/TMC5072_eval.c **** 	case 2:
 149:boards/TMC5072_eval.c **** 		// Target speed
 150:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 151:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VMAX(motor));
 152:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 153:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), abs(*value));
 154:boards/TMC5072_eval.c **** 		}
 155:boards/TMC5072_eval.c **** 		break;
 156:boards/TMC5072_eval.c **** 	case 3:
 157:boards/TMC5072_eval.c **** 		// todo CHECK 3: min max actually velocity min and velocity max? (JE) #5
 158:boards/TMC5072_eval.c **** 		// Actual speed
 159:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 160:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor));
 161:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 162:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 163:boards/TMC5072_eval.c **** 			errors |= TMC_ERROR_TYPE;
 164:boards/TMC5072_eval.c **** 		}
 165:boards/TMC5072_eval.c **** 		break;
 166:boards/TMC5072_eval.c **** 	case 4:
 167:boards/TMC5072_eval.c **** 		// Maximum speed
 168:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 169:boards/TMC5072_eval.c **** 			*value = vmax_position[motor];
 170:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 171:boards/TMC5072_eval.c **** 			vmax_position[motor] = abs(*value);
 172:boards/TMC5072_eval.c **** 			if(tmc5072_readInt(motorToIC(motor), TMC5072_RAMPMODE(motor)) == TMC5072_MODE_POSITION)
 173:boards/TMC5072_eval.c **** 				tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), vmax_position[motor]);
 174:boards/TMC5072_eval.c **** 		}
 175:boards/TMC5072_eval.c **** 		break;
 176:boards/TMC5072_eval.c **** 	case 5:
 177:boards/TMC5072_eval.c **** 		// Maximum acceleration
 178:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 179:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_AMAX(motor));
 180:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 181:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_AMAX(motor), *value);
 182:boards/TMC5072_eval.c **** 		}
 183:boards/TMC5072_eval.c **** 		break;
 184:boards/TMC5072_eval.c **** 	case 6:
 185:boards/TMC5072_eval.c **** 		// Maximum current
 186:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 187:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IRUN_MASK, TMC5
 188:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 189:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IRUN_MASK, TMC5072_IRUN
 190:boards/TMC5072_eval.c **** 		}
 191:boards/TMC5072_eval.c **** 		break;
 192:boards/TMC5072_eval.c **** 	case 7:
 193:boards/TMC5072_eval.c **** 		// Standby current
 194:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 195:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IHOLD_MASK, TMC
 196:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 197:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IHOLD_MASK, TMC5072_IHO
 198:boards/TMC5072_eval.c **** 		}
 199:boards/TMC5072_eval.c **** 		break;
 200:boards/TMC5072_eval.c **** 	case 8:
 201:boards/TMC5072_eval.c **** 		// Position reached flag
 202:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 203:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_RAMPSTAT(motor), TMC5072_POSITION_REACHED_
 204:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 205:boards/TMC5072_eval.c **** 			errors |= TMC_ERROR_TYPE;
 206:boards/TMC5072_eval.c **** 		}
 207:boards/TMC5072_eval.c **** 		break;
 208:boards/TMC5072_eval.c **** 	case 10:
 209:boards/TMC5072_eval.c **** 		// Right endstop
 210:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 211:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_RAMPSTAT(motor), TMC5072_STATUS_STOP_R_MAS
 212:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 213:boards/TMC5072_eval.c **** 			errors |= TMC_ERROR_TYPE;
 214:boards/TMC5072_eval.c **** 		}
 215:boards/TMC5072_eval.c **** 		break;
 216:boards/TMC5072_eval.c **** 	case 11:
 217:boards/TMC5072_eval.c **** 		// Left endstop
 218:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 219:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_RAMPSTAT(motor), TMC5072_STATUS_STOP_L_MAS
 220:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 221:boards/TMC5072_eval.c **** 			errors |= TMC_ERROR_TYPE;
 222:boards/TMC5072_eval.c **** 		}
 223:boards/TMC5072_eval.c **** 		break;
 224:boards/TMC5072_eval.c **** 	case 12:
 225:boards/TMC5072_eval.c **** 		// Automatic right stop
 226:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 227:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_R_ENABLE_MASK,
 228:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 229:boards/TMC5072_eval.c **** 			// configure right stop bits
 230:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_R_ENABLE_MASK, TMC5072
 231:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_POL_STOP_R_MASK, TMC5072_PO
 232:boards/TMC5072_eval.c **** 		}
 233:boards/TMC5072_eval.c **** 		break;
 234:boards/TMC5072_eval.c **** 	case 13:
 235:boards/TMC5072_eval.c **** 		// Automatic left stop
 236:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 237:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_L_ENABLE_MASK,
 238:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 239:boards/TMC5072_eval.c **** 			// configure left stop bits
 240:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_L_ENABLE_MASK, TMC5072
 241:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_POL_STOP_L_MASK, TMC5072_PO
 242:boards/TMC5072_eval.c **** 		}
 243:boards/TMC5072_eval.c **** 		break;
 244:boards/TMC5072_eval.c **** 	case 14:
 245:boards/TMC5072_eval.c **** 		// SW_MODE Register
 246:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 247:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_SWMODE(motor));
 248:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 249:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_SWMODE(motor), *value);
 250:boards/TMC5072_eval.c **** 		}
 251:boards/TMC5072_eval.c **** 		break;
 252:boards/TMC5072_eval.c **** 	case 15:
 253:boards/TMC5072_eval.c **** 		// Acceleration A1
 254:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 255:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_A1(motor));
 256:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 257:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_A1(motor), *value);
 258:boards/TMC5072_eval.c **** 		}
 259:boards/TMC5072_eval.c **** 		break;
 260:boards/TMC5072_eval.c **** 	case 16:
 261:boards/TMC5072_eval.c **** 		// Velocity V1
 262:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 263:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_V1(motor));
 264:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 265:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_V1(motor), *value);
 266:boards/TMC5072_eval.c **** 		}
 267:boards/TMC5072_eval.c **** 		break;
 268:boards/TMC5072_eval.c **** 	case 17:
 269:boards/TMC5072_eval.c **** 		// Maximum Deceleration
 270:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 271:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_DMAX(motor));
 272:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 273:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_DMAX(motor), *value);
 274:boards/TMC5072_eval.c **** 		}
 275:boards/TMC5072_eval.c **** 		break;
 276:boards/TMC5072_eval.c **** 	case 18:
 277:boards/TMC5072_eval.c **** 		// Deceleration D1
 278:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 279:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_D1(motor));
 280:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 281:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_D1(motor), *value);
 282:boards/TMC5072_eval.c **** 		}
 283:boards/TMC5072_eval.c **** 		break;
 284:boards/TMC5072_eval.c **** 	case 19:
 285:boards/TMC5072_eval.c **** 		// Velocity VSTART
 286:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 287:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VSTART(motor));
 288:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 289:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VSTART(motor), *value);
 290:boards/TMC5072_eval.c **** 		}
 291:boards/TMC5072_eval.c **** 		break;
 292:boards/TMC5072_eval.c **** 	case 20:
 293:boards/TMC5072_eval.c **** 		// Velocity VSTOP
 294:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 295:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VSTOP(motor));
 296:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 297:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VSTOP(motor), *value);
 298:boards/TMC5072_eval.c **** 		}
 299:boards/TMC5072_eval.c **** 		break;
 300:boards/TMC5072_eval.c **** 	case 21:
 301:boards/TMC5072_eval.c **** 		// Waiting time after ramp down
 302:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 303:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_TZEROWAIT(motor));
 304:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 305:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_TZEROWAIT(motor), *value);
 306:boards/TMC5072_eval.c **** 		}
 307:boards/TMC5072_eval.c **** 		break;
 308:boards/TMC5072_eval.c **** 	case 22:
 309:boards/TMC5072_eval.c **** 		// smartEnergy threshold speed
 310:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 311:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor));
 312:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 313:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor), *value);
 314:boards/TMC5072_eval.c **** 		}
 315:boards/TMC5072_eval.c **** 		break;
 316:boards/TMC5072_eval.c **** 	case 23:
 317:boards/TMC5072_eval.c **** 		// Speed threshold for high speed mode
 318:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 319:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VHIGH(motor));
 320:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 321:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VHIGH(motor), *value);
 322:boards/TMC5072_eval.c **** 		}
 323:boards/TMC5072_eval.c **** 		break;
 324:boards/TMC5072_eval.c **** 	case 24:
 325:boards/TMC5072_eval.c **** 		// Minimum speed for switching to dcStep
 326:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 327:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VDCMIN(motor));
 328:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 329:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VDCMIN(motor), *value);
 330:boards/TMC5072_eval.c **** 		}
 331:boards/TMC5072_eval.c **** 		break;
 332:boards/TMC5072_eval.c **** 	case 28:
 333:boards/TMC5072_eval.c **** 		// High speed fullstep mode
 334:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 335:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VHIGHFS_MASK, TMC
 336:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 337:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VHIGHFS_MASK, TMC5072_VHI
 338:boards/TMC5072_eval.c **** 		}
 339:boards/TMC5072_eval.c **** 		break;
 340:boards/TMC5072_eval.c **** 	case 29:
 341:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 342:boards/TMC5072_eval.c **** 			*value = motorToIC(motor)->velocity[motor];
 343:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 344:boards/TMC5072_eval.c **** 			errors |= TMC_ERROR_TYPE;
 345:boards/TMC5072_eval.c **** 		}
 346:boards/TMC5072_eval.c **** 		break;
 347:boards/TMC5072_eval.c **** 	case 140:
 348:boards/TMC5072_eval.c **** 		// Microstep Resolution
 349:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 350:boards/TMC5072_eval.c **** 			*value = 256 >> TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TOFF_MASK,
 351:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 352:boards/TMC5072_eval.c **** 			switch(*value)
 353:boards/TMC5072_eval.c **** 			{
 354:boards/TMC5072_eval.c **** 			case 1:    *value = 8;   break;
 355:boards/TMC5072_eval.c **** 			case 2:    *value = 7;   break;
 356:boards/TMC5072_eval.c **** 			case 4:    *value = 6;   break;
 357:boards/TMC5072_eval.c **** 			case 8:    *value = 5;   break;
 358:boards/TMC5072_eval.c **** 			case 16:   *value = 4;   break;
 359:boards/TMC5072_eval.c **** 			case 32:   *value = 3;   break;
 360:boards/TMC5072_eval.c **** 			case 64:   *value = 2;   break;
 361:boards/TMC5072_eval.c **** 			case 128:  *value = 1;   break;
 362:boards/TMC5072_eval.c **** 			case 256:  *value = 0;   break;
 363:boards/TMC5072_eval.c **** 			default:   *value = -1;  break;
 364:boards/TMC5072_eval.c **** 			}
 365:boards/TMC5072_eval.c **** 
 366:boards/TMC5072_eval.c **** 			if(*value != -1)
 367:boards/TMC5072_eval.c **** 			{
 368:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_MRES_MASK, TMC5072_MRES_
 369:boards/TMC5072_eval.c **** 			}
 370:boards/TMC5072_eval.c **** 			//else TMCL.reply->Status = REPLY_INVALID_VALUE;
 371:boards/TMC5072_eval.c **** 		}
 372:boards/TMC5072_eval.c **** 		break;
 373:boards/TMC5072_eval.c **** 	case 162:
 374:boards/TMC5072_eval.c **** 		// Chopper blank time
 375:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 376:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TBL_MASK, TMC5072
 377:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 378:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TBL_MASK, TMC5072_TBL_SHI
 379:boards/TMC5072_eval.c **** 		}
 380:boards/TMC5072_eval.c **** 		break;
 381:boards/TMC5072_eval.c **** 	case 163:
 382:boards/TMC5072_eval.c **** 		// Constant TOff Mode
 383:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 384:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC50
 385:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 386:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC5072_RNDTF
 387:boards/TMC5072_eval.c **** 		}
 388:boards/TMC5072_eval.c **** 		break;
 389:boards/TMC5072_eval.c **** 	case 164:
 390:boards/TMC5072_eval.c **** 		// Disable fast decay comparator
 391:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 392:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_DISFDCC_MASK, TMC
 393:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 394:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_DISFDCC_MASK, TMC5072_DIS
 395:boards/TMC5072_eval.c **** 		}
 396:boards/TMC5072_eval.c **** 		break;
 397:boards/TMC5072_eval.c **** 	case 165:
 398:boards/TMC5072_eval.c **** 		// Chopper hysteresis end / fast decay time
 399:boards/TMC5072_eval.c **** 		tempValue = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_CHM_MASK, TMC50
 400:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 401:boards/TMC5072_eval.c **** 			if(tempValue)
 402:boards/TMC5072_eval.c **** 			{
 403:boards/TMC5072_eval.c **** 				*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_HEND_MASK, TMC50
 404:boards/TMC5072_eval.c **** 			}
 405:boards/TMC5072_eval.c **** 			else
 406:boards/TMC5072_eval.c **** 			{
 407:boards/TMC5072_eval.c **** 				*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TFD_ALL_MASK, TM
 408:boards/TMC5072_eval.c **** 				*value |= (*value & (1<<11)) << 3;
 409:boards/TMC5072_eval.c **** 			}
 410:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 411:boards/TMC5072_eval.c **** 			if(tempValue)
 412:boards/TMC5072_eval.c **** 			{
 413:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_HEND_MASK, TMC5072_HEND_
 414:boards/TMC5072_eval.c **** 			}
 415:boards/TMC5072_eval.c **** 			else
 416:boards/TMC5072_eval.c **** 			{
 417:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TFD_3_MASK, TMC5072_TFD_
 418:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TFD_ALL_MASK, TMC5072_TF
 419:boards/TMC5072_eval.c **** 			}
 420:boards/TMC5072_eval.c **** 		}
 421:boards/TMC5072_eval.c **** 		break;
 422:boards/TMC5072_eval.c **** 	case 166:
 423:boards/TMC5072_eval.c **** 		// Chopper hysteresis start / sine wave offset
 424:boards/TMC5072_eval.c **** 		tempValue = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_CHM_MASK, TMC50
 425:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 426:boards/TMC5072_eval.c **** 			if(tempValue)
 427:boards/TMC5072_eval.c **** 			{
 428:boards/TMC5072_eval.c **** 				*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_HSTRT_MASK, TMC5
 429:boards/TMC5072_eval.c **** 			}
 430:boards/TMC5072_eval.c **** 			else
 431:boards/TMC5072_eval.c **** 			{
 432:boards/TMC5072_eval.c **** 				*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_OFFSET_MASK, TMC
 433:boards/TMC5072_eval.c **** 				tempValue = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TFD_3_MASK, T
 434:boards/TMC5072_eval.c **** 				*value |= tempValue << 3;
 435:boards/TMC5072_eval.c **** 			}
 436:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 437:boards/TMC5072_eval.c **** 			if(tempValue)
 438:boards/TMC5072_eval.c **** 			{
 439:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_HSTRT_MASK, TMC5072_HSTR
 440:boards/TMC5072_eval.c **** 			}
 441:boards/TMC5072_eval.c **** 			else
 442:boards/TMC5072_eval.c **** 			{
 443:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_OFFSET_MASK, TMC5072_OFF
 444:boards/TMC5072_eval.c **** 			}
 445:boards/TMC5072_eval.c **** 		}
 446:boards/TMC5072_eval.c **** 		break;
 447:boards/TMC5072_eval.c **** 	case 167:
 448:boards/TMC5072_eval.c **** 		// Chopper off time
 449:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 450:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TOFF_MASK, TMC507
 451:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 452:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TOFF_MASK, TMC5072_TOFF_S
 453:boards/TMC5072_eval.c **** 		}
 454:boards/TMC5072_eval.c **** 		break;
 455:boards/TMC5072_eval.c **** 	case 168:
 456:boards/TMC5072_eval.c **** 		// smartEnergy current minimum (SEIMIN)
 457:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 458:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEIMIN_MASK, TMC5
 459:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 460:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEIMIN_MASK, TMC5072_SEIM
 461:boards/TMC5072_eval.c **** 		}
 462:boards/TMC5072_eval.c **** 		break;
 463:boards/TMC5072_eval.c **** 	case 169:
 464:boards/TMC5072_eval.c **** 		// smartEnergy current down step
 465:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 466:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEDN_MASK, TMC507
 467:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 468:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEDN_MASK, TMC5072_SEDN_S
 469:boards/TMC5072_eval.c **** 		}
 470:boards/TMC5072_eval.c **** 		break;
 471:boards/TMC5072_eval.c **** 	case 170:
 472:boards/TMC5072_eval.c **** 		// smartEnergy hysteresis
 473:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 474:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMAX_MASK, TMC50
 475:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 476:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMAX_MASK, TMC5072_SEMAX
 477:boards/TMC5072_eval.c **** 		}
 478:boards/TMC5072_eval.c **** 		break;
 479:boards/TMC5072_eval.c **** 	case 171:
 480:boards/TMC5072_eval.c **** 		// smartEnergy current up step
 481:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 482:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEUP_MASK, TMC507
 483:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 484:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEUP_MASK, TMC5072_SEUP_S
 485:boards/TMC5072_eval.c **** 		}
 486:boards/TMC5072_eval.c **** 		break;
 487:boards/TMC5072_eval.c **** 	case 172:
 488:boards/TMC5072_eval.c **** 		// smartEnergy hysteresis start
 489:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 490:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMIN_MASK, TMC50
 491:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 492:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMIN_MASK, TMC5072_SEMIN
 493:boards/TMC5072_eval.c **** 		}
 494:boards/TMC5072_eval.c **** 		break;
 495:boards/TMC5072_eval.c **** 	case 173:
 496:boards/TMC5072_eval.c **** 		// stallGuard2 filter enable
 497:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 498:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SFILT_MASK, TMC50
 499:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 500:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SFILT_MASK, TMC5072_SFILT
 501:boards/TMC5072_eval.c **** 		}
 502:boards/TMC5072_eval.c **** 		break;
 503:boards/TMC5072_eval.c **** 	case 174:
 504:boards/TMC5072_eval.c **** 		// stallGuard2 threshold
 505:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 506:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SGT_MASK, TMC5072
 507:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 508:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 509:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SGT_MASK, TMC5072_SGT_SHI
 510:boards/TMC5072_eval.c **** 		}
 511:boards/TMC5072_eval.c **** 		break;
 512:boards/TMC5072_eval.c **** 	case 179:
 513:boards/TMC5072_eval.c **** 		// VSense
 514:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 515:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VSENSE_MASK, TMC5
 516:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 517:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VSENSE_MASK, TMC5072_VSEN
 518:boards/TMC5072_eval.c **** 		}
 519:boards/TMC5072_eval.c **** 		break;
 520:boards/TMC5072_eval.c **** 	case 180:
 521:boards/TMC5072_eval.c **** 		// smartEnergy actual current
 522:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 523:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_DRVSTATUS(motor), TMC5072_CS_ACTUAL_MASK, 
 524:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 525:boards/TMC5072_eval.c **** 			errors |= TMC_ERROR_TYPE;
 526:boards/TMC5072_eval.c **** 		}
 527:boards/TMC5072_eval.c **** 		break;
 528:boards/TMC5072_eval.c **** 	case 181:
 529:boards/TMC5072_eval.c **** 		// smartEnergy stall velocity
 530:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 531:boards/TMC5072_eval.c **** 			if(TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_SG_STOP_MASK, TMC5072_SG_
 532:boards/TMC5072_eval.c **** 			{
 533:boards/TMC5072_eval.c **** 				*value = tmc5072_readInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor));
 534:boards/TMC5072_eval.c **** 			}
 535:boards/TMC5072_eval.c **** 			else
 536:boards/TMC5072_eval.c **** 			{
 537:boards/TMC5072_eval.c **** 				*value = 0;
 538:boards/TMC5072_eval.c **** 			}
 539:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 540:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor),*value);
 541:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_SG_STOP_MASK, TMC5072_SG_ST
 542:boards/TMC5072_eval.c **** 		}
 543:boards/TMC5072_eval.c **** 		break;
 544:boards/TMC5072_eval.c **** 	case 182:
 545:boards/TMC5072_eval.c **** 		// smartEnergy threshold speed
 546:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 547:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor));
 548:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 549:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor),*value);
 550:boards/TMC5072_eval.c **** 		}
 551:boards/TMC5072_eval.c **** 		break;
 552:boards/TMC5072_eval.c **** 	case 184:
 553:boards/TMC5072_eval.c **** 		// Random TOff mode
 554:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 555:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC50
 556:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 557:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC5072_RNDTF
 558:boards/TMC5072_eval.c **** 		}
 559:boards/TMC5072_eval.c **** 		break;
 560:boards/TMC5072_eval.c **** 	case 206:
 561:boards/TMC5072_eval.c **** 		// Load value
 562:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 563:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_DRVSTATUS(motor), TMC5072_SG_RESULT_MASK, 
 564:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 565:boards/TMC5072_eval.c **** 			errors |= TMC_ERROR_TYPE;
 566:boards/TMC5072_eval.c **** 		}
 567:boards/TMC5072_eval.c **** 		break;
 568:boards/TMC5072_eval.c **** 	case 209:
 569:boards/TMC5072_eval.c **** 		// Encoder position
 570:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 571:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_XENC(motor), TMC5072_X_ENC_MASK, TMC5072_X
 572:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 573:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_XENC(motor), TMC5072_X_ENC_MASK, TMC5072_X_ENC_SHI
 574:boards/TMC5072_eval.c **** 		}
 575:boards/TMC5072_eval.c **** 		break;
 576:boards/TMC5072_eval.c **** 	case 210:
 577:boards/TMC5072_eval.c **** 		// Encoder Resolution
 578:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 579:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_ENC_CONST(motor));
 580:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 581:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_ENC_CONST(motor),*value);
 582:boards/TMC5072_eval.c **** 		}
 583:boards/TMC5072_eval.c **** 		break;
 584:boards/TMC5072_eval.c **** 	case 211:
 585:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 586:boards/TMC5072_eval.c **** 			// encoder enable
 587:boards/TMC5072_eval.c **** 			switch(motor)
 588:boards/TMC5072_eval.c **** 			{
 589:boards/TMC5072_eval.c **** 			case 0:
 590:boards/TMC5072_eval.c **** 				tempValue = tmc5072_readInt(motorToIC(motor), TMC5072_GCONF);
 591:boards/TMC5072_eval.c **** 				tempValue &= 0x18; //(1<<3) | (1<<4);
 592:boards/TMC5072_eval.c **** 				*value = (tempValue == 0x10) ? 1 : 0;
 593:boards/TMC5072_eval.c **** 				break;
 594:boards/TMC5072_eval.c **** 			case 1:
 595:boards/TMC5072_eval.c **** 				tempValue = tmc5072_readInt(motorToIC(motor), TMC5072_GCONF);
 596:boards/TMC5072_eval.c **** 				tempValue &= 0x60; //(1<<5) | (1<<6);
 597:boards/TMC5072_eval.c **** 				*value = (tempValue == 0x20) ? 1 : 0;
 598:boards/TMC5072_eval.c **** 				break;
 599:boards/TMC5072_eval.c **** 			}
 600:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 601:boards/TMC5072_eval.c **** 			// encoder enable
 602:boards/TMC5072_eval.c **** 			switch(motor)
 603:boards/TMC5072_eval.c **** 			{
 604:boards/TMC5072_eval.c **** 			case 0:
 605:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_POSCMP_ENABLE_MASK, TMC5072_POSCMP
 606:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC1_REFSEL_MASK, TMC5072_ENC1_REF
 607:boards/TMC5072_eval.c **** 				break;
 608:boards/TMC5072_eval.c **** 			case 1:		// enable ENCODER2 - disable REF
 609:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC2_ENABLE_MASK, TMC5072_ENC2_ENA
 610:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC2_REFSEL_MASK, TMC5072_ENC2_REF
 611:boards/TMC5072_eval.c **** 				break;
 612:boards/TMC5072_eval.c **** 			}
 613:boards/TMC5072_eval.c **** 		}
 614:boards/TMC5072_eval.c **** 		break;
 615:boards/TMC5072_eval.c **** 	default:
 616:boards/TMC5072_eval.c **** 		errors |= TMC_ERROR_TYPE;
 617:boards/TMC5072_eval.c **** 		break;
 618:boards/TMC5072_eval.c **** 	}
 619:boards/TMC5072_eval.c **** 	return errors;
 620:boards/TMC5072_eval.c **** }
 621:boards/TMC5072_eval.c **** 
 622:boards/TMC5072_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 623:boards/TMC5072_eval.c **** {
 624:boards/TMC5072_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 625:boards/TMC5072_eval.c **** }
 626:boards/TMC5072_eval.c **** 
 627:boards/TMC5072_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 628:boards/TMC5072_eval.c **** {
 629:boards/TMC5072_eval.c **** 	return handleParameter(READ, motor, type, value);
 630:boards/TMC5072_eval.c **** }
 631:boards/TMC5072_eval.c **** 
 632:boards/TMC5072_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value)
 633:boards/TMC5072_eval.c **** {
  26              		.loc 1 633 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 634:boards/TMC5072_eval.c **** 	if(motor >= TMC5072_MOTORS)
  31              		.loc 1 634 2 view .LVU1
  32              		.loc 1 634 4 is_stmt 0 view .LVU2
  33 0000 0128     		cmp	r0, #1
 635:boards/TMC5072_eval.c **** 		return TMC_ERROR_MOTOR;
 636:boards/TMC5072_eval.c **** 
 637:boards/TMC5072_eval.c **** 	*value = TMC5072.velocity[motor];
  34              		.loc 1 637 2 is_stmt 1 view .LVU3
  35              		.loc 1 637 27 is_stmt 0 view .LVU4
  36 0002 9FBF     		itttt	ls
  37 0004 044B     		ldrls	r3, .L4
  38 0006 03EB8000 		addls	r0, r3, r0, lsl #2
  39              	.LVL1:
  40              		.loc 1 637 9 view .LVU5
  41 000a C368     		ldrls	r3, [r0, #12]
  42 000c 0B60     		strls	r3, [r1]
 638:boards/TMC5072_eval.c **** 
 639:boards/TMC5072_eval.c **** 	return TMC_ERROR_NONE;
  43              		.loc 1 639 2 is_stmt 1 view .LVU6
  44              		.loc 1 639 9 is_stmt 0 view .LVU7
  45 000e 94BF     		ite	ls
  46 0010 0020     		movls	r0, #0
 635:boards/TMC5072_eval.c **** 		return TMC_ERROR_MOTOR;
  47              		.loc 1 635 10 view .LVU8
  48 0012 0820     		movhi	r0, #8
 640:boards/TMC5072_eval.c **** }
  49              		.loc 1 640 1 view .LVU9
  50 0014 7047     		bx	lr
  51              	.L5:
  52 0016 00BF     		.align	2
  53              	.L4:
  54 0018 00000000 		.word	.LANCHOR0
  55              		.cfi_endproc
  56              	.LFE13:
  58              		.align	1
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	checkErrors:
  65              	.LVL2:
  66              	.LFB17:
 641:boards/TMC5072_eval.c **** 
 642:boards/TMC5072_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
 643:boards/TMC5072_eval.c **** {
 644:boards/TMC5072_eval.c **** 	UNUSED(motor);
 645:boards/TMC5072_eval.c **** 	tmc5072_writeInt(motorToIC(motor), address, value);
 646:boards/TMC5072_eval.c **** }
 647:boards/TMC5072_eval.c **** 
 648:boards/TMC5072_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
 649:boards/TMC5072_eval.c **** {
 650:boards/TMC5072_eval.c **** 	UNUSED(motor);
 651:boards/TMC5072_eval.c **** 	*value = tmc5072_readInt(motorToIC(motor), address);
 652:boards/TMC5072_eval.c **** }
 653:boards/TMC5072_eval.c **** 
 654:boards/TMC5072_eval.c **** static void periodicJob(uint32_t tick)
 655:boards/TMC5072_eval.c **** {
 656:boards/TMC5072_eval.c **** 	for(int motor = 0; motor < TMC5072_MOTORS; motor++)
 657:boards/TMC5072_eval.c **** 	{
 658:boards/TMC5072_eval.c **** 		tmc5072_periodicJob(motorToIC(motor), tick);
 659:boards/TMC5072_eval.c **** 	}
 660:boards/TMC5072_eval.c **** }
 661:boards/TMC5072_eval.c **** 
 662:boards/TMC5072_eval.c **** static void checkErrors(uint32_t tick)
 663:boards/TMC5072_eval.c **** {
  67              		.loc 1 663 1 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
 664:boards/TMC5072_eval.c **** 	UNUSED(tick);
  72              		.loc 1 664 2 view .LVU11
 665:boards/TMC5072_eval.c **** 	Evalboards.ch1.errors = 0;
  73              		.loc 1 665 2 view .LVU12
  74              		.loc 1 665 24 is_stmt 0 view .LVU13
  75 001c 014B     		ldr	r3, .L7
  76 001e 0022     		movs	r2, #0
  77 0020 9A60     		str	r2, [r3, #8]
 666:boards/TMC5072_eval.c **** }
  78              		.loc 1 666 1 view .LVU14
  79 0022 7047     		bx	lr
  80              	.L8:
  81              		.align	2
  82              	.L7:
  83 0024 00000000 		.word	Evalboards
  84              		.cfi_endproc
  85              	.LFE17:
  87              		.align	1
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	periodicJob:
  94              	.LVL3:
  95              	.LFB16:
 655:boards/TMC5072_eval.c **** 	for(int motor = 0; motor < TMC5072_MOTORS; motor++)
  96              		.loc 1 655 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 656:boards/TMC5072_eval.c **** 	{
 100              		.loc 1 656 2 view .LVU16
 101              	.LBB308:
 656:boards/TMC5072_eval.c **** 	{
 102              		.loc 1 656 6 view .LVU17
 656:boards/TMC5072_eval.c **** 	{
 103              		.loc 1 656 21 view .LVU18
 658:boards/TMC5072_eval.c **** 	}
 104              		.loc 1 658 3 view .LVU19
 105              	.LBB309:
 106              	.LBI309:
  41:boards/TMC5072_eval.c **** {
 107              		.loc 1 41 31 view .LVU20
  41:boards/TMC5072_eval.c **** {
 108              		.loc 1 41 31 is_stmt 0 view .LVU21
 109              	.LBE309:
 110              	.LBE308:
  43:boards/TMC5072_eval.c **** 
 111              		.loc 1 43 2 is_stmt 1 view .LVU22
  45:boards/TMC5072_eval.c **** }
 112              		.loc 1 45 2 view .LVU23
 655:boards/TMC5072_eval.c **** 	for(int motor = 0; motor < TMC5072_MOTORS; motor++)
 113              		.loc 1 655 1 is_stmt 0 view .LVU24
 114 0028 38B5     		push	{r3, r4, r5, lr}
 115              	.LCFI0:
 116              		.cfi_def_cfa_offset 16
 117              		.cfi_offset 3, -16
 118              		.cfi_offset 4, -12
 119              		.cfi_offset 5, -8
 120              		.cfi_offset 14, -4
 121              	.LBB311:
 658:boards/TMC5072_eval.c **** 	}
 122              		.loc 1 658 3 view .LVU25
 123 002a 064D     		ldr	r5, .L10
 124              	.LBE311:
 655:boards/TMC5072_eval.c **** 	for(int motor = 0; motor < TMC5072_MOTORS; motor++)
 125              		.loc 1 655 1 view .LVU26
 126 002c 0446     		mov	r4, r0
 127              	.LBB312:
 658:boards/TMC5072_eval.c **** 	}
 128              		.loc 1 658 3 view .LVU27
 129 002e 0146     		mov	r1, r0
 130 0030 2846     		mov	r0, r5
 131              	.LVL4:
 658:boards/TMC5072_eval.c **** 	}
 132              		.loc 1 658 3 view .LVU28
 133 0032 FFF7FEFF 		bl	tmc5072_periodicJob
 134              	.LVL5:
 656:boards/TMC5072_eval.c **** 	{
 135              		.loc 1 656 45 is_stmt 1 view .LVU29
 656:boards/TMC5072_eval.c **** 	{
 136              		.loc 1 656 21 view .LVU30
 658:boards/TMC5072_eval.c **** 	}
 137              		.loc 1 658 3 view .LVU31
 138              	.LBB310:
  41:boards/TMC5072_eval.c **** {
 139              		.loc 1 41 31 view .LVU32
  41:boards/TMC5072_eval.c **** {
 140              		.loc 1 41 31 is_stmt 0 view .LVU33
 141              	.LBE310:
 142              	.LBE312:
  43:boards/TMC5072_eval.c **** 
 143              		.loc 1 43 2 is_stmt 1 view .LVU34
  45:boards/TMC5072_eval.c **** }
 144              		.loc 1 45 2 view .LVU35
 145              	.LBB313:
 658:boards/TMC5072_eval.c **** 	}
 146              		.loc 1 658 3 is_stmt 0 view .LVU36
 147 0036 2146     		mov	r1, r4
 148 0038 2846     		mov	r0, r5
 149              	.LBE313:
 660:boards/TMC5072_eval.c **** 
 150              		.loc 1 660 1 view .LVU37
 151 003a BDE83840 		pop	{r3, r4, r5, lr}
 152              	.LCFI1:
 153              		.cfi_restore 14
 154              		.cfi_restore 5
 155              		.cfi_restore 4
 156              		.cfi_restore 3
 157              		.cfi_def_cfa_offset 0
 158              	.LVL6:
 159              	.LBB314:
 658:boards/TMC5072_eval.c **** 	}
 160              		.loc 1 658 3 view .LVU38
 161 003e FFF7FEBF 		b	tmc5072_periodicJob
 162              	.LVL7:
 163              	.L11:
 658:boards/TMC5072_eval.c **** 	}
 164              		.loc 1 658 3 view .LVU39
 165 0042 00BF     		.align	2
 166              	.L10:
 167 0044 00000000 		.word	.LANCHOR0
 168              	.LBE314:
 169              		.cfi_endproc
 170              	.LFE16:
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu softvfp
 178              	readRegister:
 179              	.LVL8:
 180              	.LFB15:
 649:boards/TMC5072_eval.c **** 	UNUSED(motor);
 181              		.loc 1 649 1 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 650:boards/TMC5072_eval.c **** 	*value = tmc5072_readInt(motorToIC(motor), address);
 185              		.loc 1 650 2 view .LVU41
 651:boards/TMC5072_eval.c **** }
 186              		.loc 1 651 2 view .LVU42
 187              	.LBB315:
 188              	.LBI315:
  41:boards/TMC5072_eval.c **** {
 189              		.loc 1 41 31 view .LVU43
  41:boards/TMC5072_eval.c **** {
 190              		.loc 1 41 31 is_stmt 0 view .LVU44
 191              	.LBE315:
  43:boards/TMC5072_eval.c **** 
 192              		.loc 1 43 2 is_stmt 1 view .LVU45
  45:boards/TMC5072_eval.c **** }
 193              		.loc 1 45 2 view .LVU46
 649:boards/TMC5072_eval.c **** 	UNUSED(motor);
 194              		.loc 1 649 1 is_stmt 0 view .LVU47
 195 0048 10B5     		push	{r4, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 4, -8
 199              		.cfi_offset 14, -4
 651:boards/TMC5072_eval.c **** }
 200              		.loc 1 651 11 view .LVU48
 201 004a 0348     		ldr	r0, .L13
 202              	.LVL9:
 649:boards/TMC5072_eval.c **** 	UNUSED(motor);
 203              		.loc 1 649 1 view .LVU49
 204 004c 1446     		mov	r4, r2
 651:boards/TMC5072_eval.c **** }
 205              		.loc 1 651 11 view .LVU50
 206 004e FFF7FEFF 		bl	tmc5072_readInt
 207              	.LVL10:
 651:boards/TMC5072_eval.c **** }
 208              		.loc 1 651 9 view .LVU51
 209 0052 2060     		str	r0, [r4]
 652:boards/TMC5072_eval.c **** 
 210              		.loc 1 652 1 view .LVU52
 211 0054 10BD     		pop	{r4, pc}
 212              	.LVL11:
 213              	.L14:
 652:boards/TMC5072_eval.c **** 
 214              		.loc 1 652 1 view .LVU53
 215 0056 00BF     		.align	2
 216              	.L13:
 217 0058 00000000 		.word	.LANCHOR0
 218              		.cfi_endproc
 219              	.LFE15:
 221              		.align	1
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	writeRegister:
 228              	.LVL12:
 229              	.LFB14:
 643:boards/TMC5072_eval.c **** 	UNUSED(motor);
 230              		.loc 1 643 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 644:boards/TMC5072_eval.c **** 	tmc5072_writeInt(motorToIC(motor), address, value);
 235              		.loc 1 644 2 view .LVU55
 645:boards/TMC5072_eval.c **** }
 236              		.loc 1 645 2 view .LVU56
 237              	.LBB316:
 238              	.LBI316:
  41:boards/TMC5072_eval.c **** {
 239              		.loc 1 41 31 view .LVU57
  41:boards/TMC5072_eval.c **** {
 240              		.loc 1 41 31 is_stmt 0 view .LVU58
 241              	.LBE316:
  43:boards/TMC5072_eval.c **** 
 242              		.loc 1 43 2 is_stmt 1 view .LVU59
  45:boards/TMC5072_eval.c **** }
 243              		.loc 1 45 2 view .LVU60
 645:boards/TMC5072_eval.c **** }
 244              		.loc 1 645 2 is_stmt 0 view .LVU61
 245 005c 0148     		ldr	r0, .L16
 246              	.LVL13:
 645:boards/TMC5072_eval.c **** }
 247              		.loc 1 645 2 view .LVU62
 248 005e FFF7FEBF 		b	tmc5072_writeInt
 249              	.LVL14:
 250              	.L17:
 645:boards/TMC5072_eval.c **** }
 251              		.loc 1 645 2 view .LVU63
 252 0062 00BF     		.align	2
 253              	.L16:
 254 0064 00000000 		.word	.LANCHOR0
 255              		.cfi_endproc
 256              	.LFE14:
 258              		.align	1
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu softvfp
 264              	handleParameter:
 265              	.LVL15:
 266              	.LFB10:
 123:boards/TMC5072_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 267              		.loc 1 123 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 127:boards/TMC5072_eval.c **** 		return TMC_ERROR_MOTOR;
 271              		.loc 1 127 4 is_stmt 0 view .LVU65
 272 0068 0129     		cmp	r1, #1
 123:boards/TMC5072_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 273              		.loc 1 123 1 view .LVU66
 274 006a F8B5     		push	{r3, r4, r5, r6, r7, lr}
 275              	.LCFI3:
 276              		.cfi_def_cfa_offset 24
 277              		.cfi_offset 3, -24
 278              		.cfi_offset 4, -20
 279              		.cfi_offset 5, -16
 280              		.cfi_offset 6, -12
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 123:boards/TMC5072_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 283              		.loc 1 123 1 view .LVU67
 284 006c 0446     		mov	r4, r0
 124:boards/TMC5072_eval.c **** 	int tempValue;
 285              		.loc 1 124 2 is_stmt 1 view .LVU68
 286              	.LVL16:
 125:boards/TMC5072_eval.c **** 
 287              		.loc 1 125 2 view .LVU69
 127:boards/TMC5072_eval.c **** 		return TMC_ERROR_MOTOR;
 288              		.loc 1 127 2 view .LVU70
 123:boards/TMC5072_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 289              		.loc 1 123 1 is_stmt 0 view .LVU71
 290 006e 1D46     		mov	r5, r3
 127:boards/TMC5072_eval.c **** 		return TMC_ERROR_MOTOR;
 291              		.loc 1 127 4 view .LVU72
 292 0070 00F20186 		bhi	.L150
 130:boards/TMC5072_eval.c **** 	{
 293              		.loc 1 130 2 is_stmt 1 view .LVU73
 294 0074 1D2A     		cmp	r2, #29
 295 0076 45D9     		bls	.L172
 296 0078 B82A     		cmp	r2, #184
 297 007a 66D8     		bhi	.L74
 298 007c 8B2A     		cmp	r2, #139
 299 007e 0ED8     		bhi	.L75
 300 0080 0424     		movs	r4, #4
 301              	.LVL17:
 302              	.L18:
 620:boards/TMC5072_eval.c **** 
 303              		.loc 1 620 1 is_stmt 0 view .LVU74
 304 0082 2046     		mov	r0, r4
 305 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 306              	.LVL18:
 307              	.L76:
 620:boards/TMC5072_eval.c **** 
 308              		.loc 1 620 1 view .LVU75
 309 0086 CE3A     		subs	r2, r2, #206
 310              	.LVL19:
 620:boards/TMC5072_eval.c **** 
 311              		.loc 1 620 1 view .LVU76
 312 0088 052A     		cmp	r2, #5
 313 008a 00F2F785 		bhi	.L151
 314 008e DFE812F0 		tbh	[pc, r2, lsl #1]
 315              	.L23:
 316 0092 5705     		.2byte	(.L26-.L23)/2
 317 0094 F505     		.2byte	(.L151-.L23)/2
 318 0096 F505     		.2byte	(.L151-.L23)/2
 319 0098 6605     		.2byte	(.L25-.L23)/2
 320 009a 7E05     		.2byte	(.L24-.L23)/2
 321 009c 9205     		.2byte	(.L22-.L23)/2
 322              	.LVL20:
 323              		.p2align 1
 324              	.L75:
 620:boards/TMC5072_eval.c **** 
 325              		.loc 1 620 1 view .LVU77
 326 009e 8C3A     		subs	r2, r2, #140
 327              	.LVL21:
 620:boards/TMC5072_eval.c **** 
 328              		.loc 1 620 1 view .LVU78
 329 00a0 2C2A     		cmp	r2, #44
 330 00a2 00F2EE85 		bhi	.L152
 331 00a6 DFE812F0 		tbh	[pc, r2, lsl #1]
 332              	.LVL22:
 333              	.L28:
 334 00aa 8E02     		.2byte	(.L46-.L28)/2
 335 00ac EC05     		.2byte	(.L152-.L28)/2
 336 00ae EC05     		.2byte	(.L152-.L28)/2
 337 00b0 EC05     		.2byte	(.L152-.L28)/2
 338 00b2 EC05     		.2byte	(.L152-.L28)/2
 339 00b4 EC05     		.2byte	(.L152-.L28)/2
 340 00b6 EC05     		.2byte	(.L152-.L28)/2
 341 00b8 EC05     		.2byte	(.L152-.L28)/2
 342 00ba EC05     		.2byte	(.L152-.L28)/2
 343 00bc EC05     		.2byte	(.L152-.L28)/2
 344 00be EC05     		.2byte	(.L152-.L28)/2
 345 00c0 EC05     		.2byte	(.L152-.L28)/2
 346 00c2 EC05     		.2byte	(.L152-.L28)/2
 347 00c4 EC05     		.2byte	(.L152-.L28)/2
 348 00c6 EC05     		.2byte	(.L152-.L28)/2
 349 00c8 EC05     		.2byte	(.L152-.L28)/2
 350 00ca EC05     		.2byte	(.L152-.L28)/2
 351 00cc EC05     		.2byte	(.L152-.L28)/2
 352 00ce EC05     		.2byte	(.L152-.L28)/2
 353 00d0 EC05     		.2byte	(.L152-.L28)/2
 354 00d2 EC05     		.2byte	(.L152-.L28)/2
 355 00d4 EC05     		.2byte	(.L152-.L28)/2
 356 00d6 E302     		.2byte	(.L45-.L28)/2
 357 00d8 FF02     		.2byte	(.L44-.L28)/2
 358 00da 1D03     		.2byte	(.L43-.L28)/2
 359 00dc 3903     		.2byte	(.L42-.L28)/2
 360 00de 8103     		.2byte	(.L41-.L28)/2
 361 00e0 C403     		.2byte	(.L40-.L28)/2
 362 00e2 DF03     		.2byte	(.L39-.L28)/2
 363 00e4 FC03     		.2byte	(.L38-.L28)/2
 364 00e6 1A04     		.2byte	(.L37-.L28)/2
 365 00e8 3804     		.2byte	(.L36-.L28)/2
 366 00ea 5604     		.2byte	(.L35-.L28)/2
 367 00ec 7304     		.2byte	(.L34-.L28)/2
 368 00ee 9304     		.2byte	(.L33-.L28)/2
 369 00f0 EC05     		.2byte	(.L152-.L28)/2
 370 00f2 EC05     		.2byte	(.L152-.L28)/2
 371 00f4 EC05     		.2byte	(.L152-.L28)/2
 372 00f6 EC05     		.2byte	(.L152-.L28)/2
 373 00f8 B804     		.2byte	(.L32-.L28)/2
 374 00fa D604     		.2byte	(.L31-.L28)/2
 375 00fc E504     		.2byte	(.L30-.L28)/2
 376 00fe 1905     		.2byte	(.L29-.L28)/2
 377 0100 EC05     		.2byte	(.L152-.L28)/2
 378 0102 2D05     		.2byte	(.L27-.L28)/2
 379              		.p2align 1
 380              	.L172:
 620:boards/TMC5072_eval.c **** 
 381              		.loc 1 620 1 view .LVU79
 382 0104 1D2A     		cmp	r2, #29
 383 0106 00F2BF85 		bhi	.L153
 384 010a DFE812F0 		tbh	[pc, r2, lsl #1]
 385              	.LVL23:
 386              	.L48:
 387 010e 2500     		.2byte	(.L73-.L48)/2
 388 0110 3700     		.2byte	(.L72-.L48)/2
 389 0112 4900     		.2byte	(.L71-.L48)/2
 390 0114 5E00     		.2byte	(.L70-.L48)/2
 391 0116 7200     		.2byte	(.L69-.L48)/2
 392 0118 9400     		.2byte	(.L68-.L48)/2
 393 011a A600     		.2byte	(.L67-.L48)/2
 394 011c C400     		.2byte	(.L66-.L48)/2
 395 011e E100     		.2byte	(.L65-.L48)/2
 396 0120 BD05     		.2byte	(.L153-.L48)/2
 397 0122 F100     		.2byte	(.L64-.L48)/2
 398 0124 0101     		.2byte	(.L63-.L48)/2
 399 0126 1101     		.2byte	(.L62-.L48)/2
 400 0128 4001     		.2byte	(.L61-.L48)/2
 401 012a 6F01     		.2byte	(.L60-.L48)/2
 402 012c 8101     		.2byte	(.L59-.L48)/2
 403 012e 9501     		.2byte	(.L58-.L48)/2
 404 0130 A701     		.2byte	(.L57-.L48)/2
 405 0132 B901     		.2byte	(.L56-.L48)/2
 406 0134 CB01     		.2byte	(.L55-.L48)/2
 407 0136 DD01     		.2byte	(.L54-.L48)/2
 408 0138 EF01     		.2byte	(.L53-.L48)/2
 409 013a 0102     		.2byte	(.L52-.L48)/2
 410 013c 1302     		.2byte	(.L51-.L48)/2
 411 013e 2502     		.2byte	(.L50-.L48)/2
 412 0140 BD05     		.2byte	(.L153-.L48)/2
 413 0142 BD05     		.2byte	(.L153-.L48)/2
 414 0144 BD05     		.2byte	(.L153-.L48)/2
 415 0146 3702     		.2byte	(.L49-.L48)/2
 416 0148 5302     		.2byte	(.L47-.L48)/2
 417              		.p2align 1
 418              	.L74:
 130:boards/TMC5072_eval.c **** 	{
 419              		.loc 1 130 2 view .LVU80
 420 014a 02F13203 		add	r3, r2, #50
 421              	.LVL24:
 130:boards/TMC5072_eval.c **** 	{
 422              		.loc 1 130 2 view .LVU81
 423 014e DBB2     		uxtb	r3, r3
 424 0150 052B     		cmp	r3, #5
 425 0152 98D9     		bls	.L76
 426 0154 0424     		movs	r4, #4
 427 0156 94E7     		b	.L18
 428              	.L73:
 134:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_XTARGET(motor));
 429              		.loc 1 134 3 is_stmt 1 view .LVU82
 430 0158 2023     		movs	r3, #32
 431 015a 03FA01F1 		lsl	r1, r3, r1
 432              	.LVL25:
 134:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_XTARGET(motor));
 433              		.loc 1 134 3 is_stmt 0 view .LVU83
 434 015e 41F00D01 		orr	r1, r1, #13
 435 0162 C9B2     		uxtb	r1, r1
 134:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_XTARGET(motor));
 436              		.loc 1 134 5 view .LVU84
 437 0164 20B9     		cbnz	r0, .L77
 135:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 438              		.loc 1 135 4 is_stmt 1 view .LVU85
 439              	.LBB317:
 440              	.LBI317:
  41:boards/TMC5072_eval.c **** {
 441              		.loc 1 41 31 view .LVU86
 442              	.LVL26:
  41:boards/TMC5072_eval.c **** {
 443              		.loc 1 41 31 is_stmt 0 view .LVU87
 444              	.LBE317:
  43:boards/TMC5072_eval.c **** 
 445              		.loc 1 43 2 is_stmt 1 view .LVU88
  45:boards/TMC5072_eval.c **** }
 446              		.loc 1 45 2 view .LVU89
 135:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 447              		.loc 1 135 13 is_stmt 0 view .LVU90
 448 0166 B348     		ldr	r0, .L174
 449              	.LVL27:
 135:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 450              		.loc 1 135 13 view .LVU91
 451 0168 FFF7FEFF 		bl	tmc5072_readInt
 452              	.LVL28:
 135:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 453              		.loc 1 135 11 view .LVU92
 454 016c 2860     		str	r0, [r5]
 455 016e 88E7     		b	.L18
 456              	.LVL29:
 457              	.L77:
 136:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_XTARGET(motor), *value);
 458              		.loc 1 136 10 is_stmt 1 view .LVU93
 137:boards/TMC5072_eval.c **** 		}
 459              		.loc 1 137 4 view .LVU94
 460              	.LBB318:
 461              	.LBI318:
  41:boards/TMC5072_eval.c **** {
 462              		.loc 1 41 31 view .LVU95
  41:boards/TMC5072_eval.c **** {
 463              		.loc 1 41 31 is_stmt 0 view .LVU96
 464              	.LBE318:
  43:boards/TMC5072_eval.c **** 
 465              		.loc 1 43 2 is_stmt 1 view .LVU97
  45:boards/TMC5072_eval.c **** }
 466              		.loc 1 45 2 view .LVU98
 137:boards/TMC5072_eval.c **** 		}
 467              		.loc 1 137 4 is_stmt 0 view .LVU99
 468 0170 2A68     		ldr	r2, [r5]
 469              	.LVL30:
 137:boards/TMC5072_eval.c **** 		}
 470              		.loc 1 137 4 view .LVU100
 471 0172 B048     		ldr	r0, .L174
 472              	.LVL31:
 137:boards/TMC5072_eval.c **** 		}
 473              		.loc 1 137 4 view .LVU101
 474 0174 FFF7FEFF 		bl	tmc5072_writeInt
 475              	.LVL32:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 476              		.loc 1 124 11 view .LVU102
 477 0178 0024     		movs	r4, #0
 478 017a 82E7     		b	.L18
 479              	.LVL33:
 480              	.L72:
 142:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_XACTUAL(motor));
 481              		.loc 1 142 3 is_stmt 1 view .LVU103
 482 017c 2023     		movs	r3, #32
 483 017e 03FA01F1 		lsl	r1, r3, r1
 484              	.LVL34:
 142:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_XACTUAL(motor));
 485              		.loc 1 142 3 is_stmt 0 view .LVU104
 486 0182 41F00101 		orr	r1, r1, #1
 487 0186 C9B2     		uxtb	r1, r1
 142:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_XACTUAL(motor));
 488              		.loc 1 142 5 view .LVU105
 489 0188 20B9     		cbnz	r0, .L78
 143:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 490              		.loc 1 143 4 is_stmt 1 view .LVU106
 491              	.LBB319:
 492              	.LBI319:
  41:boards/TMC5072_eval.c **** {
 493              		.loc 1 41 31 view .LVU107
 494              	.LVL35:
  41:boards/TMC5072_eval.c **** {
 495              		.loc 1 41 31 is_stmt 0 view .LVU108
 496              	.LBE319:
  43:boards/TMC5072_eval.c **** 
 497              		.loc 1 43 2 is_stmt 1 view .LVU109
  45:boards/TMC5072_eval.c **** }
 498              		.loc 1 45 2 view .LVU110
 143:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 499              		.loc 1 143 13 is_stmt 0 view .LVU111
 500 018a AA48     		ldr	r0, .L174
 501              	.LVL36:
 143:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 502              		.loc 1 143 13 view .LVU112
 503 018c FFF7FEFF 		bl	tmc5072_readInt
 504              	.LVL37:
 143:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 505              		.loc 1 143 11 view .LVU113
 506 0190 2860     		str	r0, [r5]
 507 0192 76E7     		b	.L18
 508              	.LVL38:
 509              	.L78:
 144:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_XACTUAL(motor), *value);
 510              		.loc 1 144 10 is_stmt 1 view .LVU114
 145:boards/TMC5072_eval.c **** 		}
 511              		.loc 1 145 4 view .LVU115
 512              	.LBB320:
 513              	.LBI320:
  41:boards/TMC5072_eval.c **** {
 514              		.loc 1 41 31 view .LVU116
  41:boards/TMC5072_eval.c **** {
 515              		.loc 1 41 31 is_stmt 0 view .LVU117
 516              	.LBE320:
  43:boards/TMC5072_eval.c **** 
 517              		.loc 1 43 2 is_stmt 1 view .LVU118
  45:boards/TMC5072_eval.c **** }
 518              		.loc 1 45 2 view .LVU119
 145:boards/TMC5072_eval.c **** 		}
 519              		.loc 1 145 4 is_stmt 0 view .LVU120
 520 0194 2A68     		ldr	r2, [r5]
 521              	.LVL39:
 145:boards/TMC5072_eval.c **** 		}
 522              		.loc 1 145 4 view .LVU121
 523 0196 A748     		ldr	r0, .L174
 524              	.LVL40:
 145:boards/TMC5072_eval.c **** 		}
 525              		.loc 1 145 4 view .LVU122
 526 0198 FFF7FEFF 		bl	tmc5072_writeInt
 527              	.LVL41:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 528              		.loc 1 124 11 view .LVU123
 529 019c 0024     		movs	r4, #0
 530 019e 70E7     		b	.L18
 531              	.LVL42:
 532              	.L71:
 150:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VMAX(motor));
 533              		.loc 1 150 3 is_stmt 1 view .LVU124
 534 01a0 2023     		movs	r3, #32
 535 01a2 03FA01F1 		lsl	r1, r3, r1
 536              	.LVL43:
 150:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VMAX(motor));
 537              		.loc 1 150 3 is_stmt 0 view .LVU125
 538 01a6 41F00701 		orr	r1, r1, #7
 539 01aa C9B2     		uxtb	r1, r1
 150:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VMAX(motor));
 540              		.loc 1 150 5 view .LVU126
 541 01ac 20B9     		cbnz	r0, .L79
 151:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 542              		.loc 1 151 4 is_stmt 1 view .LVU127
 543              	.LBB321:
 544              	.LBI321:
  41:boards/TMC5072_eval.c **** {
 545              		.loc 1 41 31 view .LVU128
 546              	.LVL44:
  41:boards/TMC5072_eval.c **** {
 547              		.loc 1 41 31 is_stmt 0 view .LVU129
 548              	.LBE321:
  43:boards/TMC5072_eval.c **** 
 549              		.loc 1 43 2 is_stmt 1 view .LVU130
  45:boards/TMC5072_eval.c **** }
 550              		.loc 1 45 2 view .LVU131
 151:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 551              		.loc 1 151 13 is_stmt 0 view .LVU132
 552 01ae A148     		ldr	r0, .L174
 553              	.LVL45:
 151:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 554              		.loc 1 151 13 view .LVU133
 555 01b0 FFF7FEFF 		bl	tmc5072_readInt
 556              	.LVL46:
 151:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 557              		.loc 1 151 11 view .LVU134
 558 01b4 2860     		str	r0, [r5]
 559 01b6 64E7     		b	.L18
 560              	.LVL47:
 561              	.L79:
 152:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), abs(*value));
 562              		.loc 1 152 10 is_stmt 1 view .LVU135
 153:boards/TMC5072_eval.c **** 		}
 563              		.loc 1 153 4 view .LVU136
 564              	.LBB322:
 565              	.LBI322:
  41:boards/TMC5072_eval.c **** {
 566              		.loc 1 41 31 view .LVU137
  41:boards/TMC5072_eval.c **** {
 567              		.loc 1 41 31 is_stmt 0 view .LVU138
 568              	.LBE322:
  43:boards/TMC5072_eval.c **** 
 569              		.loc 1 43 2 is_stmt 1 view .LVU139
  45:boards/TMC5072_eval.c **** }
 570              		.loc 1 45 2 view .LVU140
 153:boards/TMC5072_eval.c **** 		}
 571              		.loc 1 153 60 is_stmt 0 view .LVU141
 572 01b8 2A68     		ldr	r2, [r5]
 573              	.LVL48:
 153:boards/TMC5072_eval.c **** 		}
 574              		.loc 1 153 4 view .LVU142
 575 01ba 9E48     		ldr	r0, .L174
 576              	.LVL49:
 153:boards/TMC5072_eval.c **** 		}
 577              		.loc 1 153 4 view .LVU143
 578 01bc 002A     		cmp	r2, #0
 579 01be B8BF     		it	lt
 580 01c0 5242     		rsblt	r2, r2, #0
 581 01c2 FFF7FEFF 		bl	tmc5072_writeInt
 582              	.LVL50:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 583              		.loc 1 124 11 view .LVU144
 584 01c6 0024     		movs	r4, #0
 585 01c8 5BE7     		b	.L18
 586              	.LVL51:
 587              	.L70:
 159:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor));
 588              		.loc 1 159 3 is_stmt 1 view .LVU145
 159:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor));
 589              		.loc 1 159 5 is_stmt 0 view .LVU146
 590 01ca 0028     		cmp	r0, #0
 591 01cc 40F05F85 		bne	.L154
 160:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 592              		.loc 1 160 4 is_stmt 1 view .LVU147
 593              	.LBB323:
 594              	.LBI323:
  41:boards/TMC5072_eval.c **** {
 595              		.loc 1 41 31 view .LVU148
 596              	.LVL52:
  41:boards/TMC5072_eval.c **** {
 597              		.loc 1 41 31 is_stmt 0 view .LVU149
 598              	.LBE323:
  43:boards/TMC5072_eval.c **** 
 599              		.loc 1 43 2 is_stmt 1 view .LVU150
  45:boards/TMC5072_eval.c **** }
 600              		.loc 1 45 2 view .LVU151
 160:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 601              		.loc 1 160 47 is_stmt 0 view .LVU152
 602 01d0 2023     		movs	r3, #32
 603 01d2 03FA01F1 		lsl	r1, r3, r1
 604              	.LVL53:
 160:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 605              		.loc 1 160 47 view .LVU153
 606 01d6 41F00201 		orr	r1, r1, #2
 160:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 607              		.loc 1 160 13 view .LVU154
 608 01da 9648     		ldr	r0, .L174
 609              	.LVL54:
 160:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 610              		.loc 1 160 13 view .LVU155
 611 01dc C9B2     		uxtb	r1, r1
 612 01de FFF7FEFF 		bl	tmc5072_readInt
 613              	.LVL55:
 161:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 614              		.loc 1 161 4 is_stmt 1 view .LVU156
 161:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 615              		.loc 1 161 13 is_stmt 0 view .LVU157
 616 01e2 10F40003 		ands	r3, r0, #8388608
 617 01e6 18BF     		it	ne
 618 01e8 4FF07F43 		movne	r3, #-16777216
 619 01ec 1843     		orrs	r0, r0, r3
 161:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 620              		.loc 1 161 11 view .LVU158
 621 01ee 2860     		str	r0, [r5]
 622 01f0 47E7     		b	.L18
 623              	.LVL56:
 624              	.L69:
 168:boards/TMC5072_eval.c **** 			*value = vmax_position[motor];
 625              		.loc 1 168 3 is_stmt 1 view .LVU159
 626 01f2 904E     		ldr	r6, .L174
 627 01f4 8F00     		lsls	r7, r1, #2
 169:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 628              		.loc 1 169 26 is_stmt 0 view .LVU160
 629 01f6 3744     		add	r7, r7, r6
 168:boards/TMC5072_eval.c **** 			*value = vmax_position[motor];
 630              		.loc 1 168 5 view .LVU161
 631 01f8 18B9     		cbnz	r0, .L81
 169:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 632              		.loc 1 169 4 is_stmt 1 view .LVU162
 169:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 633              		.loc 1 169 11 is_stmt 0 view .LVU163
 634 01fa D7F89832 		ldr	r3, [r7, #664]
 635 01fe 2B60     		str	r3, [r5]
 636 0200 3FE7     		b	.L18
 637              	.L81:
 170:boards/TMC5072_eval.c **** 			vmax_position[motor] = abs(*value);
 638              		.loc 1 170 10 is_stmt 1 view .LVU164
 171:boards/TMC5072_eval.c **** 			if(tmc5072_readInt(motorToIC(motor), TMC5072_RAMPMODE(motor)) == TMC5072_MODE_POSITION)
 639              		.loc 1 171 4 view .LVU165
 171:boards/TMC5072_eval.c **** 			if(tmc5072_readInt(motorToIC(motor), TMC5072_RAMPMODE(motor)) == TMC5072_MODE_POSITION)
 640              		.loc 1 171 27 is_stmt 0 view .LVU166
 641 0202 2B68     		ldr	r3, [r5]
 172:boards/TMC5072_eval.c **** 				tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), vmax_position[motor]);
 642              		.loc 1 172 41 view .LVU167
 643 0204 2025     		movs	r5, #32
 644              	.LVL57:
 171:boards/TMC5072_eval.c **** 			if(tmc5072_readInt(motorToIC(motor), TMC5072_RAMPMODE(motor)) == TMC5072_MODE_POSITION)
 645              		.loc 1 171 27 view .LVU168
 646 0206 002B     		cmp	r3, #0
 172:boards/TMC5072_eval.c **** 				tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), vmax_position[motor]);
 647              		.loc 1 172 41 view .LVU169
 648 0208 05FA01F5 		lsl	r5, r5, r1
 171:boards/TMC5072_eval.c **** 			if(tmc5072_readInt(motorToIC(motor), TMC5072_RAMPMODE(motor)) == TMC5072_MODE_POSITION)
 649              		.loc 1 171 27 view .LVU170
 650 020c B8BF     		it	lt
 651 020e 5B42     		rsblt	r3, r3, #0
 172:boards/TMC5072_eval.c **** 				tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), vmax_position[motor]);
 652              		.loc 1 172 7 view .LVU171
 653 0210 E9B2     		uxtb	r1, r5
 654              	.LVL58:
 172:boards/TMC5072_eval.c **** 				tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), vmax_position[motor]);
 655              		.loc 1 172 7 view .LVU172
 656 0212 3046     		mov	r0, r6
 657              	.LVL59:
 171:boards/TMC5072_eval.c **** 			if(tmc5072_readInt(motorToIC(motor), TMC5072_RAMPMODE(motor)) == TMC5072_MODE_POSITION)
 658              		.loc 1 171 25 view .LVU173
 659 0214 C7F89832 		str	r3, [r7, #664]
 172:boards/TMC5072_eval.c **** 				tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), vmax_position[motor]);
 660              		.loc 1 172 4 is_stmt 1 view .LVU174
 661              	.LBB324:
 662              	.LBI324:
  41:boards/TMC5072_eval.c **** {
 663              		.loc 1 41 31 view .LVU175
 664              	.LVL60:
  41:boards/TMC5072_eval.c **** {
 665              		.loc 1 41 31 is_stmt 0 view .LVU176
 666              	.LBE324:
  43:boards/TMC5072_eval.c **** 
 667              		.loc 1 43 2 is_stmt 1 view .LVU177
  45:boards/TMC5072_eval.c **** }
 668              		.loc 1 45 2 view .LVU178
 172:boards/TMC5072_eval.c **** 				tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), vmax_position[motor]);
 669              		.loc 1 172 7 is_stmt 0 view .LVU179
 670 0218 FFF7FEFF 		bl	tmc5072_readInt
 671              	.LVL61:
 172:boards/TMC5072_eval.c **** 				tmc5072_writeInt(motorToIC(motor), TMC5072_VMAX(motor), vmax_position[motor]);
 672              		.loc 1 172 6 view .LVU180
 673 021c 0446     		mov	r4, r0
 674 021e 0028     		cmp	r0, #0
 675 0220 40F03885 		bne	.L156
 173:boards/TMC5072_eval.c **** 		}
 676              		.loc 1 173 5 is_stmt 1 view .LVU181
 677              	.LBB325:
 678              	.LBI325:
  41:boards/TMC5072_eval.c **** {
 679              		.loc 1 41 31 view .LVU182
 680              	.LVL62:
  41:boards/TMC5072_eval.c **** {
 681              		.loc 1 41 31 is_stmt 0 view .LVU183
 682              	.LBE325:
  43:boards/TMC5072_eval.c **** 
 683              		.loc 1 43 2 is_stmt 1 view .LVU184
  45:boards/TMC5072_eval.c **** }
 684              		.loc 1 45 2 view .LVU185
 173:boards/TMC5072_eval.c **** 		}
 685              		.loc 1 173 40 is_stmt 0 view .LVU186
 686 0224 45F00701 		orr	r1, r5, #7
 173:boards/TMC5072_eval.c **** 		}
 687              		.loc 1 173 5 view .LVU187
 688 0228 D7F89822 		ldr	r2, [r7, #664]
 689 022c C9B2     		uxtb	r1, r1
 690 022e 3046     		mov	r0, r6
 691 0230 FFF7FEFF 		bl	tmc5072_writeInt
 692              	.LVL63:
 693 0234 25E7     		b	.L18
 694              	.LVL64:
 695              	.L68:
 178:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_AMAX(motor));
 696              		.loc 1 178 3 is_stmt 1 view .LVU188
 697 0236 2023     		movs	r3, #32
 698 0238 03FA01F1 		lsl	r1, r3, r1
 699              	.LVL65:
 178:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_AMAX(motor));
 700              		.loc 1 178 3 is_stmt 0 view .LVU189
 701 023c 41F00601 		orr	r1, r1, #6
 702 0240 C9B2     		uxtb	r1, r1
 178:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_AMAX(motor));
 703              		.loc 1 178 5 view .LVU190
 704 0242 20B9     		cbnz	r0, .L82
 179:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 705              		.loc 1 179 4 is_stmt 1 view .LVU191
 706              	.LBB326:
 707              	.LBI326:
  41:boards/TMC5072_eval.c **** {
 708              		.loc 1 41 31 view .LVU192
 709              	.LVL66:
  41:boards/TMC5072_eval.c **** {
 710              		.loc 1 41 31 is_stmt 0 view .LVU193
 711              	.LBE326:
  43:boards/TMC5072_eval.c **** 
 712              		.loc 1 43 2 is_stmt 1 view .LVU194
  45:boards/TMC5072_eval.c **** }
 713              		.loc 1 45 2 view .LVU195
 179:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 714              		.loc 1 179 13 is_stmt 0 view .LVU196
 715 0244 7B48     		ldr	r0, .L174
 716              	.LVL67:
 179:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 717              		.loc 1 179 13 view .LVU197
 718 0246 FFF7FEFF 		bl	tmc5072_readInt
 719              	.LVL68:
 179:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 720              		.loc 1 179 11 view .LVU198
 721 024a 2860     		str	r0, [r5]
 722 024c 19E7     		b	.L18
 723              	.LVL69:
 724              	.L82:
 180:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_AMAX(motor), *value);
 725              		.loc 1 180 10 is_stmt 1 view .LVU199
 181:boards/TMC5072_eval.c **** 		}
 726              		.loc 1 181 4 view .LVU200
 727              	.LBB327:
 728              	.LBI327:
  41:boards/TMC5072_eval.c **** {
 729              		.loc 1 41 31 view .LVU201
  41:boards/TMC5072_eval.c **** {
 730              		.loc 1 41 31 is_stmt 0 view .LVU202
 731              	.LBE327:
  43:boards/TMC5072_eval.c **** 
 732              		.loc 1 43 2 is_stmt 1 view .LVU203
  45:boards/TMC5072_eval.c **** }
 733              		.loc 1 45 2 view .LVU204
 181:boards/TMC5072_eval.c **** 		}
 734              		.loc 1 181 4 is_stmt 0 view .LVU205
 735 024e 2A68     		ldr	r2, [r5]
 736              	.LVL70:
 181:boards/TMC5072_eval.c **** 		}
 737              		.loc 1 181 4 view .LVU206
 738 0250 7848     		ldr	r0, .L174
 739              	.LVL71:
 181:boards/TMC5072_eval.c **** 		}
 740              		.loc 1 181 4 view .LVU207
 741 0252 FFF7FEFF 		bl	tmc5072_writeInt
 742              	.LVL72:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 743              		.loc 1 124 11 view .LVU208
 744 0256 0024     		movs	r4, #0
 745 0258 13E7     		b	.L18
 746              	.LVL73:
 747              	.L67:
 186:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IRUN_MASK, TMC5
 748              		.loc 1 186 3 is_stmt 1 view .LVU209
 749 025a 2026     		movs	r6, #32
 750 025c 06FA01F1 		lsl	r1, r6, r1
 751              	.LVL74:
 186:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IRUN_MASK, TMC5
 752              		.loc 1 186 3 is_stmt 0 view .LVU210
 753 0260 41F01006 		orr	r6, r1, #16
 754 0264 F6B2     		uxtb	r6, r6
 187:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 755              		.loc 1 187 13 view .LVU211
 756 0266 7348     		ldr	r0, .L174
 757              	.LVL75:
 187:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 758              		.loc 1 187 13 view .LVU212
 759 0268 3146     		mov	r1, r6
 186:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IRUN_MASK, TMC5
 760              		.loc 1 186 5 view .LVU213
 761 026a 2CB9     		cbnz	r4, .L83
 187:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 762              		.loc 1 187 4 is_stmt 1 view .LVU214
 763              	.LBB328:
 764              	.LBI328:
  41:boards/TMC5072_eval.c **** {
 765              		.loc 1 41 31 view .LVU215
 766              	.LVL76:
  41:boards/TMC5072_eval.c **** {
 767              		.loc 1 41 31 is_stmt 0 view .LVU216
 768              	.LBE328:
  43:boards/TMC5072_eval.c **** 
 769              		.loc 1 43 2 is_stmt 1 view .LVU217
  45:boards/TMC5072_eval.c **** }
 770              		.loc 1 45 2 view .LVU218
 187:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 771              		.loc 1 187 13 is_stmt 0 view .LVU219
 772 026c FFF7FEFF 		bl	tmc5072_readInt
 773              	.LVL77:
 187:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 774              		.loc 1 187 13 view .LVU220
 775 0270 C0F30420 		ubfx	r0, r0, #8, #5
 187:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 776              		.loc 1 187 11 view .LVU221
 777 0274 2860     		str	r0, [r5]
 778 0276 04E7     		b	.L18
 779              	.LVL78:
 780              	.L83:
 188:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IRUN_MASK, TMC5072_IRUN
 781              		.loc 1 188 10 is_stmt 1 view .LVU222
 189:boards/TMC5072_eval.c **** 		}
 782              		.loc 1 189 4 view .LVU223
 783              	.LBB329:
 784              	.LBI329:
  41:boards/TMC5072_eval.c **** {
 785              		.loc 1 41 31 view .LVU224
  41:boards/TMC5072_eval.c **** {
 786              		.loc 1 41 31 is_stmt 0 view .LVU225
 787              	.LBE329:
  43:boards/TMC5072_eval.c **** 
 788              		.loc 1 43 2 is_stmt 1 view .LVU226
  45:boards/TMC5072_eval.c **** }
 789              		.loc 1 45 2 view .LVU227
 790              	.LBB330:
 791              	.LBI330:
  41:boards/TMC5072_eval.c **** {
 792              		.loc 1 41 31 view .LVU228
  41:boards/TMC5072_eval.c **** {
 793              		.loc 1 41 31 is_stmt 0 view .LVU229
 794              	.LBE330:
  43:boards/TMC5072_eval.c **** 
 795              		.loc 1 43 2 is_stmt 1 view .LVU230
  45:boards/TMC5072_eval.c **** }
 796              		.loc 1 45 2 view .LVU231
 189:boards/TMC5072_eval.c **** 		}
 797              		.loc 1 189 4 is_stmt 0 view .LVU232
 798 0278 FFF7FEFF 		bl	tmc5072_readInt
 799              	.LVL79:
 189:boards/TMC5072_eval.c **** 		}
 800              		.loc 1 189 4 view .LVU233
 801 027c 2B68     		ldr	r3, [r5]
 802 027e 1B02     		lsls	r3, r3, #8
 803 0280 03F4F853 		and	r3, r3, #7936
 804 0284 20F4F852 		bic	r2, r0, #7936
 805 0288 1A43     		orrs	r2, r2, r3
 806 028a 6A48     		ldr	r0, .L174
 807 028c 3146     		mov	r1, r6
 808 028e FFF7FEFF 		bl	tmc5072_writeInt
 809              	.LVL80:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 810              		.loc 1 124 11 view .LVU234
 811 0292 0024     		movs	r4, #0
 812 0294 F5E6     		b	.L18
 813              	.LVL81:
 814              	.L66:
 194:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IHOLD_MASK, TMC
 815              		.loc 1 194 3 is_stmt 1 view .LVU235
 816 0296 2026     		movs	r6, #32
 817 0298 06FA01F1 		lsl	r1, r6, r1
 818              	.LVL82:
 194:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IHOLD_MASK, TMC
 819              		.loc 1 194 3 is_stmt 0 view .LVU236
 820 029c 41F01006 		orr	r6, r1, #16
 821 02a0 F6B2     		uxtb	r6, r6
 195:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 822              		.loc 1 195 13 view .LVU237
 823 02a2 6448     		ldr	r0, .L174
 824              	.LVL83:
 195:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 825              		.loc 1 195 13 view .LVU238
 826 02a4 3146     		mov	r1, r6
 194:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IHOLD_MASK, TMC
 827              		.loc 1 194 5 view .LVU239
 828 02a6 2CB9     		cbnz	r4, .L84
 195:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 829              		.loc 1 195 4 is_stmt 1 view .LVU240
 830              	.LBB331:
 831              	.LBI331:
  41:boards/TMC5072_eval.c **** {
 832              		.loc 1 41 31 view .LVU241
 833              	.LVL84:
  41:boards/TMC5072_eval.c **** {
 834              		.loc 1 41 31 is_stmt 0 view .LVU242
 835              	.LBE331:
  43:boards/TMC5072_eval.c **** 
 836              		.loc 1 43 2 is_stmt 1 view .LVU243
  45:boards/TMC5072_eval.c **** }
 837              		.loc 1 45 2 view .LVU244
 195:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 838              		.loc 1 195 13 is_stmt 0 view .LVU245
 839 02a8 FFF7FEFF 		bl	tmc5072_readInt
 840              	.LVL85:
 195:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 841              		.loc 1 195 13 view .LVU246
 842 02ac 00F01F00 		and	r0, r0, #31
 195:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 843              		.loc 1 195 11 view .LVU247
 844 02b0 2860     		str	r0, [r5]
 845 02b2 E6E6     		b	.L18
 846              	.LVL86:
 847              	.L84:
 196:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_IHOLD_IRUN(motor), TMC5072_IHOLD_MASK, TMC5072_IHO
 848              		.loc 1 196 10 is_stmt 1 view .LVU248
 197:boards/TMC5072_eval.c **** 		}
 849              		.loc 1 197 4 view .LVU249
 850              	.LBB332:
 851              	.LBI332:
  41:boards/TMC5072_eval.c **** {
 852              		.loc 1 41 31 view .LVU250
  41:boards/TMC5072_eval.c **** {
 853              		.loc 1 41 31 is_stmt 0 view .LVU251
 854              	.LBE332:
  43:boards/TMC5072_eval.c **** 
 855              		.loc 1 43 2 is_stmt 1 view .LVU252
  45:boards/TMC5072_eval.c **** }
 856              		.loc 1 45 2 view .LVU253
 857              	.LBB333:
 858              	.LBI333:
  41:boards/TMC5072_eval.c **** {
 859              		.loc 1 41 31 view .LVU254
  41:boards/TMC5072_eval.c **** {
 860              		.loc 1 41 31 is_stmt 0 view .LVU255
 861              	.LBE333:
  43:boards/TMC5072_eval.c **** 
 862              		.loc 1 43 2 is_stmt 1 view .LVU256
  45:boards/TMC5072_eval.c **** }
 863              		.loc 1 45 2 view .LVU257
 197:boards/TMC5072_eval.c **** 		}
 864              		.loc 1 197 4 is_stmt 0 view .LVU258
 865 02b4 FFF7FEFF 		bl	tmc5072_readInt
 866              	.LVL87:
 197:boards/TMC5072_eval.c **** 		}
 867              		.loc 1 197 4 view .LVU259
 868 02b8 2A68     		ldr	r2, [r5]
 869 02ba 20F01F00 		bic	r0, r0, #31
 870 02be 02F01F02 		and	r2, r2, #31
 871 02c2 0243     		orrs	r2, r2, r0
 872 02c4 3146     		mov	r1, r6
 873 02c6 5B48     		ldr	r0, .L174
 874 02c8 FFF7FEFF 		bl	tmc5072_writeInt
 875              	.LVL88:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 876              		.loc 1 124 11 view .LVU260
 877 02cc 0024     		movs	r4, #0
 878 02ce D8E6     		b	.L18
 879              	.LVL89:
 880              	.L65:
 202:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_RAMPSTAT(motor), TMC5072_POSITION_REACHED_
 881              		.loc 1 202 3 is_stmt 1 view .LVU261
 202:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_RAMPSTAT(motor), TMC5072_POSITION_REACHED_
 882              		.loc 1 202 5 is_stmt 0 view .LVU262
 883 02d0 0028     		cmp	r0, #0
 884 02d2 40F0E284 		bne	.L157
 203:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 885              		.loc 1 203 4 is_stmt 1 view .LVU263
 886              	.LBB334:
 887              	.LBI334:
  41:boards/TMC5072_eval.c **** {
 888              		.loc 1 41 31 view .LVU264
 889              	.LVL90:
  41:boards/TMC5072_eval.c **** {
 890              		.loc 1 41 31 is_stmt 0 view .LVU265
 891              	.LBE334:
  43:boards/TMC5072_eval.c **** 
 892              		.loc 1 43 2 is_stmt 1 view .LVU266
  45:boards/TMC5072_eval.c **** }
 893              		.loc 1 45 2 view .LVU267
 203:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 894              		.loc 1 203 13 is_stmt 0 view .LVU268
 895 02d6 2023     		movs	r3, #32
 896 02d8 03FA01F1 		lsl	r1, r3, r1
 897              	.LVL91:
 203:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 898              		.loc 1 203 13 view .LVU269
 899 02dc 41F01501 		orr	r1, r1, #21
 900 02e0 5448     		ldr	r0, .L174
 901              	.LVL92:
 203:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 902              		.loc 1 203 13 view .LVU270
 903 02e2 C9B2     		uxtb	r1, r1
 904 02e4 FFF7FEFF 		bl	tmc5072_readInt
 905              	.LVL93:
 203:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 906              		.loc 1 203 13 view .LVU271
 907 02e8 C0F34020 		ubfx	r0, r0, #9, #1
 203:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 908              		.loc 1 203 11 view .LVU272
 909 02ec 2860     		str	r0, [r5]
 910 02ee C8E6     		b	.L18
 911              	.LVL94:
 912              	.L64:
 210:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_RAMPSTAT(motor), TMC5072_STATUS_STOP_R_MAS
 913              		.loc 1 210 3 is_stmt 1 view .LVU273
 210:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_RAMPSTAT(motor), TMC5072_STATUS_STOP_R_MAS
 914              		.loc 1 210 5 is_stmt 0 view .LVU274
 915 02f0 0028     		cmp	r0, #0
 916 02f2 40F0D584 		bne	.L158
 211:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 917              		.loc 1 211 4 is_stmt 1 view .LVU275
 918              	.LBB335:
 919              	.LBI335:
  41:boards/TMC5072_eval.c **** {
 920              		.loc 1 41 31 view .LVU276
 921              	.LVL95:
  41:boards/TMC5072_eval.c **** {
 922              		.loc 1 41 31 is_stmt 0 view .LVU277
 923              	.LBE335:
  43:boards/TMC5072_eval.c **** 
 924              		.loc 1 43 2 is_stmt 1 view .LVU278
  45:boards/TMC5072_eval.c **** }
 925              		.loc 1 45 2 view .LVU279
 211:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 926              		.loc 1 211 13 is_stmt 0 view .LVU280
 927 02f6 2023     		movs	r3, #32
 928 02f8 03FA01F1 		lsl	r1, r3, r1
 929              	.LVL96:
 211:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 930              		.loc 1 211 13 view .LVU281
 931 02fc 41F01501 		orr	r1, r1, #21
 932 0300 4C48     		ldr	r0, .L174
 933              	.LVL97:
 211:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 934              		.loc 1 211 13 view .LVU282
 935 0302 C9B2     		uxtb	r1, r1
 936 0304 FFF7FEFF 		bl	tmc5072_readInt
 937              	.LVL98:
 211:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 938              		.loc 1 211 13 view .LVU283
 939 0308 C0F34000 		ubfx	r0, r0, #1, #1
 211:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 940              		.loc 1 211 11 view .LVU284
 941 030c 2860     		str	r0, [r5]
 942 030e B8E6     		b	.L18
 943              	.LVL99:
 944              	.L63:
 218:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_RAMPSTAT(motor), TMC5072_STATUS_STOP_L_MAS
 945              		.loc 1 218 3 is_stmt 1 view .LVU285
 218:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_RAMPSTAT(motor), TMC5072_STATUS_STOP_L_MAS
 946              		.loc 1 218 5 is_stmt 0 view .LVU286
 947 0310 0028     		cmp	r0, #0
 948 0312 40F0C884 		bne	.L159
 219:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 949              		.loc 1 219 4 is_stmt 1 view .LVU287
 950              	.LBB336:
 951              	.LBI336:
  41:boards/TMC5072_eval.c **** {
 952              		.loc 1 41 31 view .LVU288
 953              	.LVL100:
  41:boards/TMC5072_eval.c **** {
 954              		.loc 1 41 31 is_stmt 0 view .LVU289
 955              	.LBE336:
  43:boards/TMC5072_eval.c **** 
 956              		.loc 1 43 2 is_stmt 1 view .LVU290
  45:boards/TMC5072_eval.c **** }
 957              		.loc 1 45 2 view .LVU291
 219:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 958              		.loc 1 219 13 is_stmt 0 view .LVU292
 959 0316 2023     		movs	r3, #32
 960 0318 03FA01F1 		lsl	r1, r3, r1
 961              	.LVL101:
 219:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 962              		.loc 1 219 13 view .LVU293
 963 031c 41F01501 		orr	r1, r1, #21
 964 0320 4448     		ldr	r0, .L174
 965              	.LVL102:
 219:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 966              		.loc 1 219 13 view .LVU294
 967 0322 C9B2     		uxtb	r1, r1
 968 0324 FFF7FEFF 		bl	tmc5072_readInt
 969              	.LVL103:
 219:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 970              		.loc 1 219 13 view .LVU295
 971 0328 00F00100 		and	r0, r0, #1
 219:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 972              		.loc 1 219 11 view .LVU296
 973 032c 2860     		str	r0, [r5]
 974 032e A8E6     		b	.L18
 975              	.LVL104:
 976              	.L62:
 226:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_R_ENABLE_MASK,
 977              		.loc 1 226 3 is_stmt 1 view .LVU297
 978 0330 2026     		movs	r6, #32
 979 0332 06FA01F1 		lsl	r1, r6, r1
 980              	.LVL105:
 226:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_R_ENABLE_MASK,
 981              		.loc 1 226 3 is_stmt 0 view .LVU298
 982 0336 41F01406 		orr	r6, r1, #20
 983 033a F6B2     		uxtb	r6, r6
 227:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 984              		.loc 1 227 13 view .LVU299
 985 033c 3D48     		ldr	r0, .L174
 986              	.LVL106:
 227:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 987              		.loc 1 227 13 view .LVU300
 988 033e 3146     		mov	r1, r6
 226:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_R_ENABLE_MASK,
 989              		.loc 1 226 5 view .LVU301
 990 0340 2CB9     		cbnz	r4, .L85
 227:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 991              		.loc 1 227 4 is_stmt 1 view .LVU302
 992              	.LBB337:
 993              	.LBI337:
  41:boards/TMC5072_eval.c **** {
 994              		.loc 1 41 31 view .LVU303
 995              	.LVL107:
  41:boards/TMC5072_eval.c **** {
 996              		.loc 1 41 31 is_stmt 0 view .LVU304
 997              	.LBE337:
  43:boards/TMC5072_eval.c **** 
 998              		.loc 1 43 2 is_stmt 1 view .LVU305
  45:boards/TMC5072_eval.c **** }
 999              		.loc 1 45 2 view .LVU306
 227:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1000              		.loc 1 227 13 is_stmt 0 view .LVU307
 1001 0342 FFF7FEFF 		bl	tmc5072_readInt
 1002              	.LVL108:
 227:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1003              		.loc 1 227 13 view .LVU308
 1004 0346 C0F34000 		ubfx	r0, r0, #1, #1
 227:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1005              		.loc 1 227 11 view .LVU309
 1006 034a 2860     		str	r0, [r5]
 1007 034c 99E6     		b	.L18
 1008              	.LVL109:
 1009              	.L85:
 228:boards/TMC5072_eval.c **** 			// configure right stop bits
 1010              		.loc 1 228 10 is_stmt 1 view .LVU310
 230:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_POL_STOP_R_MASK, TMC5072_PO
 1011              		.loc 1 230 4 view .LVU311
 1012              	.LBB338:
 1013              	.LBI338:
  41:boards/TMC5072_eval.c **** {
 1014              		.loc 1 41 31 view .LVU312
  41:boards/TMC5072_eval.c **** {
 1015              		.loc 1 41 31 is_stmt 0 view .LVU313
 1016              	.LBE338:
  43:boards/TMC5072_eval.c **** 
 1017              		.loc 1 43 2 is_stmt 1 view .LVU314
  45:boards/TMC5072_eval.c **** }
 1018              		.loc 1 45 2 view .LVU315
 1019              	.LBB339:
 1020              	.LBI339:
  41:boards/TMC5072_eval.c **** {
 1021              		.loc 1 41 31 view .LVU316
  41:boards/TMC5072_eval.c **** {
 1022              		.loc 1 41 31 is_stmt 0 view .LVU317
 1023              	.LBE339:
  43:boards/TMC5072_eval.c **** 
 1024              		.loc 1 43 2 is_stmt 1 view .LVU318
  45:boards/TMC5072_eval.c **** }
 1025              		.loc 1 45 2 view .LVU319
 230:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_POL_STOP_R_MASK, TMC5072_PO
 1026              		.loc 1 230 4 is_stmt 0 view .LVU320
 1027 034e FFF7FEFF 		bl	tmc5072_readInt
 1028              	.LVL110:
 230:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_POL_STOP_R_MASK, TMC5072_PO
 1029              		.loc 1 230 4 view .LVU321
 1030 0352 2B68     		ldr	r3, [r5]
 1031 0354 002B     		cmp	r3, #0
 1032 0356 CCBF     		ite	gt
 1033 0358 0222     		movgt	r2, #2
 1034 035a 0022     		movle	r2, #0
 1035 035c 20F00200 		bic	r0, r0, #2
 1036 0360 0243     		orrs	r2, r2, r0
 1037 0362 3146     		mov	r1, r6
 1038 0364 3348     		ldr	r0, .L174
 1039 0366 FFF7FEFF 		bl	tmc5072_writeInt
 1040              	.LVL111:
 231:boards/TMC5072_eval.c **** 		}
 1041              		.loc 1 231 4 is_stmt 1 view .LVU322
 1042              	.LBB340:
 1043              	.LBI340:
  41:boards/TMC5072_eval.c **** {
 1044              		.loc 1 41 31 view .LVU323
  41:boards/TMC5072_eval.c **** {
 1045              		.loc 1 41 31 is_stmt 0 view .LVU324
 1046              	.LBE340:
  43:boards/TMC5072_eval.c **** 
 1047              		.loc 1 43 2 is_stmt 1 view .LVU325
  45:boards/TMC5072_eval.c **** }
 1048              		.loc 1 45 2 view .LVU326
 1049              	.LBB341:
 1050              	.LBI341:
  41:boards/TMC5072_eval.c **** {
 1051              		.loc 1 41 31 view .LVU327
  41:boards/TMC5072_eval.c **** {
 1052              		.loc 1 41 31 is_stmt 0 view .LVU328
 1053              	.LBE341:
  43:boards/TMC5072_eval.c **** 
 1054              		.loc 1 43 2 is_stmt 1 view .LVU329
  45:boards/TMC5072_eval.c **** }
 1055              		.loc 1 45 2 view .LVU330
 231:boards/TMC5072_eval.c **** 		}
 1056              		.loc 1 231 4 is_stmt 0 view .LVU331
 1057 036a 3146     		mov	r1, r6
 1058 036c 3148     		ldr	r0, .L174
 1059 036e FFF7FEFF 		bl	tmc5072_readInt
 1060              	.LVL112:
 1061 0372 2B68     		ldr	r3, [r5]
 1062 0374 022B     		cmp	r3, #2
 1063 0376 20F00800 		bic	r0, r0, #8
 1064 037a 0CBF     		ite	eq
 1065 037c 0822     		moveq	r2, #8
 1066 037e 0022     		movne	r2, #0
 1067 0380 0243     		orrs	r2, r2, r0
 1068 0382 3146     		mov	r1, r6
 1069 0384 2B48     		ldr	r0, .L174
 1070 0386 FFF7FEFF 		bl	tmc5072_writeInt
 1071              	.LVL113:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1072              		.loc 1 124 11 view .LVU332
 1073 038a 0024     		movs	r4, #0
 1074 038c 79E6     		b	.L18
 1075              	.LVL114:
 1076              	.L61:
 236:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_L_ENABLE_MASK,
 1077              		.loc 1 236 3 is_stmt 1 view .LVU333
 1078 038e 2026     		movs	r6, #32
 1079 0390 06FA01F1 		lsl	r1, r6, r1
 1080              	.LVL115:
 236:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_L_ENABLE_MASK,
 1081              		.loc 1 236 3 is_stmt 0 view .LVU334
 1082 0394 41F01406 		orr	r6, r1, #20
 1083 0398 F6B2     		uxtb	r6, r6
 237:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1084              		.loc 1 237 13 view .LVU335
 1085 039a 2648     		ldr	r0, .L174
 1086              	.LVL116:
 237:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1087              		.loc 1 237 13 view .LVU336
 1088 039c 3146     		mov	r1, r6
 236:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_STOP_L_ENABLE_MASK,
 1089              		.loc 1 236 5 view .LVU337
 1090 039e 2CB9     		cbnz	r4, .L88
 237:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1091              		.loc 1 237 4 is_stmt 1 view .LVU338
 1092              	.LBB342:
 1093              	.LBI342:
  41:boards/TMC5072_eval.c **** {
 1094              		.loc 1 41 31 view .LVU339
 1095              	.LVL117:
  41:boards/TMC5072_eval.c **** {
 1096              		.loc 1 41 31 is_stmt 0 view .LVU340
 1097              	.LBE342:
  43:boards/TMC5072_eval.c **** 
 1098              		.loc 1 43 2 is_stmt 1 view .LVU341
  45:boards/TMC5072_eval.c **** }
 1099              		.loc 1 45 2 view .LVU342
 237:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1100              		.loc 1 237 13 is_stmt 0 view .LVU343
 1101 03a0 FFF7FEFF 		bl	tmc5072_readInt
 1102              	.LVL118:
 237:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1103              		.loc 1 237 13 view .LVU344
 1104 03a4 00F00100 		and	r0, r0, #1
 237:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1105              		.loc 1 237 11 view .LVU345
 1106 03a8 2860     		str	r0, [r5]
 1107 03aa 6AE6     		b	.L18
 1108              	.LVL119:
 1109              	.L88:
 238:boards/TMC5072_eval.c **** 			// configure left stop bits
 1110              		.loc 1 238 10 is_stmt 1 view .LVU346
 240:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_POL_STOP_L_MASK, TMC5072_PO
 1111              		.loc 1 240 4 view .LVU347
 1112              	.LBB343:
 1113              	.LBI343:
  41:boards/TMC5072_eval.c **** {
 1114              		.loc 1 41 31 view .LVU348
  41:boards/TMC5072_eval.c **** {
 1115              		.loc 1 41 31 is_stmt 0 view .LVU349
 1116              	.LBE343:
  43:boards/TMC5072_eval.c **** 
 1117              		.loc 1 43 2 is_stmt 1 view .LVU350
  45:boards/TMC5072_eval.c **** }
 1118              		.loc 1 45 2 view .LVU351
 1119              	.LBB344:
 1120              	.LBI344:
  41:boards/TMC5072_eval.c **** {
 1121              		.loc 1 41 31 view .LVU352
  41:boards/TMC5072_eval.c **** {
 1122              		.loc 1 41 31 is_stmt 0 view .LVU353
 1123              	.LBE344:
  43:boards/TMC5072_eval.c **** 
 1124              		.loc 1 43 2 is_stmt 1 view .LVU354
  45:boards/TMC5072_eval.c **** }
 1125              		.loc 1 45 2 view .LVU355
 240:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_POL_STOP_L_MASK, TMC5072_PO
 1126              		.loc 1 240 4 is_stmt 0 view .LVU356
 1127 03ac FFF7FEFF 		bl	tmc5072_readInt
 1128              	.LVL120:
 240:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_POL_STOP_L_MASK, TMC5072_PO
 1129              		.loc 1 240 4 view .LVU357
 1130 03b0 2A68     		ldr	r2, [r5]
 1131 03b2 20F00100 		bic	r0, r0, #1
 1132 03b6 002A     		cmp	r2, #0
 1133 03b8 D4BF     		ite	le
 1134 03ba 0246     		movle	r2, r0
 1135 03bc 40F00102 		orrgt	r2, r0, #1
 1136 03c0 3146     		mov	r1, r6
 1137 03c2 1C48     		ldr	r0, .L174
 1138 03c4 FFF7FEFF 		bl	tmc5072_writeInt
 1139              	.LVL121:
 241:boards/TMC5072_eval.c **** 		}
 1140              		.loc 1 241 4 is_stmt 1 view .LVU358
 1141              	.LBB345:
 1142              	.LBI345:
  41:boards/TMC5072_eval.c **** {
 1143              		.loc 1 41 31 view .LVU359
  41:boards/TMC5072_eval.c **** {
 1144              		.loc 1 41 31 is_stmt 0 view .LVU360
 1145              	.LBE345:
  43:boards/TMC5072_eval.c **** 
 1146              		.loc 1 43 2 is_stmt 1 view .LVU361
  45:boards/TMC5072_eval.c **** }
 1147              		.loc 1 45 2 view .LVU362
 1148              	.LBB346:
 1149              	.LBI346:
  41:boards/TMC5072_eval.c **** {
 1150              		.loc 1 41 31 view .LVU363
  41:boards/TMC5072_eval.c **** {
 1151              		.loc 1 41 31 is_stmt 0 view .LVU364
 1152              	.LBE346:
  43:boards/TMC5072_eval.c **** 
 1153              		.loc 1 43 2 is_stmt 1 view .LVU365
  45:boards/TMC5072_eval.c **** }
 1154              		.loc 1 45 2 view .LVU366
 241:boards/TMC5072_eval.c **** 		}
 1155              		.loc 1 241 4 is_stmt 0 view .LVU367
 1156 03c8 3146     		mov	r1, r6
 1157 03ca 1A48     		ldr	r0, .L174
 1158 03cc FFF7FEFF 		bl	tmc5072_readInt
 1159              	.LVL122:
 1160 03d0 2B68     		ldr	r3, [r5]
 1161 03d2 022B     		cmp	r3, #2
 1162 03d4 20F00400 		bic	r0, r0, #4
 1163 03d8 0CBF     		ite	eq
 1164 03da 0422     		moveq	r2, #4
 1165 03dc 0022     		movne	r2, #0
 1166 03de 0243     		orrs	r2, r2, r0
 1167 03e0 3146     		mov	r1, r6
 1168 03e2 1448     		ldr	r0, .L174
 1169 03e4 FFF7FEFF 		bl	tmc5072_writeInt
 1170              	.LVL123:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1171              		.loc 1 124 11 view .LVU368
 1172 03e8 0024     		movs	r4, #0
 1173 03ea 4AE6     		b	.L18
 1174              	.LVL124:
 1175              	.L60:
 246:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_SWMODE(motor));
 1176              		.loc 1 246 3 is_stmt 1 view .LVU369
 1177 03ec 2023     		movs	r3, #32
 1178 03ee 03FA01F1 		lsl	r1, r3, r1
 1179              	.LVL125:
 246:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_SWMODE(motor));
 1180              		.loc 1 246 3 is_stmt 0 view .LVU370
 1181 03f2 41F01401 		orr	r1, r1, #20
 1182 03f6 C9B2     		uxtb	r1, r1
 246:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_SWMODE(motor));
 1183              		.loc 1 246 5 view .LVU371
 1184 03f8 20B9     		cbnz	r0, .L90
 247:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1185              		.loc 1 247 4 is_stmt 1 view .LVU372
 1186              	.LBB347:
 1187              	.LBI347:
  41:boards/TMC5072_eval.c **** {
 1188              		.loc 1 41 31 view .LVU373
 1189              	.LVL126:
  41:boards/TMC5072_eval.c **** {
 1190              		.loc 1 41 31 is_stmt 0 view .LVU374
 1191              	.LBE347:
  43:boards/TMC5072_eval.c **** 
 1192              		.loc 1 43 2 is_stmt 1 view .LVU375
  45:boards/TMC5072_eval.c **** }
 1193              		.loc 1 45 2 view .LVU376
 247:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1194              		.loc 1 247 13 is_stmt 0 view .LVU377
 1195 03fa 0E48     		ldr	r0, .L174
 1196              	.LVL127:
 247:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1197              		.loc 1 247 13 view .LVU378
 1198 03fc FFF7FEFF 		bl	tmc5072_readInt
 1199              	.LVL128:
 247:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1200              		.loc 1 247 11 view .LVU379
 1201 0400 2860     		str	r0, [r5]
 1202 0402 3EE6     		b	.L18
 1203              	.LVL129:
 1204              	.L90:
 248:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_SWMODE(motor), *value);
 1205              		.loc 1 248 10 is_stmt 1 view .LVU380
 249:boards/TMC5072_eval.c **** 		}
 1206              		.loc 1 249 4 view .LVU381
 1207              	.LBB348:
 1208              	.LBI348:
  41:boards/TMC5072_eval.c **** {
 1209              		.loc 1 41 31 view .LVU382
  41:boards/TMC5072_eval.c **** {
 1210              		.loc 1 41 31 is_stmt 0 view .LVU383
 1211              	.LBE348:
  43:boards/TMC5072_eval.c **** 
 1212              		.loc 1 43 2 is_stmt 1 view .LVU384
  45:boards/TMC5072_eval.c **** }
 1213              		.loc 1 45 2 view .LVU385
 249:boards/TMC5072_eval.c **** 		}
 1214              		.loc 1 249 4 is_stmt 0 view .LVU386
 1215 0404 2A68     		ldr	r2, [r5]
 1216              	.LVL130:
 249:boards/TMC5072_eval.c **** 		}
 1217              		.loc 1 249 4 view .LVU387
 1218 0406 0B48     		ldr	r0, .L174
 1219              	.LVL131:
 249:boards/TMC5072_eval.c **** 		}
 1220              		.loc 1 249 4 view .LVU388
 1221 0408 FFF7FEFF 		bl	tmc5072_writeInt
 1222              	.LVL132:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1223              		.loc 1 124 11 view .LVU389
 1224 040c 0024     		movs	r4, #0
 1225 040e 38E6     		b	.L18
 1226              	.LVL133:
 1227              	.L59:
 254:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_A1(motor));
 1228              		.loc 1 254 3 is_stmt 1 view .LVU390
 1229 0410 2023     		movs	r3, #32
 1230 0412 03FA01F1 		lsl	r1, r3, r1
 1231              	.LVL134:
 254:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_A1(motor));
 1232              		.loc 1 254 3 is_stmt 0 view .LVU391
 1233 0416 41F00401 		orr	r1, r1, #4
 1234 041a C9B2     		uxtb	r1, r1
 254:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_A1(motor));
 1235              		.loc 1 254 5 view .LVU392
 1236 041c 20B9     		cbnz	r0, .L91
 255:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1237              		.loc 1 255 4 is_stmt 1 view .LVU393
 1238              	.LBB349:
 1239              	.LBI349:
  41:boards/TMC5072_eval.c **** {
 1240              		.loc 1 41 31 view .LVU394
 1241              	.LVL135:
  41:boards/TMC5072_eval.c **** {
 1242              		.loc 1 41 31 is_stmt 0 view .LVU395
 1243              	.LBE349:
  43:boards/TMC5072_eval.c **** 
 1244              		.loc 1 43 2 is_stmt 1 view .LVU396
  45:boards/TMC5072_eval.c **** }
 1245              		.loc 1 45 2 view .LVU397
 255:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1246              		.loc 1 255 13 is_stmt 0 view .LVU398
 1247 041e 0548     		ldr	r0, .L174
 1248              	.LVL136:
 255:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1249              		.loc 1 255 13 view .LVU399
 1250 0420 FFF7FEFF 		bl	tmc5072_readInt
 1251              	.LVL137:
 255:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1252              		.loc 1 255 11 view .LVU400
 1253 0424 2860     		str	r0, [r5]
 1254 0426 2CE6     		b	.L18
 1255              	.LVL138:
 1256              	.L91:
 256:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_A1(motor), *value);
 1257              		.loc 1 256 10 is_stmt 1 view .LVU401
 257:boards/TMC5072_eval.c **** 		}
 1258              		.loc 1 257 4 view .LVU402
 1259              	.LBB350:
 1260              	.LBI350:
  41:boards/TMC5072_eval.c **** {
 1261              		.loc 1 41 31 view .LVU403
  41:boards/TMC5072_eval.c **** {
 1262              		.loc 1 41 31 is_stmt 0 view .LVU404
 1263              	.LBE350:
  43:boards/TMC5072_eval.c **** 
 1264              		.loc 1 43 2 is_stmt 1 view .LVU405
  45:boards/TMC5072_eval.c **** }
 1265              		.loc 1 45 2 view .LVU406
 257:boards/TMC5072_eval.c **** 		}
 1266              		.loc 1 257 4 is_stmt 0 view .LVU407
 1267 0428 2A68     		ldr	r2, [r5]
 1268              	.LVL139:
 257:boards/TMC5072_eval.c **** 		}
 1269              		.loc 1 257 4 view .LVU408
 1270 042a 0248     		ldr	r0, .L174
 1271              	.LVL140:
 257:boards/TMC5072_eval.c **** 		}
 1272              		.loc 1 257 4 view .LVU409
 1273 042c FFF7FEFF 		bl	tmc5072_writeInt
 1274              	.LVL141:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1275              		.loc 1 124 11 view .LVU410
 1276 0430 0024     		movs	r4, #0
 1277 0432 26E6     		b	.L18
 1278              	.L175:
 1279              		.align	2
 1280              	.L174:
 1281 0434 00000000 		.word	.LANCHOR0
 1282              	.LVL142:
 1283              	.L58:
 262:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_V1(motor));
 1284              		.loc 1 262 3 is_stmt 1 view .LVU411
 1285 0438 2023     		movs	r3, #32
 1286 043a 03FA01F1 		lsl	r1, r3, r1
 1287              	.LVL143:
 262:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_V1(motor));
 1288              		.loc 1 262 3 is_stmt 0 view .LVU412
 1289 043e 41F00501 		orr	r1, r1, #5
 1290 0442 C9B2     		uxtb	r1, r1
 262:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_V1(motor));
 1291              		.loc 1 262 5 view .LVU413
 1292 0444 20B9     		cbnz	r0, .L92
 263:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1293              		.loc 1 263 4 is_stmt 1 view .LVU414
 1294              	.LBB351:
 1295              	.LBI351:
  41:boards/TMC5072_eval.c **** {
 1296              		.loc 1 41 31 view .LVU415
 1297              	.LVL144:
  41:boards/TMC5072_eval.c **** {
 1298              		.loc 1 41 31 is_stmt 0 view .LVU416
 1299              	.LBE351:
  43:boards/TMC5072_eval.c **** 
 1300              		.loc 1 43 2 is_stmt 1 view .LVU417
  45:boards/TMC5072_eval.c **** }
 1301              		.loc 1 45 2 view .LVU418
 263:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1302              		.loc 1 263 13 is_stmt 0 view .LVU419
 1303 0446 A648     		ldr	r0, .L176
 1304              	.LVL145:
 263:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1305              		.loc 1 263 13 view .LVU420
 1306 0448 FFF7FEFF 		bl	tmc5072_readInt
 1307              	.LVL146:
 263:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1308              		.loc 1 263 11 view .LVU421
 1309 044c 2860     		str	r0, [r5]
 1310 044e 18E6     		b	.L18
 1311              	.LVL147:
 1312              	.L92:
 264:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_V1(motor), *value);
 1313              		.loc 1 264 10 is_stmt 1 view .LVU422
 265:boards/TMC5072_eval.c **** 		}
 1314              		.loc 1 265 4 view .LVU423
 1315              	.LBB352:
 1316              	.LBI352:
  41:boards/TMC5072_eval.c **** {
 1317              		.loc 1 41 31 view .LVU424
  41:boards/TMC5072_eval.c **** {
 1318              		.loc 1 41 31 is_stmt 0 view .LVU425
 1319              	.LBE352:
  43:boards/TMC5072_eval.c **** 
 1320              		.loc 1 43 2 is_stmt 1 view .LVU426
  45:boards/TMC5072_eval.c **** }
 1321              		.loc 1 45 2 view .LVU427
 265:boards/TMC5072_eval.c **** 		}
 1322              		.loc 1 265 4 is_stmt 0 view .LVU428
 1323 0450 2A68     		ldr	r2, [r5]
 1324              	.LVL148:
 265:boards/TMC5072_eval.c **** 		}
 1325              		.loc 1 265 4 view .LVU429
 1326 0452 A348     		ldr	r0, .L176
 1327              	.LVL149:
 265:boards/TMC5072_eval.c **** 		}
 1328              		.loc 1 265 4 view .LVU430
 1329 0454 FFF7FEFF 		bl	tmc5072_writeInt
 1330              	.LVL150:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1331              		.loc 1 124 11 view .LVU431
 1332 0458 0024     		movs	r4, #0
 1333 045a 12E6     		b	.L18
 1334              	.LVL151:
 1335              	.L57:
 270:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_DMAX(motor));
 1336              		.loc 1 270 3 is_stmt 1 view .LVU432
 1337 045c 2023     		movs	r3, #32
 1338 045e 03FA01F1 		lsl	r1, r3, r1
 1339              	.LVL152:
 270:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_DMAX(motor));
 1340              		.loc 1 270 3 is_stmt 0 view .LVU433
 1341 0462 41F00801 		orr	r1, r1, #8
 1342 0466 C9B2     		uxtb	r1, r1
 270:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_DMAX(motor));
 1343              		.loc 1 270 5 view .LVU434
 1344 0468 20B9     		cbnz	r0, .L93
 271:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1345              		.loc 1 271 4 is_stmt 1 view .LVU435
 1346              	.LBB353:
 1347              	.LBI353:
  41:boards/TMC5072_eval.c **** {
 1348              		.loc 1 41 31 view .LVU436
 1349              	.LVL153:
  41:boards/TMC5072_eval.c **** {
 1350              		.loc 1 41 31 is_stmt 0 view .LVU437
 1351              	.LBE353:
  43:boards/TMC5072_eval.c **** 
 1352              		.loc 1 43 2 is_stmt 1 view .LVU438
  45:boards/TMC5072_eval.c **** }
 1353              		.loc 1 45 2 view .LVU439
 271:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1354              		.loc 1 271 13 is_stmt 0 view .LVU440
 1355 046a 9D48     		ldr	r0, .L176
 1356              	.LVL154:
 271:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1357              		.loc 1 271 13 view .LVU441
 1358 046c FFF7FEFF 		bl	tmc5072_readInt
 1359              	.LVL155:
 271:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1360              		.loc 1 271 11 view .LVU442
 1361 0470 2860     		str	r0, [r5]
 1362 0472 06E6     		b	.L18
 1363              	.LVL156:
 1364              	.L93:
 272:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_DMAX(motor), *value);
 1365              		.loc 1 272 10 is_stmt 1 view .LVU443
 273:boards/TMC5072_eval.c **** 		}
 1366              		.loc 1 273 4 view .LVU444
 1367              	.LBB354:
 1368              	.LBI354:
  41:boards/TMC5072_eval.c **** {
 1369              		.loc 1 41 31 view .LVU445
  41:boards/TMC5072_eval.c **** {
 1370              		.loc 1 41 31 is_stmt 0 view .LVU446
 1371              	.LBE354:
  43:boards/TMC5072_eval.c **** 
 1372              		.loc 1 43 2 is_stmt 1 view .LVU447
  45:boards/TMC5072_eval.c **** }
 1373              		.loc 1 45 2 view .LVU448
 273:boards/TMC5072_eval.c **** 		}
 1374              		.loc 1 273 4 is_stmt 0 view .LVU449
 1375 0474 2A68     		ldr	r2, [r5]
 1376              	.LVL157:
 273:boards/TMC5072_eval.c **** 		}
 1377              		.loc 1 273 4 view .LVU450
 1378 0476 9A48     		ldr	r0, .L176
 1379              	.LVL158:
 273:boards/TMC5072_eval.c **** 		}
 1380              		.loc 1 273 4 view .LVU451
 1381 0478 FFF7FEFF 		bl	tmc5072_writeInt
 1382              	.LVL159:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1383              		.loc 1 124 11 view .LVU452
 1384 047c 0024     		movs	r4, #0
 1385 047e 00E6     		b	.L18
 1386              	.LVL160:
 1387              	.L56:
 278:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_D1(motor));
 1388              		.loc 1 278 3 is_stmt 1 view .LVU453
 1389 0480 2023     		movs	r3, #32
 1390 0482 03FA01F1 		lsl	r1, r3, r1
 1391              	.LVL161:
 278:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_D1(motor));
 1392              		.loc 1 278 3 is_stmt 0 view .LVU454
 1393 0486 41F00A01 		orr	r1, r1, #10
 1394 048a C9B2     		uxtb	r1, r1
 278:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_D1(motor));
 1395              		.loc 1 278 5 view .LVU455
 1396 048c 20B9     		cbnz	r0, .L94
 279:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1397              		.loc 1 279 4 is_stmt 1 view .LVU456
 1398              	.LBB355:
 1399              	.LBI355:
  41:boards/TMC5072_eval.c **** {
 1400              		.loc 1 41 31 view .LVU457
 1401              	.LVL162:
  41:boards/TMC5072_eval.c **** {
 1402              		.loc 1 41 31 is_stmt 0 view .LVU458
 1403              	.LBE355:
  43:boards/TMC5072_eval.c **** 
 1404              		.loc 1 43 2 is_stmt 1 view .LVU459
  45:boards/TMC5072_eval.c **** }
 1405              		.loc 1 45 2 view .LVU460
 279:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1406              		.loc 1 279 13 is_stmt 0 view .LVU461
 1407 048e 9448     		ldr	r0, .L176
 1408              	.LVL163:
 279:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1409              		.loc 1 279 13 view .LVU462
 1410 0490 FFF7FEFF 		bl	tmc5072_readInt
 1411              	.LVL164:
 279:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1412              		.loc 1 279 11 view .LVU463
 1413 0494 2860     		str	r0, [r5]
 1414 0496 F4E5     		b	.L18
 1415              	.LVL165:
 1416              	.L94:
 280:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_D1(motor), *value);
 1417              		.loc 1 280 10 is_stmt 1 view .LVU464
 281:boards/TMC5072_eval.c **** 		}
 1418              		.loc 1 281 4 view .LVU465
 1419              	.LBB356:
 1420              	.LBI356:
  41:boards/TMC5072_eval.c **** {
 1421              		.loc 1 41 31 view .LVU466
  41:boards/TMC5072_eval.c **** {
 1422              		.loc 1 41 31 is_stmt 0 view .LVU467
 1423              	.LBE356:
  43:boards/TMC5072_eval.c **** 
 1424              		.loc 1 43 2 is_stmt 1 view .LVU468
  45:boards/TMC5072_eval.c **** }
 1425              		.loc 1 45 2 view .LVU469
 281:boards/TMC5072_eval.c **** 		}
 1426              		.loc 1 281 4 is_stmt 0 view .LVU470
 1427 0498 2A68     		ldr	r2, [r5]
 1428              	.LVL166:
 281:boards/TMC5072_eval.c **** 		}
 1429              		.loc 1 281 4 view .LVU471
 1430 049a 9148     		ldr	r0, .L176
 1431              	.LVL167:
 281:boards/TMC5072_eval.c **** 		}
 1432              		.loc 1 281 4 view .LVU472
 1433 049c FFF7FEFF 		bl	tmc5072_writeInt
 1434              	.LVL168:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1435              		.loc 1 124 11 view .LVU473
 1436 04a0 0024     		movs	r4, #0
 1437 04a2 EEE5     		b	.L18
 1438              	.LVL169:
 1439              	.L55:
 286:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VSTART(motor));
 1440              		.loc 1 286 3 is_stmt 1 view .LVU474
 1441 04a4 2023     		movs	r3, #32
 1442 04a6 03FA01F1 		lsl	r1, r3, r1
 1443              	.LVL170:
 286:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VSTART(motor));
 1444              		.loc 1 286 3 is_stmt 0 view .LVU475
 1445 04aa 41F00301 		orr	r1, r1, #3
 1446 04ae C9B2     		uxtb	r1, r1
 286:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VSTART(motor));
 1447              		.loc 1 286 5 view .LVU476
 1448 04b0 20B9     		cbnz	r0, .L95
 287:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1449              		.loc 1 287 4 is_stmt 1 view .LVU477
 1450              	.LBB357:
 1451              	.LBI357:
  41:boards/TMC5072_eval.c **** {
 1452              		.loc 1 41 31 view .LVU478
 1453              	.LVL171:
  41:boards/TMC5072_eval.c **** {
 1454              		.loc 1 41 31 is_stmt 0 view .LVU479
 1455              	.LBE357:
  43:boards/TMC5072_eval.c **** 
 1456              		.loc 1 43 2 is_stmt 1 view .LVU480
  45:boards/TMC5072_eval.c **** }
 1457              		.loc 1 45 2 view .LVU481
 287:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1458              		.loc 1 287 13 is_stmt 0 view .LVU482
 1459 04b2 8B48     		ldr	r0, .L176
 1460              	.LVL172:
 287:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1461              		.loc 1 287 13 view .LVU483
 1462 04b4 FFF7FEFF 		bl	tmc5072_readInt
 1463              	.LVL173:
 287:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1464              		.loc 1 287 11 view .LVU484
 1465 04b8 2860     		str	r0, [r5]
 1466 04ba E2E5     		b	.L18
 1467              	.LVL174:
 1468              	.L95:
 288:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VSTART(motor), *value);
 1469              		.loc 1 288 10 is_stmt 1 view .LVU485
 289:boards/TMC5072_eval.c **** 		}
 1470              		.loc 1 289 4 view .LVU486
 1471              	.LBB358:
 1472              	.LBI358:
  41:boards/TMC5072_eval.c **** {
 1473              		.loc 1 41 31 view .LVU487
  41:boards/TMC5072_eval.c **** {
 1474              		.loc 1 41 31 is_stmt 0 view .LVU488
 1475              	.LBE358:
  43:boards/TMC5072_eval.c **** 
 1476              		.loc 1 43 2 is_stmt 1 view .LVU489
  45:boards/TMC5072_eval.c **** }
 1477              		.loc 1 45 2 view .LVU490
 289:boards/TMC5072_eval.c **** 		}
 1478              		.loc 1 289 4 is_stmt 0 view .LVU491
 1479 04bc 2A68     		ldr	r2, [r5]
 1480              	.LVL175:
 289:boards/TMC5072_eval.c **** 		}
 1481              		.loc 1 289 4 view .LVU492
 1482 04be 8848     		ldr	r0, .L176
 1483              	.LVL176:
 289:boards/TMC5072_eval.c **** 		}
 1484              		.loc 1 289 4 view .LVU493
 1485 04c0 FFF7FEFF 		bl	tmc5072_writeInt
 1486              	.LVL177:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1487              		.loc 1 124 11 view .LVU494
 1488 04c4 0024     		movs	r4, #0
 1489 04c6 DCE5     		b	.L18
 1490              	.LVL178:
 1491              	.L54:
 294:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VSTOP(motor));
 1492              		.loc 1 294 3 is_stmt 1 view .LVU495
 1493 04c8 2023     		movs	r3, #32
 1494 04ca 03FA01F1 		lsl	r1, r3, r1
 1495              	.LVL179:
 294:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VSTOP(motor));
 1496              		.loc 1 294 3 is_stmt 0 view .LVU496
 1497 04ce 41F00B01 		orr	r1, r1, #11
 1498 04d2 C9B2     		uxtb	r1, r1
 294:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VSTOP(motor));
 1499              		.loc 1 294 5 view .LVU497
 1500 04d4 20B9     		cbnz	r0, .L96
 295:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1501              		.loc 1 295 4 is_stmt 1 view .LVU498
 1502              	.LBB359:
 1503              	.LBI359:
  41:boards/TMC5072_eval.c **** {
 1504              		.loc 1 41 31 view .LVU499
 1505              	.LVL180:
  41:boards/TMC5072_eval.c **** {
 1506              		.loc 1 41 31 is_stmt 0 view .LVU500
 1507              	.LBE359:
  43:boards/TMC5072_eval.c **** 
 1508              		.loc 1 43 2 is_stmt 1 view .LVU501
  45:boards/TMC5072_eval.c **** }
 1509              		.loc 1 45 2 view .LVU502
 295:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1510              		.loc 1 295 13 is_stmt 0 view .LVU503
 1511 04d6 8248     		ldr	r0, .L176
 1512              	.LVL181:
 295:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1513              		.loc 1 295 13 view .LVU504
 1514 04d8 FFF7FEFF 		bl	tmc5072_readInt
 1515              	.LVL182:
 295:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1516              		.loc 1 295 11 view .LVU505
 1517 04dc 2860     		str	r0, [r5]
 1518 04de D0E5     		b	.L18
 1519              	.LVL183:
 1520              	.L96:
 296:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VSTOP(motor), *value);
 1521              		.loc 1 296 10 is_stmt 1 view .LVU506
 297:boards/TMC5072_eval.c **** 		}
 1522              		.loc 1 297 4 view .LVU507
 1523              	.LBB360:
 1524              	.LBI360:
  41:boards/TMC5072_eval.c **** {
 1525              		.loc 1 41 31 view .LVU508
  41:boards/TMC5072_eval.c **** {
 1526              		.loc 1 41 31 is_stmt 0 view .LVU509
 1527              	.LBE360:
  43:boards/TMC5072_eval.c **** 
 1528              		.loc 1 43 2 is_stmt 1 view .LVU510
  45:boards/TMC5072_eval.c **** }
 1529              		.loc 1 45 2 view .LVU511
 297:boards/TMC5072_eval.c **** 		}
 1530              		.loc 1 297 4 is_stmt 0 view .LVU512
 1531 04e0 2A68     		ldr	r2, [r5]
 1532              	.LVL184:
 297:boards/TMC5072_eval.c **** 		}
 1533              		.loc 1 297 4 view .LVU513
 1534 04e2 7F48     		ldr	r0, .L176
 1535              	.LVL185:
 297:boards/TMC5072_eval.c **** 		}
 1536              		.loc 1 297 4 view .LVU514
 1537 04e4 FFF7FEFF 		bl	tmc5072_writeInt
 1538              	.LVL186:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1539              		.loc 1 124 11 view .LVU515
 1540 04e8 0024     		movs	r4, #0
 1541 04ea CAE5     		b	.L18
 1542              	.LVL187:
 1543              	.L53:
 302:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_TZEROWAIT(motor));
 1544              		.loc 1 302 3 is_stmt 1 view .LVU516
 1545 04ec 2023     		movs	r3, #32
 1546 04ee 03FA01F1 		lsl	r1, r3, r1
 1547              	.LVL188:
 302:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_TZEROWAIT(motor));
 1548              		.loc 1 302 3 is_stmt 0 view .LVU517
 1549 04f2 41F00C01 		orr	r1, r1, #12
 1550 04f6 C9B2     		uxtb	r1, r1
 302:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_TZEROWAIT(motor));
 1551              		.loc 1 302 5 view .LVU518
 1552 04f8 20B9     		cbnz	r0, .L97
 303:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1553              		.loc 1 303 4 is_stmt 1 view .LVU519
 1554              	.LBB361:
 1555              	.LBI361:
  41:boards/TMC5072_eval.c **** {
 1556              		.loc 1 41 31 view .LVU520
 1557              	.LVL189:
  41:boards/TMC5072_eval.c **** {
 1558              		.loc 1 41 31 is_stmt 0 view .LVU521
 1559              	.LBE361:
  43:boards/TMC5072_eval.c **** 
 1560              		.loc 1 43 2 is_stmt 1 view .LVU522
  45:boards/TMC5072_eval.c **** }
 1561              		.loc 1 45 2 view .LVU523
 303:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1562              		.loc 1 303 13 is_stmt 0 view .LVU524
 1563 04fa 7948     		ldr	r0, .L176
 1564              	.LVL190:
 303:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1565              		.loc 1 303 13 view .LVU525
 1566 04fc FFF7FEFF 		bl	tmc5072_readInt
 1567              	.LVL191:
 303:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1568              		.loc 1 303 11 view .LVU526
 1569 0500 2860     		str	r0, [r5]
 1570 0502 BEE5     		b	.L18
 1571              	.LVL192:
 1572              	.L97:
 304:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_TZEROWAIT(motor), *value);
 1573              		.loc 1 304 10 is_stmt 1 view .LVU527
 305:boards/TMC5072_eval.c **** 		}
 1574              		.loc 1 305 4 view .LVU528
 1575              	.LBB362:
 1576              	.LBI362:
  41:boards/TMC5072_eval.c **** {
 1577              		.loc 1 41 31 view .LVU529
  41:boards/TMC5072_eval.c **** {
 1578              		.loc 1 41 31 is_stmt 0 view .LVU530
 1579              	.LBE362:
  43:boards/TMC5072_eval.c **** 
 1580              		.loc 1 43 2 is_stmt 1 view .LVU531
  45:boards/TMC5072_eval.c **** }
 1581              		.loc 1 45 2 view .LVU532
 305:boards/TMC5072_eval.c **** 		}
 1582              		.loc 1 305 4 is_stmt 0 view .LVU533
 1583 0504 2A68     		ldr	r2, [r5]
 1584              	.LVL193:
 305:boards/TMC5072_eval.c **** 		}
 1585              		.loc 1 305 4 view .LVU534
 1586 0506 7648     		ldr	r0, .L176
 1587              	.LVL194:
 305:boards/TMC5072_eval.c **** 		}
 1588              		.loc 1 305 4 view .LVU535
 1589 0508 FFF7FEFF 		bl	tmc5072_writeInt
 1590              	.LVL195:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1591              		.loc 1 124 11 view .LVU536
 1592 050c 0024     		movs	r4, #0
 1593 050e B8E5     		b	.L18
 1594              	.LVL196:
 1595              	.L52:
 310:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor));
 1596              		.loc 1 310 3 is_stmt 1 view .LVU537
 1597 0510 2023     		movs	r3, #32
 1598 0512 03FA01F1 		lsl	r1, r3, r1
 1599              	.LVL197:
 310:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor));
 1600              		.loc 1 310 3 is_stmt 0 view .LVU538
 1601 0516 41F01101 		orr	r1, r1, #17
 1602 051a C9B2     		uxtb	r1, r1
 310:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor));
 1603              		.loc 1 310 5 view .LVU539
 1604 051c 20B9     		cbnz	r0, .L98
 311:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1605              		.loc 1 311 4 is_stmt 1 view .LVU540
 1606              	.LBB363:
 1607              	.LBI363:
  41:boards/TMC5072_eval.c **** {
 1608              		.loc 1 41 31 view .LVU541
 1609              	.LVL198:
  41:boards/TMC5072_eval.c **** {
 1610              		.loc 1 41 31 is_stmt 0 view .LVU542
 1611              	.LBE363:
  43:boards/TMC5072_eval.c **** 
 1612              		.loc 1 43 2 is_stmt 1 view .LVU543
  45:boards/TMC5072_eval.c **** }
 1613              		.loc 1 45 2 view .LVU544
 311:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1614              		.loc 1 311 13 is_stmt 0 view .LVU545
 1615 051e 7048     		ldr	r0, .L176
 1616              	.LVL199:
 311:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1617              		.loc 1 311 13 view .LVU546
 1618 0520 FFF7FEFF 		bl	tmc5072_readInt
 1619              	.LVL200:
 311:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1620              		.loc 1 311 11 view .LVU547
 1621 0524 2860     		str	r0, [r5]
 1622 0526 ACE5     		b	.L18
 1623              	.LVL201:
 1624              	.L98:
 312:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor), *value);
 1625              		.loc 1 312 10 is_stmt 1 view .LVU548
 313:boards/TMC5072_eval.c **** 		}
 1626              		.loc 1 313 4 view .LVU549
 1627              	.LBB364:
 1628              	.LBI364:
  41:boards/TMC5072_eval.c **** {
 1629              		.loc 1 41 31 view .LVU550
  41:boards/TMC5072_eval.c **** {
 1630              		.loc 1 41 31 is_stmt 0 view .LVU551
 1631              	.LBE364:
  43:boards/TMC5072_eval.c **** 
 1632              		.loc 1 43 2 is_stmt 1 view .LVU552
  45:boards/TMC5072_eval.c **** }
 1633              		.loc 1 45 2 view .LVU553
 313:boards/TMC5072_eval.c **** 		}
 1634              		.loc 1 313 4 is_stmt 0 view .LVU554
 1635 0528 2A68     		ldr	r2, [r5]
 1636              	.LVL202:
 313:boards/TMC5072_eval.c **** 		}
 1637              		.loc 1 313 4 view .LVU555
 1638 052a 6D48     		ldr	r0, .L176
 1639              	.LVL203:
 313:boards/TMC5072_eval.c **** 		}
 1640              		.loc 1 313 4 view .LVU556
 1641 052c FFF7FEFF 		bl	tmc5072_writeInt
 1642              	.LVL204:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1643              		.loc 1 124 11 view .LVU557
 1644 0530 0024     		movs	r4, #0
 1645 0532 A6E5     		b	.L18
 1646              	.LVL205:
 1647              	.L51:
 318:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VHIGH(motor));
 1648              		.loc 1 318 3 is_stmt 1 view .LVU558
 1649 0534 2023     		movs	r3, #32
 1650 0536 03FA01F1 		lsl	r1, r3, r1
 1651              	.LVL206:
 318:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VHIGH(motor));
 1652              		.loc 1 318 3 is_stmt 0 view .LVU559
 1653 053a 41F01201 		orr	r1, r1, #18
 1654 053e C9B2     		uxtb	r1, r1
 318:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VHIGH(motor));
 1655              		.loc 1 318 5 view .LVU560
 1656 0540 20B9     		cbnz	r0, .L99
 319:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1657              		.loc 1 319 4 is_stmt 1 view .LVU561
 1658              	.LBB365:
 1659              	.LBI365:
  41:boards/TMC5072_eval.c **** {
 1660              		.loc 1 41 31 view .LVU562
 1661              	.LVL207:
  41:boards/TMC5072_eval.c **** {
 1662              		.loc 1 41 31 is_stmt 0 view .LVU563
 1663              	.LBE365:
  43:boards/TMC5072_eval.c **** 
 1664              		.loc 1 43 2 is_stmt 1 view .LVU564
  45:boards/TMC5072_eval.c **** }
 1665              		.loc 1 45 2 view .LVU565
 319:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1666              		.loc 1 319 13 is_stmt 0 view .LVU566
 1667 0542 6748     		ldr	r0, .L176
 1668              	.LVL208:
 319:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1669              		.loc 1 319 13 view .LVU567
 1670 0544 FFF7FEFF 		bl	tmc5072_readInt
 1671              	.LVL209:
 319:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1672              		.loc 1 319 11 view .LVU568
 1673 0548 2860     		str	r0, [r5]
 1674 054a 9AE5     		b	.L18
 1675              	.LVL210:
 1676              	.L99:
 320:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VHIGH(motor), *value);
 1677              		.loc 1 320 10 is_stmt 1 view .LVU569
 321:boards/TMC5072_eval.c **** 		}
 1678              		.loc 1 321 4 view .LVU570
 1679              	.LBB366:
 1680              	.LBI366:
  41:boards/TMC5072_eval.c **** {
 1681              		.loc 1 41 31 view .LVU571
  41:boards/TMC5072_eval.c **** {
 1682              		.loc 1 41 31 is_stmt 0 view .LVU572
 1683              	.LBE366:
  43:boards/TMC5072_eval.c **** 
 1684              		.loc 1 43 2 is_stmt 1 view .LVU573
  45:boards/TMC5072_eval.c **** }
 1685              		.loc 1 45 2 view .LVU574
 321:boards/TMC5072_eval.c **** 		}
 1686              		.loc 1 321 4 is_stmt 0 view .LVU575
 1687 054c 2A68     		ldr	r2, [r5]
 1688              	.LVL211:
 321:boards/TMC5072_eval.c **** 		}
 1689              		.loc 1 321 4 view .LVU576
 1690 054e 6448     		ldr	r0, .L176
 1691              	.LVL212:
 321:boards/TMC5072_eval.c **** 		}
 1692              		.loc 1 321 4 view .LVU577
 1693 0550 FFF7FEFF 		bl	tmc5072_writeInt
 1694              	.LVL213:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1695              		.loc 1 124 11 view .LVU578
 1696 0554 0024     		movs	r4, #0
 1697 0556 94E5     		b	.L18
 1698              	.LVL214:
 1699              	.L50:
 326:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VDCMIN(motor));
 1700              		.loc 1 326 3 is_stmt 1 view .LVU579
 1701 0558 2023     		movs	r3, #32
 1702 055a 03FA01F1 		lsl	r1, r3, r1
 1703              	.LVL215:
 326:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VDCMIN(motor));
 1704              		.loc 1 326 3 is_stmt 0 view .LVU580
 1705 055e 41F01301 		orr	r1, r1, #19
 1706 0562 C9B2     		uxtb	r1, r1
 326:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VDCMIN(motor));
 1707              		.loc 1 326 5 view .LVU581
 1708 0564 20B9     		cbnz	r0, .L100
 327:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1709              		.loc 1 327 4 is_stmt 1 view .LVU582
 1710              	.LBB367:
 1711              	.LBI367:
  41:boards/TMC5072_eval.c **** {
 1712              		.loc 1 41 31 view .LVU583
 1713              	.LVL216:
  41:boards/TMC5072_eval.c **** {
 1714              		.loc 1 41 31 is_stmt 0 view .LVU584
 1715              	.LBE367:
  43:boards/TMC5072_eval.c **** 
 1716              		.loc 1 43 2 is_stmt 1 view .LVU585
  45:boards/TMC5072_eval.c **** }
 1717              		.loc 1 45 2 view .LVU586
 327:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1718              		.loc 1 327 13 is_stmt 0 view .LVU587
 1719 0566 5E48     		ldr	r0, .L176
 1720              	.LVL217:
 327:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1721              		.loc 1 327 13 view .LVU588
 1722 0568 FFF7FEFF 		bl	tmc5072_readInt
 1723              	.LVL218:
 327:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1724              		.loc 1 327 11 view .LVU589
 1725 056c 2860     		str	r0, [r5]
 1726 056e 88E5     		b	.L18
 1727              	.LVL219:
 1728              	.L100:
 328:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VDCMIN(motor), *value);
 1729              		.loc 1 328 10 is_stmt 1 view .LVU590
 329:boards/TMC5072_eval.c **** 		}
 1730              		.loc 1 329 4 view .LVU591
 1731              	.LBB368:
 1732              	.LBI368:
  41:boards/TMC5072_eval.c **** {
 1733              		.loc 1 41 31 view .LVU592
  41:boards/TMC5072_eval.c **** {
 1734              		.loc 1 41 31 is_stmt 0 view .LVU593
 1735              	.LBE368:
  43:boards/TMC5072_eval.c **** 
 1736              		.loc 1 43 2 is_stmt 1 view .LVU594
  45:boards/TMC5072_eval.c **** }
 1737              		.loc 1 45 2 view .LVU595
 329:boards/TMC5072_eval.c **** 		}
 1738              		.loc 1 329 4 is_stmt 0 view .LVU596
 1739 0570 2A68     		ldr	r2, [r5]
 1740              	.LVL220:
 329:boards/TMC5072_eval.c **** 		}
 1741              		.loc 1 329 4 view .LVU597
 1742 0572 5B48     		ldr	r0, .L176
 1743              	.LVL221:
 329:boards/TMC5072_eval.c **** 		}
 1744              		.loc 1 329 4 view .LVU598
 1745 0574 FFF7FEFF 		bl	tmc5072_writeInt
 1746              	.LVL222:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1747              		.loc 1 124 11 view .LVU599
 1748 0578 0024     		movs	r4, #0
 1749 057a 82E5     		b	.L18
 1750              	.LVL223:
 1751              	.L49:
 334:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VHIGHFS_MASK, TMC
 1752              		.loc 1 334 3 is_stmt 1 view .LVU600
 1753 057c 0901     		lsls	r1, r1, #4
 1754              	.LVL224:
 334:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VHIGHFS_MASK, TMC
 1755              		.loc 1 334 3 is_stmt 0 view .LVU601
 1756 057e 41F06C06 		orr	r6, r1, #108
 1757 0582 F6B2     		uxtb	r6, r6
 335:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1758              		.loc 1 335 13 view .LVU602
 1759 0584 5648     		ldr	r0, .L176
 1760              	.LVL225:
 335:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1761              		.loc 1 335 13 view .LVU603
 1762 0586 3146     		mov	r1, r6
 334:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VHIGHFS_MASK, TMC
 1763              		.loc 1 334 5 view .LVU604
 1764 0588 2CB9     		cbnz	r4, .L101
 335:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1765              		.loc 1 335 4 is_stmt 1 view .LVU605
 1766              	.LBB369:
 1767              	.LBI369:
  41:boards/TMC5072_eval.c **** {
 1768              		.loc 1 41 31 view .LVU606
 1769              	.LVL226:
  41:boards/TMC5072_eval.c **** {
 1770              		.loc 1 41 31 is_stmt 0 view .LVU607
 1771              	.LBE369:
  43:boards/TMC5072_eval.c **** 
 1772              		.loc 1 43 2 is_stmt 1 view .LVU608
  45:boards/TMC5072_eval.c **** }
 1773              		.loc 1 45 2 view .LVU609
 335:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1774              		.loc 1 335 13 is_stmt 0 view .LVU610
 1775 058a FFF7FEFF 		bl	tmc5072_readInt
 1776              	.LVL227:
 335:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1777              		.loc 1 335 13 view .LVU611
 1778 058e C0F38040 		ubfx	r0, r0, #18, #1
 335:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1779              		.loc 1 335 11 view .LVU612
 1780 0592 2860     		str	r0, [r5]
 1781 0594 75E5     		b	.L18
 1782              	.LVL228:
 1783              	.L101:
 336:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VHIGHFS_MASK, TMC5072_VHI
 1784              		.loc 1 336 10 is_stmt 1 view .LVU613
 337:boards/TMC5072_eval.c **** 		}
 1785              		.loc 1 337 4 view .LVU614
 1786              	.LBB370:
 1787              	.LBI370:
  41:boards/TMC5072_eval.c **** {
 1788              		.loc 1 41 31 view .LVU615
  41:boards/TMC5072_eval.c **** {
 1789              		.loc 1 41 31 is_stmt 0 view .LVU616
 1790              	.LBE370:
  43:boards/TMC5072_eval.c **** 
 1791              		.loc 1 43 2 is_stmt 1 view .LVU617
  45:boards/TMC5072_eval.c **** }
 1792              		.loc 1 45 2 view .LVU618
 1793              	.LBB371:
 1794              	.LBI371:
  41:boards/TMC5072_eval.c **** {
 1795              		.loc 1 41 31 view .LVU619
  41:boards/TMC5072_eval.c **** {
 1796              		.loc 1 41 31 is_stmt 0 view .LVU620
 1797              	.LBE371:
  43:boards/TMC5072_eval.c **** 
 1798              		.loc 1 43 2 is_stmt 1 view .LVU621
  45:boards/TMC5072_eval.c **** }
 1799              		.loc 1 45 2 view .LVU622
 337:boards/TMC5072_eval.c **** 		}
 1800              		.loc 1 337 4 is_stmt 0 view .LVU623
 1801 0596 FFF7FEFF 		bl	tmc5072_readInt
 1802              	.LVL229:
 337:boards/TMC5072_eval.c **** 		}
 1803              		.loc 1 337 4 view .LVU624
 1804 059a 2B68     		ldr	r3, [r5]
 1805 059c 9B04     		lsls	r3, r3, #18
 1806 059e 03F48023 		and	r3, r3, #262144
 1807 05a2 20F48022 		bic	r2, r0, #262144
 1808 05a6 1A43     		orrs	r2, r2, r3
 1809 05a8 4D48     		ldr	r0, .L176
 1810 05aa 3146     		mov	r1, r6
 1811 05ac FFF7FEFF 		bl	tmc5072_writeInt
 1812              	.LVL230:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1813              		.loc 1 124 11 view .LVU625
 1814 05b0 0024     		movs	r4, #0
 1815 05b2 66E5     		b	.L18
 1816              	.LVL231:
 1817              	.L47:
 341:boards/TMC5072_eval.c **** 			*value = motorToIC(motor)->velocity[motor];
 1818              		.loc 1 341 3 is_stmt 1 view .LVU626
 341:boards/TMC5072_eval.c **** 			*value = motorToIC(motor)->velocity[motor];
 1819              		.loc 1 341 5 is_stmt 0 view .LVU627
 1820 05b4 0028     		cmp	r0, #0
 1821 05b6 40F07983 		bne	.L163
 342:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1822              		.loc 1 342 4 is_stmt 1 view .LVU628
 1823              	.LVL232:
  43:boards/TMC5072_eval.c **** 
 1824              		.loc 1 43 2 view .LVU629
  45:boards/TMC5072_eval.c **** }
 1825              		.loc 1 45 2 view .LVU630
 342:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1826              		.loc 1 342 39 is_stmt 0 view .LVU631
 1827 05ba 494B     		ldr	r3, .L176
 1828 05bc 03EB8101 		add	r1, r3, r1, lsl #2
 1829              	.LVL233:
 342:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1830              		.loc 1 342 11 view .LVU632
 1831 05c0 CB68     		ldr	r3, [r1, #12]
 1832 05c2 2B60     		str	r3, [r5]
 1833 05c4 5DE5     		b	.L18
 1834              	.LVL234:
 1835              	.L46:
 349:boards/TMC5072_eval.c **** 			*value = 256 >> TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TOFF_MASK,
 1836              		.loc 1 349 3 is_stmt 1 view .LVU633
 349:boards/TMC5072_eval.c **** 			*value = 256 >> TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TOFF_MASK,
 1837              		.loc 1 349 5 is_stmt 0 view .LVU634
 1838 05c6 74B9     		cbnz	r4, .L102
 350:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1839              		.loc 1 350 4 is_stmt 1 view .LVU635
 1840              	.LBB372:
 1841              	.LBI372:
  41:boards/TMC5072_eval.c **** {
 1842              		.loc 1 41 31 view .LVU636
 1843              	.LVL235:
  41:boards/TMC5072_eval.c **** {
 1844              		.loc 1 41 31 is_stmt 0 view .LVU637
 1845              	.LBE372:
  43:boards/TMC5072_eval.c **** 
 1846              		.loc 1 43 2 is_stmt 1 view .LVU638
  45:boards/TMC5072_eval.c **** }
 1847              		.loc 1 45 2 view .LVU639
 350:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1848              		.loc 1 350 20 is_stmt 0 view .LVU640
 1849 05c8 0901     		lsls	r1, r1, #4
 1850              	.LVL236:
 350:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1851              		.loc 1 350 20 view .LVU641
 1852 05ca 41F06C01 		orr	r1, r1, #108
 1853 05ce 4448     		ldr	r0, .L176
 1854              	.LVL237:
 350:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1855              		.loc 1 350 20 view .LVU642
 1856 05d0 01F0FC01 		and	r1, r1, #252
 1857 05d4 FFF7FEFF 		bl	tmc5072_readInt
 1858              	.LVL238:
 1859 05d8 00F00F03 		and	r3, r0, #15
 350:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1860              		.loc 1 350 17 view .LVU643
 1861 05dc 4FF48070 		mov	r0, #256
 1862 05e0 1841     		asrs	r0, r0, r3
 350:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 1863              		.loc 1 350 11 view .LVU644
 1864 05e2 2860     		str	r0, [r5]
 1865 05e4 4DE5     		b	.L18
 1866              	.LVL239:
 1867              	.L102:
 351:boards/TMC5072_eval.c **** 			switch(*value)
 1868              		.loc 1 351 10 is_stmt 1 view .LVU645
 352:boards/TMC5072_eval.c **** 			{
 1869              		.loc 1 352 4 view .LVU646
 352:boards/TMC5072_eval.c **** 			{
 1870              		.loc 1 352 11 is_stmt 0 view .LVU647
 1871 05e6 2B68     		ldr	r3, [r5]
 1872 05e8 102B     		cmp	r3, #16
 1873 05ea 39D0     		beq	.L103
 1874 05ec 0ADC     		bgt	.L104
 1875 05ee 013B     		subs	r3, r3, #1
 1876 05f0 072B     		cmp	r3, #7
 1877 05f2 0ED8     		bhi	.L105
 1878 05f4 072B     		cmp	r3, #7
 1879 05f6 0CD8     		bhi	.L105
 1880 05f8 DFE803F0 		tbb	[pc, r3]
 1881              	.L107:
 1882 05fc 15       		.byte	(.L110-.L107)/2
 1883 05fd 2C       		.byte	(.L109-.L107)/2
 1884 05fe 0B       		.byte	(.L105-.L107)/2
 1885 05ff 2E       		.byte	(.L108-.L107)/2
 1886 0600 0B       		.byte	(.L105-.L107)/2
 1887 0601 0B       		.byte	(.L105-.L107)/2
 1888 0602 0B       		.byte	(.L105-.L107)/2
 1889 0603 30       		.byte	(.L106-.L107)/2
 1890              		.p2align 1
 1891              	.L104:
 1892 0604 802B     		cmp	r3, #128
 1893 0606 31D0     		beq	.L111
 1894 0608 08DC     		bgt	.L112
 1895 060a 202B     		cmp	r3, #32
 1896 060c 2AD0     		beq	.L113
 1897 060e 402B     		cmp	r3, #64
 1898 0610 2AD0     		beq	.L114
 1899              	.L105:
 363:boards/TMC5072_eval.c **** 			}
 1900              		.loc 1 363 15 is_stmt 1 view .LVU648
 363:boards/TMC5072_eval.c **** 			}
 1901              		.loc 1 363 22 is_stmt 0 view .LVU649
 1902 0612 4FF0FF33 		mov	r3, #-1
 1903 0616 2B60     		str	r3, [r5]
 363:boards/TMC5072_eval.c **** 			}
 1904              		.loc 1 363 29 is_stmt 1 view .LVU650
 366:boards/TMC5072_eval.c **** 			{
 1905              		.loc 1 366 4 view .LVU651
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1906              		.loc 1 124 11 is_stmt 0 view .LVU652
 1907 0618 0024     		movs	r4, #0
 1908 061a 32E5     		b	.L18
 1909              	.L112:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1910              		.loc 1 124 11 view .LVU653
 1911 061c B3F5807F 		cmp	r3, #256
 1912 0620 F7D1     		bne	.L105
 362:boards/TMC5072_eval.c **** 			default:   *value = -1;  break;
 1913              		.loc 1 362 15 is_stmt 1 view .LVU654
 362:boards/TMC5072_eval.c **** 			default:   *value = -1;  break;
 1914              		.loc 1 362 22 is_stmt 0 view .LVU655
 1915 0622 0023     		movs	r3, #0
 1916 0624 00E0     		b	.L173
 1917              	.L110:
 354:boards/TMC5072_eval.c **** 			case 2:    *value = 7;   break;
 1918              		.loc 1 354 15 is_stmt 1 view .LVU656
 354:boards/TMC5072_eval.c **** 			case 2:    *value = 7;   break;
 1919              		.loc 1 354 22 is_stmt 0 view .LVU657
 1920 0626 0823     		movs	r3, #8
 1921              	.L173:
 368:boards/TMC5072_eval.c **** 			}
 1922              		.loc 1 368 5 view .LVU658
 1923 0628 0901     		lsls	r1, r1, #4
 1924              	.LVL240:
 368:boards/TMC5072_eval.c **** 			}
 1925              		.loc 1 368 5 view .LVU659
 1926 062a 41F06C04 		orr	r4, r1, #108
 1927 062e E4B2     		uxtb	r4, r4
 1928 0630 2146     		mov	r1, r4
 362:boards/TMC5072_eval.c **** 			default:   *value = -1;  break;
 1929              		.loc 1 362 22 view .LVU660
 1930 0632 2B60     		str	r3, [r5]
 362:boards/TMC5072_eval.c **** 			default:   *value = -1;  break;
 1931              		.loc 1 362 29 is_stmt 1 view .LVU661
 366:boards/TMC5072_eval.c **** 			{
 1932              		.loc 1 366 4 view .LVU662
 368:boards/TMC5072_eval.c **** 			}
 1933              		.loc 1 368 5 view .LVU663
 1934              	.LBB373:
 1935              	.LBI373:
  41:boards/TMC5072_eval.c **** {
 1936              		.loc 1 41 31 view .LVU664
 1937              	.LVL241:
  41:boards/TMC5072_eval.c **** {
 1938              		.loc 1 41 31 is_stmt 0 view .LVU665
 1939              	.LBE373:
  43:boards/TMC5072_eval.c **** 
 1940              		.loc 1 43 2 is_stmt 1 view .LVU666
  45:boards/TMC5072_eval.c **** }
 1941              		.loc 1 45 2 view .LVU667
 1942              	.LBB374:
 1943              	.LBI374:
  41:boards/TMC5072_eval.c **** {
 1944              		.loc 1 41 31 view .LVU668
  41:boards/TMC5072_eval.c **** {
 1945              		.loc 1 41 31 is_stmt 0 view .LVU669
 1946              	.LBE374:
  43:boards/TMC5072_eval.c **** 
 1947              		.loc 1 43 2 is_stmt 1 view .LVU670
  45:boards/TMC5072_eval.c **** }
 1948              		.loc 1 45 2 view .LVU671
 368:boards/TMC5072_eval.c **** 			}
 1949              		.loc 1 368 5 is_stmt 0 view .LVU672
 1950 0634 2A48     		ldr	r0, .L176
 1951              	.LVL242:
 368:boards/TMC5072_eval.c **** 			}
 1952              		.loc 1 368 5 view .LVU673
 1953 0636 FFF7FEFF 		bl	tmc5072_readInt
 1954              	.LVL243:
 1955 063a 2B68     		ldr	r3, [r5]
 1956 063c 1B06     		lsls	r3, r3, #24
 1957 063e 03F07063 		and	r3, r3, #251658240
 1958 0642 20F07062 		bic	r2, r0, #251658240
 1959 0646 2146     		mov	r1, r4
 1960 0648 2548     		ldr	r0, .L176
 1961 064a 1A43     		orrs	r2, r2, r3
 1962 064c FFF7FEFF 		bl	tmc5072_writeInt
 1963              	.LVL244:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 1964              		.loc 1 124 11 view .LVU674
 1965 0650 0024     		movs	r4, #0
 1966 0652 16E5     		b	.L18
 1967              	.LVL245:
 1968              	.L109:
 355:boards/TMC5072_eval.c **** 			case 4:    *value = 6;   break;
 1969              		.loc 1 355 15 is_stmt 1 view .LVU675
 355:boards/TMC5072_eval.c **** 			case 4:    *value = 6;   break;
 1970              		.loc 1 355 22 is_stmt 0 view .LVU676
 1971 0654 0723     		movs	r3, #7
 1972 0656 E7E7     		b	.L173
 1973              	.L108:
 356:boards/TMC5072_eval.c **** 			case 8:    *value = 5;   break;
 1974              		.loc 1 356 15 is_stmt 1 view .LVU677
 356:boards/TMC5072_eval.c **** 			case 8:    *value = 5;   break;
 1975              		.loc 1 356 22 is_stmt 0 view .LVU678
 1976 0658 0623     		movs	r3, #6
 1977 065a E5E7     		b	.L173
 1978              	.L106:
 357:boards/TMC5072_eval.c **** 			case 16:   *value = 4;   break;
 1979              		.loc 1 357 15 is_stmt 1 view .LVU679
 357:boards/TMC5072_eval.c **** 			case 16:   *value = 4;   break;
 1980              		.loc 1 357 22 is_stmt 0 view .LVU680
 1981 065c 0523     		movs	r3, #5
 1982 065e E3E7     		b	.L173
 1983              	.L103:
 358:boards/TMC5072_eval.c **** 			case 32:   *value = 3;   break;
 1984              		.loc 1 358 15 is_stmt 1 view .LVU681
 358:boards/TMC5072_eval.c **** 			case 32:   *value = 3;   break;
 1985              		.loc 1 358 22 is_stmt 0 view .LVU682
 1986 0660 0423     		movs	r3, #4
 1987 0662 E1E7     		b	.L173
 1988              	.L113:
 359:boards/TMC5072_eval.c **** 			case 64:   *value = 2;   break;
 1989              		.loc 1 359 15 is_stmt 1 view .LVU683
 359:boards/TMC5072_eval.c **** 			case 64:   *value = 2;   break;
 1990              		.loc 1 359 22 is_stmt 0 view .LVU684
 1991 0664 0323     		movs	r3, #3
 1992 0666 DFE7     		b	.L173
 1993              	.L114:
 360:boards/TMC5072_eval.c **** 			case 128:  *value = 1;   break;
 1994              		.loc 1 360 15 is_stmt 1 view .LVU685
 360:boards/TMC5072_eval.c **** 			case 128:  *value = 1;   break;
 1995              		.loc 1 360 22 is_stmt 0 view .LVU686
 1996 0668 0223     		movs	r3, #2
 1997 066a DDE7     		b	.L173
 1998              	.L111:
 361:boards/TMC5072_eval.c **** 			case 256:  *value = 0;   break;
 1999              		.loc 1 361 15 is_stmt 1 view .LVU687
 361:boards/TMC5072_eval.c **** 			case 256:  *value = 0;   break;
 2000              		.loc 1 361 22 is_stmt 0 view .LVU688
 2001 066c 0123     		movs	r3, #1
 2002 066e DBE7     		b	.L173
 2003              	.L45:
 375:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TBL_MASK, TMC5072
 2004              		.loc 1 375 3 is_stmt 1 view .LVU689
 2005 0670 0901     		lsls	r1, r1, #4
 2006              	.LVL246:
 375:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TBL_MASK, TMC5072
 2007              		.loc 1 375 3 is_stmt 0 view .LVU690
 2008 0672 41F06C06 		orr	r6, r1, #108
 2009 0676 F6B2     		uxtb	r6, r6
 376:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2010              		.loc 1 376 13 view .LVU691
 2011 0678 1948     		ldr	r0, .L176
 2012              	.LVL247:
 376:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2013              		.loc 1 376 13 view .LVU692
 2014 067a 3146     		mov	r1, r6
 375:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TBL_MASK, TMC5072
 2015              		.loc 1 375 5 view .LVU693
 2016 067c 2CB9     		cbnz	r4, .L117
 376:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2017              		.loc 1 376 4 is_stmt 1 view .LVU694
 2018              	.LBB375:
 2019              	.LBI375:
  41:boards/TMC5072_eval.c **** {
 2020              		.loc 1 41 31 view .LVU695
 2021              	.LVL248:
  41:boards/TMC5072_eval.c **** {
 2022              		.loc 1 41 31 is_stmt 0 view .LVU696
 2023              	.LBE375:
  43:boards/TMC5072_eval.c **** 
 2024              		.loc 1 43 2 is_stmt 1 view .LVU697
  45:boards/TMC5072_eval.c **** }
 2025              		.loc 1 45 2 view .LVU698
 376:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2026              		.loc 1 376 13 is_stmt 0 view .LVU699
 2027 067e FFF7FEFF 		bl	tmc5072_readInt
 2028              	.LVL249:
 2029 0682 C0F3C130 		ubfx	r0, r0, #15, #2
 376:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2030              		.loc 1 376 11 view .LVU700
 2031 0686 2860     		str	r0, [r5]
 2032 0688 FBE4     		b	.L18
 2033              	.L117:
 377:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TBL_MASK, TMC5072_TBL_SHI
 2034              		.loc 1 377 10 is_stmt 1 view .LVU701
 378:boards/TMC5072_eval.c **** 		}
 2035              		.loc 1 378 4 view .LVU702
 2036              	.LBB376:
 2037              	.LBI376:
  41:boards/TMC5072_eval.c **** {
 2038              		.loc 1 41 31 view .LVU703
 2039              	.LVL250:
  41:boards/TMC5072_eval.c **** {
 2040              		.loc 1 41 31 is_stmt 0 view .LVU704
 2041              	.LBE376:
  43:boards/TMC5072_eval.c **** 
 2042              		.loc 1 43 2 is_stmt 1 view .LVU705
  45:boards/TMC5072_eval.c **** }
 2043              		.loc 1 45 2 view .LVU706
 2044              	.LBB377:
 2045              	.LBI377:
  41:boards/TMC5072_eval.c **** {
 2046              		.loc 1 41 31 view .LVU707
  41:boards/TMC5072_eval.c **** {
 2047              		.loc 1 41 31 is_stmt 0 view .LVU708
 2048              	.LBE377:
  43:boards/TMC5072_eval.c **** 
 2049              		.loc 1 43 2 is_stmt 1 view .LVU709
  45:boards/TMC5072_eval.c **** }
 2050              		.loc 1 45 2 view .LVU710
 378:boards/TMC5072_eval.c **** 		}
 2051              		.loc 1 378 4 is_stmt 0 view .LVU711
 2052 068a FFF7FEFF 		bl	tmc5072_readInt
 2053              	.LVL251:
 2054 068e 2B68     		ldr	r3, [r5]
 2055 0690 DB03     		lsls	r3, r3, #15
 2056 0692 03F4C033 		and	r3, r3, #98304
 2057 0696 20F4C032 		bic	r2, r0, #98304
 2058 069a 1A43     		orrs	r2, r2, r3
 2059 069c 1048     		ldr	r0, .L176
 2060 069e 3146     		mov	r1, r6
 2061 06a0 FFF7FEFF 		bl	tmc5072_writeInt
 2062              	.LVL252:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2063              		.loc 1 124 11 view .LVU712
 2064 06a4 0024     		movs	r4, #0
 2065 06a6 ECE4     		b	.L18
 2066              	.LVL253:
 2067              	.L44:
 383:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC50
 2068              		.loc 1 383 3 is_stmt 1 view .LVU713
 2069 06a8 0901     		lsls	r1, r1, #4
 2070              	.LVL254:
 383:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC50
 2071              		.loc 1 383 3 is_stmt 0 view .LVU714
 2072 06aa 41F06C06 		orr	r6, r1, #108
 2073 06ae F6B2     		uxtb	r6, r6
 384:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2074              		.loc 1 384 13 view .LVU715
 2075 06b0 0B48     		ldr	r0, .L176
 2076              	.LVL255:
 384:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2077              		.loc 1 384 13 view .LVU716
 2078 06b2 3146     		mov	r1, r6
 383:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC50
 2079              		.loc 1 383 5 view .LVU717
 2080 06b4 2CB9     		cbnz	r4, .L118
 384:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2081              		.loc 1 384 4 is_stmt 1 view .LVU718
 2082              	.LBB378:
 2083              	.LBI378:
  41:boards/TMC5072_eval.c **** {
 2084              		.loc 1 41 31 view .LVU719
 2085              	.LVL256:
  41:boards/TMC5072_eval.c **** {
 2086              		.loc 1 41 31 is_stmt 0 view .LVU720
 2087              	.LBE378:
  43:boards/TMC5072_eval.c **** 
 2088              		.loc 1 43 2 is_stmt 1 view .LVU721
  45:boards/TMC5072_eval.c **** }
 2089              		.loc 1 45 2 view .LVU722
 384:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2090              		.loc 1 384 13 is_stmt 0 view .LVU723
 2091 06b6 FFF7FEFF 		bl	tmc5072_readInt
 2092              	.LVL257:
 2093 06ba C0F34030 		ubfx	r0, r0, #13, #1
 384:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2094              		.loc 1 384 11 view .LVU724
 2095 06be 2860     		str	r0, [r5]
 2096 06c0 DFE4     		b	.L18
 2097              	.L118:
 385:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC5072_RNDTF
 2098              		.loc 1 385 10 is_stmt 1 view .LVU725
 386:boards/TMC5072_eval.c **** 		}
 2099              		.loc 1 386 4 view .LVU726
 2100              	.LBB379:
 2101              	.LBI379:
  41:boards/TMC5072_eval.c **** {
 2102              		.loc 1 41 31 view .LVU727
 2103              	.LVL258:
  41:boards/TMC5072_eval.c **** {
 2104              		.loc 1 41 31 is_stmt 0 view .LVU728
 2105              	.LBE379:
  43:boards/TMC5072_eval.c **** 
 2106              		.loc 1 43 2 is_stmt 1 view .LVU729
  45:boards/TMC5072_eval.c **** }
 2107              		.loc 1 45 2 view .LVU730
 2108              	.LBB380:
 2109              	.LBI380:
  41:boards/TMC5072_eval.c **** {
 2110              		.loc 1 41 31 view .LVU731
  41:boards/TMC5072_eval.c **** {
 2111              		.loc 1 41 31 is_stmt 0 view .LVU732
 2112              	.LBE380:
  43:boards/TMC5072_eval.c **** 
 2113              		.loc 1 43 2 is_stmt 1 view .LVU733
  45:boards/TMC5072_eval.c **** }
 2114              		.loc 1 45 2 view .LVU734
 386:boards/TMC5072_eval.c **** 		}
 2115              		.loc 1 386 4 is_stmt 0 view .LVU735
 2116 06c2 FFF7FEFF 		bl	tmc5072_readInt
 2117              	.LVL259:
 2118 06c6 2B68     		ldr	r3, [r5]
 2119 06c8 5B03     		lsls	r3, r3, #13
 2120 06ca 03F40053 		and	r3, r3, #8192
 2121 06ce 20F40052 		bic	r2, r0, #8192
 2122 06d2 1A43     		orrs	r2, r2, r3
 2123 06d4 0248     		ldr	r0, .L176
 2124 06d6 3146     		mov	r1, r6
 2125 06d8 FFF7FEFF 		bl	tmc5072_writeInt
 2126              	.LVL260:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2127              		.loc 1 124 11 view .LVU736
 2128 06dc 0024     		movs	r4, #0
 2129 06de D0E4     		b	.L18
 2130              	.L177:
 2131              		.align	2
 2132              	.L176:
 2133 06e0 00000000 		.word	.LANCHOR0
 2134              	.LVL261:
 2135              	.L43:
 391:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_DISFDCC_MASK, TMC
 2136              		.loc 1 391 3 is_stmt 1 view .LVU737
 2137 06e4 0901     		lsls	r1, r1, #4
 2138              	.LVL262:
 391:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_DISFDCC_MASK, TMC
 2139              		.loc 1 391 3 is_stmt 0 view .LVU738
 2140 06e6 41F06C06 		orr	r6, r1, #108
 2141 06ea F6B2     		uxtb	r6, r6
 392:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2142              		.loc 1 392 13 view .LVU739
 2143 06ec B748     		ldr	r0, .L178
 2144              	.LVL263:
 392:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2145              		.loc 1 392 13 view .LVU740
 2146 06ee 3146     		mov	r1, r6
 391:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_DISFDCC_MASK, TMC
 2147              		.loc 1 391 5 view .LVU741
 2148 06f0 2CB9     		cbnz	r4, .L119
 392:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2149              		.loc 1 392 4 is_stmt 1 view .LVU742
 2150              	.LBB381:
 2151              	.LBI381:
  41:boards/TMC5072_eval.c **** {
 2152              		.loc 1 41 31 view .LVU743
 2153              	.LVL264:
  41:boards/TMC5072_eval.c **** {
 2154              		.loc 1 41 31 is_stmt 0 view .LVU744
 2155              	.LBE381:
  43:boards/TMC5072_eval.c **** 
 2156              		.loc 1 43 2 is_stmt 1 view .LVU745
  45:boards/TMC5072_eval.c **** }
 2157              		.loc 1 45 2 view .LVU746
 392:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2158              		.loc 1 392 13 is_stmt 0 view .LVU747
 2159 06f2 FFF7FEFF 		bl	tmc5072_readInt
 2160              	.LVL265:
 2161 06f6 C0F30030 		ubfx	r0, r0, #12, #1
 392:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2162              		.loc 1 392 11 view .LVU748
 2163 06fa 2860     		str	r0, [r5]
 2164 06fc C1E4     		b	.L18
 2165              	.L119:
 393:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_DISFDCC_MASK, TMC5072_DIS
 2166              		.loc 1 393 10 is_stmt 1 view .LVU749
 394:boards/TMC5072_eval.c **** 		}
 2167              		.loc 1 394 4 view .LVU750
 2168              	.LBB382:
 2169              	.LBI382:
  41:boards/TMC5072_eval.c **** {
 2170              		.loc 1 41 31 view .LVU751
 2171              	.LVL266:
  41:boards/TMC5072_eval.c **** {
 2172              		.loc 1 41 31 is_stmt 0 view .LVU752
 2173              	.LBE382:
  43:boards/TMC5072_eval.c **** 
 2174              		.loc 1 43 2 is_stmt 1 view .LVU753
  45:boards/TMC5072_eval.c **** }
 2175              		.loc 1 45 2 view .LVU754
 2176              	.LBB383:
 2177              	.LBI383:
  41:boards/TMC5072_eval.c **** {
 2178              		.loc 1 41 31 view .LVU755
  41:boards/TMC5072_eval.c **** {
 2179              		.loc 1 41 31 is_stmt 0 view .LVU756
 2180              	.LBE383:
  43:boards/TMC5072_eval.c **** 
 2181              		.loc 1 43 2 is_stmt 1 view .LVU757
  45:boards/TMC5072_eval.c **** }
 2182              		.loc 1 45 2 view .LVU758
 394:boards/TMC5072_eval.c **** 		}
 2183              		.loc 1 394 4 is_stmt 0 view .LVU759
 2184 06fe FFF7FEFF 		bl	tmc5072_readInt
 2185              	.LVL267:
 2186 0702 2B68     		ldr	r3, [r5]
 2187 0704 1B03     		lsls	r3, r3, #12
 2188 0706 03F48053 		and	r3, r3, #4096
 2189 070a 20F48052 		bic	r2, r0, #4096
 2190 070e 1A43     		orrs	r2, r2, r3
 2191 0710 AE48     		ldr	r0, .L178
 2192 0712 3146     		mov	r1, r6
 2193 0714 FFF7FEFF 		bl	tmc5072_writeInt
 2194              	.LVL268:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2195              		.loc 1 124 11 view .LVU760
 2196 0718 0024     		movs	r4, #0
 2197 071a B2E4     		b	.L18
 2198              	.LVL269:
 2199              	.L42:
 399:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2200              		.loc 1 399 3 is_stmt 1 view .LVU761
 2201              	.LBB384:
 2202              	.LBI384:
  41:boards/TMC5072_eval.c **** {
 2203              		.loc 1 41 31 view .LVU762
  41:boards/TMC5072_eval.c **** {
 2204              		.loc 1 41 31 is_stmt 0 view .LVU763
 2205              	.LBE384:
  43:boards/TMC5072_eval.c **** 
 2206              		.loc 1 43 2 is_stmt 1 view .LVU764
  45:boards/TMC5072_eval.c **** }
 2207              		.loc 1 45 2 view .LVU765
 399:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2208              		.loc 1 399 15 is_stmt 0 view .LVU766
 2209 071c 0901     		lsls	r1, r1, #4
 2210              	.LVL270:
 399:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2211              		.loc 1 399 15 view .LVU767
 2212 071e 41F06C06 		orr	r6, r1, #108
 2213 0722 F6B2     		uxtb	r6, r6
 2214 0724 3146     		mov	r1, r6
 2215 0726 A948     		ldr	r0, .L178
 2216              	.LVL271:
 399:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2217              		.loc 1 399 15 view .LVU768
 2218 0728 FFF7FEFF 		bl	tmc5072_readInt
 2219              	.LVL272:
 403:boards/TMC5072_eval.c **** 			}
 2220              		.loc 1 403 14 view .LVU769
 2221 072c 3146     		mov	r1, r6
 399:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2222              		.loc 1 399 13 view .LVU770
 2223 072e C0F38037 		ubfx	r7, r0, #14, #1
 2224              	.LVL273:
 400:boards/TMC5072_eval.c **** 			if(tempValue)
 2225              		.loc 1 400 3 is_stmt 1 view .LVU771
 403:boards/TMC5072_eval.c **** 			}
 2226              		.loc 1 403 14 is_stmt 0 view .LVU772
 2227 0732 A648     		ldr	r0, .L178
 400:boards/TMC5072_eval.c **** 			if(tempValue)
 2228              		.loc 1 400 5 view .LVU773
 2229 0734 64B9     		cbnz	r4, .L120
 401:boards/TMC5072_eval.c **** 			{
 2230              		.loc 1 401 4 is_stmt 1 view .LVU774
 401:boards/TMC5072_eval.c **** 			{
 2231              		.loc 1 401 6 is_stmt 0 view .LVU775
 2232 0736 2FB1     		cbz	r7, .L121
 403:boards/TMC5072_eval.c **** 			}
 2233              		.loc 1 403 5 is_stmt 1 view .LVU776
 2234              	.LBB385:
 2235              	.LBI385:
  41:boards/TMC5072_eval.c **** {
 2236              		.loc 1 41 31 view .LVU777
 2237              	.LVL274:
  41:boards/TMC5072_eval.c **** {
 2238              		.loc 1 41 31 is_stmt 0 view .LVU778
 2239              	.LBE385:
  43:boards/TMC5072_eval.c **** 
 2240              		.loc 1 43 2 is_stmt 1 view .LVU779
  45:boards/TMC5072_eval.c **** }
 2241              		.loc 1 45 2 view .LVU780
 403:boards/TMC5072_eval.c **** 			}
 2242              		.loc 1 403 14 is_stmt 0 view .LVU781
 2243 0738 FFF7FEFF 		bl	tmc5072_readInt
 2244              	.LVL275:
 2245 073c C0F3C310 		ubfx	r0, r0, #7, #4
 403:boards/TMC5072_eval.c **** 			}
 2246              		.loc 1 403 12 view .LVU782
 2247 0740 2860     		str	r0, [r5]
 2248 0742 9EE4     		b	.L18
 2249              	.L121:
 407:boards/TMC5072_eval.c **** 				*value |= (*value & (1<<11)) << 3;
 2250              		.loc 1 407 5 is_stmt 1 view .LVU783
 2251              	.LBB386:
 2252              	.LBI386:
  41:boards/TMC5072_eval.c **** {
 2253              		.loc 1 41 31 view .LVU784
 2254              	.LVL276:
  41:boards/TMC5072_eval.c **** {
 2255              		.loc 1 41 31 is_stmt 0 view .LVU785
 2256              	.LBE386:
  43:boards/TMC5072_eval.c **** 
 2257              		.loc 1 43 2 is_stmt 1 view .LVU786
  45:boards/TMC5072_eval.c **** }
 2258              		.loc 1 45 2 view .LVU787
 407:boards/TMC5072_eval.c **** 				*value |= (*value & (1<<11)) << 3;
 2259              		.loc 1 407 14 is_stmt 0 view .LVU788
 2260 0744 FFF7FEFF 		bl	tmc5072_readInt
 2261              	.LVL277:
 408:boards/TMC5072_eval.c **** 			}
 2262              		.loc 1 408 5 is_stmt 1 view .LVU789
 407:boards/TMC5072_eval.c **** 				*value |= (*value & (1<<11)) << 3;
 2263              		.loc 1 407 14 is_stmt 0 view .LVU790
 2264 0748 C0F30210 		ubfx	r0, r0, #4, #3
 408:boards/TMC5072_eval.c **** 			}
 2265              		.loc 1 408 12 view .LVU791
 2266 074c 2860     		str	r0, [r5]
 2267 074e 98E4     		b	.L18
 2268              	.L120:
 410:boards/TMC5072_eval.c **** 			if(tempValue)
 2269              		.loc 1 410 10 is_stmt 1 view .LVU792
 411:boards/TMC5072_eval.c **** 			{
 2270              		.loc 1 411 4 view .LVU793
 411:boards/TMC5072_eval.c **** 			{
 2271              		.loc 1 411 6 is_stmt 0 view .LVU794
 2272 0750 77B1     		cbz	r7, .L122
 413:boards/TMC5072_eval.c **** 			}
 2273              		.loc 1 413 5 is_stmt 1 view .LVU795
 2274              	.LBB387:
 2275              	.LBI387:
  41:boards/TMC5072_eval.c **** {
 2276              		.loc 1 41 31 view .LVU796
 2277              	.LVL278:
  41:boards/TMC5072_eval.c **** {
 2278              		.loc 1 41 31 is_stmt 0 view .LVU797
 2279              	.LBE387:
  43:boards/TMC5072_eval.c **** 
 2280              		.loc 1 43 2 is_stmt 1 view .LVU798
  45:boards/TMC5072_eval.c **** }
 2281              		.loc 1 45 2 view .LVU799
 2282              	.LBB388:
 2283              	.LBI388:
  41:boards/TMC5072_eval.c **** {
 2284              		.loc 1 41 31 view .LVU800
  41:boards/TMC5072_eval.c **** {
 2285              		.loc 1 41 31 is_stmt 0 view .LVU801
 2286              	.LBE388:
  43:boards/TMC5072_eval.c **** 
 2287              		.loc 1 43 2 is_stmt 1 view .LVU802
  45:boards/TMC5072_eval.c **** }
 2288              		.loc 1 45 2 view .LVU803
 413:boards/TMC5072_eval.c **** 			}
 2289              		.loc 1 413 5 is_stmt 0 view .LVU804
 2290 0752 FFF7FEFF 		bl	tmc5072_readInt
 2291              	.LVL279:
 2292 0756 2B68     		ldr	r3, [r5]
 2293 0758 DB01     		lsls	r3, r3, #7
 2294 075a 03F4F063 		and	r3, r3, #1920
 2295 075e 20F4F062 		bic	r2, r0, #1920
 2296 0762 1A43     		orrs	r2, r2, r3
 2297 0764 9948     		ldr	r0, .L178
 2298 0766 3146     		mov	r1, r6
 2299 0768 FFF7FEFF 		bl	tmc5072_writeInt
 2300              	.LVL280:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2301              		.loc 1 124 11 view .LVU805
 2302 076c 0024     		movs	r4, #0
 2303 076e 88E4     		b	.L18
 2304              	.L122:
 417:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TFD_ALL_MASK, TMC5072_TF
 2305              		.loc 1 417 5 is_stmt 1 view .LVU806
 2306              	.LBB389:
 2307              	.LBI389:
  41:boards/TMC5072_eval.c **** {
 2308              		.loc 1 41 31 view .LVU807
 2309              	.LVL281:
  41:boards/TMC5072_eval.c **** {
 2310              		.loc 1 41 31 is_stmt 0 view .LVU808
 2311              	.LBE389:
  43:boards/TMC5072_eval.c **** 
 2312              		.loc 1 43 2 is_stmt 1 view .LVU809
  45:boards/TMC5072_eval.c **** }
 2313              		.loc 1 45 2 view .LVU810
 2314              	.LBB390:
 2315              	.LBI390:
  41:boards/TMC5072_eval.c **** {
 2316              		.loc 1 41 31 view .LVU811
  41:boards/TMC5072_eval.c **** {
 2317              		.loc 1 41 31 is_stmt 0 view .LVU812
 2318              	.LBE390:
  43:boards/TMC5072_eval.c **** 
 2319              		.loc 1 43 2 is_stmt 1 view .LVU813
  45:boards/TMC5072_eval.c **** }
 2320              		.loc 1 45 2 view .LVU814
 417:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TFD_ALL_MASK, TMC5072_TF
 2321              		.loc 1 417 5 is_stmt 0 view .LVU815
 2322 0770 FFF7FEFF 		bl	tmc5072_readInt
 2323              	.LVL282:
 2324 0774 2B68     		ldr	r3, [r5]
 2325 0776 1B02     		lsls	r3, r3, #8
 2326 0778 03F40063 		and	r3, r3, #2048
 2327 077c 20F40062 		bic	r2, r0, #2048
 2328 0780 1A43     		orrs	r2, r2, r3
 2329 0782 9248     		ldr	r0, .L178
 2330 0784 3146     		mov	r1, r6
 2331 0786 FFF7FEFF 		bl	tmc5072_writeInt
 2332              	.LVL283:
 418:boards/TMC5072_eval.c **** 			}
 2333              		.loc 1 418 5 is_stmt 1 view .LVU816
 2334              	.LBB391:
 2335              	.LBI391:
  41:boards/TMC5072_eval.c **** {
 2336              		.loc 1 41 31 view .LVU817
  41:boards/TMC5072_eval.c **** {
 2337              		.loc 1 41 31 is_stmt 0 view .LVU818
 2338              	.LBE391:
  43:boards/TMC5072_eval.c **** 
 2339              		.loc 1 43 2 is_stmt 1 view .LVU819
  45:boards/TMC5072_eval.c **** }
 2340              		.loc 1 45 2 view .LVU820
 2341              	.LBB392:
 2342              	.LBI392:
  41:boards/TMC5072_eval.c **** {
 2343              		.loc 1 41 31 view .LVU821
  41:boards/TMC5072_eval.c **** {
 2344              		.loc 1 41 31 is_stmt 0 view .LVU822
 2345              	.LBE392:
  43:boards/TMC5072_eval.c **** 
 2346              		.loc 1 43 2 is_stmt 1 view .LVU823
  45:boards/TMC5072_eval.c **** }
 2347              		.loc 1 45 2 view .LVU824
 418:boards/TMC5072_eval.c **** 			}
 2348              		.loc 1 418 5 is_stmt 0 view .LVU825
 2349 078a 3146     		mov	r1, r6
 2350 078c 8F48     		ldr	r0, .L178
 2351 078e FFF7FEFF 		bl	tmc5072_readInt
 2352              	.LVL284:
 2353 0792 2B68     		ldr	r3, [r5]
 2354 0794 1B01     		lsls	r3, r3, #4
 2355 0796 03F07003 		and	r3, r3, #112
 2356 079a 20F07002 		bic	r2, r0, #112
 2357 079e 1A43     		orrs	r2, r2, r3
 2358 07a0 8A48     		ldr	r0, .L178
 2359 07a2 3146     		mov	r1, r6
 2360 07a4 FFF7FEFF 		bl	tmc5072_writeInt
 2361              	.LVL285:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2362              		.loc 1 124 11 view .LVU826
 2363 07a8 3C46     		mov	r4, r7
 2364 07aa 6AE4     		b	.L18
 2365              	.LVL286:
 2366              	.L41:
 424:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2367              		.loc 1 424 3 is_stmt 1 view .LVU827
 2368              	.LBB393:
 2369              	.LBI393:
  41:boards/TMC5072_eval.c **** {
 2370              		.loc 1 41 31 view .LVU828
  41:boards/TMC5072_eval.c **** {
 2371              		.loc 1 41 31 is_stmt 0 view .LVU829
 2372              	.LBE393:
  43:boards/TMC5072_eval.c **** 
 2373              		.loc 1 43 2 is_stmt 1 view .LVU830
  45:boards/TMC5072_eval.c **** }
 2374              		.loc 1 45 2 view .LVU831
 424:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2375              		.loc 1 424 15 is_stmt 0 view .LVU832
 2376 07ac 0901     		lsls	r1, r1, #4
 2377              	.LVL287:
 424:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2378              		.loc 1 424 15 view .LVU833
 2379 07ae 41F06C06 		orr	r6, r1, #108
 2380 07b2 F6B2     		uxtb	r6, r6
 2381 07b4 3146     		mov	r1, r6
 2382 07b6 8548     		ldr	r0, .L178
 2383              	.LVL288:
 424:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2384              		.loc 1 424 15 view .LVU834
 2385 07b8 FFF7FEFF 		bl	tmc5072_readInt
 2386              	.LVL289:
 428:boards/TMC5072_eval.c **** 			}
 2387              		.loc 1 428 14 view .LVU835
 2388 07bc 3146     		mov	r1, r6
 424:boards/TMC5072_eval.c **** 		if(readWrite == READ) {
 2389              		.loc 1 424 13 view .LVU836
 2390 07be C0F38037 		ubfx	r7, r0, #14, #1
 2391              	.LVL290:
 425:boards/TMC5072_eval.c **** 			if(tempValue)
 2392              		.loc 1 425 3 is_stmt 1 view .LVU837
 428:boards/TMC5072_eval.c **** 			}
 2393              		.loc 1 428 14 is_stmt 0 view .LVU838
 2394 07c2 8248     		ldr	r0, .L178
 425:boards/TMC5072_eval.c **** 			if(tempValue)
 2395              		.loc 1 425 5 view .LVU839
 2396 07c4 B4B9     		cbnz	r4, .L123
 426:boards/TMC5072_eval.c **** 			{
 2397              		.loc 1 426 4 is_stmt 1 view .LVU840
 426:boards/TMC5072_eval.c **** 			{
 2398              		.loc 1 426 6 is_stmt 0 view .LVU841
 2399 07c6 2FB1     		cbz	r7, .L124
 428:boards/TMC5072_eval.c **** 			}
 2400              		.loc 1 428 5 is_stmt 1 view .LVU842
 2401              	.LBB394:
 2402              	.LBI394:
  41:boards/TMC5072_eval.c **** {
 2403              		.loc 1 41 31 view .LVU843
 2404              	.LVL291:
  41:boards/TMC5072_eval.c **** {
 2405              		.loc 1 41 31 is_stmt 0 view .LVU844
 2406              	.LBE394:
  43:boards/TMC5072_eval.c **** 
 2407              		.loc 1 43 2 is_stmt 1 view .LVU845
  45:boards/TMC5072_eval.c **** }
 2408              		.loc 1 45 2 view .LVU846
 428:boards/TMC5072_eval.c **** 			}
 2409              		.loc 1 428 14 is_stmt 0 view .LVU847
 2410 07c8 FFF7FEFF 		bl	tmc5072_readInt
 2411              	.LVL292:
 2412 07cc C0F30210 		ubfx	r0, r0, #4, #3
 428:boards/TMC5072_eval.c **** 			}
 2413              		.loc 1 428 12 view .LVU848
 2414 07d0 2860     		str	r0, [r5]
 2415 07d2 56E4     		b	.L18
 2416              	.L124:
 432:boards/TMC5072_eval.c **** 				tempValue = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TFD_3_MASK, T
 2417              		.loc 1 432 5 is_stmt 1 view .LVU849
 2418              	.LBB395:
 2419              	.LBI395:
  41:boards/TMC5072_eval.c **** {
 2420              		.loc 1 41 31 view .LVU850
 2421              	.LVL293:
  41:boards/TMC5072_eval.c **** {
 2422              		.loc 1 41 31 is_stmt 0 view .LVU851
 2423              	.LBE395:
  43:boards/TMC5072_eval.c **** 
 2424              		.loc 1 43 2 is_stmt 1 view .LVU852
  45:boards/TMC5072_eval.c **** }
 2425              		.loc 1 45 2 view .LVU853
 432:boards/TMC5072_eval.c **** 				tempValue = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TFD_3_MASK, T
 2426              		.loc 1 432 14 is_stmt 0 view .LVU854
 2427 07d4 FFF7FEFF 		bl	tmc5072_readInt
 2428              	.LVL294:
 2429 07d8 C0F3C310 		ubfx	r0, r0, #7, #4
 432:boards/TMC5072_eval.c **** 				tempValue = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TFD_3_MASK, T
 2430              		.loc 1 432 12 view .LVU855
 2431 07dc 2860     		str	r0, [r5]
 433:boards/TMC5072_eval.c **** 				*value |= tempValue << 3;
 2432              		.loc 1 433 5 is_stmt 1 view .LVU856
 2433              	.LBB396:
 2434              	.LBI396:
  41:boards/TMC5072_eval.c **** {
 2435              		.loc 1 41 31 view .LVU857
 2436              	.LVL295:
  41:boards/TMC5072_eval.c **** {
 2437              		.loc 1 41 31 is_stmt 0 view .LVU858
 2438              	.LBE396:
  43:boards/TMC5072_eval.c **** 
 2439              		.loc 1 43 2 is_stmt 1 view .LVU859
  45:boards/TMC5072_eval.c **** }
 2440              		.loc 1 45 2 view .LVU860
 433:boards/TMC5072_eval.c **** 				*value |= tempValue << 3;
 2441              		.loc 1 433 17 is_stmt 0 view .LVU861
 2442 07de 3146     		mov	r1, r6
 2443 07e0 7A48     		ldr	r0, .L178
 2444 07e2 FFF7FEFF 		bl	tmc5072_readInt
 2445              	.LVL296:
 434:boards/TMC5072_eval.c **** 			}
 2446              		.loc 1 434 5 is_stmt 1 view .LVU862
 434:boards/TMC5072_eval.c **** 			}
 2447              		.loc 1 434 12 is_stmt 0 view .LVU863
 2448 07e6 2B68     		ldr	r3, [r5]
 434:boards/TMC5072_eval.c **** 			}
 2449              		.loc 1 434 25 view .LVU864
 2450 07e8 000A     		lsrs	r0, r0, #8
 2451              	.LVL297:
 434:boards/TMC5072_eval.c **** 			}
 2452              		.loc 1 434 25 view .LVU865
 2453 07ea 00F00800 		and	r0, r0, #8
 434:boards/TMC5072_eval.c **** 			}
 2454              		.loc 1 434 12 view .LVU866
 2455 07ee 1843     		orrs	r0, r0, r3
 2456 07f0 2860     		str	r0, [r5]
 2457 07f2 46E4     		b	.L18
 2458              	.LVL298:
 2459              	.L123:
 436:boards/TMC5072_eval.c **** 			if(tempValue)
 2460              		.loc 1 436 10 is_stmt 1 view .LVU867
 437:boards/TMC5072_eval.c **** 			{
 2461              		.loc 1 437 4 view .LVU868
 437:boards/TMC5072_eval.c **** 			{
 2462              		.loc 1 437 6 is_stmt 0 view .LVU869
 2463 07f4 77B1     		cbz	r7, .L125
 439:boards/TMC5072_eval.c **** 			}
 2464              		.loc 1 439 5 is_stmt 1 view .LVU870
 2465              	.LBB397:
 2466              	.LBI397:
  41:boards/TMC5072_eval.c **** {
 2467              		.loc 1 41 31 view .LVU871
 2468              	.LVL299:
  41:boards/TMC5072_eval.c **** {
 2469              		.loc 1 41 31 is_stmt 0 view .LVU872
 2470              	.LBE397:
  43:boards/TMC5072_eval.c **** 
 2471              		.loc 1 43 2 is_stmt 1 view .LVU873
  45:boards/TMC5072_eval.c **** }
 2472              		.loc 1 45 2 view .LVU874
 2473              	.LBB398:
 2474              	.LBI398:
  41:boards/TMC5072_eval.c **** {
 2475              		.loc 1 41 31 view .LVU875
  41:boards/TMC5072_eval.c **** {
 2476              		.loc 1 41 31 is_stmt 0 view .LVU876
 2477              	.LBE398:
  43:boards/TMC5072_eval.c **** 
 2478              		.loc 1 43 2 is_stmt 1 view .LVU877
  45:boards/TMC5072_eval.c **** }
 2479              		.loc 1 45 2 view .LVU878
 439:boards/TMC5072_eval.c **** 			}
 2480              		.loc 1 439 5 is_stmt 0 view .LVU879
 2481 07f6 FFF7FEFF 		bl	tmc5072_readInt
 2482              	.LVL300:
 2483 07fa 2B68     		ldr	r3, [r5]
 2484 07fc 1B01     		lsls	r3, r3, #4
 2485 07fe 03F07003 		and	r3, r3, #112
 2486 0802 20F07002 		bic	r2, r0, #112
 2487 0806 1A43     		orrs	r2, r2, r3
 2488 0808 7048     		ldr	r0, .L178
 2489 080a 3146     		mov	r1, r6
 2490 080c FFF7FEFF 		bl	tmc5072_writeInt
 2491              	.LVL301:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2492              		.loc 1 124 11 view .LVU880
 2493 0810 0024     		movs	r4, #0
 2494 0812 36E4     		b	.L18
 2495              	.L125:
 443:boards/TMC5072_eval.c **** 			}
 2496              		.loc 1 443 5 is_stmt 1 view .LVU881
 2497              	.LBB399:
 2498              	.LBI399:
  41:boards/TMC5072_eval.c **** {
 2499              		.loc 1 41 31 view .LVU882
 2500              	.LVL302:
  41:boards/TMC5072_eval.c **** {
 2501              		.loc 1 41 31 is_stmt 0 view .LVU883
 2502              	.LBE399:
  43:boards/TMC5072_eval.c **** 
 2503              		.loc 1 43 2 is_stmt 1 view .LVU884
  45:boards/TMC5072_eval.c **** }
 2504              		.loc 1 45 2 view .LVU885
 2505              	.LBB400:
 2506              	.LBI400:
  41:boards/TMC5072_eval.c **** {
 2507              		.loc 1 41 31 view .LVU886
  41:boards/TMC5072_eval.c **** {
 2508              		.loc 1 41 31 is_stmt 0 view .LVU887
 2509              	.LBE400:
  43:boards/TMC5072_eval.c **** 
 2510              		.loc 1 43 2 is_stmt 1 view .LVU888
  45:boards/TMC5072_eval.c **** }
 2511              		.loc 1 45 2 view .LVU889
 443:boards/TMC5072_eval.c **** 			}
 2512              		.loc 1 443 5 is_stmt 0 view .LVU890
 2513 0814 FFF7FEFF 		bl	tmc5072_readInt
 2514              	.LVL303:
 2515 0818 2B68     		ldr	r3, [r5]
 2516 081a DB01     		lsls	r3, r3, #7
 2517 081c 03F4F063 		and	r3, r3, #1920
 2518 0820 20F4F062 		bic	r2, r0, #1920
 2519 0824 1A43     		orrs	r2, r2, r3
 2520 0826 6948     		ldr	r0, .L178
 2521 0828 3146     		mov	r1, r6
 2522 082a FFF7FEFF 		bl	tmc5072_writeInt
 2523              	.LVL304:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2524              		.loc 1 124 11 view .LVU891
 2525 082e 3C46     		mov	r4, r7
 2526 0830 27E4     		b	.L18
 2527              	.LVL305:
 2528              	.L40:
 449:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TOFF_MASK, TMC507
 2529              		.loc 1 449 3 is_stmt 1 view .LVU892
 2530 0832 0901     		lsls	r1, r1, #4
 2531              	.LVL306:
 449:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TOFF_MASK, TMC507
 2532              		.loc 1 449 3 is_stmt 0 view .LVU893
 2533 0834 41F06C06 		orr	r6, r1, #108
 2534 0838 F6B2     		uxtb	r6, r6
 450:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2535              		.loc 1 450 13 view .LVU894
 2536 083a 6448     		ldr	r0, .L178
 2537              	.LVL307:
 450:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2538              		.loc 1 450 13 view .LVU895
 2539 083c 3146     		mov	r1, r6
 449:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TOFF_MASK, TMC507
 2540              		.loc 1 449 5 view .LVU896
 2541 083e 2CB9     		cbnz	r4, .L126
 450:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2542              		.loc 1 450 4 is_stmt 1 view .LVU897
 2543              	.LBB401:
 2544              	.LBI401:
  41:boards/TMC5072_eval.c **** {
 2545              		.loc 1 41 31 view .LVU898
 2546              	.LVL308:
  41:boards/TMC5072_eval.c **** {
 2547              		.loc 1 41 31 is_stmt 0 view .LVU899
 2548              	.LBE401:
  43:boards/TMC5072_eval.c **** 
 2549              		.loc 1 43 2 is_stmt 1 view .LVU900
  45:boards/TMC5072_eval.c **** }
 2550              		.loc 1 45 2 view .LVU901
 450:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2551              		.loc 1 450 13 is_stmt 0 view .LVU902
 2552 0840 FFF7FEFF 		bl	tmc5072_readInt
 2553              	.LVL309:
 2554 0844 00F00F00 		and	r0, r0, #15
 450:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2555              		.loc 1 450 11 view .LVU903
 2556 0848 2860     		str	r0, [r5]
 2557 084a 1AE4     		b	.L18
 2558              	.L126:
 451:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_TOFF_MASK, TMC5072_TOFF_S
 2559              		.loc 1 451 10 is_stmt 1 view .LVU904
 452:boards/TMC5072_eval.c **** 		}
 2560              		.loc 1 452 4 view .LVU905
 2561              	.LBB402:
 2562              	.LBI402:
  41:boards/TMC5072_eval.c **** {
 2563              		.loc 1 41 31 view .LVU906
 2564              	.LVL310:
  41:boards/TMC5072_eval.c **** {
 2565              		.loc 1 41 31 is_stmt 0 view .LVU907
 2566              	.LBE402:
  43:boards/TMC5072_eval.c **** 
 2567              		.loc 1 43 2 is_stmt 1 view .LVU908
  45:boards/TMC5072_eval.c **** }
 2568              		.loc 1 45 2 view .LVU909
 2569              	.LBB403:
 2570              	.LBI403:
  41:boards/TMC5072_eval.c **** {
 2571              		.loc 1 41 31 view .LVU910
  41:boards/TMC5072_eval.c **** {
 2572              		.loc 1 41 31 is_stmt 0 view .LVU911
 2573              	.LBE403:
  43:boards/TMC5072_eval.c **** 
 2574              		.loc 1 43 2 is_stmt 1 view .LVU912
  45:boards/TMC5072_eval.c **** }
 2575              		.loc 1 45 2 view .LVU913
 452:boards/TMC5072_eval.c **** 		}
 2576              		.loc 1 452 4 is_stmt 0 view .LVU914
 2577 084c FFF7FEFF 		bl	tmc5072_readInt
 2578              	.LVL311:
 2579 0850 2A68     		ldr	r2, [r5]
 2580 0852 20F00F00 		bic	r0, r0, #15
 2581 0856 02F00F02 		and	r2, r2, #15
 2582 085a 0243     		orrs	r2, r2, r0
 2583 085c 3146     		mov	r1, r6
 2584 085e 5B48     		ldr	r0, .L178
 2585 0860 FFF7FEFF 		bl	tmc5072_writeInt
 2586              	.LVL312:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2587              		.loc 1 124 11 view .LVU915
 2588 0864 0024     		movs	r4, #0
 2589 0866 0CE4     		b	.L18
 2590              	.LVL313:
 2591              	.L39:
 457:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEIMIN_MASK, TMC5
 2592              		.loc 1 457 3 is_stmt 1 view .LVU916
 2593 0868 0901     		lsls	r1, r1, #4
 2594              	.LVL314:
 457:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEIMIN_MASK, TMC5
 2595              		.loc 1 457 3 is_stmt 0 view .LVU917
 2596 086a 41F06D06 		orr	r6, r1, #109
 2597 086e F6B2     		uxtb	r6, r6
 458:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2598              		.loc 1 458 13 view .LVU918
 2599 0870 5648     		ldr	r0, .L178
 2600              	.LVL315:
 458:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2601              		.loc 1 458 13 view .LVU919
 2602 0872 3146     		mov	r1, r6
 457:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEIMIN_MASK, TMC5
 2603              		.loc 1 457 5 view .LVU920
 2604 0874 34B9     		cbnz	r4, .L127
 458:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2605              		.loc 1 458 4 is_stmt 1 view .LVU921
 2606              	.LBB404:
 2607              	.LBI404:
  41:boards/TMC5072_eval.c **** {
 2608              		.loc 1 41 31 view .LVU922
 2609              	.LVL316:
  41:boards/TMC5072_eval.c **** {
 2610              		.loc 1 41 31 is_stmt 0 view .LVU923
 2611              	.LBE404:
  43:boards/TMC5072_eval.c **** 
 2612              		.loc 1 43 2 is_stmt 1 view .LVU924
  45:boards/TMC5072_eval.c **** }
 2613              		.loc 1 45 2 view .LVU925
 458:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2614              		.loc 1 458 13 is_stmt 0 view .LVU926
 2615 0876 FFF7FEFF 		bl	tmc5072_readInt
 2616              	.LVL317:
 2617 087a C0F3C030 		ubfx	r0, r0, #15, #1
 458:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2618              		.loc 1 458 11 view .LVU927
 2619 087e 2860     		str	r0, [r5]
 2620 0880 FFF7FFBB 		b	.L18
 2621              	.L127:
 459:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEIMIN_MASK, TMC5072_SEIM
 2622              		.loc 1 459 10 is_stmt 1 view .LVU928
 460:boards/TMC5072_eval.c **** 		}
 2623              		.loc 1 460 4 view .LVU929
 2624              	.LBB405:
 2625              	.LBI405:
  41:boards/TMC5072_eval.c **** {
 2626              		.loc 1 41 31 view .LVU930
 2627              	.LVL318:
  41:boards/TMC5072_eval.c **** {
 2628              		.loc 1 41 31 is_stmt 0 view .LVU931
 2629              	.LBE405:
  43:boards/TMC5072_eval.c **** 
 2630              		.loc 1 43 2 is_stmt 1 view .LVU932
  45:boards/TMC5072_eval.c **** }
 2631              		.loc 1 45 2 view .LVU933
 2632              	.LBB406:
 2633              	.LBI406:
  41:boards/TMC5072_eval.c **** {
 2634              		.loc 1 41 31 view .LVU934
  41:boards/TMC5072_eval.c **** {
 2635              		.loc 1 41 31 is_stmt 0 view .LVU935
 2636              	.LBE406:
  43:boards/TMC5072_eval.c **** 
 2637              		.loc 1 43 2 is_stmt 1 view .LVU936
  45:boards/TMC5072_eval.c **** }
 2638              		.loc 1 45 2 view .LVU937
 460:boards/TMC5072_eval.c **** 		}
 2639              		.loc 1 460 4 is_stmt 0 view .LVU938
 2640 0884 FFF7FEFF 		bl	tmc5072_readInt
 2641              	.LVL319:
 2642 0888 2B68     		ldr	r3, [r5]
 2643 088a DB03     		lsls	r3, r3, #15
 2644 088c 9BB2     		uxth	r3, r3
 2645 088e 20F40042 		bic	r2, r0, #32768
 2646 0892 1A43     		orrs	r2, r2, r3
 2647 0894 4D48     		ldr	r0, .L178
 2648 0896 3146     		mov	r1, r6
 2649 0898 FFF7FEFF 		bl	tmc5072_writeInt
 2650              	.LVL320:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2651              		.loc 1 124 11 view .LVU939
 2652 089c 0024     		movs	r4, #0
 2653 089e FFF7F0BB 		b	.L18
 2654              	.LVL321:
 2655              	.L38:
 465:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEDN_MASK, TMC507
 2656              		.loc 1 465 3 is_stmt 1 view .LVU940
 2657 08a2 0901     		lsls	r1, r1, #4
 2658              	.LVL322:
 465:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEDN_MASK, TMC507
 2659              		.loc 1 465 3 is_stmt 0 view .LVU941
 2660 08a4 41F06D06 		orr	r6, r1, #109
 2661 08a8 F6B2     		uxtb	r6, r6
 466:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2662              		.loc 1 466 13 view .LVU942
 2663 08aa 4848     		ldr	r0, .L178
 2664              	.LVL323:
 466:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2665              		.loc 1 466 13 view .LVU943
 2666 08ac 3146     		mov	r1, r6
 465:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEDN_MASK, TMC507
 2667              		.loc 1 465 5 view .LVU944
 2668 08ae 34B9     		cbnz	r4, .L128
 466:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2669              		.loc 1 466 4 is_stmt 1 view .LVU945
 2670              	.LBB407:
 2671              	.LBI407:
  41:boards/TMC5072_eval.c **** {
 2672              		.loc 1 41 31 view .LVU946
 2673              	.LVL324:
  41:boards/TMC5072_eval.c **** {
 2674              		.loc 1 41 31 is_stmt 0 view .LVU947
 2675              	.LBE407:
  43:boards/TMC5072_eval.c **** 
 2676              		.loc 1 43 2 is_stmt 1 view .LVU948
  45:boards/TMC5072_eval.c **** }
 2677              		.loc 1 45 2 view .LVU949
 466:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2678              		.loc 1 466 13 is_stmt 0 view .LVU950
 2679 08b0 FFF7FEFF 		bl	tmc5072_readInt
 2680              	.LVL325:
 2681 08b4 C0F34130 		ubfx	r0, r0, #13, #2
 466:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2682              		.loc 1 466 11 view .LVU951
 2683 08b8 2860     		str	r0, [r5]
 2684 08ba FFF7E2BB 		b	.L18
 2685              	.L128:
 467:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEDN_MASK, TMC5072_SEDN_S
 2686              		.loc 1 467 10 is_stmt 1 view .LVU952
 468:boards/TMC5072_eval.c **** 		}
 2687              		.loc 1 468 4 view .LVU953
 2688              	.LBB408:
 2689              	.LBI408:
  41:boards/TMC5072_eval.c **** {
 2690              		.loc 1 41 31 view .LVU954
 2691              	.LVL326:
  41:boards/TMC5072_eval.c **** {
 2692              		.loc 1 41 31 is_stmt 0 view .LVU955
 2693              	.LBE408:
  43:boards/TMC5072_eval.c **** 
 2694              		.loc 1 43 2 is_stmt 1 view .LVU956
  45:boards/TMC5072_eval.c **** }
 2695              		.loc 1 45 2 view .LVU957
 2696              	.LBB409:
 2697              	.LBI409:
  41:boards/TMC5072_eval.c **** {
 2698              		.loc 1 41 31 view .LVU958
  41:boards/TMC5072_eval.c **** {
 2699              		.loc 1 41 31 is_stmt 0 view .LVU959
 2700              	.LBE409:
  43:boards/TMC5072_eval.c **** 
 2701              		.loc 1 43 2 is_stmt 1 view .LVU960
  45:boards/TMC5072_eval.c **** }
 2702              		.loc 1 45 2 view .LVU961
 468:boards/TMC5072_eval.c **** 		}
 2703              		.loc 1 468 4 is_stmt 0 view .LVU962
 2704 08be FFF7FEFF 		bl	tmc5072_readInt
 2705              	.LVL327:
 2706 08c2 2B68     		ldr	r3, [r5]
 2707 08c4 5B03     		lsls	r3, r3, #13
 2708 08c6 03F4C043 		and	r3, r3, #24576
 2709 08ca 20F4C042 		bic	r2, r0, #24576
 2710 08ce 1A43     		orrs	r2, r2, r3
 2711 08d0 3E48     		ldr	r0, .L178
 2712 08d2 3146     		mov	r1, r6
 2713 08d4 FFF7FEFF 		bl	tmc5072_writeInt
 2714              	.LVL328:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2715              		.loc 1 124 11 view .LVU963
 2716 08d8 0024     		movs	r4, #0
 2717 08da FFF7D2BB 		b	.L18
 2718              	.LVL329:
 2719              	.L37:
 473:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMAX_MASK, TMC50
 2720              		.loc 1 473 3 is_stmt 1 view .LVU964
 2721 08de 0901     		lsls	r1, r1, #4
 2722              	.LVL330:
 473:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMAX_MASK, TMC50
 2723              		.loc 1 473 3 is_stmt 0 view .LVU965
 2724 08e0 41F06D06 		orr	r6, r1, #109
 2725 08e4 F6B2     		uxtb	r6, r6
 474:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2726              		.loc 1 474 13 view .LVU966
 2727 08e6 3948     		ldr	r0, .L178
 2728              	.LVL331:
 474:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2729              		.loc 1 474 13 view .LVU967
 2730 08e8 3146     		mov	r1, r6
 473:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMAX_MASK, TMC50
 2731              		.loc 1 473 5 view .LVU968
 2732 08ea 34B9     		cbnz	r4, .L129
 474:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2733              		.loc 1 474 4 is_stmt 1 view .LVU969
 2734              	.LBB410:
 2735              	.LBI410:
  41:boards/TMC5072_eval.c **** {
 2736              		.loc 1 41 31 view .LVU970
 2737              	.LVL332:
  41:boards/TMC5072_eval.c **** {
 2738              		.loc 1 41 31 is_stmt 0 view .LVU971
 2739              	.LBE410:
  43:boards/TMC5072_eval.c **** 
 2740              		.loc 1 43 2 is_stmt 1 view .LVU972
  45:boards/TMC5072_eval.c **** }
 2741              		.loc 1 45 2 view .LVU973
 474:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2742              		.loc 1 474 13 is_stmt 0 view .LVU974
 2743 08ec FFF7FEFF 		bl	tmc5072_readInt
 2744              	.LVL333:
 2745 08f0 C0F30320 		ubfx	r0, r0, #8, #4
 474:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2746              		.loc 1 474 11 view .LVU975
 2747 08f4 2860     		str	r0, [r5]
 2748 08f6 FFF7C4BB 		b	.L18
 2749              	.L129:
 475:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMAX_MASK, TMC5072_SEMAX
 2750              		.loc 1 475 10 is_stmt 1 view .LVU976
 476:boards/TMC5072_eval.c **** 		}
 2751              		.loc 1 476 4 view .LVU977
 2752              	.LBB411:
 2753              	.LBI411:
  41:boards/TMC5072_eval.c **** {
 2754              		.loc 1 41 31 view .LVU978
 2755              	.LVL334:
  41:boards/TMC5072_eval.c **** {
 2756              		.loc 1 41 31 is_stmt 0 view .LVU979
 2757              	.LBE411:
  43:boards/TMC5072_eval.c **** 
 2758              		.loc 1 43 2 is_stmt 1 view .LVU980
  45:boards/TMC5072_eval.c **** }
 2759              		.loc 1 45 2 view .LVU981
 2760              	.LBB412:
 2761              	.LBI412:
  41:boards/TMC5072_eval.c **** {
 2762              		.loc 1 41 31 view .LVU982
  41:boards/TMC5072_eval.c **** {
 2763              		.loc 1 41 31 is_stmt 0 view .LVU983
 2764              	.LBE412:
  43:boards/TMC5072_eval.c **** 
 2765              		.loc 1 43 2 is_stmt 1 view .LVU984
  45:boards/TMC5072_eval.c **** }
 2766              		.loc 1 45 2 view .LVU985
 476:boards/TMC5072_eval.c **** 		}
 2767              		.loc 1 476 4 is_stmt 0 view .LVU986
 2768 08fa FFF7FEFF 		bl	tmc5072_readInt
 2769              	.LVL335:
 2770 08fe 2B68     		ldr	r3, [r5]
 2771 0900 1B02     		lsls	r3, r3, #8
 2772 0902 03F47063 		and	r3, r3, #3840
 2773 0906 20F47062 		bic	r2, r0, #3840
 2774 090a 1A43     		orrs	r2, r2, r3
 2775 090c 2F48     		ldr	r0, .L178
 2776 090e 3146     		mov	r1, r6
 2777 0910 FFF7FEFF 		bl	tmc5072_writeInt
 2778              	.LVL336:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2779              		.loc 1 124 11 view .LVU987
 2780 0914 0024     		movs	r4, #0
 2781 0916 FFF7B4BB 		b	.L18
 2782              	.LVL337:
 2783              	.L36:
 481:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEUP_MASK, TMC507
 2784              		.loc 1 481 3 is_stmt 1 view .LVU988
 2785 091a 0901     		lsls	r1, r1, #4
 2786              	.LVL338:
 481:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEUP_MASK, TMC507
 2787              		.loc 1 481 3 is_stmt 0 view .LVU989
 2788 091c 41F06D06 		orr	r6, r1, #109
 2789 0920 F6B2     		uxtb	r6, r6
 482:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2790              		.loc 1 482 13 view .LVU990
 2791 0922 2A48     		ldr	r0, .L178
 2792              	.LVL339:
 482:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2793              		.loc 1 482 13 view .LVU991
 2794 0924 3146     		mov	r1, r6
 481:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEUP_MASK, TMC507
 2795              		.loc 1 481 5 view .LVU992
 2796 0926 34B9     		cbnz	r4, .L130
 482:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2797              		.loc 1 482 4 is_stmt 1 view .LVU993
 2798              	.LBB413:
 2799              	.LBI413:
  41:boards/TMC5072_eval.c **** {
 2800              		.loc 1 41 31 view .LVU994
 2801              	.LVL340:
  41:boards/TMC5072_eval.c **** {
 2802              		.loc 1 41 31 is_stmt 0 view .LVU995
 2803              	.LBE413:
  43:boards/TMC5072_eval.c **** 
 2804              		.loc 1 43 2 is_stmt 1 view .LVU996
  45:boards/TMC5072_eval.c **** }
 2805              		.loc 1 45 2 view .LVU997
 482:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2806              		.loc 1 482 13 is_stmt 0 view .LVU998
 2807 0928 FFF7FEFF 		bl	tmc5072_readInt
 2808              	.LVL341:
 2809 092c C0F34110 		ubfx	r0, r0, #5, #2
 482:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2810              		.loc 1 482 11 view .LVU999
 2811 0930 2860     		str	r0, [r5]
 2812 0932 FFF7A6BB 		b	.L18
 2813              	.L130:
 483:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEUP_MASK, TMC5072_SEUP_S
 2814              		.loc 1 483 10 is_stmt 1 view .LVU1000
 484:boards/TMC5072_eval.c **** 		}
 2815              		.loc 1 484 4 view .LVU1001
 2816              	.LBB414:
 2817              	.LBI414:
  41:boards/TMC5072_eval.c **** {
 2818              		.loc 1 41 31 view .LVU1002
 2819              	.LVL342:
  41:boards/TMC5072_eval.c **** {
 2820              		.loc 1 41 31 is_stmt 0 view .LVU1003
 2821              	.LBE414:
  43:boards/TMC5072_eval.c **** 
 2822              		.loc 1 43 2 is_stmt 1 view .LVU1004
  45:boards/TMC5072_eval.c **** }
 2823              		.loc 1 45 2 view .LVU1005
 2824              	.LBB415:
 2825              	.LBI415:
  41:boards/TMC5072_eval.c **** {
 2826              		.loc 1 41 31 view .LVU1006
  41:boards/TMC5072_eval.c **** {
 2827              		.loc 1 41 31 is_stmt 0 view .LVU1007
 2828              	.LBE415:
  43:boards/TMC5072_eval.c **** 
 2829              		.loc 1 43 2 is_stmt 1 view .LVU1008
  45:boards/TMC5072_eval.c **** }
 2830              		.loc 1 45 2 view .LVU1009
 484:boards/TMC5072_eval.c **** 		}
 2831              		.loc 1 484 4 is_stmt 0 view .LVU1010
 2832 0936 FFF7FEFF 		bl	tmc5072_readInt
 2833              	.LVL343:
 2834 093a 2B68     		ldr	r3, [r5]
 2835 093c 5B01     		lsls	r3, r3, #5
 2836 093e 03F06003 		and	r3, r3, #96
 2837 0942 20F06002 		bic	r2, r0, #96
 2838 0946 1A43     		orrs	r2, r2, r3
 2839 0948 2048     		ldr	r0, .L178
 2840 094a 3146     		mov	r1, r6
 2841 094c FFF7FEFF 		bl	tmc5072_writeInt
 2842              	.LVL344:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2843              		.loc 1 124 11 view .LVU1011
 2844 0950 0024     		movs	r4, #0
 2845 0952 FFF796BB 		b	.L18
 2846              	.LVL345:
 2847              	.L35:
 489:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMIN_MASK, TMC50
 2848              		.loc 1 489 3 is_stmt 1 view .LVU1012
 2849 0956 0901     		lsls	r1, r1, #4
 2850              	.LVL346:
 489:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMIN_MASK, TMC50
 2851              		.loc 1 489 3 is_stmt 0 view .LVU1013
 2852 0958 41F06D06 		orr	r6, r1, #109
 2853 095c F6B2     		uxtb	r6, r6
 490:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2854              		.loc 1 490 13 view .LVU1014
 2855 095e 1B48     		ldr	r0, .L178
 2856              	.LVL347:
 490:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2857              		.loc 1 490 13 view .LVU1015
 2858 0960 3146     		mov	r1, r6
 489:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMIN_MASK, TMC50
 2859              		.loc 1 489 5 view .LVU1016
 2860 0962 34B9     		cbnz	r4, .L131
 490:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2861              		.loc 1 490 4 is_stmt 1 view .LVU1017
 2862              	.LBB416:
 2863              	.LBI416:
  41:boards/TMC5072_eval.c **** {
 2864              		.loc 1 41 31 view .LVU1018
 2865              	.LVL348:
  41:boards/TMC5072_eval.c **** {
 2866              		.loc 1 41 31 is_stmt 0 view .LVU1019
 2867              	.LBE416:
  43:boards/TMC5072_eval.c **** 
 2868              		.loc 1 43 2 is_stmt 1 view .LVU1020
  45:boards/TMC5072_eval.c **** }
 2869              		.loc 1 45 2 view .LVU1021
 490:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2870              		.loc 1 490 13 is_stmt 0 view .LVU1022
 2871 0964 FFF7FEFF 		bl	tmc5072_readInt
 2872              	.LVL349:
 2873 0968 00F00F00 		and	r0, r0, #15
 490:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2874              		.loc 1 490 11 view .LVU1023
 2875 096c 2860     		str	r0, [r5]
 2876 096e FFF788BB 		b	.L18
 2877              	.L131:
 491:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SEMIN_MASK, TMC5072_SEMIN
 2878              		.loc 1 491 10 is_stmt 1 view .LVU1024
 492:boards/TMC5072_eval.c **** 		}
 2879              		.loc 1 492 4 view .LVU1025
 2880              	.LBB417:
 2881              	.LBI417:
  41:boards/TMC5072_eval.c **** {
 2882              		.loc 1 41 31 view .LVU1026
 2883              	.LVL350:
  41:boards/TMC5072_eval.c **** {
 2884              		.loc 1 41 31 is_stmt 0 view .LVU1027
 2885              	.LBE417:
  43:boards/TMC5072_eval.c **** 
 2886              		.loc 1 43 2 is_stmt 1 view .LVU1028
  45:boards/TMC5072_eval.c **** }
 2887              		.loc 1 45 2 view .LVU1029
 2888              	.LBB418:
 2889              	.LBI418:
  41:boards/TMC5072_eval.c **** {
 2890              		.loc 1 41 31 view .LVU1030
  41:boards/TMC5072_eval.c **** {
 2891              		.loc 1 41 31 is_stmt 0 view .LVU1031
 2892              	.LBE418:
  43:boards/TMC5072_eval.c **** 
 2893              		.loc 1 43 2 is_stmt 1 view .LVU1032
  45:boards/TMC5072_eval.c **** }
 2894              		.loc 1 45 2 view .LVU1033
 492:boards/TMC5072_eval.c **** 		}
 2895              		.loc 1 492 4 is_stmt 0 view .LVU1034
 2896 0972 FFF7FEFF 		bl	tmc5072_readInt
 2897              	.LVL351:
 2898 0976 2A68     		ldr	r2, [r5]
 2899 0978 20F00F00 		bic	r0, r0, #15
 2900 097c 02F00F02 		and	r2, r2, #15
 2901 0980 0243     		orrs	r2, r2, r0
 2902 0982 3146     		mov	r1, r6
 2903 0984 1148     		ldr	r0, .L178
 2904 0986 FFF7FEFF 		bl	tmc5072_writeInt
 2905              	.LVL352:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2906              		.loc 1 124 11 view .LVU1035
 2907 098a 0024     		movs	r4, #0
 2908 098c FFF779BB 		b	.L18
 2909              	.LVL353:
 2910              	.L34:
 497:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SFILT_MASK, TMC50
 2911              		.loc 1 497 3 is_stmt 1 view .LVU1036
 2912 0990 0901     		lsls	r1, r1, #4
 2913              	.LVL354:
 497:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SFILT_MASK, TMC50
 2914              		.loc 1 497 3 is_stmt 0 view .LVU1037
 2915 0992 41F06D06 		orr	r6, r1, #109
 2916 0996 F6B2     		uxtb	r6, r6
 498:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2917              		.loc 1 498 13 view .LVU1038
 2918 0998 0C48     		ldr	r0, .L178
 2919              	.LVL355:
 498:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2920              		.loc 1 498 13 view .LVU1039
 2921 099a 3146     		mov	r1, r6
 497:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SFILT_MASK, TMC50
 2922              		.loc 1 497 5 view .LVU1040
 2923 099c 34B9     		cbnz	r4, .L132
 498:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2924              		.loc 1 498 4 is_stmt 1 view .LVU1041
 2925              	.LBB419:
 2926              	.LBI419:
  41:boards/TMC5072_eval.c **** {
 2927              		.loc 1 41 31 view .LVU1042
 2928              	.LVL356:
  41:boards/TMC5072_eval.c **** {
 2929              		.loc 1 41 31 is_stmt 0 view .LVU1043
 2930              	.LBE419:
  43:boards/TMC5072_eval.c **** 
 2931              		.loc 1 43 2 is_stmt 1 view .LVU1044
  45:boards/TMC5072_eval.c **** }
 2932              		.loc 1 45 2 view .LVU1045
 498:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2933              		.loc 1 498 13 is_stmt 0 view .LVU1046
 2934 099e FFF7FEFF 		bl	tmc5072_readInt
 2935              	.LVL357:
 2936 09a2 C0F30060 		ubfx	r0, r0, #24, #1
 498:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 2937              		.loc 1 498 11 view .LVU1047
 2938 09a6 2860     		str	r0, [r5]
 2939 09a8 FFF76BBB 		b	.L18
 2940              	.L132:
 499:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SFILT_MASK, TMC5072_SFILT
 2941              		.loc 1 499 10 is_stmt 1 view .LVU1048
 500:boards/TMC5072_eval.c **** 		}
 2942              		.loc 1 500 4 view .LVU1049
 2943              	.LBB420:
 2944              	.LBI420:
  41:boards/TMC5072_eval.c **** {
 2945              		.loc 1 41 31 view .LVU1050
 2946              	.LVL358:
  41:boards/TMC5072_eval.c **** {
 2947              		.loc 1 41 31 is_stmt 0 view .LVU1051
 2948              	.LBE420:
  43:boards/TMC5072_eval.c **** 
 2949              		.loc 1 43 2 is_stmt 1 view .LVU1052
  45:boards/TMC5072_eval.c **** }
 2950              		.loc 1 45 2 view .LVU1053
 2951              	.LBB421:
 2952              	.LBI421:
  41:boards/TMC5072_eval.c **** {
 2953              		.loc 1 41 31 view .LVU1054
  41:boards/TMC5072_eval.c **** {
 2954              		.loc 1 41 31 is_stmt 0 view .LVU1055
 2955              	.LBE421:
  43:boards/TMC5072_eval.c **** 
 2956              		.loc 1 43 2 is_stmt 1 view .LVU1056
  45:boards/TMC5072_eval.c **** }
 2957              		.loc 1 45 2 view .LVU1057
 500:boards/TMC5072_eval.c **** 		}
 2958              		.loc 1 500 4 is_stmt 0 view .LVU1058
 2959 09ac FFF7FEFF 		bl	tmc5072_readInt
 2960              	.LVL359:
 2961 09b0 2B68     		ldr	r3, [r5]
 2962 09b2 1B06     		lsls	r3, r3, #24
 2963 09b4 03F08073 		and	r3, r3, #16777216
 2964 09b8 20F08072 		bic	r2, r0, #16777216
 2965 09bc 1A43     		orrs	r2, r2, r3
 2966 09be 0348     		ldr	r0, .L178
 2967 09c0 3146     		mov	r1, r6
 2968 09c2 FFF7FEFF 		bl	tmc5072_writeInt
 2969              	.LVL360:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 2970              		.loc 1 124 11 view .LVU1059
 2971 09c6 0024     		movs	r4, #0
 2972 09c8 FFF75BBB 		b	.L18
 2973              	.L179:
 2974              		.align	2
 2975              	.L178:
 2976 09cc 00000000 		.word	.LANCHOR0
 2977              	.LVL361:
 2978              	.L33:
 505:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SGT_MASK, TMC5072
 2979              		.loc 1 505 3 is_stmt 1 view .LVU1060
 2980 09d0 0901     		lsls	r1, r1, #4
 2981              	.LVL362:
 505:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SGT_MASK, TMC5072
 2982              		.loc 1 505 3 is_stmt 0 view .LVU1061
 2983 09d2 41F06D06 		orr	r6, r1, #109
 2984 09d6 F6B2     		uxtb	r6, r6
 506:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2985              		.loc 1 506 13 view .LVU1062
 2986 09d8 B948     		ldr	r0, .L180
 2987              	.LVL363:
 506:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2988              		.loc 1 506 13 view .LVU1063
 2989 09da 3146     		mov	r1, r6
 505:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SGT_MASK, TMC5072
 2990              		.loc 1 505 5 view .LVU1064
 2991 09dc 6CB9     		cbnz	r4, .L133
 506:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2992              		.loc 1 506 4 is_stmt 1 view .LVU1065
 2993              	.LBB422:
 2994              	.LBI422:
  41:boards/TMC5072_eval.c **** {
 2995              		.loc 1 41 31 view .LVU1066
 2996              	.LVL364:
  41:boards/TMC5072_eval.c **** {
 2997              		.loc 1 41 31 is_stmt 0 view .LVU1067
 2998              	.LBE422:
  43:boards/TMC5072_eval.c **** 
 2999              		.loc 1 43 2 is_stmt 1 view .LVU1068
  45:boards/TMC5072_eval.c **** }
 3000              		.loc 1 45 2 view .LVU1069
 506:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3001              		.loc 1 506 13 is_stmt 0 view .LVU1070
 3002 09de FFF7FEFF 		bl	tmc5072_readInt
 3003              	.LVL365:
 3004 09e2 0314     		asrs	r3, r0, #16
 507:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3005              		.loc 1 507 13 view .LVU1071
 3006 09e4 13F04003 		ands	r3, r3, #64
 506:boards/TMC5072_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3007              		.loc 1 506 13 view .LVU1072
 3008 09e8 C0F30640 		ubfx	r0, r0, #16, #7
 507:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3009              		.loc 1 507 4 is_stmt 1 view .LVU1073
 507:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3010              		.loc 1 507 13 is_stmt 0 view .LVU1074
 3011 09ec 18BF     		it	ne
 3012 09ee 6FF07F03 		mvnne	r3, #127
 3013 09f2 1843     		orrs	r0, r0, r3
 507:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3014              		.loc 1 507 11 view .LVU1075
 3015 09f4 2860     		str	r0, [r5]
 3016 09f6 FFF744BB 		b	.L18
 3017              	.L133:
 508:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_COOLCONF(motor), TMC5072_SGT_MASK, TMC5072_SGT_SHI
 3018              		.loc 1 508 10 is_stmt 1 view .LVU1076
 509:boards/TMC5072_eval.c **** 		}
 3019              		.loc 1 509 4 view .LVU1077
 3020              	.LBB423:
 3021              	.LBI423:
  41:boards/TMC5072_eval.c **** {
 3022              		.loc 1 41 31 view .LVU1078
 3023              	.LVL366:
  41:boards/TMC5072_eval.c **** {
 3024              		.loc 1 41 31 is_stmt 0 view .LVU1079
 3025              	.LBE423:
  43:boards/TMC5072_eval.c **** 
 3026              		.loc 1 43 2 is_stmt 1 view .LVU1080
  45:boards/TMC5072_eval.c **** }
 3027              		.loc 1 45 2 view .LVU1081
 3028              	.LBB424:
 3029              	.LBI424:
  41:boards/TMC5072_eval.c **** {
 3030              		.loc 1 41 31 view .LVU1082
  41:boards/TMC5072_eval.c **** {
 3031              		.loc 1 41 31 is_stmt 0 view .LVU1083
 3032              	.LBE424:
  43:boards/TMC5072_eval.c **** 
 3033              		.loc 1 43 2 is_stmt 1 view .LVU1084
  45:boards/TMC5072_eval.c **** }
 3034              		.loc 1 45 2 view .LVU1085
 509:boards/TMC5072_eval.c **** 		}
 3035              		.loc 1 509 4 is_stmt 0 view .LVU1086
 3036 09fa FFF7FEFF 		bl	tmc5072_readInt
 3037              	.LVL367:
 3038 09fe 2B68     		ldr	r3, [r5]
 3039 0a00 1B04     		lsls	r3, r3, #16
 3040 0a02 03F4FE03 		and	r3, r3, #8323072
 3041 0a06 20F4FE02 		bic	r2, r0, #8323072
 3042 0a0a 1A43     		orrs	r2, r2, r3
 3043 0a0c AC48     		ldr	r0, .L180
 3044 0a0e 3146     		mov	r1, r6
 3045 0a10 FFF7FEFF 		bl	tmc5072_writeInt
 3046              	.LVL368:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3047              		.loc 1 124 11 view .LVU1087
 3048 0a14 0024     		movs	r4, #0
 3049 0a16 FFF734BB 		b	.L18
 3050              	.LVL369:
 3051              	.L32:
 514:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VSENSE_MASK, TMC5
 3052              		.loc 1 514 3 is_stmt 1 view .LVU1088
 3053 0a1a 0901     		lsls	r1, r1, #4
 3054              	.LVL370:
 514:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VSENSE_MASK, TMC5
 3055              		.loc 1 514 3 is_stmt 0 view .LVU1089
 3056 0a1c 41F06C06 		orr	r6, r1, #108
 3057 0a20 F6B2     		uxtb	r6, r6
 515:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3058              		.loc 1 515 13 view .LVU1090
 3059 0a22 A748     		ldr	r0, .L180
 3060              	.LVL371:
 515:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3061              		.loc 1 515 13 view .LVU1091
 3062 0a24 3146     		mov	r1, r6
 514:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VSENSE_MASK, TMC5
 3063              		.loc 1 514 5 view .LVU1092
 3064 0a26 34B9     		cbnz	r4, .L135
 515:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3065              		.loc 1 515 4 is_stmt 1 view .LVU1093
 3066              	.LBB425:
 3067              	.LBI425:
  41:boards/TMC5072_eval.c **** {
 3068              		.loc 1 41 31 view .LVU1094
 3069              	.LVL372:
  41:boards/TMC5072_eval.c **** {
 3070              		.loc 1 41 31 is_stmt 0 view .LVU1095
 3071              	.LBE425:
  43:boards/TMC5072_eval.c **** 
 3072              		.loc 1 43 2 is_stmt 1 view .LVU1096
  45:boards/TMC5072_eval.c **** }
 3073              		.loc 1 45 2 view .LVU1097
 515:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3074              		.loc 1 515 13 is_stmt 0 view .LVU1098
 3075 0a28 FFF7FEFF 		bl	tmc5072_readInt
 3076              	.LVL373:
 3077 0a2c C0F34040 		ubfx	r0, r0, #17, #1
 515:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3078              		.loc 1 515 11 view .LVU1099
 3079 0a30 2860     		str	r0, [r5]
 3080 0a32 FFF726BB 		b	.L18
 3081              	.L135:
 516:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_VSENSE_MASK, TMC5072_VSEN
 3082              		.loc 1 516 10 is_stmt 1 view .LVU1100
 517:boards/TMC5072_eval.c **** 		}
 3083              		.loc 1 517 4 view .LVU1101
 3084              	.LBB426:
 3085              	.LBI426:
  41:boards/TMC5072_eval.c **** {
 3086              		.loc 1 41 31 view .LVU1102
 3087              	.LVL374:
  41:boards/TMC5072_eval.c **** {
 3088              		.loc 1 41 31 is_stmt 0 view .LVU1103
 3089              	.LBE426:
  43:boards/TMC5072_eval.c **** 
 3090              		.loc 1 43 2 is_stmt 1 view .LVU1104
  45:boards/TMC5072_eval.c **** }
 3091              		.loc 1 45 2 view .LVU1105
 3092              	.LBB427:
 3093              	.LBI427:
  41:boards/TMC5072_eval.c **** {
 3094              		.loc 1 41 31 view .LVU1106
  41:boards/TMC5072_eval.c **** {
 3095              		.loc 1 41 31 is_stmt 0 view .LVU1107
 3096              	.LBE427:
  43:boards/TMC5072_eval.c **** 
 3097              		.loc 1 43 2 is_stmt 1 view .LVU1108
  45:boards/TMC5072_eval.c **** }
 3098              		.loc 1 45 2 view .LVU1109
 517:boards/TMC5072_eval.c **** 		}
 3099              		.loc 1 517 4 is_stmt 0 view .LVU1110
 3100 0a36 FFF7FEFF 		bl	tmc5072_readInt
 3101              	.LVL375:
 3102 0a3a 2B68     		ldr	r3, [r5]
 3103 0a3c 5B04     		lsls	r3, r3, #17
 3104 0a3e 03F40033 		and	r3, r3, #131072
 3105 0a42 20F40032 		bic	r2, r0, #131072
 3106 0a46 1A43     		orrs	r2, r2, r3
 3107 0a48 9D48     		ldr	r0, .L180
 3108 0a4a 3146     		mov	r1, r6
 3109 0a4c FFF7FEFF 		bl	tmc5072_writeInt
 3110              	.LVL376:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3111              		.loc 1 124 11 view .LVU1111
 3112 0a50 0024     		movs	r4, #0
 3113 0a52 FFF716BB 		b	.L18
 3114              	.LVL377:
 3115              	.L31:
 522:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_DRVSTATUS(motor), TMC5072_CS_ACTUAL_MASK, 
 3116              		.loc 1 522 3 is_stmt 1 view .LVU1112
 522:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_DRVSTATUS(motor), TMC5072_CS_ACTUAL_MASK, 
 3117              		.loc 1 522 5 is_stmt 0 view .LVU1113
 3118 0a56 002C     		cmp	r4, #0
 3119 0a58 40F02B81 		bne	.L165
 523:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3120              		.loc 1 523 4 is_stmt 1 view .LVU1114
 3121              	.LBB428:
 3122              	.LBI428:
  41:boards/TMC5072_eval.c **** {
 3123              		.loc 1 41 31 view .LVU1115
 3124              	.LVL378:
  41:boards/TMC5072_eval.c **** {
 3125              		.loc 1 41 31 is_stmt 0 view .LVU1116
 3126              	.LBE428:
  43:boards/TMC5072_eval.c **** 
 3127              		.loc 1 43 2 is_stmt 1 view .LVU1117
  45:boards/TMC5072_eval.c **** }
 3128              		.loc 1 45 2 view .LVU1118
 523:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3129              		.loc 1 523 13 is_stmt 0 view .LVU1119
 3130 0a5c 0901     		lsls	r1, r1, #4
 3131              	.LVL379:
 523:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3132              		.loc 1 523 13 view .LVU1120
 3133 0a5e 41F06F01 		orr	r1, r1, #111
 3134 0a62 9748     		ldr	r0, .L180
 3135              	.LVL380:
 523:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3136              		.loc 1 523 13 view .LVU1121
 3137 0a64 C9B2     		uxtb	r1, r1
 3138 0a66 FFF7FEFF 		bl	tmc5072_readInt
 3139              	.LVL381:
 3140 0a6a C0F30440 		ubfx	r0, r0, #16, #5
 523:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3141              		.loc 1 523 11 view .LVU1122
 3142 0a6e 2860     		str	r0, [r5]
 3143 0a70 FFF707BB 		b	.L18
 3144              	.LVL382:
 3145              	.L30:
 530:boards/TMC5072_eval.c **** 			if(TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_SG_STOP_MASK, TMC5072_SG_
 3146              		.loc 1 530 3 is_stmt 1 view .LVU1123
 3147 0a74 2026     		movs	r6, #32
 3148 0a76 06FA01F1 		lsl	r1, r6, r1
 3149              	.LVL383:
 530:boards/TMC5072_eval.c **** 			if(TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_SG_STOP_MASK, TMC5072_SG_
 3150              		.loc 1 530 3 is_stmt 0 view .LVU1124
 3151 0a7a 4EB2     		sxtb	r6, r1
 3152 0a7c 46F01407 		orr	r7, r6, #20
 3153 0a80 FFB2     		uxtb	r7, r7
 530:boards/TMC5072_eval.c **** 			if(TMC5072_FIELD_READ(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_SG_STOP_MASK, TMC5072_SG_
 3154              		.loc 1 530 5 view .LVU1125
 3155 0a82 8CB9     		cbnz	r4, .L136
 531:boards/TMC5072_eval.c **** 			{
 3156              		.loc 1 531 4 is_stmt 1 view .LVU1126
 3157              	.LBB429:
 3158              	.LBI429:
  41:boards/TMC5072_eval.c **** {
 3159              		.loc 1 41 31 view .LVU1127
 3160              	.LVL384:
  41:boards/TMC5072_eval.c **** {
 3161              		.loc 1 41 31 is_stmt 0 view .LVU1128
 3162              	.LBE429:
  43:boards/TMC5072_eval.c **** 
 3163              		.loc 1 43 2 is_stmt 1 view .LVU1129
  45:boards/TMC5072_eval.c **** }
 3164              		.loc 1 45 2 view .LVU1130
 531:boards/TMC5072_eval.c **** 			{
 3165              		.loc 1 531 7 is_stmt 0 view .LVU1131
 3166 0a84 3946     		mov	r1, r7
 3167 0a86 8E48     		ldr	r0, .L180
 3168              	.LVL385:
 531:boards/TMC5072_eval.c **** 			{
 3169              		.loc 1 531 7 view .LVU1132
 3170 0a88 FFF7FEFF 		bl	tmc5072_readInt
 3171              	.LVL386:
 531:boards/TMC5072_eval.c **** 			{
 3172              		.loc 1 531 6 view .LVU1133
 3173 0a8c 4105     		lsls	r1, r0, #21
 3174 0a8e 08D5     		bpl	.L137
 533:boards/TMC5072_eval.c **** 			}
 3175              		.loc 1 533 5 is_stmt 1 view .LVU1134
 3176              	.LBB430:
 3177              	.LBI430:
  41:boards/TMC5072_eval.c **** {
 3178              		.loc 1 41 31 view .LVU1135
 3179              	.LVL387:
  41:boards/TMC5072_eval.c **** {
 3180              		.loc 1 41 31 is_stmt 0 view .LVU1136
 3181              	.LBE430:
  43:boards/TMC5072_eval.c **** 
 3182              		.loc 1 43 2 is_stmt 1 view .LVU1137
  45:boards/TMC5072_eval.c **** }
 3183              		.loc 1 45 2 view .LVU1138
 533:boards/TMC5072_eval.c **** 			}
 3184              		.loc 1 533 48 is_stmt 0 view .LVU1139
 3185 0a90 46F01101 		orr	r1, r6, #17
 533:boards/TMC5072_eval.c **** 			}
 3186              		.loc 1 533 14 view .LVU1140
 3187 0a94 8A48     		ldr	r0, .L180
 3188 0a96 C9B2     		uxtb	r1, r1
 3189 0a98 FFF7FEFF 		bl	tmc5072_readInt
 3190              	.LVL388:
 533:boards/TMC5072_eval.c **** 			}
 3191              		.loc 1 533 12 view .LVU1141
 3192 0a9c 2860     		str	r0, [r5]
 3193 0a9e FFF7F0BA 		b	.L18
 3194              	.L137:
 537:boards/TMC5072_eval.c **** 			}
 3195              		.loc 1 537 5 is_stmt 1 view .LVU1142
 537:boards/TMC5072_eval.c **** 			}
 3196              		.loc 1 537 12 is_stmt 0 view .LVU1143
 3197 0aa2 2C60     		str	r4, [r5]
 3198 0aa4 FFF7EDBA 		b	.L18
 3199              	.LVL389:
 3200              	.L136:
 539:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor),*value);
 3201              		.loc 1 539 10 is_stmt 1 view .LVU1144
 540:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_SG_STOP_MASK, TMC5072_SG_ST
 3202              		.loc 1 540 4 view .LVU1145
 3203              	.LBB431:
 3204              	.LBI431:
  41:boards/TMC5072_eval.c **** {
 3205              		.loc 1 41 31 view .LVU1146
  41:boards/TMC5072_eval.c **** {
 3206              		.loc 1 41 31 is_stmt 0 view .LVU1147
 3207              	.LBE431:
  43:boards/TMC5072_eval.c **** 
 3208              		.loc 1 43 2 is_stmt 1 view .LVU1148
  45:boards/TMC5072_eval.c **** }
 3209              		.loc 1 45 2 view .LVU1149
 540:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_SG_STOP_MASK, TMC5072_SG_ST
 3210              		.loc 1 540 39 is_stmt 0 view .LVU1150
 3211 0aa8 46F01101 		orr	r1, r6, #17
 540:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_SG_STOP_MASK, TMC5072_SG_ST
 3212              		.loc 1 540 4 view .LVU1151
 3213 0aac 2A68     		ldr	r2, [r5]
 3214 0aae 8448     		ldr	r0, .L180
 3215              	.LVL390:
 540:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_SWMODE(motor), TMC5072_SG_STOP_MASK, TMC5072_SG_ST
 3216              		.loc 1 540 4 view .LVU1152
 3217 0ab0 C9B2     		uxtb	r1, r1
 3218 0ab2 FFF7FEFF 		bl	tmc5072_writeInt
 3219              	.LVL391:
 541:boards/TMC5072_eval.c **** 		}
 3220              		.loc 1 541 4 is_stmt 1 view .LVU1153
 3221              	.LBB432:
 3222              	.LBI432:
  41:boards/TMC5072_eval.c **** {
 3223              		.loc 1 41 31 view .LVU1154
  41:boards/TMC5072_eval.c **** {
 3224              		.loc 1 41 31 is_stmt 0 view .LVU1155
 3225              	.LBE432:
  43:boards/TMC5072_eval.c **** 
 3226              		.loc 1 43 2 is_stmt 1 view .LVU1156
  45:boards/TMC5072_eval.c **** }
 3227              		.loc 1 45 2 view .LVU1157
 3228              	.LBB433:
 3229              	.LBI433:
  41:boards/TMC5072_eval.c **** {
 3230              		.loc 1 41 31 view .LVU1158
  41:boards/TMC5072_eval.c **** {
 3231              		.loc 1 41 31 is_stmt 0 view .LVU1159
 3232              	.LBE433:
  43:boards/TMC5072_eval.c **** 
 3233              		.loc 1 43 2 is_stmt 1 view .LVU1160
  45:boards/TMC5072_eval.c **** }
 3234              		.loc 1 45 2 view .LVU1161
 541:boards/TMC5072_eval.c **** 		}
 3235              		.loc 1 541 4 is_stmt 0 view .LVU1162
 3236 0ab6 3946     		mov	r1, r7
 3237 0ab8 8148     		ldr	r0, .L180
 3238 0aba FFF7FEFF 		bl	tmc5072_readInt
 3239              	.LVL392:
 3240 0abe 2B68     		ldr	r3, [r5]
 3241 0ac0 002B     		cmp	r3, #0
 3242 0ac2 20F48062 		bic	r2, r0, #1024
 3243 0ac6 18BF     		it	ne
 3244 0ac8 4FF48063 		movne	r3, #1024
 3245 0acc 7C48     		ldr	r0, .L180
 3246 0ace 1A43     		orrs	r2, r2, r3
 3247 0ad0 3946     		mov	r1, r7
 3248 0ad2 FFF7FEFF 		bl	tmc5072_writeInt
 3249              	.LVL393:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3250              		.loc 1 124 11 view .LVU1163
 3251 0ad6 0024     		movs	r4, #0
 3252 0ad8 FFF7D3BA 		b	.L18
 3253              	.LVL394:
 3254              	.L29:
 546:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor));
 3255              		.loc 1 546 3 is_stmt 1 view .LVU1164
 3256 0adc 2023     		movs	r3, #32
 3257 0ade 03FA01F1 		lsl	r1, r3, r1
 3258              	.LVL395:
 546:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor));
 3259              		.loc 1 546 3 is_stmt 0 view .LVU1165
 3260 0ae2 41F01101 		orr	r1, r1, #17
 3261 0ae6 C9B2     		uxtb	r1, r1
 546:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor));
 3262              		.loc 1 546 5 view .LVU1166
 3263 0ae8 2CB9     		cbnz	r4, .L139
 547:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3264              		.loc 1 547 4 is_stmt 1 view .LVU1167
 3265              	.LBB434:
 3266              	.LBI434:
  41:boards/TMC5072_eval.c **** {
 3267              		.loc 1 41 31 view .LVU1168
 3268              	.LVL396:
  41:boards/TMC5072_eval.c **** {
 3269              		.loc 1 41 31 is_stmt 0 view .LVU1169
 3270              	.LBE434:
  43:boards/TMC5072_eval.c **** 
 3271              		.loc 1 43 2 is_stmt 1 view .LVU1170
  45:boards/TMC5072_eval.c **** }
 3272              		.loc 1 45 2 view .LVU1171
 547:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3273              		.loc 1 547 13 is_stmt 0 view .LVU1172
 3274 0aea 7548     		ldr	r0, .L180
 3275              	.LVL397:
 547:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3276              		.loc 1 547 13 view .LVU1173
 3277 0aec FFF7FEFF 		bl	tmc5072_readInt
 3278              	.LVL398:
 547:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3279              		.loc 1 547 11 view .LVU1174
 3280 0af0 2860     		str	r0, [r5]
 3281 0af2 FFF7C6BA 		b	.L18
 3282              	.LVL399:
 3283              	.L139:
 548:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_VCOOLTHRS(motor),*value);
 3284              		.loc 1 548 10 is_stmt 1 view .LVU1175
 549:boards/TMC5072_eval.c **** 		}
 3285              		.loc 1 549 4 view .LVU1176
 3286              	.LBB435:
 3287              	.LBI435:
  41:boards/TMC5072_eval.c **** {
 3288              		.loc 1 41 31 view .LVU1177
  41:boards/TMC5072_eval.c **** {
 3289              		.loc 1 41 31 is_stmt 0 view .LVU1178
 3290              	.LBE435:
  43:boards/TMC5072_eval.c **** 
 3291              		.loc 1 43 2 is_stmt 1 view .LVU1179
  45:boards/TMC5072_eval.c **** }
 3292              		.loc 1 45 2 view .LVU1180
 549:boards/TMC5072_eval.c **** 		}
 3293              		.loc 1 549 4 is_stmt 0 view .LVU1181
 3294 0af6 2A68     		ldr	r2, [r5]
 3295 0af8 7148     		ldr	r0, .L180
 3296              	.LVL400:
 549:boards/TMC5072_eval.c **** 		}
 3297              		.loc 1 549 4 view .LVU1182
 3298 0afa FFF7FEFF 		bl	tmc5072_writeInt
 3299              	.LVL401:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3300              		.loc 1 124 11 view .LVU1183
 3301 0afe 0024     		movs	r4, #0
 3302 0b00 FFF7BFBA 		b	.L18
 3303              	.LVL402:
 3304              	.L27:
 554:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC50
 3305              		.loc 1 554 3 is_stmt 1 view .LVU1184
 3306 0b04 0901     		lsls	r1, r1, #4
 3307              	.LVL403:
 554:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC50
 3308              		.loc 1 554 3 is_stmt 0 view .LVU1185
 3309 0b06 41F06C06 		orr	r6, r1, #108
 3310 0b0a F6B2     		uxtb	r6, r6
 555:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3311              		.loc 1 555 13 view .LVU1186
 3312 0b0c 6C48     		ldr	r0, .L180
 3313              	.LVL404:
 555:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3314              		.loc 1 555 13 view .LVU1187
 3315 0b0e 3146     		mov	r1, r6
 554:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC50
 3316              		.loc 1 554 5 view .LVU1188
 3317 0b10 34B9     		cbnz	r4, .L140
 555:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3318              		.loc 1 555 4 is_stmt 1 view .LVU1189
 3319              	.LBB436:
 3320              	.LBI436:
  41:boards/TMC5072_eval.c **** {
 3321              		.loc 1 41 31 view .LVU1190
 3322              	.LVL405:
  41:boards/TMC5072_eval.c **** {
 3323              		.loc 1 41 31 is_stmt 0 view .LVU1191
 3324              	.LBE436:
  43:boards/TMC5072_eval.c **** 
 3325              		.loc 1 43 2 is_stmt 1 view .LVU1192
  45:boards/TMC5072_eval.c **** }
 3326              		.loc 1 45 2 view .LVU1193
 555:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3327              		.loc 1 555 13 is_stmt 0 view .LVU1194
 3328 0b12 FFF7FEFF 		bl	tmc5072_readInt
 3329              	.LVL406:
 3330 0b16 C0F34030 		ubfx	r0, r0, #13, #1
 555:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3331              		.loc 1 555 11 view .LVU1195
 3332 0b1a 2860     		str	r0, [r5]
 3333 0b1c FFF7B1BA 		b	.L18
 3334              	.L140:
 556:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_CHOPCONF(motor), TMC5072_RNDTF_MASK, TMC5072_RNDTF
 3335              		.loc 1 556 10 is_stmt 1 view .LVU1196
 557:boards/TMC5072_eval.c **** 		}
 3336              		.loc 1 557 4 view .LVU1197
 3337              	.LBB437:
 3338              	.LBI437:
  41:boards/TMC5072_eval.c **** {
 3339              		.loc 1 41 31 view .LVU1198
 3340              	.LVL407:
  41:boards/TMC5072_eval.c **** {
 3341              		.loc 1 41 31 is_stmt 0 view .LVU1199
 3342              	.LBE437:
  43:boards/TMC5072_eval.c **** 
 3343              		.loc 1 43 2 is_stmt 1 view .LVU1200
  45:boards/TMC5072_eval.c **** }
 3344              		.loc 1 45 2 view .LVU1201
 3345              	.LBB438:
 3346              	.LBI438:
  41:boards/TMC5072_eval.c **** {
 3347              		.loc 1 41 31 view .LVU1202
  41:boards/TMC5072_eval.c **** {
 3348              		.loc 1 41 31 is_stmt 0 view .LVU1203
 3349              	.LBE438:
  43:boards/TMC5072_eval.c **** 
 3350              		.loc 1 43 2 is_stmt 1 view .LVU1204
  45:boards/TMC5072_eval.c **** }
 3351              		.loc 1 45 2 view .LVU1205
 557:boards/TMC5072_eval.c **** 		}
 3352              		.loc 1 557 4 is_stmt 0 view .LVU1206
 3353 0b20 FFF7FEFF 		bl	tmc5072_readInt
 3354              	.LVL408:
 3355 0b24 2B68     		ldr	r3, [r5]
 3356 0b26 5B03     		lsls	r3, r3, #13
 3357 0b28 03F40053 		and	r3, r3, #8192
 3358 0b2c 20F40052 		bic	r2, r0, #8192
 3359 0b30 1A43     		orrs	r2, r2, r3
 3360 0b32 6348     		ldr	r0, .L180
 3361 0b34 3146     		mov	r1, r6
 3362 0b36 FFF7FEFF 		bl	tmc5072_writeInt
 3363              	.LVL409:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3364              		.loc 1 124 11 view .LVU1207
 3365 0b3a 0024     		movs	r4, #0
 3366 0b3c FFF7A1BA 		b	.L18
 3367              	.LVL410:
 3368              	.L26:
 562:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_DRVSTATUS(motor), TMC5072_SG_RESULT_MASK, 
 3369              		.loc 1 562 3 is_stmt 1 view .LVU1208
 562:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_DRVSTATUS(motor), TMC5072_SG_RESULT_MASK, 
 3370              		.loc 1 562 5 is_stmt 0 view .LVU1209
 3371 0b40 002C     		cmp	r4, #0
 3372 0b42 40F0B980 		bne	.L167
 563:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3373              		.loc 1 563 4 is_stmt 1 view .LVU1210
 3374              	.LBB439:
 3375              	.LBI439:
  41:boards/TMC5072_eval.c **** {
 3376              		.loc 1 41 31 view .LVU1211
 3377              	.LVL411:
  41:boards/TMC5072_eval.c **** {
 3378              		.loc 1 41 31 is_stmt 0 view .LVU1212
 3379              	.LBE439:
  43:boards/TMC5072_eval.c **** 
 3380              		.loc 1 43 2 is_stmt 1 view .LVU1213
  45:boards/TMC5072_eval.c **** }
 3381              		.loc 1 45 2 view .LVU1214
 563:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3382              		.loc 1 563 13 is_stmt 0 view .LVU1215
 3383 0b46 0901     		lsls	r1, r1, #4
 3384              	.LVL412:
 563:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3385              		.loc 1 563 13 view .LVU1216
 3386 0b48 41F06F01 		orr	r1, r1, #111
 3387 0b4c 5C48     		ldr	r0, .L180
 3388              	.LVL413:
 563:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3389              		.loc 1 563 13 view .LVU1217
 3390 0b4e C9B2     		uxtb	r1, r1
 3391 0b50 FFF7FEFF 		bl	tmc5072_readInt
 3392              	.LVL414:
 3393 0b54 C0F30900 		ubfx	r0, r0, #0, #10
 563:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3394              		.loc 1 563 11 view .LVU1218
 3395 0b58 2860     		str	r0, [r5]
 3396 0b5a FFF792BA 		b	.L18
 3397              	.LVL415:
 3398              	.L25:
 570:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_XENC(motor), TMC5072_X_ENC_MASK, TMC5072_X
 3399              		.loc 1 570 3 is_stmt 1 view .LVU1219
 3400 0b5e 2026     		movs	r6, #32
 3401 0b60 06FA01F1 		lsl	r1, r6, r1
 3402              	.LVL416:
 570:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_XENC(motor), TMC5072_X_ENC_MASK, TMC5072_X
 3403              		.loc 1 570 3 is_stmt 0 view .LVU1220
 3404 0b64 41F01906 		orr	r6, r1, #25
 3405 0b68 F6B2     		uxtb	r6, r6
 571:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3406              		.loc 1 571 13 view .LVU1221
 3407 0b6a 5548     		ldr	r0, .L180
 3408              	.LVL417:
 571:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3409              		.loc 1 571 13 view .LVU1222
 3410 0b6c 3146     		mov	r1, r6
 570:boards/TMC5072_eval.c **** 			*value = TMC5072_FIELD_READ(motorToIC(motor), TMC5072_XENC(motor), TMC5072_X_ENC_MASK, TMC5072_X
 3411              		.loc 1 570 5 view .LVU1223
 3412 0b6e 24B9     		cbnz	r4, .L141
 571:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3413              		.loc 1 571 4 is_stmt 1 view .LVU1224
 3414              	.LBB440:
 3415              	.LBI440:
  41:boards/TMC5072_eval.c **** {
 3416              		.loc 1 41 31 view .LVU1225
 3417              	.LVL418:
  41:boards/TMC5072_eval.c **** {
 3418              		.loc 1 41 31 is_stmt 0 view .LVU1226
 3419              	.LBE440:
  43:boards/TMC5072_eval.c **** 
 3420              		.loc 1 43 2 is_stmt 1 view .LVU1227
  45:boards/TMC5072_eval.c **** }
 3421              		.loc 1 45 2 view .LVU1228
 571:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3422              		.loc 1 571 13 is_stmt 0 view .LVU1229
 3423 0b70 FFF7FEFF 		bl	tmc5072_readInt
 3424              	.LVL419:
 571:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3425              		.loc 1 571 11 view .LVU1230
 3426 0b74 2860     		str	r0, [r5]
 3427 0b76 FFF784BA 		b	.L18
 3428              	.L141:
 572:boards/TMC5072_eval.c **** 			TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_XENC(motor), TMC5072_X_ENC_MASK, TMC5072_X_ENC_SHI
 3429              		.loc 1 572 10 is_stmt 1 view .LVU1231
 573:boards/TMC5072_eval.c **** 		}
 3430              		.loc 1 573 4 view .LVU1232
 3431              	.LBB441:
 3432              	.LBI441:
  41:boards/TMC5072_eval.c **** {
 3433              		.loc 1 41 31 view .LVU1233
 3434              	.LVL420:
  41:boards/TMC5072_eval.c **** {
 3435              		.loc 1 41 31 is_stmt 0 view .LVU1234
 3436              	.LBE441:
  43:boards/TMC5072_eval.c **** 
 3437              		.loc 1 43 2 is_stmt 1 view .LVU1235
  45:boards/TMC5072_eval.c **** }
 3438              		.loc 1 45 2 view .LVU1236
 3439              	.LBB442:
 3440              	.LBI442:
  41:boards/TMC5072_eval.c **** {
 3441              		.loc 1 41 31 view .LVU1237
  41:boards/TMC5072_eval.c **** {
 3442              		.loc 1 41 31 is_stmt 0 view .LVU1238
 3443              	.LBE442:
  43:boards/TMC5072_eval.c **** 
 3444              		.loc 1 43 2 is_stmt 1 view .LVU1239
  45:boards/TMC5072_eval.c **** }
 3445              		.loc 1 45 2 view .LVU1240
 573:boards/TMC5072_eval.c **** 		}
 3446              		.loc 1 573 4 is_stmt 0 view .LVU1241
 3447 0b7a FFF7FEFF 		bl	tmc5072_readInt
 3448              	.LVL421:
 3449 0b7e 2A68     		ldr	r2, [r5]
 3450 0b80 4F48     		ldr	r0, .L180
 3451 0b82 3146     		mov	r1, r6
 3452 0b84 FFF7FEFF 		bl	tmc5072_writeInt
 3453              	.LVL422:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3454              		.loc 1 124 11 view .LVU1242
 3455 0b88 0024     		movs	r4, #0
 3456 0b8a FFF77ABA 		b	.L18
 3457              	.LVL423:
 3458              	.L24:
 578:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_ENC_CONST(motor));
 3459              		.loc 1 578 3 is_stmt 1 view .LVU1243
 3460 0b8e 2023     		movs	r3, #32
 3461 0b90 03FA01F1 		lsl	r1, r3, r1
 3462              	.LVL424:
 578:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_ENC_CONST(motor));
 3463              		.loc 1 578 3 is_stmt 0 view .LVU1244
 3464 0b94 41F01A01 		orr	r1, r1, #26
 3465 0b98 C9B2     		uxtb	r1, r1
 578:boards/TMC5072_eval.c **** 			*value = tmc5072_readInt(motorToIC(motor), TMC5072_ENC_CONST(motor));
 3466              		.loc 1 578 5 view .LVU1245
 3467 0b9a 2CB9     		cbnz	r4, .L142
 579:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3468              		.loc 1 579 4 is_stmt 1 view .LVU1246
 3469              	.LBB443:
 3470              	.LBI443:
  41:boards/TMC5072_eval.c **** {
 3471              		.loc 1 41 31 view .LVU1247
 3472              	.LVL425:
  41:boards/TMC5072_eval.c **** {
 3473              		.loc 1 41 31 is_stmt 0 view .LVU1248
 3474              	.LBE443:
  43:boards/TMC5072_eval.c **** 
 3475              		.loc 1 43 2 is_stmt 1 view .LVU1249
  45:boards/TMC5072_eval.c **** }
 3476              		.loc 1 45 2 view .LVU1250
 579:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3477              		.loc 1 579 13 is_stmt 0 view .LVU1251
 3478 0b9c 4848     		ldr	r0, .L180
 3479              	.LVL426:
 579:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3480              		.loc 1 579 13 view .LVU1252
 3481 0b9e FFF7FEFF 		bl	tmc5072_readInt
 3482              	.LVL427:
 579:boards/TMC5072_eval.c **** 		} else if(readWrite == WRITE) {
 3483              		.loc 1 579 11 view .LVU1253
 3484 0ba2 2860     		str	r0, [r5]
 3485 0ba4 FFF76DBA 		b	.L18
 3486              	.LVL428:
 3487              	.L142:
 580:boards/TMC5072_eval.c **** 			tmc5072_writeInt(motorToIC(motor), TMC5072_ENC_CONST(motor),*value);
 3488              		.loc 1 580 10 is_stmt 1 view .LVU1254
 581:boards/TMC5072_eval.c **** 		}
 3489              		.loc 1 581 4 view .LVU1255
 3490              	.LBB444:
 3491              	.LBI444:
  41:boards/TMC5072_eval.c **** {
 3492              		.loc 1 41 31 view .LVU1256
  41:boards/TMC5072_eval.c **** {
 3493              		.loc 1 41 31 is_stmt 0 view .LVU1257
 3494              	.LBE444:
  43:boards/TMC5072_eval.c **** 
 3495              		.loc 1 43 2 is_stmt 1 view .LVU1258
  45:boards/TMC5072_eval.c **** }
 3496              		.loc 1 45 2 view .LVU1259
 581:boards/TMC5072_eval.c **** 		}
 3497              		.loc 1 581 4 is_stmt 0 view .LVU1260
 3498 0ba8 2A68     		ldr	r2, [r5]
 3499 0baa 4548     		ldr	r0, .L180
 3500              	.LVL429:
 581:boards/TMC5072_eval.c **** 		}
 3501              		.loc 1 581 4 view .LVU1261
 3502 0bac FFF7FEFF 		bl	tmc5072_writeInt
 3503              	.LVL430:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3504              		.loc 1 124 11 view .LVU1262
 3505 0bb0 0024     		movs	r4, #0
 3506 0bb2 FFF766BA 		b	.L18
 3507              	.LVL431:
 3508              	.L22:
 585:boards/TMC5072_eval.c **** 			// encoder enable
 3509              		.loc 1 585 3 is_stmt 1 view .LVU1263
 585:boards/TMC5072_eval.c **** 			// encoder enable
 3510              		.loc 1 585 5 is_stmt 0 view .LVU1264
 3511 0bb6 CCB9     		cbnz	r4, .L143
 587:boards/TMC5072_eval.c **** 			{
 3512              		.loc 1 587 4 is_stmt 1 view .LVU1265
 3513 0bb8 0129     		cmp	r1, #1
 595:boards/TMC5072_eval.c **** 				tempValue &= 0x60; //(1<<5) | (1<<6);
 3514              		.loc 1 595 17 is_stmt 0 view .LVU1266
 3515 0bba 4148     		ldr	r0, .L180
 3516              	.LVL432:
 595:boards/TMC5072_eval.c **** 				tempValue &= 0x60; //(1<<5) | (1<<6);
 3517              		.loc 1 595 17 view .LVU1267
 3518 0bbc 2146     		mov	r1, r4
 3519              	.LVL433:
 595:boards/TMC5072_eval.c **** 				tempValue &= 0x60; //(1<<5) | (1<<6);
 3520              		.loc 1 595 17 view .LVU1268
 3521 0bbe 0AD0     		beq	.L144
 590:boards/TMC5072_eval.c **** 				tempValue &= 0x18; //(1<<3) | (1<<4);
 3522              		.loc 1 590 5 is_stmt 1 view .LVU1269
 3523              	.LBB445:
 3524              	.LBI445:
  41:boards/TMC5072_eval.c **** {
 3525              		.loc 1 41 31 view .LVU1270
 3526              	.LVL434:
  41:boards/TMC5072_eval.c **** {
 3527              		.loc 1 41 31 is_stmt 0 view .LVU1271
 3528              	.LBE445:
  43:boards/TMC5072_eval.c **** 
 3529              		.loc 1 43 2 is_stmt 1 view .LVU1272
  45:boards/TMC5072_eval.c **** }
 3530              		.loc 1 45 2 view .LVU1273
 590:boards/TMC5072_eval.c **** 				tempValue &= 0x18; //(1<<3) | (1<<4);
 3531              		.loc 1 590 17 is_stmt 0 view .LVU1274
 3532 0bc0 FFF7FEFF 		bl	tmc5072_readInt
 3533              	.LVL435:
 591:boards/TMC5072_eval.c **** 				*value = (tempValue == 0x10) ? 1 : 0;
 3534              		.loc 1 591 5 is_stmt 1 view .LVU1275
 592:boards/TMC5072_eval.c **** 				break;
 3535              		.loc 1 592 5 view .LVU1276
 591:boards/TMC5072_eval.c **** 				*value = (tempValue == 0x10) ? 1 : 0;
 3536              		.loc 1 591 15 is_stmt 0 view .LVU1277
 3537 0bc4 00F01800 		and	r0, r0, #24
 3538              	.LVL436:
 592:boards/TMC5072_eval.c **** 				break;
 3539              		.loc 1 592 38 view .LVU1278
 3540 0bc8 A0F11002 		sub	r2, r0, #16
 3541 0bcc 5042     		rsbs	r0, r2, #0
 3542              	.LVL437:
 592:boards/TMC5072_eval.c **** 				break;
 3543              		.loc 1 592 38 view .LVU1279
 3544 0bce 5041     		adcs	r0, r0, r2
 592:boards/TMC5072_eval.c **** 				break;
 3545              		.loc 1 592 12 view .LVU1280
 3546 0bd0 2860     		str	r0, [r5]
 593:boards/TMC5072_eval.c **** 			case 1:
 3547              		.loc 1 593 5 is_stmt 1 view .LVU1281
 3548 0bd2 FFF756BA 		b	.L18
 3549              	.LVL438:
 3550              	.L144:
 595:boards/TMC5072_eval.c **** 				tempValue &= 0x60; //(1<<5) | (1<<6);
 3551              		.loc 1 595 5 view .LVU1282
 3552              	.LBB446:
 3553              	.LBI446:
  41:boards/TMC5072_eval.c **** {
 3554              		.loc 1 41 31 view .LVU1283
  41:boards/TMC5072_eval.c **** {
 3555              		.loc 1 41 31 is_stmt 0 view .LVU1284
 3556              	.LBE446:
  43:boards/TMC5072_eval.c **** 
 3557              		.loc 1 43 2 is_stmt 1 view .LVU1285
  45:boards/TMC5072_eval.c **** }
 3558              		.loc 1 45 2 view .LVU1286
 595:boards/TMC5072_eval.c **** 				tempValue &= 0x60; //(1<<5) | (1<<6);
 3559              		.loc 1 595 17 is_stmt 0 view .LVU1287
 3560 0bd6 FFF7FEFF 		bl	tmc5072_readInt
 3561              	.LVL439:
 596:boards/TMC5072_eval.c **** 				*value = (tempValue == 0x20) ? 1 : 0;
 3562              		.loc 1 596 5 is_stmt 1 view .LVU1288
 597:boards/TMC5072_eval.c **** 				break;
 3563              		.loc 1 597 5 view .LVU1289
 596:boards/TMC5072_eval.c **** 				*value = (tempValue == 0x20) ? 1 : 0;
 3564              		.loc 1 596 15 is_stmt 0 view .LVU1290
 3565 0bda 00F06000 		and	r0, r0, #96
 3566              	.LVL440:
 597:boards/TMC5072_eval.c **** 				break;
 3567              		.loc 1 597 38 view .LVU1291
 3568 0bde A0F12003 		sub	r3, r0, #32
 3569 0be2 5842     		rsbs	r0, r3, #0
 3570              	.LVL441:
 597:boards/TMC5072_eval.c **** 				break;
 3571              		.loc 1 597 38 view .LVU1292
 3572 0be4 5841     		adcs	r0, r0, r3
 597:boards/TMC5072_eval.c **** 				break;
 3573              		.loc 1 597 12 view .LVU1293
 3574 0be6 2860     		str	r0, [r5]
 598:boards/TMC5072_eval.c **** 			}
 3575              		.loc 1 598 5 is_stmt 1 view .LVU1294
 3576 0be8 FFF74BBA 		b	.L18
 3577              	.LVL442:
 3578              	.L143:
 600:boards/TMC5072_eval.c **** 			// encoder enable
 3579              		.loc 1 600 10 view .LVU1295
 602:boards/TMC5072_eval.c **** 			{
 3580              		.loc 1 602 4 view .LVU1296
 3581 0bec 0129     		cmp	r1, #1
 609:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC2_REFSEL_MASK, TMC5072_ENC2_REF
 3582              		.loc 1 609 5 is_stmt 0 view .LVU1297
 3583 0bee 3448     		ldr	r0, .L180
 3584              	.LVL443:
 609:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC2_REFSEL_MASK, TMC5072_ENC2_REF
 3585              		.loc 1 609 5 view .LVU1298
 3586 0bf0 4FF00001 		mov	r1, #0
 3587              	.LVL444:
 609:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC2_REFSEL_MASK, TMC5072_ENC2_REF
 3588              		.loc 1 609 5 view .LVU1299
 3589 0bf4 1FD0     		beq	.L145
 605:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC1_REFSEL_MASK, TMC5072_ENC1_REF
 3590              		.loc 1 605 5 is_stmt 1 view .LVU1300
 3591              	.LBB447:
 3592              	.LBI447:
  41:boards/TMC5072_eval.c **** {
 3593              		.loc 1 41 31 view .LVU1301
 3594              	.LVL445:
  41:boards/TMC5072_eval.c **** {
 3595              		.loc 1 41 31 is_stmt 0 view .LVU1302
 3596              	.LBE447:
  43:boards/TMC5072_eval.c **** 
 3597              		.loc 1 43 2 is_stmt 1 view .LVU1303
  45:boards/TMC5072_eval.c **** }
 3598              		.loc 1 45 2 view .LVU1304
 3599              	.LBB448:
 3600              	.LBI448:
  41:boards/TMC5072_eval.c **** {
 3601              		.loc 1 41 31 view .LVU1305
  41:boards/TMC5072_eval.c **** {
 3602              		.loc 1 41 31 is_stmt 0 view .LVU1306
 3603              	.LBE448:
  43:boards/TMC5072_eval.c **** 
 3604              		.loc 1 43 2 is_stmt 1 view .LVU1307
  45:boards/TMC5072_eval.c **** }
 3605              		.loc 1 45 2 view .LVU1308
 605:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC1_REFSEL_MASK, TMC5072_ENC1_REF
 3606              		.loc 1 605 5 is_stmt 0 view .LVU1309
 3607 0bf6 FFF7FEFF 		bl	tmc5072_readInt
 3608              	.LVL446:
 3609 0bfa 2B68     		ldr	r3, [r5]
 3610 0bfc 002B     		cmp	r3, #0
 3611 0bfe 0CBF     		ite	eq
 3612 0c00 0822     		moveq	r2, #8
 3613 0c02 0022     		movne	r2, #0
 3614 0c04 20F00800 		bic	r0, r0, #8
 3615 0c08 0243     		orrs	r2, r2, r0
 3616 0c0a 0021     		movs	r1, #0
 3617 0c0c 2C48     		ldr	r0, .L180
 3618 0c0e FFF7FEFF 		bl	tmc5072_writeInt
 3619              	.LVL447:
 606:boards/TMC5072_eval.c **** 				break;
 3620              		.loc 1 606 5 is_stmt 1 view .LVU1310
 3621              	.LBB449:
 3622              	.LBI449:
  41:boards/TMC5072_eval.c **** {
 3623              		.loc 1 41 31 view .LVU1311
  41:boards/TMC5072_eval.c **** {
 3624              		.loc 1 41 31 is_stmt 0 view .LVU1312
 3625              	.LBE449:
  43:boards/TMC5072_eval.c **** 
 3626              		.loc 1 43 2 is_stmt 1 view .LVU1313
  45:boards/TMC5072_eval.c **** }
 3627              		.loc 1 45 2 view .LVU1314
 3628              	.LBB450:
 3629              	.LBI450:
  41:boards/TMC5072_eval.c **** {
 3630              		.loc 1 41 31 view .LVU1315
  41:boards/TMC5072_eval.c **** {
 3631              		.loc 1 41 31 is_stmt 0 view .LVU1316
 3632              	.LBE450:
  43:boards/TMC5072_eval.c **** 
 3633              		.loc 1 43 2 is_stmt 1 view .LVU1317
  45:boards/TMC5072_eval.c **** }
 3634              		.loc 1 45 2 view .LVU1318
 606:boards/TMC5072_eval.c **** 				break;
 3635              		.loc 1 606 5 is_stmt 0 view .LVU1319
 3636 0c12 0021     		movs	r1, #0
 3637 0c14 2A48     		ldr	r0, .L180
 3638 0c16 FFF7FEFF 		bl	tmc5072_readInt
 3639              	.LVL448:
 3640 0c1a 2B68     		ldr	r3, [r5]
 3641 0c1c 002B     		cmp	r3, #0
 3642 0c1e 20F01002 		bic	r2, r0, #16
 3643 0c22 18BF     		it	ne
 3644 0c24 1023     		movne	r3, #16
 3645 0c26 2648     		ldr	r0, .L180
 3646 0c28 1A43     		orrs	r2, r2, r3
 3647 0c2a 0021     		movs	r1, #0
 3648 0c2c FFF7FEFF 		bl	tmc5072_writeInt
 3649              	.LVL449:
 607:boards/TMC5072_eval.c **** 			case 1:		// enable ENCODER2 - disable REF
 3650              		.loc 1 607 5 is_stmt 1 view .LVU1320
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3651              		.loc 1 124 11 is_stmt 0 view .LVU1321
 3652 0c30 0024     		movs	r4, #0
 607:boards/TMC5072_eval.c **** 			case 1:		// enable ENCODER2 - disable REF
 3653              		.loc 1 607 5 view .LVU1322
 3654 0c32 FFF726BA 		b	.L18
 3655              	.LVL450:
 3656              	.L145:
 609:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC2_REFSEL_MASK, TMC5072_ENC2_REF
 3657              		.loc 1 609 5 is_stmt 1 view .LVU1323
 3658              	.LBB451:
 3659              	.LBI451:
  41:boards/TMC5072_eval.c **** {
 3660              		.loc 1 41 31 view .LVU1324
  41:boards/TMC5072_eval.c **** {
 3661              		.loc 1 41 31 is_stmt 0 view .LVU1325
 3662              	.LBE451:
  43:boards/TMC5072_eval.c **** 
 3663              		.loc 1 43 2 is_stmt 1 view .LVU1326
  45:boards/TMC5072_eval.c **** }
 3664              		.loc 1 45 2 view .LVU1327
 3665              	.LBB452:
 3666              	.LBI452:
  41:boards/TMC5072_eval.c **** {
 3667              		.loc 1 41 31 view .LVU1328
  41:boards/TMC5072_eval.c **** {
 3668              		.loc 1 41 31 is_stmt 0 view .LVU1329
 3669              	.LBE452:
  43:boards/TMC5072_eval.c **** 
 3670              		.loc 1 43 2 is_stmt 1 view .LVU1330
  45:boards/TMC5072_eval.c **** }
 3671              		.loc 1 45 2 view .LVU1331
 609:boards/TMC5072_eval.c **** 				TMC5072_FIELD_WRITE(motorToIC(motor), TMC5072_GCONF, TMC5072_ENC2_REFSEL_MASK, TMC5072_ENC2_REF
 3672              		.loc 1 609 5 is_stmt 0 view .LVU1332
 3673 0c36 FFF7FEFF 		bl	tmc5072_readInt
 3674              	.LVL451:
 3675 0c3a 2B68     		ldr	r3, [r5]
 3676 0c3c 002B     		cmp	r3, #0
 3677 0c3e 18BF     		it	ne
 3678 0c40 2023     		movne	r3, #32
 3679 0c42 20F02002 		bic	r2, r0, #32
 3680 0c46 1A43     		orrs	r2, r2, r3
 3681 0c48 1D48     		ldr	r0, .L180
 3682 0c4a 0021     		movs	r1, #0
 3683 0c4c FFF7FEFF 		bl	tmc5072_writeInt
 3684              	.LVL452:
 610:boards/TMC5072_eval.c **** 				break;
 3685              		.loc 1 610 5 is_stmt 1 view .LVU1333
 3686              	.LBB453:
 3687              	.LBI453:
  41:boards/TMC5072_eval.c **** {
 3688              		.loc 1 41 31 view .LVU1334
  41:boards/TMC5072_eval.c **** {
 3689              		.loc 1 41 31 is_stmt 0 view .LVU1335
 3690              	.LBE453:
  43:boards/TMC5072_eval.c **** 
 3691              		.loc 1 43 2 is_stmt 1 view .LVU1336
  45:boards/TMC5072_eval.c **** }
 3692              		.loc 1 45 2 view .LVU1337
 3693              	.LBB454:
 3694              	.LBI454:
  41:boards/TMC5072_eval.c **** {
 3695              		.loc 1 41 31 view .LVU1338
  41:boards/TMC5072_eval.c **** {
 3696              		.loc 1 41 31 is_stmt 0 view .LVU1339
 3697              	.LBE454:
  43:boards/TMC5072_eval.c **** 
 3698              		.loc 1 43 2 is_stmt 1 view .LVU1340
  45:boards/TMC5072_eval.c **** }
 3699              		.loc 1 45 2 view .LVU1341
 610:boards/TMC5072_eval.c **** 				break;
 3700              		.loc 1 610 5 is_stmt 0 view .LVU1342
 3701 0c50 0021     		movs	r1, #0
 3702 0c52 1B48     		ldr	r0, .L180
 3703 0c54 FFF7FEFF 		bl	tmc5072_readInt
 3704              	.LVL453:
 3705 0c58 2B68     		ldr	r3, [r5]
 3706 0c5a 002B     		cmp	r3, #0
 3707 0c5c 20F04000 		bic	r0, r0, #64
 3708 0c60 0CBF     		ite	eq
 3709 0c62 4022     		moveq	r2, #64
 3710 0c64 0022     		movne	r2, #0
 3711 0c66 0243     		orrs	r2, r2, r0
 3712 0c68 0021     		movs	r1, #0
 3713 0c6a 1548     		ldr	r0, .L180
 3714 0c6c FFF7FEFF 		bl	tmc5072_writeInt
 3715              	.LVL454:
 611:boards/TMC5072_eval.c **** 			}
 3716              		.loc 1 611 5 is_stmt 1 view .LVU1343
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3717              		.loc 1 124 11 is_stmt 0 view .LVU1344
 3718 0c70 0024     		movs	r4, #0
 611:boards/TMC5072_eval.c **** 			}
 3719              		.loc 1 611 5 view .LVU1345
 3720 0c72 FFF706BA 		b	.L18
 3721              	.LVL455:
 3722              	.L150:
 128:boards/TMC5072_eval.c **** 
 3723              		.loc 1 128 10 view .LVU1346
 3724 0c76 0824     		movs	r4, #8
 3725 0c78 FFF703BA 		b	.L18
 3726              	.LVL456:
 3727              	.L151:
 130:boards/TMC5072_eval.c **** 	{
 3728              		.loc 1 130 2 view .LVU1347
 3729 0c7c 0424     		movs	r4, #4
 3730 0c7e FFF700BA 		b	.L18
 3731              	.L152:
 3732 0c82 0424     		movs	r4, #4
 3733 0c84 FFF7FDB9 		b	.L18
 3734              	.LVL457:
 3735              	.L153:
 130:boards/TMC5072_eval.c **** 	{
 3736              		.loc 1 130 2 view .LVU1348
 3737 0c88 0424     		movs	r4, #4
 3738 0c8a FFF7FAB9 		b	.L18
 3739              	.L154:
 163:boards/TMC5072_eval.c **** 		}
 3740              		.loc 1 163 11 view .LVU1349
 3741 0c8e 0424     		movs	r4, #4
 3742 0c90 FFF7F7B9 		b	.L18
 3743              	.LVL458:
 3744              	.L156:
 124:boards/TMC5072_eval.c **** 	int tempValue;
 3745              		.loc 1 124 11 view .LVU1350
 3746 0c94 0024     		movs	r4, #0
 3747 0c96 FFF7F4B9 		b	.L18
 3748              	.LVL459:
 3749              	.L157:
 163:boards/TMC5072_eval.c **** 		}
 3750              		.loc 1 163 11 view .LVU1351
 3751 0c9a 0424     		movs	r4, #4
 3752 0c9c FFF7F1B9 		b	.L18
 3753              	.L158:
 3754 0ca0 0424     		movs	r4, #4
 3755 0ca2 FFF7EEB9 		b	.L18
 3756              	.L159:
 3757 0ca6 0424     		movs	r4, #4
 3758 0ca8 FFF7EBB9 		b	.L18
 3759              	.L163:
 3760 0cac 0424     		movs	r4, #4
 3761 0cae FFF7E8B9 		b	.L18
 3762              	.LVL460:
 3763              	.L165:
 163:boards/TMC5072_eval.c **** 		}
 3764              		.loc 1 163 11 view .LVU1352
 3765 0cb2 0424     		movs	r4, #4
 3766 0cb4 FFF7E5B9 		b	.L18
 3767              	.L167:
 3768 0cb8 0424     		movs	r4, #4
 3769              	.LVL461:
 163:boards/TMC5072_eval.c **** 		}
 3770              		.loc 1 163 11 view .LVU1353
 3771 0cba FFF7E2B9 		b	.L18
 3772              	.L181:
 3773 0cbe 00BF     		.align	2
 3774              	.L180:
 3775 0cc0 00000000 		.word	.LANCHOR0
 3776              		.cfi_endproc
 3777              	.LFE10:
 3779              		.align	1
 3780              		.syntax unified
 3781              		.thumb
 3782              		.thumb_func
 3783              		.fpu softvfp
 3785              	SAP:
 3786              	.LVL462:
 3787              	.LFB11:
 623:boards/TMC5072_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3788              		.loc 1 623 1 is_stmt 1 view -0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 8
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
 624:boards/TMC5072_eval.c **** }
 3792              		.loc 1 624 2 view .LVU1355
 623:boards/TMC5072_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3793              		.loc 1 623 1 is_stmt 0 view .LVU1356
 3794 0cc4 07B5     		push	{r0, r1, r2, lr}
 3795              	.LCFI4:
 3796              		.cfi_def_cfa_offset 16
 3797              		.cfi_offset 14, -4
 623:boards/TMC5072_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 3798              		.loc 1 623 1 view .LVU1357
 3799 0cc6 0192     		str	r2, [sp, #4]
 624:boards/TMC5072_eval.c **** }
 3800              		.loc 1 624 9 view .LVU1358
 3801 0cc8 01AB     		add	r3, sp, #4
 3802 0cca 0246     		mov	r2, r0
 3803              	.LVL463:
 624:boards/TMC5072_eval.c **** }
 3804              		.loc 1 624 9 view .LVU1359
 3805 0ccc 0120     		movs	r0, #1
 3806              	.LVL464:
 624:boards/TMC5072_eval.c **** }
 3807              		.loc 1 624 9 view .LVU1360
 3808 0cce FFF7CBF9 		bl	handleParameter
 3809              	.LVL465:
 625:boards/TMC5072_eval.c **** 
 3810              		.loc 1 625 1 view .LVU1361
 3811 0cd2 03B0     		add	sp, sp, #12
 3812              	.LCFI5:
 3813              		.cfi_def_cfa_offset 4
 3814              		@ sp needed
 3815 0cd4 5DF804FB 		ldr	pc, [sp], #4
 3816              		.cfi_endproc
 3817              	.LFE11:
 3819              		.align	1
 3820              		.syntax unified
 3821              		.thumb
 3822              		.thumb_func
 3823              		.fpu softvfp
 3825              	GAP:
 3826              	.LVL466:
 3827              	.LFB12:
 628:boards/TMC5072_eval.c **** 	return handleParameter(READ, motor, type, value);
 3828              		.loc 1 628 1 is_stmt 1 view -0
 3829              		.cfi_startproc
 3830              		@ args = 0, pretend = 0, frame = 0
 3831              		@ frame_needed = 0, uses_anonymous_args = 0
 3832              		@ link register save eliminated.
 629:boards/TMC5072_eval.c **** }
 3833              		.loc 1 629 2 view .LVU1363
 628:boards/TMC5072_eval.c **** 	return handleParameter(READ, motor, type, value);
 3834              		.loc 1 628 1 is_stmt 0 view .LVU1364
 3835 0cd8 1346     		mov	r3, r2
 629:boards/TMC5072_eval.c **** }
 3836              		.loc 1 629 9 view .LVU1365
 3837 0cda 0246     		mov	r2, r0
 3838              	.LVL467:
 629:boards/TMC5072_eval.c **** }
 3839              		.loc 1 629 9 view .LVU1366
 3840 0cdc 0020     		movs	r0, #0
 3841              	.LVL468:
 629:boards/TMC5072_eval.c **** }
 3842              		.loc 1 629 9 view .LVU1367
 3843 0cde FFF7C3B9 		b	handleParameter
 3844              	.LVL469:
 629:boards/TMC5072_eval.c **** }
 3845              		.loc 1 629 9 view .LVU1368
 3846              		.cfi_endproc
 3847              	.LFE12:
 3849              		.align	1
 3850              		.syntax unified
 3851              		.thumb
 3852              		.thumb_func
 3853              		.fpu softvfp
 3855              	moveBy:
 3856              	.LVL470:
 3857              	.LFB9:
 115:boards/TMC5072_eval.c **** 	tmc5072_moveBy(motorToIC(motor), motor, vmax_position[motor], ticks);
 3858              		.loc 1 115 1 is_stmt 1 view -0
 3859              		.cfi_startproc
 3860              		@ args = 0, pretend = 0, frame = 0
 3861              		@ frame_needed = 0, uses_anonymous_args = 0
 116:boards/TMC5072_eval.c **** 
 3862              		.loc 1 116 2 view .LVU1370
 115:boards/TMC5072_eval.c **** 	tmc5072_moveBy(motorToIC(motor), motor, vmax_position[motor], ticks);
 3863              		.loc 1 115 1 is_stmt 0 view .LVU1371
 3864 0ce2 10B5     		push	{r4, lr}
 3865              	.LCFI6:
 3866              		.cfi_def_cfa_offset 8
 3867              		.cfi_offset 4, -8
 3868              		.cfi_offset 14, -4
 115:boards/TMC5072_eval.c **** 	tmc5072_moveBy(motorToIC(motor), motor, vmax_position[motor], ticks);
 3869              		.loc 1 115 1 view .LVU1372
 3870 0ce4 0446     		mov	r4, r0
 3871              	.LBB455:
 3872              	.LBI455:
  41:boards/TMC5072_eval.c **** {
 3873              		.loc 1 41 31 is_stmt 1 view .LVU1373
 3874              	.LVL471:
  41:boards/TMC5072_eval.c **** {
 3875              		.loc 1 41 31 is_stmt 0 view .LVU1374
 3876              	.LBE455:
  43:boards/TMC5072_eval.c **** 
 3877              		.loc 1 43 2 is_stmt 1 view .LVU1375
  45:boards/TMC5072_eval.c **** }
 3878              		.loc 1 45 2 view .LVU1376
 116:boards/TMC5072_eval.c **** 
 3879              		.loc 1 116 2 is_stmt 0 view .LVU1377
 3880 0ce6 0548     		ldr	r0, .L185
 3881              	.LVL472:
 116:boards/TMC5072_eval.c **** 
 3882              		.loc 1 116 2 view .LVU1378
 3883 0ce8 00EB8402 		add	r2, r0, r4, lsl #2
 115:boards/TMC5072_eval.c **** 	tmc5072_moveBy(motorToIC(motor), motor, vmax_position[motor], ticks);
 3884              		.loc 1 115 1 view .LVU1379
 3885 0cec 0B46     		mov	r3, r1
 116:boards/TMC5072_eval.c **** 
 3886              		.loc 1 116 2 view .LVU1380
 3887 0cee D2F89822 		ldr	r2, [r2, #664]
 3888 0cf2 2146     		mov	r1, r4
 3889              	.LVL473:
 116:boards/TMC5072_eval.c **** 
 3890              		.loc 1 116 2 view .LVU1381
 3891 0cf4 FFF7FEFF 		bl	tmc5072_moveBy
 3892              	.LVL474:
 118:boards/TMC5072_eval.c **** }
 3893              		.loc 1 118 2 is_stmt 1 view .LVU1382
 119:boards/TMC5072_eval.c **** // <= Functions forwarded to API
 3894              		.loc 1 119 1 is_stmt 0 view .LVU1383
 3895 0cf8 0020     		movs	r0, #0
 3896 0cfa 10BD     		pop	{r4, pc}
 3897              	.LVL475:
 3898              	.L186:
 119:boards/TMC5072_eval.c **** // <= Functions forwarded to API
 3899              		.loc 1 119 1 view .LVU1384
 3900              		.align	2
 3901              	.L185:
 3902 0cfc 00000000 		.word	.LANCHOR0
 3903              		.cfi_endproc
 3904              	.LFE9:
 3906              		.align	1
 3907              		.syntax unified
 3908              		.thumb
 3909              		.thumb_func
 3910              		.fpu softvfp
 3912              	moveTo:
 3913              	.LVL476:
 3914              	.LFB8:
 108:boards/TMC5072_eval.c **** 	tmc5072_moveTo(motorToIC(motor), motor, position, vmax_position[motor]);
 3915              		.loc 1 108 1 is_stmt 1 view -0
 3916              		.cfi_startproc
 3917              		@ args = 0, pretend = 0, frame = 0
 3918              		@ frame_needed = 0, uses_anonymous_args = 0
 109:boards/TMC5072_eval.c **** 
 3919              		.loc 1 109 2 view .LVU1386
 108:boards/TMC5072_eval.c **** 	tmc5072_moveTo(motorToIC(motor), motor, position, vmax_position[motor]);
 3920              		.loc 1 108 1 is_stmt 0 view .LVU1387
 3921 0d00 10B5     		push	{r4, lr}
 3922              	.LCFI7:
 3923              		.cfi_def_cfa_offset 8
 3924              		.cfi_offset 4, -8
 3925              		.cfi_offset 14, -4
 108:boards/TMC5072_eval.c **** 	tmc5072_moveTo(motorToIC(motor), motor, position, vmax_position[motor]);
 3926              		.loc 1 108 1 view .LVU1388
 3927 0d02 0446     		mov	r4, r0
 3928              	.LBB456:
 3929              	.LBI456:
  41:boards/TMC5072_eval.c **** {
 3930              		.loc 1 41 31 is_stmt 1 view .LVU1389
 3931              	.LVL477:
  41:boards/TMC5072_eval.c **** {
 3932              		.loc 1 41 31 is_stmt 0 view .LVU1390
 3933              	.LBE456:
  43:boards/TMC5072_eval.c **** 
 3934              		.loc 1 43 2 is_stmt 1 view .LVU1391
  45:boards/TMC5072_eval.c **** }
 3935              		.loc 1 45 2 view .LVU1392
 109:boards/TMC5072_eval.c **** 
 3936              		.loc 1 109 2 is_stmt 0 view .LVU1393
 3937 0d04 0548     		ldr	r0, .L188
 3938              	.LVL478:
 109:boards/TMC5072_eval.c **** 
 3939              		.loc 1 109 2 view .LVU1394
 3940 0d06 00EB8403 		add	r3, r0, r4, lsl #2
 108:boards/TMC5072_eval.c **** 	tmc5072_moveTo(motorToIC(motor), motor, position, vmax_position[motor]);
 3941              		.loc 1 108 1 view .LVU1395
 3942 0d0a 0A46     		mov	r2, r1
 109:boards/TMC5072_eval.c **** 
 3943              		.loc 1 109 2 view .LVU1396
 3944 0d0c D3F89832 		ldr	r3, [r3, #664]
 3945 0d10 2146     		mov	r1, r4
 3946              	.LVL479:
 109:boards/TMC5072_eval.c **** 
 3947              		.loc 1 109 2 view .LVU1397
 3948 0d12 FFF7FEFF 		bl	tmc5072_moveTo
 3949              	.LVL480:
 111:boards/TMC5072_eval.c **** }
 3950              		.loc 1 111 2 is_stmt 1 view .LVU1398
 112:boards/TMC5072_eval.c **** 
 3951              		.loc 1 112 1 is_stmt 0 view .LVU1399
 3952 0d16 0020     		movs	r0, #0
 3953 0d18 10BD     		pop	{r4, pc}
 3954              	.LVL481:
 3955              	.L189:
 112:boards/TMC5072_eval.c **** 
 3956              		.loc 1 112 1 view .LVU1400
 3957 0d1a 00BF     		.align	2
 3958              	.L188:
 3959 0d1c 00000000 		.word	.LANCHOR0
 3960              		.cfi_endproc
 3961              	.LFE8:
 3963              		.align	1
 3964              		.syntax unified
 3965              		.thumb
 3966              		.thumb_func
 3967              		.fpu softvfp
 3969              	stop:
 3970              	.LVL482:
 3971              	.LFB7:
 101:boards/TMC5072_eval.c **** 	tmc5072_stop(motorToIC(motor), motor);
 3972              		.loc 1 101 1 is_stmt 1 view -0
 3973              		.cfi_startproc
 3974              		@ args = 0, pretend = 0, frame = 0
 3975              		@ frame_needed = 0, uses_anonymous_args = 0
 102:boards/TMC5072_eval.c **** 
 3976              		.loc 1 102 2 view .LVU1402
 101:boards/TMC5072_eval.c **** 	tmc5072_stop(motorToIC(motor), motor);
 3977              		.loc 1 101 1 is_stmt 0 view .LVU1403
 3978 0d20 08B5     		push	{r3, lr}
 3979              	.LCFI8:
 3980              		.cfi_def_cfa_offset 8
 3981              		.cfi_offset 3, -8
 3982              		.cfi_offset 14, -4
 101:boards/TMC5072_eval.c **** 	tmc5072_stop(motorToIC(motor), motor);
 3983              		.loc 1 101 1 view .LVU1404
 3984 0d22 0146     		mov	r1, r0
 3985              	.LBB457:
 3986              	.LBI457:
  41:boards/TMC5072_eval.c **** {
 3987              		.loc 1 41 31 is_stmt 1 view .LVU1405
 3988              	.LVL483:
  41:boards/TMC5072_eval.c **** {
 3989              		.loc 1 41 31 is_stmt 0 view .LVU1406
 3990              	.LBE457:
  43:boards/TMC5072_eval.c **** 
 3991              		.loc 1 43 2 is_stmt 1 view .LVU1407
  45:boards/TMC5072_eval.c **** }
 3992              		.loc 1 45 2 view .LVU1408
 102:boards/TMC5072_eval.c **** 
 3993              		.loc 1 102 2 is_stmt 0 view .LVU1409
 3994 0d24 0248     		ldr	r0, .L191
 3995              	.LVL484:
 102:boards/TMC5072_eval.c **** 
 3996              		.loc 1 102 2 view .LVU1410
 3997 0d26 FFF7FEFF 		bl	tmc5072_stop
 3998              	.LVL485:
 104:boards/TMC5072_eval.c **** }
 3999              		.loc 1 104 2 is_stmt 1 view .LVU1411
 105:boards/TMC5072_eval.c **** 
 4000              		.loc 1 105 1 is_stmt 0 view .LVU1412
 4001 0d2a 0020     		movs	r0, #0
 4002 0d2c 08BD     		pop	{r3, pc}
 4003              	.L192:
 4004 0d2e 00BF     		.align	2
 4005              	.L191:
 4006 0d30 00000000 		.word	.LANCHOR0
 4007              		.cfi_endproc
 4008              	.LFE7:
 4010              		.align	1
 4011              		.syntax unified
 4012              		.thumb
 4013              		.thumb_func
 4014              		.fpu softvfp
 4016              	left:
 4017              	.LVL486:
 4018              	.LFB6:
  94:boards/TMC5072_eval.c **** 	tmc5072_left(motorToIC(motor), motor, velocity);
 4019              		.loc 1 94 1 is_stmt 1 view -0
 4020              		.cfi_startproc
 4021              		@ args = 0, pretend = 0, frame = 0
 4022              		@ frame_needed = 0, uses_anonymous_args = 0
  95:boards/TMC5072_eval.c **** 
 4023              		.loc 1 95 2 view .LVU1414
 4024              	.LBB458:
 4025              	.LBI458:
  41:boards/TMC5072_eval.c **** {
 4026              		.loc 1 41 31 view .LVU1415
  41:boards/TMC5072_eval.c **** {
 4027              		.loc 1 41 31 is_stmt 0 view .LVU1416
 4028              	.LBE458:
  43:boards/TMC5072_eval.c **** 
 4029              		.loc 1 43 2 is_stmt 1 view .LVU1417
  45:boards/TMC5072_eval.c **** }
 4030              		.loc 1 45 2 view .LVU1418
  94:boards/TMC5072_eval.c **** 	tmc5072_left(motorToIC(motor), motor, velocity);
 4031              		.loc 1 94 1 is_stmt 0 view .LVU1419
 4032 0d34 08B5     		push	{r3, lr}
 4033              	.LCFI9:
 4034              		.cfi_def_cfa_offset 8
 4035              		.cfi_offset 3, -8
 4036              		.cfi_offset 14, -4
  94:boards/TMC5072_eval.c **** 	tmc5072_left(motorToIC(motor), motor, velocity);
 4037              		.loc 1 94 1 view .LVU1420
 4038 0d36 0A46     		mov	r2, r1
  95:boards/TMC5072_eval.c **** 
 4039              		.loc 1 95 2 view .LVU1421
 4040 0d38 0146     		mov	r1, r0
 4041              	.LVL487:
  95:boards/TMC5072_eval.c **** 
 4042              		.loc 1 95 2 view .LVU1422
 4043 0d3a 0248     		ldr	r0, .L194
 4044              	.LVL488:
  95:boards/TMC5072_eval.c **** 
 4045              		.loc 1 95 2 view .LVU1423
 4046 0d3c FFF7FEFF 		bl	tmc5072_left
 4047              	.LVL489:
  97:boards/TMC5072_eval.c **** }
 4048              		.loc 1 97 2 is_stmt 1 view .LVU1424
  98:boards/TMC5072_eval.c **** 
 4049              		.loc 1 98 1 is_stmt 0 view .LVU1425
 4050 0d40 0020     		movs	r0, #0
 4051 0d42 08BD     		pop	{r3, pc}
 4052              	.L195:
 4053              		.align	2
 4054              	.L194:
 4055 0d44 00000000 		.word	.LANCHOR0
 4056              		.cfi_endproc
 4057              	.LFE6:
 4059              		.align	1
 4060              		.syntax unified
 4061              		.thumb
 4062              		.thumb_func
 4063              		.fpu softvfp
 4065              	right:
 4066              	.LVL490:
 4067              	.LFB5:
  87:boards/TMC5072_eval.c **** 	tmc5072_right(motorToIC(motor), motor, velocity);
 4068              		.loc 1 87 1 is_stmt 1 view -0
 4069              		.cfi_startproc
 4070              		@ args = 0, pretend = 0, frame = 0
 4071              		@ frame_needed = 0, uses_anonymous_args = 0
  88:boards/TMC5072_eval.c **** 
 4072              		.loc 1 88 2 view .LVU1427
 4073              	.LBB459:
 4074              	.LBI459:
  41:boards/TMC5072_eval.c **** {
 4075              		.loc 1 41 31 view .LVU1428
  41:boards/TMC5072_eval.c **** {
 4076              		.loc 1 41 31 is_stmt 0 view .LVU1429
 4077              	.LBE459:
  43:boards/TMC5072_eval.c **** 
 4078              		.loc 1 43 2 is_stmt 1 view .LVU1430
  45:boards/TMC5072_eval.c **** }
 4079              		.loc 1 45 2 view .LVU1431
  87:boards/TMC5072_eval.c **** 	tmc5072_right(motorToIC(motor), motor, velocity);
 4080              		.loc 1 87 1 is_stmt 0 view .LVU1432
 4081 0d48 08B5     		push	{r3, lr}
 4082              	.LCFI10:
 4083              		.cfi_def_cfa_offset 8
 4084              		.cfi_offset 3, -8
 4085              		.cfi_offset 14, -4
  87:boards/TMC5072_eval.c **** 	tmc5072_right(motorToIC(motor), motor, velocity);
 4086              		.loc 1 87 1 view .LVU1433
 4087 0d4a 0A46     		mov	r2, r1
  88:boards/TMC5072_eval.c **** 
 4088              		.loc 1 88 2 view .LVU1434
 4089 0d4c 0146     		mov	r1, r0
 4090              	.LVL491:
  88:boards/TMC5072_eval.c **** 
 4091              		.loc 1 88 2 view .LVU1435
 4092 0d4e 0248     		ldr	r0, .L197
 4093              	.LVL492:
  88:boards/TMC5072_eval.c **** 
 4094              		.loc 1 88 2 view .LVU1436
 4095 0d50 FFF7FEFF 		bl	tmc5072_right
 4096              	.LVL493:
  90:boards/TMC5072_eval.c **** }
 4097              		.loc 1 90 2 is_stmt 1 view .LVU1437
  91:boards/TMC5072_eval.c **** 
 4098              		.loc 1 91 1 is_stmt 0 view .LVU1438
 4099 0d54 0020     		movs	r0, #0
 4100 0d56 08BD     		pop	{r3, pc}
 4101              	.L198:
 4102              		.align	2
 4103              	.L197:
 4104 0d58 00000000 		.word	.LANCHOR0
 4105              		.cfi_endproc
 4106              	.LFE5:
 4108              		.align	1
 4109              		.syntax unified
 4110              		.thumb
 4111              		.thumb_func
 4112              		.fpu softvfp
 4114              	rotate:
 4115              	.LVL494:
 4116              	.LFB4:
  80:boards/TMC5072_eval.c **** 	tmc5072_rotate(motorToIC(motor), motor, velocity);
 4117              		.loc 1 80 1 is_stmt 1 view -0
 4118              		.cfi_startproc
 4119              		@ args = 0, pretend = 0, frame = 0
 4120              		@ frame_needed = 0, uses_anonymous_args = 0
  81:boards/TMC5072_eval.c **** 
 4121              		.loc 1 81 2 view .LVU1440
 4122              	.LBB460:
 4123              	.LBI460:
  41:boards/TMC5072_eval.c **** {
 4124              		.loc 1 41 31 view .LVU1441
  41:boards/TMC5072_eval.c **** {
 4125              		.loc 1 41 31 is_stmt 0 view .LVU1442
 4126              	.LBE460:
  43:boards/TMC5072_eval.c **** 
 4127              		.loc 1 43 2 is_stmt 1 view .LVU1443
  45:boards/TMC5072_eval.c **** }
 4128              		.loc 1 45 2 view .LVU1444
  80:boards/TMC5072_eval.c **** 	tmc5072_rotate(motorToIC(motor), motor, velocity);
 4129              		.loc 1 80 1 is_stmt 0 view .LVU1445
 4130 0d5c 08B5     		push	{r3, lr}
 4131              	.LCFI11:
 4132              		.cfi_def_cfa_offset 8
 4133              		.cfi_offset 3, -8
 4134              		.cfi_offset 14, -4
  80:boards/TMC5072_eval.c **** 	tmc5072_rotate(motorToIC(motor), motor, velocity);
 4135              		.loc 1 80 1 view .LVU1446
 4136 0d5e 0A46     		mov	r2, r1
  81:boards/TMC5072_eval.c **** 
 4137              		.loc 1 81 2 view .LVU1447
 4138 0d60 0146     		mov	r1, r0
 4139              	.LVL495:
  81:boards/TMC5072_eval.c **** 
 4140              		.loc 1 81 2 view .LVU1448
 4141 0d62 0248     		ldr	r0, .L200
 4142              	.LVL496:
  81:boards/TMC5072_eval.c **** 
 4143              		.loc 1 81 2 view .LVU1449
 4144 0d64 FFF7FEFF 		bl	tmc5072_rotate
 4145              	.LVL497:
  83:boards/TMC5072_eval.c **** }
 4146              		.loc 1 83 2 is_stmt 1 view .LVU1450
  84:boards/TMC5072_eval.c **** 
 4147              		.loc 1 84 1 is_stmt 0 view .LVU1451
 4148 0d68 0020     		movs	r0, #0
 4149 0d6a 08BD     		pop	{r3, pc}
 4150              	.L201:
 4151              		.align	2
 4152              	.L200:
 4153 0d6c 00000000 		.word	.LANCHOR0
 4154              		.cfi_endproc
 4155              	.LFE4:
 4157              		.align	1
 4158              		.syntax unified
 4159              		.thumb
 4160              		.thumb_func
 4161              		.fpu softvfp
 4163              	restore:
 4164              	.LFB21:
 667:boards/TMC5072_eval.c **** 
 668:boards/TMC5072_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 669:boards/TMC5072_eval.c **** {
 670:boards/TMC5072_eval.c **** 	uint32_t errors = 0;
 671:boards/TMC5072_eval.c **** 
 672:boards/TMC5072_eval.c **** 	UNUSED(motor);
 673:boards/TMC5072_eval.c **** 
 674:boards/TMC5072_eval.c **** 	switch(type)
 675:boards/TMC5072_eval.c **** 	{
 676:boards/TMC5072_eval.c **** 	case 0:		// enable Single Wire Mode
 677:boards/TMC5072_eval.c **** 		if(*value)
 678:boards/TMC5072_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 679:boards/TMC5072_eval.c **** 		else
 680:boards/TMC5072_eval.c **** 			HAL.IOs->config->setLow(Pins.SWSEL);
 681:boards/TMC5072_eval.c **** 		break;
 682:boards/TMC5072_eval.c **** 	case 1:		// read interrupt pin INT
 683:boards/TMC5072_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.INT_ENCA))? 1 : 0;
 684:boards/TMC5072_eval.c **** 		break;
 685:boards/TMC5072_eval.c **** 	case 2:		// read position compare pin PP
 686:boards/TMC5072_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.PP_ENCB))? 1 : 0;
 687:boards/TMC5072_eval.c **** 		break;
 688:boards/TMC5072_eval.c **** 	default:
 689:boards/TMC5072_eval.c **** 		errors |= TMC_ERROR_TYPE;
 690:boards/TMC5072_eval.c **** 		break;
 691:boards/TMC5072_eval.c **** 	}
 692:boards/TMC5072_eval.c **** 	return errors;
 693:boards/TMC5072_eval.c **** }
 694:boards/TMC5072_eval.c **** 
 695:boards/TMC5072_eval.c **** static void deInit(void)
 696:boards/TMC5072_eval.c **** {
 697:boards/TMC5072_eval.c **** 	enableDriver(DRIVER_DISABLE);
 698:boards/TMC5072_eval.c **** 
 699:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN);
 700:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 701:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 702:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWION);
 703:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP1);
 704:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP2);
 705:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWSEL);
 706:boards/TMC5072_eval.c **** };
 707:boards/TMC5072_eval.c **** 
 708:boards/TMC5072_eval.c **** static uint8_t reset()
 709:boards/TMC5072_eval.c **** {
 710:boards/TMC5072_eval.c **** 	for(uint8_t motor = 0; motor < TMC5072_MOTORS; motor++)
 711:boards/TMC5072_eval.c **** 		if(tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor)) != 0)
 712:boards/TMC5072_eval.c **** 			return 0;
 713:boards/TMC5072_eval.c **** 
 714:boards/TMC5072_eval.c **** 	return tmc5072_reset(&TMC5072);
 715:boards/TMC5072_eval.c **** }
 716:boards/TMC5072_eval.c **** 
 717:boards/TMC5072_eval.c **** static uint8_t restore()
 718:boards/TMC5072_eval.c **** {
 4165              		.loc 1 718 1 is_stmt 1 view -0
 4166              		.cfi_startproc
 4167              		@ args = 0, pretend = 0, frame = 0
 4168              		@ frame_needed = 0, uses_anonymous_args = 0
 4169              		@ link register save eliminated.
 719:boards/TMC5072_eval.c **** 	return tmc5072_restore(&TMC5072);
 4170              		.loc 1 719 2 view .LVU1453
 4171              		.loc 1 719 9 is_stmt 0 view .LVU1454
 4172 0d70 0148     		ldr	r0, .L203
 4173 0d72 FFF7FEBF 		b	tmc5072_restore
 4174              	.LVL498:
 4175              	.L204:
 4176 0d76 00BF     		.align	2
 4177              	.L203:
 4178 0d78 00000000 		.word	.LANCHOR0
 4179              		.cfi_endproc
 4180              	.LFE21:
 4182              		.align	1
 4183              		.syntax unified
 4184              		.thumb
 4185              		.thumb_func
 4186              		.fpu softvfp
 4188              	reset:
 4189              	.LFB20:
 709:boards/TMC5072_eval.c **** 	for(uint8_t motor = 0; motor < TMC5072_MOTORS; motor++)
 4190              		.loc 1 709 1 is_stmt 1 view -0
 4191              		.cfi_startproc
 4192              		@ args = 0, pretend = 0, frame = 0
 4193              		@ frame_needed = 0, uses_anonymous_args = 0
 710:boards/TMC5072_eval.c **** 		if(tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor)) != 0)
 4194              		.loc 1 710 2 view .LVU1456
 4195              	.LBB461:
 710:boards/TMC5072_eval.c **** 		if(tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor)) != 0)
 4196              		.loc 1 710 6 view .LVU1457
 4197              	.LVL499:
 710:boards/TMC5072_eval.c **** 		if(tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor)) != 0)
 4198              		.loc 1 710 25 view .LVU1458
 711:boards/TMC5072_eval.c **** 			return 0;
 4199              		.loc 1 711 3 view .LVU1459
 4200              	.LBB462:
 4201              	.LBI462:
  41:boards/TMC5072_eval.c **** {
 4202              		.loc 1 41 31 view .LVU1460
  41:boards/TMC5072_eval.c **** {
 4203              		.loc 1 41 31 is_stmt 0 view .LVU1461
 4204              	.LBE462:
 4205              	.LBE461:
  43:boards/TMC5072_eval.c **** 
 4206              		.loc 1 43 2 is_stmt 1 view .LVU1462
  45:boards/TMC5072_eval.c **** }
 4207              		.loc 1 45 2 view .LVU1463
 709:boards/TMC5072_eval.c **** 	for(uint8_t motor = 0; motor < TMC5072_MOTORS; motor++)
 4208              		.loc 1 709 1 is_stmt 0 view .LVU1464
 4209 0d7c 08B5     		push	{r3, lr}
 4210              	.LCFI12:
 4211              		.cfi_def_cfa_offset 8
 4212              		.cfi_offset 3, -8
 4213              		.cfi_offset 14, -4
 4214              	.LBB464:
 711:boards/TMC5072_eval.c **** 			return 0;
 4215              		.loc 1 711 6 view .LVU1465
 4216 0d7e 0848     		ldr	r0, .L209
 4217 0d80 2221     		movs	r1, #34
 4218 0d82 FFF7FEFF 		bl	tmc5072_readInt
 4219              	.LVL500:
 711:boards/TMC5072_eval.c **** 			return 0;
 4220              		.loc 1 711 5 view .LVU1466
 4221 0d86 48B9     		cbnz	r0, .L207
 710:boards/TMC5072_eval.c **** 		if(tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor)) != 0)
 4222              		.loc 1 710 49 is_stmt 1 view .LVU1467
 4223              	.LVL501:
 710:boards/TMC5072_eval.c **** 		if(tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor)) != 0)
 4224              		.loc 1 710 25 view .LVU1468
 711:boards/TMC5072_eval.c **** 			return 0;
 4225              		.loc 1 711 3 view .LVU1469
 4226              	.LBB463:
  41:boards/TMC5072_eval.c **** {
 4227              		.loc 1 41 31 view .LVU1470
  41:boards/TMC5072_eval.c **** {
 4228              		.loc 1 41 31 is_stmt 0 view .LVU1471
 4229              	.LBE463:
 4230              	.LBE464:
  43:boards/TMC5072_eval.c **** 
 4231              		.loc 1 43 2 is_stmt 1 view .LVU1472
  45:boards/TMC5072_eval.c **** }
 4232              		.loc 1 45 2 view .LVU1473
 4233              	.LBB465:
 711:boards/TMC5072_eval.c **** 			return 0;
 4234              		.loc 1 711 6 is_stmt 0 view .LVU1474
 4235 0d88 0548     		ldr	r0, .L209
 4236 0d8a 4221     		movs	r1, #66
 4237 0d8c FFF7FEFF 		bl	tmc5072_readInt
 4238              	.LVL502:
 711:boards/TMC5072_eval.c **** 			return 0;
 4239              		.loc 1 711 5 view .LVU1475
 4240 0d90 20B9     		cbnz	r0, .L207
 710:boards/TMC5072_eval.c **** 		if(tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor)) != 0)
 4241              		.loc 1 710 49 is_stmt 1 view .LVU1476
 4242              	.LVL503:
 710:boards/TMC5072_eval.c **** 		if(tmc5072_readInt(motorToIC(motor), TMC5072_VACTUAL(motor)) != 0)
 4243              		.loc 1 710 25 view .LVU1477
 4244              	.LBE465:
 714:boards/TMC5072_eval.c **** }
 4245              		.loc 1 714 2 view .LVU1478
 715:boards/TMC5072_eval.c **** 
 4246              		.loc 1 715 1 is_stmt 0 view .LVU1479
 4247 0d92 BDE80840 		pop	{r3, lr}
 4248              	.LCFI13:
 4249              		.cfi_remember_state
 4250              		.cfi_restore 14
 4251              		.cfi_restore 3
 4252              		.cfi_def_cfa_offset 0
 714:boards/TMC5072_eval.c **** }
 4253              		.loc 1 714 9 view .LVU1480
 4254 0d96 0248     		ldr	r0, .L209
 4255 0d98 FFF7FEBF 		b	tmc5072_reset
 4256              	.LVL504:
 4257              	.L207:
 4258              	.LCFI14:
 4259              		.cfi_restore_state
 715:boards/TMC5072_eval.c **** 
 4260              		.loc 1 715 1 view .LVU1481
 4261 0d9c 0020     		movs	r0, #0
 4262 0d9e 08BD     		pop	{r3, pc}
 4263              	.L210:
 4264              		.align	2
 4265              	.L209:
 4266 0da0 00000000 		.word	.LANCHOR0
 4267              		.cfi_endproc
 4268              	.LFE20:
 4270              		.align	1
 4271              		.syntax unified
 4272              		.thumb
 4273              		.thumb_func
 4274              		.fpu softvfp
 4276              	userFunction:
 4277              	.LVL505:
 4278              	.LFB18:
 669:boards/TMC5072_eval.c **** 	uint32_t errors = 0;
 4279              		.loc 1 669 1 is_stmt 1 view -0
 4280              		.cfi_startproc
 4281              		@ args = 0, pretend = 0, frame = 0
 4282              		@ frame_needed = 0, uses_anonymous_args = 0
 670:boards/TMC5072_eval.c **** 
 4283              		.loc 1 670 2 view .LVU1483
 672:boards/TMC5072_eval.c **** 
 4284              		.loc 1 672 2 view .LVU1484
 674:boards/TMC5072_eval.c **** 	{
 4285              		.loc 1 674 2 view .LVU1485
 4286 0da4 0128     		cmp	r0, #1
 669:boards/TMC5072_eval.c **** 	uint32_t errors = 0;
 4287              		.loc 1 669 1 is_stmt 0 view .LVU1486
 4288 0da6 38B5     		push	{r3, r4, r5, lr}
 4289              	.LCFI15:
 4290              		.cfi_def_cfa_offset 16
 4291              		.cfi_offset 3, -16
 4292              		.cfi_offset 4, -12
 4293              		.cfi_offset 5, -8
 4294              		.cfi_offset 14, -4
 669:boards/TMC5072_eval.c **** 	uint32_t errors = 0;
 4295              		.loc 1 669 1 view .LVU1487
 4296 0da8 1446     		mov	r4, r2
 674:boards/TMC5072_eval.c **** 	{
 4297              		.loc 1 674 2 view .LVU1488
 4298 0daa 10D0     		beq	.L212
 4299 0dac 0228     		cmp	r0, #2
 4300 0dae 1BD0     		beq	.L213
 4301 0db0 10BB     		cbnz	r0, .L216
 4302              	.LVL506:
 4303              	.LBB468:
 4304              	.LBI468:
 668:boards/TMC5072_eval.c **** {
 4305              		.loc 1 668 17 is_stmt 1 view .LVU1489
 4306              	.LBB469:
 677:boards/TMC5072_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 4307              		.loc 1 677 3 view .LVU1490
 4308 0db2 124B     		ldr	r3, .L220
 4309 0db4 124A     		ldr	r2, .L220+4
 4310              	.LVL507:
 677:boards/TMC5072_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 4311              		.loc 1 677 3 is_stmt 0 view .LVU1491
 4312 0db6 DB68     		ldr	r3, [r3, #12]
 677:boards/TMC5072_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 4313              		.loc 1 677 5 view .LVU1492
 4314 0db8 2468     		ldr	r4, [r4]
 4315              	.LVL508:
 677:boards/TMC5072_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 4316              		.loc 1 677 5 view .LVU1493
 4317 0dba 1B68     		ldr	r3, [r3]
 4318 0dbc D2F8AC02 		ldr	r0, [r2, #684]
 4319              	.LVL509:
 677:boards/TMC5072_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 4320              		.loc 1 677 5 view .LVU1494
 4321 0dc0 1CB1     		cbz	r4, .L215
 678:boards/TMC5072_eval.c **** 		else
 4322              		.loc 1 678 4 is_stmt 1 view .LVU1495
 4323 0dc2 5B69     		ldr	r3, [r3, #20]
 4324              	.L219:
 680:boards/TMC5072_eval.c **** 		break;
 4325              		.loc 1 680 4 is_stmt 0 view .LVU1496
 4326 0dc4 9847     		blx	r3
 4327              	.LVL510:
 4328              	.L218:
 680:boards/TMC5072_eval.c **** 		break;
 4329              		.loc 1 680 4 view .LVU1497
 4330              	.LBE469:
 4331              	.LBE468:
 687:boards/TMC5072_eval.c **** 	default:
 4332              		.loc 1 687 3 is_stmt 1 view .LVU1498
 670:boards/TMC5072_eval.c **** 
 4333              		.loc 1 670 11 is_stmt 0 view .LVU1499
 4334 0dc6 0020     		movs	r0, #0
 4335              	.LVL511:
 4336              	.L211:
 693:boards/TMC5072_eval.c **** 
 4337              		.loc 1 693 1 view .LVU1500
 4338 0dc8 38BD     		pop	{r3, r4, r5, pc}
 4339              	.LVL512:
 4340              	.L215:
 4341              	.LBB471:
 4342              	.LBB470:
 680:boards/TMC5072_eval.c **** 		break;
 4343              		.loc 1 680 4 is_stmt 1 view .LVU1501
 4344 0dca 9B69     		ldr	r3, [r3, #24]
 4345 0dcc FAE7     		b	.L219
 4346              	.LVL513:
 4347              	.L212:
 680:boards/TMC5072_eval.c **** 		break;
 4348              		.loc 1 680 4 is_stmt 0 view .LVU1502
 4349              	.LBE470:
 4350              	.LBE471:
 683:boards/TMC5072_eval.c **** 		break;
 4351              		.loc 1 683 3 is_stmt 1 view .LVU1503
 683:boards/TMC5072_eval.c **** 		break;
 4352              		.loc 1 683 16 is_stmt 0 view .LVU1504
 4353 0dce 0B4B     		ldr	r3, .L220
 683:boards/TMC5072_eval.c **** 		break;
 4354              		.loc 1 683 13 view .LVU1505
 4355 0dd0 0B4A     		ldr	r2, .L220+4
 4356              	.LVL514:
 683:boards/TMC5072_eval.c **** 		break;
 4357              		.loc 1 683 20 view .LVU1506
 4358 0dd2 DB68     		ldr	r3, [r3, #12]
 683:boards/TMC5072_eval.c **** 		break;
 4359              		.loc 1 683 13 view .LVU1507
 4360 0dd4 D2F8A402 		ldr	r0, [r2, #676]
 4361              	.LVL515:
 683:boards/TMC5072_eval.c **** 		break;
 4362              		.loc 1 683 28 view .LVU1508
 4363 0dd8 1B68     		ldr	r3, [r3]
 683:boards/TMC5072_eval.c **** 		break;
 4364              		.loc 1 683 13 view .LVU1509
 4365 0dda 5B6A     		ldr	r3, [r3, #36]
 4366              	.L217:
 686:boards/TMC5072_eval.c **** 		break;
 4367              		.loc 1 686 13 view .LVU1510
 4368 0ddc 9847     		blx	r3
 4369              	.LVL516:
 686:boards/TMC5072_eval.c **** 		break;
 4370              		.loc 1 686 55 view .LVU1511
 4371 0dde 0038     		subs	r0, r0, #0
 4372 0de0 18BF     		it	ne
 4373 0de2 0120     		movne	r0, #1
 686:boards/TMC5072_eval.c **** 		break;
 4374              		.loc 1 686 10 view .LVU1512
 4375 0de4 2060     		str	r0, [r4]
 4376 0de6 EEE7     		b	.L218
 4377              	.LVL517:
 4378              	.L213:
 686:boards/TMC5072_eval.c **** 		break;
 4379              		.loc 1 686 3 is_stmt 1 view .LVU1513
 686:boards/TMC5072_eval.c **** 		break;
 4380              		.loc 1 686 16 is_stmt 0 view .LVU1514
 4381 0de8 044B     		ldr	r3, .L220
 686:boards/TMC5072_eval.c **** 		break;
 4382              		.loc 1 686 13 view .LVU1515
 4383 0dea 054A     		ldr	r2, .L220+4
 4384              	.LVL518:
 686:boards/TMC5072_eval.c **** 		break;
 4385              		.loc 1 686 20 view .LVU1516
 4386 0dec DB68     		ldr	r3, [r3, #12]
 686:boards/TMC5072_eval.c **** 		break;
 4387              		.loc 1 686 13 view .LVU1517
 4388 0dee D2F8A802 		ldr	r0, [r2, #680]
 4389              	.LVL519:
 686:boards/TMC5072_eval.c **** 		break;
 4390              		.loc 1 686 28 view .LVU1518
 4391 0df2 1B68     		ldr	r3, [r3]
 686:boards/TMC5072_eval.c **** 		break;
 4392              		.loc 1 686 13 view .LVU1519
 4393 0df4 5B6A     		ldr	r3, [r3, #36]
 4394 0df6 F1E7     		b	.L217
 4395              	.LVL520:
 4396              	.L216:
 674:boards/TMC5072_eval.c **** 	{
 4397              		.loc 1 674 2 view .LVU1520
 4398 0df8 0420     		movs	r0, #4
 4399              	.LVL521:
 692:boards/TMC5072_eval.c **** }
 4400              		.loc 1 692 2 is_stmt 1 view .LVU1521
 692:boards/TMC5072_eval.c **** }
 4401              		.loc 1 692 9 is_stmt 0 view .LVU1522
 4402 0dfa E5E7     		b	.L211
 4403              	.L221:
 4404              		.align	2
 4405              	.L220:
 4406 0dfc 00000000 		.word	HAL
 4407 0e00 00000000 		.word	.LANCHOR0
 4408              		.cfi_endproc
 4409              	.LFE18:
 4411              		.align	1
 4412              		.syntax unified
 4413              		.thumb
 4414              		.thumb_func
 4415              		.fpu softvfp
 4417              	enableDriver:
 4418              	.LVL522:
 4419              	.LFB22:
 720:boards/TMC5072_eval.c **** }
 721:boards/TMC5072_eval.c **** 
 722:boards/TMC5072_eval.c **** static void enableDriver(DriverState state)
 723:boards/TMC5072_eval.c **** {
 4420              		.loc 1 723 1 is_stmt 1 view -0
 4421              		.cfi_startproc
 4422              		@ args = 0, pretend = 0, frame = 0
 4423              		@ frame_needed = 0, uses_anonymous_args = 0
 4424              		@ link register save eliminated.
 724:boards/TMC5072_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 4425              		.loc 1 724 2 view .LVU1524
 4426              		.loc 1 724 4 is_stmt 0 view .LVU1525
 4427 0e04 0228     		cmp	r0, #2
 725:boards/TMC5072_eval.c **** 		state = Evalboards.driverEnable;
 4428              		.loc 1 725 3 is_stmt 1 view .LVU1526
 4429              		.loc 1 725 9 is_stmt 0 view .LVU1527
 4430 0e06 04BF     		itt	eq
 4431 0e08 0C4B     		ldreq	r3, .L227
 4432 0e0a 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 4433              	.LVL523:
 726:boards/TMC5072_eval.c **** 
 727:boards/TMC5072_eval.c **** 	if(state ==  DRIVER_DISABLE)
 4434              		.loc 1 727 2 is_stmt 1 view .LVU1528
 4435              		.loc 1 727 4 is_stmt 0 view .LVU1529
 4436 0e0e 38B9     		cbnz	r0, .L224
 728:boards/TMC5072_eval.c **** 		HAL.IOs->config->setHigh(Pins.DRV_ENN);
 4437              		.loc 1 728 3 is_stmt 1 view .LVU1530
 4438              		.loc 1 728 6 is_stmt 0 view .LVU1531
 4439 0e10 0B4B     		ldr	r3, .L227+4
 4440              		.loc 1 728 10 view .LVU1532
 4441 0e12 DB68     		ldr	r3, [r3, #12]
 4442              		.loc 1 728 18 view .LVU1533
 4443 0e14 1B68     		ldr	r3, [r3]
 4444              		.loc 1 728 3 view .LVU1534
 4445 0e16 5B69     		ldr	r3, [r3, #20]
 4446              	.L226:
 4447              	.LBB474:
 4448              	.LBB475:
 729:boards/TMC5072_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 730:boards/TMC5072_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN);
 4449              		.loc 1 730 3 view .LVU1535
 4450 0e18 0A4A     		ldr	r2, .L227+8
 4451 0e1a D2F8A002 		ldr	r0, [r2, #672]
 4452 0e1e 1847     		bx	r3	@ indirect register sibling call
 4453              	.LVL524:
 4454              	.L224:
 4455              		.loc 1 730 3 view .LVU1536
 4456              	.LBE475:
 4457              	.LBE474:
 729:boards/TMC5072_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 4458              		.loc 1 729 7 is_stmt 1 view .LVU1537
 729:boards/TMC5072_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 4459              		.loc 1 729 9 is_stmt 0 view .LVU1538
 4460 0e20 0128     		cmp	r0, #1
 4461 0e22 09D1     		bne	.L222
 729:boards/TMC5072_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 4462              		.loc 1 729 49 discriminator 1 view .LVU1539
 4463 0e24 054B     		ldr	r3, .L227
 729:boards/TMC5072_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 4464              		.loc 1 729 35 discriminator 1 view .LVU1540
 4465 0e26 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 4466 0e2a 012B     		cmp	r3, #1
 4467 0e2c 04D1     		bne	.L222
 4468              	.LBB477:
 4469              	.LBI474:
 722:boards/TMC5072_eval.c **** {
 4470              		.loc 1 722 13 is_stmt 1 view .LVU1541
 4471              	.LVL525:
 4472              	.LBB476:
 4473              		.loc 1 730 3 view .LVU1542
 4474              		.loc 1 730 6 is_stmt 0 view .LVU1543
 4475 0e2e 044B     		ldr	r3, .L227+4
 4476              		.loc 1 730 10 view .LVU1544
 4477 0e30 DB68     		ldr	r3, [r3, #12]
 4478              		.loc 1 730 18 view .LVU1545
 4479 0e32 1B68     		ldr	r3, [r3]
 4480              		.loc 1 730 3 view .LVU1546
 4481 0e34 9B69     		ldr	r3, [r3, #24]
 4482 0e36 EFE7     		b	.L226
 4483              	.LVL526:
 4484              	.L222:
 4485              		.loc 1 730 3 view .LVU1547
 4486              	.LBE476:
 4487              	.LBE477:
 731:boards/TMC5072_eval.c **** }
 4488              		.loc 1 731 1 view .LVU1548
 4489 0e38 7047     		bx	lr
 4490              	.L228:
 4491 0e3a 00BF     		.align	2
 4492              	.L227:
 4493 0e3c 00000000 		.word	Evalboards
 4494 0e40 00000000 		.word	HAL
 4495 0e44 00000000 		.word	.LANCHOR0
 4496              		.cfi_endproc
 4497              	.LFE22:
 4499              		.align	1
 4500              		.syntax unified
 4501              		.thumb
 4502              		.thumb_func
 4503              		.fpu softvfp
 4505              	deInit:
 4506              	.LFB19:
 696:boards/TMC5072_eval.c **** 	enableDriver(DRIVER_DISABLE);
 4507              		.loc 1 696 1 is_stmt 1 view -0
 4508              		.cfi_startproc
 4509              		@ args = 0, pretend = 0, frame = 0
 4510              		@ frame_needed = 0, uses_anonymous_args = 0
 697:boards/TMC5072_eval.c **** 
 4511              		.loc 1 697 2 view .LVU1550
 696:boards/TMC5072_eval.c **** 	enableDriver(DRIVER_DISABLE);
 4512              		.loc 1 696 1 is_stmt 0 view .LVU1551
 4513 0e48 70B5     		push	{r4, r5, r6, lr}
 4514              	.LCFI16:
 4515              		.cfi_def_cfa_offset 16
 4516              		.cfi_offset 4, -16
 4517              		.cfi_offset 5, -12
 4518              		.cfi_offset 6, -8
 4519              		.cfi_offset 14, -4
 697:boards/TMC5072_eval.c **** 
 4520              		.loc 1 697 2 view .LVU1552
 4521 0e4a 0020     		movs	r0, #0
 4522 0e4c FFF7DAFF 		bl	enableDriver
 4523              	.LVL527:
 699:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 4524              		.loc 1 699 2 is_stmt 1 view .LVU1553
 699:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 4525              		.loc 1 699 5 is_stmt 0 view .LVU1554
 4526 0e50 134B     		ldr	r3, .L230
 699:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 4527              		.loc 1 699 2 view .LVU1555
 4528 0e52 144C     		ldr	r4, .L230+4
 699:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 4529              		.loc 1 699 5 view .LVU1556
 4530 0e54 DD68     		ldr	r5, [r3, #12]
 699:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 4531              		.loc 1 699 2 view .LVU1557
 4532 0e56 D4F8A002 		ldr	r0, [r4, #672]
 699:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 4533              		.loc 1 699 17 view .LVU1558
 4534 0e5a 2B68     		ldr	r3, [r5]
 699:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.INT_ENCA);
 4535              		.loc 1 699 2 view .LVU1559
 4536 0e5c 9B68     		ldr	r3, [r3, #8]
 4537 0e5e 9847     		blx	r3
 4538              	.LVL528:
 700:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 4539              		.loc 1 700 2 is_stmt 1 view .LVU1560
 700:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 4540              		.loc 1 700 17 is_stmt 0 view .LVU1561
 4541 0e60 2B68     		ldr	r3, [r5]
 700:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.PP_ENCB);
 4542              		.loc 1 700 2 view .LVU1562
 4543 0e62 D4F8A402 		ldr	r0, [r4, #676]
 4544 0e66 9B68     		ldr	r3, [r3, #8]
 4545 0e68 9847     		blx	r3
 4546              	.LVL529:
 701:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWION);
 4547              		.loc 1 701 2 is_stmt 1 view .LVU1563
 701:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWION);
 4548              		.loc 1 701 17 is_stmt 0 view .LVU1564
 4549 0e6a 2B68     		ldr	r3, [r5]
 701:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWION);
 4550              		.loc 1 701 2 view .LVU1565
 4551 0e6c D4F8A802 		ldr	r0, [r4, #680]
 4552 0e70 9B68     		ldr	r3, [r3, #8]
 4553 0e72 9847     		blx	r3
 4554              	.LVL530:
 702:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP1);
 4555              		.loc 1 702 2 is_stmt 1 view .LVU1566
 702:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP1);
 4556              		.loc 1 702 17 is_stmt 0 view .LVU1567
 4557 0e74 2B68     		ldr	r3, [r5]
 702:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP1);
 4558              		.loc 1 702 2 view .LVU1568
 4559 0e76 D4F8B802 		ldr	r0, [r4, #696]
 4560 0e7a 9B68     		ldr	r3, [r3, #8]
 4561 0e7c 9847     		blx	r3
 4562              	.LVL531:
 703:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP2);
 4563              		.loc 1 703 2 is_stmt 1 view .LVU1569
 703:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP2);
 4564              		.loc 1 703 17 is_stmt 0 view .LVU1570
 4565 0e7e 2B68     		ldr	r3, [r5]
 703:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWIOP2);
 4566              		.loc 1 703 2 view .LVU1571
 4567 0e80 D4F8B002 		ldr	r0, [r4, #688]
 4568 0e84 9B68     		ldr	r3, [r3, #8]
 4569 0e86 9847     		blx	r3
 4570              	.LVL532:
 704:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWSEL);
 4571              		.loc 1 704 2 is_stmt 1 view .LVU1572
 704:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWSEL);
 4572              		.loc 1 704 17 is_stmt 0 view .LVU1573
 4573 0e88 2B68     		ldr	r3, [r5]
 704:boards/TMC5072_eval.c **** 	HAL.IOs->config->reset(Pins.SWSEL);
 4574              		.loc 1 704 2 view .LVU1574
 4575 0e8a D4F8B402 		ldr	r0, [r4, #692]
 4576 0e8e 9B68     		ldr	r3, [r3, #8]
 4577 0e90 9847     		blx	r3
 4578              	.LVL533:
 705:boards/TMC5072_eval.c **** };
 4579              		.loc 1 705 2 is_stmt 1 view .LVU1575
 705:boards/TMC5072_eval.c **** };
 4580              		.loc 1 705 17 is_stmt 0 view .LVU1576
 4581 0e92 2B68     		ldr	r3, [r5]
 705:boards/TMC5072_eval.c **** };
 4582              		.loc 1 705 2 view .LVU1577
 4583 0e94 D4F8AC02 		ldr	r0, [r4, #684]
 4584 0e98 9B68     		ldr	r3, [r3, #8]
 706:boards/TMC5072_eval.c **** 
 4585              		.loc 1 706 1 view .LVU1578
 4586 0e9a BDE87040 		pop	{r4, r5, r6, lr}
 4587              	.LCFI17:
 4588              		.cfi_restore 14
 4589              		.cfi_restore 6
 4590              		.cfi_restore 5
 4591              		.cfi_restore 4
 4592              		.cfi_def_cfa_offset 0
 705:boards/TMC5072_eval.c **** };
 4593              		.loc 1 705 2 view .LVU1579
 4594 0e9e 1847     		bx	r3	@ indirect register sibling call
 4595              	.LVL534:
 4596              	.L231:
 4597              		.align	2
 4598              	.L230:
 4599 0ea0 00000000 		.word	HAL
 4600 0ea4 00000000 		.word	.LANCHOR0
 4601              		.cfi_endproc
 4602              	.LFE19:
 4604              		.align	1
 4605              		.syntax unified
 4606              		.thumb
 4607              		.thumb_func
 4608              		.fpu softvfp
 4610              	configCallback:
 4611              	.LVL535:
 4612              	.LFB23:
 732:boards/TMC5072_eval.c **** 
 733:boards/TMC5072_eval.c **** static void configCallback(TMC5072TypeDef *tmc5072, ConfigState state)
 734:boards/TMC5072_eval.c **** {
 4613              		.loc 1 734 1 is_stmt 1 view -0
 4614              		.cfi_startproc
 4615              		@ args = 0, pretend = 0, frame = 0
 4616              		@ frame_needed = 0, uses_anonymous_args = 0
 735:boards/TMC5072_eval.c **** 	if(state == CONFIG_RESET)
 4617              		.loc 1 735 2 view .LVU1581
 4618              		.loc 1 735 4 is_stmt 0 view .LVU1582
 4619 0ea8 0129     		cmp	r1, #1
 734:boards/TMC5072_eval.c **** 	if(state == CONFIG_RESET)
 4620              		.loc 1 734 1 view .LVU1583
 4621 0eaa 10B5     		push	{r4, lr}
 4622              	.LCFI18:
 4623              		.cfi_def_cfa_offset 8
 4624              		.cfi_offset 4, -8
 4625              		.cfi_offset 14, -4
 734:boards/TMC5072_eval.c **** 	if(state == CONFIG_RESET)
 4626              		.loc 1 734 1 view .LVU1584
 4627 0eac 0446     		mov	r4, r0
 4628              		.loc 1 735 4 view .LVU1585
 4629 0eae 0DD1     		bne	.L232
 4630              	.LVL536:
 4631              	.LBB482:
 4632              	.LBI482:
 733:boards/TMC5072_eval.c **** {
 4633              		.loc 1 733 13 is_stmt 1 discriminator 1 view .LVU1586
 4634              	.LBB483:
 4635              	.LBB484:
 736:boards/TMC5072_eval.c **** 	{	// Change hardware-preset registers here
 737:boards/TMC5072_eval.c **** 		for(uint8_t motor = 0; motor < TMC5072_MOTORS; motor++)
 4636              		.loc 1 737 26 discriminator 1 view .LVU1587
 738:boards/TMC5072_eval.c **** 			tmc5072_writeInt(tmc5072, TMC5072_PWMCONF(motor), 0x000504C8);
 4637              		.loc 1 738 4 discriminator 1 view .LVU1588
 4638 0eb0 074A     		ldr	r2, .L234
 4639 0eb2 1021     		movs	r1, #16
 4640              	.LVL537:
 4641              		.loc 1 738 4 is_stmt 0 discriminator 1 view .LVU1589
 4642 0eb4 FFF7FEFF 		bl	tmc5072_writeInt
 4643              	.LVL538:
 737:boards/TMC5072_eval.c **** 			tmc5072_writeInt(tmc5072, TMC5072_PWMCONF(motor), 0x000504C8);
 4644              		.loc 1 737 50 is_stmt 1 discriminator 1 view .LVU1590
 737:boards/TMC5072_eval.c **** 			tmc5072_writeInt(tmc5072, TMC5072_PWMCONF(motor), 0x000504C8);
 4645              		.loc 1 737 26 discriminator 1 view .LVU1591
 4646              		.loc 1 738 4 discriminator 1 view .LVU1592
 4647 0eb8 2046     		mov	r0, r4
 4648 0eba 054A     		ldr	r2, .L234
 4649 0ebc 1821     		movs	r1, #24
 4650 0ebe FFF7FEFF 		bl	tmc5072_writeInt
 4651              	.LVL539:
 737:boards/TMC5072_eval.c **** 			tmc5072_writeInt(tmc5072, TMC5072_PWMCONF(motor), 0x000504C8);
 4652              		.loc 1 737 50 discriminator 1 view .LVU1593
 737:boards/TMC5072_eval.c **** 			tmc5072_writeInt(tmc5072, TMC5072_PWMCONF(motor), 0x000504C8);
 4653              		.loc 1 737 26 discriminator 1 view .LVU1594
 4654              	.LBE484:
 739:boards/TMC5072_eval.c **** 
 740:boards/TMC5072_eval.c **** 		// Fill missing shadow registers (hardware preset registers)
 741:boards/TMC5072_eval.c **** 		tmc5072_fillShadowRegisters(&TMC5072);
 4655              		.loc 1 741 3 discriminator 1 view .LVU1595
 4656              	.LBE483:
 4657              	.LBE482:
 742:boards/TMC5072_eval.c **** 	}
 743:boards/TMC5072_eval.c **** }
 4658              		.loc 1 743 1 is_stmt 0 discriminator 1 view .LVU1596
 4659 0ec2 BDE81040 		pop	{r4, lr}
 4660              	.LCFI19:
 4661              		.cfi_remember_state
 4662              		.cfi_restore 14
 4663              		.cfi_restore 4
 4664              		.cfi_def_cfa_offset 0
 4665              	.LVL540:
 4666              	.LBB486:
 4667              	.LBB485:
 741:boards/TMC5072_eval.c **** 	}
 4668              		.loc 1 741 3 discriminator 1 view .LVU1597
 4669 0ec6 0348     		ldr	r0, .L234+4
 4670 0ec8 FFF7FEBF 		b	tmc5072_fillShadowRegisters
 4671              	.LVL541:
 4672              	.L232:
 4673              	.LCFI20:
 4674              		.cfi_restore_state
 741:boards/TMC5072_eval.c **** 	}
 4675              		.loc 1 741 3 discriminator 1 view .LVU1598
 4676              	.LBE485:
 4677              	.LBE486:
 4678              		.loc 1 743 1 view .LVU1599
 4679 0ecc 10BD     		pop	{r4, pc}
 4680              	.L235:
 4681 0ece 00BF     		.align	2
 4682              	.L234:
 4683 0ed0 C8040500 		.word	328904
 4684 0ed4 00000000 		.word	.LANCHOR0
 4685              		.cfi_endproc
 4686              	.LFE23:
 4688              		.align	1
 4689              		.global	tmc5072_readWriteArray
 4690              		.syntax unified
 4691              		.thumb
 4692              		.thumb_func
 4693              		.fpu softvfp
 4695              	tmc5072_readWriteArray:
 4696              	.LVL542:
 4697              	.LFB3:
  59:boards/TMC5072_eval.c **** 	// Map the channel to the corresponding SPI channel
 4698              		.loc 1 59 1 is_stmt 1 view -0
 4699              		.cfi_startproc
 4700              		@ args = 0, pretend = 0, frame = 0
 4701              		@ frame_needed = 0, uses_anonymous_args = 0
 4702              		@ link register save eliminated.
  61:boards/TMC5072_eval.c **** }
 4703              		.loc 1 61 2 view .LVU1601
 4704              	.LBB487:
 4705              	.LBI487:
  50:boards/TMC5072_eval.c **** {
 4706              		.loc 1 50 34 view .LVU1602
 4707              	.LBB488:
  52:boards/TMC5072_eval.c **** 
 4708              		.loc 1 52 2 view .LVU1603
  54:boards/TMC5072_eval.c **** }
 4709              		.loc 1 54 2 view .LVU1604
  54:boards/TMC5072_eval.c **** }
 4710              		.loc 1 54 9 is_stmt 0 view .LVU1605
 4711 0ed8 034B     		ldr	r3, .L237
 4712              	.LBE488:
 4713              	.LBE487:
  61:boards/TMC5072_eval.c **** }
 4714              		.loc 1 61 23 view .LVU1606
 4715 0eda D3F8BC32 		ldr	r3, [r3, #700]
  59:boards/TMC5072_eval.c **** 	// Map the channel to the corresponding SPI channel
 4716              		.loc 1 59 1 view .LVU1607
 4717 0ede 0846     		mov	r0, r1
 4718              	.LVL543:
  61:boards/TMC5072_eval.c **** }
 4719              		.loc 1 61 2 view .LVU1608
 4720 0ee0 DB68     		ldr	r3, [r3, #12]
 4721 0ee2 1146     		mov	r1, r2
 4722              	.LVL544:
  61:boards/TMC5072_eval.c **** }
 4723              		.loc 1 61 2 view .LVU1609
 4724 0ee4 1847     		bx	r3	@ indirect register sibling call
 4725              	.LVL545:
 4726              	.L238:
  61:boards/TMC5072_eval.c **** }
 4727              		.loc 1 61 2 view .LVU1610
 4728 0ee6 00BF     		.align	2
 4729              	.L237:
 4730 0ee8 00000000 		.word	.LANCHOR0
 4731              		.cfi_endproc
 4732              	.LFE3:
 4734              		.align	1
 4735              		.global	TMC5072_init
 4736              		.syntax unified
 4737              		.thumb
 4738              		.thumb_func
 4739              		.fpu softvfp
 4741              	TMC5072_init:
 4742              	.LFB24:
 744:boards/TMC5072_eval.c **** 
 745:boards/TMC5072_eval.c **** void TMC5072_init(void)
 746:boards/TMC5072_eval.c **** {
 4743              		.loc 1 746 1 is_stmt 1 view -0
 4744              		.cfi_startproc
 4745              		@ args = 0, pretend = 0, frame = 0
 4746              		@ frame_needed = 0, uses_anonymous_args = 0
 747:boards/TMC5072_eval.c **** 	tmc5072_init(&TMC5072, 0, Evalboards.ch1.config, &tmc5072_defaultRegisterResetState[0]);
 4747              		.loc 1 747 2 view .LVU1612
 746:boards/TMC5072_eval.c **** 	tmc5072_init(&TMC5072, 0, Evalboards.ch1.config, &tmc5072_defaultRegisterResetState[0]);
 4748              		.loc 1 746 1 is_stmt 0 view .LVU1613
 4749 0eec F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4750              	.LCFI21:
 4751              		.cfi_def_cfa_offset 24
 4752              		.cfi_offset 3, -24
 4753              		.cfi_offset 4, -20
 4754              		.cfi_offset 5, -16
 4755              		.cfi_offset 6, -12
 4756              		.cfi_offset 7, -8
 4757              		.cfi_offset 14, -4
 4758              		.loc 1 747 2 view .LVU1614
 4759 0eee 4A4C     		ldr	r4, .L240
 4760 0ef0 4A4D     		ldr	r5, .L240+4
 4761 0ef2 A269     		ldr	r2, [r4, #24]
 4762 0ef4 4A4B     		ldr	r3, .L240+8
 748:boards/TMC5072_eval.c **** 	tmc5072_setCallback(&TMC5072, configCallback);
 749:boards/TMC5072_eval.c **** 
 750:boards/TMC5072_eval.c **** 	Pins.DRV_ENN   = &HAL.IOs->pins->DIO0;
 4763              		.loc 1 750 23 view .LVU1615
 4764 0ef6 4B4F     		ldr	r7, .L240+12
 747:boards/TMC5072_eval.c **** 	tmc5072_setCallback(&TMC5072, configCallback);
 4765              		.loc 1 747 2 view .LVU1616
 4766 0ef8 2846     		mov	r0, r5
 4767 0efa 0021     		movs	r1, #0
 4768 0efc FFF7FEFF 		bl	tmc5072_init
 4769              	.LVL546:
 748:boards/TMC5072_eval.c **** 	tmc5072_setCallback(&TMC5072, configCallback);
 4770              		.loc 1 748 2 is_stmt 1 view .LVU1617
 4771 0f00 4949     		ldr	r1, .L240+16
 4772 0f02 2846     		mov	r0, r5
 4773 0f04 FFF7FEFF 		bl	tmc5072_setCallback
 4774              	.LVL547:
 4775              		.loc 1 750 2 view .LVU1618
 4776              		.loc 1 750 23 is_stmt 0 view .LVU1619
 4777 0f08 FE68     		ldr	r6, [r7, #12]
 4778              		.loc 1 750 27 view .LVU1620
 4779 0f0a 7368     		ldr	r3, [r6, #4]
 751:boards/TMC5072_eval.c **** 	Pins.INT_ENCA  = &HAL.IOs->pins->DIO5;
 4780              		.loc 1 751 19 view .LVU1621
 4781 0f0c 03F58472 		add	r2, r3, #264
 4782              		.loc 1 751 17 view .LVU1622
 4783 0f10 C5F8A422 		str	r2, [r5, #676]
 752:boards/TMC5072_eval.c **** 	Pins.PP_ENCB   = &HAL.IOs->pins->DIO6;
 4784              		.loc 1 752 19 view .LVU1623
 4785 0f14 03F59472 		add	r2, r3, #296
 4786              		.loc 1 752 17 view .LVU1624
 4787 0f18 C5F8A822 		str	r2, [r5, #680]
 753:boards/TMC5072_eval.c **** 
 754:boards/TMC5072_eval.c **** 	Pins.SWSEL     = &HAL.IOs->pins->DIO16;
 4788              		.loc 1 754 19 view .LVU1625
 4789 0f1c 03F57272 		add	r2, r3, #968
 4790              		.loc 1 754 17 view .LVU1626
 4791 0f20 C5F8AC22 		str	r2, [r5, #684]
 755:boards/TMC5072_eval.c **** 	Pins.SWIOP1    = &HAL.IOs->pins->DIO17;
 4792              		.loc 1 755 19 view .LVU1627
 4793 0f24 03F57A72 		add	r2, r3, #1000
 750:boards/TMC5072_eval.c **** 	Pins.INT_ENCA  = &HAL.IOs->pins->DIO5;
 4794              		.loc 1 750 19 view .LVU1628
 4795 0f28 03F16800 		add	r0, r3, #104
 4796              		.loc 1 755 17 view .LVU1629
 4797 0f2c C5F8B022 		str	r2, [r5, #688]
 756:boards/TMC5072_eval.c **** 	Pins.SWIOP2    = &HAL.IOs->pins->DIO18;
 4798              		.loc 1 756 19 view .LVU1630
 4799 0f30 03F58162 		add	r2, r3, #1032
 757:boards/TMC5072_eval.c **** 	Pins.SWION     = &HAL.IOs->pins->DIO19;
 4800              		.loc 1 757 19 view .LVU1631
 4801 0f34 03F58563 		add	r3, r3, #1064
 4802              		.loc 1 757 17 view .LVU1632
 4803 0f38 C5F8B832 		str	r3, [r5, #696]
 758:boards/TMC5072_eval.c **** 
 759:boards/TMC5072_eval.c **** 	HAL.IOs->config->toOutput(Pins.DRV_ENN);
 4804              		.loc 1 759 17 view .LVU1633
 4805 0f3c 3368     		ldr	r3, [r6]
 756:boards/TMC5072_eval.c **** 	Pins.SWION     = &HAL.IOs->pins->DIO19;
 4806              		.loc 1 756 17 view .LVU1634
 4807 0f3e C5F8B422 		str	r2, [r5, #692]
 4808              		.loc 1 759 2 view .LVU1635
 4809 0f42 DB68     		ldr	r3, [r3, #12]
 750:boards/TMC5072_eval.c **** 	Pins.INT_ENCA  = &HAL.IOs->pins->DIO5;
 4810              		.loc 1 750 17 view .LVU1636
 4811 0f44 C5F8A002 		str	r0, [r5, #672]
 751:boards/TMC5072_eval.c **** 	Pins.PP_ENCB   = &HAL.IOs->pins->DIO6;
 4812              		.loc 1 751 2 is_stmt 1 view .LVU1637
 752:boards/TMC5072_eval.c **** 
 4813              		.loc 1 752 2 view .LVU1638
 754:boards/TMC5072_eval.c **** 	Pins.SWIOP1    = &HAL.IOs->pins->DIO17;
 4814              		.loc 1 754 2 view .LVU1639
 755:boards/TMC5072_eval.c **** 	Pins.SWIOP2    = &HAL.IOs->pins->DIO18;
 4815              		.loc 1 755 2 view .LVU1640
 756:boards/TMC5072_eval.c **** 	Pins.SWION     = &HAL.IOs->pins->DIO19;
 4816              		.loc 1 756 2 view .LVU1641
 757:boards/TMC5072_eval.c **** 
 4817              		.loc 1 757 2 view .LVU1642
 4818              		.loc 1 759 2 view .LVU1643
 4819 0f48 9847     		blx	r3
 4820              	.LVL548:
 760:boards/TMC5072_eval.c **** 	HAL.IOs->config->toOutput(Pins.SWSEL);
 4821              		.loc 1 760 2 view .LVU1644
 4822              		.loc 1 760 17 is_stmt 0 view .LVU1645
 4823 0f4a 3368     		ldr	r3, [r6]
 4824              		.loc 1 760 2 view .LVU1646
 4825 0f4c D5F8AC02 		ldr	r0, [r5, #684]
 4826 0f50 DB68     		ldr	r3, [r3, #12]
 4827 0f52 9847     		blx	r3
 4828              	.LVL549:
 761:boards/TMC5072_eval.c **** 
 762:boards/TMC5072_eval.c **** 	HAL.IOs->config->setLow(Pins.SWSEL);
 4829              		.loc 1 762 2 is_stmt 1 view .LVU1647
 4830              		.loc 1 762 17 is_stmt 0 view .LVU1648
 4831 0f54 3368     		ldr	r3, [r6]
 4832              		.loc 1 762 2 view .LVU1649
 4833 0f56 D5F8AC02 		ldr	r0, [r5, #684]
 4834 0f5a 9B69     		ldr	r3, [r3, #24]
 4835 0f5c 9847     		blx	r3
 4836              	.LVL550:
 763:boards/TMC5072_eval.c **** 
 764:boards/TMC5072_eval.c **** 	HAL.IOs->config->toInput(Pins.INT_ENCA);
 4837              		.loc 1 764 2 is_stmt 1 view .LVU1650
 4838              		.loc 1 764 17 is_stmt 0 view .LVU1651
 4839 0f5e 3368     		ldr	r3, [r6]
 4840              		.loc 1 764 2 view .LVU1652
 4841 0f60 D5F8A402 		ldr	r0, [r5, #676]
 4842 0f64 1B69     		ldr	r3, [r3, #16]
 4843 0f66 9847     		blx	r3
 4844              	.LVL551:
 765:boards/TMC5072_eval.c **** 	HAL.IOs->config->toInput(Pins.PP_ENCB);
 4845              		.loc 1 765 2 is_stmt 1 view .LVU1653
 4846              		.loc 1 765 17 is_stmt 0 view .LVU1654
 4847 0f68 3368     		ldr	r3, [r6]
 4848              		.loc 1 765 2 view .LVU1655
 4849 0f6a D5F8A802 		ldr	r0, [r5, #680]
 4850 0f6e 1B69     		ldr	r3, [r3, #16]
 4851 0f70 9847     		blx	r3
 4852              	.LVL552:
 766:boards/TMC5072_eval.c **** 
 767:boards/TMC5072_eval.c **** 	HAL.IOs->config->toInput(Pins.SWION);
 4853              		.loc 1 767 2 is_stmt 1 view .LVU1656
 4854              		.loc 1 767 17 is_stmt 0 view .LVU1657
 4855 0f72 3368     		ldr	r3, [r6]
 4856              		.loc 1 767 2 view .LVU1658
 4857 0f74 D5F8B802 		ldr	r0, [r5, #696]
 4858 0f78 1B69     		ldr	r3, [r3, #16]
 4859 0f7a 9847     		blx	r3
 4860              	.LVL553:
 768:boards/TMC5072_eval.c **** 
 769:boards/TMC5072_eval.c **** 	HAL.IOs->config->toInput(Pins.SWIOP1);
 4861              		.loc 1 769 2 is_stmt 1 view .LVU1659
 4862              		.loc 1 769 17 is_stmt 0 view .LVU1660
 4863 0f7c 3368     		ldr	r3, [r6]
 4864              		.loc 1 769 2 view .LVU1661
 4865 0f7e D5F8B002 		ldr	r0, [r5, #688]
 4866 0f82 1B69     		ldr	r3, [r3, #16]
 4867 0f84 9847     		blx	r3
 4868              	.LVL554:
 770:boards/TMC5072_eval.c **** 	HAL.IOs->config->toInput(Pins.SWIOP2);
 4869              		.loc 1 770 2 is_stmt 1 view .LVU1662
 4870              		.loc 1 770 17 is_stmt 0 view .LVU1663
 4871 0f86 3368     		ldr	r3, [r6]
 4872              		.loc 1 770 2 view .LVU1664
 4873 0f88 D5F8B402 		ldr	r0, [r5, #692]
 4874 0f8c 1B69     		ldr	r3, [r3, #16]
 4875 0f8e 9847     		blx	r3
 4876              	.LVL555:
 771:boards/TMC5072_eval.c **** 
 772:boards/TMC5072_eval.c **** 	TMC5072_SPIChannel = &HAL.SPI->ch1;
 4877              		.loc 1 772 2 is_stmt 1 view .LVU1665
 773:boards/TMC5072_eval.c **** 	TMC5072_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 4878              		.loc 1 773 28 is_stmt 0 view .LVU1666
 4879 0f90 7368     		ldr	r3, [r6, #4]
 772:boards/TMC5072_eval.c **** 	TMC5072_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 4880              		.loc 1 772 27 view .LVU1667
 4881 0f92 3A69     		ldr	r2, [r7, #16]
 772:boards/TMC5072_eval.c **** 	TMC5072_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 4882              		.loc 1 772 21 view .LVU1668
 4883 0f94 C5F8BC22 		str	r2, [r5, #700]
 4884              		.loc 1 773 2 is_stmt 1 view .LVU1669
 4885              		.loc 1 773 28 is_stmt 0 view .LVU1670
 4886 0f98 03F53273 		add	r3, r3, #712
 4887              		.loc 1 773 26 view .LVU1671
 4888 0f9c 5360     		str	r3, [r2, #4]
 774:boards/TMC5072_eval.c **** 
 775:boards/TMC5072_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 4889              		.loc 1 775 2 is_stmt 1 view .LVU1672
 4890              		.loc 1 775 16 is_stmt 0 view .LVU1673
 4891 0f9e A369     		ldr	r3, [r4, #24]
 4892              		.loc 1 775 38 view .LVU1674
 4893 0fa0 224A     		ldr	r2, .L240+20
 4894 0fa2 C3F80422 		str	r2, [r3, #516]
 776:boards/TMC5072_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 4895              		.loc 1 776 2 is_stmt 1 view .LVU1675
 4896              		.loc 1 776 38 is_stmt 0 view .LVU1676
 4897 0fa6 224A     		ldr	r2, .L240+24
 4898 0fa8 C3F80822 		str	r2, [r3, #520]
 777:boards/TMC5072_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 4899              		.loc 1 777 2 is_stmt 1 view .LVU1677
 778:boards/TMC5072_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 4900              		.loc 1 778 2 view .LVU1678
 777:boards/TMC5072_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 4901              		.loc 1 777 38 is_stmt 0 view .LVU1679
 4902 0fac 0122     		movs	r2, #1
 4903 0fae 1A80     		strh	r2, [r3]	@ movhi
 779:boards/TMC5072_eval.c **** 
 780:boards/TMC5072_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 4904              		.loc 1 780 2 is_stmt 1 view .LVU1680
 4905              		.loc 1 780 38 is_stmt 0 view .LVU1681
 4906 0fb0 204B     		ldr	r3, .L240+28
 4907 0fb2 6362     		str	r3, [r4, #36]
 781:boards/TMC5072_eval.c **** 	Evalboards.ch1.right                = right;
 4908              		.loc 1 781 2 is_stmt 1 view .LVU1682
 4909              		.loc 1 781 38 is_stmt 0 view .LVU1683
 4910 0fb4 204B     		ldr	r3, .L240+32
 4911 0fb6 2362     		str	r3, [r4, #32]
 782:boards/TMC5072_eval.c **** 	Evalboards.ch1.left                 = left;
 4912              		.loc 1 782 2 is_stmt 1 view .LVU1684
 4913              		.loc 1 782 38 is_stmt 0 view .LVU1685
 4914 0fb8 204B     		ldr	r3, .L240+36
 4915 0fba E361     		str	r3, [r4, #28]
 783:boards/TMC5072_eval.c **** 	Evalboards.ch1.stop                 = stop;
 4916              		.loc 1 783 2 is_stmt 1 view .LVU1686
 4917              		.loc 1 783 38 is_stmt 0 view .LVU1687
 4918 0fbc 204B     		ldr	r3, .L240+40
 4919 0fbe A362     		str	r3, [r4, #40]
 784:boards/TMC5072_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 4920              		.loc 1 784 2 is_stmt 1 view .LVU1688
 4921              		.loc 1 784 38 is_stmt 0 view .LVU1689
 4922 0fc0 204B     		ldr	r3, .L240+44
 4923 0fc2 E363     		str	r3, [r4, #60]
 785:boards/TMC5072_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 4924              		.loc 1 785 2 is_stmt 1 view .LVU1690
 4925              		.loc 1 785 38 is_stmt 0 view .LVU1691
 4926 0fc4 204B     		ldr	r3, .L240+48
 4927 0fc6 A363     		str	r3, [r4, #56]
 786:boards/TMC5072_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 4928              		.loc 1 786 2 is_stmt 1 view .LVU1692
 4929              		.loc 1 786 38 is_stmt 0 view .LVU1693
 4930 0fc8 204B     		ldr	r3, .L240+52
 4931 0fca E362     		str	r3, [r4, #44]
 787:boards/TMC5072_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 4932              		.loc 1 787 2 is_stmt 1 view .LVU1694
 4933              		.loc 1 787 38 is_stmt 0 view .LVU1695
 4934 0fcc 204B     		ldr	r3, .L240+56
 4935 0fce 2363     		str	r3, [r4, #48]
 788:boards/TMC5072_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 4936              		.loc 1 788 2 is_stmt 1 view .LVU1696
 4937              		.loc 1 788 38 is_stmt 0 view .LVU1697
 4938 0fd0 204B     		ldr	r3, .L240+60
 4939 0fd2 E364     		str	r3, [r4, #76]
 789:boards/TMC5072_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 4940              		.loc 1 789 2 is_stmt 1 view .LVU1698
 4941              		.loc 1 789 38 is_stmt 0 view .LVU1699
 4942 0fd4 204B     		ldr	r3, .L240+64
 4943 0fd6 A364     		str	r3, [r4, #72]
 790:boards/TMC5072_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 4944              		.loc 1 790 2 is_stmt 1 view .LVU1700
 4945              		.loc 1 790 38 is_stmt 0 view .LVU1701
 4946 0fd8 204B     		ldr	r3, .L240+68
 4947 0fda A365     		str	r3, [r4, #88]
 791:boards/TMC5072_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 4948              		.loc 1 791 2 is_stmt 1 view .LVU1702
 4949              		.loc 1 791 38 is_stmt 0 view .LVU1703
 4950 0fdc 204B     		ldr	r3, .L240+72
 4951 0fde 6365     		str	r3, [r4, #84]
 792:boards/TMC5072_eval.c **** 	Evalboards.ch1.getMeasuredSpeed     = getMeasuredSpeed;
 4952              		.loc 1 792 2 is_stmt 1 view .LVU1704
 4953              		.loc 1 792 38 is_stmt 0 view .LVU1705
 4954 0fe0 204B     		ldr	r3, .L240+76
 4955 0fe2 2365     		str	r3, [r4, #80]
 793:boards/TMC5072_eval.c **** 	Evalboards.ch1.enableDriver         = enableDriver;
 4956              		.loc 1 793 2 is_stmt 1 view .LVU1706
 4957              		.loc 1 793 38 is_stmt 0 view .LVU1707
 4958 0fe4 204B     		ldr	r3, .L240+80
 4959 0fe6 6366     		str	r3, [r4, #100]
 794:boards/TMC5072_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 4960              		.loc 1 794 2 is_stmt 1 view .LVU1708
 4961              		.loc 1 794 38 is_stmt 0 view .LVU1709
 4962 0fe8 204B     		ldr	r3, .L240+84
 4963 0fea 2366     		str	r3, [r4, #96]
 795:boards/TMC5072_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC5072_MOTORS;
 4964              		.loc 1 795 2 is_stmt 1 view .LVU1710
 796:boards/TMC5072_eval.c **** 	Evalboards.ch1.VMMin                = VM_MIN;
 797:boards/TMC5072_eval.c **** 	Evalboards.ch1.VMMax                = VM_MAX;
 4965              		.loc 1 797 38 is_stmt 0 view .LVU1711
 4966 0fec 3222     		movs	r2, #50
 4967 0fee 4FF48C73 		mov	r3, #280
 4968 0ff2 C4E90332 		strd	r3, r2, [r4, #12]
 798:boards/TMC5072_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 4969              		.loc 1 798 38 view .LVU1712
 4970 0ff6 1E4B     		ldr	r3, .L240+88
 4971 0ff8 E365     		str	r3, [r4, #92]
 4972              	.LBB489:
 799:boards/TMC5072_eval.c **** 
 800:boards/TMC5072_eval.c **** 	for(uint8_t motor = 0; motor < TMC5072_MOTORS; motor++)
 801:boards/TMC5072_eval.c **** 	{
 802:boards/TMC5072_eval.c **** 		vmax_position[motor] = motorToIC(motor)->config->shadowRegister[TMC5072_VMAX(motor)];
 4973              		.loc 1 802 42 view .LVU1713
 4974 0ffa 2B68     		ldr	r3, [r5]
 4975              	.LBE489:
 795:boards/TMC5072_eval.c **** 	Evalboards.ch1.VMMin                = VM_MIN;
 4976              		.loc 1 795 38 view .LVU1714
 4977 0ffc 0220     		movs	r0, #2
 4978              	.LBB490:
 4979              		.loc 1 802 24 view .LVU1715
 4980 0ffe D3F8A020 		ldr	r2, [r3, #160]
 4981 1002 D3F82031 		ldr	r3, [r3, #288]
 4982              	.LBE490:
 795:boards/TMC5072_eval.c **** 	Evalboards.ch1.VMMin                = VM_MIN;
 4983              		.loc 1 795 38 view .LVU1716
 4984 1006 2075     		strb	r0, [r4, #20]
 796:boards/TMC5072_eval.c **** 	Evalboards.ch1.VMMax                = VM_MAX;
 4985              		.loc 1 796 2 is_stmt 1 view .LVU1717
 798:boards/TMC5072_eval.c **** 
 4986              		.loc 1 798 2 view .LVU1718
 800:boards/TMC5072_eval.c **** 	{
 4987              		.loc 1 800 2 view .LVU1719
 4988              	.LBB491:
 800:boards/TMC5072_eval.c **** 	{
 4989              		.loc 1 800 6 view .LVU1720
 4990              	.LVL556:
 800:boards/TMC5072_eval.c **** 	{
 4991              		.loc 1 800 25 view .LVU1721
 4992              		.loc 1 802 3 view .LVU1722
 4993              		.loc 1 802 3 is_stmt 0 view .LVU1723
 4994              	.LBE491:
  43:boards/TMC5072_eval.c **** 
 4995              		.loc 1 43 2 is_stmt 1 view .LVU1724
  45:boards/TMC5072_eval.c **** }
 4996              		.loc 1 45 2 view .LVU1725
 4997              	.LBB492:
 4998              		.loc 1 802 24 is_stmt 0 view .LVU1726
 4999 1008 C5F89822 		str	r2, [r5, #664]
 800:boards/TMC5072_eval.c **** 	{
 5000              		.loc 1 800 49 is_stmt 1 view .LVU1727
 5001              	.LVL557:
 800:boards/TMC5072_eval.c **** 	{
 5002              		.loc 1 800 25 view .LVU1728
 5003              		.loc 1 802 3 view .LVU1729
 5004              		.loc 1 802 3 is_stmt 0 view .LVU1730
 5005              	.LBE492:
  43:boards/TMC5072_eval.c **** 
 5006              		.loc 1 43 2 is_stmt 1 view .LVU1731
  45:boards/TMC5072_eval.c **** }
 5007              		.loc 1 45 2 view .LVU1732
 5008              	.LBB493:
 5009              		.loc 1 802 24 is_stmt 0 view .LVU1733
 5010 100c C5F89C32 		str	r3, [r5, #668]
 800:boards/TMC5072_eval.c **** 	{
 5011              		.loc 1 800 49 is_stmt 1 view .LVU1734
 5012              	.LVL558:
 800:boards/TMC5072_eval.c **** 	{
 5013              		.loc 1 800 25 view .LVU1735
 5014              	.LBE493:
 803:boards/TMC5072_eval.c **** 	}
 804:boards/TMC5072_eval.c **** 
 805:boards/TMC5072_eval.c **** 	enableDriver(DRIVER_USE_GLOBAL_ENABLE);
 5015              		.loc 1 805 2 view .LVU1736
 806:boards/TMC5072_eval.c **** };
 5016              		.loc 1 806 1 is_stmt 0 view .LVU1737
 5017 1010 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 5018              	.LCFI22:
 5019              		.cfi_restore 14
 5020              		.cfi_restore 7
 5021              		.cfi_restore 6
 5022              		.cfi_restore 5
 5023              		.cfi_restore 4
 5024              		.cfi_restore 3
 5025              		.cfi_def_cfa_offset 0
 805:boards/TMC5072_eval.c **** };
 5026              		.loc 1 805 2 view .LVU1738
 5027 1014 F6E6     		b	enableDriver
 5028              	.LVL559:
 5029              	.L241:
 5030 1016 00BF     		.align	2
 5031              	.L240:
 5032 1018 00000000 		.word	Evalboards
 5033 101c 00000000 		.word	.LANCHOR0
 5034 1020 00000000 		.word	.LANCHOR1
 5035 1024 00000000 		.word	HAL
 5036 1028 00000000 		.word	configCallback
 5037 102c 00000000 		.word	reset
 5038 1030 00000000 		.word	restore
 5039 1034 00000000 		.word	rotate
 5040 1038 00000000 		.word	right
 5041 103c 00000000 		.word	left
 5042 1040 00000000 		.word	stop
 5043 1044 00000000 		.word	GAP
 5044 1048 00000000 		.word	SAP
 5045 104c 00000000 		.word	moveTo
 5046 1050 00000000 		.word	moveBy
 5047 1054 00000000 		.word	writeRegister
 5048 1058 00000000 		.word	readRegister
 5049 105c 00000000 		.word	periodicJob
 5050 1060 00000000 		.word	userFunction
 5051 1064 00000000 		.word	getMeasuredSpeed
 5052 1068 00000000 		.word	enableDriver
 5053 106c 00000000 		.word	checkErrors
 5054 1070 00000000 		.word	deInit
 5055              		.cfi_endproc
 5056              	.LFE24:
 5058              		.comm	TMCMotionController,532,4
 5059              		.comm	TMCDriver,532,4
 5060              		.comm	Evalboards,244,4
 5061              		.comm	VitalSignsMonitor,20,4
 5062              		.comm	hwid,1,1
 5063              		.comm	HAL,48,4
 5064              		.comm	UART,40,4
 5065              		.comm	Timer,16,4
 5066              		.comm	WLAN,36,4
 5067              		.comm	RS232,36,4
 5068              		.comm	LEDs,28,4
 5069              		.comm	USB,36,4
 5070              		.comm	uart0_interrupt,1,1
 5071              		.comm	ADCs,32,4
 5072              		.comm	SPI,44,4
 5073              		.comm	IOMap,2088,4
 5074              		.comm	IOs,52,4
 5075              		.comm	Cpu,8,4
 5076              		.section	.rodata
 5077              		.align	2
 5078              		.set	.LANCHOR1,. + 0
 5081              	tmc5072_defaultRegisterResetState:
 5082 0000 00000000 		.word	0
 5083 0004 00000000 		.word	0
 5084 0008 00000000 		.word	0
 5085 000c 00000000 		.word	0
 5086 0010 00000000 		.word	0
 5087 0014 00000000 		.word	0
 5088 0018 00000000 		.word	0
 5089 001c 00000000 		.word	0
 5090 0020 00000000 		.word	0
 5091 0024 00000000 		.word	0
 5092 0028 00000000 		.word	0
 5093 002c 00000000 		.word	0
 5094 0030 00000000 		.word	0
 5095 0034 00000000 		.word	0
 5096 0038 00000000 		.word	0
 5097 003c 00000000 		.word	0
 5098 0040 00000000 		.word	0
 5099 0044 00000000 		.word	0
 5100 0048 00000000 		.word	0
 5101 004c 00000000 		.word	0
 5102 0050 00000000 		.word	0
 5103 0054 00000000 		.word	0
 5104 0058 00000000 		.word	0
 5105 005c 00000000 		.word	0
 5106 0060 00000000 		.word	0
 5107 0064 00000000 		.word	0
 5108 0068 00000000 		.word	0
 5109 006c 00000000 		.word	0
 5110 0070 00000000 		.word	0
 5111 0074 00000000 		.word	0
 5112 0078 00000000 		.word	0
 5113 007c 00000000 		.word	0
 5114 0080 00000000 		.word	0
 5115 0084 00000000 		.word	0
 5116 0088 00000000 		.word	0
 5117 008c 00000000 		.word	0
 5118 0090 00000000 		.word	0
 5119 0094 00000000 		.word	0
 5120 0098 00000000 		.word	0
 5121 009c 00000000 		.word	0
 5122 00a0 00000000 		.word	0
 5123 00a4 00000000 		.word	0
 5124 00a8 00000000 		.word	0
 5125 00ac 00000000 		.word	0
 5126 00b0 00000000 		.word	0
 5127 00b4 00000000 		.word	0
 5128 00b8 00000000 		.word	0
 5129 00bc 00000000 		.word	0
 5130 00c0 03170700 		.word	464643
 5131 00c4 00000000 		.word	0
 5132 00c8 FFFFFF00 		.word	16777215
 5133 00cc 00000000 		.word	0
 5134 00d0 00000000 		.word	0
 5135 00d4 00000000 		.word	0
 5136 00d8 00000000 		.word	0
 5137 00dc 00000000 		.word	0
 5138 00e0 00000000 		.word	0
 5139 00e4 00000000 		.word	0
 5140 00e8 00000100 		.word	65536
 5141 00ec 00000000 		.word	0
 5142 00f0 00000000 		.word	0
 5143 00f4 00000000 		.word	0
 5144 00f8 00000000 		.word	0
 5145 00fc 00000000 		.word	0
 5146 0100 00000000 		.word	0
 5147 0104 00000000 		.word	0
 5148 0108 00000000 		.word	0
 5149 010c 00000000 		.word	0
 5150 0110 00000000 		.word	0
 5151 0114 00000000 		.word	0
 5152 0118 00000000 		.word	0
 5153 011c 00000000 		.word	0
 5154 0120 00000000 		.word	0
 5155 0124 00000000 		.word	0
 5156 0128 00000000 		.word	0
 5157 012c 00000000 		.word	0
 5158 0130 00000000 		.word	0
 5159 0134 00000000 		.word	0
 5160 0138 00000000 		.word	0
 5161 013c 00000000 		.word	0
 5162 0140 03170700 		.word	464643
 5163 0144 00000000 		.word	0
 5164 0148 FFFFFF00 		.word	16777215
 5165 014c 00000000 		.word	0
 5166 0150 00000000 		.word	0
 5167 0154 00000000 		.word	0
 5168 0158 00000000 		.word	0
 5169 015c 00000000 		.word	0
 5170 0160 00000000 		.word	0
 5171 0164 00000000 		.word	0
 5172 0168 00000100 		.word	65536
 5173 016c 00000000 		.word	0
 5174 0170 00000000 		.word	0
 5175 0174 00000000 		.word	0
 5176 0178 00000000 		.word	0
 5177 017c 00000000 		.word	0
 5178 0180 00000000 		.word	0
 5179 0184 00000000 		.word	0
 5180 0188 00000000 		.word	0
 5181 018c 00000000 		.word	0
 5182 0190 00000000 		.word	0
 5183 0194 00000000 		.word	0
 5184 0198 00000000 		.word	0
 5185 019c 00000000 		.word	0
 5186 01a0 00000000 		.word	0
 5187 01a4 00000000 		.word	0
 5188 01a8 00000000 		.word	0
 5189 01ac 00000000 		.word	0
 5190 01b0 D5010100 		.word	66005
 5191 01b4 00000000 		.word	0
 5192 01b8 00000000 		.word	0
 5193 01bc 00000000 		.word	0
 5194 01c0 00000000 		.word	0
 5195 01c4 00000000 		.word	0
 5196 01c8 00000000 		.word	0
 5197 01cc 00000000 		.word	0
 5198 01d0 00000000 		.word	0
 5199 01d4 00000000 		.word	0
 5200 01d8 00000000 		.word	0
 5201 01dc 00000000 		.word	0
 5202 01e0 00000000 		.word	0
 5203 01e4 00000000 		.word	0
 5204 01e8 00000000 		.word	0
 5205 01ec 00000000 		.word	0
 5206 01f0 D5010100 		.word	66005
 5207 01f4 00000000 		.word	0
 5208 01f8 00000000 		.word	0
 5209 01fc 00000000 		.word	0
 5210              		.bss
 5211              		.align	2
 5212              		.set	.LANCHOR0,. + 0
 5215              	TMC5072:
 5216 0000 00000000 		.space	664
 5216      00000000 
 5216      00000000 
 5216      00000000 
 5216      00000000 
 5219              	vmax_position:
 5220 0298 00000000 		.space	8
 5220      00000000 
 5223              	Pins:
 5224 02a0 00000000 		.space	28
 5224      00000000 
 5224      00000000 
 5224      00000000 
 5224      00000000 
 5227              	TMC5072_SPIChannel:
 5228 02bc 00000000 		.space	4
 5231              	ADCValue:
 5232 02c0 00000000 		.space	12
 5232      00000000 
 5232      00000000 
 5233              		.text
 5234              	.Letext0:
 5235              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 5236              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5237              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5238              		.file 5 "TMC-API/tmc/helpers/Types.h"
 5239              		.file 6 "TMC-API/tmc/helpers/Config.h"
 5240              		.file 7 "TMC-API/tmc/helpers/RegisterAccess.h"
 5241              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5242              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5243              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 5244              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 5245              		.file 12 "TMC-API/tmc/helpers/API_Header.h"
 5246              		.file 13 "hal/Landungsbruecke/freescale/MK20D10.h"
 5247              		.file 14 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 5248              		.file 15 "./hal/Landungsbruecke/freescale/Cpu.h"
 5249              		.file 16 "./hal/IOs.h"
 5250              		.file 17 "./hal/IOMap.h"
 5251              		.file 18 "./hal/SPI.h"
 5252              		.file 19 "./hal/ADCs.h"
 5253              		.file 20 "./hal/RXTX.h"
 5254              		.file 21 "./hal/USB.h"
 5255              		.file 22 "./hal/LEDs.h"
 5256              		.file 23 "./hal/RS232.h"
 5257              		.file 24 "./hal/WLAN.h"
 5258              		.file 25 "./hal/Timer.h"
 5259              		.file 26 "./hal/UART.h"
 5260              		.file 27 "./hal/HAL.h"
 5261              		.file 28 "./tmc/VitalSignsMonitor.h"
 5262              		.file 29 "boards/Board.h"
 5263              		.file 30 "boards/TMCDriver.h"
 5264              		.file 31 "boards/TMCMotionController.h"
 5265              		.file 32 "TMC-API/tmc/ic/TMC5072/TMC5072.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC5072_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:22     .text:00000000 getMeasuredSpeed
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:54     .text:00000018 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:58     .text:0000001c $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:64     .text:0000001c checkErrors
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:83     .text:00000024 $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:87     .text:00000028 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:93     .text:00000028 periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:167    .text:00000044 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:172    .text:00000048 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:178    .text:00000048 readRegister
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:217    .text:00000058 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:221    .text:0000005c $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:227    .text:0000005c writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:254    .text:00000064 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:258    .text:00000068 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:264    .text:00000068 handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:316    .text:00000092 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:323    .text:0000009e $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:334    .text:000000aa $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:379    .text:00000104 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:387    .text:0000010e $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:417    .text:0000014a $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:1281   .text:00000434 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:1285   .text:00000438 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:1882   .text:000005fc $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:1890   .text:00000604 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:2133   .text:000006e0 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:2137   .text:000006e4 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:2976   .text:000009cc $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:2980   .text:000009d0 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3775   .text:00000cc0 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3779   .text:00000cc4 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3785   .text:00000cc4 SAP
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3825   .text:00000cd8 GAP
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3855   .text:00000ce2 moveBy
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3902   .text:00000cfc $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3906   .text:00000d00 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3912   .text:00000d00 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3959   .text:00000d1c $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3963   .text:00000d20 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:3969   .text:00000d20 stop
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4006   .text:00000d30 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4010   .text:00000d34 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4016   .text:00000d34 left
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4055   .text:00000d44 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4059   .text:00000d48 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4065   .text:00000d48 right
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4104   .text:00000d58 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4108   .text:00000d5c $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4114   .text:00000d5c rotate
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4153   .text:00000d6c $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4157   .text:00000d70 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4163   .text:00000d70 restore
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4178   .text:00000d78 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4182   .text:00000d7c $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4188   .text:00000d7c reset
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4266   .text:00000da0 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4270   .text:00000da4 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4276   .text:00000da4 userFunction
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4406   .text:00000dfc $d
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4411   .text:00000e04 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4417   .text:00000e04 enableDriver
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4493   .text:00000e3c $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4499   .text:00000e48 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4505   .text:00000e48 deInit
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4599   .text:00000ea0 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4604   .text:00000ea8 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4610   .text:00000ea8 configCallback
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4683   .text:00000ed0 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4688   .text:00000ed8 $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4695   .text:00000ed8 tmc5072_readWriteArray
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4730   .text:00000ee8 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4734   .text:00000eec $t
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:4741   .text:00000eec TMC5072_init
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:5032   .text:00001018 $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:5077   .rodata:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:5081   .rodata:00000000 tmc5072_defaultRegisterResetState
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:5211   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:5215   .bss:00000000 TMC5072
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:5219   .bss:00000298 vmax_position
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:5223   .bss:000002a0 Pins
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:5227   .bss:000002bc TMC5072_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\ccVrT8ng.s:5231   .bss:000002c0 ADCValue

UNDEFINED SYMBOLS
tmc5072_periodicJob
tmc5072_readInt
tmc5072_writeInt
tmc5072_moveBy
tmc5072_moveTo
tmc5072_stop
tmc5072_left
tmc5072_right
tmc5072_rotate
tmc5072_restore
tmc5072_reset
tmc5072_fillShadowRegisters
tmc5072_init
tmc5072_setCallback
