   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC5130_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	getMeasuredSpeed:
  23              	.LVL0:
  24              	.LFB13:
  25              		.file 1 "boards/TMC5130_eval.c"
   1:boards/TMC5130_eval.c **** #include "Board.h"
   2:boards/TMC5130_eval.c **** #include "tmc/ic/TMC5130/TMC5130.h"
   3:boards/TMC5130_eval.c **** 
   4:boards/TMC5130_eval.c **** #define VM_MIN  50   // VM[V/10] min
   5:boards/TMC5130_eval.c **** #define VM_MAX  480  // VM[V/10] max
   6:boards/TMC5130_eval.c **** 
   7:boards/TMC5130_eval.c **** // SPI Channel selection
   8:boards/TMC5130_eval.c **** #define DEFAULT_CHANNEL  0
   9:boards/TMC5130_eval.c **** 
  10:boards/TMC5130_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
  11:boards/TMC5130_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
  12:boards/TMC5130_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
  13:boards/TMC5130_eval.c **** static uint32_t stop(uint8_t motor);
  14:boards/TMC5130_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  15:boards/TMC5130_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  16:boards/TMC5130_eval.c **** 
  17:boards/TMC5130_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  18:boards/TMC5130_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  19:boards/TMC5130_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value);
  20:boards/TMC5130_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value);
  21:boards/TMC5130_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value);
  22:boards/TMC5130_eval.c **** 
  23:boards/TMC5130_eval.c **** static void periodicJob(uint32_t tick);
  24:boards/TMC5130_eval.c **** static void checkErrors(uint32_t tick);
  25:boards/TMC5130_eval.c **** static void deInit(void);
  26:boards/TMC5130_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  27:boards/TMC5130_eval.c **** 
  28:boards/TMC5130_eval.c **** static uint8_t reset();
  29:boards/TMC5130_eval.c **** static void enableDriver(DriverState state);
  30:boards/TMC5130_eval.c **** 
  31:boards/TMC5130_eval.c **** static SPIChannelTypeDef *TMC5130_SPIChannel;
  32:boards/TMC5130_eval.c **** static TMC5130TypeDef TMC5130;
  33:boards/TMC5130_eval.c **** static uint32_t vmax_position;
  34:boards/TMC5130_eval.c **** 
  35:boards/TMC5130_eval.c **** // Translate motor number to TMC5130TypeDef
  36:boards/TMC5130_eval.c **** // When using multiple ICs you can map them here
  37:boards/TMC5130_eval.c **** static inline TMC5130TypeDef *motorToIC(uint8_t motor)
  38:boards/TMC5130_eval.c **** {
  39:boards/TMC5130_eval.c **** 	UNUSED(motor);
  40:boards/TMC5130_eval.c **** 
  41:boards/TMC5130_eval.c **** 	return &TMC5130;
  42:boards/TMC5130_eval.c **** }
  43:boards/TMC5130_eval.c **** 
  44:boards/TMC5130_eval.c **** // Translate channel number to SPI channel
  45:boards/TMC5130_eval.c **** // When using multiple ICs you can map them here
  46:boards/TMC5130_eval.c **** static inline SPIChannelTypeDef *channelToSPI(uint8_t channel)
  47:boards/TMC5130_eval.c **** {
  48:boards/TMC5130_eval.c **** 	UNUSED(channel);
  49:boards/TMC5130_eval.c **** 
  50:boards/TMC5130_eval.c **** 	return TMC5130_SPIChannel;
  51:boards/TMC5130_eval.c **** }
  52:boards/TMC5130_eval.c **** 
  53:boards/TMC5130_eval.c **** // SPI Wrapper for API
  54:boards/TMC5130_eval.c **** void tmc5130_readWriteArray(uint8_t channel, uint8_t *data, size_t length)
  55:boards/TMC5130_eval.c **** {
  56:boards/TMC5130_eval.c **** 	// Map the channel to the corresponding SPI channel
  57:boards/TMC5130_eval.c **** 	channelToSPI(channel)->readWriteArray(data, length);
  58:boards/TMC5130_eval.c **** }
  59:boards/TMC5130_eval.c **** 
  60:boards/TMC5130_eval.c **** typedef struct
  61:boards/TMC5130_eval.c **** {
  62:boards/TMC5130_eval.c **** 	IOPinTypeDef  *REFL_UC;
  63:boards/TMC5130_eval.c **** 	IOPinTypeDef  *REFR_UC;
  64:boards/TMC5130_eval.c **** 	IOPinTypeDef  *DRV_ENN_CFG6;
  65:boards/TMC5130_eval.c **** 	IOPinTypeDef  *ENCA_DCIN_CFG5;
  66:boards/TMC5130_eval.c **** 	IOPinTypeDef  *ENCB_DCEN_CFG4;
  67:boards/TMC5130_eval.c **** 	IOPinTypeDef  *ENCN_DCO;
  68:boards/TMC5130_eval.c **** 
  69:boards/TMC5130_eval.c **** 	IOPinTypeDef  *SWSEL;
  70:boards/TMC5130_eval.c **** 	IOPinTypeDef  *SWN_DIAG0;
  71:boards/TMC5130_eval.c **** 	IOPinTypeDef  *SWP_DIAG1;
  72:boards/TMC5130_eval.c **** 
  73:boards/TMC5130_eval.c **** 	IOPinTypeDef  *AIN_REF_SW;
  74:boards/TMC5130_eval.c **** 	IOPinTypeDef  *AIN_REF_PWM;
  75:boards/TMC5130_eval.c **** } PinsTypeDef;
  76:boards/TMC5130_eval.c **** 
  77:boards/TMC5130_eval.c **** static PinsTypeDef Pins;
  78:boards/TMC5130_eval.c **** 
  79:boards/TMC5130_eval.c **** // => Functions forwarded to API
  80:boards/TMC5130_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
  81:boards/TMC5130_eval.c **** {
  82:boards/TMC5130_eval.c **** 	tmc5130_rotate(motorToIC(motor), velocity);
  83:boards/TMC5130_eval.c **** 
  84:boards/TMC5130_eval.c **** 	return 0;
  85:boards/TMC5130_eval.c **** }
  86:boards/TMC5130_eval.c **** 
  87:boards/TMC5130_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
  88:boards/TMC5130_eval.c **** {
  89:boards/TMC5130_eval.c **** 	tmc5130_right(motorToIC(motor), velocity);
  90:boards/TMC5130_eval.c **** 
  91:boards/TMC5130_eval.c **** 	return 0;
  92:boards/TMC5130_eval.c **** }
  93:boards/TMC5130_eval.c **** 
  94:boards/TMC5130_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
  95:boards/TMC5130_eval.c **** {
  96:boards/TMC5130_eval.c **** 	tmc5130_left(motorToIC(motor), velocity);
  97:boards/TMC5130_eval.c **** 
  98:boards/TMC5130_eval.c **** 	return 0;
  99:boards/TMC5130_eval.c **** }
 100:boards/TMC5130_eval.c **** 
 101:boards/TMC5130_eval.c **** static uint32_t stop(uint8_t motor)
 102:boards/TMC5130_eval.c **** {
 103:boards/TMC5130_eval.c **** 	tmc5130_stop(motorToIC(motor));
 104:boards/TMC5130_eval.c **** 
 105:boards/TMC5130_eval.c **** 	return 0;
 106:boards/TMC5130_eval.c **** }
 107:boards/TMC5130_eval.c **** 
 108:boards/TMC5130_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
 109:boards/TMC5130_eval.c **** {
 110:boards/TMC5130_eval.c **** 	tmc5130_moveTo(motorToIC(motor), position, vmax_position);
 111:boards/TMC5130_eval.c **** 
 112:boards/TMC5130_eval.c **** 	return 0;
 113:boards/TMC5130_eval.c **** }
 114:boards/TMC5130_eval.c **** 
 115:boards/TMC5130_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 116:boards/TMC5130_eval.c **** {
 117:boards/TMC5130_eval.c **** 	tmc5130_moveBy(motorToIC(motor), ticks, vmax_position);
 118:boards/TMC5130_eval.c **** 
 119:boards/TMC5130_eval.c **** 	return 0;
 120:boards/TMC5130_eval.c **** }
 121:boards/TMC5130_eval.c **** // <= Functions forwarded to API
 122:boards/TMC5130_eval.c **** 
 123:boards/TMC5130_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 124:boards/TMC5130_eval.c **** {
 125:boards/TMC5130_eval.c **** 	uint32_t buffer;
 126:boards/TMC5130_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 127:boards/TMC5130_eval.c **** 
 128:boards/TMC5130_eval.c **** 	if(motor >= TMC5130_MOTORS)
 129:boards/TMC5130_eval.c **** 		return TMC_ERROR_MOTOR;
 130:boards/TMC5130_eval.c **** 
 131:boards/TMC5130_eval.c **** 	switch(type)
 132:boards/TMC5130_eval.c **** 	{
 133:boards/TMC5130_eval.c **** 	case 0:
 134:boards/TMC5130_eval.c **** 		// Target position
 135:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 136:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_XTARGET);
 137:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 138:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_XTARGET, *value);
 139:boards/TMC5130_eval.c **** 		}
 140:boards/TMC5130_eval.c **** 		break;
 141:boards/TMC5130_eval.c **** 	case 1:
 142:boards/TMC5130_eval.c **** 		// Actual position
 143:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 144:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_XACTUAL);
 145:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 146:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_XACTUAL, *value);
 147:boards/TMC5130_eval.c **** 		}
 148:boards/TMC5130_eval.c **** 		break;
 149:boards/TMC5130_eval.c **** 	case 2:
 150:boards/TMC5130_eval.c **** 		// Target speed
 151:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 152:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VMAX);
 153:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 154:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_VMAX, *value);
 155:boards/TMC5130_eval.c **** 		}
 156:boards/TMC5130_eval.c **** 		break;
 157:boards/TMC5130_eval.c **** 	case 3:
 158:boards/TMC5130_eval.c **** 		// Actual speed
 159:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 160:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VACTUAL);
 161:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 162:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 163:boards/TMC5130_eval.c **** 			errors |= TMC_ERROR_TYPE;
 164:boards/TMC5130_eval.c **** 		}
 165:boards/TMC5130_eval.c **** 		break;
 166:boards/TMC5130_eval.c **** 	case 4:
 167:boards/TMC5130_eval.c **** 		// Maximum speed
 168:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 169:boards/TMC5130_eval.c **** 			*value = vmax_position;
 170:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 171:boards/TMC5130_eval.c **** 			vmax_position = abs(*value);
 172:boards/TMC5130_eval.c **** 			if(tmc5130_readInt(motorToIC(motor), TMC5130_RAMPMODE) == TMC5130_MODE_POSITION)
 173:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_VMAX, vmax_position);
 174:boards/TMC5130_eval.c **** 		}
 175:boards/TMC5130_eval.c **** 		break;
 176:boards/TMC5130_eval.c **** 	case 5:
 177:boards/TMC5130_eval.c **** 		// Maximum acceleration
 178:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 179:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_AMAX);
 180:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 181:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_AMAX, *value);
 182:boards/TMC5130_eval.c **** 		}
 183:boards/TMC5130_eval.c **** 		break;
 184:boards/TMC5130_eval.c **** 	case 6:
 185:boards/TMC5130_eval.c **** 		// Maximum current
 186:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 187:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IRUN_MASK, TMC5130_IRU
 188:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 189:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IRUN_MASK, TMC5130_IRUN_SHIFT,
 190:boards/TMC5130_eval.c **** 		}
 191:boards/TMC5130_eval.c **** 		break;
 192:boards/TMC5130_eval.c **** 	case 7:
 193:boards/TMC5130_eval.c **** 		// Standby current
 194:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 195:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IHOLD_MASK, TMC5130_IH
 196:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 197:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IHOLD_MASK, TMC5130_IHOLD_SHIF
 198:boards/TMC5130_eval.c **** 		}
 199:boards/TMC5130_eval.c **** 		break;
 200:boards/TMC5130_eval.c **** 	case 8:
 201:boards/TMC5130_eval.c **** 		// Position reached flag
 202:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 203:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_RAMPSTAT) & TMC5130_RS_POSREACHED)? 1:0;
 204:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 205:boards/TMC5130_eval.c **** 			errors |= TMC_ERROR_TYPE;
 206:boards/TMC5130_eval.c **** 		}
 207:boards/TMC5130_eval.c **** 		break;
 208:boards/TMC5130_eval.c **** 	case 10:
 209:boards/TMC5130_eval.c **** 		// Right endstop
 210:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 211:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_RAMPSTAT) & TMC5130_RS_STOPR)? 0:1;
 212:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 213:boards/TMC5130_eval.c **** 			errors |= TMC_ERROR_TYPE;
 214:boards/TMC5130_eval.c **** 		}
 215:boards/TMC5130_eval.c **** 		break;
 216:boards/TMC5130_eval.c **** 	case 11:
 217:boards/TMC5130_eval.c **** 		// Left endstop
 218:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 219:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_RAMPSTAT) & TMC5130_RS_STOPL)? 0:1;
 220:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 221:boards/TMC5130_eval.c **** 			errors |= TMC_ERROR_TYPE;
 222:boards/TMC5130_eval.c **** 		}
 223:boards/TMC5130_eval.c **** 		break;
 224:boards/TMC5130_eval.c **** 	case 12:
 225:boards/TMC5130_eval.c **** 		// Automatic right stop
 226:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 227:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE) & TMC5130_SW_STOPR_ENABLE)? 1:0;
 228:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 229:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE);
 230:boards/TMC5130_eval.c **** 			if(*value == 0)
 231:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, buffer | TMC5130_SW_STOPR_ENABLE);
 232:boards/TMC5130_eval.c **** 			else
 233:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, buffer & ~TMC5130_SW_STOPR_ENABLE);
 234:boards/TMC5130_eval.c **** 		}
 235:boards/TMC5130_eval.c **** 		break;
 236:boards/TMC5130_eval.c **** 	case 13:
 237:boards/TMC5130_eval.c **** 		// Automatic left stop
 238:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 239:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE) & TMC5130_SW_STOPL_ENABLE)? 1:0;
 240:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 241:boards/TMC5130_eval.c **** 			buffer	= tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE);
 242:boards/TMC5130_eval.c **** 			if(*value==0)
 243:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, buffer | TMC5130_SW_STOPL_ENABLE);
 244:boards/TMC5130_eval.c **** 			else
 245:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, buffer & ~TMC5130_SW_STOPL_ENABLE);
 246:boards/TMC5130_eval.c **** 		}
 247:boards/TMC5130_eval.c **** 		break;
 248:boards/TMC5130_eval.c **** 	case 14:
 249:boards/TMC5130_eval.c **** 		// SW_MODE Register
 250:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 251:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE);
 252:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 253:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, *value);
 254:boards/TMC5130_eval.c **** 		}
 255:boards/TMC5130_eval.c **** 		break;
 256:boards/TMC5130_eval.c **** 	case 15:
 257:boards/TMC5130_eval.c **** 		// Acceleration A1
 258:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 259:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_A1);
 260:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 261:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_A1, *value);
 262:boards/TMC5130_eval.c **** 		}
 263:boards/TMC5130_eval.c **** 		break;
 264:boards/TMC5130_eval.c **** 	case 16:
 265:boards/TMC5130_eval.c **** 		// Velocity V1
 266:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 267:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_V1);
 268:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 269:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_V1, *value);
 270:boards/TMC5130_eval.c **** 		}
 271:boards/TMC5130_eval.c **** 		break;
 272:boards/TMC5130_eval.c **** 	case 17:
 273:boards/TMC5130_eval.c **** 		// Maximum Deceleration
 274:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 275:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_DMAX);
 276:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 277:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_DMAX, *value);
 278:boards/TMC5130_eval.c **** 		}
 279:boards/TMC5130_eval.c **** 		break;
 280:boards/TMC5130_eval.c **** 	case 18:
 281:boards/TMC5130_eval.c **** 		// Deceleration D1
 282:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 283:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_D1);
 284:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 285:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_D1, *value);
 286:boards/TMC5130_eval.c **** 		}
 287:boards/TMC5130_eval.c **** 		break;
 288:boards/TMC5130_eval.c **** 	case 19:
 289:boards/TMC5130_eval.c **** 		// Velocity VSTART
 290:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 291:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VSTART);
 292:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 293:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_VSTART, *value);
 294:boards/TMC5130_eval.c **** 		}
 295:boards/TMC5130_eval.c **** 		break;
 296:boards/TMC5130_eval.c **** 	case 20:
 297:boards/TMC5130_eval.c **** 		// Velocity VSTOP
 298:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 299:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VSTOP);
 300:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 301:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_VSTOP, *value);
 302:boards/TMC5130_eval.c **** 		}
 303:boards/TMC5130_eval.c **** 		break;
 304:boards/TMC5130_eval.c **** 	case 21:
 305:boards/TMC5130_eval.c **** 		// Waiting time after ramp down
 306:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 307:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_TZEROWAIT);
 308:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 309:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TZEROWAIT, *value);
 310:boards/TMC5130_eval.c **** 		}
 311:boards/TMC5130_eval.c **** 		break;
 312:boards/TMC5130_eval.c **** 
 313:boards/TMC5130_eval.c **** 	case 23:
 314:boards/TMC5130_eval.c **** 		// Speed threshold for high speed mode
 315:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 316:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_THIGH);
 317:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 318:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 319:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 320:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_THIGH, *value);
 321:boards/TMC5130_eval.c **** 		}
 322:boards/TMC5130_eval.c **** 		break;
 323:boards/TMC5130_eval.c **** 	case 24:
 324:boards/TMC5130_eval.c **** 		// Minimum speed for switching to dcStep
 325:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 326:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VDCMIN);
 327:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 328:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_VDCMIN, *value);
 329:boards/TMC5130_eval.c **** 		}
 330:boards/TMC5130_eval.c **** 		break;
 331:boards/TMC5130_eval.c **** 	case 27:
 332:boards/TMC5130_eval.c **** 		// High speed chopper mode
 333:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 334:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHCHM_MASK, TMC5130_V
 335:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 336:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHCHM_MASK, TMC5130_VHIGHCHM_
 337:boards/TMC5130_eval.c **** 		}
 338:boards/TMC5130_eval.c **** 		break;
 339:boards/TMC5130_eval.c **** 	case 28:
 340:boards/TMC5130_eval.c **** 		// High speed fullstep mode
 341:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 342:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHFS_MASK, TMC5130_VH
 343:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 344:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHFS_MASK, TMC5130_VHIGHFS_SH
 345:boards/TMC5130_eval.c **** 		}
 346:boards/TMC5130_eval.c **** 		break;
 347:boards/TMC5130_eval.c **** 	case 29:
 348:boards/TMC5130_eval.c **** 		// Measured Speed
 349:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 350:boards/TMC5130_eval.c **** 			*value = motorToIC(motor)->velocity;
 351:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 352:boards/TMC5130_eval.c **** 			errors |= TMC_ERROR_TYPE;
 353:boards/TMC5130_eval.c **** 		}
 354:boards/TMC5130_eval.c **** 		break;
 355:boards/TMC5130_eval.c **** 	case 33:
 356:boards/TMC5130_eval.c **** 		// Analog I Scale
 357:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 358:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_GCONF, TMC5130_I_SCALE_ANALOG_MASK, TMC513
 359:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 360:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_GCONF, TMC5130_I_SCALE_ANALOG_MASK, TMC5130_I_SCAL
 361:boards/TMC5130_eval.c **** 		}
 362:boards/TMC5130_eval.c **** 		break;
 363:boards/TMC5130_eval.c **** 	case 34:
 364:boards/TMC5130_eval.c **** 		// Internal RSense
 365:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 366:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_GCONF, TMC5130_INTERNAL_RSENSE_MASK, TMC51
 367:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 368:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_GCONF, TMC5130_INTERNAL_RSENSE_MASK, TMC5130_INTER
 369:boards/TMC5130_eval.c **** 		}
 370:boards/TMC5130_eval.c **** 		break;
 371:boards/TMC5130_eval.c **** 	case 140:
 372:boards/TMC5130_eval.c **** 		// Microstep Resolution
 373:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 374:boards/TMC5130_eval.c **** 			*value = 256 >> TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_MRES_MASK, TMC513
 375:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 376:boards/TMC5130_eval.c **** 			switch(*value)
 377:boards/TMC5130_eval.c **** 			{
 378:boards/TMC5130_eval.c **** 			case 1:    *value = 8;   break;
 379:boards/TMC5130_eval.c **** 			case 2:    *value = 7;   break;
 380:boards/TMC5130_eval.c **** 			case 4:    *value = 6;   break;
 381:boards/TMC5130_eval.c **** 			case 8:    *value = 5;   break;
 382:boards/TMC5130_eval.c **** 			case 16:   *value = 4;   break;
 383:boards/TMC5130_eval.c **** 			case 32:   *value = 3;   break;
 384:boards/TMC5130_eval.c **** 			case 64:   *value = 2;   break;
 385:boards/TMC5130_eval.c **** 			case 128:  *value = 1;   break;
 386:boards/TMC5130_eval.c **** 			case 256:  *value = 0;   break;
 387:boards/TMC5130_eval.c **** 			default:   *value = -1;  break;
 388:boards/TMC5130_eval.c **** 			}
 389:boards/TMC5130_eval.c **** 
 390:boards/TMC5130_eval.c **** 			if(*value != -1)
 391:boards/TMC5130_eval.c **** 			{
 392:boards/TMC5130_eval.c **** 				TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_MRES_MASK, TMC5130_MRES_SHIFT, 
 393:boards/TMC5130_eval.c **** 			}
 394:boards/TMC5130_eval.c **** 			else
 395:boards/TMC5130_eval.c **** 			{
 396:boards/TMC5130_eval.c **** 				errors |= TMC_ERROR_VALUE;
 397:boards/TMC5130_eval.c **** 			}
 398:boards/TMC5130_eval.c **** 		}
 399:boards/TMC5130_eval.c **** 		break;
 400:boards/TMC5130_eval.c **** 	case 162:
 401:boards/TMC5130_eval.c **** 		// Chopper blank time
 402:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 403:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TBL_MASK, TMC5130_TBL_SH
 404:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 405:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TBL_MASK, TMC5130_TBL_SHIFT, *va
 406:boards/TMC5130_eval.c **** 		}
 407:boards/TMC5130_eval.c **** 		break;
 408:boards/TMC5130_eval.c **** 	case 163:
 409:boards/TMC5130_eval.c **** 		// Constant TOff Mode
 410:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 411:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_CHM_MASK, TMC5130_CHM_SH
 412:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 413:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_CHM_MASK, TMC5130_CHM_SHIFT, *va
 414:boards/TMC5130_eval.c **** 		}
 415:boards/TMC5130_eval.c **** 		break;
 416:boards/TMC5130_eval.c **** 	case 164:
 417:boards/TMC5130_eval.c **** 		// Disable fast decay comparator
 418:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 419:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_DISFDCC_MASK, TMC5130_DI
 420:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 421:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_DISFDCC_MASK, TMC5130_DISFDCC_SH
 422:boards/TMC5130_eval.c **** 		}
 423:boards/TMC5130_eval.c **** 		break;
 424:boards/TMC5130_eval.c **** 	case 165:
 425:boards/TMC5130_eval.c **** 		// Chopper hysteresis end / fast decay time
 426:boards/TMC5130_eval.c **** 		buffer = tmc5130_readInt(motorToIC(motor), TMC5130_CHOPCONF);
 427:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 428:boards/TMC5130_eval.c **** 			if(buffer & (1<<14))
 429:boards/TMC5130_eval.c **** 			{
 430:boards/TMC5130_eval.c **** 				*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_HEND_MASK, TMC5130_HEND
 431:boards/TMC5130_eval.c **** 			}
 432:boards/TMC5130_eval.c **** 			else
 433:boards/TMC5130_eval.c **** 			{
 434:boards/TMC5130_eval.c **** 				*value = ((buffer >> 4) & 0x07) | (buffer & (1<<11))? (1<<3):0;
 435:boards/TMC5130_eval.c **** 			}
 436:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 437:boards/TMC5130_eval.c **** 			if(buffer & (1<<14))
 438:boards/TMC5130_eval.c **** 			{
 439:boards/TMC5130_eval.c **** 				TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_HEND_MASK, TMC5130_HEND_SHIFT, 
 440:boards/TMC5130_eval.c **** 			}
 441:boards/TMC5130_eval.c **** 			else
 442:boards/TMC5130_eval.c **** 			{
 443:boards/TMC5130_eval.c **** 				if(*value & (1<<3))
 444:boards/TMC5130_eval.c **** 					buffer |= (0x01<<11);
 445:boards/TMC5130_eval.c **** 				else
 446:boards/TMC5130_eval.c **** 					buffer &= ~(0x01<<11);
 447:boards/TMC5130_eval.c **** 
 448:boards/TMC5130_eval.c **** 				buffer &= ~(0x07<<4);
 449:boards/TMC5130_eval.c **** 				buffer |= (*value & 0x0F) << 4;
 450:boards/TMC5130_eval.c **** 
 451:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_CHOPCONF,buffer);
 452:boards/TMC5130_eval.c **** 			}
 453:boards/TMC5130_eval.c **** 		}
 454:boards/TMC5130_eval.c **** 		break;
 455:boards/TMC5130_eval.c **** 	case 166:
 456:boards/TMC5130_eval.c **** 		// Chopper hysteresis start / sine wave offset
 457:boards/TMC5130_eval.c **** 		buffer = tmc5130_readInt(motorToIC(motor), TMC5130_CHOPCONF);
 458:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 459:boards/TMC5130_eval.c **** 			if(buffer & (1<<14))
 460:boards/TMC5130_eval.c **** 			{
 461:boards/TMC5130_eval.c **** 				*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_HSTRT_MASK, TMC5130_HST
 462:boards/TMC5130_eval.c **** 			}
 463:boards/TMC5130_eval.c **** 			else
 464:boards/TMC5130_eval.c **** 			{
 465:boards/TMC5130_eval.c **** 				*value = ((buffer >> 7) & 0x0F) | (buffer & (1<<11))? 1<<3 : 0;
 466:boards/TMC5130_eval.c **** 			}
 467:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 468:boards/TMC5130_eval.c **** 			if(tmc5130_readInt(motorToIC(motor), TMC5130_CHOPCONF) & (1<<14))
 469:boards/TMC5130_eval.c **** 			{
 470:boards/TMC5130_eval.c **** 				TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_HSTRT_MASK, TMC5130_HSTRT_SHIFT
 471:boards/TMC5130_eval.c **** 			}
 472:boards/TMC5130_eval.c **** 			else
 473:boards/TMC5130_eval.c **** 			{
 474:boards/TMC5130_eval.c **** 				TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_OFFSET_MASK, TMC5130_OFFSET_SHI
 475:boards/TMC5130_eval.c **** 			}
 476:boards/TMC5130_eval.c **** 		}
 477:boards/TMC5130_eval.c **** 		break;
 478:boards/TMC5130_eval.c **** 	case 167:
 479:boards/TMC5130_eval.c **** 		// Chopper off time
 480:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 481:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TOFF_MASK, TMC5130_TOFF_
 482:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 483:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TOFF_MASK, TMC5130_TOFF_SHIFT, *
 484:boards/TMC5130_eval.c **** 		}
 485:boards/TMC5130_eval.c **** 		break;
 486:boards/TMC5130_eval.c **** 	case 168:
 487:boards/TMC5130_eval.c **** 		// smartEnergy current minimum (SEIMIN)
 488:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 489:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEIMIN_MASK, TMC5130_SEI
 490:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 491:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEIMIN_MASK, TMC5130_SEIMIN_SHIF
 492:boards/TMC5130_eval.c **** 		}
 493:boards/TMC5130_eval.c **** 		break;
 494:boards/TMC5130_eval.c **** 	case 169:
 495:boards/TMC5130_eval.c **** 		// smartEnergy current down step
 496:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 497:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEDN_MASK, TMC5130_SEDN_
 498:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 499:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEDN_MASK, TMC5130_SEDN_SHIFT, *
 500:boards/TMC5130_eval.c **** 		}
 501:boards/TMC5130_eval.c **** 		break;
 502:boards/TMC5130_eval.c **** 	case 170:
 503:boards/TMC5130_eval.c **** 		// smartEnergy hysteresis
 504:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 505:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMAX_MASK, TMC5130_SEMA
 506:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 507:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMAX_MASK, TMC5130_SEMAX_SHIFT,
 508:boards/TMC5130_eval.c **** 		}
 509:boards/TMC5130_eval.c **** 		break;
 510:boards/TMC5130_eval.c **** 	case 171:
 511:boards/TMC5130_eval.c **** 		// smartEnergy current up step
 512:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 513:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEUP_MASK, TMC5130_SEUP_
 514:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 515:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEUP_MASK, TMC5130_SEUP_SHIFT, *
 516:boards/TMC5130_eval.c **** 		}
 517:boards/TMC5130_eval.c **** 		break;
 518:boards/TMC5130_eval.c **** 	case 172:
 519:boards/TMC5130_eval.c **** 		// smartEnergy hysteresis start
 520:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 521:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMIN_MASK, TMC5130_SEMI
 522:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 523:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMIN_MASK, TMC5130_SEMIN_SHIFT,
 524:boards/TMC5130_eval.c **** 		}
 525:boards/TMC5130_eval.c **** 		break;
 526:boards/TMC5130_eval.c **** 	case 173:
 527:boards/TMC5130_eval.c **** 		// stallGuard2 filter enable
 528:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 529:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SFILT_MASK, TMC5130_SFIL
 530:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 531:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SFILT_MASK, TMC5130_SFILT_SHIFT,
 532:boards/TMC5130_eval.c **** 		}
 533:boards/TMC5130_eval.c **** 		break;
 534:boards/TMC5130_eval.c **** 	case 174:
 535:boards/TMC5130_eval.c **** 		// stallGuard2 threshold
 536:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 537:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SGT_MASK, TMC5130_SGT_SH
 538:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 539:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 540:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SGT_MASK, TMC5130_SGT_SHIFT, *va
 541:boards/TMC5130_eval.c **** 		}
 542:boards/TMC5130_eval.c **** 		break;
 543:boards/TMC5130_eval.c **** 	case 179:
 544:boards/TMC5130_eval.c **** 		// VSense
 545:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 546:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VSENSE_MASK, TMC5130_VSE
 547:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 548:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VSENSE_MASK, TMC5130_VSENSE_SHIF
 549:boards/TMC5130_eval.c **** 		}
 550:boards/TMC5130_eval.c **** 		break;
 551:boards/TMC5130_eval.c **** 	case 180:
 552:boards/TMC5130_eval.c **** 		// smartEnergy actual current
 553:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 554:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_DRVSTATUS, TMC5130_CS_ACTUAL_MASK, TMC5130
 555:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 556:boards/TMC5130_eval.c **** 			errors |= TMC_ERROR_TYPE;
 557:boards/TMC5130_eval.c **** 		}
 558:boards/TMC5130_eval.c **** 		break;
 559:boards/TMC5130_eval.c **** 	case 181:
 560:boards/TMC5130_eval.c **** 		// smartEnergy stall velocity
 561:boards/TMC5130_eval.c **** 		//this function sort of doubles with 182 but is necessary to allow cross chip compliance
 562:boards/TMC5130_eval.c **** 		if(readWrite == READ)
 563:boards/TMC5130_eval.c **** 		{
 564:boards/TMC5130_eval.c **** 			if(TMC5130_FIELD_READ(motorToIC(motor), TMC5130_SWMODE, TMC5130_SG_STOP_MASK, TMC5130_SG_STOP_SH
 565:boards/TMC5130_eval.c **** 			{
 566:boards/TMC5130_eval.c **** 				buffer = tmc5130_readInt(motorToIC(motor), TMC5130_TCOOLTHRS);
 567:boards/TMC5130_eval.c **** 				*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer : 1));
 568:boards/TMC5130_eval.c **** 			}
 569:boards/TMC5130_eval.c **** 			else
 570:boards/TMC5130_eval.c **** 				*value = 0;
 571:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 572:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_SWMODE, TMC5130_SG_STOP_MASK, TMC5130_SG_STOP_SHIF
 573:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 574:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, *value);
 575:boards/TMC5130_eval.c **** 		}
 576:boards/TMC5130_eval.c **** 		break;
 577:boards/TMC5130_eval.c **** 	case 182:
 578:boards/TMC5130_eval.c **** 		// smartEnergy threshold speed
 579:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 580:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_TCOOLTHRS);
 581:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 582:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 583:boards/TMC5130_eval.c **** 			buffer = MIN(0xFFFFF, (1<<24) / ((*value)? *value : 1));
 584:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, buffer);
 585:boards/TMC5130_eval.c **** 		}
 586:boards/TMC5130_eval.c **** 		break;
 587:boards/TMC5130_eval.c **** 	case 184:
 588:boards/TMC5130_eval.c **** 		// Random TOff mode
 589:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 590:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_RNDTF_MASK, TMC5130_RNDT
 591:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 592:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_RNDTF_MASK, TMC5130_RNDTF_SHIFT,
 593:boards/TMC5130_eval.c **** 		}
 594:boards/TMC5130_eval.c **** 		break;
 595:boards/TMC5130_eval.c **** 	case 185:
 596:boards/TMC5130_eval.c **** 		// Chopper synchronization
 597:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 598:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_SYNC_MASK, TMC5130_SYNC_
 599:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 600:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_SYNC_MASK, TMC5130_SYNC_SHIFT, *
 601:boards/TMC5130_eval.c **** 		}
 602:boards/TMC5130_eval.c **** 		break;
 603:boards/TMC5130_eval.c **** 	case 186:
 604:boards/TMC5130_eval.c **** 		// PWM threshold speed
 605:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 606:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_TPWMTHRS);
 607:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer : 1));
 608:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 609:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value : 1));
 610:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TPWMTHRS, *value);
 611:boards/TMC5130_eval.c **** 		}
 612:boards/TMC5130_eval.c **** 		break;
 613:boards/TMC5130_eval.c **** 	case 187:
 614:boards/TMC5130_eval.c **** 		// PWM gradient
 615:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 616:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_GRAD_MASK, TMC5130_PW
 617:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 618:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_GRAD_MASK, TMC5130_PWM_GRAD_S
 619:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_GCONF, TMC5130_EN_PWM_MODE_MASK, TMC5130_EN_PWM_MO
 620:boards/TMC5130_eval.c **** 		}
 621:boards/TMC5130_eval.c **** 		break;
 622:boards/TMC5130_eval.c **** 	case 188:
 623:boards/TMC5130_eval.c **** 		// PWM amplitude
 624:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 625:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_AMPL_MASK, TMC5130_PW
 626:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 627:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_AMPL_MASK, TMC5130_PWM_AMPL_S
 628:boards/TMC5130_eval.c **** 		}
 629:boards/TMC5130_eval.c **** 		break;
 630:boards/TMC5130_eval.c **** 	case 191:
 631:boards/TMC5130_eval.c **** 		// PWM frequency
 632:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 633:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_FREQ_MASK, TMC5130_PW
 634:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 635:boards/TMC5130_eval.c **** 			if(*value >= 0 && *value < 4)
 636:boards/TMC5130_eval.c **** 			{
 637:boards/TMC5130_eval.c **** 				TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_FREQ_MASK, TMC5130_PWM_FREQ_
 638:boards/TMC5130_eval.c **** 			}
 639:boards/TMC5130_eval.c **** 			else
 640:boards/TMC5130_eval.c **** 			{
 641:boards/TMC5130_eval.c **** 				errors |= TMC_ERROR_VALUE;
 642:boards/TMC5130_eval.c **** 			}
 643:boards/TMC5130_eval.c **** 		}
 644:boards/TMC5130_eval.c **** 		break;
 645:boards/TMC5130_eval.c **** 	case 192:
 646:boards/TMC5130_eval.c **** 		// PWM autoscale
 647:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 648:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_AUTOSCALE_MASK, TMC51
 649:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 650:boards/TMC5130_eval.c **** 			if(*value >= 0 && *value < 2)
 651:boards/TMC5130_eval.c **** 			{
 652:boards/TMC5130_eval.c **** 				TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_AUTOSCALE_MASK, TMC5130_PWM_
 653:boards/TMC5130_eval.c **** 			}
 654:boards/TMC5130_eval.c **** 			else
 655:boards/TMC5130_eval.c **** 			{
 656:boards/TMC5130_eval.c **** 				errors |= TMC_ERROR_VALUE;
 657:boards/TMC5130_eval.c **** 			}
 658:boards/TMC5130_eval.c **** 		}
 659:boards/TMC5130_eval.c **** 		break;
 660:boards/TMC5130_eval.c **** 	case 204:
 661:boards/TMC5130_eval.c **** 		// Freewheeling mode
 662:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 663:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_FREEWHEEL_MASK, TMC5130_F
 664:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 665:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_PWMCONF, TMC5130_FREEWHEEL_MASK, TMC5130_FREEWHEEL
 666:boards/TMC5130_eval.c **** 		}
 667:boards/TMC5130_eval.c **** 		break;
 668:boards/TMC5130_eval.c **** 	case 206:
 669:boards/TMC5130_eval.c **** 		// Load value
 670:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 671:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_DRVSTATUS, TMC5130_SG_RESULT_MASK, TMC5130
 672:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 673:boards/TMC5130_eval.c **** 			errors |= TMC_ERROR_TYPE;
 674:boards/TMC5130_eval.c **** 		}
 675:boards/TMC5130_eval.c **** 		break;
 676:boards/TMC5130_eval.c **** 	case 209:
 677:boards/TMC5130_eval.c **** 		// Encoder position
 678:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 679:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_XENC);
 680:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 681:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_XENC, *value);
 682:boards/TMC5130_eval.c **** 		}
 683:boards/TMC5130_eval.c **** 		break;
 684:boards/TMC5130_eval.c **** 	case 210:
 685:boards/TMC5130_eval.c **** 		// Encoder Resolution
 686:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 687:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_ENC_CONST);
 688:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 689:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_ENC_CONST, *value);
 690:boards/TMC5130_eval.c **** 		}
 691:boards/TMC5130_eval.c **** 		break;
 692:boards/TMC5130_eval.c **** 	default:
 693:boards/TMC5130_eval.c **** 		errors |= TMC_ERROR_TYPE;
 694:boards/TMC5130_eval.c **** 		break;
 695:boards/TMC5130_eval.c **** 	}
 696:boards/TMC5130_eval.c **** 	return errors;
 697:boards/TMC5130_eval.c **** }
 698:boards/TMC5130_eval.c **** 
 699:boards/TMC5130_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 700:boards/TMC5130_eval.c **** {
 701:boards/TMC5130_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 702:boards/TMC5130_eval.c **** }
 703:boards/TMC5130_eval.c **** 
 704:boards/TMC5130_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 705:boards/TMC5130_eval.c **** {
 706:boards/TMC5130_eval.c **** 	return handleParameter(READ, motor, type, value);
 707:boards/TMC5130_eval.c **** }
 708:boards/TMC5130_eval.c **** 
 709:boards/TMC5130_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value)
 710:boards/TMC5130_eval.c **** {
  26              		.loc 1 710 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 711:boards/TMC5130_eval.c **** 	if(motor >= TMC5130_MOTORS)
  31              		.loc 1 711 2 view .LVU1
  32              		.loc 1 711 4 is_stmt 0 view .LVU2
  33 0000 18B9     		cbnz	r0, .L3
 712:boards/TMC5130_eval.c **** 		return TMC_ERROR_MOTOR;
 713:boards/TMC5130_eval.c **** 
 714:boards/TMC5130_eval.c **** 	*value = TMC5130.velocity;
  34              		.loc 1 714 2 is_stmt 1 view .LVU3
  35              		.loc 1 714 18 is_stmt 0 view .LVU4
  36 0002 034B     		ldr	r3, .L4
  37              		.loc 1 714 9 view .LVU5
  38 0004 5B68     		ldr	r3, [r3, #4]
  39 0006 0B60     		str	r3, [r1]
 715:boards/TMC5130_eval.c **** 
 716:boards/TMC5130_eval.c **** 	return TMC_ERROR_NONE;
  40              		.loc 1 716 2 is_stmt 1 view .LVU6
  41              		.loc 1 716 9 is_stmt 0 view .LVU7
  42 0008 7047     		bx	lr
  43              	.L3:
 712:boards/TMC5130_eval.c **** 		return TMC_ERROR_MOTOR;
  44              		.loc 1 712 10 view .LVU8
  45 000a 0820     		movs	r0, #8
  46              	.LVL1:
 717:boards/TMC5130_eval.c **** }
  47              		.loc 1 717 1 view .LVU9
  48 000c 7047     		bx	lr
  49              	.L5:
  50 000e 00BF     		.align	2
  51              	.L4:
  52 0010 00000000 		.word	.LANCHOR0
  53              		.cfi_endproc
  54              	.LFE13:
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	checkErrors:
  63              	.LVL2:
  64              	.LFB17:
 718:boards/TMC5130_eval.c **** 
 719:boards/TMC5130_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
 720:boards/TMC5130_eval.c **** {
 721:boards/TMC5130_eval.c **** 	UNUSED(motor);
 722:boards/TMC5130_eval.c **** 
 723:boards/TMC5130_eval.c **** 	tmc5130_writeInt(&TMC5130, address, value);
 724:boards/TMC5130_eval.c **** }
 725:boards/TMC5130_eval.c **** 
 726:boards/TMC5130_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
 727:boards/TMC5130_eval.c **** {
 728:boards/TMC5130_eval.c **** 	UNUSED(motor);
 729:boards/TMC5130_eval.c **** 
 730:boards/TMC5130_eval.c **** 	*value = tmc5130_readInt(&TMC5130, address);
 731:boards/TMC5130_eval.c **** }
 732:boards/TMC5130_eval.c **** 
 733:boards/TMC5130_eval.c **** static void periodicJob(uint32_t tick)
 734:boards/TMC5130_eval.c **** {
 735:boards/TMC5130_eval.c **** 	tmc5130_periodicJob(&TMC5130, tick);
 736:boards/TMC5130_eval.c **** }
 737:boards/TMC5130_eval.c **** 
 738:boards/TMC5130_eval.c **** static void checkErrors(uint32_t tick)
 739:boards/TMC5130_eval.c **** {
  65              		.loc 1 739 1 is_stmt 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
 740:boards/TMC5130_eval.c **** 	UNUSED(tick);
  70              		.loc 1 740 2 view .LVU11
 741:boards/TMC5130_eval.c **** 
 742:boards/TMC5130_eval.c **** 	Evalboards.ch1.errors = 0;
  71              		.loc 1 742 2 view .LVU12
  72              		.loc 1 742 24 is_stmt 0 view .LVU13
  73 0014 014B     		ldr	r3, .L7
  74 0016 0022     		movs	r2, #0
  75 0018 9A60     		str	r2, [r3, #8]
 743:boards/TMC5130_eval.c **** }
  76              		.loc 1 743 1 view .LVU14
  77 001a 7047     		bx	lr
  78              	.L8:
  79              		.align	2
  80              	.L7:
  81 001c 00000000 		.word	Evalboards
  82              		.cfi_endproc
  83              	.LFE17:
  85              		.align	1
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu softvfp
  91              	userFunction:
  92              	.LVL3:
  93              	.LFB18:
 744:boards/TMC5130_eval.c **** 
 745:boards/TMC5130_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 746:boards/TMC5130_eval.c **** {
  94              		.loc 1 746 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
 747:boards/TMC5130_eval.c **** 	uint32_t buffer;
  98              		.loc 1 747 2 view .LVU16
 748:boards/TMC5130_eval.c **** 	uint32_t errors = 0;
  99              		.loc 1 748 2 view .LVU17
 749:boards/TMC5130_eval.c **** 
 750:boards/TMC5130_eval.c **** 	UNUSED(motor);
 100              		.loc 1 750 2 view .LVU18
 751:boards/TMC5130_eval.c **** 
 752:boards/TMC5130_eval.c **** 	switch(type)
 101              		.loc 1 752 2 view .LVU19
 102 0020 0728     		cmp	r0, #7
 746:boards/TMC5130_eval.c **** 	uint32_t buffer;
 103              		.loc 1 746 1 is_stmt 0 view .LVU20
 104 0022 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 105              	.LCFI0:
 106              		.cfi_def_cfa_offset 24
 107              		.cfi_offset 3, -24
 108              		.cfi_offset 4, -20
 109              		.cfi_offset 5, -16
 110              		.cfi_offset 6, -12
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 746:boards/TMC5130_eval.c **** 	uint32_t buffer;
 113              		.loc 1 746 1 view .LVU21
 114 0024 1446     		mov	r4, r2
 115              		.loc 1 752 2 view .LVU22
 116 0026 08D8     		bhi	.L10
 117 0028 0138     		subs	r0, r0, #1
 118              	.LVL4:
 119              		.loc 1 752 2 view .LVU23
 120 002a 0628     		cmp	r0, #6
 121 002c 0BD8     		bhi	.L11
 122 002e DFE800F0 		tbb	[pc, r0]
 123              	.L13:
 124 0032 32       		.byte	(.L19-.L13)/2
 125 0033 52       		.byte	(.L18-.L13)/2
 126 0034 50       		.byte	(.L33-.L13)/2
 127 0035 64       		.byte	(.L16-.L13)/2
 128 0036 85       		.byte	(.L15-.L13)/2
 129 0037 92       		.byte	(.L14-.L13)/2
 130 0038 9A       		.byte	(.L12-.L13)/2
 131              	.LVL5:
 132 0039 00       		.p2align 1
 133              	.L10:
 134              		.loc 1 752 2 view .LVU24
 135 003a FC28     		cmp	r0, #252
 136 003c 00F09F80 		beq	.L20
 137 0040 0424     		movs	r4, #4
 138              	.LVL6:
 139              	.L9:
 753:boards/TMC5130_eval.c **** 	{
 754:boards/TMC5130_eval.c **** 	case 0:  // simulate reference switches, set high to support external ref swiches
 755:boards/TMC5130_eval.c **** 		/*
 756:boards/TMC5130_eval.c **** 		 * The the TMC5130 ref switch input is pulled high by external resistor an can be pulled low eith
 757:boards/TMC5130_eval.c **** 		 * this µC or external signal. To use external signal make sure the signals from µC are high or
 758:boards/TMC5130_eval.c **** 		 */
 759:boards/TMC5130_eval.c **** 		if(!(*value & ~3))
 760:boards/TMC5130_eval.c **** 		{
 761:boards/TMC5130_eval.c **** 			if(*value & (1<<0))
 762:boards/TMC5130_eval.c **** 			{
 763:boards/TMC5130_eval.c **** 				HAL.IOs->config->toInput(Pins.REFR_UC); // pull up -> set it to floating causes high
 764:boards/TMC5130_eval.c **** 			}
 765:boards/TMC5130_eval.c **** 			else
 766:boards/TMC5130_eval.c **** 			{
 767:boards/TMC5130_eval.c **** 				HAL.IOs->config->toOutput(Pins.REFR_UC);
 768:boards/TMC5130_eval.c **** 				HAL.IOs->config->setLow(Pins.REFR_UC);
 769:boards/TMC5130_eval.c **** 			}
 770:boards/TMC5130_eval.c **** 
 771:boards/TMC5130_eval.c **** 			if(*value & (1<<1))
 772:boards/TMC5130_eval.c **** 			{
 773:boards/TMC5130_eval.c **** 				HAL.IOs->config->toInput(Pins.REFL_UC); // pull up -> set it to floating causes high
 774:boards/TMC5130_eval.c **** 			}
 775:boards/TMC5130_eval.c **** 			else
 776:boards/TMC5130_eval.c **** 			{
 777:boards/TMC5130_eval.c **** 				HAL.IOs->config->toOutput(Pins.REFL_UC);
 778:boards/TMC5130_eval.c **** 				HAL.IOs->config->setLow(Pins.REFL_UC);
 779:boards/TMC5130_eval.c **** 			}
 780:boards/TMC5130_eval.c **** 		}
 781:boards/TMC5130_eval.c **** 		else
 782:boards/TMC5130_eval.c **** 		{
 783:boards/TMC5130_eval.c **** 			errors |= TMC_ERROR_VALUE;
 784:boards/TMC5130_eval.c **** 		}
 785:boards/TMC5130_eval.c **** 		break;
 786:boards/TMC5130_eval.c **** 	case 1:  // set analogue current duty
 787:boards/TMC5130_eval.c **** 		/*
 788:boards/TMC5130_eval.c **** 		 * Current will be defined by analogue *value voltage or current signal. In any case this functio
 789:boards/TMC5130_eval.c **** 		 * will generate a analogue voltage by PWM for up to 50% duty and a switch for the other 50%.
 790:boards/TMC5130_eval.c **** 		 * The reference voltage will be AIN_REF = VCC_IO * *value/20000 with *value = {0..20000}
 791:boards/TMC5130_eval.c **** 		 */
 792:boards/TMC5130_eval.c **** 
 793:boards/TMC5130_eval.c **** 		if(*value <= 20000)
 794:boards/TMC5130_eval.c **** 		{
 795:boards/TMC5130_eval.c **** 			if(*value > 10000)
 796:boards/TMC5130_eval.c **** 				HAL.IOs->config->setHigh(Pins.AIN_REF_SW);
 797:boards/TMC5130_eval.c **** 			else
 798:boards/TMC5130_eval.c **** 				HAL.IOs->config->setLow(Pins.AIN_REF_SW);
 799:boards/TMC5130_eval.c **** 
 800:boards/TMC5130_eval.c **** 			Timer.setDuty(TIMER_CHANNEL_1, *value % 10001);
 801:boards/TMC5130_eval.c **** 		}
 802:boards/TMC5130_eval.c **** 		else
 803:boards/TMC5130_eval.c **** 		{
 804:boards/TMC5130_eval.c **** 			errors |= TMC_ERROR_VALUE;
 805:boards/TMC5130_eval.c **** 		}
 806:boards/TMC5130_eval.c **** 		break;
 807:boards/TMC5130_eval.c **** 	case 2:  // Use internal clock
 808:boards/TMC5130_eval.c **** 		/*
 809:boards/TMC5130_eval.c **** 		 * Internal clock will be enabled by calling this function with a *value != 0 and unpower and rep
 810:boards/TMC5130_eval.c **** 		 */
 811:boards/TMC5130_eval.c **** 		if(*value)
 812:boards/TMC5130_eval.c **** 		{
 813:boards/TMC5130_eval.c **** 			HAL.IOs->config->toOutput(&HAL.IOs->pins->CLK16);
 814:boards/TMC5130_eval.c **** 			HAL.IOs->config->setLow(&HAL.IOs->pins->CLK16);
 815:boards/TMC5130_eval.c **** 		}
 816:boards/TMC5130_eval.c **** 		else
 817:boards/TMC5130_eval.c **** 		{
 818:boards/TMC5130_eval.c **** 			HAL.IOs->config->reset(&HAL.IOs->pins->CLK16);
 819:boards/TMC5130_eval.c **** 		}
 820:boards/TMC5130_eval.c **** 		break;
 821:boards/TMC5130_eval.c **** 	case 3:
 822:boards/TMC5130_eval.c **** 		// Unused
 823:boards/TMC5130_eval.c **** 		break;
 824:boards/TMC5130_eval.c **** 	case 4:  // set or release/read ENCB_[DCEN_CFG4]
 825:boards/TMC5130_eval.c **** 		switch(buffer = *value)
 826:boards/TMC5130_eval.c **** 		{
 827:boards/TMC5130_eval.c **** 		case 0:
 828:boards/TMC5130_eval.c **** 			HAL.IOs->config->toOutput(Pins.ENCB_DCEN_CFG4);
 829:boards/TMC5130_eval.c **** 			HAL.IOs->config->setLow(Pins.ENCB_DCEN_CFG4);
 830:boards/TMC5130_eval.c **** 			break;
 831:boards/TMC5130_eval.c **** 		case 1:
 832:boards/TMC5130_eval.c **** 			HAL.IOs->config->toOutput(Pins.ENCB_DCEN_CFG4);
 833:boards/TMC5130_eval.c **** 			HAL.IOs->config->setHigh(Pins.ENCB_DCEN_CFG4);
 834:boards/TMC5130_eval.c **** 			break;
 835:boards/TMC5130_eval.c **** 		default:
 836:boards/TMC5130_eval.c **** 			HAL.IOs->config->toInput(Pins.ENCB_DCEN_CFG4);
 837:boards/TMC5130_eval.c **** 			buffer = HAL.IOs->config->isHigh(Pins.ENCB_DCEN_CFG4);
 838:boards/TMC5130_eval.c **** 			break;
 839:boards/TMC5130_eval.c **** 		}
 840:boards/TMC5130_eval.c **** 		*value = buffer;
 841:boards/TMC5130_eval.c **** 		break;
 842:boards/TMC5130_eval.c **** 	case 5:  // read interrupt pin SWN_DIAG0
 843:boards/TMC5130_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.SWN_DIAG0))? 1 : 0;
 844:boards/TMC5130_eval.c **** 		break;
 845:boards/TMC5130_eval.c **** 	case 6:  // read interrupt pin SWP_DIAG1
 846:boards/TMC5130_eval.c **** 		*value = (HAL.IOs->config->isHigh(Pins.SWP_DIAG1))? 1 : 0;
 847:boards/TMC5130_eval.c **** 		break;
 848:boards/TMC5130_eval.c **** 	case 7:  // enable single wire interface (SWSEL)
 849:boards/TMC5130_eval.c **** 		if(*value == 1)
 850:boards/TMC5130_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 851:boards/TMC5130_eval.c **** 		else
 852:boards/TMC5130_eval.c **** 			HAL.IOs->config->setLow(Pins.SWSEL);
 853:boards/TMC5130_eval.c **** 		break;
 854:boards/TMC5130_eval.c **** 	case 252:
 855:boards/TMC5130_eval.c **** 		if(*value)
 856:boards/TMC5130_eval.c **** 		{
 857:boards/TMC5130_eval.c **** 			HAL.IOs->config->toOutput(Pins.ENCB_DCEN_CFG4);
 858:boards/TMC5130_eval.c **** 			HAL.IOs->config->setLow(Pins.ENCB_DCEN_CFG4);
 859:boards/TMC5130_eval.c **** 		}
 860:boards/TMC5130_eval.c **** 		else
 861:boards/TMC5130_eval.c **** 		{
 862:boards/TMC5130_eval.c **** 			HAL.IOs->config->toInput(Pins.ENCB_DCEN_CFG4);
 863:boards/TMC5130_eval.c **** 		}
 864:boards/TMC5130_eval.c **** 		break;
 865:boards/TMC5130_eval.c **** 	default:
 866:boards/TMC5130_eval.c **** 		errors |= TMC_ERROR_TYPE;
 867:boards/TMC5130_eval.c **** 		break;
 868:boards/TMC5130_eval.c **** 	}
 869:boards/TMC5130_eval.c **** 	return errors;
 870:boards/TMC5130_eval.c **** }
 140              		.loc 1 870 1 view .LVU25
 141 0042 2046     		mov	r0, r4
 142 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 143              	.LVL7:
 144              	.L11:
 759:boards/TMC5130_eval.c **** 		{
 145              		.loc 1 759 3 is_stmt 1 view .LVU26
 759:boards/TMC5130_eval.c **** 		{
 146              		.loc 1 759 8 is_stmt 0 view .LVU27
 147 0046 1268     		ldr	r2, [r2]
 148              	.LVL8:
 759:boards/TMC5130_eval.c **** 		{
 149              		.loc 1 759 5 view .LVU28
 150 0048 32F00303 		bics	r3, r2, #3
 151 004c 40F0A880 		bne	.L35
 761:boards/TMC5130_eval.c **** 			{
 152              		.loc 1 761 4 is_stmt 1 view .LVU29
 153 0050 544B     		ldr	r3, .L43
 154 0052 554D     		ldr	r5, .L43+4
 155 0054 DE68     		ldr	r6, [r3, #12]
 156 0056 D5F89402 		ldr	r0, [r5, #660]
 157 005a 3368     		ldr	r3, [r6]
 761:boards/TMC5130_eval.c **** 			{
 158              		.loc 1 761 6 is_stmt 0 view .LVU30
 159 005c D207     		lsls	r2, r2, #31
 160 005e 0BD5     		bpl	.L21
 763:boards/TMC5130_eval.c **** 			}
 161              		.loc 1 763 5 is_stmt 1 view .LVU31
 162 0060 1B69     		ldr	r3, [r3, #16]
 163              	.LVL9:
 164              	.L37:
 768:boards/TMC5130_eval.c **** 			}
 165              		.loc 1 768 5 is_stmt 0 view .LVU32
 166 0062 9847     		blx	r3
 167              	.LVL10:
 771:boards/TMC5130_eval.c **** 			{
 168              		.loc 1 771 4 is_stmt 1 view .LVU33
 771:boards/TMC5130_eval.c **** 			{
 169              		.loc 1 771 14 is_stmt 0 view .LVU34
 170 0064 2468     		ldr	r4, [r4]
 171              	.LVL11:
 771:boards/TMC5130_eval.c **** 			{
 172              		.loc 1 771 14 view .LVU35
 173 0066 3268     		ldr	r2, [r6]
 174 0068 D5F89002 		ldr	r0, [r5, #656]
 771:boards/TMC5130_eval.c **** 			{
 175              		.loc 1 771 6 view .LVU36
 176 006c 14F00204 		ands	r4, r4, #2
 177 0070 09D0     		beq	.L23
 773:boards/TMC5130_eval.c **** 			}
 178              		.loc 1 773 5 is_stmt 1 view .LVU37
 179 0072 1369     		ldr	r3, [r2, #16]
 180              	.L41:
 858:boards/TMC5130_eval.c **** 		}
 181              		.loc 1 858 4 is_stmt 0 view .LVU38
 182 0074 9847     		blx	r3
 183              	.LVL12:
 184 0076 2CE0     		b	.L33
 185              	.LVL13:
 186              	.L21:
 767:boards/TMC5130_eval.c **** 				HAL.IOs->config->setLow(Pins.REFR_UC);
 187              		.loc 1 767 5 is_stmt 1 view .LVU39
 188 0078 DB68     		ldr	r3, [r3, #12]
 189 007a 9847     		blx	r3
 190              	.LVL14:
 768:boards/TMC5130_eval.c **** 			}
 191              		.loc 1 768 5 view .LVU40
 768:boards/TMC5130_eval.c **** 			}
 192              		.loc 1 768 20 is_stmt 0 view .LVU41
 193 007c 3368     		ldr	r3, [r6]
 768:boards/TMC5130_eval.c **** 			}
 194              		.loc 1 768 5 view .LVU42
 195 007e D5F89402 		ldr	r0, [r5, #660]
 196 0082 9B69     		ldr	r3, [r3, #24]
 197 0084 EDE7     		b	.L37
 198              	.LVL15:
 199              	.L23:
 777:boards/TMC5130_eval.c **** 				HAL.IOs->config->setLow(Pins.REFL_UC);
 200              		.loc 1 777 5 is_stmt 1 view .LVU43
 201 0086 D368     		ldr	r3, [r2, #12]
 202 0088 9847     		blx	r3
 203              	.LVL16:
 778:boards/TMC5130_eval.c **** 			}
 204              		.loc 1 778 5 view .LVU44
 778:boards/TMC5130_eval.c **** 			}
 205              		.loc 1 778 20 is_stmt 0 view .LVU45
 206 008a 3368     		ldr	r3, [r6]
 778:boards/TMC5130_eval.c **** 			}
 207              		.loc 1 778 5 view .LVU46
 208 008c D5F89002 		ldr	r0, [r5, #656]
 209 0090 9B69     		ldr	r3, [r3, #24]
 210              	.L40:
 862:boards/TMC5130_eval.c **** 		}
 211              		.loc 1 862 4 view .LVU47
 212 0092 9847     		blx	r3
 213              	.LVL17:
 214 0094 D5E7     		b	.L9
 215              	.LVL18:
 216              	.L19:
 793:boards/TMC5130_eval.c **** 		{
 217              		.loc 1 793 3 is_stmt 1 view .LVU48
 793:boards/TMC5130_eval.c **** 		{
 218              		.loc 1 793 6 is_stmt 0 view .LVU49
 219 0096 1268     		ldr	r2, [r2]
 220              	.LVL19:
 793:boards/TMC5130_eval.c **** 		{
 221              		.loc 1 793 5 view .LVU50
 222 0098 44F62063 		movw	r3, #20000
 223 009c 9A42     		cmp	r2, r3
 224 009e 7FDC     		bgt	.L35
 795:boards/TMC5130_eval.c **** 				HAL.IOs->config->setHigh(Pins.AIN_REF_SW);
 225              		.loc 1 795 4 is_stmt 1 view .LVU51
 226 00a0 414B     		ldr	r3, .L43+4
 227 00a2 D3F8B402 		ldr	r0, [r3, #692]
 228 00a6 3F4B     		ldr	r3, .L43
 229 00a8 DB68     		ldr	r3, [r3, #12]
 795:boards/TMC5130_eval.c **** 				HAL.IOs->config->setHigh(Pins.AIN_REF_SW);
 230              		.loc 1 795 6 is_stmt 0 view .LVU52
 231 00aa 42F21071 		movw	r1, #10000
 232              	.LVL20:
 795:boards/TMC5130_eval.c **** 				HAL.IOs->config->setHigh(Pins.AIN_REF_SW);
 233              		.loc 1 795 6 view .LVU53
 234 00ae 1B68     		ldr	r3, [r3]
 235 00b0 8A42     		cmp	r2, r1
 796:boards/TMC5130_eval.c **** 			else
 236              		.loc 1 796 5 is_stmt 1 view .LVU54
 237 00b2 CCBF     		ite	gt
 238 00b4 5B69     		ldrgt	r3, [r3, #20]
 798:boards/TMC5130_eval.c **** 
 239              		.loc 1 798 5 view .LVU55
 240 00b6 9B69     		ldrle	r3, [r3, #24]
 241 00b8 9847     		blx	r3
 242              	.LVL21:
 800:boards/TMC5130_eval.c **** 		}
 243              		.loc 1 800 4 view .LVU56
 800:boards/TMC5130_eval.c **** 		}
 244              		.loc 1 800 42 is_stmt 0 view .LVU57
 245 00ba 2268     		ldr	r2, [r4]
 246 00bc 42F21173 		movw	r3, #10001
 247 00c0 92FBF3F1 		sdiv	r1, r2, r3
 248 00c4 03FB1121 		mls	r1, r3, r1, r2
 800:boards/TMC5130_eval.c **** 		}
 249              		.loc 1 800 9 view .LVU58
 250 00c8 384B     		ldr	r3, .L43+8
 800:boards/TMC5130_eval.c **** 		}
 251              		.loc 1 800 4 view .LVU59
 252 00ca 89B2     		uxth	r1, r1
 253 00cc 9B68     		ldr	r3, [r3, #8]
 254 00ce 0020     		movs	r0, #0
 255 00d0 9847     		blx	r3
 256              	.LVL22:
 257              	.L33:
 748:boards/TMC5130_eval.c **** 
 258              		.loc 1 748 11 view .LVU60
 259 00d2 0024     		movs	r4, #0
 260 00d4 B5E7     		b	.L9
 261              	.LVL23:
 262              	.L18:
 811:boards/TMC5130_eval.c **** 		{
 263              		.loc 1 811 3 is_stmt 1 view .LVU61
 264 00d6 334B     		ldr	r3, .L43
 811:boards/TMC5130_eval.c **** 		{
 265              		.loc 1 811 5 is_stmt 0 view .LVU62
 266 00d8 1468     		ldr	r4, [r2]
 267 00da DD68     		ldr	r5, [r3, #12]
 268 00dc D5E90030 		ldrd	r3, r0, [r5]
 269 00e0 00F5F470 		add	r0, r0, #488
 270 00e4 3CB1     		cbz	r4, .L26
 813:boards/TMC5130_eval.c **** 			HAL.IOs->config->setLow(&HAL.IOs->pins->CLK16);
 271              		.loc 1 813 4 is_stmt 1 view .LVU63
 272 00e6 DB68     		ldr	r3, [r3, #12]
 273 00e8 9847     		blx	r3
 274              	.LVL24:
 814:boards/TMC5130_eval.c **** 		}
 275              		.loc 1 814 4 view .LVU64
 814:boards/TMC5130_eval.c **** 		}
 276              		.loc 1 814 19 is_stmt 0 view .LVU65
 277 00ea D5E90030 		ldrd	r3, r0, [r5]
 814:boards/TMC5130_eval.c **** 		}
 278              		.loc 1 814 4 view .LVU66
 279 00ee 9B69     		ldr	r3, [r3, #24]
 280 00f0 00F5F470 		add	r0, r0, #488
 281 00f4 BEE7     		b	.L41
 282              	.LVL25:
 283              	.L26:
 818:boards/TMC5130_eval.c **** 		}
 284              		.loc 1 818 4 is_stmt 1 view .LVU67
 285 00f6 9B68     		ldr	r3, [r3, #8]
 286 00f8 CBE7     		b	.L40
 287              	.L16:
 825:boards/TMC5130_eval.c **** 		{
 288              		.loc 1 825 3 view .LVU68
 289 00fa 2A4B     		ldr	r3, .L43
 290 00fc 2A4E     		ldr	r6, .L43+4
 291 00fe DF68     		ldr	r7, [r3, #12]
 825:boards/TMC5130_eval.c **** 		{
 292              		.loc 1 825 19 is_stmt 0 view .LVU69
 293 0100 1568     		ldr	r5, [r2]
 294              	.LVL26:
 825:boards/TMC5130_eval.c **** 		{
 295              		.loc 1 825 19 view .LVU70
 296 0102 3B68     		ldr	r3, [r7]
 297 0104 D6F8A002 		ldr	r0, [r6, #672]
 298 0108 55B1     		cbz	r5, .L27
 299 010a 012D     		cmp	r5, #1
 300 010c 11D0     		beq	.L28
 836:boards/TMC5130_eval.c **** 			buffer = HAL.IOs->config->isHigh(Pins.ENCB_DCEN_CFG4);
 301              		.loc 1 836 4 is_stmt 1 view .LVU71
 302 010e 1B69     		ldr	r3, [r3, #16]
 303 0110 9847     		blx	r3
 304              	.LVL27:
 837:boards/TMC5130_eval.c **** 			break;
 305              		.loc 1 837 4 view .LVU72
 837:boards/TMC5130_eval.c **** 			break;
 306              		.loc 1 837 28 is_stmt 0 view .LVU73
 307 0112 3B68     		ldr	r3, [r7]
 837:boards/TMC5130_eval.c **** 			break;
 308              		.loc 1 837 13 view .LVU74
 309 0114 D6F8A002 		ldr	r0, [r6, #672]
 310 0118 5B6A     		ldr	r3, [r3, #36]
 311 011a 9847     		blx	r3
 312              	.LVL28:
 313 011c 0546     		mov	r5, r0
 314              	.LVL29:
 838:boards/TMC5130_eval.c **** 		}
 315              		.loc 1 838 4 is_stmt 1 view .LVU75
 316 011e 06E0     		b	.L30
 317              	.LVL30:
 318              	.L27:
 828:boards/TMC5130_eval.c **** 			HAL.IOs->config->setLow(Pins.ENCB_DCEN_CFG4);
 319              		.loc 1 828 4 view .LVU76
 320 0120 DB68     		ldr	r3, [r3, #12]
 321 0122 9847     		blx	r3
 322              	.LVL31:
 829:boards/TMC5130_eval.c **** 			break;
 323              		.loc 1 829 4 view .LVU77
 829:boards/TMC5130_eval.c **** 			break;
 324              		.loc 1 829 19 is_stmt 0 view .LVU78
 325 0124 3B68     		ldr	r3, [r7]
 829:boards/TMC5130_eval.c **** 			break;
 326              		.loc 1 829 4 view .LVU79
 327 0126 9B69     		ldr	r3, [r3, #24]
 328              	.L39:
 833:boards/TMC5130_eval.c **** 			break;
 329              		.loc 1 833 4 view .LVU80
 330 0128 D6F8A002 		ldr	r0, [r6, #672]
 331 012c 9847     		blx	r3
 332              	.LVL32:
 834:boards/TMC5130_eval.c **** 		default:
 333              		.loc 1 834 4 is_stmt 1 view .LVU81
 334              	.L30:
 840:boards/TMC5130_eval.c **** 		break;
 335              		.loc 1 840 3 view .LVU82
 840:boards/TMC5130_eval.c **** 		break;
 336              		.loc 1 840 10 is_stmt 0 view .LVU83
 337 012e 2560     		str	r5, [r4]
 841:boards/TMC5130_eval.c **** 	case 5:  // read interrupt pin SWN_DIAG0
 338              		.loc 1 841 3 is_stmt 1 view .LVU84
 339 0130 CFE7     		b	.L33
 340              	.LVL33:
 341              	.L28:
 832:boards/TMC5130_eval.c **** 			HAL.IOs->config->setHigh(Pins.ENCB_DCEN_CFG4);
 342              		.loc 1 832 4 view .LVU85
 343 0132 DB68     		ldr	r3, [r3, #12]
 344 0134 9847     		blx	r3
 345              	.LVL34:
 833:boards/TMC5130_eval.c **** 			break;
 346              		.loc 1 833 4 view .LVU86
 833:boards/TMC5130_eval.c **** 			break;
 347              		.loc 1 833 19 is_stmt 0 view .LVU87
 348 0136 3B68     		ldr	r3, [r7]
 833:boards/TMC5130_eval.c **** 			break;
 349              		.loc 1 833 4 view .LVU88
 350 0138 5B69     		ldr	r3, [r3, #20]
 351 013a F5E7     		b	.L39
 352              	.LVL35:
 353              	.L15:
 843:boards/TMC5130_eval.c **** 		break;
 354              		.loc 1 843 3 is_stmt 1 view .LVU89
 843:boards/TMC5130_eval.c **** 		break;
 355              		.loc 1 843 16 is_stmt 0 view .LVU90
 356 013c 194B     		ldr	r3, .L43
 843:boards/TMC5130_eval.c **** 		break;
 357              		.loc 1 843 13 view .LVU91
 358 013e 1A4A     		ldr	r2, .L43+4
 359              	.LVL36:
 843:boards/TMC5130_eval.c **** 		break;
 360              		.loc 1 843 20 view .LVU92
 361 0140 DB68     		ldr	r3, [r3, #12]
 843:boards/TMC5130_eval.c **** 		break;
 362              		.loc 1 843 13 view .LVU93
 363 0142 D2F8AC02 		ldr	r0, [r2, #684]
 843:boards/TMC5130_eval.c **** 		break;
 364              		.loc 1 843 28 view .LVU94
 365 0146 1B68     		ldr	r3, [r3]
 843:boards/TMC5130_eval.c **** 		break;
 366              		.loc 1 843 13 view .LVU95
 367 0148 5B6A     		ldr	r3, [r3, #36]
 368              	.L42:
 846:boards/TMC5130_eval.c **** 		break;
 369              		.loc 1 846 13 view .LVU96
 370 014a 9847     		blx	r3
 371              	.LVL37:
 846:boards/TMC5130_eval.c **** 		break;
 372              		.loc 1 846 57 view .LVU97
 373 014c 0038     		subs	r0, r0, #0
 374 014e 18BF     		it	ne
 375 0150 0120     		movne	r0, #1
 846:boards/TMC5130_eval.c **** 		break;
 376              		.loc 1 846 10 view .LVU98
 377 0152 2060     		str	r0, [r4]
 847:boards/TMC5130_eval.c **** 	case 7:  // enable single wire interface (SWSEL)
 378              		.loc 1 847 3 is_stmt 1 view .LVU99
 379 0154 BDE7     		b	.L33
 380              	.LVL38:
 381              	.L14:
 846:boards/TMC5130_eval.c **** 		break;
 382              		.loc 1 846 3 view .LVU100
 846:boards/TMC5130_eval.c **** 		break;
 383              		.loc 1 846 16 is_stmt 0 view .LVU101
 384 0156 134B     		ldr	r3, .L43
 846:boards/TMC5130_eval.c **** 		break;
 385              		.loc 1 846 13 view .LVU102
 386 0158 134A     		ldr	r2, .L43+4
 387              	.LVL39:
 846:boards/TMC5130_eval.c **** 		break;
 388              		.loc 1 846 20 view .LVU103
 389 015a DB68     		ldr	r3, [r3, #12]
 846:boards/TMC5130_eval.c **** 		break;
 390              		.loc 1 846 13 view .LVU104
 391 015c D2F8B002 		ldr	r0, [r2, #688]
 846:boards/TMC5130_eval.c **** 		break;
 392              		.loc 1 846 28 view .LVU105
 393 0160 1B68     		ldr	r3, [r3]
 846:boards/TMC5130_eval.c **** 		break;
 394              		.loc 1 846 13 view .LVU106
 395 0162 5B6A     		ldr	r3, [r3, #36]
 396 0164 F1E7     		b	.L42
 397              	.LVL40:
 398              	.L12:
 849:boards/TMC5130_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 399              		.loc 1 849 3 is_stmt 1 view .LVU107
 400 0166 104B     		ldr	r3, .L43+4
 849:boards/TMC5130_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 401              		.loc 1 849 5 is_stmt 0 view .LVU108
 402 0168 1268     		ldr	r2, [r2]
 403              	.LVL41:
 849:boards/TMC5130_eval.c **** 			HAL.IOs->config->setHigh(Pins.SWSEL);
 404              		.loc 1 849 5 view .LVU109
 405 016a D3F8A802 		ldr	r0, [r3, #680]
 406 016e 0D4B     		ldr	r3, .L43
 407 0170 DB68     		ldr	r3, [r3, #12]
 408 0172 1B68     		ldr	r3, [r3]
 409 0174 012A     		cmp	r2, #1
 850:boards/TMC5130_eval.c **** 		else
 410              		.loc 1 850 4 is_stmt 1 view .LVU110
 411 0176 0CBF     		ite	eq
 412 0178 5B69     		ldreq	r3, [r3, #20]
 852:boards/TMC5130_eval.c **** 		break;
 413              		.loc 1 852 4 view .LVU111
 414 017a 9B69     		ldrne	r3, [r3, #24]
 415 017c 7AE7     		b	.L41
 416              	.LVL42:
 417              	.L20:
 855:boards/TMC5130_eval.c **** 		{
 418              		.loc 1 855 3 view .LVU112
 419 017e 094B     		ldr	r3, .L43
 420 0180 094D     		ldr	r5, .L43+4
 421 0182 DE68     		ldr	r6, [r3, #12]
 855:boards/TMC5130_eval.c **** 		{
 422              		.loc 1 855 5 is_stmt 0 view .LVU113
 423 0184 1468     		ldr	r4, [r2]
 424 0186 3368     		ldr	r3, [r6]
 425 0188 D5F8A002 		ldr	r0, [r5, #672]
 426              	.LVL43:
 855:boards/TMC5130_eval.c **** 		{
 427              		.loc 1 855 5 view .LVU114
 428 018c 34B1     		cbz	r4, .L32
 857:boards/TMC5130_eval.c **** 			HAL.IOs->config->setLow(Pins.ENCB_DCEN_CFG4);
 429              		.loc 1 857 4 is_stmt 1 view .LVU115
 430 018e DB68     		ldr	r3, [r3, #12]
 431 0190 9847     		blx	r3
 432              	.LVL44:
 858:boards/TMC5130_eval.c **** 		}
 433              		.loc 1 858 4 view .LVU116
 858:boards/TMC5130_eval.c **** 		}
 434              		.loc 1 858 19 is_stmt 0 view .LVU117
 435 0192 3368     		ldr	r3, [r6]
 858:boards/TMC5130_eval.c **** 		}
 436              		.loc 1 858 4 view .LVU118
 437 0194 D5F8A002 		ldr	r0, [r5, #672]
 438 0198 9B69     		ldr	r3, [r3, #24]
 439 019a 6BE7     		b	.L41
 440              	.LVL45:
 441              	.L32:
 862:boards/TMC5130_eval.c **** 		}
 442              		.loc 1 862 4 is_stmt 1 view .LVU119
 443 019c 1B69     		ldr	r3, [r3, #16]
 444 019e 78E7     		b	.L40
 445              	.LVL46:
 446              	.L35:
 783:boards/TMC5130_eval.c **** 		}
 447              		.loc 1 783 11 is_stmt 0 view .LVU120
 448 01a0 1024     		movs	r4, #16
 449              	.LVL47:
 869:boards/TMC5130_eval.c **** }
 450              		.loc 1 869 2 is_stmt 1 view .LVU121
 869:boards/TMC5130_eval.c **** }
 451              		.loc 1 869 9 is_stmt 0 view .LVU122
 452 01a2 4EE7     		b	.L9
 453              	.L44:
 454              		.align	2
 455              	.L43:
 456 01a4 00000000 		.word	HAL
 457 01a8 00000000 		.word	.LANCHOR0
 458 01ac 00000000 		.word	Timer
 459              		.cfi_endproc
 460              	.LFE18:
 462              		.align	1
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu softvfp
 468              	deInit:
 469              	.LFB19:
 871:boards/TMC5130_eval.c **** 
 872:boards/TMC5130_eval.c **** static void deInit(void)
 873:boards/TMC5130_eval.c **** {
 470              		.loc 1 873 1 is_stmt 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 874:boards/TMC5130_eval.c **** 	HAL.IOs->config->setLow(Pins.DRV_ENN_CFG6);
 474              		.loc 1 874 2 view .LVU124
 475              		.loc 1 874 5 is_stmt 0 view .LVU125
 476 01b0 224B     		ldr	r3, .L46
 873:boards/TMC5130_eval.c **** 	HAL.IOs->config->setLow(Pins.DRV_ENN_CFG6);
 477              		.loc 1 873 1 view .LVU126
 478 01b2 70B5     		push	{r4, r5, r6, lr}
 479              	.LCFI1:
 480              		.cfi_def_cfa_offset 16
 481              		.cfi_offset 4, -16
 482              		.cfi_offset 5, -12
 483              		.cfi_offset 6, -8
 484              		.cfi_offset 14, -4
 485              		.loc 1 874 5 view .LVU127
 486 01b4 DD68     		ldr	r5, [r3, #12]
 487              		.loc 1 874 2 view .LVU128
 488 01b6 224C     		ldr	r4, .L46+4
 489              		.loc 1 874 17 view .LVU129
 490 01b8 2B68     		ldr	r3, [r5]
 491              		.loc 1 874 2 view .LVU130
 492 01ba D4F89802 		ldr	r0, [r4, #664]
 493 01be 9B69     		ldr	r3, [r3, #24]
 494 01c0 9847     		blx	r3
 495              	.LVL48:
 875:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.AIN_REF_PWM);
 496              		.loc 1 875 2 is_stmt 1 view .LVU131
 497              		.loc 1 875 17 is_stmt 0 view .LVU132
 498 01c2 2B68     		ldr	r3, [r5]
 499              		.loc 1 875 2 view .LVU133
 500 01c4 D4F8B802 		ldr	r0, [r4, #696]
 501 01c8 9B68     		ldr	r3, [r3, #8]
 502 01ca 9847     		blx	r3
 503              	.LVL49:
 876:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.AIN_REF_SW);
 504              		.loc 1 876 2 is_stmt 1 view .LVU134
 505              		.loc 1 876 17 is_stmt 0 view .LVU135
 506 01cc 2B68     		ldr	r3, [r5]
 507              		.loc 1 876 2 view .LVU136
 508 01ce D4F8B402 		ldr	r0, [r4, #692]
 509 01d2 9B68     		ldr	r3, [r3, #8]
 510 01d4 9847     		blx	r3
 511              	.LVL50:
 877:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.ENCA_DCIN_CFG5);
 512              		.loc 1 877 2 is_stmt 1 view .LVU137
 513              		.loc 1 877 17 is_stmt 0 view .LVU138
 514 01d6 2B68     		ldr	r3, [r5]
 515              		.loc 1 877 2 view .LVU139
 516 01d8 D4F89C02 		ldr	r0, [r4, #668]
 517 01dc 9B68     		ldr	r3, [r3, #8]
 518 01de 9847     		blx	r3
 519              	.LVL51:
 878:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.ENCB_DCEN_CFG4);
 520              		.loc 1 878 2 is_stmt 1 view .LVU140
 521              		.loc 1 878 17 is_stmt 0 view .LVU141
 522 01e0 2B68     		ldr	r3, [r5]
 523              		.loc 1 878 2 view .LVU142
 524 01e2 D4F8A002 		ldr	r0, [r4, #672]
 525 01e6 9B68     		ldr	r3, [r3, #8]
 526 01e8 9847     		blx	r3
 527              	.LVL52:
 879:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.ENCN_DCO);
 528              		.loc 1 879 2 is_stmt 1 view .LVU143
 529              		.loc 1 879 17 is_stmt 0 view .LVU144
 530 01ea 2B68     		ldr	r3, [r5]
 531              		.loc 1 879 2 view .LVU145
 532 01ec D4F8A402 		ldr	r0, [r4, #676]
 533 01f0 9B68     		ldr	r3, [r3, #8]
 534 01f2 9847     		blx	r3
 535              	.LVL53:
 880:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.REFL_UC);
 536              		.loc 1 880 2 is_stmt 1 view .LVU146
 537              		.loc 1 880 17 is_stmt 0 view .LVU147
 538 01f4 2B68     		ldr	r3, [r5]
 539              		.loc 1 880 2 view .LVU148
 540 01f6 D4F89002 		ldr	r0, [r4, #656]
 541 01fa 9B68     		ldr	r3, [r3, #8]
 542 01fc 9847     		blx	r3
 543              	.LVL54:
 881:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.REFR_UC);
 544              		.loc 1 881 2 is_stmt 1 view .LVU149
 545              		.loc 1 881 17 is_stmt 0 view .LVU150
 546 01fe 2B68     		ldr	r3, [r5]
 547              		.loc 1 881 2 view .LVU151
 548 0200 D4F89402 		ldr	r0, [r4, #660]
 549 0204 9B68     		ldr	r3, [r3, #8]
 550 0206 9847     		blx	r3
 551              	.LVL55:
 882:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.SWN_DIAG0);
 552              		.loc 1 882 2 is_stmt 1 view .LVU152
 553              		.loc 1 882 17 is_stmt 0 view .LVU153
 554 0208 2B68     		ldr	r3, [r5]
 555              		.loc 1 882 2 view .LVU154
 556 020a D4F8AC02 		ldr	r0, [r4, #684]
 557 020e 9B68     		ldr	r3, [r3, #8]
 558 0210 9847     		blx	r3
 559              	.LVL56:
 883:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.SWP_DIAG1);
 560              		.loc 1 883 2 is_stmt 1 view .LVU155
 561              		.loc 1 883 17 is_stmt 0 view .LVU156
 562 0212 2B68     		ldr	r3, [r5]
 563              		.loc 1 883 2 view .LVU157
 564 0214 D4F8B002 		ldr	r0, [r4, #688]
 565 0218 9B68     		ldr	r3, [r3, #8]
 566 021a 9847     		blx	r3
 567              	.LVL57:
 884:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.SWSEL);
 568              		.loc 1 884 2 is_stmt 1 view .LVU158
 569              		.loc 1 884 17 is_stmt 0 view .LVU159
 570 021c 2B68     		ldr	r3, [r5]
 571              		.loc 1 884 2 view .LVU160
 572 021e D4F8A802 		ldr	r0, [r4, #680]
 573 0222 9B68     		ldr	r3, [r3, #8]
 574 0224 9847     		blx	r3
 575              	.LVL58:
 885:boards/TMC5130_eval.c **** 	HAL.IOs->config->reset(Pins.DRV_ENN_CFG6);
 576              		.loc 1 885 2 is_stmt 1 view .LVU161
 577              		.loc 1 885 17 is_stmt 0 view .LVU162
 578 0226 2B68     		ldr	r3, [r5]
 579              		.loc 1 885 2 view .LVU163
 580 0228 D4F89802 		ldr	r0, [r4, #664]
 581 022c 9B68     		ldr	r3, [r3, #8]
 582 022e 9847     		blx	r3
 583              	.LVL59:
 886:boards/TMC5130_eval.c **** 
 887:boards/TMC5130_eval.c **** 	Timer.deInit();
 584              		.loc 1 887 2 is_stmt 1 view .LVU164
 585              		.loc 1 887 7 is_stmt 0 view .LVU165
 586 0230 044B     		ldr	r3, .L46+8
 888:boards/TMC5130_eval.c **** };
 587              		.loc 1 888 1 view .LVU166
 588 0232 BDE87040 		pop	{r4, r5, r6, lr}
 589              	.LCFI2:
 590              		.cfi_restore 14
 591              		.cfi_restore 6
 592              		.cfi_restore 5
 593              		.cfi_restore 4
 594              		.cfi_def_cfa_offset 0
 887:boards/TMC5130_eval.c **** };
 595              		.loc 1 887 2 view .LVU167
 596 0236 5B68     		ldr	r3, [r3, #4]
 597 0238 1847     		bx	r3	@ indirect register sibling call
 598              	.LVL60:
 599              	.L47:
 600 023a 00BF     		.align	2
 601              	.L46:
 602 023c 00000000 		.word	HAL
 603 0240 00000000 		.word	.LANCHOR0
 604 0244 00000000 		.word	Timer
 605              		.cfi_endproc
 606              	.LFE19:
 608              		.align	1
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu softvfp
 614              	writeRegister:
 615              	.LVL61:
 616              	.LFB14:
 720:boards/TMC5130_eval.c **** 	UNUSED(motor);
 617              		.loc 1 720 1 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 721:boards/TMC5130_eval.c **** 
 622              		.loc 1 721 2 view .LVU169
 723:boards/TMC5130_eval.c **** }
 623              		.loc 1 723 2 view .LVU170
 624 0248 0148     		ldr	r0, .L49
 625              	.LVL62:
 723:boards/TMC5130_eval.c **** }
 626              		.loc 1 723 2 is_stmt 0 view .LVU171
 627 024a FFF7FEBF 		b	tmc5130_writeInt
 628              	.LVL63:
 629              	.L50:
 723:boards/TMC5130_eval.c **** }
 630              		.loc 1 723 2 view .LVU172
 631 024e 00BF     		.align	2
 632              	.L49:
 633 0250 00000000 		.word	.LANCHOR0
 634              		.cfi_endproc
 635              	.LFE14:
 637              		.align	1
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu softvfp
 643              	periodicJob:
 644              	.LVL64:
 645              	.LFB16:
 734:boards/TMC5130_eval.c **** 	tmc5130_periodicJob(&TMC5130, tick);
 646              		.loc 1 734 1 is_stmt 1 view -0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 735:boards/TMC5130_eval.c **** }
 651              		.loc 1 735 2 view .LVU174
 734:boards/TMC5130_eval.c **** 	tmc5130_periodicJob(&TMC5130, tick);
 652              		.loc 1 734 1 is_stmt 0 view .LVU175
 653 0254 0146     		mov	r1, r0
 735:boards/TMC5130_eval.c **** }
 654              		.loc 1 735 2 view .LVU176
 655 0256 0148     		ldr	r0, .L52
 656              	.LVL65:
 735:boards/TMC5130_eval.c **** }
 657              		.loc 1 735 2 view .LVU177
 658 0258 FFF7FEBF 		b	tmc5130_periodicJob
 659              	.LVL66:
 660              	.L53:
 735:boards/TMC5130_eval.c **** }
 661              		.loc 1 735 2 view .LVU178
 662              		.align	2
 663              	.L52:
 664 025c 00000000 		.word	.LANCHOR0
 665              		.cfi_endproc
 666              	.LFE16:
 668              		.align	1
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 672              		.fpu softvfp
 674              	readRegister:
 675              	.LVL67:
 676              	.LFB15:
 727:boards/TMC5130_eval.c **** 	UNUSED(motor);
 677              		.loc 1 727 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 728:boards/TMC5130_eval.c **** 
 681              		.loc 1 728 2 view .LVU180
 730:boards/TMC5130_eval.c **** }
 682              		.loc 1 730 2 view .LVU181
 727:boards/TMC5130_eval.c **** 	UNUSED(motor);
 683              		.loc 1 727 1 is_stmt 0 view .LVU182
 684 0260 10B5     		push	{r4, lr}
 685              	.LCFI3:
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 4, -8
 688              		.cfi_offset 14, -4
 730:boards/TMC5130_eval.c **** }
 689              		.loc 1 730 11 view .LVU183
 690 0262 0348     		ldr	r0, .L55
 691              	.LVL68:
 727:boards/TMC5130_eval.c **** 	UNUSED(motor);
 692              		.loc 1 727 1 view .LVU184
 693 0264 1446     		mov	r4, r2
 730:boards/TMC5130_eval.c **** }
 694              		.loc 1 730 11 view .LVU185
 695 0266 FFF7FEFF 		bl	tmc5130_readInt
 696              	.LVL69:
 730:boards/TMC5130_eval.c **** }
 697              		.loc 1 730 9 view .LVU186
 698 026a 2060     		str	r0, [r4]
 731:boards/TMC5130_eval.c **** 
 699              		.loc 1 731 1 view .LVU187
 700 026c 10BD     		pop	{r4, pc}
 701              	.LVL70:
 702              	.L56:
 731:boards/TMC5130_eval.c **** 
 703              		.loc 1 731 1 view .LVU188
 704 026e 00BF     		.align	2
 705              	.L55:
 706 0270 00000000 		.word	.LANCHOR0
 707              		.cfi_endproc
 708              	.LFE15:
 710              		.align	1
 711              		.syntax unified
 712              		.thumb
 713              		.thumb_func
 714              		.fpu softvfp
 716              	handleParameter:
 717              	.LVL71:
 718              	.LFB10:
 124:boards/TMC5130_eval.c **** 	uint32_t buffer;
 719              		.loc 1 124 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 125:boards/TMC5130_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 723              		.loc 1 125 2 view .LVU190
 126:boards/TMC5130_eval.c **** 
 724              		.loc 1 126 2 view .LVU191
 128:boards/TMC5130_eval.c **** 		return TMC_ERROR_MOTOR;
 725              		.loc 1 128 2 view .LVU192
 124:boards/TMC5130_eval.c **** 	uint32_t buffer;
 726              		.loc 1 124 1 is_stmt 0 view .LVU193
 727 0274 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 728              	.LCFI4:
 729              		.cfi_def_cfa_offset 24
 730              		.cfi_offset 3, -24
 731              		.cfi_offset 4, -20
 732              		.cfi_offset 5, -16
 733              		.cfi_offset 6, -12
 734              		.cfi_offset 7, -8
 735              		.cfi_offset 14, -4
 124:boards/TMC5130_eval.c **** 	uint32_t buffer;
 736              		.loc 1 124 1 view .LVU194
 737 0276 0646     		mov	r6, r0
 738 0278 1D46     		mov	r5, r3
 128:boards/TMC5130_eval.c **** 		return TMC_ERROR_MOTOR;
 739              		.loc 1 128 4 view .LVU195
 740 027a 0029     		cmp	r1, #0
 741 027c 40F03D86 		bne	.L204
 131:boards/TMC5130_eval.c **** 	{
 742              		.loc 1 131 2 is_stmt 1 view .LVU196
 743 0280 222A     		cmp	r2, #34
 744 0282 74D8     		bhi	.L59
 745 0284 222A     		cmp	r2, #34
 746 0286 00F23E86 		bhi	.L206
 747 028a DFE812F0 		tbh	[pc, r2, lsl #1]
 748              	.LVL72:
 749              	.L92:
 750 028e 7800     		.2byte	(.L119-.L92)/2
 751 0290 8700     		.2byte	(.L118-.L92)/2
 752 0292 9600     		.2byte	(.L117-.L92)/2
 753 0294 A500     		.2byte	(.L116-.L92)/2
 754 0296 B500     		.2byte	(.L115-.L92)/2
 755 0298 D100     		.2byte	(.L114-.L92)/2
 756 029a E000     		.2byte	(.L113-.L92)/2
 757 029c F900     		.2byte	(.L112-.L92)/2
 758 029e 1101     		.2byte	(.L111-.L92)/2
 759 02a0 3C06     		.2byte	(.L206-.L92)/2
 760 02a2 1D01     		.2byte	(.L110-.L92)/2
 761 02a4 2C01     		.2byte	(.L109-.L92)/2
 762 02a6 3901     		.2byte	(.L108-.L92)/2
 763 02a8 5601     		.2byte	(.L107-.L92)/2
 764 02aa 7301     		.2byte	(.L106-.L92)/2
 765 02ac 8201     		.2byte	(.L105-.L92)/2
 766 02ae 9101     		.2byte	(.L104-.L92)/2
 767 02b0 A001     		.2byte	(.L103-.L92)/2
 768 02b2 AF01     		.2byte	(.L102-.L92)/2
 769 02b4 BE01     		.2byte	(.L101-.L92)/2
 770 02b6 CF01     		.2byte	(.L100-.L92)/2
 771 02b8 DE01     		.2byte	(.L99-.L92)/2
 772 02ba 3C06     		.2byte	(.L206-.L92)/2
 773 02bc ED01     		.2byte	(.L98-.L92)/2
 774 02be 1202     		.2byte	(.L97-.L92)/2
 775 02c0 3C06     		.2byte	(.L206-.L92)/2
 776 02c2 3C06     		.2byte	(.L206-.L92)/2
 777 02c4 2102     		.2byte	(.L96-.L92)/2
 778 02c6 3A02     		.2byte	(.L95-.L92)/2
 779 02c8 5302     		.2byte	(.L94-.L92)/2
 780 02ca 3C06     		.2byte	(.L206-.L92)/2
 781 02cc 3C06     		.2byte	(.L206-.L92)/2
 782 02ce 3C06     		.2byte	(.L206-.L92)/2
 783 02d0 5B02     		.2byte	(.L93-.L92)/2
 784 02d2 7502     		.2byte	(.L91-.L92)/2
 785              		.p2align 1
 786              	.L120:
 131:boards/TMC5130_eval.c **** 	{
 787              		.loc 1 131 2 is_stmt 0 view .LVU197
 788 02d4 8C3A     		subs	r2, r2, #140
 789              	.LVL73:
 131:boards/TMC5130_eval.c **** 	{
 790              		.loc 1 131 2 view .LVU198
 791 02d6 462A     		cmp	r2, #70
 792 02d8 00F21286 		bhi	.L205
 793 02dc DFE812F0 		tbh	[pc, r2, lsl #1]
 794              	.L62:
 795 02e0 6702     		.2byte	(.L90-.L62)/2
 796 02e2 1006     		.2byte	(.L205-.L62)/2
 797 02e4 1006     		.2byte	(.L205-.L62)/2
 798 02e6 1006     		.2byte	(.L205-.L62)/2
 799 02e8 1006     		.2byte	(.L205-.L62)/2
 800 02ea 1006     		.2byte	(.L205-.L62)/2
 801 02ec 1006     		.2byte	(.L205-.L62)/2
 802 02ee 1006     		.2byte	(.L205-.L62)/2
 803 02f0 1006     		.2byte	(.L205-.L62)/2
 804 02f2 1006     		.2byte	(.L205-.L62)/2
 805 02f4 1006     		.2byte	(.L205-.L62)/2
 806 02f6 1006     		.2byte	(.L205-.L62)/2
 807 02f8 1006     		.2byte	(.L205-.L62)/2
 808 02fa 1006     		.2byte	(.L205-.L62)/2
 809 02fc 1006     		.2byte	(.L205-.L62)/2
 810 02fe 1006     		.2byte	(.L205-.L62)/2
 811 0300 1006     		.2byte	(.L205-.L62)/2
 812 0302 1006     		.2byte	(.L205-.L62)/2
 813 0304 1006     		.2byte	(.L205-.L62)/2
 814 0306 1006     		.2byte	(.L205-.L62)/2
 815 0308 1006     		.2byte	(.L205-.L62)/2
 816 030a 1006     		.2byte	(.L205-.L62)/2
 817 030c B502     		.2byte	(.L89-.L62)/2
 818 030e CE02     		.2byte	(.L88-.L62)/2
 819 0310 E702     		.2byte	(.L87-.L62)/2
 820 0312 0403     		.2byte	(.L86-.L62)/2
 821 0314 4203     		.2byte	(.L85-.L62)/2
 822 0316 8403     		.2byte	(.L84-.L62)/2
 823 0318 9C03     		.2byte	(.L83-.L62)/2
 824 031a B403     		.2byte	(.L82-.L62)/2
 825 031c CD03     		.2byte	(.L81-.L62)/2
 826 031e E603     		.2byte	(.L80-.L62)/2
 827 0320 FF03     		.2byte	(.L79-.L62)/2
 828 0322 1704     		.2byte	(.L78-.L62)/2
 829 0324 3004     		.2byte	(.L77-.L62)/2
 830 0326 1006     		.2byte	(.L205-.L62)/2
 831 0328 1006     		.2byte	(.L205-.L62)/2
 832 032a 1006     		.2byte	(.L205-.L62)/2
 833 032c 1006     		.2byte	(.L205-.L62)/2
 834 032e 5104     		.2byte	(.L76-.L62)/2
 835 0330 6C04     		.2byte	(.L75-.L62)/2
 836 0332 7C04     		.2byte	(.L74-.L62)/2
 837 0334 BC04     		.2byte	(.L73-.L62)/2
 838 0336 1006     		.2byte	(.L205-.L62)/2
 839 0338 E204     		.2byte	(.L72-.L62)/2
 840 033a FD04     		.2byte	(.L71-.L62)/2
 841 033c 1805     		.2byte	(.L70-.L62)/2
 842 033e 3F05     		.2byte	(.L69-.L62)/2
 843 0340 6805     		.2byte	(.L68-.L62)/2
 844 0342 1006     		.2byte	(.L205-.L62)/2
 845 0344 1006     		.2byte	(.L205-.L62)/2
 846 0346 7F05     		.2byte	(.L67-.L62)/2
 847 0348 A005     		.2byte	(.L66-.L62)/2
 848 034a 1006     		.2byte	(.L205-.L62)/2
 849 034c 1006     		.2byte	(.L205-.L62)/2
 850 034e 1006     		.2byte	(.L205-.L62)/2
 851 0350 1006     		.2byte	(.L205-.L62)/2
 852 0352 1006     		.2byte	(.L205-.L62)/2
 853 0354 1006     		.2byte	(.L205-.L62)/2
 854 0356 1006     		.2byte	(.L205-.L62)/2
 855 0358 1006     		.2byte	(.L205-.L62)/2
 856 035a 1006     		.2byte	(.L205-.L62)/2
 857 035c 1006     		.2byte	(.L205-.L62)/2
 858 035e 1006     		.2byte	(.L205-.L62)/2
 859 0360 C005     		.2byte	(.L65-.L62)/2
 860 0362 1006     		.2byte	(.L205-.L62)/2
 861 0364 DB05     		.2byte	(.L64-.L62)/2
 862 0366 1006     		.2byte	(.L205-.L62)/2
 863 0368 1006     		.2byte	(.L205-.L62)/2
 864 036a E705     		.2byte	(.L63-.L62)/2
 865 036c FC05     		.2byte	(.L61-.L62)/2
 866              	.LVL74:
 867              		.p2align 1
 868              	.L59:
 131:boards/TMC5130_eval.c **** 	{
 869              		.loc 1 131 2 view .LVU199
 870 036e 02F17403 		add	r3, r2, #116
 871              	.LVL75:
 131:boards/TMC5130_eval.c **** 	{
 872              		.loc 1 131 2 view .LVU200
 873 0372 DBB2     		uxtb	r3, r3
 874 0374 462B     		cmp	r3, #70
 875 0376 ADD9     		bls	.L120
 876 0378 0424     		movs	r4, #4
 877              	.LVL76:
 878              	.L57:
 697:boards/TMC5130_eval.c **** 
 879              		.loc 1 697 1 view .LVU201
 880 037a 2046     		mov	r0, r4
 881 037c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 882              	.LVL77:
 883              	.L119:
 135:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_XTARGET);
 884              		.loc 1 135 3 is_stmt 1 view .LVU202
 135:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_XTARGET);
 885              		.loc 1 135 5 is_stmt 0 view .LVU203
 886 037e 30B9     		cbnz	r0, .L121
 136:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 887              		.loc 1 136 4 is_stmt 1 view .LVU204
 888              	.LBB316:
 889              	.LBI316:
  37:boards/TMC5130_eval.c **** {
 890              		.loc 1 37 31 view .LVU205
 891              	.LVL78:
  37:boards/TMC5130_eval.c **** {
 892              		.loc 1 37 31 is_stmt 0 view .LVU206
 893              	.LBE316:
  39:boards/TMC5130_eval.c **** 
 894              		.loc 1 39 2 is_stmt 1 view .LVU207
  41:boards/TMC5130_eval.c **** }
 895              		.loc 1 41 2 view .LVU208
 136:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 896              		.loc 1 136 13 is_stmt 0 view .LVU209
 897 0380 A948     		ldr	r0, .L229
 898              	.LVL79:
 136:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 899              		.loc 1 136 13 view .LVU210
 900 0382 2D21     		movs	r1, #45
 901              	.LVL80:
 136:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 902              		.loc 1 136 13 view .LVU211
 903 0384 FFF7FEFF 		bl	tmc5130_readInt
 904              	.LVL81:
 126:boards/TMC5130_eval.c **** 
 905              		.loc 1 126 11 view .LVU212
 906 0388 3446     		mov	r4, r6
 136:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 907              		.loc 1 136 11 view .LVU213
 908 038a 2860     		str	r0, [r5]
 909 038c F5E7     		b	.L57
 910              	.LVL82:
 911              	.L121:
 137:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_XTARGET, *value);
 912              		.loc 1 137 10 is_stmt 1 view .LVU214
 138:boards/TMC5130_eval.c **** 		}
 913              		.loc 1 138 4 view .LVU215
 914              	.LBB317:
 915              	.LBI317:
  37:boards/TMC5130_eval.c **** {
 916              		.loc 1 37 31 view .LVU216
  37:boards/TMC5130_eval.c **** {
 917              		.loc 1 37 31 is_stmt 0 view .LVU217
 918              	.LBE317:
  39:boards/TMC5130_eval.c **** 
 919              		.loc 1 39 2 is_stmt 1 view .LVU218
  41:boards/TMC5130_eval.c **** }
 920              		.loc 1 41 2 view .LVU219
 138:boards/TMC5130_eval.c **** 		}
 921              		.loc 1 138 4 is_stmt 0 view .LVU220
 922 038e 2A68     		ldr	r2, [r5]
 923              	.LVL83:
 138:boards/TMC5130_eval.c **** 		}
 924              		.loc 1 138 4 view .LVU221
 925 0390 A548     		ldr	r0, .L229
 926              	.LVL84:
 138:boards/TMC5130_eval.c **** 		}
 927              		.loc 1 138 4 view .LVU222
 928 0392 2D21     		movs	r1, #45
 929              	.LVL85:
 138:boards/TMC5130_eval.c **** 		}
 930              		.loc 1 138 4 view .LVU223
 931 0394 FFF7FEFF 		bl	tmc5130_writeInt
 932              	.LVL86:
 126:boards/TMC5130_eval.c **** 
 933              		.loc 1 126 11 view .LVU224
 934 0398 0024     		movs	r4, #0
 935 039a EEE7     		b	.L57
 936              	.LVL87:
 937              	.L118:
 143:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_XACTUAL);
 938              		.loc 1 143 3 is_stmt 1 view .LVU225
 143:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_XACTUAL);
 939              		.loc 1 143 5 is_stmt 0 view .LVU226
 940 039c 30B9     		cbnz	r0, .L122
 144:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 941              		.loc 1 144 4 is_stmt 1 view .LVU227
 942              	.LBB318:
 943              	.LBI318:
  37:boards/TMC5130_eval.c **** {
 944              		.loc 1 37 31 view .LVU228
 945              	.LVL88:
  37:boards/TMC5130_eval.c **** {
 946              		.loc 1 37 31 is_stmt 0 view .LVU229
 947              	.LBE318:
  39:boards/TMC5130_eval.c **** 
 948              		.loc 1 39 2 is_stmt 1 view .LVU230
  41:boards/TMC5130_eval.c **** }
 949              		.loc 1 41 2 view .LVU231
 144:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 950              		.loc 1 144 13 is_stmt 0 view .LVU232
 951 039e A248     		ldr	r0, .L229
 952              	.LVL89:
 144:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 953              		.loc 1 144 13 view .LVU233
 954 03a0 2121     		movs	r1, #33
 955              	.LVL90:
 144:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 956              		.loc 1 144 13 view .LVU234
 957 03a2 FFF7FEFF 		bl	tmc5130_readInt
 958              	.LVL91:
 126:boards/TMC5130_eval.c **** 
 959              		.loc 1 126 11 view .LVU235
 960 03a6 3446     		mov	r4, r6
 144:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 961              		.loc 1 144 11 view .LVU236
 962 03a8 2860     		str	r0, [r5]
 963 03aa E6E7     		b	.L57
 964              	.LVL92:
 965              	.L122:
 145:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_XACTUAL, *value);
 966              		.loc 1 145 10 is_stmt 1 view .LVU237
 146:boards/TMC5130_eval.c **** 		}
 967              		.loc 1 146 4 view .LVU238
 968              	.LBB319:
 969              	.LBI319:
  37:boards/TMC5130_eval.c **** {
 970              		.loc 1 37 31 view .LVU239
  37:boards/TMC5130_eval.c **** {
 971              		.loc 1 37 31 is_stmt 0 view .LVU240
 972              	.LBE319:
  39:boards/TMC5130_eval.c **** 
 973              		.loc 1 39 2 is_stmt 1 view .LVU241
  41:boards/TMC5130_eval.c **** }
 974              		.loc 1 41 2 view .LVU242
 146:boards/TMC5130_eval.c **** 		}
 975              		.loc 1 146 4 is_stmt 0 view .LVU243
 976 03ac 2A68     		ldr	r2, [r5]
 977              	.LVL93:
 146:boards/TMC5130_eval.c **** 		}
 978              		.loc 1 146 4 view .LVU244
 979 03ae 9E48     		ldr	r0, .L229
 980              	.LVL94:
 146:boards/TMC5130_eval.c **** 		}
 981              		.loc 1 146 4 view .LVU245
 982 03b0 2121     		movs	r1, #33
 983              	.LVL95:
 146:boards/TMC5130_eval.c **** 		}
 984              		.loc 1 146 4 view .LVU246
 985 03b2 FFF7FEFF 		bl	tmc5130_writeInt
 986              	.LVL96:
 126:boards/TMC5130_eval.c **** 
 987              		.loc 1 126 11 view .LVU247
 988 03b6 0024     		movs	r4, #0
 989 03b8 DFE7     		b	.L57
 990              	.LVL97:
 991              	.L117:
 151:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VMAX);
 992              		.loc 1 151 3 is_stmt 1 view .LVU248
 151:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VMAX);
 993              		.loc 1 151 5 is_stmt 0 view .LVU249
 994 03ba 30B9     		cbnz	r0, .L123
 152:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 995              		.loc 1 152 4 is_stmt 1 view .LVU250
 996              	.LBB320:
 997              	.LBI320:
  37:boards/TMC5130_eval.c **** {
 998              		.loc 1 37 31 view .LVU251
 999              	.LVL98:
  37:boards/TMC5130_eval.c **** {
 1000              		.loc 1 37 31 is_stmt 0 view .LVU252
 1001              	.LBE320:
  39:boards/TMC5130_eval.c **** 
 1002              		.loc 1 39 2 is_stmt 1 view .LVU253
  41:boards/TMC5130_eval.c **** }
 1003              		.loc 1 41 2 view .LVU254
 152:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1004              		.loc 1 152 13 is_stmt 0 view .LVU255
 1005 03bc 9A48     		ldr	r0, .L229
 1006              	.LVL99:
 152:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1007              		.loc 1 152 13 view .LVU256
 1008 03be 2721     		movs	r1, #39
 1009              	.LVL100:
 152:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1010              		.loc 1 152 13 view .LVU257
 1011 03c0 FFF7FEFF 		bl	tmc5130_readInt
 1012              	.LVL101:
 126:boards/TMC5130_eval.c **** 
 1013              		.loc 1 126 11 view .LVU258
 1014 03c4 3446     		mov	r4, r6
 152:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1015              		.loc 1 152 11 view .LVU259
 1016 03c6 2860     		str	r0, [r5]
 1017 03c8 D7E7     		b	.L57
 1018              	.LVL102:
 1019              	.L123:
 153:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_VMAX, *value);
 1020              		.loc 1 153 10 is_stmt 1 view .LVU260
 154:boards/TMC5130_eval.c **** 		}
 1021              		.loc 1 154 4 view .LVU261
 1022              	.LBB321:
 1023              	.LBI321:
  37:boards/TMC5130_eval.c **** {
 1024              		.loc 1 37 31 view .LVU262
  37:boards/TMC5130_eval.c **** {
 1025              		.loc 1 37 31 is_stmt 0 view .LVU263
 1026              	.LBE321:
  39:boards/TMC5130_eval.c **** 
 1027              		.loc 1 39 2 is_stmt 1 view .LVU264
  41:boards/TMC5130_eval.c **** }
 1028              		.loc 1 41 2 view .LVU265
 154:boards/TMC5130_eval.c **** 		}
 1029              		.loc 1 154 4 is_stmt 0 view .LVU266
 1030 03ca 2A68     		ldr	r2, [r5]
 1031              	.LVL103:
 154:boards/TMC5130_eval.c **** 		}
 1032              		.loc 1 154 4 view .LVU267
 1033 03cc 9648     		ldr	r0, .L229
 1034              	.LVL104:
 154:boards/TMC5130_eval.c **** 		}
 1035              		.loc 1 154 4 view .LVU268
 1036 03ce 2721     		movs	r1, #39
 1037              	.LVL105:
 154:boards/TMC5130_eval.c **** 		}
 1038              		.loc 1 154 4 view .LVU269
 1039 03d0 FFF7FEFF 		bl	tmc5130_writeInt
 1040              	.LVL106:
 126:boards/TMC5130_eval.c **** 
 1041              		.loc 1 126 11 view .LVU270
 1042 03d4 0024     		movs	r4, #0
 1043 03d6 D0E7     		b	.L57
 1044              	.LVL107:
 1045              	.L116:
 159:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VACTUAL);
 1046              		.loc 1 159 3 is_stmt 1 view .LVU271
 159:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VACTUAL);
 1047              		.loc 1 159 5 is_stmt 0 view .LVU272
 1048 03d8 0028     		cmp	r0, #0
 1049 03da 40F09785 		bne	.L207
 160:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1050              		.loc 1 160 4 is_stmt 1 view .LVU273
 1051              	.LBB322:
 1052              	.LBI322:
  37:boards/TMC5130_eval.c **** {
 1053              		.loc 1 37 31 view .LVU274
 1054              	.LVL108:
  37:boards/TMC5130_eval.c **** {
 1055              		.loc 1 37 31 is_stmt 0 view .LVU275
 1056              	.LBE322:
  39:boards/TMC5130_eval.c **** 
 1057              		.loc 1 39 2 is_stmt 1 view .LVU276
  41:boards/TMC5130_eval.c **** }
 1058              		.loc 1 41 2 view .LVU277
 160:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1059              		.loc 1 160 13 is_stmt 0 view .LVU278
 1060 03de 9248     		ldr	r0, .L229
 1061              	.LVL109:
 160:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1062              		.loc 1 160 13 view .LVU279
 1063 03e0 2221     		movs	r1, #34
 1064              	.LVL110:
 160:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 24);
 1065              		.loc 1 160 13 view .LVU280
 1066 03e2 FFF7FEFF 		bl	tmc5130_readInt
 1067              	.LVL111:
 161:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1068              		.loc 1 161 4 is_stmt 1 view .LVU281
 161:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1069              		.loc 1 161 13 is_stmt 0 view .LVU282
 1070 03e6 10F40003 		ands	r3, r0, #8388608
 1071 03ea 18BF     		it	ne
 1072 03ec 4FF07F43 		movne	r3, #-16777216
 1073 03f0 1843     		orrs	r0, r0, r3
 161:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1074              		.loc 1 161 11 view .LVU283
 1075 03f2 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 1076              		.loc 1 126 11 view .LVU284
 1077 03f4 3446     		mov	r4, r6
 1078 03f6 C0E7     		b	.L57
 1079              	.LVL112:
 1080              	.L115:
 168:boards/TMC5130_eval.c **** 			*value = vmax_position;
 1081              		.loc 1 168 3 is_stmt 1 view .LVU285
 1082 03f8 8B4F     		ldr	r7, .L229
 168:boards/TMC5130_eval.c **** 			*value = vmax_position;
 1083              		.loc 1 168 5 is_stmt 0 view .LVU286
 1084 03fa 20B9     		cbnz	r0, .L125
 169:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1085              		.loc 1 169 4 is_stmt 1 view .LVU287
 169:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1086              		.loc 1 169 11 is_stmt 0 view .LVU288
 1087 03fc D7F8BC32 		ldr	r3, [r7, #700]
 1088 0400 2B60     		str	r3, [r5]
 126:boards/TMC5130_eval.c **** 
 1089              		.loc 1 126 11 view .LVU289
 1090 0402 0446     		mov	r4, r0
 1091 0404 B9E7     		b	.L57
 1092              	.L125:
 170:boards/TMC5130_eval.c **** 			vmax_position = abs(*value);
 1093              		.loc 1 170 10 is_stmt 1 view .LVU290
 171:boards/TMC5130_eval.c **** 			if(tmc5130_readInt(motorToIC(motor), TMC5130_RAMPMODE) == TMC5130_MODE_POSITION)
 1094              		.loc 1 171 4 view .LVU291
 171:boards/TMC5130_eval.c **** 			if(tmc5130_readInt(motorToIC(motor), TMC5130_RAMPMODE) == TMC5130_MODE_POSITION)
 1095              		.loc 1 171 20 is_stmt 0 view .LVU292
 1096 0406 2B68     		ldr	r3, [r5]
 1097 0408 002B     		cmp	r3, #0
 1098 040a B8BF     		it	lt
 1099 040c 5B42     		rsblt	r3, r3, #0
 172:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_VMAX, vmax_position);
 1100              		.loc 1 172 7 view .LVU293
 1101 040e 2021     		movs	r1, #32
 1102              	.LVL113:
 172:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_VMAX, vmax_position);
 1103              		.loc 1 172 7 view .LVU294
 1104 0410 3846     		mov	r0, r7
 1105              	.LVL114:
 171:boards/TMC5130_eval.c **** 			if(tmc5130_readInt(motorToIC(motor), TMC5130_RAMPMODE) == TMC5130_MODE_POSITION)
 1106              		.loc 1 171 18 view .LVU295
 1107 0412 C7F8BC32 		str	r3, [r7, #700]
 172:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_VMAX, vmax_position);
 1108              		.loc 1 172 4 is_stmt 1 view .LVU296
 1109              	.LBB323:
 1110              	.LBI323:
  37:boards/TMC5130_eval.c **** {
 1111              		.loc 1 37 31 view .LVU297
 1112              	.LVL115:
  37:boards/TMC5130_eval.c **** {
 1113              		.loc 1 37 31 is_stmt 0 view .LVU298
 1114              	.LBE323:
  39:boards/TMC5130_eval.c **** 
 1115              		.loc 1 39 2 is_stmt 1 view .LVU299
  41:boards/TMC5130_eval.c **** }
 1116              		.loc 1 41 2 view .LVU300
 172:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_VMAX, vmax_position);
 1117              		.loc 1 172 7 is_stmt 0 view .LVU301
 1118 0416 FFF7FEFF 		bl	tmc5130_readInt
 1119              	.LVL116:
 172:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_VMAX, vmax_position);
 1120              		.loc 1 172 6 view .LVU302
 1121 041a 0446     		mov	r4, r0
 1122 041c 0028     		cmp	r0, #0
 1123 041e 40F07885 		bne	.L209
 173:boards/TMC5130_eval.c **** 		}
 1124              		.loc 1 173 5 is_stmt 1 view .LVU303
 1125              	.LBB324:
 1126              	.LBI324:
  37:boards/TMC5130_eval.c **** {
 1127              		.loc 1 37 31 view .LVU304
 1128              	.LVL117:
  37:boards/TMC5130_eval.c **** {
 1129              		.loc 1 37 31 is_stmt 0 view .LVU305
 1130              	.LBE324:
  39:boards/TMC5130_eval.c **** 
 1131              		.loc 1 39 2 is_stmt 1 view .LVU306
  41:boards/TMC5130_eval.c **** }
 1132              		.loc 1 41 2 view .LVU307
 173:boards/TMC5130_eval.c **** 		}
 1133              		.loc 1 173 5 is_stmt 0 view .LVU308
 1134 0422 D7F8BC22 		ldr	r2, [r7, #700]
 1135 0426 2721     		movs	r1, #39
 1136 0428 3846     		mov	r0, r7
 1137 042a FFF7FEFF 		bl	tmc5130_writeInt
 1138              	.LVL118:
 1139 042e A4E7     		b	.L57
 1140              	.LVL119:
 1141              	.L114:
 178:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_AMAX);
 1142              		.loc 1 178 3 is_stmt 1 view .LVU309
 178:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_AMAX);
 1143              		.loc 1 178 5 is_stmt 0 view .LVU310
 1144 0430 30B9     		cbnz	r0, .L126
 179:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1145              		.loc 1 179 4 is_stmt 1 view .LVU311
 1146              	.LBB325:
 1147              	.LBI325:
  37:boards/TMC5130_eval.c **** {
 1148              		.loc 1 37 31 view .LVU312
 1149              	.LVL120:
  37:boards/TMC5130_eval.c **** {
 1150              		.loc 1 37 31 is_stmt 0 view .LVU313
 1151              	.LBE325:
  39:boards/TMC5130_eval.c **** 
 1152              		.loc 1 39 2 is_stmt 1 view .LVU314
  41:boards/TMC5130_eval.c **** }
 1153              		.loc 1 41 2 view .LVU315
 179:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1154              		.loc 1 179 13 is_stmt 0 view .LVU316
 1155 0432 7D48     		ldr	r0, .L229
 1156              	.LVL121:
 179:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1157              		.loc 1 179 13 view .LVU317
 1158 0434 2621     		movs	r1, #38
 1159              	.LVL122:
 179:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1160              		.loc 1 179 13 view .LVU318
 1161 0436 FFF7FEFF 		bl	tmc5130_readInt
 1162              	.LVL123:
 126:boards/TMC5130_eval.c **** 
 1163              		.loc 1 126 11 view .LVU319
 1164 043a 3446     		mov	r4, r6
 179:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1165              		.loc 1 179 11 view .LVU320
 1166 043c 2860     		str	r0, [r5]
 1167 043e 9CE7     		b	.L57
 1168              	.LVL124:
 1169              	.L126:
 180:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_AMAX, *value);
 1170              		.loc 1 180 10 is_stmt 1 view .LVU321
 181:boards/TMC5130_eval.c **** 		}
 1171              		.loc 1 181 4 view .LVU322
 1172              	.LBB326:
 1173              	.LBI326:
  37:boards/TMC5130_eval.c **** {
 1174              		.loc 1 37 31 view .LVU323
  37:boards/TMC5130_eval.c **** {
 1175              		.loc 1 37 31 is_stmt 0 view .LVU324
 1176              	.LBE326:
  39:boards/TMC5130_eval.c **** 
 1177              		.loc 1 39 2 is_stmt 1 view .LVU325
  41:boards/TMC5130_eval.c **** }
 1178              		.loc 1 41 2 view .LVU326
 181:boards/TMC5130_eval.c **** 		}
 1179              		.loc 1 181 4 is_stmt 0 view .LVU327
 1180 0440 2A68     		ldr	r2, [r5]
 1181              	.LVL125:
 181:boards/TMC5130_eval.c **** 		}
 1182              		.loc 1 181 4 view .LVU328
 1183 0442 7948     		ldr	r0, .L229
 1184              	.LVL126:
 181:boards/TMC5130_eval.c **** 		}
 1185              		.loc 1 181 4 view .LVU329
 1186 0444 2621     		movs	r1, #38
 1187              	.LVL127:
 181:boards/TMC5130_eval.c **** 		}
 1188              		.loc 1 181 4 view .LVU330
 1189 0446 FFF7FEFF 		bl	tmc5130_writeInt
 1190              	.LVL128:
 126:boards/TMC5130_eval.c **** 
 1191              		.loc 1 126 11 view .LVU331
 1192 044a 0024     		movs	r4, #0
 1193 044c 95E7     		b	.L57
 1194              	.LVL129:
 1195              	.L113:
 186:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IRUN_MASK, TMC5130_IRU
 1196              		.loc 1 186 3 is_stmt 1 view .LVU332
 187:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1197              		.loc 1 187 13 is_stmt 0 view .LVU333
 1198 044e 7648     		ldr	r0, .L229
 1199              	.LVL130:
 187:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1200              		.loc 1 187 13 view .LVU334
 1201 0450 1021     		movs	r1, #16
 1202              	.LVL131:
 186:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IRUN_MASK, TMC5130_IRU
 1203              		.loc 1 186 5 view .LVU335
 1204 0452 36B9     		cbnz	r6, .L127
 187:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1205              		.loc 1 187 4 is_stmt 1 view .LVU336
 1206              	.LBB327:
 1207              	.LBI327:
  37:boards/TMC5130_eval.c **** {
 1208              		.loc 1 37 31 view .LVU337
 1209              	.LVL132:
  37:boards/TMC5130_eval.c **** {
 1210              		.loc 1 37 31 is_stmt 0 view .LVU338
 1211              	.LBE327:
  39:boards/TMC5130_eval.c **** 
 1212              		.loc 1 39 2 is_stmt 1 view .LVU339
  41:boards/TMC5130_eval.c **** }
 1213              		.loc 1 41 2 view .LVU340
 187:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1214              		.loc 1 187 13 is_stmt 0 view .LVU341
 1215 0454 FFF7FEFF 		bl	tmc5130_readInt
 1216              	.LVL133:
 187:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1217              		.loc 1 187 13 view .LVU342
 1218 0458 C0F30420 		ubfx	r0, r0, #8, #5
 187:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1219              		.loc 1 187 11 view .LVU343
 1220 045c 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 1221              		.loc 1 126 11 view .LVU344
 1222 045e 3446     		mov	r4, r6
 1223 0460 8BE7     		b	.L57
 1224              	.LVL134:
 1225              	.L127:
 188:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IRUN_MASK, TMC5130_IRUN_SHIFT,
 1226              		.loc 1 188 10 is_stmt 1 view .LVU345
 189:boards/TMC5130_eval.c **** 		}
 1227              		.loc 1 189 4 view .LVU346
 1228              	.LBB328:
 1229              	.LBI328:
  37:boards/TMC5130_eval.c **** {
 1230              		.loc 1 37 31 view .LVU347
  37:boards/TMC5130_eval.c **** {
 1231              		.loc 1 37 31 is_stmt 0 view .LVU348
 1232              	.LBE328:
  39:boards/TMC5130_eval.c **** 
 1233              		.loc 1 39 2 is_stmt 1 view .LVU349
  41:boards/TMC5130_eval.c **** }
 1234              		.loc 1 41 2 view .LVU350
 1235              	.LBB329:
 1236              	.LBI329:
  37:boards/TMC5130_eval.c **** {
 1237              		.loc 1 37 31 view .LVU351
  37:boards/TMC5130_eval.c **** {
 1238              		.loc 1 37 31 is_stmt 0 view .LVU352
 1239              	.LBE329:
  39:boards/TMC5130_eval.c **** 
 1240              		.loc 1 39 2 is_stmt 1 view .LVU353
  41:boards/TMC5130_eval.c **** }
 1241              		.loc 1 41 2 view .LVU354
 189:boards/TMC5130_eval.c **** 		}
 1242              		.loc 1 189 4 is_stmt 0 view .LVU355
 1243 0462 FFF7FEFF 		bl	tmc5130_readInt
 1244              	.LVL135:
 189:boards/TMC5130_eval.c **** 		}
 1245              		.loc 1 189 4 view .LVU356
 1246 0466 2B68     		ldr	r3, [r5]
 1247 0468 1B02     		lsls	r3, r3, #8
 1248 046a 03F4F853 		and	r3, r3, #7936
 1249 046e 20F4F852 		bic	r2, r0, #7936
 1250 0472 1A43     		orrs	r2, r2, r3
 1251 0474 6C48     		ldr	r0, .L229
 1252 0476 1021     		movs	r1, #16
 1253 0478 FFF7FEFF 		bl	tmc5130_writeInt
 1254              	.LVL136:
 126:boards/TMC5130_eval.c **** 
 1255              		.loc 1 126 11 view .LVU357
 1256 047c 0024     		movs	r4, #0
 1257 047e 7CE7     		b	.L57
 1258              	.LVL137:
 1259              	.L112:
 194:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IHOLD_MASK, TMC5130_IH
 1260              		.loc 1 194 3 is_stmt 1 view .LVU358
 195:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1261              		.loc 1 195 13 is_stmt 0 view .LVU359
 1262 0480 6948     		ldr	r0, .L229
 1263              	.LVL138:
 195:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1264              		.loc 1 195 13 view .LVU360
 1265 0482 1021     		movs	r1, #16
 1266              	.LVL139:
 194:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IHOLD_MASK, TMC5130_IH
 1267              		.loc 1 194 5 view .LVU361
 1268 0484 36B9     		cbnz	r6, .L128
 195:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1269              		.loc 1 195 4 is_stmt 1 view .LVU362
 1270              	.LBB330:
 1271              	.LBI330:
  37:boards/TMC5130_eval.c **** {
 1272              		.loc 1 37 31 view .LVU363
 1273              	.LVL140:
  37:boards/TMC5130_eval.c **** {
 1274              		.loc 1 37 31 is_stmt 0 view .LVU364
 1275              	.LBE330:
  39:boards/TMC5130_eval.c **** 
 1276              		.loc 1 39 2 is_stmt 1 view .LVU365
  41:boards/TMC5130_eval.c **** }
 1277              		.loc 1 41 2 view .LVU366
 195:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1278              		.loc 1 195 13 is_stmt 0 view .LVU367
 1279 0486 FFF7FEFF 		bl	tmc5130_readInt
 1280              	.LVL141:
 195:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1281              		.loc 1 195 13 view .LVU368
 1282 048a 00F01F00 		and	r0, r0, #31
 195:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1283              		.loc 1 195 11 view .LVU369
 1284 048e 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 1285              		.loc 1 126 11 view .LVU370
 1286 0490 3446     		mov	r4, r6
 1287 0492 72E7     		b	.L57
 1288              	.LVL142:
 1289              	.L128:
 196:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_IHOLD_IRUN, TMC5130_IHOLD_MASK, TMC5130_IHOLD_SHIF
 1290              		.loc 1 196 10 is_stmt 1 view .LVU371
 197:boards/TMC5130_eval.c **** 		}
 1291              		.loc 1 197 4 view .LVU372
 1292              	.LBB331:
 1293              	.LBI331:
  37:boards/TMC5130_eval.c **** {
 1294              		.loc 1 37 31 view .LVU373
  37:boards/TMC5130_eval.c **** {
 1295              		.loc 1 37 31 is_stmt 0 view .LVU374
 1296              	.LBE331:
  39:boards/TMC5130_eval.c **** 
 1297              		.loc 1 39 2 is_stmt 1 view .LVU375
  41:boards/TMC5130_eval.c **** }
 1298              		.loc 1 41 2 view .LVU376
 1299              	.LBB332:
 1300              	.LBI332:
  37:boards/TMC5130_eval.c **** {
 1301              		.loc 1 37 31 view .LVU377
  37:boards/TMC5130_eval.c **** {
 1302              		.loc 1 37 31 is_stmt 0 view .LVU378
 1303              	.LBE332:
  39:boards/TMC5130_eval.c **** 
 1304              		.loc 1 39 2 is_stmt 1 view .LVU379
  41:boards/TMC5130_eval.c **** }
 1305              		.loc 1 41 2 view .LVU380
 197:boards/TMC5130_eval.c **** 		}
 1306              		.loc 1 197 4 is_stmt 0 view .LVU381
 1307 0494 FFF7FEFF 		bl	tmc5130_readInt
 1308              	.LVL143:
 197:boards/TMC5130_eval.c **** 		}
 1309              		.loc 1 197 4 view .LVU382
 1310 0498 2A68     		ldr	r2, [r5]
 1311 049a 20F01F00 		bic	r0, r0, #31
 1312 049e 02F01F02 		and	r2, r2, #31
 1313 04a2 0243     		orrs	r2, r2, r0
 1314 04a4 1021     		movs	r1, #16
 1315 04a6 6048     		ldr	r0, .L229
 1316 04a8 FFF7FEFF 		bl	tmc5130_writeInt
 1317              	.LVL144:
 126:boards/TMC5130_eval.c **** 
 1318              		.loc 1 126 11 view .LVU383
 1319 04ac 0024     		movs	r4, #0
 1320 04ae 64E7     		b	.L57
 1321              	.LVL145:
 1322              	.L111:
 202:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_RAMPSTAT) & TMC5130_RS_POSREACHED)? 1:0;
 1323              		.loc 1 202 3 is_stmt 1 view .LVU384
 202:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_RAMPSTAT) & TMC5130_RS_POSREACHED)? 1:0;
 1324              		.loc 1 202 5 is_stmt 0 view .LVU385
 1325 04b0 0028     		cmp	r0, #0
 1326 04b2 40F03185 		bne	.L210
 203:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1327              		.loc 1 203 4 is_stmt 1 view .LVU386
 1328              	.LBB333:
 1329              	.LBI333:
  37:boards/TMC5130_eval.c **** {
 1330              		.loc 1 37 31 view .LVU387
 1331              	.LVL146:
  37:boards/TMC5130_eval.c **** {
 1332              		.loc 1 37 31 is_stmt 0 view .LVU388
 1333              	.LBE333:
  39:boards/TMC5130_eval.c **** 
 1334              		.loc 1 39 2 is_stmt 1 view .LVU389
  41:boards/TMC5130_eval.c **** }
 1335              		.loc 1 41 2 view .LVU390
 203:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1336              		.loc 1 203 14 is_stmt 0 view .LVU391
 1337 04b6 5C48     		ldr	r0, .L229
 1338              	.LVL147:
 203:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1339              		.loc 1 203 14 view .LVU392
 1340 04b8 3521     		movs	r1, #53
 1341              	.LVL148:
 203:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1342              		.loc 1 203 14 view .LVU393
 1343 04ba FFF7FEFF 		bl	tmc5130_readInt
 1344              	.LVL149:
 203:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1345              		.loc 1 203 93 view .LVU394
 1346 04be C0F34020 		ubfx	r0, r0, #9, #1
 203:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1347              		.loc 1 203 11 view .LVU395
 1348 04c2 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 1349              		.loc 1 126 11 view .LVU396
 1350 04c4 3446     		mov	r4, r6
 1351 04c6 58E7     		b	.L57
 1352              	.LVL150:
 1353              	.L110:
 210:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_RAMPSTAT) & TMC5130_RS_STOPR)? 0:1;
 1354              		.loc 1 210 3 is_stmt 1 view .LVU397
 210:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_RAMPSTAT) & TMC5130_RS_STOPR)? 0:1;
 1355              		.loc 1 210 5 is_stmt 0 view .LVU398
 1356 04c8 0028     		cmp	r0, #0
 1357 04ca 40F02885 		bne	.L211
 211:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1358              		.loc 1 211 4 is_stmt 1 view .LVU399
 1359              	.LBB334:
 1360              	.LBI334:
  37:boards/TMC5130_eval.c **** {
 1361              		.loc 1 37 31 view .LVU400
 1362              	.LVL151:
  37:boards/TMC5130_eval.c **** {
 1363              		.loc 1 37 31 is_stmt 0 view .LVU401
 1364              	.LBE334:
  39:boards/TMC5130_eval.c **** 
 1365              		.loc 1 39 2 is_stmt 1 view .LVU402
  41:boards/TMC5130_eval.c **** }
 1366              		.loc 1 41 2 view .LVU403
 211:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1367              		.loc 1 211 14 is_stmt 0 view .LVU404
 1368 04ce 5648     		ldr	r0, .L229
 1369              	.LVL152:
 211:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1370              		.loc 1 211 14 view .LVU405
 1371 04d0 3521     		movs	r1, #53
 1372              	.LVL153:
 211:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1373              		.loc 1 211 14 view .LVU406
 1374 04d2 FFF7FEFF 		bl	tmc5130_readInt
 1375              	.LVL154:
 211:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1376              		.loc 1 211 88 view .LVU407
 1377 04d6 10F0020F 		tst	r0, #2
 1378 04da 0CBF     		ite	eq
 1379 04dc 0123     		moveq	r3, #1
 1380 04de 0023     		movne	r3, #0
 211:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1381              		.loc 1 211 11 view .LVU408
 1382 04e0 2B60     		str	r3, [r5]
 126:boards/TMC5130_eval.c **** 
 1383              		.loc 1 126 11 view .LVU409
 1384 04e2 3446     		mov	r4, r6
 1385 04e4 49E7     		b	.L57
 1386              	.LVL155:
 1387              	.L109:
 218:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_RAMPSTAT) & TMC5130_RS_STOPL)? 0:1;
 1388              		.loc 1 218 3 is_stmt 1 view .LVU410
 218:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_RAMPSTAT) & TMC5130_RS_STOPL)? 0:1;
 1389              		.loc 1 218 5 is_stmt 0 view .LVU411
 1390 04e6 0028     		cmp	r0, #0
 1391 04e8 40F01C85 		bne	.L212
 219:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1392              		.loc 1 219 4 is_stmt 1 view .LVU412
 1393              	.LBB335:
 1394              	.LBI335:
  37:boards/TMC5130_eval.c **** {
 1395              		.loc 1 37 31 view .LVU413
 1396              	.LVL156:
  37:boards/TMC5130_eval.c **** {
 1397              		.loc 1 37 31 is_stmt 0 view .LVU414
 1398              	.LBE335:
  39:boards/TMC5130_eval.c **** 
 1399              		.loc 1 39 2 is_stmt 1 view .LVU415
  41:boards/TMC5130_eval.c **** }
 1400              		.loc 1 41 2 view .LVU416
 219:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1401              		.loc 1 219 14 is_stmt 0 view .LVU417
 1402 04ec 4E48     		ldr	r0, .L229
 1403              	.LVL157:
 219:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1404              		.loc 1 219 14 view .LVU418
 1405 04ee 3521     		movs	r1, #53
 1406              	.LVL158:
 219:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1407              		.loc 1 219 14 view .LVU419
 1408 04f0 FFF7FEFF 		bl	tmc5130_readInt
 1409              	.LVL159:
 219:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1410              		.loc 1 219 11 view .LVU420
 1411 04f4 C043     		mvns	r0, r0
 1412 04f6 00F00100 		and	r0, r0, #1
 1413 04fa 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 1414              		.loc 1 126 11 view .LVU421
 1415 04fc 3446     		mov	r4, r6
 1416 04fe 3CE7     		b	.L57
 1417              	.LVL160:
 1418              	.L108:
 226:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE) & TMC5130_SW_STOPR_ENABLE)? 1:0;
 1419              		.loc 1 226 3 is_stmt 1 view .LVU422
 227:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1420              		.loc 1 227 14 is_stmt 0 view .LVU423
 1421 0500 4948     		ldr	r0, .L229
 1422              	.LVL161:
 227:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1423              		.loc 1 227 14 view .LVU424
 1424 0502 3421     		movs	r1, #52
 1425              	.LVL162:
 226:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE) & TMC5130_SW_STOPR_ENABLE)? 1:0;
 1426              		.loc 1 226 5 view .LVU425
 1427 0504 36B9     		cbnz	r6, .L129
 227:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1428              		.loc 1 227 4 is_stmt 1 view .LVU426
 1429              	.LBB336:
 1430              	.LBI336:
  37:boards/TMC5130_eval.c **** {
 1431              		.loc 1 37 31 view .LVU427
 1432              	.LVL163:
  37:boards/TMC5130_eval.c **** {
 1433              		.loc 1 37 31 is_stmt 0 view .LVU428
 1434              	.LBE336:
  39:boards/TMC5130_eval.c **** 
 1435              		.loc 1 39 2 is_stmt 1 view .LVU429
  41:boards/TMC5130_eval.c **** }
 1436              		.loc 1 41 2 view .LVU430
 227:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1437              		.loc 1 227 14 is_stmt 0 view .LVU431
 1438 0506 FFF7FEFF 		bl	tmc5130_readInt
 1439              	.LVL164:
 227:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1440              		.loc 1 227 93 view .LVU432
 1441 050a C0F34000 		ubfx	r0, r0, #1, #1
 227:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1442              		.loc 1 227 11 view .LVU433
 1443 050e 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 1444              		.loc 1 126 11 view .LVU434
 1445 0510 3446     		mov	r4, r6
 1446 0512 32E7     		b	.L57
 1447              	.LVL165:
 1448              	.L129:
 228:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE);
 1449              		.loc 1 228 10 is_stmt 1 view .LVU435
 229:boards/TMC5130_eval.c **** 			if(*value == 0)
 1450              		.loc 1 229 4 view .LVU436
 1451              	.LBB337:
 1452              	.LBI337:
  37:boards/TMC5130_eval.c **** {
 1453              		.loc 1 37 31 view .LVU437
  37:boards/TMC5130_eval.c **** {
 1454              		.loc 1 37 31 is_stmt 0 view .LVU438
 1455              	.LBE337:
  39:boards/TMC5130_eval.c **** 
 1456              		.loc 1 39 2 is_stmt 1 view .LVU439
  41:boards/TMC5130_eval.c **** }
 1457              		.loc 1 41 2 view .LVU440
 229:boards/TMC5130_eval.c **** 			if(*value == 0)
 1458              		.loc 1 229 13 is_stmt 0 view .LVU441
 1459 0514 FFF7FEFF 		bl	tmc5130_readInt
 1460              	.LVL166:
 230:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, buffer | TMC5130_SW_STOPR_ENABLE);
 1461              		.loc 1 230 4 is_stmt 1 view .LVU442
 230:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, buffer | TMC5130_SW_STOPR_ENABLE);
 1462              		.loc 1 230 6 is_stmt 0 view .LVU443
 1463 0518 2C68     		ldr	r4, [r5]
 1464 051a 34B9     		cbnz	r4, .L130
 231:boards/TMC5130_eval.c **** 			else
 1465              		.loc 1 231 5 is_stmt 1 view .LVU444
 1466              	.LBB338:
 1467              	.LBI338:
  37:boards/TMC5130_eval.c **** {
 1468              		.loc 1 37 31 view .LVU445
 1469              	.LVL167:
  37:boards/TMC5130_eval.c **** {
 1470              		.loc 1 37 31 is_stmt 0 view .LVU446
 1471              	.LBE338:
  39:boards/TMC5130_eval.c **** 
 1472              		.loc 1 39 2 is_stmt 1 view .LVU447
  41:boards/TMC5130_eval.c **** }
 1473              		.loc 1 41 2 view .LVU448
 231:boards/TMC5130_eval.c **** 			else
 1474              		.loc 1 231 5 is_stmt 0 view .LVU449
 1475 051c 40F00202 		orr	r2, r0, #2
 1476 0520 3421     		movs	r1, #52
 1477 0522 4148     		ldr	r0, .L229
 1478              	.LVL168:
 231:boards/TMC5130_eval.c **** 			else
 1479              		.loc 1 231 5 view .LVU450
 1480 0524 FFF7FEFF 		bl	tmc5130_writeInt
 1481              	.LVL169:
 1482 0528 27E7     		b	.L57
 1483              	.LVL170:
 1484              	.L130:
 233:boards/TMC5130_eval.c **** 		}
 1485              		.loc 1 233 5 is_stmt 1 view .LVU451
 1486              	.LBB339:
 1487              	.LBI339:
  37:boards/TMC5130_eval.c **** {
 1488              		.loc 1 37 31 view .LVU452
  37:boards/TMC5130_eval.c **** {
 1489              		.loc 1 37 31 is_stmt 0 view .LVU453
 1490              	.LBE339:
  39:boards/TMC5130_eval.c **** 
 1491              		.loc 1 39 2 is_stmt 1 view .LVU454
  41:boards/TMC5130_eval.c **** }
 1492              		.loc 1 41 2 view .LVU455
 233:boards/TMC5130_eval.c **** 		}
 1493              		.loc 1 233 5 is_stmt 0 view .LVU456
 1494 052a 20F00202 		bic	r2, r0, #2
 1495 052e 3421     		movs	r1, #52
 1496 0530 3D48     		ldr	r0, .L229
 1497              	.LVL171:
 233:boards/TMC5130_eval.c **** 		}
 1498              		.loc 1 233 5 view .LVU457
 1499 0532 FFF7FEFF 		bl	tmc5130_writeInt
 1500              	.LVL172:
 126:boards/TMC5130_eval.c **** 
 1501              		.loc 1 126 11 view .LVU458
 1502 0536 0024     		movs	r4, #0
 1503 0538 1FE7     		b	.L57
 1504              	.LVL173:
 1505              	.L107:
 238:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE) & TMC5130_SW_STOPL_ENABLE)? 1:0;
 1506              		.loc 1 238 3 is_stmt 1 view .LVU459
 239:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1507              		.loc 1 239 14 is_stmt 0 view .LVU460
 1508 053a 3B48     		ldr	r0, .L229
 1509              	.LVL174:
 239:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1510              		.loc 1 239 14 view .LVU461
 1511 053c 3421     		movs	r1, #52
 1512              	.LVL175:
 238:boards/TMC5130_eval.c **** 			*value = (tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE) & TMC5130_SW_STOPL_ENABLE)? 1:0;
 1513              		.loc 1 238 5 view .LVU462
 1514 053e 36B9     		cbnz	r6, .L131
 239:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1515              		.loc 1 239 4 is_stmt 1 view .LVU463
 1516              	.LBB340:
 1517              	.LBI340:
  37:boards/TMC5130_eval.c **** {
 1518              		.loc 1 37 31 view .LVU464
 1519              	.LVL176:
  37:boards/TMC5130_eval.c **** {
 1520              		.loc 1 37 31 is_stmt 0 view .LVU465
 1521              	.LBE340:
  39:boards/TMC5130_eval.c **** 
 1522              		.loc 1 39 2 is_stmt 1 view .LVU466
  41:boards/TMC5130_eval.c **** }
 1523              		.loc 1 41 2 view .LVU467
 239:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1524              		.loc 1 239 14 is_stmt 0 view .LVU468
 1525 0540 FFF7FEFF 		bl	tmc5130_readInt
 1526              	.LVL177:
 239:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1527              		.loc 1 239 11 view .LVU469
 1528 0544 00F00100 		and	r0, r0, #1
 1529 0548 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 1530              		.loc 1 126 11 view .LVU470
 1531 054a 3446     		mov	r4, r6
 1532 054c 15E7     		b	.L57
 1533              	.LVL178:
 1534              	.L131:
 240:boards/TMC5130_eval.c **** 			buffer	= tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE);
 1535              		.loc 1 240 10 is_stmt 1 view .LVU471
 241:boards/TMC5130_eval.c **** 			if(*value==0)
 1536              		.loc 1 241 4 view .LVU472
 1537              	.LBB341:
 1538              	.LBI341:
  37:boards/TMC5130_eval.c **** {
 1539              		.loc 1 37 31 view .LVU473
  37:boards/TMC5130_eval.c **** {
 1540              		.loc 1 37 31 is_stmt 0 view .LVU474
 1541              	.LBE341:
  39:boards/TMC5130_eval.c **** 
 1542              		.loc 1 39 2 is_stmt 1 view .LVU475
  41:boards/TMC5130_eval.c **** }
 1543              		.loc 1 41 2 view .LVU476
 241:boards/TMC5130_eval.c **** 			if(*value==0)
 1544              		.loc 1 241 13 is_stmt 0 view .LVU477
 1545 054e FFF7FEFF 		bl	tmc5130_readInt
 1546              	.LVL179:
 242:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, buffer | TMC5130_SW_STOPL_ENABLE);
 1547              		.loc 1 242 4 is_stmt 1 view .LVU478
 242:boards/TMC5130_eval.c **** 				tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, buffer | TMC5130_SW_STOPL_ENABLE);
 1548              		.loc 1 242 6 is_stmt 0 view .LVU479
 1549 0552 2C68     		ldr	r4, [r5]
 1550 0554 34B9     		cbnz	r4, .L132
 243:boards/TMC5130_eval.c **** 			else
 1551              		.loc 1 243 5 is_stmt 1 view .LVU480
 1552              	.LBB342:
 1553              	.LBI342:
  37:boards/TMC5130_eval.c **** {
 1554              		.loc 1 37 31 view .LVU481
 1555              	.LVL180:
  37:boards/TMC5130_eval.c **** {
 1556              		.loc 1 37 31 is_stmt 0 view .LVU482
 1557              	.LBE342:
  39:boards/TMC5130_eval.c **** 
 1558              		.loc 1 39 2 is_stmt 1 view .LVU483
  41:boards/TMC5130_eval.c **** }
 1559              		.loc 1 41 2 view .LVU484
 243:boards/TMC5130_eval.c **** 			else
 1560              		.loc 1 243 5 is_stmt 0 view .LVU485
 1561 0556 40F00102 		orr	r2, r0, #1
 1562 055a 3421     		movs	r1, #52
 1563 055c 3248     		ldr	r0, .L229
 1564              	.LVL181:
 243:boards/TMC5130_eval.c **** 			else
 1565              		.loc 1 243 5 view .LVU486
 1566 055e FFF7FEFF 		bl	tmc5130_writeInt
 1567              	.LVL182:
 1568 0562 0AE7     		b	.L57
 1569              	.LVL183:
 1570              	.L132:
 245:boards/TMC5130_eval.c **** 		}
 1571              		.loc 1 245 5 is_stmt 1 view .LVU487
 1572              	.LBB343:
 1573              	.LBI343:
  37:boards/TMC5130_eval.c **** {
 1574              		.loc 1 37 31 view .LVU488
  37:boards/TMC5130_eval.c **** {
 1575              		.loc 1 37 31 is_stmt 0 view .LVU489
 1576              	.LBE343:
  39:boards/TMC5130_eval.c **** 
 1577              		.loc 1 39 2 is_stmt 1 view .LVU490
  41:boards/TMC5130_eval.c **** }
 1578              		.loc 1 41 2 view .LVU491
 245:boards/TMC5130_eval.c **** 		}
 1579              		.loc 1 245 5 is_stmt 0 view .LVU492
 1580 0564 20F00102 		bic	r2, r0, #1
 1581 0568 3421     		movs	r1, #52
 1582 056a 2F48     		ldr	r0, .L229
 1583              	.LVL184:
 245:boards/TMC5130_eval.c **** 		}
 1584              		.loc 1 245 5 view .LVU493
 1585 056c FFF7FEFF 		bl	tmc5130_writeInt
 1586              	.LVL185:
 126:boards/TMC5130_eval.c **** 
 1587              		.loc 1 126 11 view .LVU494
 1588 0570 0024     		movs	r4, #0
 1589 0572 02E7     		b	.L57
 1590              	.LVL186:
 1591              	.L106:
 250:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE);
 1592              		.loc 1 250 3 is_stmt 1 view .LVU495
 250:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_SWMODE);
 1593              		.loc 1 250 5 is_stmt 0 view .LVU496
 1594 0574 30B9     		cbnz	r0, .L133
 251:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1595              		.loc 1 251 4 is_stmt 1 view .LVU497
 1596              	.LBB344:
 1597              	.LBI344:
  37:boards/TMC5130_eval.c **** {
 1598              		.loc 1 37 31 view .LVU498
 1599              	.LVL187:
  37:boards/TMC5130_eval.c **** {
 1600              		.loc 1 37 31 is_stmt 0 view .LVU499
 1601              	.LBE344:
  39:boards/TMC5130_eval.c **** 
 1602              		.loc 1 39 2 is_stmt 1 view .LVU500
  41:boards/TMC5130_eval.c **** }
 1603              		.loc 1 41 2 view .LVU501
 251:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1604              		.loc 1 251 13 is_stmt 0 view .LVU502
 1605 0576 2C48     		ldr	r0, .L229
 1606              	.LVL188:
 251:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1607              		.loc 1 251 13 view .LVU503
 1608 0578 3421     		movs	r1, #52
 1609              	.LVL189:
 251:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1610              		.loc 1 251 13 view .LVU504
 1611 057a FFF7FEFF 		bl	tmc5130_readInt
 1612              	.LVL190:
 126:boards/TMC5130_eval.c **** 
 1613              		.loc 1 126 11 view .LVU505
 1614 057e 3446     		mov	r4, r6
 251:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1615              		.loc 1 251 11 view .LVU506
 1616 0580 2860     		str	r0, [r5]
 1617 0582 FAE6     		b	.L57
 1618              	.LVL191:
 1619              	.L133:
 252:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_SWMODE, *value);
 1620              		.loc 1 252 10 is_stmt 1 view .LVU507
 253:boards/TMC5130_eval.c **** 		}
 1621              		.loc 1 253 4 view .LVU508
 1622              	.LBB345:
 1623              	.LBI345:
  37:boards/TMC5130_eval.c **** {
 1624              		.loc 1 37 31 view .LVU509
  37:boards/TMC5130_eval.c **** {
 1625              		.loc 1 37 31 is_stmt 0 view .LVU510
 1626              	.LBE345:
  39:boards/TMC5130_eval.c **** 
 1627              		.loc 1 39 2 is_stmt 1 view .LVU511
  41:boards/TMC5130_eval.c **** }
 1628              		.loc 1 41 2 view .LVU512
 253:boards/TMC5130_eval.c **** 		}
 1629              		.loc 1 253 4 is_stmt 0 view .LVU513
 1630 0584 2A68     		ldr	r2, [r5]
 1631              	.LVL192:
 253:boards/TMC5130_eval.c **** 		}
 1632              		.loc 1 253 4 view .LVU514
 1633 0586 2848     		ldr	r0, .L229
 1634              	.LVL193:
 253:boards/TMC5130_eval.c **** 		}
 1635              		.loc 1 253 4 view .LVU515
 1636 0588 3421     		movs	r1, #52
 1637              	.LVL194:
 253:boards/TMC5130_eval.c **** 		}
 1638              		.loc 1 253 4 view .LVU516
 1639 058a FFF7FEFF 		bl	tmc5130_writeInt
 1640              	.LVL195:
 126:boards/TMC5130_eval.c **** 
 1641              		.loc 1 126 11 view .LVU517
 1642 058e 0024     		movs	r4, #0
 1643 0590 F3E6     		b	.L57
 1644              	.LVL196:
 1645              	.L105:
 258:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_A1);
 1646              		.loc 1 258 3 is_stmt 1 view .LVU518
 258:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_A1);
 1647              		.loc 1 258 5 is_stmt 0 view .LVU519
 1648 0592 30B9     		cbnz	r0, .L134
 259:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1649              		.loc 1 259 4 is_stmt 1 view .LVU520
 1650              	.LBB346:
 1651              	.LBI346:
  37:boards/TMC5130_eval.c **** {
 1652              		.loc 1 37 31 view .LVU521
 1653              	.LVL197:
  37:boards/TMC5130_eval.c **** {
 1654              		.loc 1 37 31 is_stmt 0 view .LVU522
 1655              	.LBE346:
  39:boards/TMC5130_eval.c **** 
 1656              		.loc 1 39 2 is_stmt 1 view .LVU523
  41:boards/TMC5130_eval.c **** }
 1657              		.loc 1 41 2 view .LVU524
 259:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1658              		.loc 1 259 13 is_stmt 0 view .LVU525
 1659 0594 2448     		ldr	r0, .L229
 1660              	.LVL198:
 259:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1661              		.loc 1 259 13 view .LVU526
 1662 0596 2421     		movs	r1, #36
 1663              	.LVL199:
 259:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1664              		.loc 1 259 13 view .LVU527
 1665 0598 FFF7FEFF 		bl	tmc5130_readInt
 1666              	.LVL200:
 126:boards/TMC5130_eval.c **** 
 1667              		.loc 1 126 11 view .LVU528
 1668 059c 3446     		mov	r4, r6
 259:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1669              		.loc 1 259 11 view .LVU529
 1670 059e 2860     		str	r0, [r5]
 1671 05a0 EBE6     		b	.L57
 1672              	.LVL201:
 1673              	.L134:
 260:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_A1, *value);
 1674              		.loc 1 260 10 is_stmt 1 view .LVU530
 261:boards/TMC5130_eval.c **** 		}
 1675              		.loc 1 261 4 view .LVU531
 1676              	.LBB347:
 1677              	.LBI347:
  37:boards/TMC5130_eval.c **** {
 1678              		.loc 1 37 31 view .LVU532
  37:boards/TMC5130_eval.c **** {
 1679              		.loc 1 37 31 is_stmt 0 view .LVU533
 1680              	.LBE347:
  39:boards/TMC5130_eval.c **** 
 1681              		.loc 1 39 2 is_stmt 1 view .LVU534
  41:boards/TMC5130_eval.c **** }
 1682              		.loc 1 41 2 view .LVU535
 261:boards/TMC5130_eval.c **** 		}
 1683              		.loc 1 261 4 is_stmt 0 view .LVU536
 1684 05a2 2A68     		ldr	r2, [r5]
 1685              	.LVL202:
 261:boards/TMC5130_eval.c **** 		}
 1686              		.loc 1 261 4 view .LVU537
 1687 05a4 2048     		ldr	r0, .L229
 1688              	.LVL203:
 261:boards/TMC5130_eval.c **** 		}
 1689              		.loc 1 261 4 view .LVU538
 1690 05a6 2421     		movs	r1, #36
 1691              	.LVL204:
 261:boards/TMC5130_eval.c **** 		}
 1692              		.loc 1 261 4 view .LVU539
 1693 05a8 FFF7FEFF 		bl	tmc5130_writeInt
 1694              	.LVL205:
 126:boards/TMC5130_eval.c **** 
 1695              		.loc 1 126 11 view .LVU540
 1696 05ac 0024     		movs	r4, #0
 1697 05ae E4E6     		b	.L57
 1698              	.LVL206:
 1699              	.L104:
 266:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_V1);
 1700              		.loc 1 266 3 is_stmt 1 view .LVU541
 266:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_V1);
 1701              		.loc 1 266 5 is_stmt 0 view .LVU542
 1702 05b0 30B9     		cbnz	r0, .L135
 267:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1703              		.loc 1 267 4 is_stmt 1 view .LVU543
 1704              	.LBB348:
 1705              	.LBI348:
  37:boards/TMC5130_eval.c **** {
 1706              		.loc 1 37 31 view .LVU544
 1707              	.LVL207:
  37:boards/TMC5130_eval.c **** {
 1708              		.loc 1 37 31 is_stmt 0 view .LVU545
 1709              	.LBE348:
  39:boards/TMC5130_eval.c **** 
 1710              		.loc 1 39 2 is_stmt 1 view .LVU546
  41:boards/TMC5130_eval.c **** }
 1711              		.loc 1 41 2 view .LVU547
 267:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1712              		.loc 1 267 13 is_stmt 0 view .LVU548
 1713 05b2 1D48     		ldr	r0, .L229
 1714              	.LVL208:
 267:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1715              		.loc 1 267 13 view .LVU549
 1716 05b4 2521     		movs	r1, #37
 1717              	.LVL209:
 267:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1718              		.loc 1 267 13 view .LVU550
 1719 05b6 FFF7FEFF 		bl	tmc5130_readInt
 1720              	.LVL210:
 126:boards/TMC5130_eval.c **** 
 1721              		.loc 1 126 11 view .LVU551
 1722 05ba 3446     		mov	r4, r6
 267:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1723              		.loc 1 267 11 view .LVU552
 1724 05bc 2860     		str	r0, [r5]
 1725 05be DCE6     		b	.L57
 1726              	.LVL211:
 1727              	.L135:
 268:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_V1, *value);
 1728              		.loc 1 268 10 is_stmt 1 view .LVU553
 269:boards/TMC5130_eval.c **** 		}
 1729              		.loc 1 269 4 view .LVU554
 1730              	.LBB349:
 1731              	.LBI349:
  37:boards/TMC5130_eval.c **** {
 1732              		.loc 1 37 31 view .LVU555
  37:boards/TMC5130_eval.c **** {
 1733              		.loc 1 37 31 is_stmt 0 view .LVU556
 1734              	.LBE349:
  39:boards/TMC5130_eval.c **** 
 1735              		.loc 1 39 2 is_stmt 1 view .LVU557
  41:boards/TMC5130_eval.c **** }
 1736              		.loc 1 41 2 view .LVU558
 269:boards/TMC5130_eval.c **** 		}
 1737              		.loc 1 269 4 is_stmt 0 view .LVU559
 1738 05c0 2A68     		ldr	r2, [r5]
 1739              	.LVL212:
 269:boards/TMC5130_eval.c **** 		}
 1740              		.loc 1 269 4 view .LVU560
 1741 05c2 1948     		ldr	r0, .L229
 1742              	.LVL213:
 269:boards/TMC5130_eval.c **** 		}
 1743              		.loc 1 269 4 view .LVU561
 1744 05c4 2521     		movs	r1, #37
 1745              	.LVL214:
 269:boards/TMC5130_eval.c **** 		}
 1746              		.loc 1 269 4 view .LVU562
 1747 05c6 FFF7FEFF 		bl	tmc5130_writeInt
 1748              	.LVL215:
 126:boards/TMC5130_eval.c **** 
 1749              		.loc 1 126 11 view .LVU563
 1750 05ca 0024     		movs	r4, #0
 1751 05cc D5E6     		b	.L57
 1752              	.LVL216:
 1753              	.L103:
 274:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_DMAX);
 1754              		.loc 1 274 3 is_stmt 1 view .LVU564
 274:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_DMAX);
 1755              		.loc 1 274 5 is_stmt 0 view .LVU565
 1756 05ce 30B9     		cbnz	r0, .L136
 275:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1757              		.loc 1 275 4 is_stmt 1 view .LVU566
 1758              	.LBB350:
 1759              	.LBI350:
  37:boards/TMC5130_eval.c **** {
 1760              		.loc 1 37 31 view .LVU567
 1761              	.LVL217:
  37:boards/TMC5130_eval.c **** {
 1762              		.loc 1 37 31 is_stmt 0 view .LVU568
 1763              	.LBE350:
  39:boards/TMC5130_eval.c **** 
 1764              		.loc 1 39 2 is_stmt 1 view .LVU569
  41:boards/TMC5130_eval.c **** }
 1765              		.loc 1 41 2 view .LVU570
 275:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1766              		.loc 1 275 13 is_stmt 0 view .LVU571
 1767 05d0 1548     		ldr	r0, .L229
 1768              	.LVL218:
 275:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1769              		.loc 1 275 13 view .LVU572
 1770 05d2 2821     		movs	r1, #40
 1771              	.LVL219:
 275:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1772              		.loc 1 275 13 view .LVU573
 1773 05d4 FFF7FEFF 		bl	tmc5130_readInt
 1774              	.LVL220:
 126:boards/TMC5130_eval.c **** 
 1775              		.loc 1 126 11 view .LVU574
 1776 05d8 3446     		mov	r4, r6
 275:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1777              		.loc 1 275 11 view .LVU575
 1778 05da 2860     		str	r0, [r5]
 1779 05dc CDE6     		b	.L57
 1780              	.LVL221:
 1781              	.L136:
 276:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_DMAX, *value);
 1782              		.loc 1 276 10 is_stmt 1 view .LVU576
 277:boards/TMC5130_eval.c **** 		}
 1783              		.loc 1 277 4 view .LVU577
 1784              	.LBB351:
 1785              	.LBI351:
  37:boards/TMC5130_eval.c **** {
 1786              		.loc 1 37 31 view .LVU578
  37:boards/TMC5130_eval.c **** {
 1787              		.loc 1 37 31 is_stmt 0 view .LVU579
 1788              	.LBE351:
  39:boards/TMC5130_eval.c **** 
 1789              		.loc 1 39 2 is_stmt 1 view .LVU580
  41:boards/TMC5130_eval.c **** }
 1790              		.loc 1 41 2 view .LVU581
 277:boards/TMC5130_eval.c **** 		}
 1791              		.loc 1 277 4 is_stmt 0 view .LVU582
 1792 05de 2A68     		ldr	r2, [r5]
 1793              	.LVL222:
 277:boards/TMC5130_eval.c **** 		}
 1794              		.loc 1 277 4 view .LVU583
 1795 05e0 1148     		ldr	r0, .L229
 1796              	.LVL223:
 277:boards/TMC5130_eval.c **** 		}
 1797              		.loc 1 277 4 view .LVU584
 1798 05e2 2821     		movs	r1, #40
 1799              	.LVL224:
 277:boards/TMC5130_eval.c **** 		}
 1800              		.loc 1 277 4 view .LVU585
 1801 05e4 FFF7FEFF 		bl	tmc5130_writeInt
 1802              	.LVL225:
 126:boards/TMC5130_eval.c **** 
 1803              		.loc 1 126 11 view .LVU586
 1804 05e8 0024     		movs	r4, #0
 1805 05ea C6E6     		b	.L57
 1806              	.LVL226:
 1807              	.L102:
 282:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_D1);
 1808              		.loc 1 282 3 is_stmt 1 view .LVU587
 282:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_D1);
 1809              		.loc 1 282 5 is_stmt 0 view .LVU588
 1810 05ec 30B9     		cbnz	r0, .L137
 283:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1811              		.loc 1 283 4 is_stmt 1 view .LVU589
 1812              	.LBB352:
 1813              	.LBI352:
  37:boards/TMC5130_eval.c **** {
 1814              		.loc 1 37 31 view .LVU590
 1815              	.LVL227:
  37:boards/TMC5130_eval.c **** {
 1816              		.loc 1 37 31 is_stmt 0 view .LVU591
 1817              	.LBE352:
  39:boards/TMC5130_eval.c **** 
 1818              		.loc 1 39 2 is_stmt 1 view .LVU592
  41:boards/TMC5130_eval.c **** }
 1819              		.loc 1 41 2 view .LVU593
 283:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1820              		.loc 1 283 13 is_stmt 0 view .LVU594
 1821 05ee 0E48     		ldr	r0, .L229
 1822              	.LVL228:
 283:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1823              		.loc 1 283 13 view .LVU595
 1824 05f0 2A21     		movs	r1, #42
 1825              	.LVL229:
 283:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1826              		.loc 1 283 13 view .LVU596
 1827 05f2 FFF7FEFF 		bl	tmc5130_readInt
 1828              	.LVL230:
 126:boards/TMC5130_eval.c **** 
 1829              		.loc 1 126 11 view .LVU597
 1830 05f6 3446     		mov	r4, r6
 283:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1831              		.loc 1 283 11 view .LVU598
 1832 05f8 2860     		str	r0, [r5]
 1833 05fa BEE6     		b	.L57
 1834              	.LVL231:
 1835              	.L137:
 284:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_D1, *value);
 1836              		.loc 1 284 10 is_stmt 1 view .LVU599
 285:boards/TMC5130_eval.c **** 		}
 1837              		.loc 1 285 4 view .LVU600
 1838              	.LBB353:
 1839              	.LBI353:
  37:boards/TMC5130_eval.c **** {
 1840              		.loc 1 37 31 view .LVU601
  37:boards/TMC5130_eval.c **** {
 1841              		.loc 1 37 31 is_stmt 0 view .LVU602
 1842              	.LBE353:
  39:boards/TMC5130_eval.c **** 
 1843              		.loc 1 39 2 is_stmt 1 view .LVU603
  41:boards/TMC5130_eval.c **** }
 1844              		.loc 1 41 2 view .LVU604
 285:boards/TMC5130_eval.c **** 		}
 1845              		.loc 1 285 4 is_stmt 0 view .LVU605
 1846 05fc 2A68     		ldr	r2, [r5]
 1847              	.LVL232:
 285:boards/TMC5130_eval.c **** 		}
 1848              		.loc 1 285 4 view .LVU606
 1849 05fe 0A48     		ldr	r0, .L229
 1850              	.LVL233:
 285:boards/TMC5130_eval.c **** 		}
 1851              		.loc 1 285 4 view .LVU607
 1852 0600 2A21     		movs	r1, #42
 1853              	.LVL234:
 285:boards/TMC5130_eval.c **** 		}
 1854              		.loc 1 285 4 view .LVU608
 1855 0602 FFF7FEFF 		bl	tmc5130_writeInt
 1856              	.LVL235:
 126:boards/TMC5130_eval.c **** 
 1857              		.loc 1 126 11 view .LVU609
 1858 0606 0024     		movs	r4, #0
 1859 0608 B7E6     		b	.L57
 1860              	.LVL236:
 1861              	.L101:
 290:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VSTART);
 1862              		.loc 1 290 3 is_stmt 1 view .LVU610
 290:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VSTART);
 1863              		.loc 1 290 5 is_stmt 0 view .LVU611
 1864 060a 30B9     		cbnz	r0, .L138
 291:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1865              		.loc 1 291 4 is_stmt 1 view .LVU612
 1866              	.LBB354:
 1867              	.LBI354:
  37:boards/TMC5130_eval.c **** {
 1868              		.loc 1 37 31 view .LVU613
 1869              	.LVL237:
  37:boards/TMC5130_eval.c **** {
 1870              		.loc 1 37 31 is_stmt 0 view .LVU614
 1871              	.LBE354:
  39:boards/TMC5130_eval.c **** 
 1872              		.loc 1 39 2 is_stmt 1 view .LVU615
  41:boards/TMC5130_eval.c **** }
 1873              		.loc 1 41 2 view .LVU616
 291:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1874              		.loc 1 291 13 is_stmt 0 view .LVU617
 1875 060c 0648     		ldr	r0, .L229
 1876              	.LVL238:
 291:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1877              		.loc 1 291 13 view .LVU618
 1878 060e 2321     		movs	r1, #35
 1879              	.LVL239:
 291:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1880              		.loc 1 291 13 view .LVU619
 1881 0610 FFF7FEFF 		bl	tmc5130_readInt
 1882              	.LVL240:
 126:boards/TMC5130_eval.c **** 
 1883              		.loc 1 126 11 view .LVU620
 1884 0614 3446     		mov	r4, r6
 291:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1885              		.loc 1 291 11 view .LVU621
 1886 0616 2860     		str	r0, [r5]
 1887 0618 AFE6     		b	.L57
 1888              	.LVL241:
 1889              	.L138:
 292:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_VSTART, *value);
 1890              		.loc 1 292 10 is_stmt 1 view .LVU622
 293:boards/TMC5130_eval.c **** 		}
 1891              		.loc 1 293 4 view .LVU623
 1892              	.LBB355:
 1893              	.LBI355:
  37:boards/TMC5130_eval.c **** {
 1894              		.loc 1 37 31 view .LVU624
  37:boards/TMC5130_eval.c **** {
 1895              		.loc 1 37 31 is_stmt 0 view .LVU625
 1896              	.LBE355:
  39:boards/TMC5130_eval.c **** 
 1897              		.loc 1 39 2 is_stmt 1 view .LVU626
  41:boards/TMC5130_eval.c **** }
 1898              		.loc 1 41 2 view .LVU627
 293:boards/TMC5130_eval.c **** 		}
 1899              		.loc 1 293 4 is_stmt 0 view .LVU628
 1900 061a 2A68     		ldr	r2, [r5]
 1901              	.LVL242:
 293:boards/TMC5130_eval.c **** 		}
 1902              		.loc 1 293 4 view .LVU629
 1903 061c 0248     		ldr	r0, .L229
 1904              	.LVL243:
 293:boards/TMC5130_eval.c **** 		}
 1905              		.loc 1 293 4 view .LVU630
 1906 061e 2321     		movs	r1, #35
 1907              	.LVL244:
 293:boards/TMC5130_eval.c **** 		}
 1908              		.loc 1 293 4 view .LVU631
 1909 0620 FFF7FEFF 		bl	tmc5130_writeInt
 1910              	.LVL245:
 126:boards/TMC5130_eval.c **** 
 1911              		.loc 1 126 11 view .LVU632
 1912 0624 0024     		movs	r4, #0
 1913 0626 A8E6     		b	.L57
 1914              	.L230:
 1915              		.align	2
 1916              	.L229:
 1917 0628 00000000 		.word	.LANCHOR0
 1918              	.LVL246:
 1919              	.L100:
 298:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VSTOP);
 1920              		.loc 1 298 3 is_stmt 1 view .LVU633
 298:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VSTOP);
 1921              		.loc 1 298 5 is_stmt 0 view .LVU634
 1922 062c 30B9     		cbnz	r0, .L139
 299:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1923              		.loc 1 299 4 is_stmt 1 view .LVU635
 1924              	.LBB356:
 1925              	.LBI356:
  37:boards/TMC5130_eval.c **** {
 1926              		.loc 1 37 31 view .LVU636
 1927              	.LVL247:
  37:boards/TMC5130_eval.c **** {
 1928              		.loc 1 37 31 is_stmt 0 view .LVU637
 1929              	.LBE356:
  39:boards/TMC5130_eval.c **** 
 1930              		.loc 1 39 2 is_stmt 1 view .LVU638
  41:boards/TMC5130_eval.c **** }
 1931              		.loc 1 41 2 view .LVU639
 299:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1932              		.loc 1 299 13 is_stmt 0 view .LVU640
 1933 062e AC48     		ldr	r0, .L231
 1934              	.LVL248:
 299:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1935              		.loc 1 299 13 view .LVU641
 1936 0630 2B21     		movs	r1, #43
 1937              	.LVL249:
 299:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1938              		.loc 1 299 13 view .LVU642
 1939 0632 FFF7FEFF 		bl	tmc5130_readInt
 1940              	.LVL250:
 126:boards/TMC5130_eval.c **** 
 1941              		.loc 1 126 11 view .LVU643
 1942 0636 3446     		mov	r4, r6
 299:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1943              		.loc 1 299 11 view .LVU644
 1944 0638 2860     		str	r0, [r5]
 1945 063a 9EE6     		b	.L57
 1946              	.LVL251:
 1947              	.L139:
 300:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_VSTOP, *value);
 1948              		.loc 1 300 10 is_stmt 1 view .LVU645
 301:boards/TMC5130_eval.c **** 		}
 1949              		.loc 1 301 4 view .LVU646
 1950              	.LBB357:
 1951              	.LBI357:
  37:boards/TMC5130_eval.c **** {
 1952              		.loc 1 37 31 view .LVU647
  37:boards/TMC5130_eval.c **** {
 1953              		.loc 1 37 31 is_stmt 0 view .LVU648
 1954              	.LBE357:
  39:boards/TMC5130_eval.c **** 
 1955              		.loc 1 39 2 is_stmt 1 view .LVU649
  41:boards/TMC5130_eval.c **** }
 1956              		.loc 1 41 2 view .LVU650
 301:boards/TMC5130_eval.c **** 		}
 1957              		.loc 1 301 4 is_stmt 0 view .LVU651
 1958 063c 2A68     		ldr	r2, [r5]
 1959              	.LVL252:
 301:boards/TMC5130_eval.c **** 		}
 1960              		.loc 1 301 4 view .LVU652
 1961 063e A848     		ldr	r0, .L231
 1962              	.LVL253:
 301:boards/TMC5130_eval.c **** 		}
 1963              		.loc 1 301 4 view .LVU653
 1964 0640 2B21     		movs	r1, #43
 1965              	.LVL254:
 301:boards/TMC5130_eval.c **** 		}
 1966              		.loc 1 301 4 view .LVU654
 1967 0642 FFF7FEFF 		bl	tmc5130_writeInt
 1968              	.LVL255:
 126:boards/TMC5130_eval.c **** 
 1969              		.loc 1 126 11 view .LVU655
 1970 0646 0024     		movs	r4, #0
 1971 0648 97E6     		b	.L57
 1972              	.LVL256:
 1973              	.L99:
 306:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_TZEROWAIT);
 1974              		.loc 1 306 3 is_stmt 1 view .LVU656
 306:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_TZEROWAIT);
 1975              		.loc 1 306 5 is_stmt 0 view .LVU657
 1976 064a 30B9     		cbnz	r0, .L140
 307:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1977              		.loc 1 307 4 is_stmt 1 view .LVU658
 1978              	.LBB358:
 1979              	.LBI358:
  37:boards/TMC5130_eval.c **** {
 1980              		.loc 1 37 31 view .LVU659
 1981              	.LVL257:
  37:boards/TMC5130_eval.c **** {
 1982              		.loc 1 37 31 is_stmt 0 view .LVU660
 1983              	.LBE358:
  39:boards/TMC5130_eval.c **** 
 1984              		.loc 1 39 2 is_stmt 1 view .LVU661
  41:boards/TMC5130_eval.c **** }
 1985              		.loc 1 41 2 view .LVU662
 307:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1986              		.loc 1 307 13 is_stmt 0 view .LVU663
 1987 064c A448     		ldr	r0, .L231
 1988              	.LVL258:
 307:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1989              		.loc 1 307 13 view .LVU664
 1990 064e 2C21     		movs	r1, #44
 1991              	.LVL259:
 307:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1992              		.loc 1 307 13 view .LVU665
 1993 0650 FFF7FEFF 		bl	tmc5130_readInt
 1994              	.LVL260:
 126:boards/TMC5130_eval.c **** 
 1995              		.loc 1 126 11 view .LVU666
 1996 0654 3446     		mov	r4, r6
 307:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 1997              		.loc 1 307 11 view .LVU667
 1998 0656 2860     		str	r0, [r5]
 1999 0658 8FE6     		b	.L57
 2000              	.LVL261:
 2001              	.L140:
 308:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TZEROWAIT, *value);
 2002              		.loc 1 308 10 is_stmt 1 view .LVU668
 309:boards/TMC5130_eval.c **** 		}
 2003              		.loc 1 309 4 view .LVU669
 2004              	.LBB359:
 2005              	.LBI359:
  37:boards/TMC5130_eval.c **** {
 2006              		.loc 1 37 31 view .LVU670
  37:boards/TMC5130_eval.c **** {
 2007              		.loc 1 37 31 is_stmt 0 view .LVU671
 2008              	.LBE359:
  39:boards/TMC5130_eval.c **** 
 2009              		.loc 1 39 2 is_stmt 1 view .LVU672
  41:boards/TMC5130_eval.c **** }
 2010              		.loc 1 41 2 view .LVU673
 309:boards/TMC5130_eval.c **** 		}
 2011              		.loc 1 309 4 is_stmt 0 view .LVU674
 2012 065a 2A68     		ldr	r2, [r5]
 2013              	.LVL262:
 309:boards/TMC5130_eval.c **** 		}
 2014              		.loc 1 309 4 view .LVU675
 2015 065c A048     		ldr	r0, .L231
 2016              	.LVL263:
 309:boards/TMC5130_eval.c **** 		}
 2017              		.loc 1 309 4 view .LVU676
 2018 065e 2C21     		movs	r1, #44
 2019              	.LVL264:
 309:boards/TMC5130_eval.c **** 		}
 2020              		.loc 1 309 4 view .LVU677
 2021 0660 FFF7FEFF 		bl	tmc5130_writeInt
 2022              	.LVL265:
 126:boards/TMC5130_eval.c **** 
 2023              		.loc 1 126 11 view .LVU678
 2024 0664 0024     		movs	r4, #0
 2025 0666 88E6     		b	.L57
 2026              	.LVL266:
 2027              	.L98:
 315:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_THIGH);
 2028              		.loc 1 315 3 is_stmt 1 view .LVU679
 2029 0668 9E4C     		ldr	r4, .L231+4
 315:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_THIGH);
 2030              		.loc 1 315 5 is_stmt 0 view .LVU680
 2031 066a 80B9     		cbnz	r0, .L141
 316:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 2032              		.loc 1 316 4 is_stmt 1 view .LVU681
 2033              	.LBB360:
 2034              	.LBI360:
  37:boards/TMC5130_eval.c **** {
 2035              		.loc 1 37 31 view .LVU682
 2036              	.LVL267:
  37:boards/TMC5130_eval.c **** {
 2037              		.loc 1 37 31 is_stmt 0 view .LVU683
 2038              	.LBE360:
  39:boards/TMC5130_eval.c **** 
 2039              		.loc 1 39 2 is_stmt 1 view .LVU684
  41:boards/TMC5130_eval.c **** }
 2040              		.loc 1 41 2 view .LVU685
 316:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 2041              		.loc 1 316 13 is_stmt 0 view .LVU686
 2042 066c 9C48     		ldr	r0, .L231
 2043              	.LVL268:
 316:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 2044              		.loc 1 316 13 view .LVU687
 2045 066e 1521     		movs	r1, #21
 2046              	.LVL269:
 316:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer:1));
 2047              		.loc 1 316 13 view .LVU688
 2048 0670 FFF7FEFF 		bl	tmc5130_readInt
 2049              	.LVL270:
 317:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2050              		.loc 1 317 4 is_stmt 1 view .LVU689
 317:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2051              		.loc 1 317 13 is_stmt 0 view .LVU690
 2052 0674 0128     		cmp	r0, #1
 2053 0676 38BF     		it	cc
 2054 0678 0120     		movcc	r0, #1
 2055              	.LVL271:
 317:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2056              		.loc 1 317 13 view .LVU691
 2057 067a 4FF08073 		mov	r3, #16777216
 2058 067e B3FBF0F0 		udiv	r0, r3, r0
 317:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2059              		.loc 1 317 11 view .LVU692
 2060 0682 A042     		cmp	r0, r4
 2061 0684 94BF     		ite	ls
 2062 0686 2860     		strls	r0, [r5]
 2063 0688 2C60     		strhi	r4, [r5]
 126:boards/TMC5130_eval.c **** 
 2064              		.loc 1 126 11 view .LVU693
 2065 068a 3446     		mov	r4, r6
 2066 068c 75E6     		b	.L57
 2067              	.LVL272:
 2068              	.L141:
 318:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 2069              		.loc 1 318 10 is_stmt 1 view .LVU694
 319:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_THIGH, *value);
 2070              		.loc 1 319 4 view .LVU695
 319:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_THIGH, *value);
 2071              		.loc 1 319 13 is_stmt 0 view .LVU696
 2072 068e 2B68     		ldr	r3, [r5]
 320:boards/TMC5130_eval.c **** 		}
 2073              		.loc 1 320 4 view .LVU697
 2074 0690 9348     		ldr	r0, .L231
 2075              	.LVL273:
 319:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_THIGH, *value);
 2076              		.loc 1 319 13 view .LVU698
 2077 0692 002B     		cmp	r3, #0
 2078 0694 08BF     		it	eq
 2079 0696 0123     		moveq	r3, #1
 2080 0698 4FF08072 		mov	r2, #16777216
 2081              	.LVL274:
 319:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_THIGH, *value);
 2082              		.loc 1 319 13 view .LVU699
 2083 069c 92FBF3F2 		sdiv	r2, r2, r3
 2084 06a0 A242     		cmp	r2, r4
 2085 06a2 A8BF     		it	ge
 2086 06a4 2246     		movge	r2, r4
 319:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_THIGH, *value);
 2087              		.loc 1 319 11 view .LVU700
 2088 06a6 2A60     		str	r2, [r5]
 320:boards/TMC5130_eval.c **** 		}
 2089              		.loc 1 320 4 is_stmt 1 view .LVU701
 2090              	.LBB361:
 2091              	.LBI361:
  37:boards/TMC5130_eval.c **** {
 2092              		.loc 1 37 31 view .LVU702
 2093              	.LVL275:
  37:boards/TMC5130_eval.c **** {
 2094              		.loc 1 37 31 is_stmt 0 view .LVU703
 2095              	.LBE361:
  39:boards/TMC5130_eval.c **** 
 2096              		.loc 1 39 2 is_stmt 1 view .LVU704
  41:boards/TMC5130_eval.c **** }
 2097              		.loc 1 41 2 view .LVU705
 320:boards/TMC5130_eval.c **** 		}
 2098              		.loc 1 320 4 is_stmt 0 view .LVU706
 2099 06a8 1521     		movs	r1, #21
 2100              	.LVL276:
 320:boards/TMC5130_eval.c **** 		}
 2101              		.loc 1 320 4 view .LVU707
 2102 06aa FFF7FEFF 		bl	tmc5130_writeInt
 2103              	.LVL277:
 126:boards/TMC5130_eval.c **** 
 2104              		.loc 1 126 11 view .LVU708
 2105 06ae 0024     		movs	r4, #0
 2106 06b0 63E6     		b	.L57
 2107              	.LVL278:
 2108              	.L97:
 325:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VDCMIN);
 2109              		.loc 1 325 3 is_stmt 1 view .LVU709
 325:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_VDCMIN);
 2110              		.loc 1 325 5 is_stmt 0 view .LVU710
 2111 06b2 30B9     		cbnz	r0, .L143
 326:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2112              		.loc 1 326 4 is_stmt 1 view .LVU711
 2113              	.LBB362:
 2114              	.LBI362:
  37:boards/TMC5130_eval.c **** {
 2115              		.loc 1 37 31 view .LVU712
 2116              	.LVL279:
  37:boards/TMC5130_eval.c **** {
 2117              		.loc 1 37 31 is_stmt 0 view .LVU713
 2118              	.LBE362:
  39:boards/TMC5130_eval.c **** 
 2119              		.loc 1 39 2 is_stmt 1 view .LVU714
  41:boards/TMC5130_eval.c **** }
 2120              		.loc 1 41 2 view .LVU715
 326:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2121              		.loc 1 326 13 is_stmt 0 view .LVU716
 2122 06b4 8A48     		ldr	r0, .L231
 2123              	.LVL280:
 326:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2124              		.loc 1 326 13 view .LVU717
 2125 06b6 3321     		movs	r1, #51
 2126              	.LVL281:
 326:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2127              		.loc 1 326 13 view .LVU718
 2128 06b8 FFF7FEFF 		bl	tmc5130_readInt
 2129              	.LVL282:
 126:boards/TMC5130_eval.c **** 
 2130              		.loc 1 126 11 view .LVU719
 2131 06bc 3446     		mov	r4, r6
 326:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2132              		.loc 1 326 11 view .LVU720
 2133 06be 2860     		str	r0, [r5]
 2134 06c0 5BE6     		b	.L57
 2135              	.LVL283:
 2136              	.L143:
 327:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_VDCMIN, *value);
 2137              		.loc 1 327 10 is_stmt 1 view .LVU721
 328:boards/TMC5130_eval.c **** 		}
 2138              		.loc 1 328 4 view .LVU722
 2139              	.LBB363:
 2140              	.LBI363:
  37:boards/TMC5130_eval.c **** {
 2141              		.loc 1 37 31 view .LVU723
  37:boards/TMC5130_eval.c **** {
 2142              		.loc 1 37 31 is_stmt 0 view .LVU724
 2143              	.LBE363:
  39:boards/TMC5130_eval.c **** 
 2144              		.loc 1 39 2 is_stmt 1 view .LVU725
  41:boards/TMC5130_eval.c **** }
 2145              		.loc 1 41 2 view .LVU726
 328:boards/TMC5130_eval.c **** 		}
 2146              		.loc 1 328 4 is_stmt 0 view .LVU727
 2147 06c2 2A68     		ldr	r2, [r5]
 2148              	.LVL284:
 328:boards/TMC5130_eval.c **** 		}
 2149              		.loc 1 328 4 view .LVU728
 2150 06c4 8648     		ldr	r0, .L231
 2151              	.LVL285:
 328:boards/TMC5130_eval.c **** 		}
 2152              		.loc 1 328 4 view .LVU729
 2153 06c6 3321     		movs	r1, #51
 2154              	.LVL286:
 328:boards/TMC5130_eval.c **** 		}
 2155              		.loc 1 328 4 view .LVU730
 2156 06c8 FFF7FEFF 		bl	tmc5130_writeInt
 2157              	.LVL287:
 126:boards/TMC5130_eval.c **** 
 2158              		.loc 1 126 11 view .LVU731
 2159 06cc 0024     		movs	r4, #0
 2160 06ce 54E6     		b	.L57
 2161              	.LVL288:
 2162              	.L96:
 333:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHCHM_MASK, TMC5130_V
 2163              		.loc 1 333 3 is_stmt 1 view .LVU732
 334:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2164              		.loc 1 334 13 is_stmt 0 view .LVU733
 2165 06d0 8348     		ldr	r0, .L231
 2166              	.LVL289:
 334:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2167              		.loc 1 334 13 view .LVU734
 2168 06d2 6C21     		movs	r1, #108
 2169              	.LVL290:
 333:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHCHM_MASK, TMC5130_V
 2170              		.loc 1 333 5 view .LVU735
 2171 06d4 36B9     		cbnz	r6, .L144
 334:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2172              		.loc 1 334 4 is_stmt 1 view .LVU736
 2173              	.LBB364:
 2174              	.LBI364:
  37:boards/TMC5130_eval.c **** {
 2175              		.loc 1 37 31 view .LVU737
 2176              	.LVL291:
  37:boards/TMC5130_eval.c **** {
 2177              		.loc 1 37 31 is_stmt 0 view .LVU738
 2178              	.LBE364:
  39:boards/TMC5130_eval.c **** 
 2179              		.loc 1 39 2 is_stmt 1 view .LVU739
  41:boards/TMC5130_eval.c **** }
 2180              		.loc 1 41 2 view .LVU740
 334:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2181              		.loc 1 334 13 is_stmt 0 view .LVU741
 2182 06d6 FFF7FEFF 		bl	tmc5130_readInt
 2183              	.LVL292:
 334:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2184              		.loc 1 334 13 view .LVU742
 2185 06da C0F3C040 		ubfx	r0, r0, #19, #1
 334:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2186              		.loc 1 334 11 view .LVU743
 2187 06de 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2188              		.loc 1 126 11 view .LVU744
 2189 06e0 3446     		mov	r4, r6
 2190 06e2 4AE6     		b	.L57
 2191              	.LVL293:
 2192              	.L144:
 335:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHCHM_MASK, TMC5130_VHIGHCHM_
 2193              		.loc 1 335 10 is_stmt 1 view .LVU745
 336:boards/TMC5130_eval.c **** 		}
 2194              		.loc 1 336 4 view .LVU746
 2195              	.LBB365:
 2196              	.LBI365:
  37:boards/TMC5130_eval.c **** {
 2197              		.loc 1 37 31 view .LVU747
  37:boards/TMC5130_eval.c **** {
 2198              		.loc 1 37 31 is_stmt 0 view .LVU748
 2199              	.LBE365:
  39:boards/TMC5130_eval.c **** 
 2200              		.loc 1 39 2 is_stmt 1 view .LVU749
  41:boards/TMC5130_eval.c **** }
 2201              		.loc 1 41 2 view .LVU750
 2202              	.LBB366:
 2203              	.LBI366:
  37:boards/TMC5130_eval.c **** {
 2204              		.loc 1 37 31 view .LVU751
  37:boards/TMC5130_eval.c **** {
 2205              		.loc 1 37 31 is_stmt 0 view .LVU752
 2206              	.LBE366:
  39:boards/TMC5130_eval.c **** 
 2207              		.loc 1 39 2 is_stmt 1 view .LVU753
  41:boards/TMC5130_eval.c **** }
 2208              		.loc 1 41 2 view .LVU754
 336:boards/TMC5130_eval.c **** 		}
 2209              		.loc 1 336 4 is_stmt 0 view .LVU755
 2210 06e4 FFF7FEFF 		bl	tmc5130_readInt
 2211              	.LVL294:
 336:boards/TMC5130_eval.c **** 		}
 2212              		.loc 1 336 4 view .LVU756
 2213 06e8 2B68     		ldr	r3, [r5]
 2214 06ea DB04     		lsls	r3, r3, #19
 2215 06ec 03F40023 		and	r3, r3, #524288
 2216 06f0 20F40022 		bic	r2, r0, #524288
 2217 06f4 1A43     		orrs	r2, r2, r3
 2218 06f6 7A48     		ldr	r0, .L231
 2219 06f8 6C21     		movs	r1, #108
 2220 06fa FFF7FEFF 		bl	tmc5130_writeInt
 2221              	.LVL295:
 126:boards/TMC5130_eval.c **** 
 2222              		.loc 1 126 11 view .LVU757
 2223 06fe 0024     		movs	r4, #0
 2224 0700 3BE6     		b	.L57
 2225              	.LVL296:
 2226              	.L95:
 341:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHFS_MASK, TMC5130_VH
 2227              		.loc 1 341 3 is_stmt 1 view .LVU758
 342:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2228              		.loc 1 342 13 is_stmt 0 view .LVU759
 2229 0702 7748     		ldr	r0, .L231
 2230              	.LVL297:
 342:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2231              		.loc 1 342 13 view .LVU760
 2232 0704 6C21     		movs	r1, #108
 2233              	.LVL298:
 341:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHFS_MASK, TMC5130_VH
 2234              		.loc 1 341 5 view .LVU761
 2235 0706 36B9     		cbnz	r6, .L145
 342:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2236              		.loc 1 342 4 is_stmt 1 view .LVU762
 2237              	.LBB367:
 2238              	.LBI367:
  37:boards/TMC5130_eval.c **** {
 2239              		.loc 1 37 31 view .LVU763
 2240              	.LVL299:
  37:boards/TMC5130_eval.c **** {
 2241              		.loc 1 37 31 is_stmt 0 view .LVU764
 2242              	.LBE367:
  39:boards/TMC5130_eval.c **** 
 2243              		.loc 1 39 2 is_stmt 1 view .LVU765
  41:boards/TMC5130_eval.c **** }
 2244              		.loc 1 41 2 view .LVU766
 342:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2245              		.loc 1 342 13 is_stmt 0 view .LVU767
 2246 0708 FFF7FEFF 		bl	tmc5130_readInt
 2247              	.LVL300:
 342:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2248              		.loc 1 342 13 view .LVU768
 2249 070c C0F38040 		ubfx	r0, r0, #18, #1
 342:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2250              		.loc 1 342 11 view .LVU769
 2251 0710 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2252              		.loc 1 126 11 view .LVU770
 2253 0712 3446     		mov	r4, r6
 2254 0714 31E6     		b	.L57
 2255              	.LVL301:
 2256              	.L145:
 343:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VHIGHFS_MASK, TMC5130_VHIGHFS_SH
 2257              		.loc 1 343 10 is_stmt 1 view .LVU771
 344:boards/TMC5130_eval.c **** 		}
 2258              		.loc 1 344 4 view .LVU772
 2259              	.LBB368:
 2260              	.LBI368:
  37:boards/TMC5130_eval.c **** {
 2261              		.loc 1 37 31 view .LVU773
  37:boards/TMC5130_eval.c **** {
 2262              		.loc 1 37 31 is_stmt 0 view .LVU774
 2263              	.LBE368:
  39:boards/TMC5130_eval.c **** 
 2264              		.loc 1 39 2 is_stmt 1 view .LVU775
  41:boards/TMC5130_eval.c **** }
 2265              		.loc 1 41 2 view .LVU776
 2266              	.LBB369:
 2267              	.LBI369:
  37:boards/TMC5130_eval.c **** {
 2268              		.loc 1 37 31 view .LVU777
  37:boards/TMC5130_eval.c **** {
 2269              		.loc 1 37 31 is_stmt 0 view .LVU778
 2270              	.LBE369:
  39:boards/TMC5130_eval.c **** 
 2271              		.loc 1 39 2 is_stmt 1 view .LVU779
  41:boards/TMC5130_eval.c **** }
 2272              		.loc 1 41 2 view .LVU780
 344:boards/TMC5130_eval.c **** 		}
 2273              		.loc 1 344 4 is_stmt 0 view .LVU781
 2274 0716 FFF7FEFF 		bl	tmc5130_readInt
 2275              	.LVL302:
 344:boards/TMC5130_eval.c **** 		}
 2276              		.loc 1 344 4 view .LVU782
 2277 071a 2B68     		ldr	r3, [r5]
 2278 071c 9B04     		lsls	r3, r3, #18
 2279 071e 03F48023 		and	r3, r3, #262144
 2280 0722 20F48022 		bic	r2, r0, #262144
 2281 0726 1A43     		orrs	r2, r2, r3
 2282 0728 6D48     		ldr	r0, .L231
 2283 072a 6C21     		movs	r1, #108
 2284 072c FFF7FEFF 		bl	tmc5130_writeInt
 2285              	.LVL303:
 126:boards/TMC5130_eval.c **** 
 2286              		.loc 1 126 11 view .LVU783
 2287 0730 0024     		movs	r4, #0
 2288 0732 22E6     		b	.L57
 2289              	.LVL304:
 2290              	.L94:
 349:boards/TMC5130_eval.c **** 			*value = motorToIC(motor)->velocity;
 2291              		.loc 1 349 3 is_stmt 1 view .LVU784
 349:boards/TMC5130_eval.c **** 			*value = motorToIC(motor)->velocity;
 2292              		.loc 1 349 5 is_stmt 0 view .LVU785
 2293 0734 0028     		cmp	r0, #0
 2294 0736 40F0F883 		bne	.L214
 350:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2295              		.loc 1 350 4 is_stmt 1 view .LVU786
 2296              	.LVL305:
  39:boards/TMC5130_eval.c **** 
 2297              		.loc 1 39 2 view .LVU787
  41:boards/TMC5130_eval.c **** }
 2298              		.loc 1 41 2 view .LVU788
 350:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2299              		.loc 1 350 29 is_stmt 0 view .LVU789
 2300 073a 694B     		ldr	r3, .L231
 350:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2301              		.loc 1 350 11 view .LVU790
 2302 073c 5B68     		ldr	r3, [r3, #4]
 2303 073e 2B60     		str	r3, [r5]
 126:boards/TMC5130_eval.c **** 
 2304              		.loc 1 126 11 view .LVU791
 2305 0740 0446     		mov	r4, r0
 2306 0742 1AE6     		b	.L57
 2307              	.LVL306:
 2308              	.L93:
 357:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_GCONF, TMC5130_I_SCALE_ANALOG_MASK, TMC513
 2309              		.loc 1 357 3 is_stmt 1 view .LVU792
 357:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_GCONF, TMC5130_I_SCALE_ANALOG_MASK, TMC513
 2310              		.loc 1 357 5 is_stmt 0 view .LVU793
 2311 0744 40B9     		cbnz	r0, .L146
 358:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2312              		.loc 1 358 4 is_stmt 1 view .LVU794
 2313              	.LBB370:
 2314              	.LBI370:
  37:boards/TMC5130_eval.c **** {
 2315              		.loc 1 37 31 view .LVU795
 2316              	.LVL307:
  37:boards/TMC5130_eval.c **** {
 2317              		.loc 1 37 31 is_stmt 0 view .LVU796
 2318              	.LBE370:
  39:boards/TMC5130_eval.c **** 
 2319              		.loc 1 39 2 is_stmt 1 view .LVU797
  41:boards/TMC5130_eval.c **** }
 2320              		.loc 1 41 2 view .LVU798
 358:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2321              		.loc 1 358 13 is_stmt 0 view .LVU799
 2322 0746 0146     		mov	r1, r0
 2323              	.LVL308:
 358:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2324              		.loc 1 358 13 view .LVU800
 2325 0748 6548     		ldr	r0, .L231
 2326              	.LVL309:
 358:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2327              		.loc 1 358 13 view .LVU801
 2328 074a FFF7FEFF 		bl	tmc5130_readInt
 2329              	.LVL310:
 358:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2330              		.loc 1 358 13 view .LVU802
 2331 074e 00F00100 		and	r0, r0, #1
 358:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2332              		.loc 1 358 11 view .LVU803
 2333 0752 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2334              		.loc 1 126 11 view .LVU804
 2335 0754 3446     		mov	r4, r6
 2336 0756 10E6     		b	.L57
 2337              	.LVL311:
 2338              	.L146:
 359:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_GCONF, TMC5130_I_SCALE_ANALOG_MASK, TMC5130_I_SCAL
 2339              		.loc 1 359 10 is_stmt 1 view .LVU805
 360:boards/TMC5130_eval.c **** 		}
 2340              		.loc 1 360 4 view .LVU806
 2341              	.LBB371:
 2342              	.LBI371:
  37:boards/TMC5130_eval.c **** {
 2343              		.loc 1 37 31 view .LVU807
  37:boards/TMC5130_eval.c **** {
 2344              		.loc 1 37 31 is_stmt 0 view .LVU808
 2345              	.LBE371:
  39:boards/TMC5130_eval.c **** 
 2346              		.loc 1 39 2 is_stmt 1 view .LVU809
  41:boards/TMC5130_eval.c **** }
 2347              		.loc 1 41 2 view .LVU810
 2348              	.LBB372:
 2349              	.LBI372:
  37:boards/TMC5130_eval.c **** {
 2350              		.loc 1 37 31 view .LVU811
  37:boards/TMC5130_eval.c **** {
 2351              		.loc 1 37 31 is_stmt 0 view .LVU812
 2352              	.LBE372:
  39:boards/TMC5130_eval.c **** 
 2353              		.loc 1 39 2 is_stmt 1 view .LVU813
  41:boards/TMC5130_eval.c **** }
 2354              		.loc 1 41 2 view .LVU814
 360:boards/TMC5130_eval.c **** 		}
 2355              		.loc 1 360 4 is_stmt 0 view .LVU815
 2356 0758 0021     		movs	r1, #0
 2357              	.LVL312:
 360:boards/TMC5130_eval.c **** 		}
 2358              		.loc 1 360 4 view .LVU816
 2359 075a 6148     		ldr	r0, .L231
 2360              	.LVL313:
 360:boards/TMC5130_eval.c **** 		}
 2361              		.loc 1 360 4 view .LVU817
 2362 075c FFF7FEFF 		bl	tmc5130_readInt
 2363              	.LVL314:
 360:boards/TMC5130_eval.c **** 		}
 2364              		.loc 1 360 4 view .LVU818
 2365 0760 2A68     		ldr	r2, [r5]
 2366 0762 20F00100 		bic	r0, r0, #1
 2367 0766 02F00102 		and	r2, r2, #1
 2368 076a 0243     		orrs	r2, r2, r0
 2369 076c 0021     		movs	r1, #0
 2370 076e 5C48     		ldr	r0, .L231
 2371 0770 FFF7FEFF 		bl	tmc5130_writeInt
 2372              	.LVL315:
 126:boards/TMC5130_eval.c **** 
 2373              		.loc 1 126 11 view .LVU819
 2374 0774 0024     		movs	r4, #0
 2375 0776 00E6     		b	.L57
 2376              	.LVL316:
 2377              	.L91:
 365:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_GCONF, TMC5130_INTERNAL_RSENSE_MASK, TMC51
 2378              		.loc 1 365 3 is_stmt 1 view .LVU820
 365:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_GCONF, TMC5130_INTERNAL_RSENSE_MASK, TMC51
 2379              		.loc 1 365 5 is_stmt 0 view .LVU821
 2380 0778 40B9     		cbnz	r0, .L147
 366:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2381              		.loc 1 366 4 is_stmt 1 view .LVU822
 2382              	.LBB373:
 2383              	.LBI373:
  37:boards/TMC5130_eval.c **** {
 2384              		.loc 1 37 31 view .LVU823
 2385              	.LVL317:
  37:boards/TMC5130_eval.c **** {
 2386              		.loc 1 37 31 is_stmt 0 view .LVU824
 2387              	.LBE373:
  39:boards/TMC5130_eval.c **** 
 2388              		.loc 1 39 2 is_stmt 1 view .LVU825
  41:boards/TMC5130_eval.c **** }
 2389              		.loc 1 41 2 view .LVU826
 366:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2390              		.loc 1 366 13 is_stmt 0 view .LVU827
 2391 077a 0146     		mov	r1, r0
 2392              	.LVL318:
 366:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2393              		.loc 1 366 13 view .LVU828
 2394 077c 5848     		ldr	r0, .L231
 2395              	.LVL319:
 366:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2396              		.loc 1 366 13 view .LVU829
 2397 077e FFF7FEFF 		bl	tmc5130_readInt
 2398              	.LVL320:
 366:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2399              		.loc 1 366 13 view .LVU830
 2400 0782 C0F34000 		ubfx	r0, r0, #1, #1
 366:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2401              		.loc 1 366 11 view .LVU831
 2402 0786 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2403              		.loc 1 126 11 view .LVU832
 2404 0788 3446     		mov	r4, r6
 2405 078a F6E5     		b	.L57
 2406              	.LVL321:
 2407              	.L147:
 367:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_GCONF, TMC5130_INTERNAL_RSENSE_MASK, TMC5130_INTER
 2408              		.loc 1 367 10 is_stmt 1 view .LVU833
 368:boards/TMC5130_eval.c **** 		}
 2409              		.loc 1 368 4 view .LVU834
 2410              	.LBB374:
 2411              	.LBI374:
  37:boards/TMC5130_eval.c **** {
 2412              		.loc 1 37 31 view .LVU835
  37:boards/TMC5130_eval.c **** {
 2413              		.loc 1 37 31 is_stmt 0 view .LVU836
 2414              	.LBE374:
  39:boards/TMC5130_eval.c **** 
 2415              		.loc 1 39 2 is_stmt 1 view .LVU837
  41:boards/TMC5130_eval.c **** }
 2416              		.loc 1 41 2 view .LVU838
 2417              	.LBB375:
 2418              	.LBI375:
  37:boards/TMC5130_eval.c **** {
 2419              		.loc 1 37 31 view .LVU839
  37:boards/TMC5130_eval.c **** {
 2420              		.loc 1 37 31 is_stmt 0 view .LVU840
 2421              	.LBE375:
  39:boards/TMC5130_eval.c **** 
 2422              		.loc 1 39 2 is_stmt 1 view .LVU841
  41:boards/TMC5130_eval.c **** }
 2423              		.loc 1 41 2 view .LVU842
 368:boards/TMC5130_eval.c **** 		}
 2424              		.loc 1 368 4 is_stmt 0 view .LVU843
 2425 078c 0021     		movs	r1, #0
 2426              	.LVL322:
 368:boards/TMC5130_eval.c **** 		}
 2427              		.loc 1 368 4 view .LVU844
 2428 078e 5448     		ldr	r0, .L231
 2429              	.LVL323:
 368:boards/TMC5130_eval.c **** 		}
 2430              		.loc 1 368 4 view .LVU845
 2431 0790 FFF7FEFF 		bl	tmc5130_readInt
 2432              	.LVL324:
 368:boards/TMC5130_eval.c **** 		}
 2433              		.loc 1 368 4 view .LVU846
 2434 0794 2B68     		ldr	r3, [r5]
 2435 0796 5B00     		lsls	r3, r3, #1
 2436 0798 03F00203 		and	r3, r3, #2
 2437 079c 20F00202 		bic	r2, r0, #2
 2438 07a0 1A43     		orrs	r2, r2, r3
 2439 07a2 4F48     		ldr	r0, .L231
 2440 07a4 0021     		movs	r1, #0
 2441 07a6 FFF7FEFF 		bl	tmc5130_writeInt
 2442              	.LVL325:
 126:boards/TMC5130_eval.c **** 
 2443              		.loc 1 126 11 view .LVU847
 2444 07aa 0024     		movs	r4, #0
 2445 07ac E5E5     		b	.L57
 2446              	.LVL326:
 2447              	.L90:
 373:boards/TMC5130_eval.c **** 			*value = 256 >> TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_MRES_MASK, TMC513
 2448              		.loc 1 373 3 is_stmt 1 view .LVU848
 373:boards/TMC5130_eval.c **** 			*value = 256 >> TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_MRES_MASK, TMC513
 2449              		.loc 1 373 5 is_stmt 0 view .LVU849
 2450 07ae 5EB9     		cbnz	r6, .L148
 374:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2451              		.loc 1 374 4 is_stmt 1 view .LVU850
 2452              	.LBB376:
 2453              	.LBI376:
  37:boards/TMC5130_eval.c **** {
 2454              		.loc 1 37 31 view .LVU851
 2455              	.LVL327:
  37:boards/TMC5130_eval.c **** {
 2456              		.loc 1 37 31 is_stmt 0 view .LVU852
 2457              	.LBE376:
  39:boards/TMC5130_eval.c **** 
 2458              		.loc 1 39 2 is_stmt 1 view .LVU853
  41:boards/TMC5130_eval.c **** }
 2459              		.loc 1 41 2 view .LVU854
 374:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2460              		.loc 1 374 20 is_stmt 0 view .LVU855
 2461 07b0 4B48     		ldr	r0, .L231
 2462              	.LVL328:
 374:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2463              		.loc 1 374 20 view .LVU856
 2464 07b2 6C21     		movs	r1, #108
 2465              	.LVL329:
 374:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2466              		.loc 1 374 20 view .LVU857
 2467 07b4 FFF7FEFF 		bl	tmc5130_readInt
 2468              	.LVL330:
 2469 07b8 C0F30363 		ubfx	r3, r0, #24, #4
 374:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2470              		.loc 1 374 17 view .LVU858
 2471 07bc 4FF48070 		mov	r0, #256
 2472 07c0 1841     		asrs	r0, r0, r3
 374:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2473              		.loc 1 374 11 view .LVU859
 2474 07c2 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2475              		.loc 1 126 11 view .LVU860
 2476 07c4 3446     		mov	r4, r6
 2477 07c6 D8E5     		b	.L57
 2478              	.LVL331:
 2479              	.L148:
 375:boards/TMC5130_eval.c **** 			switch(*value)
 2480              		.loc 1 375 10 is_stmt 1 view .LVU861
 376:boards/TMC5130_eval.c **** 			{
 2481              		.loc 1 376 4 view .LVU862
 376:boards/TMC5130_eval.c **** 			{
 2482              		.loc 1 376 11 is_stmt 0 view .LVU863
 2483 07c8 2B68     		ldr	r3, [r5]
 2484 07ca 102B     		cmp	r3, #16
 2485 07cc 35D0     		beq	.L149
 2486 07ce 0ADC     		bgt	.L150
 2487 07d0 013B     		subs	r3, r3, #1
 2488 07d2 072B     		cmp	r3, #7
 2489 07d4 0ED8     		bhi	.L151
 2490 07d6 072B     		cmp	r3, #7
 2491 07d8 0CD8     		bhi	.L151
 2492 07da DFE803F0 		tbb	[pc, r3]
 2493              	.L153:
 2494 07de 15       		.byte	(.L156-.L153)/2
 2495 07df 28       		.byte	(.L155-.L153)/2
 2496 07e0 0B       		.byte	(.L151-.L153)/2
 2497 07e1 2A       		.byte	(.L154-.L153)/2
 2498 07e2 0B       		.byte	(.L151-.L153)/2
 2499 07e3 0B       		.byte	(.L151-.L153)/2
 2500 07e4 0B       		.byte	(.L151-.L153)/2
 2501 07e5 2C       		.byte	(.L152-.L153)/2
 2502              		.p2align 1
 2503              	.L150:
 2504 07e6 802B     		cmp	r3, #128
 2505 07e8 2DD0     		beq	.L157
 2506 07ea 08DC     		bgt	.L158
 2507 07ec 202B     		cmp	r3, #32
 2508 07ee 26D0     		beq	.L159
 2509 07f0 402B     		cmp	r3, #64
 2510 07f2 26D0     		beq	.L160
 2511              	.L151:
 387:boards/TMC5130_eval.c **** 			}
 2512              		.loc 1 387 15 is_stmt 1 view .LVU864
 387:boards/TMC5130_eval.c **** 			}
 2513              		.loc 1 387 22 is_stmt 0 view .LVU865
 2514 07f4 4FF0FF33 		mov	r3, #-1
 2515 07f8 2B60     		str	r3, [r5]
 387:boards/TMC5130_eval.c **** 			}
 2516              		.loc 1 387 29 is_stmt 1 view .LVU866
 390:boards/TMC5130_eval.c **** 			{
 2517              		.loc 1 390 4 view .LVU867
 396:boards/TMC5130_eval.c **** 			}
 2518              		.loc 1 396 12 is_stmt 0 view .LVU868
 2519 07fa 1024     		movs	r4, #16
 2520 07fc BDE5     		b	.L57
 2521              	.L158:
 396:boards/TMC5130_eval.c **** 			}
 2522              		.loc 1 396 12 view .LVU869
 2523 07fe B3F5807F 		cmp	r3, #256
 2524 0802 F7D1     		bne	.L151
 386:boards/TMC5130_eval.c **** 			default:   *value = -1;  break;
 2525              		.loc 1 386 15 is_stmt 1 view .LVU870
 386:boards/TMC5130_eval.c **** 			default:   *value = -1;  break;
 2526              		.loc 1 386 22 is_stmt 0 view .LVU871
 2527 0804 0023     		movs	r3, #0
 2528 0806 00E0     		b	.L228
 2529              	.L156:
 378:boards/TMC5130_eval.c **** 			case 2:    *value = 7;   break;
 2530              		.loc 1 378 15 is_stmt 1 view .LVU872
 378:boards/TMC5130_eval.c **** 			case 2:    *value = 7;   break;
 2531              		.loc 1 378 22 is_stmt 0 view .LVU873
 2532 0808 0823     		movs	r3, #8
 2533              	.L228:
 386:boards/TMC5130_eval.c **** 			default:   *value = -1;  break;
 2534              		.loc 1 386 22 view .LVU874
 2535 080a 2B60     		str	r3, [r5]
 386:boards/TMC5130_eval.c **** 			default:   *value = -1;  break;
 2536              		.loc 1 386 29 is_stmt 1 view .LVU875
 390:boards/TMC5130_eval.c **** 			{
 2537              		.loc 1 390 4 view .LVU876
 392:boards/TMC5130_eval.c **** 			}
 2538              		.loc 1 392 5 view .LVU877
 2539              	.LBB377:
 2540              	.LBI377:
  37:boards/TMC5130_eval.c **** {
 2541              		.loc 1 37 31 view .LVU878
 2542              	.LVL332:
  37:boards/TMC5130_eval.c **** {
 2543              		.loc 1 37 31 is_stmt 0 view .LVU879
 2544              	.LBE377:
  39:boards/TMC5130_eval.c **** 
 2545              		.loc 1 39 2 is_stmt 1 view .LVU880
  41:boards/TMC5130_eval.c **** }
 2546              		.loc 1 41 2 view .LVU881
 2547              	.LBB378:
 2548              	.LBI378:
  37:boards/TMC5130_eval.c **** {
 2549              		.loc 1 37 31 view .LVU882
  37:boards/TMC5130_eval.c **** {
 2550              		.loc 1 37 31 is_stmt 0 view .LVU883
 2551              	.LBE378:
  39:boards/TMC5130_eval.c **** 
 2552              		.loc 1 39 2 is_stmt 1 view .LVU884
  41:boards/TMC5130_eval.c **** }
 2553              		.loc 1 41 2 view .LVU885
 392:boards/TMC5130_eval.c **** 			}
 2554              		.loc 1 392 5 is_stmt 0 view .LVU886
 2555 080c 6C21     		movs	r1, #108
 2556              	.LVL333:
 392:boards/TMC5130_eval.c **** 			}
 2557              		.loc 1 392 5 view .LVU887
 2558 080e 3448     		ldr	r0, .L231
 2559              	.LVL334:
 392:boards/TMC5130_eval.c **** 			}
 2560              		.loc 1 392 5 view .LVU888
 2561 0810 FFF7FEFF 		bl	tmc5130_readInt
 2562              	.LVL335:
 2563 0814 2B68     		ldr	r3, [r5]
 2564 0816 1B06     		lsls	r3, r3, #24
 2565 0818 03F07063 		and	r3, r3, #251658240
 2566 081c 20F07062 		bic	r2, r0, #251658240
 2567 0820 1A43     		orrs	r2, r2, r3
 2568 0822 2F48     		ldr	r0, .L231
 2569 0824 6C21     		movs	r1, #108
 2570 0826 FFF7FEFF 		bl	tmc5130_writeInt
 2571              	.LVL336:
 126:boards/TMC5130_eval.c **** 
 2572              		.loc 1 126 11 view .LVU889
 2573 082a 0024     		movs	r4, #0
 2574 082c A5E5     		b	.L57
 2575              	.LVL337:
 2576              	.L155:
 379:boards/TMC5130_eval.c **** 			case 4:    *value = 6;   break;
 2577              		.loc 1 379 15 is_stmt 1 view .LVU890
 379:boards/TMC5130_eval.c **** 			case 4:    *value = 6;   break;
 2578              		.loc 1 379 22 is_stmt 0 view .LVU891
 2579 082e 0723     		movs	r3, #7
 2580 0830 EBE7     		b	.L228
 2581              	.L154:
 380:boards/TMC5130_eval.c **** 			case 8:    *value = 5;   break;
 2582              		.loc 1 380 15 is_stmt 1 view .LVU892
 380:boards/TMC5130_eval.c **** 			case 8:    *value = 5;   break;
 2583              		.loc 1 380 22 is_stmt 0 view .LVU893
 2584 0832 0623     		movs	r3, #6
 2585 0834 E9E7     		b	.L228
 2586              	.L152:
 381:boards/TMC5130_eval.c **** 			case 16:   *value = 4;   break;
 2587              		.loc 1 381 15 is_stmt 1 view .LVU894
 381:boards/TMC5130_eval.c **** 			case 16:   *value = 4;   break;
 2588              		.loc 1 381 22 is_stmt 0 view .LVU895
 2589 0836 0523     		movs	r3, #5
 2590 0838 E7E7     		b	.L228
 2591              	.L149:
 382:boards/TMC5130_eval.c **** 			case 32:   *value = 3;   break;
 2592              		.loc 1 382 15 is_stmt 1 view .LVU896
 382:boards/TMC5130_eval.c **** 			case 32:   *value = 3;   break;
 2593              		.loc 1 382 22 is_stmt 0 view .LVU897
 2594 083a 0423     		movs	r3, #4
 2595 083c E5E7     		b	.L228
 2596              	.L159:
 383:boards/TMC5130_eval.c **** 			case 64:   *value = 2;   break;
 2597              		.loc 1 383 15 is_stmt 1 view .LVU898
 383:boards/TMC5130_eval.c **** 			case 64:   *value = 2;   break;
 2598              		.loc 1 383 22 is_stmt 0 view .LVU899
 2599 083e 0323     		movs	r3, #3
 2600 0840 E3E7     		b	.L228
 2601              	.L160:
 384:boards/TMC5130_eval.c **** 			case 128:  *value = 1;   break;
 2602              		.loc 1 384 15 is_stmt 1 view .LVU900
 384:boards/TMC5130_eval.c **** 			case 128:  *value = 1;   break;
 2603              		.loc 1 384 22 is_stmt 0 view .LVU901
 2604 0842 0223     		movs	r3, #2
 2605 0844 E1E7     		b	.L228
 2606              	.L157:
 385:boards/TMC5130_eval.c **** 			case 256:  *value = 0;   break;
 2607              		.loc 1 385 15 is_stmt 1 view .LVU902
 385:boards/TMC5130_eval.c **** 			case 256:  *value = 0;   break;
 2608              		.loc 1 385 22 is_stmt 0 view .LVU903
 2609 0846 0123     		movs	r3, #1
 2610 0848 DFE7     		b	.L228
 2611              	.L89:
 402:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TBL_MASK, TMC5130_TBL_SH
 2612              		.loc 1 402 3 is_stmt 1 view .LVU904
 403:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2613              		.loc 1 403 13 is_stmt 0 view .LVU905
 2614 084a 2548     		ldr	r0, .L231
 2615              	.LVL338:
 403:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2616              		.loc 1 403 13 view .LVU906
 2617 084c 6C21     		movs	r1, #108
 2618              	.LVL339:
 402:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TBL_MASK, TMC5130_TBL_SH
 2619              		.loc 1 402 5 view .LVU907
 2620 084e 36B9     		cbnz	r6, .L163
 403:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2621              		.loc 1 403 4 is_stmt 1 view .LVU908
 2622              	.LBB379:
 2623              	.LBI379:
  37:boards/TMC5130_eval.c **** {
 2624              		.loc 1 37 31 view .LVU909
 2625              	.LVL340:
  37:boards/TMC5130_eval.c **** {
 2626              		.loc 1 37 31 is_stmt 0 view .LVU910
 2627              	.LBE379:
  39:boards/TMC5130_eval.c **** 
 2628              		.loc 1 39 2 is_stmt 1 view .LVU911
  41:boards/TMC5130_eval.c **** }
 2629              		.loc 1 41 2 view .LVU912
 403:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2630              		.loc 1 403 13 is_stmt 0 view .LVU913
 2631 0850 FFF7FEFF 		bl	tmc5130_readInt
 2632              	.LVL341:
 2633 0854 C0F3C130 		ubfx	r0, r0, #15, #2
 403:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2634              		.loc 1 403 11 view .LVU914
 2635 0858 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2636              		.loc 1 126 11 view .LVU915
 2637 085a 3446     		mov	r4, r6
 2638 085c 8DE5     		b	.L57
 2639              	.LVL342:
 2640              	.L163:
 404:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TBL_MASK, TMC5130_TBL_SHIFT, *va
 2641              		.loc 1 404 10 is_stmt 1 view .LVU916
 405:boards/TMC5130_eval.c **** 		}
 2642              		.loc 1 405 4 view .LVU917
 2643              	.LBB380:
 2644              	.LBI380:
  37:boards/TMC5130_eval.c **** {
 2645              		.loc 1 37 31 view .LVU918
  37:boards/TMC5130_eval.c **** {
 2646              		.loc 1 37 31 is_stmt 0 view .LVU919
 2647              	.LBE380:
  39:boards/TMC5130_eval.c **** 
 2648              		.loc 1 39 2 is_stmt 1 view .LVU920
  41:boards/TMC5130_eval.c **** }
 2649              		.loc 1 41 2 view .LVU921
 2650              	.LBB381:
 2651              	.LBI381:
  37:boards/TMC5130_eval.c **** {
 2652              		.loc 1 37 31 view .LVU922
  37:boards/TMC5130_eval.c **** {
 2653              		.loc 1 37 31 is_stmt 0 view .LVU923
 2654              	.LBE381:
  39:boards/TMC5130_eval.c **** 
 2655              		.loc 1 39 2 is_stmt 1 view .LVU924
  41:boards/TMC5130_eval.c **** }
 2656              		.loc 1 41 2 view .LVU925
 405:boards/TMC5130_eval.c **** 		}
 2657              		.loc 1 405 4 is_stmt 0 view .LVU926
 2658 085e FFF7FEFF 		bl	tmc5130_readInt
 2659              	.LVL343:
 2660 0862 2B68     		ldr	r3, [r5]
 2661 0864 DB03     		lsls	r3, r3, #15
 2662 0866 03F4C033 		and	r3, r3, #98304
 2663 086a 20F4C032 		bic	r2, r0, #98304
 2664 086e 1A43     		orrs	r2, r2, r3
 2665 0870 1B48     		ldr	r0, .L231
 2666 0872 6C21     		movs	r1, #108
 2667 0874 FFF7FEFF 		bl	tmc5130_writeInt
 2668              	.LVL344:
 126:boards/TMC5130_eval.c **** 
 2669              		.loc 1 126 11 view .LVU927
 2670 0878 0024     		movs	r4, #0
 2671 087a 7EE5     		b	.L57
 2672              	.LVL345:
 2673              	.L88:
 410:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_CHM_MASK, TMC5130_CHM_SH
 2674              		.loc 1 410 3 is_stmt 1 view .LVU928
 411:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2675              		.loc 1 411 13 is_stmt 0 view .LVU929
 2676 087c 1848     		ldr	r0, .L231
 2677              	.LVL346:
 411:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2678              		.loc 1 411 13 view .LVU930
 2679 087e 6C21     		movs	r1, #108
 2680              	.LVL347:
 410:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_CHM_MASK, TMC5130_CHM_SH
 2681              		.loc 1 410 5 view .LVU931
 2682 0880 36B9     		cbnz	r6, .L164
 411:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2683              		.loc 1 411 4 is_stmt 1 view .LVU932
 2684              	.LBB382:
 2685              	.LBI382:
  37:boards/TMC5130_eval.c **** {
 2686              		.loc 1 37 31 view .LVU933
 2687              	.LVL348:
  37:boards/TMC5130_eval.c **** {
 2688              		.loc 1 37 31 is_stmt 0 view .LVU934
 2689              	.LBE382:
  39:boards/TMC5130_eval.c **** 
 2690              		.loc 1 39 2 is_stmt 1 view .LVU935
  41:boards/TMC5130_eval.c **** }
 2691              		.loc 1 41 2 view .LVU936
 411:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2692              		.loc 1 411 13 is_stmt 0 view .LVU937
 2693 0882 FFF7FEFF 		bl	tmc5130_readInt
 2694              	.LVL349:
 2695 0886 C0F38030 		ubfx	r0, r0, #14, #1
 411:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2696              		.loc 1 411 11 view .LVU938
 2697 088a 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2698              		.loc 1 126 11 view .LVU939
 2699 088c 3446     		mov	r4, r6
 2700 088e 74E5     		b	.L57
 2701              	.LVL350:
 2702              	.L164:
 412:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_CHM_MASK, TMC5130_CHM_SHIFT, *va
 2703              		.loc 1 412 10 is_stmt 1 view .LVU940
 413:boards/TMC5130_eval.c **** 		}
 2704              		.loc 1 413 4 view .LVU941
 2705              	.LBB383:
 2706              	.LBI383:
  37:boards/TMC5130_eval.c **** {
 2707              		.loc 1 37 31 view .LVU942
  37:boards/TMC5130_eval.c **** {
 2708              		.loc 1 37 31 is_stmt 0 view .LVU943
 2709              	.LBE383:
  39:boards/TMC5130_eval.c **** 
 2710              		.loc 1 39 2 is_stmt 1 view .LVU944
  41:boards/TMC5130_eval.c **** }
 2711              		.loc 1 41 2 view .LVU945
 2712              	.LBB384:
 2713              	.LBI384:
  37:boards/TMC5130_eval.c **** {
 2714              		.loc 1 37 31 view .LVU946
  37:boards/TMC5130_eval.c **** {
 2715              		.loc 1 37 31 is_stmt 0 view .LVU947
 2716              	.LBE384:
  39:boards/TMC5130_eval.c **** 
 2717              		.loc 1 39 2 is_stmt 1 view .LVU948
  41:boards/TMC5130_eval.c **** }
 2718              		.loc 1 41 2 view .LVU949
 413:boards/TMC5130_eval.c **** 		}
 2719              		.loc 1 413 4 is_stmt 0 view .LVU950
 2720 0890 FFF7FEFF 		bl	tmc5130_readInt
 2721              	.LVL351:
 2722 0894 2B68     		ldr	r3, [r5]
 2723 0896 9B03     		lsls	r3, r3, #14
 2724 0898 03F48043 		and	r3, r3, #16384
 2725 089c 20F48042 		bic	r2, r0, #16384
 2726 08a0 1A43     		orrs	r2, r2, r3
 2727 08a2 0F48     		ldr	r0, .L231
 2728 08a4 6C21     		movs	r1, #108
 2729 08a6 FFF7FEFF 		bl	tmc5130_writeInt
 2730              	.LVL352:
 126:boards/TMC5130_eval.c **** 
 2731              		.loc 1 126 11 view .LVU951
 2732 08aa 0024     		movs	r4, #0
 2733 08ac 65E5     		b	.L57
 2734              	.LVL353:
 2735              	.L87:
 418:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_DISFDCC_MASK, TMC5130_DI
 2736              		.loc 1 418 3 is_stmt 1 view .LVU952
 419:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2737              		.loc 1 419 13 is_stmt 0 view .LVU953
 2738 08ae 0C48     		ldr	r0, .L231
 2739              	.LVL354:
 419:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2740              		.loc 1 419 13 view .LVU954
 2741 08b0 6C21     		movs	r1, #108
 2742              	.LVL355:
 418:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_DISFDCC_MASK, TMC5130_DI
 2743              		.loc 1 418 5 view .LVU955
 2744 08b2 36B9     		cbnz	r6, .L165
 419:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2745              		.loc 1 419 4 is_stmt 1 view .LVU956
 2746              	.LBB385:
 2747              	.LBI385:
  37:boards/TMC5130_eval.c **** {
 2748              		.loc 1 37 31 view .LVU957
 2749              	.LVL356:
  37:boards/TMC5130_eval.c **** {
 2750              		.loc 1 37 31 is_stmt 0 view .LVU958
 2751              	.LBE385:
  39:boards/TMC5130_eval.c **** 
 2752              		.loc 1 39 2 is_stmt 1 view .LVU959
  41:boards/TMC5130_eval.c **** }
 2753              		.loc 1 41 2 view .LVU960
 419:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2754              		.loc 1 419 13 is_stmt 0 view .LVU961
 2755 08b4 FFF7FEFF 		bl	tmc5130_readInt
 2756              	.LVL357:
 2757 08b8 C0F30030 		ubfx	r0, r0, #12, #1
 419:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 2758              		.loc 1 419 11 view .LVU962
 2759 08bc 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2760              		.loc 1 126 11 view .LVU963
 2761 08be 3446     		mov	r4, r6
 2762 08c0 5BE5     		b	.L57
 2763              	.LVL358:
 2764              	.L165:
 420:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_DISFDCC_MASK, TMC5130_DISFDCC_SH
 2765              		.loc 1 420 10 is_stmt 1 view .LVU964
 421:boards/TMC5130_eval.c **** 		}
 2766              		.loc 1 421 4 view .LVU965
 2767              	.LBB386:
 2768              	.LBI386:
  37:boards/TMC5130_eval.c **** {
 2769              		.loc 1 37 31 view .LVU966
  37:boards/TMC5130_eval.c **** {
 2770              		.loc 1 37 31 is_stmt 0 view .LVU967
 2771              	.LBE386:
  39:boards/TMC5130_eval.c **** 
 2772              		.loc 1 39 2 is_stmt 1 view .LVU968
  41:boards/TMC5130_eval.c **** }
 2773              		.loc 1 41 2 view .LVU969
 2774              	.LBB387:
 2775              	.LBI387:
  37:boards/TMC5130_eval.c **** {
 2776              		.loc 1 37 31 view .LVU970
  37:boards/TMC5130_eval.c **** {
 2777              		.loc 1 37 31 is_stmt 0 view .LVU971
 2778              	.LBE387:
  39:boards/TMC5130_eval.c **** 
 2779              		.loc 1 39 2 is_stmt 1 view .LVU972
  41:boards/TMC5130_eval.c **** }
 2780              		.loc 1 41 2 view .LVU973
 421:boards/TMC5130_eval.c **** 		}
 2781              		.loc 1 421 4 is_stmt 0 view .LVU974
 2782 08c2 FFF7FEFF 		bl	tmc5130_readInt
 2783              	.LVL359:
 2784 08c6 2B68     		ldr	r3, [r5]
 2785 08c8 1B03     		lsls	r3, r3, #12
 2786 08ca 03F48053 		and	r3, r3, #4096
 2787 08ce 20F48052 		bic	r2, r0, #4096
 2788 08d2 1A43     		orrs	r2, r2, r3
 2789 08d4 0248     		ldr	r0, .L231
 2790 08d6 6C21     		movs	r1, #108
 2791 08d8 FFF7FEFF 		bl	tmc5130_writeInt
 2792              	.LVL360:
 126:boards/TMC5130_eval.c **** 
 2793              		.loc 1 126 11 view .LVU975
 2794 08dc 0024     		movs	r4, #0
 2795 08de 4CE5     		b	.L57
 2796              	.L232:
 2797              		.align	2
 2798              	.L231:
 2799 08e0 00000000 		.word	.LANCHOR0
 2800 08e4 FFFF0F00 		.word	1048575
 2801              	.LVL361:
 2802              	.L86:
 426:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 2803              		.loc 1 426 3 is_stmt 1 view .LVU976
 2804              	.LBB388:
 2805              	.LBI388:
  37:boards/TMC5130_eval.c **** {
 2806              		.loc 1 37 31 view .LVU977
  37:boards/TMC5130_eval.c **** {
 2807              		.loc 1 37 31 is_stmt 0 view .LVU978
 2808              	.LBE388:
  39:boards/TMC5130_eval.c **** 
 2809              		.loc 1 39 2 is_stmt 1 view .LVU979
  41:boards/TMC5130_eval.c **** }
 2810              		.loc 1 41 2 view .LVU980
 426:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 2811              		.loc 1 426 12 is_stmt 0 view .LVU981
 2812 08e8 BA48     		ldr	r0, .L233
 2813              	.LVL362:
 426:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 2814              		.loc 1 426 12 view .LVU982
 2815 08ea 6C21     		movs	r1, #108
 2816              	.LVL363:
 426:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 2817              		.loc 1 426 12 view .LVU983
 2818 08ec FFF7FEFF 		bl	tmc5130_readInt
 2819              	.LVL364:
 427:boards/TMC5130_eval.c **** 			if(buffer & (1<<14))
 2820              		.loc 1 427 3 is_stmt 1 view .LVU984
 2821 08f0 00F48044 		and	r4, r0, #16384
 427:boards/TMC5130_eval.c **** 			if(buffer & (1<<14))
 2822              		.loc 1 427 5 is_stmt 0 view .LVU985
 2823 08f4 9EB9     		cbnz	r6, .L166
 428:boards/TMC5130_eval.c **** 			{
 2824              		.loc 1 428 4 is_stmt 1 view .LVU986
 428:boards/TMC5130_eval.c **** 			{
 2825              		.loc 1 428 6 is_stmt 0 view .LVU987
 2826 08f6 44B1     		cbz	r4, .L167
 430:boards/TMC5130_eval.c **** 			}
 2827              		.loc 1 430 5 is_stmt 1 view .LVU988
 2828              	.LBB389:
 2829              	.LBI389:
  37:boards/TMC5130_eval.c **** {
 2830              		.loc 1 37 31 view .LVU989
 2831              	.LVL365:
  37:boards/TMC5130_eval.c **** {
 2832              		.loc 1 37 31 is_stmt 0 view .LVU990
 2833              	.LBE389:
  39:boards/TMC5130_eval.c **** 
 2834              		.loc 1 39 2 is_stmt 1 view .LVU991
  41:boards/TMC5130_eval.c **** }
 2835              		.loc 1 41 2 view .LVU992
 430:boards/TMC5130_eval.c **** 			}
 2836              		.loc 1 430 14 is_stmt 0 view .LVU993
 2837 08f8 B648     		ldr	r0, .L233
 2838              	.LVL366:
 430:boards/TMC5130_eval.c **** 			}
 2839              		.loc 1 430 14 view .LVU994
 2840 08fa 6C21     		movs	r1, #108
 2841 08fc FFF7FEFF 		bl	tmc5130_readInt
 2842              	.LVL367:
 2843 0900 C0F3C310 		ubfx	r0, r0, #7, #4
 430:boards/TMC5130_eval.c **** 			}
 2844              		.loc 1 430 12 view .LVU995
 2845 0904 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2846              		.loc 1 126 11 view .LVU996
 2847 0906 3446     		mov	r4, r6
 2848 0908 37E5     		b	.L57
 2849              	.LVL368:
 2850              	.L167:
 434:boards/TMC5130_eval.c **** 			}
 2851              		.loc 1 434 5 is_stmt 1 view .LVU997
 434:boards/TMC5130_eval.c **** 			}
 2852              		.loc 1 434 29 is_stmt 0 view .LVU998
 2853 090a C0F30213 		ubfx	r3, r0, #4, #3
 434:boards/TMC5130_eval.c **** 			}
 2854              		.loc 1 434 47 view .LVU999
 2855 090e 00F40060 		and	r0, r0, #2048
 2856              	.LVL369:
 434:boards/TMC5130_eval.c **** 			}
 2857              		.loc 1 434 65 view .LVU1000
 2858 0912 0343     		orrs	r3, r3, r0
 2859 0914 14BF     		ite	ne
 2860 0916 0823     		movne	r3, #8
 2861 0918 0023     		moveq	r3, #0
 434:boards/TMC5130_eval.c **** 			}
 2862              		.loc 1 434 12 view .LVU1001
 2863 091a 2B60     		str	r3, [r5]
 2864 091c 2DE5     		b	.L57
 2865              	.LVL370:
 2866              	.L166:
 436:boards/TMC5130_eval.c **** 			if(buffer & (1<<14))
 2867              		.loc 1 436 10 is_stmt 1 view .LVU1002
 437:boards/TMC5130_eval.c **** 			{
 2868              		.loc 1 437 4 view .LVU1003
 437:boards/TMC5130_eval.c **** 			{
 2869              		.loc 1 437 6 is_stmt 0 view .LVU1004
 2870 091e 84B1     		cbz	r4, .L169
 439:boards/TMC5130_eval.c **** 			}
 2871              		.loc 1 439 5 is_stmt 1 view .LVU1005
 2872              	.LBB390:
 2873              	.LBI390:
  37:boards/TMC5130_eval.c **** {
 2874              		.loc 1 37 31 view .LVU1006
 2875              	.LVL371:
  37:boards/TMC5130_eval.c **** {
 2876              		.loc 1 37 31 is_stmt 0 view .LVU1007
 2877              	.LBE390:
  39:boards/TMC5130_eval.c **** 
 2878              		.loc 1 39 2 is_stmt 1 view .LVU1008
  41:boards/TMC5130_eval.c **** }
 2879              		.loc 1 41 2 view .LVU1009
 2880              	.LBB391:
 2881              	.LBI391:
  37:boards/TMC5130_eval.c **** {
 2882              		.loc 1 37 31 view .LVU1010
  37:boards/TMC5130_eval.c **** {
 2883              		.loc 1 37 31 is_stmt 0 view .LVU1011
 2884              	.LBE391:
  39:boards/TMC5130_eval.c **** 
 2885              		.loc 1 39 2 is_stmt 1 view .LVU1012
  41:boards/TMC5130_eval.c **** }
 2886              		.loc 1 41 2 view .LVU1013
 439:boards/TMC5130_eval.c **** 			}
 2887              		.loc 1 439 5 is_stmt 0 view .LVU1014
 2888 0920 6C21     		movs	r1, #108
 2889 0922 AC48     		ldr	r0, .L233
 2890              	.LVL372:
 439:boards/TMC5130_eval.c **** 			}
 2891              		.loc 1 439 5 view .LVU1015
 2892 0924 FFF7FEFF 		bl	tmc5130_readInt
 2893              	.LVL373:
 2894 0928 2B68     		ldr	r3, [r5]
 2895 092a DB01     		lsls	r3, r3, #7
 2896 092c 03F4F063 		and	r3, r3, #1920
 2897 0930 20F4F062 		bic	r2, r0, #1920
 2898 0934 1A43     		orrs	r2, r2, r3
 2899 0936 A748     		ldr	r0, .L233
 2900 0938 6C21     		movs	r1, #108
 2901 093a FFF7FEFF 		bl	tmc5130_writeInt
 2902              	.LVL374:
 126:boards/TMC5130_eval.c **** 
 2903              		.loc 1 126 11 view .LVU1016
 2904 093e 0024     		movs	r4, #0
 2905 0940 1BE5     		b	.L57
 2906              	.LVL375:
 2907              	.L169:
 443:boards/TMC5130_eval.c **** 					buffer |= (0x01<<11);
 2908              		.loc 1 443 5 is_stmt 1 view .LVU1017
 443:boards/TMC5130_eval.c **** 					buffer |= (0x01<<11);
 2909              		.loc 1 443 8 is_stmt 0 view .LVU1018
 2910 0942 2A68     		ldr	r2, [r5]
 443:boards/TMC5130_eval.c **** 					buffer |= (0x01<<11);
 2911              		.loc 1 443 7 view .LVU1019
 2912 0944 1107     		lsls	r1, r2, #28
 444:boards/TMC5130_eval.c **** 				else
 2913              		.loc 1 444 6 is_stmt 1 view .LVU1020
 444:boards/TMC5130_eval.c **** 				else
 2914              		.loc 1 444 13 is_stmt 0 view .LVU1021
 2915 0946 4CBF     		ite	mi
 2916 0948 40F40060 		orrmi	r0, r0, #2048
 2917              	.LVL376:
 446:boards/TMC5130_eval.c **** 
 2918              		.loc 1 446 6 is_stmt 1 view .LVU1022
 446:boards/TMC5130_eval.c **** 
 2919              		.loc 1 446 13 is_stmt 0 view .LVU1023
 2920 094c 20F40060 		bicpl	r0, r0, #2048
 2921              	.LVL377:
 448:boards/TMC5130_eval.c **** 				buffer |= (*value & 0x0F) << 4;
 2922              		.loc 1 448 5 is_stmt 1 view .LVU1024
 449:boards/TMC5130_eval.c **** 
 2923              		.loc 1 449 31 is_stmt 0 view .LVU1025
 2924 0950 1201     		lsls	r2, r2, #4
 448:boards/TMC5130_eval.c **** 				buffer |= (*value & 0x0F) << 4;
 2925              		.loc 1 448 12 view .LVU1026
 2926 0952 20F07000 		bic	r0, r0, #112
 2927              	.LVL378:
 449:boards/TMC5130_eval.c **** 
 2928              		.loc 1 449 5 is_stmt 1 view .LVU1027
 451:boards/TMC5130_eval.c **** 			}
 2929              		.loc 1 451 5 view .LVU1028
 2930              	.LBB392:
 2931              	.LBI392:
  37:boards/TMC5130_eval.c **** {
 2932              		.loc 1 37 31 view .LVU1029
  37:boards/TMC5130_eval.c **** {
 2933              		.loc 1 37 31 is_stmt 0 view .LVU1030
 2934              	.LBE392:
  39:boards/TMC5130_eval.c **** 
 2935              		.loc 1 39 2 is_stmt 1 view .LVU1031
  41:boards/TMC5130_eval.c **** }
 2936              		.loc 1 41 2 view .LVU1032
 449:boards/TMC5130_eval.c **** 
 2937              		.loc 1 449 31 is_stmt 0 view .LVU1033
 2938 0956 D2B2     		uxtb	r2, r2
 451:boards/TMC5130_eval.c **** 			}
 2939              		.loc 1 451 5 view .LVU1034
 2940 0958 0243     		orrs	r2, r2, r0
 2941 095a 6C21     		movs	r1, #108
 2942 095c 9D48     		ldr	r0, .L233
 2943 095e FFF7FEFF 		bl	tmc5130_writeInt
 2944              	.LVL379:
 2945 0962 0AE5     		b	.L57
 2946              	.LVL380:
 2947              	.L85:
 457:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 2948              		.loc 1 457 3 is_stmt 1 view .LVU1035
 2949              	.LBB393:
 2950              	.LBI393:
  37:boards/TMC5130_eval.c **** {
 2951              		.loc 1 37 31 view .LVU1036
  37:boards/TMC5130_eval.c **** {
 2952              		.loc 1 37 31 is_stmt 0 view .LVU1037
 2953              	.LBE393:
  39:boards/TMC5130_eval.c **** 
 2954              		.loc 1 39 2 is_stmt 1 view .LVU1038
  41:boards/TMC5130_eval.c **** }
 2955              		.loc 1 41 2 view .LVU1039
 457:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 2956              		.loc 1 457 12 is_stmt 0 view .LVU1040
 2957 0964 9B48     		ldr	r0, .L233
 2958              	.LVL381:
 457:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 2959              		.loc 1 457 12 view .LVU1041
 2960 0966 6C21     		movs	r1, #108
 2961              	.LVL382:
 457:boards/TMC5130_eval.c **** 		if(readWrite == READ) {
 2962              		.loc 1 457 12 view .LVU1042
 2963 0968 FFF7FEFF 		bl	tmc5130_readInt
 2964              	.LVL383:
 458:boards/TMC5130_eval.c **** 			if(buffer & (1<<14))
 2965              		.loc 1 458 3 is_stmt 1 view .LVU1043
 458:boards/TMC5130_eval.c **** 			if(buffer & (1<<14))
 2966              		.loc 1 458 5 is_stmt 0 view .LVU1044
 2967 096c AEB9     		cbnz	r6, .L172
 459:boards/TMC5130_eval.c **** 			{
 2968              		.loc 1 459 4 is_stmt 1 view .LVU1045
 459:boards/TMC5130_eval.c **** 			{
 2969              		.loc 1 459 6 is_stmt 0 view .LVU1046
 2970 096e 10F48044 		ands	r4, r0, #16384
 2971 0972 08D0     		beq	.L173
 461:boards/TMC5130_eval.c **** 			}
 2972              		.loc 1 461 5 is_stmt 1 view .LVU1047
 2973              	.LBB394:
 2974              	.LBI394:
  37:boards/TMC5130_eval.c **** {
 2975              		.loc 1 37 31 view .LVU1048
 2976              	.LVL384:
  37:boards/TMC5130_eval.c **** {
 2977              		.loc 1 37 31 is_stmt 0 view .LVU1049
 2978              	.LBE394:
  39:boards/TMC5130_eval.c **** 
 2979              		.loc 1 39 2 is_stmt 1 view .LVU1050
  41:boards/TMC5130_eval.c **** }
 2980              		.loc 1 41 2 view .LVU1051
 461:boards/TMC5130_eval.c **** 			}
 2981              		.loc 1 461 14 is_stmt 0 view .LVU1052
 2982 0974 9748     		ldr	r0, .L233
 2983              	.LVL385:
 461:boards/TMC5130_eval.c **** 			}
 2984              		.loc 1 461 14 view .LVU1053
 2985 0976 6C21     		movs	r1, #108
 2986 0978 FFF7FEFF 		bl	tmc5130_readInt
 2987              	.LVL386:
 2988 097c C0F30210 		ubfx	r0, r0, #4, #3
 461:boards/TMC5130_eval.c **** 			}
 2989              		.loc 1 461 12 view .LVU1054
 2990 0980 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 2991              		.loc 1 126 11 view .LVU1055
 2992 0982 3446     		mov	r4, r6
 2993 0984 F9E4     		b	.L57
 2994              	.LVL387:
 2995              	.L173:
 465:boards/TMC5130_eval.c **** 			}
 2996              		.loc 1 465 5 is_stmt 1 view .LVU1056
 465:boards/TMC5130_eval.c **** 			}
 2997              		.loc 1 465 29 is_stmt 0 view .LVU1057
 2998 0986 C0F3C313 		ubfx	r3, r0, #7, #4
 465:boards/TMC5130_eval.c **** 			}
 2999              		.loc 1 465 47 view .LVU1058
 3000 098a 00F40060 		and	r0, r0, #2048
 3001              	.LVL388:
 465:boards/TMC5130_eval.c **** 			}
 3002              		.loc 1 465 64 view .LVU1059
 3003 098e 0343     		orrs	r3, r3, r0
 3004 0990 14BF     		ite	ne
 3005 0992 0823     		movne	r3, #8
 3006 0994 0023     		moveq	r3, #0
 465:boards/TMC5130_eval.c **** 			}
 3007              		.loc 1 465 12 view .LVU1060
 3008 0996 2B60     		str	r3, [r5]
 3009 0998 EFE4     		b	.L57
 3010              	.LVL389:
 3011              	.L172:
 467:boards/TMC5130_eval.c **** 			if(tmc5130_readInt(motorToIC(motor), TMC5130_CHOPCONF) & (1<<14))
 3012              		.loc 1 467 10 is_stmt 1 view .LVU1061
 468:boards/TMC5130_eval.c **** 			{
 3013              		.loc 1 468 4 view .LVU1062
 3014              	.LBB395:
 3015              	.LBI395:
  37:boards/TMC5130_eval.c **** {
 3016              		.loc 1 37 31 view .LVU1063
  37:boards/TMC5130_eval.c **** {
 3017              		.loc 1 37 31 is_stmt 0 view .LVU1064
 3018              	.LBE395:
  39:boards/TMC5130_eval.c **** 
 3019              		.loc 1 39 2 is_stmt 1 view .LVU1065
  41:boards/TMC5130_eval.c **** }
 3020              		.loc 1 41 2 view .LVU1066
 468:boards/TMC5130_eval.c **** 			{
 3021              		.loc 1 468 7 is_stmt 0 view .LVU1067
 3022 099a 6C21     		movs	r1, #108
 3023 099c 8D48     		ldr	r0, .L233
 3024              	.LVL390:
 468:boards/TMC5130_eval.c **** 			{
 3025              		.loc 1 468 7 view .LVU1068
 3026 099e FFF7FEFF 		bl	tmc5130_readInt
 3027              	.LVL391:
 468:boards/TMC5130_eval.c **** 			{
 3028              		.loc 1 468 6 view .LVU1069
 3029 09a2 10F48044 		ands	r4, r0, #16384
 470:boards/TMC5130_eval.c **** 			}
 3030              		.loc 1 470 5 view .LVU1070
 3031 09a6 4FF06C01 		mov	r1, #108
 3032 09aa 8A48     		ldr	r0, .L233
 468:boards/TMC5130_eval.c **** 			{
 3033              		.loc 1 468 6 view .LVU1071
 3034 09ac 0ED0     		beq	.L175
 470:boards/TMC5130_eval.c **** 			}
 3035              		.loc 1 470 5 is_stmt 1 view .LVU1072
 3036              	.LBB396:
 3037              	.LBI396:
  37:boards/TMC5130_eval.c **** {
 3038              		.loc 1 37 31 view .LVU1073
 3039              	.LVL392:
  37:boards/TMC5130_eval.c **** {
 3040              		.loc 1 37 31 is_stmt 0 view .LVU1074
 3041              	.LBE396:
  39:boards/TMC5130_eval.c **** 
 3042              		.loc 1 39 2 is_stmt 1 view .LVU1075
  41:boards/TMC5130_eval.c **** }
 3043              		.loc 1 41 2 view .LVU1076
 3044              	.LBB397:
 3045              	.LBI397:
  37:boards/TMC5130_eval.c **** {
 3046              		.loc 1 37 31 view .LVU1077
  37:boards/TMC5130_eval.c **** {
 3047              		.loc 1 37 31 is_stmt 0 view .LVU1078
 3048              	.LBE397:
  39:boards/TMC5130_eval.c **** 
 3049              		.loc 1 39 2 is_stmt 1 view .LVU1079
  41:boards/TMC5130_eval.c **** }
 3050              		.loc 1 41 2 view .LVU1080
 470:boards/TMC5130_eval.c **** 			}
 3051              		.loc 1 470 5 is_stmt 0 view .LVU1081
 3052 09ae FFF7FEFF 		bl	tmc5130_readInt
 3053              	.LVL393:
 3054 09b2 2B68     		ldr	r3, [r5]
 3055 09b4 1B01     		lsls	r3, r3, #4
 3056 09b6 03F07003 		and	r3, r3, #112
 3057 09ba 20F07002 		bic	r2, r0, #112
 3058 09be 1A43     		orrs	r2, r2, r3
 3059 09c0 8448     		ldr	r0, .L233
 3060 09c2 6C21     		movs	r1, #108
 3061 09c4 FFF7FEFF 		bl	tmc5130_writeInt
 3062              	.LVL394:
 126:boards/TMC5130_eval.c **** 
 3063              		.loc 1 126 11 view .LVU1082
 3064 09c8 0024     		movs	r4, #0
 3065 09ca D6E4     		b	.L57
 3066              	.LVL395:
 3067              	.L175:
 474:boards/TMC5130_eval.c **** 			}
 3068              		.loc 1 474 5 is_stmt 1 view .LVU1083
 3069              	.LBB398:
 3070              	.LBI398:
  37:boards/TMC5130_eval.c **** {
 3071              		.loc 1 37 31 view .LVU1084
  37:boards/TMC5130_eval.c **** {
 3072              		.loc 1 37 31 is_stmt 0 view .LVU1085
 3073              	.LBE398:
  39:boards/TMC5130_eval.c **** 
 3074              		.loc 1 39 2 is_stmt 1 view .LVU1086
  41:boards/TMC5130_eval.c **** }
 3075              		.loc 1 41 2 view .LVU1087
 3076              	.LBB399:
 3077              	.LBI399:
  37:boards/TMC5130_eval.c **** {
 3078              		.loc 1 37 31 view .LVU1088
  37:boards/TMC5130_eval.c **** {
 3079              		.loc 1 37 31 is_stmt 0 view .LVU1089
 3080              	.LBE399:
  39:boards/TMC5130_eval.c **** 
 3081              		.loc 1 39 2 is_stmt 1 view .LVU1090
  41:boards/TMC5130_eval.c **** }
 3082              		.loc 1 41 2 view .LVU1091
 474:boards/TMC5130_eval.c **** 			}
 3083              		.loc 1 474 5 is_stmt 0 view .LVU1092
 3084 09cc FFF7FEFF 		bl	tmc5130_readInt
 3085              	.LVL396:
 3086 09d0 2B68     		ldr	r3, [r5]
 3087 09d2 DB01     		lsls	r3, r3, #7
 3088 09d4 03F4F063 		and	r3, r3, #1920
 3089 09d8 20F4F062 		bic	r2, r0, #1920
 3090 09dc 1A43     		orrs	r2, r2, r3
 3091 09de 7D48     		ldr	r0, .L233
 3092 09e0 6C21     		movs	r1, #108
 3093 09e2 FFF7FEFF 		bl	tmc5130_writeInt
 3094              	.LVL397:
 3095 09e6 C8E4     		b	.L57
 3096              	.LVL398:
 3097              	.L84:
 480:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TOFF_MASK, TMC5130_TOFF_
 3098              		.loc 1 480 3 is_stmt 1 view .LVU1093
 481:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3099              		.loc 1 481 13 is_stmt 0 view .LVU1094
 3100 09e8 7A48     		ldr	r0, .L233
 3101              	.LVL399:
 481:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3102              		.loc 1 481 13 view .LVU1095
 3103 09ea 6C21     		movs	r1, #108
 3104              	.LVL400:
 480:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TOFF_MASK, TMC5130_TOFF_
 3105              		.loc 1 480 5 view .LVU1096
 3106 09ec 36B9     		cbnz	r6, .L176
 481:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3107              		.loc 1 481 4 is_stmt 1 view .LVU1097
 3108              	.LBB400:
 3109              	.LBI400:
  37:boards/TMC5130_eval.c **** {
 3110              		.loc 1 37 31 view .LVU1098
 3111              	.LVL401:
  37:boards/TMC5130_eval.c **** {
 3112              		.loc 1 37 31 is_stmt 0 view .LVU1099
 3113              	.LBE400:
  39:boards/TMC5130_eval.c **** 
 3114              		.loc 1 39 2 is_stmt 1 view .LVU1100
  41:boards/TMC5130_eval.c **** }
 3115              		.loc 1 41 2 view .LVU1101
 481:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3116              		.loc 1 481 13 is_stmt 0 view .LVU1102
 3117 09ee FFF7FEFF 		bl	tmc5130_readInt
 3118              	.LVL402:
 3119 09f2 00F00F00 		and	r0, r0, #15
 481:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3120              		.loc 1 481 11 view .LVU1103
 3121 09f6 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3122              		.loc 1 126 11 view .LVU1104
 3123 09f8 3446     		mov	r4, r6
 3124 09fa BEE4     		b	.L57
 3125              	.LVL403:
 3126              	.L176:
 482:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_TOFF_MASK, TMC5130_TOFF_SHIFT, *
 3127              		.loc 1 482 10 is_stmt 1 view .LVU1105
 483:boards/TMC5130_eval.c **** 		}
 3128              		.loc 1 483 4 view .LVU1106
 3129              	.LBB401:
 3130              	.LBI401:
  37:boards/TMC5130_eval.c **** {
 3131              		.loc 1 37 31 view .LVU1107
  37:boards/TMC5130_eval.c **** {
 3132              		.loc 1 37 31 is_stmt 0 view .LVU1108
 3133              	.LBE401:
  39:boards/TMC5130_eval.c **** 
 3134              		.loc 1 39 2 is_stmt 1 view .LVU1109
  41:boards/TMC5130_eval.c **** }
 3135              		.loc 1 41 2 view .LVU1110
 3136              	.LBB402:
 3137              	.LBI402:
  37:boards/TMC5130_eval.c **** {
 3138              		.loc 1 37 31 view .LVU1111
  37:boards/TMC5130_eval.c **** {
 3139              		.loc 1 37 31 is_stmt 0 view .LVU1112
 3140              	.LBE402:
  39:boards/TMC5130_eval.c **** 
 3141              		.loc 1 39 2 is_stmt 1 view .LVU1113
  41:boards/TMC5130_eval.c **** }
 3142              		.loc 1 41 2 view .LVU1114
 483:boards/TMC5130_eval.c **** 		}
 3143              		.loc 1 483 4 is_stmt 0 view .LVU1115
 3144 09fc FFF7FEFF 		bl	tmc5130_readInt
 3145              	.LVL404:
 3146 0a00 2A68     		ldr	r2, [r5]
 3147 0a02 20F00F00 		bic	r0, r0, #15
 3148 0a06 02F00F02 		and	r2, r2, #15
 3149 0a0a 0243     		orrs	r2, r2, r0
 3150 0a0c 6C21     		movs	r1, #108
 3151 0a0e 7148     		ldr	r0, .L233
 3152 0a10 FFF7FEFF 		bl	tmc5130_writeInt
 3153              	.LVL405:
 126:boards/TMC5130_eval.c **** 
 3154              		.loc 1 126 11 view .LVU1116
 3155 0a14 0024     		movs	r4, #0
 3156 0a16 B0E4     		b	.L57
 3157              	.LVL406:
 3158              	.L83:
 488:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEIMIN_MASK, TMC5130_SEI
 3159              		.loc 1 488 3 is_stmt 1 view .LVU1117
 489:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3160              		.loc 1 489 13 is_stmt 0 view .LVU1118
 3161 0a18 6E48     		ldr	r0, .L233
 3162              	.LVL407:
 489:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3163              		.loc 1 489 13 view .LVU1119
 3164 0a1a 6D21     		movs	r1, #109
 3165              	.LVL408:
 488:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEIMIN_MASK, TMC5130_SEI
 3166              		.loc 1 488 5 view .LVU1120
 3167 0a1c 36B9     		cbnz	r6, .L177
 489:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3168              		.loc 1 489 4 is_stmt 1 view .LVU1121
 3169              	.LBB403:
 3170              	.LBI403:
  37:boards/TMC5130_eval.c **** {
 3171              		.loc 1 37 31 view .LVU1122
 3172              	.LVL409:
  37:boards/TMC5130_eval.c **** {
 3173              		.loc 1 37 31 is_stmt 0 view .LVU1123
 3174              	.LBE403:
  39:boards/TMC5130_eval.c **** 
 3175              		.loc 1 39 2 is_stmt 1 view .LVU1124
  41:boards/TMC5130_eval.c **** }
 3176              		.loc 1 41 2 view .LVU1125
 489:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3177              		.loc 1 489 13 is_stmt 0 view .LVU1126
 3178 0a1e FFF7FEFF 		bl	tmc5130_readInt
 3179              	.LVL410:
 3180 0a22 C0F3C030 		ubfx	r0, r0, #15, #1
 489:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3181              		.loc 1 489 11 view .LVU1127
 3182 0a26 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3183              		.loc 1 126 11 view .LVU1128
 3184 0a28 3446     		mov	r4, r6
 3185 0a2a A6E4     		b	.L57
 3186              	.LVL411:
 3187              	.L177:
 490:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEIMIN_MASK, TMC5130_SEIMIN_SHIF
 3188              		.loc 1 490 10 is_stmt 1 view .LVU1129
 491:boards/TMC5130_eval.c **** 		}
 3189              		.loc 1 491 4 view .LVU1130
 3190              	.LBB404:
 3191              	.LBI404:
  37:boards/TMC5130_eval.c **** {
 3192              		.loc 1 37 31 view .LVU1131
  37:boards/TMC5130_eval.c **** {
 3193              		.loc 1 37 31 is_stmt 0 view .LVU1132
 3194              	.LBE404:
  39:boards/TMC5130_eval.c **** 
 3195              		.loc 1 39 2 is_stmt 1 view .LVU1133
  41:boards/TMC5130_eval.c **** }
 3196              		.loc 1 41 2 view .LVU1134
 3197              	.LBB405:
 3198              	.LBI405:
  37:boards/TMC5130_eval.c **** {
 3199              		.loc 1 37 31 view .LVU1135
  37:boards/TMC5130_eval.c **** {
 3200              		.loc 1 37 31 is_stmt 0 view .LVU1136
 3201              	.LBE405:
  39:boards/TMC5130_eval.c **** 
 3202              		.loc 1 39 2 is_stmt 1 view .LVU1137
  41:boards/TMC5130_eval.c **** }
 3203              		.loc 1 41 2 view .LVU1138
 491:boards/TMC5130_eval.c **** 		}
 3204              		.loc 1 491 4 is_stmt 0 view .LVU1139
 3205 0a2c FFF7FEFF 		bl	tmc5130_readInt
 3206              	.LVL412:
 3207 0a30 2B68     		ldr	r3, [r5]
 3208 0a32 DB03     		lsls	r3, r3, #15
 3209 0a34 9BB2     		uxth	r3, r3
 3210 0a36 20F40042 		bic	r2, r0, #32768
 3211 0a3a 1A43     		orrs	r2, r2, r3
 3212 0a3c 6548     		ldr	r0, .L233
 3213 0a3e 6D21     		movs	r1, #109
 3214 0a40 FFF7FEFF 		bl	tmc5130_writeInt
 3215              	.LVL413:
 126:boards/TMC5130_eval.c **** 
 3216              		.loc 1 126 11 view .LVU1140
 3217 0a44 0024     		movs	r4, #0
 3218 0a46 98E4     		b	.L57
 3219              	.LVL414:
 3220              	.L82:
 496:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEDN_MASK, TMC5130_SEDN_
 3221              		.loc 1 496 3 is_stmt 1 view .LVU1141
 497:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3222              		.loc 1 497 13 is_stmt 0 view .LVU1142
 3223 0a48 6248     		ldr	r0, .L233
 3224              	.LVL415:
 497:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3225              		.loc 1 497 13 view .LVU1143
 3226 0a4a 6D21     		movs	r1, #109
 3227              	.LVL416:
 496:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEDN_MASK, TMC5130_SEDN_
 3228              		.loc 1 496 5 view .LVU1144
 3229 0a4c 36B9     		cbnz	r6, .L178
 497:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3230              		.loc 1 497 4 is_stmt 1 view .LVU1145
 3231              	.LBB406:
 3232              	.LBI406:
  37:boards/TMC5130_eval.c **** {
 3233              		.loc 1 37 31 view .LVU1146
 3234              	.LVL417:
  37:boards/TMC5130_eval.c **** {
 3235              		.loc 1 37 31 is_stmt 0 view .LVU1147
 3236              	.LBE406:
  39:boards/TMC5130_eval.c **** 
 3237              		.loc 1 39 2 is_stmt 1 view .LVU1148
  41:boards/TMC5130_eval.c **** }
 3238              		.loc 1 41 2 view .LVU1149
 497:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3239              		.loc 1 497 13 is_stmt 0 view .LVU1150
 3240 0a4e FFF7FEFF 		bl	tmc5130_readInt
 3241              	.LVL418:
 3242 0a52 C0F34130 		ubfx	r0, r0, #13, #2
 497:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3243              		.loc 1 497 11 view .LVU1151
 3244 0a56 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3245              		.loc 1 126 11 view .LVU1152
 3246 0a58 3446     		mov	r4, r6
 3247 0a5a 8EE4     		b	.L57
 3248              	.LVL419:
 3249              	.L178:
 498:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEDN_MASK, TMC5130_SEDN_SHIFT, *
 3250              		.loc 1 498 10 is_stmt 1 view .LVU1153
 499:boards/TMC5130_eval.c **** 		}
 3251              		.loc 1 499 4 view .LVU1154
 3252              	.LBB407:
 3253              	.LBI407:
  37:boards/TMC5130_eval.c **** {
 3254              		.loc 1 37 31 view .LVU1155
  37:boards/TMC5130_eval.c **** {
 3255              		.loc 1 37 31 is_stmt 0 view .LVU1156
 3256              	.LBE407:
  39:boards/TMC5130_eval.c **** 
 3257              		.loc 1 39 2 is_stmt 1 view .LVU1157
  41:boards/TMC5130_eval.c **** }
 3258              		.loc 1 41 2 view .LVU1158
 3259              	.LBB408:
 3260              	.LBI408:
  37:boards/TMC5130_eval.c **** {
 3261              		.loc 1 37 31 view .LVU1159
  37:boards/TMC5130_eval.c **** {
 3262              		.loc 1 37 31 is_stmt 0 view .LVU1160
 3263              	.LBE408:
  39:boards/TMC5130_eval.c **** 
 3264              		.loc 1 39 2 is_stmt 1 view .LVU1161
  41:boards/TMC5130_eval.c **** }
 3265              		.loc 1 41 2 view .LVU1162
 499:boards/TMC5130_eval.c **** 		}
 3266              		.loc 1 499 4 is_stmt 0 view .LVU1163
 3267 0a5c FFF7FEFF 		bl	tmc5130_readInt
 3268              	.LVL420:
 3269 0a60 2B68     		ldr	r3, [r5]
 3270 0a62 5B03     		lsls	r3, r3, #13
 3271 0a64 03F4C043 		and	r3, r3, #24576
 3272 0a68 20F4C042 		bic	r2, r0, #24576
 3273 0a6c 1A43     		orrs	r2, r2, r3
 3274 0a6e 5948     		ldr	r0, .L233
 3275 0a70 6D21     		movs	r1, #109
 3276 0a72 FFF7FEFF 		bl	tmc5130_writeInt
 3277              	.LVL421:
 126:boards/TMC5130_eval.c **** 
 3278              		.loc 1 126 11 view .LVU1164
 3279 0a76 0024     		movs	r4, #0
 3280 0a78 7FE4     		b	.L57
 3281              	.LVL422:
 3282              	.L81:
 504:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMAX_MASK, TMC5130_SEMA
 3283              		.loc 1 504 3 is_stmt 1 view .LVU1165
 505:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3284              		.loc 1 505 13 is_stmt 0 view .LVU1166
 3285 0a7a 5648     		ldr	r0, .L233
 3286              	.LVL423:
 505:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3287              		.loc 1 505 13 view .LVU1167
 3288 0a7c 6D21     		movs	r1, #109
 3289              	.LVL424:
 504:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMAX_MASK, TMC5130_SEMA
 3290              		.loc 1 504 5 view .LVU1168
 3291 0a7e 36B9     		cbnz	r6, .L179
 505:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3292              		.loc 1 505 4 is_stmt 1 view .LVU1169
 3293              	.LBB409:
 3294              	.LBI409:
  37:boards/TMC5130_eval.c **** {
 3295              		.loc 1 37 31 view .LVU1170
 3296              	.LVL425:
  37:boards/TMC5130_eval.c **** {
 3297              		.loc 1 37 31 is_stmt 0 view .LVU1171
 3298              	.LBE409:
  39:boards/TMC5130_eval.c **** 
 3299              		.loc 1 39 2 is_stmt 1 view .LVU1172
  41:boards/TMC5130_eval.c **** }
 3300              		.loc 1 41 2 view .LVU1173
 505:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3301              		.loc 1 505 13 is_stmt 0 view .LVU1174
 3302 0a80 FFF7FEFF 		bl	tmc5130_readInt
 3303              	.LVL426:
 3304 0a84 C0F30320 		ubfx	r0, r0, #8, #4
 505:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3305              		.loc 1 505 11 view .LVU1175
 3306 0a88 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3307              		.loc 1 126 11 view .LVU1176
 3308 0a8a 3446     		mov	r4, r6
 3309 0a8c 75E4     		b	.L57
 3310              	.LVL427:
 3311              	.L179:
 506:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMAX_MASK, TMC5130_SEMAX_SHIFT,
 3312              		.loc 1 506 10 is_stmt 1 view .LVU1177
 507:boards/TMC5130_eval.c **** 		}
 3313              		.loc 1 507 4 view .LVU1178
 3314              	.LBB410:
 3315              	.LBI410:
  37:boards/TMC5130_eval.c **** {
 3316              		.loc 1 37 31 view .LVU1179
  37:boards/TMC5130_eval.c **** {
 3317              		.loc 1 37 31 is_stmt 0 view .LVU1180
 3318              	.LBE410:
  39:boards/TMC5130_eval.c **** 
 3319              		.loc 1 39 2 is_stmt 1 view .LVU1181
  41:boards/TMC5130_eval.c **** }
 3320              		.loc 1 41 2 view .LVU1182
 3321              	.LBB411:
 3322              	.LBI411:
  37:boards/TMC5130_eval.c **** {
 3323              		.loc 1 37 31 view .LVU1183
  37:boards/TMC5130_eval.c **** {
 3324              		.loc 1 37 31 is_stmt 0 view .LVU1184
 3325              	.LBE411:
  39:boards/TMC5130_eval.c **** 
 3326              		.loc 1 39 2 is_stmt 1 view .LVU1185
  41:boards/TMC5130_eval.c **** }
 3327              		.loc 1 41 2 view .LVU1186
 507:boards/TMC5130_eval.c **** 		}
 3328              		.loc 1 507 4 is_stmt 0 view .LVU1187
 3329 0a8e FFF7FEFF 		bl	tmc5130_readInt
 3330              	.LVL428:
 3331 0a92 2B68     		ldr	r3, [r5]
 3332 0a94 1B02     		lsls	r3, r3, #8
 3333 0a96 03F47063 		and	r3, r3, #3840
 3334 0a9a 20F47062 		bic	r2, r0, #3840
 3335 0a9e 1A43     		orrs	r2, r2, r3
 3336 0aa0 4C48     		ldr	r0, .L233
 3337 0aa2 6D21     		movs	r1, #109
 3338 0aa4 FFF7FEFF 		bl	tmc5130_writeInt
 3339              	.LVL429:
 126:boards/TMC5130_eval.c **** 
 3340              		.loc 1 126 11 view .LVU1188
 3341 0aa8 0024     		movs	r4, #0
 3342 0aaa 66E4     		b	.L57
 3343              	.LVL430:
 3344              	.L80:
 512:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEUP_MASK, TMC5130_SEUP_
 3345              		.loc 1 512 3 is_stmt 1 view .LVU1189
 513:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3346              		.loc 1 513 13 is_stmt 0 view .LVU1190
 3347 0aac 4948     		ldr	r0, .L233
 3348              	.LVL431:
 513:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3349              		.loc 1 513 13 view .LVU1191
 3350 0aae 6D21     		movs	r1, #109
 3351              	.LVL432:
 512:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEUP_MASK, TMC5130_SEUP_
 3352              		.loc 1 512 5 view .LVU1192
 3353 0ab0 36B9     		cbnz	r6, .L180
 513:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3354              		.loc 1 513 4 is_stmt 1 view .LVU1193
 3355              	.LBB412:
 3356              	.LBI412:
  37:boards/TMC5130_eval.c **** {
 3357              		.loc 1 37 31 view .LVU1194
 3358              	.LVL433:
  37:boards/TMC5130_eval.c **** {
 3359              		.loc 1 37 31 is_stmt 0 view .LVU1195
 3360              	.LBE412:
  39:boards/TMC5130_eval.c **** 
 3361              		.loc 1 39 2 is_stmt 1 view .LVU1196
  41:boards/TMC5130_eval.c **** }
 3362              		.loc 1 41 2 view .LVU1197
 513:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3363              		.loc 1 513 13 is_stmt 0 view .LVU1198
 3364 0ab2 FFF7FEFF 		bl	tmc5130_readInt
 3365              	.LVL434:
 3366 0ab6 C0F34110 		ubfx	r0, r0, #5, #2
 513:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3367              		.loc 1 513 11 view .LVU1199
 3368 0aba 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3369              		.loc 1 126 11 view .LVU1200
 3370 0abc 3446     		mov	r4, r6
 3371 0abe 5CE4     		b	.L57
 3372              	.LVL435:
 3373              	.L180:
 514:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEUP_MASK, TMC5130_SEUP_SHIFT, *
 3374              		.loc 1 514 10 is_stmt 1 view .LVU1201
 515:boards/TMC5130_eval.c **** 		}
 3375              		.loc 1 515 4 view .LVU1202
 3376              	.LBB413:
 3377              	.LBI413:
  37:boards/TMC5130_eval.c **** {
 3378              		.loc 1 37 31 view .LVU1203
  37:boards/TMC5130_eval.c **** {
 3379              		.loc 1 37 31 is_stmt 0 view .LVU1204
 3380              	.LBE413:
  39:boards/TMC5130_eval.c **** 
 3381              		.loc 1 39 2 is_stmt 1 view .LVU1205
  41:boards/TMC5130_eval.c **** }
 3382              		.loc 1 41 2 view .LVU1206
 3383              	.LBB414:
 3384              	.LBI414:
  37:boards/TMC5130_eval.c **** {
 3385              		.loc 1 37 31 view .LVU1207
  37:boards/TMC5130_eval.c **** {
 3386              		.loc 1 37 31 is_stmt 0 view .LVU1208
 3387              	.LBE414:
  39:boards/TMC5130_eval.c **** 
 3388              		.loc 1 39 2 is_stmt 1 view .LVU1209
  41:boards/TMC5130_eval.c **** }
 3389              		.loc 1 41 2 view .LVU1210
 515:boards/TMC5130_eval.c **** 		}
 3390              		.loc 1 515 4 is_stmt 0 view .LVU1211
 3391 0ac0 FFF7FEFF 		bl	tmc5130_readInt
 3392              	.LVL436:
 3393 0ac4 2B68     		ldr	r3, [r5]
 3394 0ac6 5B01     		lsls	r3, r3, #5
 3395 0ac8 03F06003 		and	r3, r3, #96
 3396 0acc 20F06002 		bic	r2, r0, #96
 3397 0ad0 1A43     		orrs	r2, r2, r3
 3398 0ad2 4048     		ldr	r0, .L233
 3399 0ad4 6D21     		movs	r1, #109
 3400 0ad6 FFF7FEFF 		bl	tmc5130_writeInt
 3401              	.LVL437:
 126:boards/TMC5130_eval.c **** 
 3402              		.loc 1 126 11 view .LVU1212
 3403 0ada 0024     		movs	r4, #0
 3404 0adc 4DE4     		b	.L57
 3405              	.LVL438:
 3406              	.L79:
 520:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMIN_MASK, TMC5130_SEMI
 3407              		.loc 1 520 3 is_stmt 1 view .LVU1213
 521:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3408              		.loc 1 521 13 is_stmt 0 view .LVU1214
 3409 0ade 3D48     		ldr	r0, .L233
 3410              	.LVL439:
 521:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3411              		.loc 1 521 13 view .LVU1215
 3412 0ae0 6D21     		movs	r1, #109
 3413              	.LVL440:
 520:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMIN_MASK, TMC5130_SEMI
 3414              		.loc 1 520 5 view .LVU1216
 3415 0ae2 36B9     		cbnz	r6, .L181
 521:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3416              		.loc 1 521 4 is_stmt 1 view .LVU1217
 3417              	.LBB415:
 3418              	.LBI415:
  37:boards/TMC5130_eval.c **** {
 3419              		.loc 1 37 31 view .LVU1218
 3420              	.LVL441:
  37:boards/TMC5130_eval.c **** {
 3421              		.loc 1 37 31 is_stmt 0 view .LVU1219
 3422              	.LBE415:
  39:boards/TMC5130_eval.c **** 
 3423              		.loc 1 39 2 is_stmt 1 view .LVU1220
  41:boards/TMC5130_eval.c **** }
 3424              		.loc 1 41 2 view .LVU1221
 521:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3425              		.loc 1 521 13 is_stmt 0 view .LVU1222
 3426 0ae4 FFF7FEFF 		bl	tmc5130_readInt
 3427              	.LVL442:
 3428 0ae8 00F00F00 		and	r0, r0, #15
 521:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3429              		.loc 1 521 11 view .LVU1223
 3430 0aec 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3431              		.loc 1 126 11 view .LVU1224
 3432 0aee 3446     		mov	r4, r6
 3433 0af0 43E4     		b	.L57
 3434              	.LVL443:
 3435              	.L181:
 522:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SEMIN_MASK, TMC5130_SEMIN_SHIFT,
 3436              		.loc 1 522 10 is_stmt 1 view .LVU1225
 523:boards/TMC5130_eval.c **** 		}
 3437              		.loc 1 523 4 view .LVU1226
 3438              	.LBB416:
 3439              	.LBI416:
  37:boards/TMC5130_eval.c **** {
 3440              		.loc 1 37 31 view .LVU1227
  37:boards/TMC5130_eval.c **** {
 3441              		.loc 1 37 31 is_stmt 0 view .LVU1228
 3442              	.LBE416:
  39:boards/TMC5130_eval.c **** 
 3443              		.loc 1 39 2 is_stmt 1 view .LVU1229
  41:boards/TMC5130_eval.c **** }
 3444              		.loc 1 41 2 view .LVU1230
 3445              	.LBB417:
 3446              	.LBI417:
  37:boards/TMC5130_eval.c **** {
 3447              		.loc 1 37 31 view .LVU1231
  37:boards/TMC5130_eval.c **** {
 3448              		.loc 1 37 31 is_stmt 0 view .LVU1232
 3449              	.LBE417:
  39:boards/TMC5130_eval.c **** 
 3450              		.loc 1 39 2 is_stmt 1 view .LVU1233
  41:boards/TMC5130_eval.c **** }
 3451              		.loc 1 41 2 view .LVU1234
 523:boards/TMC5130_eval.c **** 		}
 3452              		.loc 1 523 4 is_stmt 0 view .LVU1235
 3453 0af2 FFF7FEFF 		bl	tmc5130_readInt
 3454              	.LVL444:
 3455 0af6 2A68     		ldr	r2, [r5]
 3456 0af8 20F00F00 		bic	r0, r0, #15
 3457 0afc 02F00F02 		and	r2, r2, #15
 3458 0b00 0243     		orrs	r2, r2, r0
 3459 0b02 6D21     		movs	r1, #109
 3460 0b04 3348     		ldr	r0, .L233
 3461 0b06 FFF7FEFF 		bl	tmc5130_writeInt
 3462              	.LVL445:
 126:boards/TMC5130_eval.c **** 
 3463              		.loc 1 126 11 view .LVU1236
 3464 0b0a 0024     		movs	r4, #0
 3465 0b0c 35E4     		b	.L57
 3466              	.LVL446:
 3467              	.L78:
 528:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SFILT_MASK, TMC5130_SFIL
 3468              		.loc 1 528 3 is_stmt 1 view .LVU1237
 529:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3469              		.loc 1 529 13 is_stmt 0 view .LVU1238
 3470 0b0e 3148     		ldr	r0, .L233
 3471              	.LVL447:
 529:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3472              		.loc 1 529 13 view .LVU1239
 3473 0b10 6D21     		movs	r1, #109
 3474              	.LVL448:
 528:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SFILT_MASK, TMC5130_SFIL
 3475              		.loc 1 528 5 view .LVU1240
 3476 0b12 36B9     		cbnz	r6, .L182
 529:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3477              		.loc 1 529 4 is_stmt 1 view .LVU1241
 3478              	.LBB418:
 3479              	.LBI418:
  37:boards/TMC5130_eval.c **** {
 3480              		.loc 1 37 31 view .LVU1242
 3481              	.LVL449:
  37:boards/TMC5130_eval.c **** {
 3482              		.loc 1 37 31 is_stmt 0 view .LVU1243
 3483              	.LBE418:
  39:boards/TMC5130_eval.c **** 
 3484              		.loc 1 39 2 is_stmt 1 view .LVU1244
  41:boards/TMC5130_eval.c **** }
 3485              		.loc 1 41 2 view .LVU1245
 529:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3486              		.loc 1 529 13 is_stmt 0 view .LVU1246
 3487 0b14 FFF7FEFF 		bl	tmc5130_readInt
 3488              	.LVL450:
 3489 0b18 C0F30060 		ubfx	r0, r0, #24, #1
 529:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3490              		.loc 1 529 11 view .LVU1247
 3491 0b1c 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3492              		.loc 1 126 11 view .LVU1248
 3493 0b1e 3446     		mov	r4, r6
 3494 0b20 2BE4     		b	.L57
 3495              	.LVL451:
 3496              	.L182:
 530:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SFILT_MASK, TMC5130_SFILT_SHIFT,
 3497              		.loc 1 530 10 is_stmt 1 view .LVU1249
 531:boards/TMC5130_eval.c **** 		}
 3498              		.loc 1 531 4 view .LVU1250
 3499              	.LBB419:
 3500              	.LBI419:
  37:boards/TMC5130_eval.c **** {
 3501              		.loc 1 37 31 view .LVU1251
  37:boards/TMC5130_eval.c **** {
 3502              		.loc 1 37 31 is_stmt 0 view .LVU1252
 3503              	.LBE419:
  39:boards/TMC5130_eval.c **** 
 3504              		.loc 1 39 2 is_stmt 1 view .LVU1253
  41:boards/TMC5130_eval.c **** }
 3505              		.loc 1 41 2 view .LVU1254
 3506              	.LBB420:
 3507              	.LBI420:
  37:boards/TMC5130_eval.c **** {
 3508              		.loc 1 37 31 view .LVU1255
  37:boards/TMC5130_eval.c **** {
 3509              		.loc 1 37 31 is_stmt 0 view .LVU1256
 3510              	.LBE420:
  39:boards/TMC5130_eval.c **** 
 3511              		.loc 1 39 2 is_stmt 1 view .LVU1257
  41:boards/TMC5130_eval.c **** }
 3512              		.loc 1 41 2 view .LVU1258
 531:boards/TMC5130_eval.c **** 		}
 3513              		.loc 1 531 4 is_stmt 0 view .LVU1259
 3514 0b22 FFF7FEFF 		bl	tmc5130_readInt
 3515              	.LVL452:
 3516 0b26 2B68     		ldr	r3, [r5]
 3517 0b28 1B06     		lsls	r3, r3, #24
 3518 0b2a 03F08073 		and	r3, r3, #16777216
 3519 0b2e 20F08072 		bic	r2, r0, #16777216
 3520 0b32 1A43     		orrs	r2, r2, r3
 3521 0b34 2748     		ldr	r0, .L233
 3522 0b36 6D21     		movs	r1, #109
 3523 0b38 FFF7FEFF 		bl	tmc5130_writeInt
 3524              	.LVL453:
 126:boards/TMC5130_eval.c **** 
 3525              		.loc 1 126 11 view .LVU1260
 3526 0b3c 0024     		movs	r4, #0
 3527 0b3e 1CE4     		b	.L57
 3528              	.LVL454:
 3529              	.L77:
 536:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SGT_MASK, TMC5130_SGT_SH
 3530              		.loc 1 536 3 is_stmt 1 view .LVU1261
 537:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3531              		.loc 1 537 13 is_stmt 0 view .LVU1262
 3532 0b40 2448     		ldr	r0, .L233
 3533              	.LVL455:
 537:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3534              		.loc 1 537 13 view .LVU1263
 3535 0b42 6D21     		movs	r1, #109
 3536              	.LVL456:
 536:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SGT_MASK, TMC5130_SGT_SH
 3537              		.loc 1 536 5 view .LVU1264
 3538 0b44 6EB9     		cbnz	r6, .L183
 537:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3539              		.loc 1 537 4 is_stmt 1 view .LVU1265
 3540              	.LBB421:
 3541              	.LBI421:
  37:boards/TMC5130_eval.c **** {
 3542              		.loc 1 37 31 view .LVU1266
 3543              	.LVL457:
  37:boards/TMC5130_eval.c **** {
 3544              		.loc 1 37 31 is_stmt 0 view .LVU1267
 3545              	.LBE421:
  39:boards/TMC5130_eval.c **** 
 3546              		.loc 1 39 2 is_stmt 1 view .LVU1268
  41:boards/TMC5130_eval.c **** }
 3547              		.loc 1 41 2 view .LVU1269
 537:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3548              		.loc 1 537 13 is_stmt 0 view .LVU1270
 3549 0b46 FFF7FEFF 		bl	tmc5130_readInt
 3550              	.LVL458:
 3551 0b4a 0314     		asrs	r3, r0, #16
 538:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3552              		.loc 1 538 13 view .LVU1271
 3553 0b4c 13F04003 		ands	r3, r3, #64
 537:boards/TMC5130_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 3554              		.loc 1 537 13 view .LVU1272
 3555 0b50 C0F30640 		ubfx	r0, r0, #16, #7
 538:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3556              		.loc 1 538 4 is_stmt 1 view .LVU1273
 538:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3557              		.loc 1 538 13 is_stmt 0 view .LVU1274
 3558 0b54 18BF     		it	ne
 3559 0b56 6FF07F03 		mvnne	r3, #127
 3560 0b5a 1843     		orrs	r0, r0, r3
 538:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3561              		.loc 1 538 11 view .LVU1275
 3562 0b5c 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3563              		.loc 1 126 11 view .LVU1276
 3564 0b5e 3446     		mov	r4, r6
 3565 0b60 0BE4     		b	.L57
 3566              	.LVL459:
 3567              	.L183:
 539:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_COOLCONF, TMC5130_SGT_MASK, TMC5130_SGT_SHIFT, *va
 3568              		.loc 1 539 10 is_stmt 1 view .LVU1277
 540:boards/TMC5130_eval.c **** 		}
 3569              		.loc 1 540 4 view .LVU1278
 3570              	.LBB422:
 3571              	.LBI422:
  37:boards/TMC5130_eval.c **** {
 3572              		.loc 1 37 31 view .LVU1279
  37:boards/TMC5130_eval.c **** {
 3573              		.loc 1 37 31 is_stmt 0 view .LVU1280
 3574              	.LBE422:
  39:boards/TMC5130_eval.c **** 
 3575              		.loc 1 39 2 is_stmt 1 view .LVU1281
  41:boards/TMC5130_eval.c **** }
 3576              		.loc 1 41 2 view .LVU1282
 3577              	.LBB423:
 3578              	.LBI423:
  37:boards/TMC5130_eval.c **** {
 3579              		.loc 1 37 31 view .LVU1283
  37:boards/TMC5130_eval.c **** {
 3580              		.loc 1 37 31 is_stmt 0 view .LVU1284
 3581              	.LBE423:
  39:boards/TMC5130_eval.c **** 
 3582              		.loc 1 39 2 is_stmt 1 view .LVU1285
  41:boards/TMC5130_eval.c **** }
 3583              		.loc 1 41 2 view .LVU1286
 540:boards/TMC5130_eval.c **** 		}
 3584              		.loc 1 540 4 is_stmt 0 view .LVU1287
 3585 0b62 FFF7FEFF 		bl	tmc5130_readInt
 3586              	.LVL460:
 3587 0b66 2B68     		ldr	r3, [r5]
 3588 0b68 1B04     		lsls	r3, r3, #16
 3589 0b6a 03F4FE03 		and	r3, r3, #8323072
 3590 0b6e 20F4FE02 		bic	r2, r0, #8323072
 3591 0b72 1A43     		orrs	r2, r2, r3
 3592 0b74 1748     		ldr	r0, .L233
 3593 0b76 6D21     		movs	r1, #109
 3594 0b78 FFF7FEFF 		bl	tmc5130_writeInt
 3595              	.LVL461:
 126:boards/TMC5130_eval.c **** 
 3596              		.loc 1 126 11 view .LVU1288
 3597 0b7c 0024     		movs	r4, #0
 3598 0b7e FFF7FCBB 		b	.L57
 3599              	.LVL462:
 3600              	.L76:
 545:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VSENSE_MASK, TMC5130_VSE
 3601              		.loc 1 545 3 is_stmt 1 view .LVU1289
 546:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3602              		.loc 1 546 13 is_stmt 0 view .LVU1290
 3603 0b82 1448     		ldr	r0, .L233
 3604              	.LVL463:
 546:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3605              		.loc 1 546 13 view .LVU1291
 3606 0b84 6C21     		movs	r1, #108
 3607              	.LVL464:
 545:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VSENSE_MASK, TMC5130_VSE
 3608              		.loc 1 545 5 view .LVU1292
 3609 0b86 3EB9     		cbnz	r6, .L185
 546:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3610              		.loc 1 546 4 is_stmt 1 view .LVU1293
 3611              	.LBB424:
 3612              	.LBI424:
  37:boards/TMC5130_eval.c **** {
 3613              		.loc 1 37 31 view .LVU1294
 3614              	.LVL465:
  37:boards/TMC5130_eval.c **** {
 3615              		.loc 1 37 31 is_stmt 0 view .LVU1295
 3616              	.LBE424:
  39:boards/TMC5130_eval.c **** 
 3617              		.loc 1 39 2 is_stmt 1 view .LVU1296
  41:boards/TMC5130_eval.c **** }
 3618              		.loc 1 41 2 view .LVU1297
 546:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3619              		.loc 1 546 13 is_stmt 0 view .LVU1298
 3620 0b88 FFF7FEFF 		bl	tmc5130_readInt
 3621              	.LVL466:
 3622 0b8c C0F34040 		ubfx	r0, r0, #17, #1
 546:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3623              		.loc 1 546 11 view .LVU1299
 3624 0b90 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3625              		.loc 1 126 11 view .LVU1300
 3626 0b92 3446     		mov	r4, r6
 3627 0b94 FFF7F1BB 		b	.L57
 3628              	.LVL467:
 3629              	.L185:
 547:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_VSENSE_MASK, TMC5130_VSENSE_SHIF
 3630              		.loc 1 547 10 is_stmt 1 view .LVU1301
 548:boards/TMC5130_eval.c **** 		}
 3631              		.loc 1 548 4 view .LVU1302
 3632              	.LBB425:
 3633              	.LBI425:
  37:boards/TMC5130_eval.c **** {
 3634              		.loc 1 37 31 view .LVU1303
  37:boards/TMC5130_eval.c **** {
 3635              		.loc 1 37 31 is_stmt 0 view .LVU1304
 3636              	.LBE425:
  39:boards/TMC5130_eval.c **** 
 3637              		.loc 1 39 2 is_stmt 1 view .LVU1305
  41:boards/TMC5130_eval.c **** }
 3638              		.loc 1 41 2 view .LVU1306
 3639              	.LBB426:
 3640              	.LBI426:
  37:boards/TMC5130_eval.c **** {
 3641              		.loc 1 37 31 view .LVU1307
  37:boards/TMC5130_eval.c **** {
 3642              		.loc 1 37 31 is_stmt 0 view .LVU1308
 3643              	.LBE426:
  39:boards/TMC5130_eval.c **** 
 3644              		.loc 1 39 2 is_stmt 1 view .LVU1309
  41:boards/TMC5130_eval.c **** }
 3645              		.loc 1 41 2 view .LVU1310
 548:boards/TMC5130_eval.c **** 		}
 3646              		.loc 1 548 4 is_stmt 0 view .LVU1311
 3647 0b98 FFF7FEFF 		bl	tmc5130_readInt
 3648              	.LVL468:
 3649 0b9c 2B68     		ldr	r3, [r5]
 3650 0b9e 5B04     		lsls	r3, r3, #17
 3651 0ba0 03F40033 		and	r3, r3, #131072
 3652 0ba4 20F40032 		bic	r2, r0, #131072
 3653 0ba8 1A43     		orrs	r2, r2, r3
 3654 0baa 0A48     		ldr	r0, .L233
 3655 0bac 6C21     		movs	r1, #108
 3656 0bae FFF7FEFF 		bl	tmc5130_writeInt
 3657              	.LVL469:
 126:boards/TMC5130_eval.c **** 
 3658              		.loc 1 126 11 view .LVU1312
 3659 0bb2 0024     		movs	r4, #0
 3660 0bb4 FFF7E1BB 		b	.L57
 3661              	.LVL470:
 3662              	.L75:
 553:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_DRVSTATUS, TMC5130_CS_ACTUAL_MASK, TMC5130
 3663              		.loc 1 553 3 is_stmt 1 view .LVU1313
 553:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_DRVSTATUS, TMC5130_CS_ACTUAL_MASK, TMC5130
 3664              		.loc 1 553 5 is_stmt 0 view .LVU1314
 3665 0bb8 002E     		cmp	r6, #0
 3666 0bba 40F0B981 		bne	.L218
 554:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3667              		.loc 1 554 4 is_stmt 1 view .LVU1315
 3668              	.LBB427:
 3669              	.LBI427:
  37:boards/TMC5130_eval.c **** {
 3670              		.loc 1 37 31 view .LVU1316
 3671              	.LVL471:
  37:boards/TMC5130_eval.c **** {
 3672              		.loc 1 37 31 is_stmt 0 view .LVU1317
 3673              	.LBE427:
  39:boards/TMC5130_eval.c **** 
 3674              		.loc 1 39 2 is_stmt 1 view .LVU1318
  41:boards/TMC5130_eval.c **** }
 3675              		.loc 1 41 2 view .LVU1319
 554:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3676              		.loc 1 554 13 is_stmt 0 view .LVU1320
 3677 0bbe 0548     		ldr	r0, .L233
 3678              	.LVL472:
 554:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3679              		.loc 1 554 13 view .LVU1321
 3680 0bc0 6F21     		movs	r1, #111
 3681              	.LVL473:
 554:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3682              		.loc 1 554 13 view .LVU1322
 3683 0bc2 FFF7FEFF 		bl	tmc5130_readInt
 3684              	.LVL474:
 3685 0bc6 C0F30440 		ubfx	r0, r0, #16, #5
 554:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3686              		.loc 1 554 11 view .LVU1323
 3687 0bca 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3688              		.loc 1 126 11 view .LVU1324
 3689 0bcc 3446     		mov	r4, r6
 3690 0bce FFF7D4BB 		b	.L57
 3691              	.L234:
 3692 0bd2 00BF     		.align	2
 3693              	.L233:
 3694 0bd4 00000000 		.word	.LANCHOR0
 3695              	.LVL475:
 3696              	.L74:
 562:boards/TMC5130_eval.c **** 		{
 3697              		.loc 1 562 3 is_stmt 1 view .LVU1325
 564:boards/TMC5130_eval.c **** 			{
 3698              		.loc 1 564 7 is_stmt 0 view .LVU1326
 3699 0bd8 BD48     		ldr	r0, .L235
 3700              	.LVL476:
 564:boards/TMC5130_eval.c **** 			{
 3701              		.loc 1 564 7 view .LVU1327
 3702 0bda 3421     		movs	r1, #52
 3703              	.LVL477:
 562:boards/TMC5130_eval.c **** 		{
 3704              		.loc 1 562 5 view .LVU1328
 3705 0bdc D6B9     		cbnz	r6, .L186
 564:boards/TMC5130_eval.c **** 			{
 3706              		.loc 1 564 4 is_stmt 1 view .LVU1329
 3707              	.LBB428:
 3708              	.LBI428:
  37:boards/TMC5130_eval.c **** {
 3709              		.loc 1 37 31 view .LVU1330
 3710              	.LVL478:
  37:boards/TMC5130_eval.c **** {
 3711              		.loc 1 37 31 is_stmt 0 view .LVU1331
 3712              	.LBE428:
  39:boards/TMC5130_eval.c **** 
 3713              		.loc 1 39 2 is_stmt 1 view .LVU1332
  41:boards/TMC5130_eval.c **** }
 3714              		.loc 1 41 2 view .LVU1333
 564:boards/TMC5130_eval.c **** 			{
 3715              		.loc 1 564 7 is_stmt 0 view .LVU1334
 3716 0bde FFF7FEFF 		bl	tmc5130_readInt
 3717              	.LVL479:
 564:boards/TMC5130_eval.c **** 			{
 3718              		.loc 1 564 6 view .LVU1335
 3719 0be2 4305     		lsls	r3, r0, #21
 3720 0be4 12D5     		bpl	.L187
 566:boards/TMC5130_eval.c **** 				*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer : 1));
 3721              		.loc 1 566 5 is_stmt 1 view .LVU1336
 3722              	.LBB429:
 3723              	.LBI429:
  37:boards/TMC5130_eval.c **** {
 3724              		.loc 1 37 31 view .LVU1337
 3725              	.LVL480:
  37:boards/TMC5130_eval.c **** {
 3726              		.loc 1 37 31 is_stmt 0 view .LVU1338
 3727              	.LBE429:
  39:boards/TMC5130_eval.c **** 
 3728              		.loc 1 39 2 is_stmt 1 view .LVU1339
  41:boards/TMC5130_eval.c **** }
 3729              		.loc 1 41 2 view .LVU1340
 566:boards/TMC5130_eval.c **** 				*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer : 1));
 3730              		.loc 1 566 14 is_stmt 0 view .LVU1341
 3731 0be6 BA48     		ldr	r0, .L235
 3732 0be8 1421     		movs	r1, #20
 3733 0bea FFF7FEFF 		bl	tmc5130_readInt
 3734              	.LVL481:
 567:boards/TMC5130_eval.c **** 			}
 3735              		.loc 1 567 5 is_stmt 1 view .LVU1342
 567:boards/TMC5130_eval.c **** 			}
 3736              		.loc 1 567 14 is_stmt 0 view .LVU1343
 3737 0bee 0128     		cmp	r0, #1
 3738 0bf0 38BF     		it	cc
 3739 0bf2 0120     		movcc	r0, #1
 3740              	.LVL482:
 567:boards/TMC5130_eval.c **** 			}
 3741              		.loc 1 567 14 view .LVU1344
 3742 0bf4 4FF08073 		mov	r3, #16777216
 3743 0bf8 B3FBF0F0 		udiv	r0, r3, r0
 567:boards/TMC5130_eval.c **** 			}
 3744              		.loc 1 567 12 view .LVU1345
 3745 0bfc B54B     		ldr	r3, .L235+4
 3746 0bfe 9842     		cmp	r0, r3
 3747 0c00 94BF     		ite	ls
 3748 0c02 2860     		strls	r0, [r5]
 3749 0c04 2B60     		strhi	r3, [r5]
 126:boards/TMC5130_eval.c **** 
 3750              		.loc 1 126 11 view .LVU1346
 3751 0c06 3446     		mov	r4, r6
 3752 0c08 FFF7B7BB 		b	.L57
 3753              	.LVL483:
 3754              	.L187:
 570:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3755              		.loc 1 570 5 is_stmt 1 view .LVU1347
 570:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3756              		.loc 1 570 12 is_stmt 0 view .LVU1348
 3757 0c0c 2E60     		str	r6, [r5]
 126:boards/TMC5130_eval.c **** 
 3758              		.loc 1 126 11 view .LVU1349
 3759 0c0e 3446     		mov	r4, r6
 3760 0c10 FFF7B3BB 		b	.L57
 3761              	.LVL484:
 3762              	.L186:
 571:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_SWMODE, TMC5130_SG_STOP_MASK, TMC5130_SG_STOP_SHIF
 3763              		.loc 1 571 10 is_stmt 1 view .LVU1350
 572:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 3764              		.loc 1 572 4 view .LVU1351
 3765              	.LBB430:
 3766              	.LBI430:
  37:boards/TMC5130_eval.c **** {
 3767              		.loc 1 37 31 view .LVU1352
  37:boards/TMC5130_eval.c **** {
 3768              		.loc 1 37 31 is_stmt 0 view .LVU1353
 3769              	.LBE430:
  39:boards/TMC5130_eval.c **** 
 3770              		.loc 1 39 2 is_stmt 1 view .LVU1354
  41:boards/TMC5130_eval.c **** }
 3771              		.loc 1 41 2 view .LVU1355
 3772              	.LBB431:
 3773              	.LBI431:
  37:boards/TMC5130_eval.c **** {
 3774              		.loc 1 37 31 view .LVU1356
  37:boards/TMC5130_eval.c **** {
 3775              		.loc 1 37 31 is_stmt 0 view .LVU1357
 3776              	.LBE431:
  39:boards/TMC5130_eval.c **** 
 3777              		.loc 1 39 2 is_stmt 1 view .LVU1358
  41:boards/TMC5130_eval.c **** }
 3778              		.loc 1 41 2 view .LVU1359
 572:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value:1));
 3779              		.loc 1 572 4 is_stmt 0 view .LVU1360
 3780 0c14 FFF7FEFF 		bl	tmc5130_readInt
 3781              	.LVL485:
 3782 0c18 2B68     		ldr	r3, [r5]
 3783 0c1a 002B     		cmp	r3, #0
 3784 0c1c 18BF     		it	ne
 3785 0c1e 4FF48063 		movne	r3, #1024
 3786 0c22 20F48062 		bic	r2, r0, #1024
 3787 0c26 1A43     		orrs	r2, r2, r3
 3788 0c28 A948     		ldr	r0, .L235
 3789 0c2a 3421     		movs	r1, #52
 3790 0c2c FFF7FEFF 		bl	tmc5130_writeInt
 3791              	.LVL486:
 573:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, *value);
 3792              		.loc 1 573 4 is_stmt 1 view .LVU1361
 573:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, *value);
 3793              		.loc 1 573 13 is_stmt 0 view .LVU1362
 3794 0c30 2B68     		ldr	r3, [r5]
 574:boards/TMC5130_eval.c **** 		}
 3795              		.loc 1 574 4 view .LVU1363
 3796 0c32 A748     		ldr	r0, .L235
 573:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, *value);
 3797              		.loc 1 573 13 view .LVU1364
 3798 0c34 002B     		cmp	r3, #0
 3799 0c36 08BF     		it	eq
 3800 0c38 0123     		moveq	r3, #1
 3801 0c3a 4FF08072 		mov	r2, #16777216
 3802 0c3e 92FBF3F2 		sdiv	r2, r2, r3
 3803 0c42 A44B     		ldr	r3, .L235+4
 3804 0c44 9A42     		cmp	r2, r3
 3805 0c46 A8BF     		it	ge
 3806 0c48 1A46     		movge	r2, r3
 573:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, *value);
 3807              		.loc 1 573 11 view .LVU1365
 3808 0c4a 2A60     		str	r2, [r5]
 574:boards/TMC5130_eval.c **** 		}
 3809              		.loc 1 574 4 is_stmt 1 view .LVU1366
 3810              	.LBB432:
 3811              	.LBI432:
  37:boards/TMC5130_eval.c **** {
 3812              		.loc 1 37 31 view .LVU1367
 3813              	.LVL487:
  37:boards/TMC5130_eval.c **** {
 3814              		.loc 1 37 31 is_stmt 0 view .LVU1368
 3815              	.LBE432:
  39:boards/TMC5130_eval.c **** 
 3816              		.loc 1 39 2 is_stmt 1 view .LVU1369
  41:boards/TMC5130_eval.c **** }
 3817              		.loc 1 41 2 view .LVU1370
 574:boards/TMC5130_eval.c **** 		}
 3818              		.loc 1 574 4 is_stmt 0 view .LVU1371
 3819 0c4c 1421     		movs	r1, #20
 3820 0c4e FFF7FEFF 		bl	tmc5130_writeInt
 3821              	.LVL488:
 126:boards/TMC5130_eval.c **** 
 3822              		.loc 1 126 11 view .LVU1372
 3823 0c52 0024     		movs	r4, #0
 3824 0c54 FFF791BB 		b	.L57
 3825              	.LVL489:
 3826              	.L73:
 579:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_TCOOLTHRS);
 3827              		.loc 1 579 3 is_stmt 1 view .LVU1373
 3828 0c58 9E4C     		ldr	r4, .L235+4
 579:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_TCOOLTHRS);
 3829              		.loc 1 579 5 is_stmt 0 view .LVU1374
 3830 0c5a 8EB9     		cbnz	r6, .L190
 580:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 3831              		.loc 1 580 4 is_stmt 1 view .LVU1375
 3832              	.LBB433:
 3833              	.LBI433:
  37:boards/TMC5130_eval.c **** {
 3834              		.loc 1 37 31 view .LVU1376
 3835              	.LVL490:
  37:boards/TMC5130_eval.c **** {
 3836              		.loc 1 37 31 is_stmt 0 view .LVU1377
 3837              	.LBE433:
  39:boards/TMC5130_eval.c **** 
 3838              		.loc 1 39 2 is_stmt 1 view .LVU1378
  41:boards/TMC5130_eval.c **** }
 3839              		.loc 1 41 2 view .LVU1379
 580:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 3840              		.loc 1 580 13 is_stmt 0 view .LVU1380
 3841 0c5c 9C48     		ldr	r0, .L235
 3842              	.LVL491:
 580:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 3843              		.loc 1 580 13 view .LVU1381
 3844 0c5e 1421     		movs	r1, #20
 3845              	.LVL492:
 580:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1 << 24) / ((buffer)? buffer : 1));
 3846              		.loc 1 580 13 view .LVU1382
 3847 0c60 FFF7FEFF 		bl	tmc5130_readInt
 3848              	.LVL493:
 581:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3849              		.loc 1 581 4 is_stmt 1 view .LVU1383
 581:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3850              		.loc 1 581 13 is_stmt 0 view .LVU1384
 3851 0c64 0128     		cmp	r0, #1
 3852 0c66 38BF     		it	cc
 3853 0c68 0120     		movcc	r0, #1
 3854              	.LVL494:
 581:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3855              		.loc 1 581 13 view .LVU1385
 3856 0c6a 4FF08073 		mov	r3, #16777216
 3857 0c6e B3FBF0F0 		udiv	r0, r3, r0
 581:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3858              		.loc 1 581 11 view .LVU1386
 3859 0c72 A042     		cmp	r0, r4
 3860 0c74 94BF     		ite	ls
 3861 0c76 2860     		strls	r0, [r5]
 3862 0c78 2C60     		strhi	r4, [r5]
 126:boards/TMC5130_eval.c **** 
 3863              		.loc 1 126 11 view .LVU1387
 3864 0c7a 3446     		mov	r4, r6
 3865 0c7c FFF77DBB 		b	.L57
 3866              	.LVL495:
 3867              	.L190:
 582:boards/TMC5130_eval.c **** 			buffer = MIN(0xFFFFF, (1<<24) / ((*value)? *value : 1));
 3868              		.loc 1 582 10 is_stmt 1 view .LVU1388
 583:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, buffer);
 3869              		.loc 1 583 4 view .LVU1389
 583:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, buffer);
 3870              		.loc 1 583 13 is_stmt 0 view .LVU1390
 3871 0c80 2A68     		ldr	r2, [r5]
 584:boards/TMC5130_eval.c **** 		}
 3872              		.loc 1 584 4 view .LVU1391
 3873 0c82 9348     		ldr	r0, .L235
 3874              	.LVL496:
 583:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, buffer);
 3875              		.loc 1 583 13 view .LVU1392
 3876 0c84 002A     		cmp	r2, #0
 3877 0c86 08BF     		it	eq
 3878 0c88 0122     		moveq	r2, #1
 3879              	.LVL497:
 584:boards/TMC5130_eval.c **** 		}
 3880              		.loc 1 584 4 is_stmt 1 view .LVU1393
 3881              	.LBB434:
 3882              	.LBI434:
  37:boards/TMC5130_eval.c **** {
 3883              		.loc 1 37 31 view .LVU1394
  37:boards/TMC5130_eval.c **** {
 3884              		.loc 1 37 31 is_stmt 0 view .LVU1395
 3885              	.LBE434:
  39:boards/TMC5130_eval.c **** 
 3886              		.loc 1 39 2 is_stmt 1 view .LVU1396
  41:boards/TMC5130_eval.c **** }
 3887              		.loc 1 41 2 view .LVU1397
 583:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, buffer);
 3888              		.loc 1 583 13 is_stmt 0 view .LVU1398
 3889 0c8a 4FF08071 		mov	r1, #16777216
 3890              	.LVL498:
 583:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TCOOLTHRS, buffer);
 3891              		.loc 1 583 13 view .LVU1399
 3892 0c8e 91FBF2F2 		sdiv	r2, r1, r2
 3893              	.LVL499:
 584:boards/TMC5130_eval.c **** 		}
 3894              		.loc 1 584 4 view .LVU1400
 3895 0c92 A242     		cmp	r2, r4
 3896              	.LVL500:
 584:boards/TMC5130_eval.c **** 		}
 3897              		.loc 1 584 4 view .LVU1401
 3898 0c94 A8BF     		it	ge
 3899 0c96 2246     		movge	r2, r4
 3900 0c98 1421     		movs	r1, #20
 3901 0c9a FFF7FEFF 		bl	tmc5130_writeInt
 3902              	.LVL501:
 126:boards/TMC5130_eval.c **** 
 3903              		.loc 1 126 11 view .LVU1402
 3904 0c9e 0024     		movs	r4, #0
 3905 0ca0 FFF76BBB 		b	.L57
 3906              	.LVL502:
 3907              	.L72:
 589:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_RNDTF_MASK, TMC5130_RNDT
 3908              		.loc 1 589 3 is_stmt 1 view .LVU1403
 590:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3909              		.loc 1 590 13 is_stmt 0 view .LVU1404
 3910 0ca4 8A48     		ldr	r0, .L235
 3911              	.LVL503:
 590:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3912              		.loc 1 590 13 view .LVU1405
 3913 0ca6 6C21     		movs	r1, #108
 3914              	.LVL504:
 589:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_RNDTF_MASK, TMC5130_RNDT
 3915              		.loc 1 589 5 view .LVU1406
 3916 0ca8 3EB9     		cbnz	r6, .L192
 590:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3917              		.loc 1 590 4 is_stmt 1 view .LVU1407
 3918              	.LBB435:
 3919              	.LBI435:
  37:boards/TMC5130_eval.c **** {
 3920              		.loc 1 37 31 view .LVU1408
 3921              	.LVL505:
  37:boards/TMC5130_eval.c **** {
 3922              		.loc 1 37 31 is_stmt 0 view .LVU1409
 3923              	.LBE435:
  39:boards/TMC5130_eval.c **** 
 3924              		.loc 1 39 2 is_stmt 1 view .LVU1410
  41:boards/TMC5130_eval.c **** }
 3925              		.loc 1 41 2 view .LVU1411
 590:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3926              		.loc 1 590 13 is_stmt 0 view .LVU1412
 3927 0caa FFF7FEFF 		bl	tmc5130_readInt
 3928              	.LVL506:
 3929 0cae C0F34030 		ubfx	r0, r0, #13, #1
 590:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3930              		.loc 1 590 11 view .LVU1413
 3931 0cb2 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3932              		.loc 1 126 11 view .LVU1414
 3933 0cb4 3446     		mov	r4, r6
 3934 0cb6 FFF760BB 		b	.L57
 3935              	.LVL507:
 3936              	.L192:
 591:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_RNDTF_MASK, TMC5130_RNDTF_SHIFT,
 3937              		.loc 1 591 10 is_stmt 1 view .LVU1415
 592:boards/TMC5130_eval.c **** 		}
 3938              		.loc 1 592 4 view .LVU1416
 3939              	.LBB436:
 3940              	.LBI436:
  37:boards/TMC5130_eval.c **** {
 3941              		.loc 1 37 31 view .LVU1417
  37:boards/TMC5130_eval.c **** {
 3942              		.loc 1 37 31 is_stmt 0 view .LVU1418
 3943              	.LBE436:
  39:boards/TMC5130_eval.c **** 
 3944              		.loc 1 39 2 is_stmt 1 view .LVU1419
  41:boards/TMC5130_eval.c **** }
 3945              		.loc 1 41 2 view .LVU1420
 3946              	.LBB437:
 3947              	.LBI437:
  37:boards/TMC5130_eval.c **** {
 3948              		.loc 1 37 31 view .LVU1421
  37:boards/TMC5130_eval.c **** {
 3949              		.loc 1 37 31 is_stmt 0 view .LVU1422
 3950              	.LBE437:
  39:boards/TMC5130_eval.c **** 
 3951              		.loc 1 39 2 is_stmt 1 view .LVU1423
  41:boards/TMC5130_eval.c **** }
 3952              		.loc 1 41 2 view .LVU1424
 592:boards/TMC5130_eval.c **** 		}
 3953              		.loc 1 592 4 is_stmt 0 view .LVU1425
 3954 0cba FFF7FEFF 		bl	tmc5130_readInt
 3955              	.LVL508:
 3956 0cbe 2B68     		ldr	r3, [r5]
 3957 0cc0 5B03     		lsls	r3, r3, #13
 3958 0cc2 03F40053 		and	r3, r3, #8192
 3959 0cc6 20F40052 		bic	r2, r0, #8192
 3960 0cca 1A43     		orrs	r2, r2, r3
 3961 0ccc 8048     		ldr	r0, .L235
 3962 0cce 6C21     		movs	r1, #108
 3963 0cd0 FFF7FEFF 		bl	tmc5130_writeInt
 3964              	.LVL509:
 126:boards/TMC5130_eval.c **** 
 3965              		.loc 1 126 11 view .LVU1426
 3966 0cd4 0024     		movs	r4, #0
 3967 0cd6 FFF750BB 		b	.L57
 3968              	.LVL510:
 3969              	.L71:
 597:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_SYNC_MASK, TMC5130_SYNC_
 3970              		.loc 1 597 3 is_stmt 1 view .LVU1427
 598:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3971              		.loc 1 598 13 is_stmt 0 view .LVU1428
 3972 0cda 7D48     		ldr	r0, .L235
 3973              	.LVL511:
 598:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3974              		.loc 1 598 13 view .LVU1429
 3975 0cdc 6C21     		movs	r1, #108
 3976              	.LVL512:
 597:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_SYNC_MASK, TMC5130_SYNC_
 3977              		.loc 1 597 5 view .LVU1430
 3978 0cde 3EB9     		cbnz	r6, .L193
 598:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3979              		.loc 1 598 4 is_stmt 1 view .LVU1431
 3980              	.LBB438:
 3981              	.LBI438:
  37:boards/TMC5130_eval.c **** {
 3982              		.loc 1 37 31 view .LVU1432
 3983              	.LVL513:
  37:boards/TMC5130_eval.c **** {
 3984              		.loc 1 37 31 is_stmt 0 view .LVU1433
 3985              	.LBE438:
  39:boards/TMC5130_eval.c **** 
 3986              		.loc 1 39 2 is_stmt 1 view .LVU1434
  41:boards/TMC5130_eval.c **** }
 3987              		.loc 1 41 2 view .LVU1435
 598:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3988              		.loc 1 598 13 is_stmt 0 view .LVU1436
 3989 0ce0 FFF7FEFF 		bl	tmc5130_readInt
 3990              	.LVL514:
 3991 0ce4 C0F30350 		ubfx	r0, r0, #20, #4
 598:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 3992              		.loc 1 598 11 view .LVU1437
 3993 0ce8 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 3994              		.loc 1 126 11 view .LVU1438
 3995 0cea 3446     		mov	r4, r6
 3996 0cec FFF745BB 		b	.L57
 3997              	.LVL515:
 3998              	.L193:
 599:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_CHOPCONF, TMC5130_SYNC_MASK, TMC5130_SYNC_SHIFT, *
 3999              		.loc 1 599 10 is_stmt 1 view .LVU1439
 600:boards/TMC5130_eval.c **** 		}
 4000              		.loc 1 600 4 view .LVU1440
 4001              	.LBB439:
 4002              	.LBI439:
  37:boards/TMC5130_eval.c **** {
 4003              		.loc 1 37 31 view .LVU1441
  37:boards/TMC5130_eval.c **** {
 4004              		.loc 1 37 31 is_stmt 0 view .LVU1442
 4005              	.LBE439:
  39:boards/TMC5130_eval.c **** 
 4006              		.loc 1 39 2 is_stmt 1 view .LVU1443
  41:boards/TMC5130_eval.c **** }
 4007              		.loc 1 41 2 view .LVU1444
 4008              	.LBB440:
 4009              	.LBI440:
  37:boards/TMC5130_eval.c **** {
 4010              		.loc 1 37 31 view .LVU1445
  37:boards/TMC5130_eval.c **** {
 4011              		.loc 1 37 31 is_stmt 0 view .LVU1446
 4012              	.LBE440:
  39:boards/TMC5130_eval.c **** 
 4013              		.loc 1 39 2 is_stmt 1 view .LVU1447
  41:boards/TMC5130_eval.c **** }
 4014              		.loc 1 41 2 view .LVU1448
 600:boards/TMC5130_eval.c **** 		}
 4015              		.loc 1 600 4 is_stmt 0 view .LVU1449
 4016 0cf0 FFF7FEFF 		bl	tmc5130_readInt
 4017              	.LVL516:
 4018 0cf4 2B68     		ldr	r3, [r5]
 4019 0cf6 1B05     		lsls	r3, r3, #20
 4020 0cf8 03F47003 		and	r3, r3, #15728640
 4021 0cfc 20F47002 		bic	r2, r0, #15728640
 4022 0d00 1A43     		orrs	r2, r2, r3
 4023 0d02 7348     		ldr	r0, .L235
 4024 0d04 6C21     		movs	r1, #108
 4025 0d06 FFF7FEFF 		bl	tmc5130_writeInt
 4026              	.LVL517:
 126:boards/TMC5130_eval.c **** 
 4027              		.loc 1 126 11 view .LVU1450
 4028 0d0a 0024     		movs	r4, #0
 4029 0d0c FFF735BB 		b	.L57
 4030              	.LVL518:
 4031              	.L70:
 605:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_TPWMTHRS);
 4032              		.loc 1 605 3 is_stmt 1 view .LVU1451
 4033 0d10 704C     		ldr	r4, .L235+4
 605:boards/TMC5130_eval.c **** 			buffer = tmc5130_readInt(motorToIC(motor), TMC5130_TPWMTHRS);
 4034              		.loc 1 605 5 is_stmt 0 view .LVU1452
 4035 0d12 8EB9     		cbnz	r6, .L194
 606:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer : 1));
 4036              		.loc 1 606 4 is_stmt 1 view .LVU1453
 4037              	.LBB441:
 4038              	.LBI441:
  37:boards/TMC5130_eval.c **** {
 4039              		.loc 1 37 31 view .LVU1454
 4040              	.LVL519:
  37:boards/TMC5130_eval.c **** {
 4041              		.loc 1 37 31 is_stmt 0 view .LVU1455
 4042              	.LBE441:
  39:boards/TMC5130_eval.c **** 
 4043              		.loc 1 39 2 is_stmt 1 view .LVU1456
  41:boards/TMC5130_eval.c **** }
 4044              		.loc 1 41 2 view .LVU1457
 606:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer : 1));
 4045              		.loc 1 606 13 is_stmt 0 view .LVU1458
 4046 0d14 6E48     		ldr	r0, .L235
 4047              	.LVL520:
 606:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer : 1));
 4048              		.loc 1 606 13 view .LVU1459
 4049 0d16 1321     		movs	r1, #19
 4050              	.LVL521:
 606:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((buffer)? buffer : 1));
 4051              		.loc 1 606 13 view .LVU1460
 4052 0d18 FFF7FEFF 		bl	tmc5130_readInt
 4053              	.LVL522:
 607:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4054              		.loc 1 607 4 is_stmt 1 view .LVU1461
 607:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4055              		.loc 1 607 13 is_stmt 0 view .LVU1462
 4056 0d1c 0128     		cmp	r0, #1
 4057 0d1e 38BF     		it	cc
 4058 0d20 0120     		movcc	r0, #1
 4059              	.LVL523:
 607:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4060              		.loc 1 607 13 view .LVU1463
 4061 0d22 4FF08073 		mov	r3, #16777216
 4062 0d26 B3FBF0F0 		udiv	r0, r3, r0
 607:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4063              		.loc 1 607 11 view .LVU1464
 4064 0d2a A042     		cmp	r0, r4
 4065 0d2c 94BF     		ite	ls
 4066 0d2e 2860     		strls	r0, [r5]
 4067 0d30 2C60     		strhi	r4, [r5]
 126:boards/TMC5130_eval.c **** 
 4068              		.loc 1 126 11 view .LVU1465
 4069 0d32 3446     		mov	r4, r6
 4070 0d34 FFF721BB 		b	.L57
 4071              	.LVL524:
 4072              	.L194:
 608:boards/TMC5130_eval.c **** 			*value = MIN(0xFFFFF, (1<<24) / ((*value)? *value : 1));
 4073              		.loc 1 608 10 is_stmt 1 view .LVU1466
 609:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TPWMTHRS, *value);
 4074              		.loc 1 609 4 view .LVU1467
 609:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TPWMTHRS, *value);
 4075              		.loc 1 609 13 is_stmt 0 view .LVU1468
 4076 0d38 2B68     		ldr	r3, [r5]
 610:boards/TMC5130_eval.c **** 		}
 4077              		.loc 1 610 4 view .LVU1469
 4078 0d3a 6548     		ldr	r0, .L235
 4079              	.LVL525:
 609:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TPWMTHRS, *value);
 4080              		.loc 1 609 13 view .LVU1470
 4081 0d3c 002B     		cmp	r3, #0
 4082 0d3e 08BF     		it	eq
 4083 0d40 0123     		moveq	r3, #1
 4084 0d42 4FF08072 		mov	r2, #16777216
 4085 0d46 92FBF3F2 		sdiv	r2, r2, r3
 4086 0d4a A242     		cmp	r2, r4
 4087 0d4c A8BF     		it	ge
 4088 0d4e 2246     		movge	r2, r4
 609:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_TPWMTHRS, *value);
 4089              		.loc 1 609 11 view .LVU1471
 4090 0d50 2A60     		str	r2, [r5]
 610:boards/TMC5130_eval.c **** 		}
 4091              		.loc 1 610 4 is_stmt 1 view .LVU1472
 4092              	.LBB442:
 4093              	.LBI442:
  37:boards/TMC5130_eval.c **** {
 4094              		.loc 1 37 31 view .LVU1473
 4095              	.LVL526:
  37:boards/TMC5130_eval.c **** {
 4096              		.loc 1 37 31 is_stmt 0 view .LVU1474
 4097              	.LBE442:
  39:boards/TMC5130_eval.c **** 
 4098              		.loc 1 39 2 is_stmt 1 view .LVU1475
  41:boards/TMC5130_eval.c **** }
 4099              		.loc 1 41 2 view .LVU1476
 610:boards/TMC5130_eval.c **** 		}
 4100              		.loc 1 610 4 is_stmt 0 view .LVU1477
 4101 0d52 1321     		movs	r1, #19
 4102              	.LVL527:
 610:boards/TMC5130_eval.c **** 		}
 4103              		.loc 1 610 4 view .LVU1478
 4104 0d54 FFF7FEFF 		bl	tmc5130_writeInt
 4105              	.LVL528:
 126:boards/TMC5130_eval.c **** 
 4106              		.loc 1 126 11 view .LVU1479
 4107 0d58 0024     		movs	r4, #0
 4108 0d5a FFF70EBB 		b	.L57
 4109              	.LVL529:
 4110              	.L69:
 615:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_GRAD_MASK, TMC5130_PW
 4111              		.loc 1 615 3 is_stmt 1 view .LVU1480
 616:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4112              		.loc 1 616 13 is_stmt 0 view .LVU1481
 4113 0d5e 5C48     		ldr	r0, .L235
 4114              	.LVL530:
 616:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4115              		.loc 1 616 13 view .LVU1482
 4116 0d60 7021     		movs	r1, #112
 4117              	.LVL531:
 615:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_GRAD_MASK, TMC5130_PW
 4118              		.loc 1 615 5 view .LVU1483
 4119 0d62 3EB9     		cbnz	r6, .L196
 616:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4120              		.loc 1 616 4 is_stmt 1 view .LVU1484
 4121              	.LBB443:
 4122              	.LBI443:
  37:boards/TMC5130_eval.c **** {
 4123              		.loc 1 37 31 view .LVU1485
 4124              	.LVL532:
  37:boards/TMC5130_eval.c **** {
 4125              		.loc 1 37 31 is_stmt 0 view .LVU1486
 4126              	.LBE443:
  39:boards/TMC5130_eval.c **** 
 4127              		.loc 1 39 2 is_stmt 1 view .LVU1487
  41:boards/TMC5130_eval.c **** }
 4128              		.loc 1 41 2 view .LVU1488
 616:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4129              		.loc 1 616 13 is_stmt 0 view .LVU1489
 4130 0d64 FFF7FEFF 		bl	tmc5130_readInt
 4131              	.LVL533:
 4132 0d68 C0F30720 		ubfx	r0, r0, #8, #8
 616:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4133              		.loc 1 616 11 view .LVU1490
 4134 0d6c 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 4135              		.loc 1 126 11 view .LVU1491
 4136 0d6e 3446     		mov	r4, r6
 4137 0d70 FFF703BB 		b	.L57
 4138              	.LVL534:
 4139              	.L196:
 617:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_GRAD_MASK, TMC5130_PWM_GRAD_S
 4140              		.loc 1 617 10 is_stmt 1 view .LVU1492
 618:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_GCONF, TMC5130_EN_PWM_MODE_MASK, TMC5130_EN_PWM_MO
 4141              		.loc 1 618 4 view .LVU1493
 4142              	.LBB444:
 4143              	.LBI444:
  37:boards/TMC5130_eval.c **** {
 4144              		.loc 1 37 31 view .LVU1494
  37:boards/TMC5130_eval.c **** {
 4145              		.loc 1 37 31 is_stmt 0 view .LVU1495
 4146              	.LBE444:
  39:boards/TMC5130_eval.c **** 
 4147              		.loc 1 39 2 is_stmt 1 view .LVU1496
  41:boards/TMC5130_eval.c **** }
 4148              		.loc 1 41 2 view .LVU1497
 4149              	.LBB445:
 4150              	.LBI445:
  37:boards/TMC5130_eval.c **** {
 4151              		.loc 1 37 31 view .LVU1498
  37:boards/TMC5130_eval.c **** {
 4152              		.loc 1 37 31 is_stmt 0 view .LVU1499
 4153              	.LBE445:
  39:boards/TMC5130_eval.c **** 
 4154              		.loc 1 39 2 is_stmt 1 view .LVU1500
  41:boards/TMC5130_eval.c **** }
 4155              		.loc 1 41 2 view .LVU1501
 618:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_GCONF, TMC5130_EN_PWM_MODE_MASK, TMC5130_EN_PWM_MO
 4156              		.loc 1 618 4 is_stmt 0 view .LVU1502
 4157 0d74 FFF7FEFF 		bl	tmc5130_readInt
 4158              	.LVL535:
 4159 0d78 2B68     		ldr	r3, [r5]
 4160 0d7a 1B02     		lsls	r3, r3, #8
 4161 0d7c 9BB2     		uxth	r3, r3
 4162 0d7e 20F47F42 		bic	r2, r0, #65280
 4163 0d82 1A43     		orrs	r2, r2, r3
 4164 0d84 5248     		ldr	r0, .L235
 4165 0d86 7021     		movs	r1, #112
 4166 0d88 FFF7FEFF 		bl	tmc5130_writeInt
 4167              	.LVL536:
 619:boards/TMC5130_eval.c **** 		}
 4168              		.loc 1 619 4 is_stmt 1 view .LVU1503
 4169              	.LBB446:
 4170              	.LBI446:
  37:boards/TMC5130_eval.c **** {
 4171              		.loc 1 37 31 view .LVU1504
  37:boards/TMC5130_eval.c **** {
 4172              		.loc 1 37 31 is_stmt 0 view .LVU1505
 4173              	.LBE446:
  39:boards/TMC5130_eval.c **** 
 4174              		.loc 1 39 2 is_stmt 1 view .LVU1506
  41:boards/TMC5130_eval.c **** }
 4175              		.loc 1 41 2 view .LVU1507
 4176              	.LBB447:
 4177              	.LBI447:
  37:boards/TMC5130_eval.c **** {
 4178              		.loc 1 37 31 view .LVU1508
  37:boards/TMC5130_eval.c **** {
 4179              		.loc 1 37 31 is_stmt 0 view .LVU1509
 4180              	.LBE447:
  39:boards/TMC5130_eval.c **** 
 4181              		.loc 1 39 2 is_stmt 1 view .LVU1510
  41:boards/TMC5130_eval.c **** }
 4182              		.loc 1 41 2 view .LVU1511
 619:boards/TMC5130_eval.c **** 		}
 4183              		.loc 1 619 4 is_stmt 0 view .LVU1512
 4184 0d8c 0021     		movs	r1, #0
 4185 0d8e 5048     		ldr	r0, .L235
 4186 0d90 FFF7FEFF 		bl	tmc5130_readInt
 4187              	.LVL537:
 4188 0d94 2B68     		ldr	r3, [r5]
 4189 0d96 002B     		cmp	r3, #0
 4190 0d98 20F00402 		bic	r2, r0, #4
 4191 0d9c 18BF     		it	ne
 4192 0d9e 0423     		movne	r3, #4
 4193 0da0 4B48     		ldr	r0, .L235
 4194 0da2 1A43     		orrs	r2, r2, r3
 4195 0da4 0021     		movs	r1, #0
 4196 0da6 FFF7FEFF 		bl	tmc5130_writeInt
 4197              	.LVL538:
 126:boards/TMC5130_eval.c **** 
 4198              		.loc 1 126 11 view .LVU1513
 4199 0daa 0024     		movs	r4, #0
 4200 0dac FFF7E5BA 		b	.L57
 4201              	.LVL539:
 4202              	.L68:
 624:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_AMPL_MASK, TMC5130_PW
 4203              		.loc 1 624 3 is_stmt 1 view .LVU1514
 625:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4204              		.loc 1 625 13 is_stmt 0 view .LVU1515
 4205 0db0 4748     		ldr	r0, .L235
 4206              	.LVL540:
 625:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4207              		.loc 1 625 13 view .LVU1516
 4208 0db2 7021     		movs	r1, #112
 4209              	.LVL541:
 624:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_AMPL_MASK, TMC5130_PW
 4210              		.loc 1 624 5 view .LVU1517
 4211 0db4 36B9     		cbnz	r6, .L198
 625:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4212              		.loc 1 625 4 is_stmt 1 view .LVU1518
 4213              	.LBB448:
 4214              	.LBI448:
  37:boards/TMC5130_eval.c **** {
 4215              		.loc 1 37 31 view .LVU1519
 4216              	.LVL542:
  37:boards/TMC5130_eval.c **** {
 4217              		.loc 1 37 31 is_stmt 0 view .LVU1520
 4218              	.LBE448:
  39:boards/TMC5130_eval.c **** 
 4219              		.loc 1 39 2 is_stmt 1 view .LVU1521
  41:boards/TMC5130_eval.c **** }
 4220              		.loc 1 41 2 view .LVU1522
 625:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4221              		.loc 1 625 13 is_stmt 0 view .LVU1523
 4222 0db6 FFF7FEFF 		bl	tmc5130_readInt
 4223              	.LVL543:
 4224 0dba C0B2     		uxtb	r0, r0
 625:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4225              		.loc 1 625 11 view .LVU1524
 4226 0dbc 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 4227              		.loc 1 126 11 view .LVU1525
 4228 0dbe 3446     		mov	r4, r6
 4229 0dc0 FFF7DBBA 		b	.L57
 4230              	.LVL544:
 4231              	.L198:
 626:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_AMPL_MASK, TMC5130_PWM_AMPL_S
 4232              		.loc 1 626 10 is_stmt 1 view .LVU1526
 627:boards/TMC5130_eval.c **** 		}
 4233              		.loc 1 627 4 view .LVU1527
 4234              	.LBB449:
 4235              	.LBI449:
  37:boards/TMC5130_eval.c **** {
 4236              		.loc 1 37 31 view .LVU1528
  37:boards/TMC5130_eval.c **** {
 4237              		.loc 1 37 31 is_stmt 0 view .LVU1529
 4238              	.LBE449:
  39:boards/TMC5130_eval.c **** 
 4239              		.loc 1 39 2 is_stmt 1 view .LVU1530
  41:boards/TMC5130_eval.c **** }
 4240              		.loc 1 41 2 view .LVU1531
 4241              	.LBB450:
 4242              	.LBI450:
  37:boards/TMC5130_eval.c **** {
 4243              		.loc 1 37 31 view .LVU1532
  37:boards/TMC5130_eval.c **** {
 4244              		.loc 1 37 31 is_stmt 0 view .LVU1533
 4245              	.LBE450:
  39:boards/TMC5130_eval.c **** 
 4246              		.loc 1 39 2 is_stmt 1 view .LVU1534
  41:boards/TMC5130_eval.c **** }
 4247              		.loc 1 41 2 view .LVU1535
 627:boards/TMC5130_eval.c **** 		}
 4248              		.loc 1 627 4 is_stmt 0 view .LVU1536
 4249 0dc4 FFF7FEFF 		bl	tmc5130_readInt
 4250              	.LVL545:
 4251 0dc8 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4252 0dca 20F0FF00 		bic	r0, r0, #255
 4253 0dce 0243     		orrs	r2, r2, r0
 4254 0dd0 7021     		movs	r1, #112
 4255 0dd2 3F48     		ldr	r0, .L235
 4256 0dd4 FFF7FEFF 		bl	tmc5130_writeInt
 4257              	.LVL546:
 126:boards/TMC5130_eval.c **** 
 4258              		.loc 1 126 11 view .LVU1537
 4259 0dd8 0024     		movs	r4, #0
 4260 0dda FFF7CEBA 		b	.L57
 4261              	.LVL547:
 4262              	.L67:
 632:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_FREQ_MASK, TMC5130_PW
 4263              		.loc 1 632 3 is_stmt 1 view .LVU1538
 632:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_FREQ_MASK, TMC5130_PW
 4264              		.loc 1 632 5 is_stmt 0 view .LVU1539
 4265 0dde 4EB9     		cbnz	r6, .L199
 633:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4266              		.loc 1 633 4 is_stmt 1 view .LVU1540
 4267              	.LBB451:
 4268              	.LBI451:
  37:boards/TMC5130_eval.c **** {
 4269              		.loc 1 37 31 view .LVU1541
 4270              	.LVL548:
  37:boards/TMC5130_eval.c **** {
 4271              		.loc 1 37 31 is_stmt 0 view .LVU1542
 4272              	.LBE451:
  39:boards/TMC5130_eval.c **** 
 4273              		.loc 1 39 2 is_stmt 1 view .LVU1543
  41:boards/TMC5130_eval.c **** }
 4274              		.loc 1 41 2 view .LVU1544
 633:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4275              		.loc 1 633 13 is_stmt 0 view .LVU1545
 4276 0de0 3B48     		ldr	r0, .L235
 4277              	.LVL549:
 633:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4278              		.loc 1 633 13 view .LVU1546
 4279 0de2 7021     		movs	r1, #112
 4280              	.LVL550:
 633:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4281              		.loc 1 633 13 view .LVU1547
 4282 0de4 FFF7FEFF 		bl	tmc5130_readInt
 4283              	.LVL551:
 4284 0de8 C0F30140 		ubfx	r0, r0, #16, #2
 633:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4285              		.loc 1 633 11 view .LVU1548
 4286 0dec 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 4287              		.loc 1 126 11 view .LVU1549
 4288 0dee 3446     		mov	r4, r6
 4289 0df0 FFF7C3BA 		b	.L57
 4290              	.LVL552:
 4291              	.L199:
 634:boards/TMC5130_eval.c **** 			if(*value >= 0 && *value < 4)
 4292              		.loc 1 634 10 is_stmt 1 view .LVU1550
 635:boards/TMC5130_eval.c **** 			{
 4293              		.loc 1 635 4 view .LVU1551
 635:boards/TMC5130_eval.c **** 			{
 4294              		.loc 1 635 6 is_stmt 0 view .LVU1552
 4295 0df4 2B68     		ldr	r3, [r5]
 4296 0df6 032B     		cmp	r3, #3
 4297 0df8 00F29D80 		bhi	.L224
 637:boards/TMC5130_eval.c **** 			}
 4298              		.loc 1 637 5 is_stmt 1 view .LVU1553
 4299              	.LBB452:
 4300              	.LBI452:
  37:boards/TMC5130_eval.c **** {
 4301              		.loc 1 37 31 view .LVU1554
 4302              	.LVL553:
  37:boards/TMC5130_eval.c **** {
 4303              		.loc 1 37 31 is_stmt 0 view .LVU1555
 4304              	.LBE452:
  39:boards/TMC5130_eval.c **** 
 4305              		.loc 1 39 2 is_stmt 1 view .LVU1556
  41:boards/TMC5130_eval.c **** }
 4306              		.loc 1 41 2 view .LVU1557
 4307              	.LBB453:
 4308              	.LBI453:
  37:boards/TMC5130_eval.c **** {
 4309              		.loc 1 37 31 view .LVU1558
  37:boards/TMC5130_eval.c **** {
 4310              		.loc 1 37 31 is_stmt 0 view .LVU1559
 4311              	.LBE453:
  39:boards/TMC5130_eval.c **** 
 4312              		.loc 1 39 2 is_stmt 1 view .LVU1560
  41:boards/TMC5130_eval.c **** }
 4313              		.loc 1 41 2 view .LVU1561
 637:boards/TMC5130_eval.c **** 			}
 4314              		.loc 1 637 5 is_stmt 0 view .LVU1562
 4315 0dfc 7021     		movs	r1, #112
 4316              	.LVL554:
 637:boards/TMC5130_eval.c **** 			}
 4317              		.loc 1 637 5 view .LVU1563
 4318 0dfe 3448     		ldr	r0, .L235
 4319              	.LVL555:
 637:boards/TMC5130_eval.c **** 			}
 4320              		.loc 1 637 5 view .LVU1564
 4321 0e00 FFF7FEFF 		bl	tmc5130_readInt
 4322              	.LVL556:
 4323 0e04 2B68     		ldr	r3, [r5]
 4324 0e06 1B04     		lsls	r3, r3, #16
 4325 0e08 03F44033 		and	r3, r3, #196608
 4326 0e0c 20F44032 		bic	r2, r0, #196608
 4327 0e10 1A43     		orrs	r2, r2, r3
 4328 0e12 2F48     		ldr	r0, .L235
 4329 0e14 7021     		movs	r1, #112
 4330 0e16 FFF7FEFF 		bl	tmc5130_writeInt
 4331              	.LVL557:
 126:boards/TMC5130_eval.c **** 
 4332              		.loc 1 126 11 view .LVU1565
 4333 0e1a 0024     		movs	r4, #0
 4334 0e1c FFF7ADBA 		b	.L57
 4335              	.LVL558:
 4336              	.L66:
 647:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_AUTOSCALE_MASK, TMC51
 4337              		.loc 1 647 3 is_stmt 1 view .LVU1566
 647:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_PWM_AUTOSCALE_MASK, TMC51
 4338              		.loc 1 647 5 is_stmt 0 view .LVU1567
 4339 0e20 4EB9     		cbnz	r6, .L200
 648:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4340              		.loc 1 648 4 is_stmt 1 view .LVU1568
 4341              	.LBB454:
 4342              	.LBI454:
  37:boards/TMC5130_eval.c **** {
 4343              		.loc 1 37 31 view .LVU1569
 4344              	.LVL559:
  37:boards/TMC5130_eval.c **** {
 4345              		.loc 1 37 31 is_stmt 0 view .LVU1570
 4346              	.LBE454:
  39:boards/TMC5130_eval.c **** 
 4347              		.loc 1 39 2 is_stmt 1 view .LVU1571
  41:boards/TMC5130_eval.c **** }
 4348              		.loc 1 41 2 view .LVU1572
 648:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4349              		.loc 1 648 13 is_stmt 0 view .LVU1573
 4350 0e22 2B48     		ldr	r0, .L235
 4351              	.LVL560:
 648:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4352              		.loc 1 648 13 view .LVU1574
 4353 0e24 7021     		movs	r1, #112
 4354              	.LVL561:
 648:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4355              		.loc 1 648 13 view .LVU1575
 4356 0e26 FFF7FEFF 		bl	tmc5130_readInt
 4357              	.LVL562:
 4358 0e2a C0F38040 		ubfx	r0, r0, #18, #1
 648:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4359              		.loc 1 648 11 view .LVU1576
 4360 0e2e 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 4361              		.loc 1 126 11 view .LVU1577
 4362 0e30 3446     		mov	r4, r6
 4363 0e32 FFF7A2BA 		b	.L57
 4364              	.LVL563:
 4365              	.L200:
 649:boards/TMC5130_eval.c **** 			if(*value >= 0 && *value < 2)
 4366              		.loc 1 649 10 is_stmt 1 view .LVU1578
 650:boards/TMC5130_eval.c **** 			{
 4367              		.loc 1 650 4 view .LVU1579
 650:boards/TMC5130_eval.c **** 			{
 4368              		.loc 1 650 6 is_stmt 0 view .LVU1580
 4369 0e36 2B68     		ldr	r3, [r5]
 4370 0e38 012B     		cmp	r3, #1
 4371 0e3a 7FD8     		bhi	.L225
 652:boards/TMC5130_eval.c **** 			}
 4372              		.loc 1 652 5 is_stmt 1 view .LVU1581
 4373              	.LBB455:
 4374              	.LBI455:
  37:boards/TMC5130_eval.c **** {
 4375              		.loc 1 37 31 view .LVU1582
 4376              	.LVL564:
  37:boards/TMC5130_eval.c **** {
 4377              		.loc 1 37 31 is_stmt 0 view .LVU1583
 4378              	.LBE455:
  39:boards/TMC5130_eval.c **** 
 4379              		.loc 1 39 2 is_stmt 1 view .LVU1584
  41:boards/TMC5130_eval.c **** }
 4380              		.loc 1 41 2 view .LVU1585
 4381              	.LBB456:
 4382              	.LBI456:
  37:boards/TMC5130_eval.c **** {
 4383              		.loc 1 37 31 view .LVU1586
  37:boards/TMC5130_eval.c **** {
 4384              		.loc 1 37 31 is_stmt 0 view .LVU1587
 4385              	.LBE456:
  39:boards/TMC5130_eval.c **** 
 4386              		.loc 1 39 2 is_stmt 1 view .LVU1588
  41:boards/TMC5130_eval.c **** }
 4387              		.loc 1 41 2 view .LVU1589
 652:boards/TMC5130_eval.c **** 			}
 4388              		.loc 1 652 5 is_stmt 0 view .LVU1590
 4389 0e3c 7021     		movs	r1, #112
 4390              	.LVL565:
 652:boards/TMC5130_eval.c **** 			}
 4391              		.loc 1 652 5 view .LVU1591
 4392 0e3e 2448     		ldr	r0, .L235
 4393              	.LVL566:
 652:boards/TMC5130_eval.c **** 			}
 4394              		.loc 1 652 5 view .LVU1592
 4395 0e40 FFF7FEFF 		bl	tmc5130_readInt
 4396              	.LVL567:
 4397 0e44 2B68     		ldr	r3, [r5]
 4398 0e46 9B04     		lsls	r3, r3, #18
 4399 0e48 03F48023 		and	r3, r3, #262144
 4400 0e4c 20F48022 		bic	r2, r0, #262144
 4401 0e50 1A43     		orrs	r2, r2, r3
 4402 0e52 1F48     		ldr	r0, .L235
 4403 0e54 7021     		movs	r1, #112
 4404 0e56 FFF7FEFF 		bl	tmc5130_writeInt
 4405              	.LVL568:
 126:boards/TMC5130_eval.c **** 
 4406              		.loc 1 126 11 view .LVU1593
 4407 0e5a 0024     		movs	r4, #0
 4408 0e5c FFF78DBA 		b	.L57
 4409              	.LVL569:
 4410              	.L65:
 662:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_FREEWHEEL_MASK, TMC5130_F
 4411              		.loc 1 662 3 is_stmt 1 view .LVU1594
 663:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4412              		.loc 1 663 13 is_stmt 0 view .LVU1595
 4413 0e60 1B48     		ldr	r0, .L235
 4414              	.LVL570:
 663:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4415              		.loc 1 663 13 view .LVU1596
 4416 0e62 7021     		movs	r1, #112
 4417              	.LVL571:
 662:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_PWMCONF, TMC5130_FREEWHEEL_MASK, TMC5130_F
 4418              		.loc 1 662 5 view .LVU1597
 4419 0e64 3EB9     		cbnz	r6, .L201
 663:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4420              		.loc 1 663 4 is_stmt 1 view .LVU1598
 4421              	.LBB457:
 4422              	.LBI457:
  37:boards/TMC5130_eval.c **** {
 4423              		.loc 1 37 31 view .LVU1599
 4424              	.LVL572:
  37:boards/TMC5130_eval.c **** {
 4425              		.loc 1 37 31 is_stmt 0 view .LVU1600
 4426              	.LBE457:
  39:boards/TMC5130_eval.c **** 
 4427              		.loc 1 39 2 is_stmt 1 view .LVU1601
  41:boards/TMC5130_eval.c **** }
 4428              		.loc 1 41 2 view .LVU1602
 663:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4429              		.loc 1 663 13 is_stmt 0 view .LVU1603
 4430 0e66 FFF7FEFF 		bl	tmc5130_readInt
 4431              	.LVL573:
 4432 0e6a C0F30150 		ubfx	r0, r0, #20, #2
 663:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4433              		.loc 1 663 11 view .LVU1604
 4434 0e6e 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 4435              		.loc 1 126 11 view .LVU1605
 4436 0e70 3446     		mov	r4, r6
 4437 0e72 FFF782BA 		b	.L57
 4438              	.LVL574:
 4439              	.L201:
 664:boards/TMC5130_eval.c **** 			TMC5130_FIELD_WRITE(motorToIC(motor), TMC5130_PWMCONF, TMC5130_FREEWHEEL_MASK, TMC5130_FREEWHEEL
 4440              		.loc 1 664 10 is_stmt 1 view .LVU1606
 665:boards/TMC5130_eval.c **** 		}
 4441              		.loc 1 665 4 view .LVU1607
 4442              	.LBB458:
 4443              	.LBI458:
  37:boards/TMC5130_eval.c **** {
 4444              		.loc 1 37 31 view .LVU1608
  37:boards/TMC5130_eval.c **** {
 4445              		.loc 1 37 31 is_stmt 0 view .LVU1609
 4446              	.LBE458:
  39:boards/TMC5130_eval.c **** 
 4447              		.loc 1 39 2 is_stmt 1 view .LVU1610
  41:boards/TMC5130_eval.c **** }
 4448              		.loc 1 41 2 view .LVU1611
 4449              	.LBB459:
 4450              	.LBI459:
  37:boards/TMC5130_eval.c **** {
 4451              		.loc 1 37 31 view .LVU1612
  37:boards/TMC5130_eval.c **** {
 4452              		.loc 1 37 31 is_stmt 0 view .LVU1613
 4453              	.LBE459:
  39:boards/TMC5130_eval.c **** 
 4454              		.loc 1 39 2 is_stmt 1 view .LVU1614
  41:boards/TMC5130_eval.c **** }
 4455              		.loc 1 41 2 view .LVU1615
 665:boards/TMC5130_eval.c **** 		}
 4456              		.loc 1 665 4 is_stmt 0 view .LVU1616
 4457 0e76 FFF7FEFF 		bl	tmc5130_readInt
 4458              	.LVL575:
 4459 0e7a 2B68     		ldr	r3, [r5]
 4460 0e7c 1B05     		lsls	r3, r3, #20
 4461 0e7e 03F44013 		and	r3, r3, #3145728
 4462 0e82 20F44012 		bic	r2, r0, #3145728
 4463 0e86 1A43     		orrs	r2, r2, r3
 4464 0e88 1148     		ldr	r0, .L235
 4465 0e8a 7021     		movs	r1, #112
 4466 0e8c FFF7FEFF 		bl	tmc5130_writeInt
 4467              	.LVL576:
 126:boards/TMC5130_eval.c **** 
 4468              		.loc 1 126 11 view .LVU1617
 4469 0e90 0024     		movs	r4, #0
 4470 0e92 FFF772BA 		b	.L57
 4471              	.LVL577:
 4472              	.L64:
 670:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_DRVSTATUS, TMC5130_SG_RESULT_MASK, TMC5130
 4473              		.loc 1 670 3 is_stmt 1 view .LVU1618
 670:boards/TMC5130_eval.c **** 			*value = TMC5130_FIELD_READ(motorToIC(motor), TMC5130_DRVSTATUS, TMC5130_SG_RESULT_MASK, TMC5130
 4474              		.loc 1 670 5 is_stmt 0 view .LVU1619
 4475 0e96 002E     		cmp	r6, #0
 4476 0e98 53D1     		bne	.L226
 671:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4477              		.loc 1 671 4 is_stmt 1 view .LVU1620
 4478              	.LBB460:
 4479              	.LBI460:
  37:boards/TMC5130_eval.c **** {
 4480              		.loc 1 37 31 view .LVU1621
 4481              	.LVL578:
  37:boards/TMC5130_eval.c **** {
 4482              		.loc 1 37 31 is_stmt 0 view .LVU1622
 4483              	.LBE460:
  39:boards/TMC5130_eval.c **** 
 4484              		.loc 1 39 2 is_stmt 1 view .LVU1623
  41:boards/TMC5130_eval.c **** }
 4485              		.loc 1 41 2 view .LVU1624
 671:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4486              		.loc 1 671 13 is_stmt 0 view .LVU1625
 4487 0e9a 0D48     		ldr	r0, .L235
 4488              	.LVL579:
 671:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4489              		.loc 1 671 13 view .LVU1626
 4490 0e9c 6F21     		movs	r1, #111
 4491              	.LVL580:
 671:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4492              		.loc 1 671 13 view .LVU1627
 4493 0e9e FFF7FEFF 		bl	tmc5130_readInt
 4494              	.LVL581:
 4495 0ea2 C0F30900 		ubfx	r0, r0, #0, #10
 671:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4496              		.loc 1 671 11 view .LVU1628
 4497 0ea6 2860     		str	r0, [r5]
 126:boards/TMC5130_eval.c **** 
 4498              		.loc 1 126 11 view .LVU1629
 4499 0ea8 3446     		mov	r4, r6
 4500 0eaa FFF766BA 		b	.L57
 4501              	.LVL582:
 4502              	.L63:
 678:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_XENC);
 4503              		.loc 1 678 3 is_stmt 1 view .LVU1630
 678:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_XENC);
 4504              		.loc 1 678 5 is_stmt 0 view .LVU1631
 4505 0eae 3EB9     		cbnz	r6, .L202
 679:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4506              		.loc 1 679 4 is_stmt 1 view .LVU1632
 4507              	.LBB461:
 4508              	.LBI461:
  37:boards/TMC5130_eval.c **** {
 4509              		.loc 1 37 31 view .LVU1633
 4510              	.LVL583:
  37:boards/TMC5130_eval.c **** {
 4511              		.loc 1 37 31 is_stmt 0 view .LVU1634
 4512              	.LBE461:
  39:boards/TMC5130_eval.c **** 
 4513              		.loc 1 39 2 is_stmt 1 view .LVU1635
  41:boards/TMC5130_eval.c **** }
 4514              		.loc 1 41 2 view .LVU1636
 679:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4515              		.loc 1 679 13 is_stmt 0 view .LVU1637
 4516 0eb0 0748     		ldr	r0, .L235
 4517              	.LVL584:
 679:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4518              		.loc 1 679 13 view .LVU1638
 4519 0eb2 3921     		movs	r1, #57
 4520              	.LVL585:
 679:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4521              		.loc 1 679 13 view .LVU1639
 4522 0eb4 FFF7FEFF 		bl	tmc5130_readInt
 4523              	.LVL586:
 126:boards/TMC5130_eval.c **** 
 4524              		.loc 1 126 11 view .LVU1640
 4525 0eb8 3446     		mov	r4, r6
 679:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4526              		.loc 1 679 11 view .LVU1641
 4527 0eba 2860     		str	r0, [r5]
 4528 0ebc FFF75DBA 		b	.L57
 4529              	.LVL587:
 4530              	.L202:
 680:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_XENC, *value);
 4531              		.loc 1 680 10 is_stmt 1 view .LVU1642
 681:boards/TMC5130_eval.c **** 		}
 4532              		.loc 1 681 4 view .LVU1643
 4533              	.LBB462:
 4534              	.LBI462:
  37:boards/TMC5130_eval.c **** {
 4535              		.loc 1 37 31 view .LVU1644
  37:boards/TMC5130_eval.c **** {
 4536              		.loc 1 37 31 is_stmt 0 view .LVU1645
 4537              	.LBE462:
  39:boards/TMC5130_eval.c **** 
 4538              		.loc 1 39 2 is_stmt 1 view .LVU1646
  41:boards/TMC5130_eval.c **** }
 4539              		.loc 1 41 2 view .LVU1647
 681:boards/TMC5130_eval.c **** 		}
 4540              		.loc 1 681 4 is_stmt 0 view .LVU1648
 4541 0ec0 2A68     		ldr	r2, [r5]
 4542 0ec2 0348     		ldr	r0, .L235
 4543              	.LVL588:
 681:boards/TMC5130_eval.c **** 		}
 4544              		.loc 1 681 4 view .LVU1649
 4545 0ec4 3921     		movs	r1, #57
 4546              	.LVL589:
 681:boards/TMC5130_eval.c **** 		}
 4547              		.loc 1 681 4 view .LVU1650
 4548 0ec6 FFF7FEFF 		bl	tmc5130_writeInt
 4549              	.LVL590:
 126:boards/TMC5130_eval.c **** 
 4550              		.loc 1 126 11 view .LVU1651
 4551 0eca 0024     		movs	r4, #0
 4552 0ecc FFF755BA 		b	.L57
 4553              	.L236:
 4554              		.align	2
 4555              	.L235:
 4556 0ed0 00000000 		.word	.LANCHOR0
 4557 0ed4 FFFF0F00 		.word	1048575
 4558              	.LVL591:
 4559              	.L61:
 686:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_ENC_CONST);
 4560              		.loc 1 686 3 is_stmt 1 view .LVU1652
 686:boards/TMC5130_eval.c **** 			*value = tmc5130_readInt(motorToIC(motor), TMC5130_ENC_CONST);
 4561              		.loc 1 686 5 is_stmt 0 view .LVU1653
 4562 0ed8 3EB9     		cbnz	r6, .L203
 687:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4563              		.loc 1 687 4 is_stmt 1 view .LVU1654
 4564              	.LBB463:
 4565              	.LBI463:
  37:boards/TMC5130_eval.c **** {
 4566              		.loc 1 37 31 view .LVU1655
 4567              	.LVL592:
  37:boards/TMC5130_eval.c **** {
 4568              		.loc 1 37 31 is_stmt 0 view .LVU1656
 4569              	.LBE463:
  39:boards/TMC5130_eval.c **** 
 4570              		.loc 1 39 2 is_stmt 1 view .LVU1657
  41:boards/TMC5130_eval.c **** }
 4571              		.loc 1 41 2 view .LVU1658
 687:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4572              		.loc 1 687 13 is_stmt 0 view .LVU1659
 4573 0eda 1B48     		ldr	r0, .L237
 4574              	.LVL593:
 687:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4575              		.loc 1 687 13 view .LVU1660
 4576 0edc 3A21     		movs	r1, #58
 4577              	.LVL594:
 687:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4578              		.loc 1 687 13 view .LVU1661
 4579 0ede FFF7FEFF 		bl	tmc5130_readInt
 4580              	.LVL595:
 126:boards/TMC5130_eval.c **** 
 4581              		.loc 1 126 11 view .LVU1662
 4582 0ee2 3446     		mov	r4, r6
 687:boards/TMC5130_eval.c **** 		} else if(readWrite == WRITE) {
 4583              		.loc 1 687 11 view .LVU1663
 4584 0ee4 2860     		str	r0, [r5]
 4585 0ee6 FFF748BA 		b	.L57
 4586              	.LVL596:
 4587              	.L203:
 688:boards/TMC5130_eval.c **** 			tmc5130_writeInt(motorToIC(motor), TMC5130_ENC_CONST, *value);
 4588              		.loc 1 688 10 is_stmt 1 view .LVU1664
 689:boards/TMC5130_eval.c **** 		}
 4589              		.loc 1 689 4 view .LVU1665
 4590              	.LBB464:
 4591              	.LBI464:
  37:boards/TMC5130_eval.c **** {
 4592              		.loc 1 37 31 view .LVU1666
  37:boards/TMC5130_eval.c **** {
 4593              		.loc 1 37 31 is_stmt 0 view .LVU1667
 4594              	.LBE464:
  39:boards/TMC5130_eval.c **** 
 4595              		.loc 1 39 2 is_stmt 1 view .LVU1668
  41:boards/TMC5130_eval.c **** }
 4596              		.loc 1 41 2 view .LVU1669
 689:boards/TMC5130_eval.c **** 		}
 4597              		.loc 1 689 4 is_stmt 0 view .LVU1670
 4598 0eea 2A68     		ldr	r2, [r5]
 4599 0eec 1648     		ldr	r0, .L237
 4600              	.LVL597:
 689:boards/TMC5130_eval.c **** 		}
 4601              		.loc 1 689 4 view .LVU1671
 4602 0eee 3A21     		movs	r1, #58
 4603              	.LVL598:
 689:boards/TMC5130_eval.c **** 		}
 4604              		.loc 1 689 4 view .LVU1672
 4605 0ef0 FFF7FEFF 		bl	tmc5130_writeInt
 4606              	.LVL599:
 126:boards/TMC5130_eval.c **** 
 4607              		.loc 1 126 11 view .LVU1673
 4608 0ef4 0024     		movs	r4, #0
 4609 0ef6 FFF740BA 		b	.L57
 4610              	.LVL600:
 4611              	.L204:
 129:boards/TMC5130_eval.c **** 
 4612              		.loc 1 129 10 view .LVU1674
 4613 0efa 0824     		movs	r4, #8
 4614 0efc FFF73DBA 		b	.L57
 4615              	.LVL601:
 4616              	.L205:
 131:boards/TMC5130_eval.c **** 	{
 4617              		.loc 1 131 2 view .LVU1675
 4618 0f00 0424     		movs	r4, #4
 4619 0f02 FFF73ABA 		b	.L57
 4620              	.LVL602:
 4621              	.L206:
 131:boards/TMC5130_eval.c **** 	{
 4622              		.loc 1 131 2 view .LVU1676
 4623 0f06 0424     		movs	r4, #4
 4624 0f08 FFF737BA 		b	.L57
 4625              	.L207:
 163:boards/TMC5130_eval.c **** 		}
 4626              		.loc 1 163 11 view .LVU1677
 4627 0f0c 0424     		movs	r4, #4
 4628 0f0e FFF734BA 		b	.L57
 4629              	.LVL603:
 4630              	.L209:
 126:boards/TMC5130_eval.c **** 
 4631              		.loc 1 126 11 view .LVU1678
 4632 0f12 0024     		movs	r4, #0
 4633 0f14 FFF731BA 		b	.L57
 4634              	.LVL604:
 4635              	.L210:
 163:boards/TMC5130_eval.c **** 		}
 4636              		.loc 1 163 11 view .LVU1679
 4637 0f18 0424     		movs	r4, #4
 4638 0f1a FFF72EBA 		b	.L57
 4639              	.L211:
 4640 0f1e 0424     		movs	r4, #4
 4641 0f20 FFF72BBA 		b	.L57
 4642              	.L212:
 4643 0f24 0424     		movs	r4, #4
 4644 0f26 FFF728BA 		b	.L57
 4645              	.L214:
 4646 0f2a 0424     		movs	r4, #4
 4647 0f2c FFF725BA 		b	.L57
 4648              	.LVL605:
 4649              	.L218:
 163:boards/TMC5130_eval.c **** 		}
 4650              		.loc 1 163 11 view .LVU1680
 4651 0f30 0424     		movs	r4, #4
 4652 0f32 FFF722BA 		b	.L57
 4653              	.L224:
 641:boards/TMC5130_eval.c **** 			}
 4654              		.loc 1 641 12 view .LVU1681
 4655 0f36 1024     		movs	r4, #16
 4656 0f38 FFF71FBA 		b	.L57
 4657              	.L225:
 641:boards/TMC5130_eval.c **** 			}
 4658              		.loc 1 641 12 view .LVU1682
 4659 0f3c 1024     		movs	r4, #16
 4660 0f3e FFF71CBA 		b	.L57
 4661              	.L226:
 163:boards/TMC5130_eval.c **** 		}
 4662              		.loc 1 163 11 view .LVU1683
 4663 0f42 0424     		movs	r4, #4
 4664              	.LVL606:
 163:boards/TMC5130_eval.c **** 		}
 4665              		.loc 1 163 11 view .LVU1684
 4666 0f44 FFF719BA 		b	.L57
 4667              	.L238:
 4668              		.align	2
 4669              	.L237:
 4670 0f48 00000000 		.word	.LANCHOR0
 4671              		.cfi_endproc
 4672              	.LFE10:
 4674              		.align	1
 4675              		.syntax unified
 4676              		.thumb
 4677              		.thumb_func
 4678              		.fpu softvfp
 4680              	SAP:
 4681              	.LVL607:
 4682              	.LFB11:
 700:boards/TMC5130_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 4683              		.loc 1 700 1 is_stmt 1 view -0
 4684              		.cfi_startproc
 4685              		@ args = 0, pretend = 0, frame = 8
 4686              		@ frame_needed = 0, uses_anonymous_args = 0
 701:boards/TMC5130_eval.c **** }
 4687              		.loc 1 701 2 view .LVU1686
 700:boards/TMC5130_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 4688              		.loc 1 700 1 is_stmt 0 view .LVU1687
 4689 0f4c 07B5     		push	{r0, r1, r2, lr}
 4690              	.LCFI5:
 4691              		.cfi_def_cfa_offset 16
 4692              		.cfi_offset 14, -4
 700:boards/TMC5130_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 4693              		.loc 1 700 1 view .LVU1688
 4694 0f4e 0192     		str	r2, [sp, #4]
 701:boards/TMC5130_eval.c **** }
 4695              		.loc 1 701 9 view .LVU1689
 4696 0f50 01AB     		add	r3, sp, #4
 4697 0f52 0246     		mov	r2, r0
 4698              	.LVL608:
 701:boards/TMC5130_eval.c **** }
 4699              		.loc 1 701 9 view .LVU1690
 4700 0f54 0120     		movs	r0, #1
 4701              	.LVL609:
 701:boards/TMC5130_eval.c **** }
 4702              		.loc 1 701 9 view .LVU1691
 4703 0f56 FFF78DF9 		bl	handleParameter
 4704              	.LVL610:
 702:boards/TMC5130_eval.c **** 
 4705              		.loc 1 702 1 view .LVU1692
 4706 0f5a 03B0     		add	sp, sp, #12
 4707              	.LCFI6:
 4708              		.cfi_def_cfa_offset 4
 4709              		@ sp needed
 4710 0f5c 5DF804FB 		ldr	pc, [sp], #4
 4711              		.cfi_endproc
 4712              	.LFE11:
 4714              		.align	1
 4715              		.syntax unified
 4716              		.thumb
 4717              		.thumb_func
 4718              		.fpu softvfp
 4720              	GAP:
 4721              	.LVL611:
 4722              	.LFB12:
 705:boards/TMC5130_eval.c **** 	return handleParameter(READ, motor, type, value);
 4723              		.loc 1 705 1 is_stmt 1 view -0
 4724              		.cfi_startproc
 4725              		@ args = 0, pretend = 0, frame = 0
 4726              		@ frame_needed = 0, uses_anonymous_args = 0
 4727              		@ link register save eliminated.
 706:boards/TMC5130_eval.c **** }
 4728              		.loc 1 706 2 view .LVU1694
 705:boards/TMC5130_eval.c **** 	return handleParameter(READ, motor, type, value);
 4729              		.loc 1 705 1 is_stmt 0 view .LVU1695
 4730 0f60 1346     		mov	r3, r2
 706:boards/TMC5130_eval.c **** }
 4731              		.loc 1 706 9 view .LVU1696
 4732 0f62 0246     		mov	r2, r0
 4733              	.LVL612:
 706:boards/TMC5130_eval.c **** }
 4734              		.loc 1 706 9 view .LVU1697
 4735 0f64 0020     		movs	r0, #0
 4736              	.LVL613:
 706:boards/TMC5130_eval.c **** }
 4737              		.loc 1 706 9 view .LVU1698
 4738 0f66 FFF785B9 		b	handleParameter
 4739              	.LVL614:
 706:boards/TMC5130_eval.c **** }
 4740              		.loc 1 706 9 view .LVU1699
 4741              		.cfi_endproc
 4742              	.LFE12:
 4744              		.align	1
 4745              		.syntax unified
 4746              		.thumb
 4747              		.thumb_func
 4748              		.fpu softvfp
 4750              	moveBy:
 4751              	.LVL615:
 4752              	.LFB9:
 116:boards/TMC5130_eval.c **** 	tmc5130_moveBy(motorToIC(motor), ticks, vmax_position);
 4753              		.loc 1 116 1 is_stmt 1 view -0
 4754              		.cfi_startproc
 4755              		@ args = 0, pretend = 0, frame = 0
 4756              		@ frame_needed = 0, uses_anonymous_args = 0
 117:boards/TMC5130_eval.c **** 
 4757              		.loc 1 117 2 view .LVU1701
 4758              	.LBB465:
 4759              	.LBI465:
  37:boards/TMC5130_eval.c **** {
 4760              		.loc 1 37 31 view .LVU1702
  37:boards/TMC5130_eval.c **** {
 4761              		.loc 1 37 31 is_stmt 0 view .LVU1703
 4762              	.LBE465:
  39:boards/TMC5130_eval.c **** 
 4763              		.loc 1 39 2 is_stmt 1 view .LVU1704
  41:boards/TMC5130_eval.c **** }
 4764              		.loc 1 41 2 view .LVU1705
 116:boards/TMC5130_eval.c **** 	tmc5130_moveBy(motorToIC(motor), ticks, vmax_position);
 4765              		.loc 1 116 1 is_stmt 0 view .LVU1706
 4766 0f6a 08B5     		push	{r3, lr}
 4767              	.LCFI7:
 4768              		.cfi_def_cfa_offset 8
 4769              		.cfi_offset 3, -8
 4770              		.cfi_offset 14, -4
 117:boards/TMC5130_eval.c **** 
 4771              		.loc 1 117 2 view .LVU1707
 4772 0f6c 0348     		ldr	r0, .L242
 4773              	.LVL616:
 117:boards/TMC5130_eval.c **** 
 4774              		.loc 1 117 2 view .LVU1708
 4775 0f6e D0F8BC22 		ldr	r2, [r0, #700]
 4776 0f72 FFF7FEFF 		bl	tmc5130_moveBy
 4777              	.LVL617:
 119:boards/TMC5130_eval.c **** }
 4778              		.loc 1 119 2 is_stmt 1 view .LVU1709
 120:boards/TMC5130_eval.c **** // <= Functions forwarded to API
 4779              		.loc 1 120 1 is_stmt 0 view .LVU1710
 4780 0f76 0020     		movs	r0, #0
 4781 0f78 08BD     		pop	{r3, pc}
 4782              	.L243:
 4783 0f7a 00BF     		.align	2
 4784              	.L242:
 4785 0f7c 00000000 		.word	.LANCHOR0
 4786              		.cfi_endproc
 4787              	.LFE9:
 4789              		.align	1
 4790              		.syntax unified
 4791              		.thumb
 4792              		.thumb_func
 4793              		.fpu softvfp
 4795              	moveTo:
 4796              	.LVL618:
 4797              	.LFB8:
 109:boards/TMC5130_eval.c **** 	tmc5130_moveTo(motorToIC(motor), position, vmax_position);
 4798              		.loc 1 109 1 is_stmt 1 view -0
 4799              		.cfi_startproc
 4800              		@ args = 0, pretend = 0, frame = 0
 4801              		@ frame_needed = 0, uses_anonymous_args = 0
 110:boards/TMC5130_eval.c **** 
 4802              		.loc 1 110 2 view .LVU1712
 4803              	.LBB466:
 4804              	.LBI466:
  37:boards/TMC5130_eval.c **** {
 4805              		.loc 1 37 31 view .LVU1713
  37:boards/TMC5130_eval.c **** {
 4806              		.loc 1 37 31 is_stmt 0 view .LVU1714
 4807              	.LBE466:
  39:boards/TMC5130_eval.c **** 
 4808              		.loc 1 39 2 is_stmt 1 view .LVU1715
  41:boards/TMC5130_eval.c **** }
 4809              		.loc 1 41 2 view .LVU1716
 109:boards/TMC5130_eval.c **** 	tmc5130_moveTo(motorToIC(motor), position, vmax_position);
 4810              		.loc 1 109 1 is_stmt 0 view .LVU1717
 4811 0f80 08B5     		push	{r3, lr}
 4812              	.LCFI8:
 4813              		.cfi_def_cfa_offset 8
 4814              		.cfi_offset 3, -8
 4815              		.cfi_offset 14, -4
 110:boards/TMC5130_eval.c **** 
 4816              		.loc 1 110 2 view .LVU1718
 4817 0f82 0348     		ldr	r0, .L245
 4818              	.LVL619:
 110:boards/TMC5130_eval.c **** 
 4819              		.loc 1 110 2 view .LVU1719
 4820 0f84 D0F8BC22 		ldr	r2, [r0, #700]
 4821 0f88 FFF7FEFF 		bl	tmc5130_moveTo
 4822              	.LVL620:
 112:boards/TMC5130_eval.c **** }
 4823              		.loc 1 112 2 is_stmt 1 view .LVU1720
 113:boards/TMC5130_eval.c **** 
 4824              		.loc 1 113 1 is_stmt 0 view .LVU1721
 4825 0f8c 0020     		movs	r0, #0
 4826 0f8e 08BD     		pop	{r3, pc}
 4827              	.L246:
 4828              		.align	2
 4829              	.L245:
 4830 0f90 00000000 		.word	.LANCHOR0
 4831              		.cfi_endproc
 4832              	.LFE8:
 4834              		.align	1
 4835              		.syntax unified
 4836              		.thumb
 4837              		.thumb_func
 4838              		.fpu softvfp
 4840              	stop:
 4841              	.LVL621:
 4842              	.LFB7:
 102:boards/TMC5130_eval.c **** 	tmc5130_stop(motorToIC(motor));
 4843              		.loc 1 102 1 is_stmt 1 view -0
 4844              		.cfi_startproc
 4845              		@ args = 0, pretend = 0, frame = 0
 4846              		@ frame_needed = 0, uses_anonymous_args = 0
 103:boards/TMC5130_eval.c **** 
 4847              		.loc 1 103 2 view .LVU1723
 4848              	.LBB467:
 4849              	.LBI467:
  37:boards/TMC5130_eval.c **** {
 4850              		.loc 1 37 31 view .LVU1724
  37:boards/TMC5130_eval.c **** {
 4851              		.loc 1 37 31 is_stmt 0 view .LVU1725
 4852              	.LBE467:
  39:boards/TMC5130_eval.c **** 
 4853              		.loc 1 39 2 is_stmt 1 view .LVU1726
  41:boards/TMC5130_eval.c **** }
 4854              		.loc 1 41 2 view .LVU1727
 102:boards/TMC5130_eval.c **** 	tmc5130_stop(motorToIC(motor));
 4855              		.loc 1 102 1 is_stmt 0 view .LVU1728
 4856 0f94 08B5     		push	{r3, lr}
 4857              	.LCFI9:
 4858              		.cfi_def_cfa_offset 8
 4859              		.cfi_offset 3, -8
 4860              		.cfi_offset 14, -4
 103:boards/TMC5130_eval.c **** 
 4861              		.loc 1 103 2 view .LVU1729
 4862 0f96 0248     		ldr	r0, .L248
 4863              	.LVL622:
 103:boards/TMC5130_eval.c **** 
 4864              		.loc 1 103 2 view .LVU1730
 4865 0f98 FFF7FEFF 		bl	tmc5130_stop
 4866              	.LVL623:
 105:boards/TMC5130_eval.c **** }
 4867              		.loc 1 105 2 is_stmt 1 view .LVU1731
 106:boards/TMC5130_eval.c **** 
 4868              		.loc 1 106 1 is_stmt 0 view .LVU1732
 4869 0f9c 0020     		movs	r0, #0
 4870 0f9e 08BD     		pop	{r3, pc}
 4871              	.L249:
 4872              		.align	2
 4873              	.L248:
 4874 0fa0 00000000 		.word	.LANCHOR0
 4875              		.cfi_endproc
 4876              	.LFE7:
 4878              		.align	1
 4879              		.syntax unified
 4880              		.thumb
 4881              		.thumb_func
 4882              		.fpu softvfp
 4884              	left:
 4885              	.LVL624:
 4886              	.LFB6:
  95:boards/TMC5130_eval.c **** 	tmc5130_left(motorToIC(motor), velocity);
 4887              		.loc 1 95 1 is_stmt 1 view -0
 4888              		.cfi_startproc
 4889              		@ args = 0, pretend = 0, frame = 0
 4890              		@ frame_needed = 0, uses_anonymous_args = 0
  96:boards/TMC5130_eval.c **** 
 4891              		.loc 1 96 2 view .LVU1734
 4892              	.LBB468:
 4893              	.LBI468:
  37:boards/TMC5130_eval.c **** {
 4894              		.loc 1 37 31 view .LVU1735
  37:boards/TMC5130_eval.c **** {
 4895              		.loc 1 37 31 is_stmt 0 view .LVU1736
 4896              	.LBE468:
  39:boards/TMC5130_eval.c **** 
 4897              		.loc 1 39 2 is_stmt 1 view .LVU1737
  41:boards/TMC5130_eval.c **** }
 4898              		.loc 1 41 2 view .LVU1738
  95:boards/TMC5130_eval.c **** 	tmc5130_left(motorToIC(motor), velocity);
 4899              		.loc 1 95 1 is_stmt 0 view .LVU1739
 4900 0fa4 08B5     		push	{r3, lr}
 4901              	.LCFI10:
 4902              		.cfi_def_cfa_offset 8
 4903              		.cfi_offset 3, -8
 4904              		.cfi_offset 14, -4
  96:boards/TMC5130_eval.c **** 
 4905              		.loc 1 96 2 view .LVU1740
 4906 0fa6 0248     		ldr	r0, .L251
 4907              	.LVL625:
  96:boards/TMC5130_eval.c **** 
 4908              		.loc 1 96 2 view .LVU1741
 4909 0fa8 FFF7FEFF 		bl	tmc5130_left
 4910              	.LVL626:
  98:boards/TMC5130_eval.c **** }
 4911              		.loc 1 98 2 is_stmt 1 view .LVU1742
  99:boards/TMC5130_eval.c **** 
 4912              		.loc 1 99 1 is_stmt 0 view .LVU1743
 4913 0fac 0020     		movs	r0, #0
 4914 0fae 08BD     		pop	{r3, pc}
 4915              	.L252:
 4916              		.align	2
 4917              	.L251:
 4918 0fb0 00000000 		.word	.LANCHOR0
 4919              		.cfi_endproc
 4920              	.LFE6:
 4922              		.align	1
 4923              		.syntax unified
 4924              		.thumb
 4925              		.thumb_func
 4926              		.fpu softvfp
 4928              	right:
 4929              	.LVL627:
 4930              	.LFB5:
  88:boards/TMC5130_eval.c **** 	tmc5130_right(motorToIC(motor), velocity);
 4931              		.loc 1 88 1 is_stmt 1 view -0
 4932              		.cfi_startproc
 4933              		@ args = 0, pretend = 0, frame = 0
 4934              		@ frame_needed = 0, uses_anonymous_args = 0
  89:boards/TMC5130_eval.c **** 
 4935              		.loc 1 89 2 view .LVU1745
 4936              	.LBB469:
 4937              	.LBI469:
  37:boards/TMC5130_eval.c **** {
 4938              		.loc 1 37 31 view .LVU1746
  37:boards/TMC5130_eval.c **** {
 4939              		.loc 1 37 31 is_stmt 0 view .LVU1747
 4940              	.LBE469:
  39:boards/TMC5130_eval.c **** 
 4941              		.loc 1 39 2 is_stmt 1 view .LVU1748
  41:boards/TMC5130_eval.c **** }
 4942              		.loc 1 41 2 view .LVU1749
  88:boards/TMC5130_eval.c **** 	tmc5130_right(motorToIC(motor), velocity);
 4943              		.loc 1 88 1 is_stmt 0 view .LVU1750
 4944 0fb4 08B5     		push	{r3, lr}
 4945              	.LCFI11:
 4946              		.cfi_def_cfa_offset 8
 4947              		.cfi_offset 3, -8
 4948              		.cfi_offset 14, -4
  89:boards/TMC5130_eval.c **** 
 4949              		.loc 1 89 2 view .LVU1751
 4950 0fb6 0248     		ldr	r0, .L254
 4951              	.LVL628:
  89:boards/TMC5130_eval.c **** 
 4952              		.loc 1 89 2 view .LVU1752
 4953 0fb8 FFF7FEFF 		bl	tmc5130_right
 4954              	.LVL629:
  91:boards/TMC5130_eval.c **** }
 4955              		.loc 1 91 2 is_stmt 1 view .LVU1753
  92:boards/TMC5130_eval.c **** 
 4956              		.loc 1 92 1 is_stmt 0 view .LVU1754
 4957 0fbc 0020     		movs	r0, #0
 4958 0fbe 08BD     		pop	{r3, pc}
 4959              	.L255:
 4960              		.align	2
 4961              	.L254:
 4962 0fc0 00000000 		.word	.LANCHOR0
 4963              		.cfi_endproc
 4964              	.LFE5:
 4966              		.align	1
 4967              		.syntax unified
 4968              		.thumb
 4969              		.thumb_func
 4970              		.fpu softvfp
 4972              	rotate:
 4973              	.LVL630:
 4974              	.LFB4:
  81:boards/TMC5130_eval.c **** 	tmc5130_rotate(motorToIC(motor), velocity);
 4975              		.loc 1 81 1 is_stmt 1 view -0
 4976              		.cfi_startproc
 4977              		@ args = 0, pretend = 0, frame = 0
 4978              		@ frame_needed = 0, uses_anonymous_args = 0
  82:boards/TMC5130_eval.c **** 
 4979              		.loc 1 82 2 view .LVU1756
 4980              	.LBB470:
 4981              	.LBI470:
  37:boards/TMC5130_eval.c **** {
 4982              		.loc 1 37 31 view .LVU1757
  37:boards/TMC5130_eval.c **** {
 4983              		.loc 1 37 31 is_stmt 0 view .LVU1758
 4984              	.LBE470:
  39:boards/TMC5130_eval.c **** 
 4985              		.loc 1 39 2 is_stmt 1 view .LVU1759
  41:boards/TMC5130_eval.c **** }
 4986              		.loc 1 41 2 view .LVU1760
  81:boards/TMC5130_eval.c **** 	tmc5130_rotate(motorToIC(motor), velocity);
 4987              		.loc 1 81 1 is_stmt 0 view .LVU1761
 4988 0fc4 08B5     		push	{r3, lr}
 4989              	.LCFI12:
 4990              		.cfi_def_cfa_offset 8
 4991              		.cfi_offset 3, -8
 4992              		.cfi_offset 14, -4
  82:boards/TMC5130_eval.c **** 
 4993              		.loc 1 82 2 view .LVU1762
 4994 0fc6 0248     		ldr	r0, .L257
 4995              	.LVL631:
  82:boards/TMC5130_eval.c **** 
 4996              		.loc 1 82 2 view .LVU1763
 4997 0fc8 FFF7FEFF 		bl	tmc5130_rotate
 4998              	.LVL632:
  84:boards/TMC5130_eval.c **** }
 4999              		.loc 1 84 2 is_stmt 1 view .LVU1764
  85:boards/TMC5130_eval.c **** 
 5000              		.loc 1 85 1 is_stmt 0 view .LVU1765
 5001 0fcc 0020     		movs	r0, #0
 5002 0fce 08BD     		pop	{r3, pc}
 5003              	.L258:
 5004              		.align	2
 5005              	.L257:
 5006 0fd0 00000000 		.word	.LANCHOR0
 5007              		.cfi_endproc
 5008              	.LFE4:
 5010              		.align	1
 5011              		.syntax unified
 5012              		.thumb
 5013              		.thumb_func
 5014              		.fpu softvfp
 5016              	restore:
 5017              	.LFB21:
 889:boards/TMC5130_eval.c **** 
 890:boards/TMC5130_eval.c **** static uint8_t reset()
 891:boards/TMC5130_eval.c **** {
 892:boards/TMC5130_eval.c **** 	if(!tmc5130_readInt(&TMC5130, TMC5130_VACTUAL))
 893:boards/TMC5130_eval.c **** 		tmc5130_reset(&TMC5130);
 894:boards/TMC5130_eval.c **** 
 895:boards/TMC5130_eval.c **** 	HAL.IOs->config->setLow(Pins.AIN_REF_SW);
 896:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 897:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 898:boards/TMC5130_eval.c **** 	return 1;
 899:boards/TMC5130_eval.c **** }
 900:boards/TMC5130_eval.c **** 
 901:boards/TMC5130_eval.c **** static uint8_t restore()
 902:boards/TMC5130_eval.c **** {
 5018              		.loc 1 902 1 is_stmt 1 view -0
 5019              		.cfi_startproc
 5020              		@ args = 0, pretend = 0, frame = 0
 5021              		@ frame_needed = 0, uses_anonymous_args = 0
 5022              		@ link register save eliminated.
 903:boards/TMC5130_eval.c **** 	return tmc5130_restore(&TMC5130);
 5023              		.loc 1 903 2 view .LVU1767
 5024              		.loc 1 903 9 is_stmt 0 view .LVU1768
 5025 0fd4 0148     		ldr	r0, .L260
 5026 0fd6 FFF7FEBF 		b	tmc5130_restore
 5027              	.LVL633:
 5028              	.L261:
 5029 0fda 00BF     		.align	2
 5030              	.L260:
 5031 0fdc 00000000 		.word	.LANCHOR0
 5032              		.cfi_endproc
 5033              	.LFE21:
 5035              		.align	1
 5036              		.syntax unified
 5037              		.thumb
 5038              		.thumb_func
 5039              		.fpu softvfp
 5041              	reset:
 5042              	.LFB20:
 891:boards/TMC5130_eval.c **** 	if(!tmc5130_readInt(&TMC5130, TMC5130_VACTUAL))
 5043              		.loc 1 891 1 is_stmt 1 view -0
 5044              		.cfi_startproc
 5045              		@ args = 0, pretend = 0, frame = 0
 5046              		@ frame_needed = 0, uses_anonymous_args = 0
 892:boards/TMC5130_eval.c **** 		tmc5130_reset(&TMC5130);
 5047              		.loc 1 892 2 view .LVU1770
 891:boards/TMC5130_eval.c **** 	if(!tmc5130_readInt(&TMC5130, TMC5130_VACTUAL))
 5048              		.loc 1 891 1 is_stmt 0 view .LVU1771
 5049 0fe0 38B5     		push	{r3, r4, r5, lr}
 5050              	.LCFI13:
 5051              		.cfi_def_cfa_offset 16
 5052              		.cfi_offset 3, -16
 5053              		.cfi_offset 4, -12
 5054              		.cfi_offset 5, -8
 5055              		.cfi_offset 14, -4
 892:boards/TMC5130_eval.c **** 		tmc5130_reset(&TMC5130);
 5056              		.loc 1 892 6 view .LVU1772
 5057 0fe2 0E48     		ldr	r0, .L264
 5058 0fe4 0D4C     		ldr	r4, .L264
 5059 0fe6 2221     		movs	r1, #34
 5060 0fe8 FFF7FEFF 		bl	tmc5130_readInt
 5061              	.LVL634:
 892:boards/TMC5130_eval.c **** 		tmc5130_reset(&TMC5130);
 5062              		.loc 1 892 4 view .LVU1773
 5063 0fec 10B9     		cbnz	r0, .L263
 893:boards/TMC5130_eval.c **** 
 5064              		.loc 1 893 3 is_stmt 1 view .LVU1774
 5065 0fee 2046     		mov	r0, r4
 5066 0ff0 FFF7FEFF 		bl	tmc5130_reset
 5067              	.LVL635:
 5068              	.L263:
 895:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 5069              		.loc 1 895 2 view .LVU1775
 895:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 5070              		.loc 1 895 5 is_stmt 0 view .LVU1776
 5071 0ff4 0A4B     		ldr	r3, .L264+4
 895:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 5072              		.loc 1 895 2 view .LVU1777
 5073 0ff6 D4F8B402 		ldr	r0, [r4, #692]
 895:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 5074              		.loc 1 895 5 view .LVU1778
 5075 0ffa DD68     		ldr	r5, [r3, #12]
 895:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 5076              		.loc 1 895 17 view .LVU1779
 5077 0ffc 2B68     		ldr	r3, [r5]
 895:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 5078              		.loc 1 895 2 view .LVU1780
 5079 0ffe 9B69     		ldr	r3, [r3, #24]
 5080 1000 9847     		blx	r3
 5081              	.LVL636:
 896:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 5082              		.loc 1 896 2 is_stmt 1 view .LVU1781
 896:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 5083              		.loc 1 896 17 is_stmt 0 view .LVU1782
 5084 1002 2B68     		ldr	r3, [r5]
 896:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 5085              		.loc 1 896 2 view .LVU1783
 5086 1004 D4F89002 		ldr	r0, [r4, #656]
 5087 1008 1B69     		ldr	r3, [r3, #16]
 5088 100a 9847     		blx	r3
 5089              	.LVL637:
 897:boards/TMC5130_eval.c **** 	return 1;
 5090              		.loc 1 897 2 is_stmt 1 view .LVU1784
 897:boards/TMC5130_eval.c **** 	return 1;
 5091              		.loc 1 897 17 is_stmt 0 view .LVU1785
 5092 100c 2B68     		ldr	r3, [r5]
 897:boards/TMC5130_eval.c **** 	return 1;
 5093              		.loc 1 897 2 view .LVU1786
 5094 100e D4F89402 		ldr	r0, [r4, #660]
 5095 1012 1B69     		ldr	r3, [r3, #16]
 5096 1014 9847     		blx	r3
 5097              	.LVL638:
 898:boards/TMC5130_eval.c **** }
 5098              		.loc 1 898 2 is_stmt 1 view .LVU1787
 899:boards/TMC5130_eval.c **** 
 5099              		.loc 1 899 1 is_stmt 0 view .LVU1788
 5100 1016 0120     		movs	r0, #1
 5101 1018 38BD     		pop	{r3, r4, r5, pc}
 5102              	.L265:
 5103 101a 00BF     		.align	2
 5104              	.L264:
 5105 101c 00000000 		.word	.LANCHOR0
 5106 1020 00000000 		.word	HAL
 5107              		.cfi_endproc
 5108              	.LFE20:
 5110              		.align	1
 5111              		.syntax unified
 5112              		.thumb
 5113              		.thumb_func
 5114              		.fpu softvfp
 5116              	enableDriver:
 5117              	.LVL639:
 5118              	.LFB23:
 904:boards/TMC5130_eval.c **** }
 905:boards/TMC5130_eval.c **** 
 906:boards/TMC5130_eval.c **** static void configCallback(TMC5130TypeDef *tmc5130, ConfigState completedState)
 907:boards/TMC5130_eval.c **** {
 908:boards/TMC5130_eval.c **** 	if(completedState == CONFIG_RESET)
 909:boards/TMC5130_eval.c **** 	{
 910:boards/TMC5130_eval.c **** 		// Configuration reset completed
 911:boards/TMC5130_eval.c **** 		// Change hardware preset registers here
 912:boards/TMC5130_eval.c **** 		tmc5130_writeInt(tmc5130, TMC5130_PWMCONF, 0x000504C8);
 913:boards/TMC5130_eval.c **** 
 914:boards/TMC5130_eval.c **** 		// Fill missing shadow registers (hardware preset registers)
 915:boards/TMC5130_eval.c **** 		tmc5130_fillShadowRegisters(&TMC5130);
 916:boards/TMC5130_eval.c **** 	}
 917:boards/TMC5130_eval.c **** }
 918:boards/TMC5130_eval.c **** 
 919:boards/TMC5130_eval.c **** static void enableDriver(DriverState state)
 920:boards/TMC5130_eval.c **** {
 5119              		.loc 1 920 1 is_stmt 1 view -0
 5120              		.cfi_startproc
 5121              		@ args = 0, pretend = 0, frame = 0
 5122              		@ frame_needed = 0, uses_anonymous_args = 0
 5123              		@ link register save eliminated.
 921:boards/TMC5130_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 5124              		.loc 1 921 2 view .LVU1790
 5125              		.loc 1 921 4 is_stmt 0 view .LVU1791
 5126 1024 0228     		cmp	r0, #2
 922:boards/TMC5130_eval.c **** 		state = Evalboards.driverEnable;
 5127              		.loc 1 922 3 is_stmt 1 view .LVU1792
 5128              		.loc 1 922 9 is_stmt 0 view .LVU1793
 5129 1026 04BF     		itt	eq
 5130 1028 0C4B     		ldreq	r3, .L271
 5131 102a 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 5132              	.LVL640:
 923:boards/TMC5130_eval.c **** 
 924:boards/TMC5130_eval.c **** 	if(state ==  DRIVER_DISABLE)
 5133              		.loc 1 924 2 is_stmt 1 view .LVU1794
 5134              		.loc 1 924 4 is_stmt 0 view .LVU1795
 5135 102e 38B9     		cbnz	r0, .L268
 925:boards/TMC5130_eval.c **** 		HAL.IOs->config->setHigh(Pins.DRV_ENN_CFG6);
 5136              		.loc 1 925 3 is_stmt 1 view .LVU1796
 5137              		.loc 1 925 6 is_stmt 0 view .LVU1797
 5138 1030 0B4B     		ldr	r3, .L271+4
 5139              		.loc 1 925 10 view .LVU1798
 5140 1032 DB68     		ldr	r3, [r3, #12]
 5141              		.loc 1 925 18 view .LVU1799
 5142 1034 1B68     		ldr	r3, [r3]
 5143              		.loc 1 925 3 view .LVU1800
 5144 1036 5B69     		ldr	r3, [r3, #20]
 5145              	.L270:
 5146              	.LBB473:
 5147              	.LBB474:
 926:boards/TMC5130_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 927:boards/TMC5130_eval.c **** 		HAL.IOs->config->setLow(Pins.DRV_ENN_CFG6);
 5148              		.loc 1 927 3 view .LVU1801
 5149 1038 0A4A     		ldr	r2, .L271+8
 5150 103a D2F89802 		ldr	r0, [r2, #664]
 5151 103e 1847     		bx	r3	@ indirect register sibling call
 5152              	.LVL641:
 5153              	.L268:
 5154              		.loc 1 927 3 view .LVU1802
 5155              	.LBE474:
 5156              	.LBE473:
 926:boards/TMC5130_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 5157              		.loc 1 926 7 is_stmt 1 view .LVU1803
 926:boards/TMC5130_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 5158              		.loc 1 926 9 is_stmt 0 view .LVU1804
 5159 1040 0128     		cmp	r0, #1
 5160 1042 09D1     		bne	.L266
 926:boards/TMC5130_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 5161              		.loc 1 926 49 discriminator 1 view .LVU1805
 5162 1044 054B     		ldr	r3, .L271
 926:boards/TMC5130_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 5163              		.loc 1 926 35 discriminator 1 view .LVU1806
 5164 1046 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 5165 104a 012B     		cmp	r3, #1
 5166 104c 04D1     		bne	.L266
 5167              	.LBB476:
 5168              	.LBI473:
 919:boards/TMC5130_eval.c **** {
 5169              		.loc 1 919 13 is_stmt 1 view .LVU1807
 5170              	.LVL642:
 5171              	.LBB475:
 5172              		.loc 1 927 3 view .LVU1808
 5173              		.loc 1 927 6 is_stmt 0 view .LVU1809
 5174 104e 044B     		ldr	r3, .L271+4
 5175              		.loc 1 927 10 view .LVU1810
 5176 1050 DB68     		ldr	r3, [r3, #12]
 5177              		.loc 1 927 18 view .LVU1811
 5178 1052 1B68     		ldr	r3, [r3]
 5179              		.loc 1 927 3 view .LVU1812
 5180 1054 9B69     		ldr	r3, [r3, #24]
 5181 1056 EFE7     		b	.L270
 5182              	.LVL643:
 5183              	.L266:
 5184              		.loc 1 927 3 view .LVU1813
 5185              	.LBE475:
 5186              	.LBE476:
 928:boards/TMC5130_eval.c **** }
 5187              		.loc 1 928 1 view .LVU1814
 5188 1058 7047     		bx	lr
 5189              	.L272:
 5190 105a 00BF     		.align	2
 5191              	.L271:
 5192 105c 00000000 		.word	Evalboards
 5193 1060 00000000 		.word	HAL
 5194 1064 00000000 		.word	.LANCHOR0
 5195              		.cfi_endproc
 5196              	.LFE23:
 5198              		.align	1
 5199              		.syntax unified
 5200              		.thumb
 5201              		.thumb_func
 5202              		.fpu softvfp
 5204              	configCallback:
 5205              	.LVL644:
 5206              	.LFB22:
 907:boards/TMC5130_eval.c **** 	if(completedState == CONFIG_RESET)
 5207              		.loc 1 907 1 is_stmt 1 view -0
 5208              		.cfi_startproc
 5209              		@ args = 0, pretend = 0, frame = 0
 5210              		@ frame_needed = 0, uses_anonymous_args = 0
 908:boards/TMC5130_eval.c **** 	{
 5211              		.loc 1 908 2 view .LVU1816
 908:boards/TMC5130_eval.c **** 	{
 5212              		.loc 1 908 4 is_stmt 0 view .LVU1817
 5213 1068 0129     		cmp	r1, #1
 907:boards/TMC5130_eval.c **** 	if(completedState == CONFIG_RESET)
 5214              		.loc 1 907 1 view .LVU1818
 5215 106a 08B5     		push	{r3, lr}
 5216              	.LCFI14:
 5217              		.cfi_def_cfa_offset 8
 5218              		.cfi_offset 3, -8
 5219              		.cfi_offset 14, -4
 908:boards/TMC5130_eval.c **** 	{
 5220              		.loc 1 908 4 view .LVU1819
 5221 106c 08D1     		bne	.L273
 5222              	.LBB479:
 5223              	.LBI479:
 906:boards/TMC5130_eval.c **** {
 5224              		.loc 1 906 13 is_stmt 1 view .LVU1820
 5225              	.LVL645:
 5226              	.LBB480:
 912:boards/TMC5130_eval.c **** 
 5227              		.loc 1 912 3 view .LVU1821
 5228 106e 054A     		ldr	r2, .L275
 5229 1070 7021     		movs	r1, #112
 5230              	.LVL646:
 912:boards/TMC5130_eval.c **** 
 5231              		.loc 1 912 3 is_stmt 0 view .LVU1822
 5232 1072 FFF7FEFF 		bl	tmc5130_writeInt
 5233              	.LVL647:
 915:boards/TMC5130_eval.c **** 	}
 5234              		.loc 1 915 3 is_stmt 1 view .LVU1823
 5235              	.LBE480:
 5236              	.LBE479:
 917:boards/TMC5130_eval.c **** 
 5237              		.loc 1 917 1 is_stmt 0 view .LVU1824
 5238 1076 BDE80840 		pop	{r3, lr}
 5239              	.LCFI15:
 5240              		.cfi_remember_state
 5241              		.cfi_restore 14
 5242              		.cfi_restore 3
 5243              		.cfi_def_cfa_offset 0
 5244              	.LBB482:
 5245              	.LBB481:
 915:boards/TMC5130_eval.c **** 	}
 5246              		.loc 1 915 3 view .LVU1825
 5247 107a 0348     		ldr	r0, .L275+4
 5248 107c FFF7FEBF 		b	tmc5130_fillShadowRegisters
 5249              	.LVL648:
 5250              	.L273:
 5251              	.LCFI16:
 5252              		.cfi_restore_state
 915:boards/TMC5130_eval.c **** 	}
 5253              		.loc 1 915 3 view .LVU1826
 5254              	.LBE481:
 5255              	.LBE482:
 917:boards/TMC5130_eval.c **** 
 5256              		.loc 1 917 1 view .LVU1827
 5257 1080 08BD     		pop	{r3, pc}
 5258              	.L276:
 5259 1082 00BF     		.align	2
 5260              	.L275:
 5261 1084 C8040500 		.word	328904
 5262 1088 00000000 		.word	.LANCHOR0
 5263              		.cfi_endproc
 5264              	.LFE22:
 5266              		.align	1
 5267              		.global	tmc5130_readWriteArray
 5268              		.syntax unified
 5269              		.thumb
 5270              		.thumb_func
 5271              		.fpu softvfp
 5273              	tmc5130_readWriteArray:
 5274              	.LVL649:
 5275              	.LFB3:
  55:boards/TMC5130_eval.c **** 	// Map the channel to the corresponding SPI channel
 5276              		.loc 1 55 1 is_stmt 1 view -0
 5277              		.cfi_startproc
 5278              		@ args = 0, pretend = 0, frame = 0
 5279              		@ frame_needed = 0, uses_anonymous_args = 0
 5280              		@ link register save eliminated.
  57:boards/TMC5130_eval.c **** }
 5281              		.loc 1 57 2 view .LVU1829
 5282              	.LBB483:
 5283              	.LBI483:
  46:boards/TMC5130_eval.c **** {
 5284              		.loc 1 46 34 view .LVU1830
 5285              	.LBB484:
  48:boards/TMC5130_eval.c **** 
 5286              		.loc 1 48 2 view .LVU1831
  50:boards/TMC5130_eval.c **** }
 5287              		.loc 1 50 2 view .LVU1832
  50:boards/TMC5130_eval.c **** }
 5288              		.loc 1 50 9 is_stmt 0 view .LVU1833
 5289 108c 034B     		ldr	r3, .L278
 5290              	.LBE484:
 5291              	.LBE483:
  57:boards/TMC5130_eval.c **** }
 5292              		.loc 1 57 23 view .LVU1834
 5293 108e D3F8C032 		ldr	r3, [r3, #704]
  55:boards/TMC5130_eval.c **** 	// Map the channel to the corresponding SPI channel
 5294              		.loc 1 55 1 view .LVU1835
 5295 1092 0846     		mov	r0, r1
 5296              	.LVL650:
  57:boards/TMC5130_eval.c **** }
 5297              		.loc 1 57 2 view .LVU1836
 5298 1094 DB68     		ldr	r3, [r3, #12]
 5299 1096 1146     		mov	r1, r2
 5300              	.LVL651:
  57:boards/TMC5130_eval.c **** }
 5301              		.loc 1 57 2 view .LVU1837
 5302 1098 1847     		bx	r3	@ indirect register sibling call
 5303              	.LVL652:
 5304              	.L279:
  57:boards/TMC5130_eval.c **** }
 5305              		.loc 1 57 2 view .LVU1838
 5306 109a 00BF     		.align	2
 5307              	.L278:
 5308 109c 00000000 		.word	.LANCHOR0
 5309              		.cfi_endproc
 5310              	.LFE3:
 5312              		.align	1
 5313              		.global	TMC5130_init
 5314              		.syntax unified
 5315              		.thumb
 5316              		.thumb_func
 5317              		.fpu softvfp
 5319              	TMC5130_init:
 5320              	.LFB24:
 929:boards/TMC5130_eval.c **** 
 930:boards/TMC5130_eval.c **** void TMC5130_init(void)
 931:boards/TMC5130_eval.c **** {
 5321              		.loc 1 931 1 is_stmt 1 view -0
 5322              		.cfi_startproc
 5323              		@ args = 0, pretend = 0, frame = 0
 5324              		@ frame_needed = 0, uses_anonymous_args = 0
 932:boards/TMC5130_eval.c **** 	Pins.DRV_ENN_CFG6    = &HAL.IOs->pins->DIO0;
 5325              		.loc 1 932 2 view .LVU1840
 931:boards/TMC5130_eval.c **** 	Pins.DRV_ENN_CFG6    = &HAL.IOs->pins->DIO0;
 5326              		.loc 1 931 1 is_stmt 0 view .LVU1841
 5327 10a0 70B5     		push	{r4, r5, r6, lr}
 5328              	.LCFI17:
 5329              		.cfi_def_cfa_offset 16
 5330              		.cfi_offset 4, -16
 5331              		.cfi_offset 5, -12
 5332              		.cfi_offset 6, -8
 5333              		.cfi_offset 14, -4
 5334              		.loc 1 932 29 view .LVU1842
 5335 10a2 634E     		ldr	r6, .L281
 5336              		.loc 1 932 23 view .LVU1843
 5337 10a4 634C     		ldr	r4, .L281+4
 5338              		.loc 1 932 29 view .LVU1844
 5339 10a6 F568     		ldr	r5, [r6, #12]
 5340              		.loc 1 932 33 view .LVU1845
 5341 10a8 6B68     		ldr	r3, [r5, #4]
 5342              		.loc 1 932 25 view .LVU1846
 5343 10aa 03F16802 		add	r2, r3, #104
 5344              		.loc 1 932 23 view .LVU1847
 5345 10ae C4F89822 		str	r2, [r4, #664]
 933:boards/TMC5130_eval.c **** 	Pins.ENCN_DCO        = &HAL.IOs->pins->DIO1;
 5346              		.loc 1 933 2 is_stmt 1 view .LVU1848
 934:boards/TMC5130_eval.c **** 	Pins.ENCA_DCIN_CFG5  = &HAL.IOs->pins->DIO2;
 5347              		.loc 1 934 25 is_stmt 0 view .LVU1849
 5348 10b2 03F1A802 		add	r2, r3, #168
 5349              		.loc 1 934 23 view .LVU1850
 5350 10b6 C4F89C22 		str	r2, [r4, #668]
 935:boards/TMC5130_eval.c **** 	Pins.ENCB_DCEN_CFG4  = &HAL.IOs->pins->DIO3;
 5351              		.loc 1 935 25 view .LVU1851
 5352 10ba 03F1C802 		add	r2, r3, #200
 5353              		.loc 1 935 23 view .LVU1852
 5354 10be C4F8A022 		str	r2, [r4, #672]
 936:boards/TMC5130_eval.c **** 	Pins.REFL_UC         = &HAL.IOs->pins->DIO6;
 5355              		.loc 1 936 25 view .LVU1853
 5356 10c2 03F59472 		add	r2, r3, #296
 5357              		.loc 1 936 23 view .LVU1854
 5358 10c6 C4F89022 		str	r2, [r4, #656]
 937:boards/TMC5130_eval.c **** 	Pins.REFR_UC         = &HAL.IOs->pins->DIO7;
 5359              		.loc 1 937 25 view .LVU1855
 5360 10ca 03F5A472 		add	r2, r3, #328
 5361              		.loc 1 937 23 view .LVU1856
 5362 10ce C4F89422 		str	r2, [r4, #660]
 938:boards/TMC5130_eval.c **** 	Pins.AIN_REF_SW      = &HAL.IOs->pins->DIO10;
 5363              		.loc 1 938 25 view .LVU1857
 5364 10d2 03F5D472 		add	r2, r3, #424
 5365              		.loc 1 938 23 view .LVU1858
 5366 10d6 C4F8B422 		str	r2, [r4, #692]
 939:boards/TMC5130_eval.c **** 	Pins.AIN_REF_PWM     = &HAL.IOs->pins->DIO11;
 5367              		.loc 1 939 25 view .LVU1859
 5368 10da 03F5E472 		add	r2, r3, #456
 5369              		.loc 1 939 23 view .LVU1860
 5370 10de C4F8B822 		str	r2, [r4, #696]
 940:boards/TMC5130_eval.c **** 	Pins.SWSEL           = &HAL.IOs->pins->DIO14;
 5371              		.loc 1 940 25 view .LVU1861
 5372 10e2 03F56272 		add	r2, r3, #904
 933:boards/TMC5130_eval.c **** 	Pins.ENCA_DCIN_CFG5  = &HAL.IOs->pins->DIO2;
 5373              		.loc 1 933 25 view .LVU1862
 5374 10e6 03F18800 		add	r0, r3, #136
 5375              		.loc 1 940 23 view .LVU1863
 5376 10ea C4F8A822 		str	r2, [r4, #680]
 941:boards/TMC5130_eval.c **** 	Pins.SWP_DIAG1       = &HAL.IOs->pins->DIO15;
 5377              		.loc 1 941 25 view .LVU1864
 5378 10ee 03F56A72 		add	r2, r3, #936
 942:boards/TMC5130_eval.c **** 	Pins.SWN_DIAG0       = &HAL.IOs->pins->DIO16;
 5379              		.loc 1 942 25 view .LVU1865
 5380 10f2 03F57273 		add	r3, r3, #968
 5381              		.loc 1 942 23 view .LVU1866
 5382 10f6 C4F8AC32 		str	r3, [r4, #684]
 943:boards/TMC5130_eval.c **** 
 944:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.ENCN_DCO);
 5383              		.loc 1 944 17 view .LVU1867
 5384 10fa 2B68     		ldr	r3, [r5]
 941:boards/TMC5130_eval.c **** 	Pins.SWN_DIAG0       = &HAL.IOs->pins->DIO16;
 5385              		.loc 1 941 23 view .LVU1868
 5386 10fc C4F8B022 		str	r2, [r4, #688]
 5387              		.loc 1 944 2 view .LVU1869
 5388 1100 1B69     		ldr	r3, [r3, #16]
 933:boards/TMC5130_eval.c **** 	Pins.ENCA_DCIN_CFG5  = &HAL.IOs->pins->DIO2;
 5389              		.loc 1 933 23 view .LVU1870
 5390 1102 C4F8A402 		str	r0, [r4, #676]
 934:boards/TMC5130_eval.c **** 	Pins.ENCB_DCEN_CFG4  = &HAL.IOs->pins->DIO3;
 5391              		.loc 1 934 2 is_stmt 1 view .LVU1871
 935:boards/TMC5130_eval.c **** 	Pins.REFL_UC         = &HAL.IOs->pins->DIO6;
 5392              		.loc 1 935 2 view .LVU1872
 936:boards/TMC5130_eval.c **** 	Pins.REFR_UC         = &HAL.IOs->pins->DIO7;
 5393              		.loc 1 936 2 view .LVU1873
 937:boards/TMC5130_eval.c **** 	Pins.AIN_REF_SW      = &HAL.IOs->pins->DIO10;
 5394              		.loc 1 937 2 view .LVU1874
 938:boards/TMC5130_eval.c **** 	Pins.AIN_REF_PWM     = &HAL.IOs->pins->DIO11;
 5395              		.loc 1 938 2 view .LVU1875
 939:boards/TMC5130_eval.c **** 	Pins.SWSEL           = &HAL.IOs->pins->DIO14;
 5396              		.loc 1 939 2 view .LVU1876
 940:boards/TMC5130_eval.c **** 	Pins.SWP_DIAG1       = &HAL.IOs->pins->DIO15;
 5397              		.loc 1 940 2 view .LVU1877
 941:boards/TMC5130_eval.c **** 	Pins.SWN_DIAG0       = &HAL.IOs->pins->DIO16;
 5398              		.loc 1 941 2 view .LVU1878
 942:boards/TMC5130_eval.c **** 
 5399              		.loc 1 942 2 view .LVU1879
 5400              		.loc 1 944 2 view .LVU1880
 5401 1106 9847     		blx	r3
 5402              	.LVL653:
 945:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.ENCB_DCEN_CFG4);
 5403              		.loc 1 945 2 view .LVU1881
 5404              		.loc 1 945 17 is_stmt 0 view .LVU1882
 5405 1108 2B68     		ldr	r3, [r5]
 5406              		.loc 1 945 2 view .LVU1883
 5407 110a D4F8A002 		ldr	r0, [r4, #672]
 5408 110e 1B69     		ldr	r3, [r3, #16]
 5409 1110 9847     		blx	r3
 5410              	.LVL654:
 946:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.ENCA_DCIN_CFG5);
 5411              		.loc 1 946 2 is_stmt 1 view .LVU1884
 5412              		.loc 1 946 17 is_stmt 0 view .LVU1885
 5413 1112 2B68     		ldr	r3, [r5]
 5414              		.loc 1 946 2 view .LVU1886
 5415 1114 D4F89C02 		ldr	r0, [r4, #668]
 5416 1118 1B69     		ldr	r3, [r3, #16]
 5417 111a 9847     		blx	r3
 5418              	.LVL655:
 947:boards/TMC5130_eval.c **** 
 948:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.SWN_DIAG0);
 5419              		.loc 1 948 2 is_stmt 1 view .LVU1887
 5420              		.loc 1 948 17 is_stmt 0 view .LVU1888
 5421 111c 2B68     		ldr	r3, [r5]
 5422              		.loc 1 948 2 view .LVU1889
 5423 111e D4F8AC02 		ldr	r0, [r4, #684]
 5424 1122 1B69     		ldr	r3, [r3, #16]
 5425 1124 9847     		blx	r3
 5426              	.LVL656:
 949:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.SWP_DIAG1);
 5427              		.loc 1 949 2 is_stmt 1 view .LVU1890
 5428              		.loc 1 949 17 is_stmt 0 view .LVU1891
 5429 1126 2B68     		ldr	r3, [r5]
 5430              		.loc 1 949 2 view .LVU1892
 5431 1128 D4F8B002 		ldr	r0, [r4, #688]
 5432 112c 1B69     		ldr	r3, [r3, #16]
 5433 112e 9847     		blx	r3
 5434              	.LVL657:
 950:boards/TMC5130_eval.c **** 	HAL.IOs->config->toOutput(Pins.SWSEL);
 5435              		.loc 1 950 2 is_stmt 1 view .LVU1893
 5436              		.loc 1 950 17 is_stmt 0 view .LVU1894
 5437 1130 2B68     		ldr	r3, [r5]
 5438              		.loc 1 950 2 view .LVU1895
 5439 1132 D4F8A802 		ldr	r0, [r4, #680]
 5440 1136 DB68     		ldr	r3, [r3, #12]
 5441 1138 9847     		blx	r3
 5442              	.LVL658:
 951:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFL_UC);
 5443              		.loc 1 951 2 is_stmt 1 view .LVU1896
 5444              		.loc 1 951 17 is_stmt 0 view .LVU1897
 5445 113a 2B68     		ldr	r3, [r5]
 5446              		.loc 1 951 2 view .LVU1898
 5447 113c D4F89002 		ldr	r0, [r4, #656]
 5448 1140 1B69     		ldr	r3, [r3, #16]
 5449 1142 9847     		blx	r3
 5450              	.LVL659:
 952:boards/TMC5130_eval.c **** 	HAL.IOs->config->toInput(Pins.REFR_UC);
 5451              		.loc 1 952 2 is_stmt 1 view .LVU1899
 5452              		.loc 1 952 17 is_stmt 0 view .LVU1900
 5453 1144 2B68     		ldr	r3, [r5]
 5454              		.loc 1 952 2 view .LVU1901
 5455 1146 D4F89402 		ldr	r0, [r4, #660]
 5456 114a 1B69     		ldr	r3, [r3, #16]
 5457 114c 9847     		blx	r3
 5458              	.LVL660:
 953:boards/TMC5130_eval.c **** 	HAL.IOs->config->toOutput(Pins.DRV_ENN_CFG6);
 5459              		.loc 1 953 2 is_stmt 1 view .LVU1902
 5460              		.loc 1 953 17 is_stmt 0 view .LVU1903
 5461 114e 2B68     		ldr	r3, [r5]
 5462              		.loc 1 953 2 view .LVU1904
 5463 1150 D4F89802 		ldr	r0, [r4, #664]
 5464 1154 DB68     		ldr	r3, [r3, #12]
 5465 1156 9847     		blx	r3
 5466              	.LVL661:
 954:boards/TMC5130_eval.c **** 	HAL.IOs->config->toOutput(Pins.AIN_REF_SW);
 5467              		.loc 1 954 2 is_stmt 1 view .LVU1905
 5468              		.loc 1 954 17 is_stmt 0 view .LVU1906
 5469 1158 2B68     		ldr	r3, [r5]
 5470              		.loc 1 954 2 view .LVU1907
 5471 115a D4F8B402 		ldr	r0, [r4, #692]
 5472 115e DB68     		ldr	r3, [r3, #12]
 5473 1160 9847     		blx	r3
 5474              	.LVL662:
 955:boards/TMC5130_eval.c **** 	HAL.IOs->config->toOutput(Pins.AIN_REF_PWM);
 5475              		.loc 1 955 2 is_stmt 1 view .LVU1908
 5476              		.loc 1 955 17 is_stmt 0 view .LVU1909
 5477 1162 2B68     		ldr	r3, [r5]
 5478              		.loc 1 955 2 view .LVU1910
 5479 1164 D4F8B802 		ldr	r0, [r4, #696]
 5480 1168 DB68     		ldr	r3, [r3, #12]
 5481 116a 9847     		blx	r3
 5482              	.LVL663:
 956:boards/TMC5130_eval.c **** 
 957:boards/TMC5130_eval.c **** 	HAL.IOs->config->setLow(Pins.SWSEL);
 5483              		.loc 1 957 2 is_stmt 1 view .LVU1911
 5484              		.loc 1 957 17 is_stmt 0 view .LVU1912
 5485 116c 2B68     		ldr	r3, [r5]
 5486              		.loc 1 957 2 view .LVU1913
 5487 116e D4F8A802 		ldr	r0, [r4, #680]
 5488 1172 9B69     		ldr	r3, [r3, #24]
 5489 1174 9847     		blx	r3
 5490              	.LVL664:
 958:boards/TMC5130_eval.c **** 
 959:boards/TMC5130_eval.c **** 	TMC5130_SPIChannel = &HAL.SPI->ch1;
 5491              		.loc 1 959 2 is_stmt 1 view .LVU1914
 960:boards/TMC5130_eval.c **** 	TMC5130_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 5492              		.loc 1 960 28 is_stmt 0 view .LVU1915
 5493 1176 6B68     		ldr	r3, [r5, #4]
 959:boards/TMC5130_eval.c **** 	TMC5130_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 5494              		.loc 1 959 27 view .LVU1916
 5495 1178 3269     		ldr	r2, [r6, #16]
 959:boards/TMC5130_eval.c **** 	TMC5130_SPIChannel->CSN = &HAL.IOs->pins->SPI1_CSN;
 5496              		.loc 1 959 21 view .LVU1917
 5497 117a C4F8C022 		str	r2, [r4, #704]
 5498              		.loc 1 960 2 is_stmt 1 view .LVU1918
 5499              		.loc 1 960 28 is_stmt 0 view .LVU1919
 5500 117e 03F53273 		add	r3, r3, #712
 5501              		.loc 1 960 26 view .LVU1920
 5502 1182 5360     		str	r3, [r2, #4]
 961:boards/TMC5130_eval.c **** 
 962:boards/TMC5130_eval.c **** 	Evalboards.ch1.config->reset        = reset;
 5503              		.loc 1 962 2 is_stmt 1 view .LVU1921
 5504              		.loc 1 962 16 is_stmt 0 view .LVU1922
 5505 1184 2C4B     		ldr	r3, .L281+8
 5506              		.loc 1 962 38 view .LVU1923
 5507 1186 2D49     		ldr	r1, .L281+12
 5508              		.loc 1 962 16 view .LVU1924
 5509 1188 9A69     		ldr	r2, [r3, #24]
 963:boards/TMC5130_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 964:boards/TMC5130_eval.c **** 	Evalboards.ch1.config->state        = CONFIG_RESET;
 965:boards/TMC5130_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 966:boards/TMC5130_eval.c **** 
 967:boards/TMC5130_eval.c **** 	Evalboards.ch1.rotate               = rotate;
 5510              		.loc 1 967 38 view .LVU1925
 5511 118a 2D48     		ldr	r0, .L281+16
 962:boards/TMC5130_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 5512              		.loc 1 962 38 view .LVU1926
 5513 118c C2F80412 		str	r1, [r2, #516]
 963:boards/TMC5130_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 5514              		.loc 1 963 2 is_stmt 1 view .LVU1927
 963:boards/TMC5130_eval.c **** 	Evalboards.ch1.config->restore      = restore;
 5515              		.loc 1 963 38 is_stmt 0 view .LVU1928
 5516 1190 2C49     		ldr	r1, .L281+20
 5517 1192 C2F80812 		str	r1, [r2, #520]
 964:boards/TMC5130_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 5518              		.loc 1 964 2 is_stmt 1 view .LVU1929
 965:boards/TMC5130_eval.c **** 
 5519              		.loc 1 965 2 view .LVU1930
 964:boards/TMC5130_eval.c **** 	Evalboards.ch1.config->configIndex  = 0;
 5520              		.loc 1 964 38 is_stmt 0 view .LVU1931
 5521 1196 0121     		movs	r1, #1
 5522 1198 1180     		strh	r1, [r2]	@ movhi
 5523              		.loc 1 967 2 is_stmt 1 view .LVU1932
 5524              		.loc 1 967 38 is_stmt 0 view .LVU1933
 5525 119a 5862     		str	r0, [r3, #36]
 968:boards/TMC5130_eval.c **** 	Evalboards.ch1.right                = right;
 5526              		.loc 1 968 2 is_stmt 1 view .LVU1934
 5527              		.loc 1 968 38 is_stmt 0 view .LVU1935
 5528 119c 2A48     		ldr	r0, .L281+24
 5529 119e 1862     		str	r0, [r3, #32]
 969:boards/TMC5130_eval.c **** 	Evalboards.ch1.left                 = left;
 5530              		.loc 1 969 2 is_stmt 1 view .LVU1936
 5531              		.loc 1 969 38 is_stmt 0 view .LVU1937
 5532 11a0 2A48     		ldr	r0, .L281+28
 5533 11a2 D861     		str	r0, [r3, #28]
 970:boards/TMC5130_eval.c **** 	Evalboards.ch1.stop                 = stop;
 5534              		.loc 1 970 2 is_stmt 1 view .LVU1938
 5535              		.loc 1 970 38 is_stmt 0 view .LVU1939
 5536 11a4 2A48     		ldr	r0, .L281+32
 5537 11a6 9862     		str	r0, [r3, #40]
 971:boards/TMC5130_eval.c **** 	Evalboards.ch1.GAP                  = GAP;
 5538              		.loc 1 971 2 is_stmt 1 view .LVU1940
 5539              		.loc 1 971 38 is_stmt 0 view .LVU1941
 5540 11a8 2A48     		ldr	r0, .L281+36
 5541 11aa D863     		str	r0, [r3, #60]
 972:boards/TMC5130_eval.c **** 	Evalboards.ch1.SAP                  = SAP;
 5542              		.loc 1 972 2 is_stmt 1 view .LVU1942
 5543              		.loc 1 972 38 is_stmt 0 view .LVU1943
 5544 11ac 2A48     		ldr	r0, .L281+40
 5545 11ae 9863     		str	r0, [r3, #56]
 973:boards/TMC5130_eval.c **** 	Evalboards.ch1.moveTo               = moveTo;
 5546              		.loc 1 973 2 is_stmt 1 view .LVU1944
 5547              		.loc 1 973 38 is_stmt 0 view .LVU1945
 5548 11b0 2A48     		ldr	r0, .L281+44
 5549 11b2 D862     		str	r0, [r3, #44]
 974:boards/TMC5130_eval.c **** 	Evalboards.ch1.moveBy               = moveBy;
 5550              		.loc 1 974 2 is_stmt 1 view .LVU1946
 5551              		.loc 1 974 38 is_stmt 0 view .LVU1947
 5552 11b4 2A48     		ldr	r0, .L281+48
 5553 11b6 1863     		str	r0, [r3, #48]
 975:boards/TMC5130_eval.c **** 	Evalboards.ch1.writeRegister        = writeRegister;
 5554              		.loc 1 975 2 is_stmt 1 view .LVU1948
 5555              		.loc 1 975 38 is_stmt 0 view .LVU1949
 5556 11b8 2A48     		ldr	r0, .L281+52
 5557 11ba D864     		str	r0, [r3, #76]
 976:boards/TMC5130_eval.c **** 	Evalboards.ch1.readRegister         = readRegister;
 5558              		.loc 1 976 2 is_stmt 1 view .LVU1950
 5559              		.loc 1 976 38 is_stmt 0 view .LVU1951
 5560 11bc 2A48     		ldr	r0, .L281+56
 5561 11be 9864     		str	r0, [r3, #72]
 977:boards/TMC5130_eval.c **** 	Evalboards.ch1.periodicJob          = periodicJob;
 5562              		.loc 1 977 2 is_stmt 1 view .LVU1952
 5563              		.loc 1 977 38 is_stmt 0 view .LVU1953
 5564 11c0 2A48     		ldr	r0, .L281+60
 5565 11c2 9865     		str	r0, [r3, #88]
 978:boards/TMC5130_eval.c **** 	Evalboards.ch1.userFunction         = userFunction;
 5566              		.loc 1 978 2 is_stmt 1 view .LVU1954
 5567              		.loc 1 978 38 is_stmt 0 view .LVU1955
 5568 11c4 2A48     		ldr	r0, .L281+64
 5569 11c6 5865     		str	r0, [r3, #84]
 979:boards/TMC5130_eval.c **** 	Evalboards.ch1.getMeasuredSpeed     = getMeasuredSpeed;
 5570              		.loc 1 979 2 is_stmt 1 view .LVU1956
 5571              		.loc 1 979 38 is_stmt 0 view .LVU1957
 5572 11c8 2A48     		ldr	r0, .L281+68
 5573 11ca 1865     		str	r0, [r3, #80]
 980:boards/TMC5130_eval.c **** 	Evalboards.ch1.enableDriver         = enableDriver;
 5574              		.loc 1 980 2 is_stmt 1 view .LVU1958
 5575              		.loc 1 980 38 is_stmt 0 view .LVU1959
 5576 11cc 2A48     		ldr	r0, .L281+72
 5577 11ce 5866     		str	r0, [r3, #100]
 981:boards/TMC5130_eval.c **** 	Evalboards.ch1.checkErrors          = checkErrors;
 5578              		.loc 1 981 2 is_stmt 1 view .LVU1960
 5579              		.loc 1 981 38 is_stmt 0 view .LVU1961
 5580 11d0 2A48     		ldr	r0, .L281+76
 5581 11d2 1866     		str	r0, [r3, #96]
 982:boards/TMC5130_eval.c **** 	Evalboards.ch1.numberOfMotors       = TMC5130_MOTORS;
 5582              		.loc 1 982 2 is_stmt 1 view .LVU1962
 5583              		.loc 1 982 38 is_stmt 0 view .LVU1963
 5584 11d4 1975     		strb	r1, [r3, #20]
 983:boards/TMC5130_eval.c **** 	Evalboards.ch1.VMMin                = VM_MIN;
 5585              		.loc 1 983 2 is_stmt 1 view .LVU1964
 984:boards/TMC5130_eval.c **** 	Evalboards.ch1.VMMax                = VM_MAX;
 5586              		.loc 1 984 38 is_stmt 0 view .LVU1965
 5587 11d6 3220     		movs	r0, #50
 5588 11d8 4FF4F071 		mov	r1, #480
 5589 11dc C3E90310 		strd	r1, r0, [r3, #12]
 985:boards/TMC5130_eval.c **** 	Evalboards.ch1.deInit               = deInit;
 5590              		.loc 1 985 2 is_stmt 1 view .LVU1966
 5591              		.loc 1 985 38 is_stmt 0 view .LVU1967
 5592 11e0 2749     		ldr	r1, .L281+80
 5593 11e2 D965     		str	r1, [r3, #92]
 986:boards/TMC5130_eval.c **** 
 987:boards/TMC5130_eval.c **** 	tmc5130_init(&TMC5130, 0, Evalboards.ch1.config, &tmc5130_defaultRegisterResetState[0]);
 5594              		.loc 1 987 2 is_stmt 1 view .LVU1968
 5595 11e4 2046     		mov	r0, r4
 5596 11e6 274B     		ldr	r3, .L281+84
 5597 11e8 0021     		movs	r1, #0
 5598 11ea FFF7FEFF 		bl	tmc5130_init
 5599              	.LVL665:
 988:boards/TMC5130_eval.c **** 	tmc5130_setCallback(&TMC5130, configCallback);
 5600              		.loc 1 988 2 view .LVU1969
 5601 11ee 2649     		ldr	r1, .L281+88
 5602 11f0 2046     		mov	r0, r4
 5603 11f2 FFF7FEFF 		bl	tmc5130_setCallback
 5604              	.LVL666:
 989:boards/TMC5130_eval.c **** 
 990:boards/TMC5130_eval.c **** 	vmax_position = TMC5130.config->shadowRegister[TMC5130_VMAX];
 5605              		.loc 1 990 2 view .LVU1970
 5606              		.loc 1 990 48 is_stmt 0 view .LVU1971
 5607 11f6 2368     		ldr	r3, [r4]
 991:boards/TMC5130_eval.c **** 
 992:boards/TMC5130_eval.c **** 	enableDriver(DRIVER_USE_GLOBAL_ENABLE);
 5608              		.loc 1 992 2 view .LVU1972
 5609 11f8 0220     		movs	r0, #2
 990:boards/TMC5130_eval.c **** 
 5610              		.loc 1 990 16 view .LVU1973
 5611 11fa D3F8A030 		ldr	r3, [r3, #160]
 5612 11fe C4F8BC32 		str	r3, [r4, #700]
 5613              		.loc 1 992 2 is_stmt 1 view .LVU1974
 5614 1202 FFF70FFF 		bl	enableDriver
 5615              	.LVL667:
 993:boards/TMC5130_eval.c **** 
 994:boards/TMC5130_eval.c **** #if defined(Startrampe)
 995:boards/TMC5130_eval.c **** 	Pins.AIN_REF_PWM->configuration.GPIO_Mode = GPIO_Mode_AF;
 996:boards/TMC5130_eval.c **** 	GPIO_PinAFConfig(Pins.AIN_REF_PWM->port, Pins.AIN_REF_PWM->bit, GPIO_AF_TIM1);
 997:boards/TMC5130_eval.c **** #elif defined(Landungsbruecke)
 998:boards/TMC5130_eval.c **** 	HAL.IOs->config->toOutput(Pins.AIN_REF_PWM);
 5616              		.loc 1 998 2 view .LVU1975
 5617              		.loc 1 998 17 is_stmt 0 view .LVU1976
 5618 1206 2B68     		ldr	r3, [r5]
 5619              		.loc 1 998 2 view .LVU1977
 5620 1208 D4F8B802 		ldr	r0, [r4, #696]
 5621 120c DB68     		ldr	r3, [r3, #12]
 5622 120e 9847     		blx	r3
 5623              	.LVL668:
 999:boards/TMC5130_eval.c **** 	Pins.AIN_REF_PWM->configuration.GPIO_Mode = GPIO_Mode_AF4;
 5624              		.loc 1 999 2 is_stmt 1 view .LVU1978
 5625              		.loc 1 999 6 is_stmt 0 view .LVU1979
 5626 1210 D4F8B802 		ldr	r0, [r4, #696]
1000:boards/TMC5130_eval.c **** #endif
1001:boards/TMC5130_eval.c **** 
1002:boards/TMC5130_eval.c **** 	HAL.IOs->config->set(Pins.AIN_REF_PWM);
1003:boards/TMC5130_eval.c **** 	Timer.init();
 5627              		.loc 1 1003 7 view .LVU1980
 5628 1214 1D4C     		ldr	r4, .L281+92
 999:boards/TMC5130_eval.c **** 	Pins.AIN_REF_PWM->configuration.GPIO_Mode = GPIO_Mode_AF4;
 5629              		.loc 1 999 44 view .LVU1981
 5630 1216 0423     		movs	r3, #4
 5631 1218 4375     		strb	r3, [r0, #21]
1002:boards/TMC5130_eval.c **** 	Timer.init();
 5632              		.loc 1 1002 2 is_stmt 1 view .LVU1982
1002:boards/TMC5130_eval.c **** 	Timer.init();
 5633              		.loc 1 1002 17 is_stmt 0 view .LVU1983
 5634 121a 2B68     		ldr	r3, [r5]
1002:boards/TMC5130_eval.c **** 	Timer.init();
 5635              		.loc 1 1002 2 view .LVU1984
 5636 121c 1B68     		ldr	r3, [r3]
 5637 121e 9847     		blx	r3
 5638              	.LVL669:
 5639              		.loc 1 1003 2 is_stmt 1 view .LVU1985
 5640 1220 2368     		ldr	r3, [r4]
 5641 1222 9847     		blx	r3
 5642              	.LVL670:
1004:boards/TMC5130_eval.c **** 	Timer.setDuty(TIMER_CHANNEL_1, 0);
 5643              		.loc 1 1004 2 view .LVU1986
 5644 1224 0021     		movs	r1, #0
 5645 1226 A368     		ldr	r3, [r4, #8]
 5646 1228 0846     		mov	r0, r1
1005:boards/TMC5130_eval.c **** };
 5647              		.loc 1 1005 1 is_stmt 0 view .LVU1987
 5648 122a BDE87040 		pop	{r4, r5, r6, lr}
 5649              	.LCFI18:
 5650              		.cfi_restore 14
 5651              		.cfi_restore 6
 5652              		.cfi_restore 5
 5653              		.cfi_restore 4
 5654              		.cfi_def_cfa_offset 0
1004:boards/TMC5130_eval.c **** 	Timer.setDuty(TIMER_CHANNEL_1, 0);
 5655              		.loc 1 1004 2 view .LVU1988
 5656 122e 1847     		bx	r3	@ indirect register sibling call
 5657              	.LVL671:
 5658              	.L282:
 5659              		.align	2
 5660              	.L281:
 5661 1230 00000000 		.word	HAL
 5662 1234 00000000 		.word	.LANCHOR0
 5663 1238 00000000 		.word	Evalboards
 5664 123c 00000000 		.word	reset
 5665 1240 00000000 		.word	rotate
 5666 1244 00000000 		.word	restore
 5667 1248 00000000 		.word	right
 5668 124c 00000000 		.word	left
 5669 1250 00000000 		.word	stop
 5670 1254 00000000 		.word	GAP
 5671 1258 00000000 		.word	SAP
 5672 125c 00000000 		.word	moveTo
 5673 1260 00000000 		.word	moveBy
 5674 1264 00000000 		.word	writeRegister
 5675 1268 00000000 		.word	readRegister
 5676 126c 00000000 		.word	periodicJob
 5677 1270 00000000 		.word	userFunction
 5678 1274 00000000 		.word	getMeasuredSpeed
 5679 1278 00000000 		.word	enableDriver
 5680 127c 00000000 		.word	checkErrors
 5681 1280 00000000 		.word	deInit
 5682 1284 00000000 		.word	.LANCHOR1
 5683 1288 00000000 		.word	configCallback
 5684 128c 00000000 		.word	Timer
 5685              		.cfi_endproc
 5686              	.LFE24:
 5688              		.comm	TMCMotionController,532,4
 5689              		.comm	TMCDriver,532,4
 5690              		.comm	Evalboards,244,4
 5691              		.comm	VitalSignsMonitor,20,4
 5692              		.comm	hwid,1,1
 5693              		.comm	HAL,48,4
 5694              		.comm	UART,40,4
 5695              		.comm	Timer,16,4
 5696              		.comm	WLAN,36,4
 5697              		.comm	RS232,36,4
 5698              		.comm	LEDs,28,4
 5699              		.comm	USB,36,4
 5700              		.comm	uart0_interrupt,1,1
 5701              		.comm	ADCs,32,4
 5702              		.comm	SPI,44,4
 5703              		.comm	IOMap,2088,4
 5704              		.comm	IOs,52,4
 5705              		.comm	Cpu,8,4
 5706              		.section	.rodata
 5707              		.align	2
 5708              		.set	.LANCHOR1,. + 0
 5711              	tmc5130_defaultRegisterResetState:
 5712 0000 00000000 		.word	0
 5713 0004 00000000 		.word	0
 5714 0008 00000000 		.word	0
 5715 000c 00000000 		.word	0
 5716 0010 00000000 		.word	0
 5717 0014 00000000 		.word	0
 5718 0018 00000000 		.word	0
 5719 001c 00000000 		.word	0
 5720 0020 00000000 		.word	0
 5721 0024 00000000 		.word	0
 5722 0028 00000000 		.word	0
 5723 002c 00000000 		.word	0
 5724 0030 00000000 		.word	0
 5725 0034 00000000 		.word	0
 5726 0038 00000000 		.word	0
 5727 003c 00000000 		.word	0
 5728 0040 03170700 		.word	464643
 5729 0044 00000000 		.word	0
 5730 0048 00000000 		.word	0
 5731 004c 00000000 		.word	0
 5732 0050 00000000 		.word	0
 5733 0054 00000000 		.word	0
 5734 0058 00000000 		.word	0
 5735 005c 00000000 		.word	0
 5736 0060 00000000 		.word	0
 5737 0064 00000000 		.word	0
 5738 0068 00000000 		.word	0
 5739 006c 00000000 		.word	0
 5740 0070 00000000 		.word	0
 5741 0074 00000000 		.word	0
 5742 0078 00000000 		.word	0
 5743 007c 00000000 		.word	0
 5744 0080 00000000 		.word	0
 5745 0084 00000000 		.word	0
 5746 0088 00000000 		.word	0
 5747 008c 00000000 		.word	0
 5748 0090 00000000 		.word	0
 5749 0094 00000000 		.word	0
 5750 0098 00000000 		.word	0
 5751 009c 00000000 		.word	0
 5752 00a0 00000000 		.word	0
 5753 00a4 00000000 		.word	0
 5754 00a8 00000000 		.word	0
 5755 00ac 00000000 		.word	0
 5756 00b0 00000000 		.word	0
 5757 00b4 00000000 		.word	0
 5758 00b8 00000000 		.word	0
 5759 00bc 00000000 		.word	0
 5760 00c0 00000000 		.word	0
 5761 00c4 00000000 		.word	0
 5762 00c8 00000000 		.word	0
 5763 00cc 00000000 		.word	0
 5764 00d0 00000000 		.word	0
 5765 00d4 00000000 		.word	0
 5766 00d8 00000000 		.word	0
 5767 00dc 00000000 		.word	0
 5768 00e0 00000000 		.word	0
 5769 00e4 00000000 		.word	0
 5770 00e8 00000100 		.word	65536
 5771 00ec 00000000 		.word	0
 5772 00f0 00000000 		.word	0
 5773 00f4 00000000 		.word	0
 5774 00f8 00000000 		.word	0
 5775 00fc 00000000 		.word	0
 5776 0100 00000000 		.word	0
 5777 0104 00000000 		.word	0
 5778 0108 00000000 		.word	0
 5779 010c 00000000 		.word	0
 5780 0110 00000000 		.word	0
 5781 0114 00000000 		.word	0
 5782 0118 00000000 		.word	0
 5783 011c 00000000 		.word	0
 5784 0120 00000000 		.word	0
 5785 0124 00000000 		.word	0
 5786 0128 00000000 		.word	0
 5787 012c 00000000 		.word	0
 5788 0130 00000000 		.word	0
 5789 0134 00000000 		.word	0
 5790 0138 00000000 		.word	0
 5791 013c 00000000 		.word	0
 5792 0140 00000000 		.word	0
 5793 0144 00000000 		.word	0
 5794 0148 00000000 		.word	0
 5795 014c 00000000 		.word	0
 5796 0150 00000000 		.word	0
 5797 0154 00000000 		.word	0
 5798 0158 00000000 		.word	0
 5799 015c 00000000 		.word	0
 5800 0160 00000000 		.word	0
 5801 0164 00000000 		.word	0
 5802 0168 00000000 		.word	0
 5803 016c 00000000 		.word	0
 5804 0170 00000000 		.word	0
 5805 0174 00000000 		.word	0
 5806 0178 00000000 		.word	0
 5807 017c 00000000 		.word	0
 5808 0180 00000000 		.word	0
 5809 0184 00000000 		.word	0
 5810 0188 00000000 		.word	0
 5811 018c 00000000 		.word	0
 5812 0190 00000000 		.word	0
 5813 0194 00000000 		.word	0
 5814 0198 00000000 		.word	0
 5815 019c 00000000 		.word	0
 5816 01a0 00000000 		.word	0
 5817 01a4 00000000 		.word	0
 5818 01a8 00000000 		.word	0
 5819 01ac 00000000 		.word	0
 5820 01b0 D5010100 		.word	66005
 5821 01b4 00000000 		.word	0
 5822 01b8 00000000 		.word	0
 5823 01bc 00000000 		.word	0
 5824 01c0 00000000 		.word	0
 5825 01c4 00000000 		.word	0
 5826 01c8 00000000 		.word	0
 5827 01cc 00000000 		.word	0
 5828 01d0 00000000 		.word	0
 5829 01d4 00000000 		.word	0
 5830 01d8 00000000 		.word	0
 5831 01dc 00000000 		.word	0
 5832 01e0 00000000 		.word	0
 5833 01e4 00000000 		.word	0
 5834 01e8 00000000 		.word	0
 5835 01ec 00000000 		.word	0
 5836 01f0 00000000 		.word	0
 5837 01f4 00000000 		.word	0
 5838 01f8 00000000 		.word	0
 5839 01fc 00000000 		.word	0
 5840              		.bss
 5841              		.align	2
 5842              		.set	.LANCHOR0,. + 0
 5845              	TMC5130:
 5846 0000 00000000 		.space	656
 5846      00000000 
 5846      00000000 
 5846      00000000 
 5846      00000000 
 5849              	Pins:
 5850 0290 00000000 		.space	44
 5850      00000000 
 5850      00000000 
 5850      00000000 
 5850      00000000 
 5853              	vmax_position:
 5854 02bc 00000000 		.space	4
 5857              	TMC5130_SPIChannel:
 5858 02c0 00000000 		.space	4
 5861              	ADCValue:
 5862 02c4 00000000 		.space	12
 5862      00000000 
 5862      00000000 
 5863              		.text
 5864              	.Letext0:
 5865              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 5866              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5867              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5868              		.file 5 "TMC-API/tmc/helpers/Types.h"
 5869              		.file 6 "TMC-API/tmc/helpers/Config.h"
 5870              		.file 7 "TMC-API/tmc/helpers/RegisterAccess.h"
 5871              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5872              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 5873              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 5874              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 5875              		.file 12 "TMC-API/tmc/helpers/API_Header.h"
 5876              		.file 13 "hal/Landungsbruecke/freescale/MK20D10.h"
 5877              		.file 14 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 5878              		.file 15 "./hal/Landungsbruecke/freescale/Cpu.h"
 5879              		.file 16 "./hal/IOs.h"
 5880              		.file 17 "./hal/IOMap.h"
 5881              		.file 18 "./hal/SPI.h"
 5882              		.file 19 "./hal/ADCs.h"
 5883              		.file 20 "./hal/RXTX.h"
 5884              		.file 21 "./hal/USB.h"
 5885              		.file 22 "./hal/LEDs.h"
 5886              		.file 23 "./hal/RS232.h"
 5887              		.file 24 "./hal/WLAN.h"
 5888              		.file 25 "./hal/Timer.h"
 5889              		.file 26 "./hal/UART.h"
 5890              		.file 27 "./hal/HAL.h"
 5891              		.file 28 "./tmc/VitalSignsMonitor.h"
 5892              		.file 29 "boards/Board.h"
 5893              		.file 30 "boards/TMCDriver.h"
 5894              		.file 31 "boards/TMCMotionController.h"
 5895              		.file 32 "TMC-API/tmc/ic/TMC5130/TMC5130.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC5130_eval.c
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:22     .text:00000000 getMeasuredSpeed
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:52     .text:00000010 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:56     .text:00000014 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:62     .text:00000014 checkErrors
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:81     .text:0000001c $d
                            *COM*:000000f4 Evalboards
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:85     .text:00000020 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:91     .text:00000020 userFunction
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:124    .text:00000032 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:456    .text:000001a4 $d
                            *COM*:00000030 HAL
                            *COM*:00000010 Timer
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:462    .text:000001b0 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:468    .text:000001b0 deInit
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:602    .text:0000023c $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:608    .text:00000248 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:614    .text:00000248 writeRegister
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:633    .text:00000250 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:637    .text:00000254 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:643    .text:00000254 periodicJob
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:664    .text:0000025c $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:668    .text:00000260 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:674    .text:00000260 readRegister
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:706    .text:00000270 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:710    .text:00000274 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:716    .text:00000274 handleParameter
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:750    .text:0000028e $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:785    .text:000002d4 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:795    .text:000002e0 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:867    .text:0000036e $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:1917   .text:00000628 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:1922   .text:0000062c $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:2494   .text:000007de $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:2502   .text:000007e6 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:2799   .text:000008e0 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:2812   .text:000008e8 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:3694   .text:00000bd4 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:3699   .text:00000bd8 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4556   .text:00000ed0 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4562   .text:00000ed8 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4670   .text:00000f48 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4674   .text:00000f4c $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4680   .text:00000f4c SAP
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4720   .text:00000f60 GAP
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4750   .text:00000f6a moveBy
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4785   .text:00000f7c $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4789   .text:00000f80 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4795   .text:00000f80 moveTo
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4830   .text:00000f90 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4834   .text:00000f94 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4840   .text:00000f94 stop
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4874   .text:00000fa0 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4878   .text:00000fa4 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4884   .text:00000fa4 left
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4918   .text:00000fb0 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4922   .text:00000fb4 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4928   .text:00000fb4 right
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4962   .text:00000fc0 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4966   .text:00000fc4 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:4972   .text:00000fc4 rotate
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5006   .text:00000fd0 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5010   .text:00000fd4 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5016   .text:00000fd4 restore
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5031   .text:00000fdc $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5035   .text:00000fe0 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5041   .text:00000fe0 reset
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5105   .text:0000101c $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5110   .text:00001024 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5116   .text:00001024 enableDriver
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5192   .text:0000105c $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5198   .text:00001068 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5204   .text:00001068 configCallback
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5261   .text:00001084 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5266   .text:0000108c $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5273   .text:0000108c tmc5130_readWriteArray
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5308   .text:0000109c $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5312   .text:000010a0 $t
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5319   .text:000010a0 TMC5130_init
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5661   .text:00001230 $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5707   .rodata:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5711   .rodata:00000000 tmc5130_defaultRegisterResetState
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5841   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5845   .bss:00000000 TMC5130
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5849   .bss:00000290 Pins
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5853   .bss:000002bc vmax_position
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5857   .bss:000002c0 TMC5130_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:5861   .bss:000002c4 ADCValue
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:132    .text:00000039 $d
C:\Users\Shubham\AppData\Local\Temp\cc9yT8ng.s:132    .text:0000003a $t

UNDEFINED SYMBOLS
tmc5130_writeInt
tmc5130_periodicJob
tmc5130_readInt
tmc5130_moveBy
tmc5130_moveTo
tmc5130_stop
tmc5130_left
tmc5130_right
tmc5130_rotate
tmc5130_restore
tmc5130_reset
tmc5130_fillShadowRegisters
tmc5130_init
tmc5130_setCallback
