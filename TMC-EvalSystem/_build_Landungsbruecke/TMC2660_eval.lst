   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"TMC2660_eval.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.arch armv7e-m
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	userFunction:
  23              	.LVL0:
  24              	.LFB6:
  25              		.file 1 "boards/TMC2660_eval.c"
   1:boards/TMC2660_eval.c **** #include "tmc/StepDir.h"
   2:boards/TMC2660_eval.c **** 
   3:boards/TMC2660_eval.c **** #include "Board.h"
   4:boards/TMC2660_eval.c **** #include "tmc/ic/TMC2660/TMC2660.h"
   5:boards/TMC2660_eval.c **** 
   6:boards/TMC2660_eval.c **** #undef  TMC2660_MAX_VELOCITY
   7:boards/TMC2660_eval.c **** #define TMC2660_MAX_VELOCITY  STEPDIR_MAX_VELOCITY
   8:boards/TMC2660_eval.c **** 
   9:boards/TMC2660_eval.c **** // Stepdir precision: 2^17 -> 17 digits of precision
  10:boards/TMC2660_eval.c **** #define STEPDIR_PRECISION (1 << 17)
  11:boards/TMC2660_eval.c **** 
  12:boards/TMC2660_eval.c **** #define ERRORS_I_STS          (1<<0)  // stand still current too high
  13:boards/TMC2660_eval.c **** #define ERRORS_I_TIMEOUT_STS  (1<<1)  // current limited in stand still to prevent driver from dema
  14:boards/TMC2660_eval.c **** 
  15:boards/TMC2660_eval.c **** #define VM_MIN  50   // VM[V/10] min
  16:boards/TMC2660_eval.c **** #define VM_MAX  600  // VM[V/10] max +10%
  17:boards/TMC2660_eval.c **** 
  18:boards/TMC2660_eval.c **** #define MOTORS 1
  19:boards/TMC2660_eval.c **** 
  20:boards/TMC2660_eval.c **** #define I_STAND_STILL 5
  21:boards/TMC2660_eval.c **** #define T_STAND_STILL 1000
  22:boards/TMC2660_eval.c **** 
  23:boards/TMC2660_eval.c **** #define DEFAULT_MOTOR 0
  24:boards/TMC2660_eval.c **** 
  25:boards/TMC2660_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity);
  26:boards/TMC2660_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity);
  27:boards/TMC2660_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity);
  28:boards/TMC2660_eval.c **** static uint32_t stop(uint8_t motor);
  29:boards/TMC2660_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position);
  30:boards/TMC2660_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks);
  31:boards/TMC2660_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value);
  32:boards/TMC2660_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value);
  33:boards/TMC2660_eval.c **** static void readRegister(uint8_t motor, uint8_t address,	int32_t *value);
  34:boards/TMC2660_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value);
  35:boards/TMC2660_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value);
  36:boards/TMC2660_eval.c **** 
  37:boards/TMC2660_eval.c **** static void periodicJob(uint32_t tick);
  38:boards/TMC2660_eval.c **** static void deInit(void);
  39:boards/TMC2660_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value);
  40:boards/TMC2660_eval.c **** 
  41:boards/TMC2660_eval.c **** static uint8_t reset();
  42:boards/TMC2660_eval.c **** static void enableDriver(DriverState state);
  43:boards/TMC2660_eval.c **** 
  44:boards/TMC2660_eval.c **** static void on_standstill_changed(uint8_t newStandstill);
  45:boards/TMC2660_eval.c **** 
  46:boards/TMC2660_eval.c **** void tmc2660_writeInt(uint8_t motor, uint8_t address, int value);
  47:boards/TMC2660_eval.c **** uint32_t tmc2660_readInt(uint8_t motor, uint8_t address);
  48:boards/TMC2660_eval.c **** 
  49:boards/TMC2660_eval.c **** static uint32_t compatibilityMode = 1;
  50:boards/TMC2660_eval.c **** 
  51:boards/TMC2660_eval.c **** static SPIChannelTypeDef *TMC2660_SPIChannel;
  52:boards/TMC2660_eval.c **** static TMC2660TypeDef TMC2660;
  53:boards/TMC2660_eval.c **** static ConfigurationTypeDef *TMC2660_config;
  54:boards/TMC2660_eval.c **** 
  55:boards/TMC2660_eval.c **** typedef struct
  56:boards/TMC2660_eval.c **** {
  57:boards/TMC2660_eval.c **** 	IOPinTypeDef  *CSN;
  58:boards/TMC2660_eval.c **** 	IOPinTypeDef  *STEP;
  59:boards/TMC2660_eval.c **** 	IOPinTypeDef  *DIR;
  60:boards/TMC2660_eval.c **** 	IOPinTypeDef  *ENN;
  61:boards/TMC2660_eval.c **** 	IOPinTypeDef  *SG_TST;
  62:boards/TMC2660_eval.c **** 	IOPinTypeDef  *TEMP_BRIDGE;
  63:boards/TMC2660_eval.c **** } PinsTypeDef;
  64:boards/TMC2660_eval.c **** 
  65:boards/TMC2660_eval.c **** static PinsTypeDef Pins;
  66:boards/TMC2660_eval.c **** 
  67:boards/TMC2660_eval.c **** void readWrite(uint32_t datagram)
  68:boards/TMC2660_eval.c **** {	// sending data (value) via spi to TMC262, coping written and received data to shadow register
  69:boards/TMC2660_eval.c **** 	static uint8_t rdsel = 0; // number of expected read response
  70:boards/TMC2660_eval.c **** 
  71:boards/TMC2660_eval.c **** // if SGCONF should be written, check whether stand still, or run current should be used
  72:boards/TMC2660_eval.c **** //	if(TMC2660_GET_ADDRESS(datagram) == TMC2660_SGCSCONF)
  73:boards/TMC2660_eval.c **** //	{
  74:boards/TMC2660_eval.c **** //		datagram &= ~TMC2660_SET_CS(-1); // clear CS field
  75:boards/TMC2660_eval.c **** //		datagram |= (TMC2660.isStandStillCurrentLimit) ?  TMC2660_SET_CS(TMC2660.standStillCurrentScale
  76:boards/TMC2660_eval.c **** //	}
  77:boards/TMC2660_eval.c **** 
  78:boards/TMC2660_eval.c **** // write value and read reply to shadow register
  79:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  = TMC2660_SPIChannel->readWrite(datagram>>16, 0);
  80:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
  81:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  |= TMC2660_SPIChannel->readWrite(datagram>>8, 0);
  82:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
  83:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  |= TMC2660_SPIChannel->readWrite(datagram & 0xFF, 1);
  84:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  >>= 4;
  85:boards/TMC2660_eval.c **** 
  86:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[TMC2660_RESPONSE_LATEST] = TMC2660_config->shadowRegister[rdsel]; /
  87:boards/TMC2660_eval.c **** 
  88:boards/TMC2660_eval.c **** // set virtual read address for next reply given by RDSEL, can only change by setting RDSEL in DRVC
  89:boards/TMC2660_eval.c **** 	if(TMC2660_GET_ADDRESS(datagram) == TMC2660_DRVCONF)
  90:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(datagram);
  91:boards/TMC2660_eval.c **** 
  92:boards/TMC2660_eval.c **** // write store written value to shadow register
  93:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[TMC2660_GET_ADDRESS(datagram) | TMC2660_WRITE_BIT ] = datagram;
  94:boards/TMC2660_eval.c **** }
  95:boards/TMC2660_eval.c **** 
  96:boards/TMC2660_eval.c **** void readImmediately(uint8_t rdsel)
  97:boards/TMC2660_eval.c **** { // sets desired reply in DRVCONF register, resets it to previous settings whilst reading desired 
  98:boards/TMC2660_eval.c **** 	uint32_t value, drvConf;
  99:boards/TMC2660_eval.c **** 
 100:boards/TMC2660_eval.c **** // additional reading to keep all replies up to date
 101:boards/TMC2660_eval.c **** 	value = tmc2660_readInt(0, TMC2660_WRITE_BIT | TMC2660_DRVCONF);  // buffer value amd  drvConf to 
 102:boards/TMC2660_eval.c **** 	drvConf = value;
 103:boards/TMC2660_eval.c **** 	value &= ~TMC2660_SET_RDSEL(-1);                              // clear RDSEL bits
 104:boards/TMC2660_eval.c **** 	value |= TMC2660_SET_RDSEL(rdsel%3);                          // set rdsel
 105:boards/TMC2660_eval.c **** 	readWrite(value);                                             // write to chip and readout reply
 106:boards/TMC2660_eval.c **** 	readWrite(drvConf);                                           // write to chip and return desired 
 107:boards/TMC2660_eval.c **** }
 108:boards/TMC2660_eval.c **** 
 109:boards/TMC2660_eval.c **** // => SPI wrapper
 110:boards/TMC2660_eval.c **** void tmc2660_writeInt(uint8_t motor, uint8_t address, int value)
 111:boards/TMC2660_eval.c **** {
 112:boards/TMC2660_eval.c **** 	UNUSED(motor);
 113:boards/TMC2660_eval.c **** 
 114:boards/TMC2660_eval.c **** 	// tmc2660_writeDatagram(address, 0xFF & (value>>24), 0xFF & (value>>16), 0xFF & (value>>8), 0xFF 
 115:boards/TMC2660_eval.c **** 	value &= 0x0FFFFF;
 116:boards/TMC2660_eval.c **** 
 117:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[0x7F & (address | TMC2660_WRITE_BIT)] = value;
 118:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 119:boards/TMC2660_eval.c **** 		readWrite(TMC2660_DATAGRAM(address, value));
 120:boards/TMC2660_eval.c **** }
 121:boards/TMC2660_eval.c **** 
 122:boards/TMC2660_eval.c **** uint32_t tmc2660_readInt(uint8_t motor, uint8_t address)
 123:boards/TMC2660_eval.c **** {
 124:boards/TMC2660_eval.c **** 	UNUSED(motor);
 125:boards/TMC2660_eval.c **** 
 126:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable && !(address & TMC2660_WRITE_BIT))
 127:boards/TMC2660_eval.c **** 		readImmediately(address);
 128:boards/TMC2660_eval.c **** 
 129:boards/TMC2660_eval.c **** 	return TMC2660_config->shadowRegister[0x7F & address];
 130:boards/TMC2660_eval.c **** }
 131:boards/TMC2660_eval.c **** 
 132:boards/TMC2660_eval.c **** void tmc2660_readWrite(uint8_t motor, uint32_t value)
 133:boards/TMC2660_eval.c **** {
 134:boards/TMC2660_eval.c **** 	UNUSED(motor);
 135:boards/TMC2660_eval.c **** 
 136:boards/TMC2660_eval.c **** 	static uint8_t rdsel = 0; // number of expected read response
 137:boards/TMC2660_eval.c **** 
 138:boards/TMC2660_eval.c **** 	// if SGCONF should be written, check whether stand still, or run current should be used
 139:boards/TMC2660_eval.c **** //	if(TMC2660_GET_ADDRESS(value) == TMC2660_SGCSCONF)
 140:boards/TMC2660_eval.c **** //	{
 141:boards/TMC2660_eval.c **** //		value &= ~TMC2660_SET_CS(-1); // clear CS field
 142:boards/TMC2660_eval.c **** //		value |= (TMC2660.isStandStillCurrentLimit) ?  TMC2660_SET_CS(TMC2660.standStillCurrentScale) :
 143:boards/TMC2660_eval.c **** //	}
 144:boards/TMC2660_eval.c **** 
 145:boards/TMC2660_eval.c **** 	// write value and read reply to shadow register
 146:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] = TMC2660_SPIChannel->readWrite(value>>16, 0);
 147:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 148:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] |= TMC2660_SPIChannel->readWrite(value>>8, 0);
 149:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 150:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] |= TMC2660_SPIChannel->readWrite(value & 0xFF, 1);
 151:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] >>= 4;
 152:boards/TMC2660_eval.c **** 
 153:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[TMC2660_RESPONSE_LATEST] = TMC2660_config->shadowRegister[rdsel]; /
 154:boards/TMC2660_eval.c **** 
 155:boards/TMC2660_eval.c **** 	// set virtual read address for next reply given by RDSEL, can only change by setting RDSEL in DRV
 156:boards/TMC2660_eval.c **** 	if(TMC2660_GET_ADDRESS(value) == TMC2660_DRVCONF)
 157:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(value);
 158:boards/TMC2660_eval.c **** 
 159:boards/TMC2660_eval.c **** 	// write store written value to shadow register
 160:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[TMC2660_GET_ADDRESS(value) | TMC2660_WRITE_BIT ] = value;
 161:boards/TMC2660_eval.c **** }
 162:boards/TMC2660_eval.c **** 
 163:boards/TMC2660_eval.c **** static uint32_t userFunction(uint8_t type, uint8_t motor, int32_t *value)
 164:boards/TMC2660_eval.c **** {
  26              		.loc 1 164 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
 165:boards/TMC2660_eval.c **** 	uint32_t errors = 0;
  30              		.loc 1 165 2 view .LVU1
 166:boards/TMC2660_eval.c **** 
 167:boards/TMC2660_eval.c **** 	UNUSED(motor);
  31              		.loc 1 167 2 view .LVU2
 168:boards/TMC2660_eval.c **** 
 169:boards/TMC2660_eval.c **** 	switch(type)
  32              		.loc 1 169 2 view .LVU3
 164:boards/TMC2660_eval.c **** 	uint32_t errors = 0;
  33              		.loc 1 164 1 is_stmt 0 view .LVU4
  34 0000 0346     		mov	r3, r0
  35              		.loc 1 169 2 view .LVU5
  36 0002 012B     		cmp	r3, #1
 164:boards/TMC2660_eval.c **** 	uint32_t errors = 0;
  37              		.loc 1 164 1 view .LVU6
  38 0004 10B5     		push	{r4, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 4, -8
  42              		.cfi_offset 14, -4
 164:boards/TMC2660_eval.c **** 	uint32_t errors = 0;
  43              		.loc 1 164 1 view .LVU7
  44 0006 0846     		mov	r0, r1
  45              	.LVL1:
 164:boards/TMC2660_eval.c **** 	uint32_t errors = 0;
  46              		.loc 1 164 1 view .LVU8
  47 0008 1446     		mov	r4, r2
  48              		.loc 1 169 2 view .LVU9
  49 000a 0AD0     		beq	.L2
  50 000c 022B     		cmp	r3, #2
  51 000e 0FD0     		beq	.L3
  52 0010 93B9     		cbnz	r3, .L5
 170:boards/TMC2660_eval.c **** 	{
 171:boards/TMC2660_eval.c **** 	case 0:	// disable continuos read/write mode - used in BoardAssignment.c for the combination TMC43
 172:boards/TMC2660_eval.c **** 		// In continuos read/write mode settings will be continously written to TMC2660 and all replies a
 173:boards/TMC2660_eval.c **** 		// It's the default mode to prevent TMC2660 from loosing setting on brownout and being alway up t
 174:boards/TMC2660_eval.c **** 		TMC2660.continuousModeEnable = *value ? 0 : 1;
  53              		.loc 1 174 3 is_stmt 1 view .LVU10
  54              		.loc 1 174 45 is_stmt 0 view .LVU11
  55 0012 1268     		ldr	r2, [r2]
  56              	.LVL2:
  57              		.loc 1 174 45 view .LVU12
  58 0014 0949     		ldr	r1, .L7
  59              	.LVL3:
  60              		.loc 1 174 45 view .LVU13
  61 0016 B2FA82F2 		clz	r2, r2
  62 001a 5209     		lsrs	r2, r2, #5
  63 001c 8A72     		strb	r2, [r1, #10]
 175:boards/TMC2660_eval.c **** 		break;
  64              		.loc 1 175 3 is_stmt 1 view .LVU14
  65              	.L6:
 176:boards/TMC2660_eval.c **** 	case 1:	// disable compatibility mode
 177:boards/TMC2660_eval.c **** 		// per default compability mode is enabled,
 178:boards/TMC2660_eval.c **** 		// saying firmware works with orl TMC2660-Eval Tool
 179:boards/TMC2660_eval.c **** 		// e.g. stallGuard value is only
 180:boards/TMC2660_eval.c **** 		compatibilityMode = *value ? 0 : 1;
 181:boards/TMC2660_eval.c **** 		break;
 182:boards/TMC2660_eval.c **** 	case 2:  // Read StepDir status bits
 183:boards/TMC2660_eval.c **** 		*value = StepDir_getStatus(motor);
 184:boards/TMC2660_eval.c **** 		break;
  66              		.loc 1 184 3 view .LVU15
 165:boards/TMC2660_eval.c **** 
  67              		.loc 1 165 11 is_stmt 0 view .LVU16
  68 001e 0020     		movs	r0, #0
  69              	.LVL4:
  70              	.L1:
 185:boards/TMC2660_eval.c **** 	default:
 186:boards/TMC2660_eval.c **** 		errors |= TMC_ERROR_TYPE;
 187:boards/TMC2660_eval.c **** 		break;
 188:boards/TMC2660_eval.c **** 	}
 189:boards/TMC2660_eval.c **** 
 190:boards/TMC2660_eval.c **** 	return errors;
 191:boards/TMC2660_eval.c **** }
  71              		.loc 1 191 1 view .LVU17
  72 0020 10BD     		pop	{r4, pc}
  73              	.LVL5:
  74              	.L2:
 180:boards/TMC2660_eval.c **** 		break;
  75              		.loc 1 180 3 is_stmt 1 view .LVU18
 180:boards/TMC2660_eval.c **** 		break;
  76              		.loc 1 180 34 is_stmt 0 view .LVU19
  77 0022 1368     		ldr	r3, [r2]
 180:boards/TMC2660_eval.c **** 		break;
  78              		.loc 1 180 21 view .LVU20
  79 0024 064A     		ldr	r2, .L7+4
  80              	.LVL6:
 180:boards/TMC2660_eval.c **** 		break;
  81              		.loc 1 180 34 view .LVU21
  82 0026 B3FA83F3 		clz	r3, r3
  83 002a 5B09     		lsrs	r3, r3, #5
 180:boards/TMC2660_eval.c **** 		break;
  84              		.loc 1 180 21 view .LVU22
  85 002c 1360     		str	r3, [r2]
 181:boards/TMC2660_eval.c **** 	case 2:  // Read StepDir status bits
  86              		.loc 1 181 3 is_stmt 1 view .LVU23
  87 002e F6E7     		b	.L6
  88              	.LVL7:
  89              	.L3:
 183:boards/TMC2660_eval.c **** 		break;
  90              		.loc 1 183 3 view .LVU24
 183:boards/TMC2660_eval.c **** 		break;
  91              		.loc 1 183 12 is_stmt 0 view .LVU25
  92 0030 FFF7FEFF 		bl	StepDir_getStatus
  93              	.LVL8:
 183:boards/TMC2660_eval.c **** 		break;
  94              		.loc 1 183 12 view .LVU26
  95 0034 2060     		str	r0, [r4]
  96 0036 F2E7     		b	.L6
  97              	.LVL9:
  98              	.L5:
 169:boards/TMC2660_eval.c **** 	{
  99              		.loc 1 169 2 view .LVU27
 100 0038 0420     		movs	r0, #4
 101              	.LVL10:
 190:boards/TMC2660_eval.c **** }
 102              		.loc 1 190 2 is_stmt 1 view .LVU28
 190:boards/TMC2660_eval.c **** }
 103              		.loc 1 190 9 is_stmt 0 view .LVU29
 104 003a F1E7     		b	.L1
 105              	.L8:
 106              		.align	2
 107              	.L7:
 108 003c 00000000 		.word	.LANCHOR0
 109 0040 00000000 		.word	.LANCHOR1
 110              		.cfi_endproc
 111              	.LFE6:
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu softvfp
 119              	moveTo:
 120              	.LVL11:
 121              	.LFB11:
 192:boards/TMC2660_eval.c **** 
 193:boards/TMC2660_eval.c **** static uint32_t rotate(uint8_t motor, int32_t velocity)
 194:boards/TMC2660_eval.c **** {
 195:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 196:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 197:boards/TMC2660_eval.c **** 
 198:boards/TMC2660_eval.c **** 	TMC2660.isStandStillCurrentLimit  = 0;
 199:boards/TMC2660_eval.c **** 	TMC2660.isStandStillOverCurrent   = 0;
 200:boards/TMC2660_eval.c **** 
 201:boards/TMC2660_eval.c **** 	StepDir_rotate(motor, velocity);
 202:boards/TMC2660_eval.c **** 
 203:boards/TMC2660_eval.c **** 	return TMC_ERROR_NONE;
 204:boards/TMC2660_eval.c **** }
 205:boards/TMC2660_eval.c **** 
 206:boards/TMC2660_eval.c **** static uint32_t right(uint8_t motor, int32_t velocity)
 207:boards/TMC2660_eval.c **** {
 208:boards/TMC2660_eval.c **** 	return rotate(motor, velocity);
 209:boards/TMC2660_eval.c **** }
 210:boards/TMC2660_eval.c **** 
 211:boards/TMC2660_eval.c **** static uint32_t left(uint8_t motor, int32_t velocity)
 212:boards/TMC2660_eval.c **** {
 213:boards/TMC2660_eval.c **** 	return rotate(motor, -velocity);
 214:boards/TMC2660_eval.c **** }
 215:boards/TMC2660_eval.c **** 
 216:boards/TMC2660_eval.c **** static uint32_t stop(uint8_t motor)
 217:boards/TMC2660_eval.c **** {
 218:boards/TMC2660_eval.c **** 	return rotate(motor, 0);
 219:boards/TMC2660_eval.c **** }
 220:boards/TMC2660_eval.c **** 
 221:boards/TMC2660_eval.c **** static uint32_t moveTo(uint8_t motor, int32_t position)
 222:boards/TMC2660_eval.c **** {
 122              		.loc 1 222 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 223:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 126              		.loc 1 223 2 view .LVU31
 222:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 127              		.loc 1 222 1 is_stmt 0 view .LVU32
 128 0044 10B5     		push	{r4, lr}
 129              	.LCFI1:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 133              		.loc 1 223 4 view .LVU33
 134 0046 0446     		mov	r4, r0
 135 0048 18B9     		cbnz	r0, .L11
 224:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 225:boards/TMC2660_eval.c **** 
 226:boards/TMC2660_eval.c **** 	StepDir_moveTo(motor, position);
 136              		.loc 1 226 2 is_stmt 1 view .LVU34
 137 004a FFF7FEFF 		bl	StepDir_moveTo
 138              	.LVL12:
 227:boards/TMC2660_eval.c **** 
 228:boards/TMC2660_eval.c **** 	return TMC_ERROR_NONE;
 139              		.loc 1 228 2 view .LVU35
 140              		.loc 1 228 9 is_stmt 0 view .LVU36
 141 004e 2046     		mov	r0, r4
 142              	.L9:
 229:boards/TMC2660_eval.c **** }
 143              		.loc 1 229 1 view .LVU37
 144 0050 10BD     		pop	{r4, pc}
 145              	.LVL13:
 146              	.L11:
 224:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 147              		.loc 1 224 10 view .LVU38
 148 0052 0820     		movs	r0, #8
 149              	.LVL14:
 224:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 150              		.loc 1 224 10 view .LVU39
 151 0054 FCE7     		b	.L9
 152              		.cfi_endproc
 153              	.LFE11:
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	restore:
 162              	.LFB23:
 230:boards/TMC2660_eval.c **** 
 231:boards/TMC2660_eval.c **** static uint32_t moveBy(uint8_t motor, int32_t *ticks)
 232:boards/TMC2660_eval.c **** {
 233:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 234:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 235:boards/TMC2660_eval.c **** 
 236:boards/TMC2660_eval.c **** 	// determine actual position and add numbers of ticks to move
 237:boards/TMC2660_eval.c **** 	*ticks += StepDir_getActualPosition(motor);
 238:boards/TMC2660_eval.c **** 
 239:boards/TMC2660_eval.c **** 	return moveTo(motor, *ticks);
 240:boards/TMC2660_eval.c **** }
 241:boards/TMC2660_eval.c **** 
 242:boards/TMC2660_eval.c **** static uint32_t handleParameter(uint8_t readWrite, uint8_t motor, uint8_t type, int32_t *value)
 243:boards/TMC2660_eval.c **** {
 244:boards/TMC2660_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 245:boards/TMC2660_eval.c **** 
 246:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 247:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 248:boards/TMC2660_eval.c **** 
 249:boards/TMC2660_eval.c **** 	switch(type)
 250:boards/TMC2660_eval.c **** 	{
 251:boards/TMC2660_eval.c **** 	case 0:
 252:boards/TMC2660_eval.c **** 		// Target position
 253:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 254:boards/TMC2660_eval.c **** 			*value = StepDir_getTargetPosition(motor);
 255:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 256:boards/TMC2660_eval.c **** 			StepDir_moveTo(motor, *value);
 257:boards/TMC2660_eval.c **** 		}
 258:boards/TMC2660_eval.c **** 		break;
 259:boards/TMC2660_eval.c **** 	case 1:
 260:boards/TMC2660_eval.c **** 		// Actual position
 261:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 262:boards/TMC2660_eval.c **** 			*value = StepDir_getActualPosition(motor);
 263:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 264:boards/TMC2660_eval.c **** 			StepDir_setActualPosition(motor, *value);
 265:boards/TMC2660_eval.c **** 		}
 266:boards/TMC2660_eval.c **** 		break;
 267:boards/TMC2660_eval.c **** 	case 2:
 268:boards/TMC2660_eval.c **** 		// Target speed
 269:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 270:boards/TMC2660_eval.c **** 			*value = StepDir_getTargetVelocity(motor);
 271:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 272:boards/TMC2660_eval.c **** 			StepDir_rotate(motor, *value);
 273:boards/TMC2660_eval.c **** 		}
 274:boards/TMC2660_eval.c **** 		break;
 275:boards/TMC2660_eval.c **** 	case 3:
 276:boards/TMC2660_eval.c **** 		// Actual speed
 277:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 278:boards/TMC2660_eval.c **** 			*value = StepDir_getActualVelocity(motor);
 279:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 280:boards/TMC2660_eval.c **** 			errors |= TMC_ERROR_TYPE;
 281:boards/TMC2660_eval.c **** 		}
 282:boards/TMC2660_eval.c **** 		break;
 283:boards/TMC2660_eval.c **** 	case 4:
 284:boards/TMC2660_eval.c **** 		// Maximum speed
 285:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 286:boards/TMC2660_eval.c **** 			*value = StepDir_getVelocityMax(motor);
 287:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 288:boards/TMC2660_eval.c **** 			StepDir_setVelocityMax(motor, abs(*value));
 289:boards/TMC2660_eval.c **** 		}
 290:boards/TMC2660_eval.c **** 		break;
 291:boards/TMC2660_eval.c **** 	case 5:
 292:boards/TMC2660_eval.c **** 		// Maximum acceleration
 293:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 294:boards/TMC2660_eval.c **** 			*value = StepDir_getAcceleration(motor);
 295:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 296:boards/TMC2660_eval.c **** 			StepDir_setAcceleration(motor, *value);
 297:boards/TMC2660_eval.c **** 		}
 298:boards/TMC2660_eval.c **** 		break;
 299:boards/TMC2660_eval.c **** 	case 6:
 300:boards/TMC2660_eval.c **** 		// Maximum current
 301:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 302:boards/TMC2660_eval.c **** 			*value = TMC2660.runCurrentScale;
 303:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 304:boards/TMC2660_eval.c **** 			TMC2660.runCurrentScale = *value;
 305:boards/TMC2660_eval.c **** 			if(Evalboards.ch1.fullCover == NULL) {
 306:boards/TMC2660_eval.c **** 				if(TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT) == 0)
 307:boards/TMC2660_eval.c **** 					TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurren
 308:boards/TMC2660_eval.c **** 			} else {
 309:boards/TMC2660_eval.c **** 				TMC2660.standStillCurrentScale = *value;
 310:boards/TMC2660_eval.c **** 				TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurrent
 311:boards/TMC2660_eval.c **** 			}
 312:boards/TMC2660_eval.c **** 		}
 313:boards/TMC2660_eval.c **** 		break;
 314:boards/TMC2660_eval.c **** 	case 7:
 315:boards/TMC2660_eval.c **** 		// Standby current
 316:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 317:boards/TMC2660_eval.c **** 			*value = TMC2660.standStillCurrentScale;
 318:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 319:boards/TMC2660_eval.c **** 			TMC2660.standStillCurrentScale = *value;
 320:boards/TMC2660_eval.c **** 			if(Evalboards.ch1.fullCover == NULL) {
 321:boards/TMC2660_eval.c **** 				if(TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT) == 1)
 322:boards/TMC2660_eval.c **** 					TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStil
 323:boards/TMC2660_eval.c **** 			} else {
 324:boards/TMC2660_eval.c **** 				TMC2660.runCurrentScale = *value;
 325:boards/TMC2660_eval.c **** 			}
 326:boards/TMC2660_eval.c **** 		}
 327:boards/TMC2660_eval.c **** 		break;
 328:boards/TMC2660_eval.c **** 	case 8:
 329:boards/TMC2660_eval.c **** 		// Position reached flag
 330:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 331:boards/TMC2660_eval.c **** 			*value = (StepDir_getStatus(motor) & STATUS_TARGET_REACHED)? 1:0;
 332:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 333:boards/TMC2660_eval.c **** 			errors |= TMC_ERROR_TYPE;
 334:boards/TMC2660_eval.c **** 		}
 335:boards/TMC2660_eval.c **** 		break;
 336:boards/TMC2660_eval.c **** 	case 29:
 337:boards/TMC2660_eval.c **** 		// Measured Speed
 338:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 339:boards/TMC2660_eval.c **** 			*value = StepDir_getActualVelocity(motor); // todo CHECK AP 2: Basically a duplicate of AP 3 - r
 340:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 341:boards/TMC2660_eval.c **** 			errors |= TMC_ERROR_TYPE;
 342:boards/TMC2660_eval.c **** 		}
 343:boards/TMC2660_eval.c **** 		break;
 344:boards/TMC2660_eval.c **** 	case 50: // StepDir internal(0)/external(1)
 345:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 346:boards/TMC2660_eval.c **** 			*value = StepDir_getMode(motor);
 347:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 348:boards/TMC2660_eval.c **** 			StepDir_setMode(motor, *value);
 349:boards/TMC2660_eval.c **** 		}
 350:boards/TMC2660_eval.c **** 		break;
 351:boards/TMC2660_eval.c **** 	case 51: // StepDir interrupt frequency
 352:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 353:boards/TMC2660_eval.c **** 			*value = StepDir_getFrequency(motor);
 354:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 355:boards/TMC2660_eval.c **** 			StepDir_setFrequency(motor, *value);
 356:boards/TMC2660_eval.c **** 		}
 357:boards/TMC2660_eval.c **** 		break;
 358:boards/TMC2660_eval.c **** 	case 140:
 359:boards/TMC2660_eval.c **** 		// Microstep Resolution
 360:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 361:boards/TMC2660_eval.c **** 			*value = 8 - TMC2660_FIELD_READ(0, TMC2660_DRVCTRL | TMC2660_WRITE_BIT, TMC2660_MRES_MASK, TMC26
 362:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 363:boards/TMC2660_eval.c **** 			switch(*value)
 364:boards/TMC2660_eval.c **** 			{
 365:boards/TMC2660_eval.c **** 			case 1:    *value = 8;   break;
 366:boards/TMC2660_eval.c **** 			case 2:    *value = 7;   break;
 367:boards/TMC2660_eval.c **** 			case 4:    *value = 6;   break;
 368:boards/TMC2660_eval.c **** 			case 8:    *value = 5;   break;
 369:boards/TMC2660_eval.c **** 			case 16:   *value = 4;   break;
 370:boards/TMC2660_eval.c **** 			case 32:   *value = 3;   break;
 371:boards/TMC2660_eval.c **** 			case 64:   *value = 2;   break;
 372:boards/TMC2660_eval.c **** 			case 128:  *value = 1;   break;
 373:boards/TMC2660_eval.c **** 			case 256:  *value = 0;   break;
 374:boards/TMC2660_eval.c **** 			default:   *value = -1;  break;
 375:boards/TMC2660_eval.c **** 			}
 376:boards/TMC2660_eval.c **** 
 377:boards/TMC2660_eval.c **** 			if(*value != -1)
 378:boards/TMC2660_eval.c **** 			{
 379:boards/TMC2660_eval.c **** 				TMC2660_FIELD_UPDATE(0, TMC2660_DRVCTRL, TMC2660_MRES_MASK, TMC2660_MRES_SHIFT, *value);
 380:boards/TMC2660_eval.c **** 			}
 381:boards/TMC2660_eval.c **** 			else
 382:boards/TMC2660_eval.c **** 			{
 383:boards/TMC2660_eval.c **** 				errors |= TMC_ERROR_VALUE;
 384:boards/TMC2660_eval.c **** 			}
 385:boards/TMC2660_eval.c **** 		}
 386:boards/TMC2660_eval.c **** 		break;
 387:boards/TMC2660_eval.c **** 	case 160:
 388:boards/TMC2660_eval.c **** 		// Microstep Interpolation
 389:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 390:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCTRL | TMC2660_WRITE_BIT, TMC2660_INTPOL_MASK, TMC2660
 391:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 392:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCTRL, TMC2660_INTPOL_MASK, TMC2660_INTPOL_SHIFT, *value);
 393:boards/TMC2660_eval.c **** 		}
 394:boards/TMC2660_eval.c **** 		break;
 395:boards/TMC2660_eval.c **** 	case 161:
 396:boards/TMC2660_eval.c **** 		// Double Edge Steps
 397:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 398:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCTRL | TMC2660_WRITE_BIT, TMC2660_DEDGE_MASK, TMC2660_
 399:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 400:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCTRL, TMC2660_DEDGE_MASK, TMC2660_DEDGE_SHIFT, *value);
 401:boards/TMC2660_eval.c **** 		}
 402:boards/TMC2660_eval.c **** 		break;
 403:boards/TMC2660_eval.c **** 	case 162:
 404:boards/TMC2660_eval.c **** 		// Chopper blank time
 405:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 406:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_TBL_MASK, TMC2660_T
 407:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 408:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_TBL_MASK, TMC2660_TBL_SHIFT, *value);
 409:boards/TMC2660_eval.c **** 		}
 410:boards/TMC2660_eval.c **** 		break;
 411:boards/TMC2660_eval.c **** 	case 163:
 412:boards/TMC2660_eval.c **** 		// Constant TOff Mode
 413:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 414:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_CHM_MASK, TMC2660_C
 415:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 416:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_CHM_MASK, TMC2660_CHM_SHIFT, *value);
 417:boards/TMC2660_eval.c **** 		}
 418:boards/TMC2660_eval.c **** 		break;
 419:boards/TMC2660_eval.c **** 	case 164:
 420:boards/TMC2660_eval.c **** 		// Disable fast decay comparator
 421:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 422:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_HDEC_MASK, TMC2660_
 423:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 424:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_HDEC_MASK, TMC2660_HDEC_SHIFT, *value);
 425:boards/TMC2660_eval.c **** 		}
 426:boards/TMC2660_eval.c **** 		break;
 427:boards/TMC2660_eval.c **** 	case 165:
 428:boards/TMC2660_eval.c **** 		// Chopper hysteresis end / fast decay time
 429:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 430:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_HEND_MASK, TMC2660_
 431:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 432:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_HEND_MASK, TMC2660_HEND_SHIFT, *value);
 433:boards/TMC2660_eval.c **** 		}
 434:boards/TMC2660_eval.c **** 		break;
 435:boards/TMC2660_eval.c **** 	case 166:
 436:boards/TMC2660_eval.c **** 		// Chopper hysteresis start / sine wave offset
 437:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 438:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_HSTRT_MASK, TMC2660
 439:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 440:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_HSTRT_MASK, TMC2660_HSTRT_SHIFT, *value);
 441:boards/TMC2660_eval.c **** 		}
 442:boards/TMC2660_eval.c **** 		break;
 443:boards/TMC2660_eval.c **** 	case 167:
 444:boards/TMC2660_eval.c **** 		// Chopper off time
 445:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 446:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_TOFF_MASK, TMC2660_
 447:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 448:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_TOFF_MASK, TMC2660_TOFF_SHIFT, *value);
 449:boards/TMC2660_eval.c **** 		}
 450:boards/TMC2660_eval.c **** 		break;
 451:boards/TMC2660_eval.c **** 	case 168:
 452:boards/TMC2660_eval.c **** 		// smartEnergy current minimum (SEIMIN)
 453:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 454:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEIMIN_MASK, TMC2660_SEIMIN_SHIFT);
 455:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 456:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEIMIN_MASK, TMC2660_SEIMIN_SHIFT, *value);
 457:boards/TMC2660_eval.c **** 		}
 458:boards/TMC2660_eval.c **** 		break;
 459:boards/TMC2660_eval.c **** 	case 169:
 460:boards/TMC2660_eval.c **** 		// smartEnergy current down step
 461:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 462:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEDN_MASK, TMC2660_SEDN_SHIFT);
 463:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 464:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEDN_MASK, TMC2660_SEDN_SHIFT, *value);
 465:boards/TMC2660_eval.c **** 		}
 466:boards/TMC2660_eval.c **** 		break;
 467:boards/TMC2660_eval.c **** 	case 170:
 468:boards/TMC2660_eval.c **** 		// smartEnergy hysteresis
 469:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 470:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEMAX_MASK, TMC2660_SEMAX_SHIFT);
 471:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 472:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEMAX_MASK, TMC2660_SEMAX_SHIFT, *value);
 473:boards/TMC2660_eval.c **** 		}
 474:boards/TMC2660_eval.c **** 		break;
 475:boards/TMC2660_eval.c **** 	case 171:
 476:boards/TMC2660_eval.c **** 		// smartEnergy current up step
 477:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 478:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEUP_MASK, TMC2660_SEUP_SHIFT);
 479:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 480:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEUP_MASK, TMC2660_SEUP_SHIFT, *value);
 481:boards/TMC2660_eval.c **** 		}
 482:boards/TMC2660_eval.c **** 		break;
 483:boards/TMC2660_eval.c **** 	case 172:
 484:boards/TMC2660_eval.c **** 		// smartEnergy hysteresis start
 485:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 486:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEMIN_MASK, TMC2660_SEMIN_SHIFT);
 487:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 488:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEMIN_MASK, TMC2660_SEMIN_SHIFT, *value);
 489:boards/TMC2660_eval.c **** 		}
 490:boards/TMC2660_eval.c **** 		break;
 491:boards/TMC2660_eval.c **** 	case 173:
 492:boards/TMC2660_eval.c **** 		// stallGuard2 filter enable
 493:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 494:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SGCSCONF, TMC2660_SFILT_MASK, TMC2660_SFILT_SHIFT);
 495:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 496:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_SFILT_MASK, TMC2660_SFILT_SHIFT, *value);
 497:boards/TMC2660_eval.c **** 		}
 498:boards/TMC2660_eval.c **** 		break;
 499:boards/TMC2660_eval.c **** 	case 174:
 500:boards/TMC2660_eval.c **** 		// stallGuard2 threshold
 501:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 502:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SGCSCONF, TMC2660_SGT_MASK, TMC2660_SGT_SHIFT);
 503:boards/TMC2660_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 504:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 505:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_SGT_MASK, TMC2660_SGT_SHIFT, *value);
 506:boards/TMC2660_eval.c **** 		}
 507:boards/TMC2660_eval.c **** 		break;
 508:boards/TMC2660_eval.c **** 	case 175:
 509:boards/TMC2660_eval.c **** 		// Slope control, high side
 510:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 511:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_SLPH_MASK, TMC2660_SLPH_SHIFT);
 512:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 513:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_SLPH_MASK, TMC2660_SLPH_SHIFT, *value);
 514:boards/TMC2660_eval.c **** 		}
 515:boards/TMC2660_eval.c **** 		break;
 516:boards/TMC2660_eval.c **** 	case 176:
 517:boards/TMC2660_eval.c **** 		// Slope control, low side
 518:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 519:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_SLPL_MASK, TMC2660_SLPL_SHIFT);
 520:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 521:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_SLPL_MASK, TMC2660_SLPL_SHIFT, *value);
 522:boards/TMC2660_eval.c **** 		}
 523:boards/TMC2660_eval.c **** 		break;
 524:boards/TMC2660_eval.c **** 	case 177:
 525:boards/TMC2660_eval.c **** 		// Short to Ground Protection
 526:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 527:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_DISS2G_MASK, TMC2660_DISS2G_SHIFT);
 528:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 529:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_DISS2G_MASK, TMC2660_DISS2G_SHIFT, *value);
 530:boards/TMC2660_eval.c **** 		}
 531:boards/TMC2660_eval.c **** 		break;
 532:boards/TMC2660_eval.c **** 	case 178:
 533:boards/TMC2660_eval.c **** 		// Short-to-ground detection timer
 534:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 535:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_TS2G_MASK, TMC2660_TS2G_SHIFT);
 536:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 537:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_TS2G_MASK, TMC2660_TS2G_SHIFT, *value);
 538:boards/TMC2660_eval.c **** 		}
 539:boards/TMC2660_eval.c **** 		break;
 540:boards/TMC2660_eval.c **** 	case 179:
 541:boards/TMC2660_eval.c **** 		// VSense
 542:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 543:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_VSENSE_MASK, TMC2660_VSENSE_SHIFT);
 544:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 545:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_VSENSE_MASK, TMC2660_VSENSE_SHIFT, *value);
 546:boards/TMC2660_eval.c **** 		}
 547:boards/TMC2660_eval.c **** 		break;
 548:boards/TMC2660_eval.c **** 	case 180:
 549:boards/TMC2660_eval.c **** 		// smartEnergy actual current
 550:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 551:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_RESPONSE2, TMC2660_SE_MASK, TMC2660_SE_SHIFT);
 552:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 553:boards/TMC2660_eval.c **** 			errors |= TMC_ERROR_TYPE;
 554:boards/TMC2660_eval.c **** 		}
 555:boards/TMC2660_eval.c **** 		break;
 556:boards/TMC2660_eval.c **** 	case 181:
 557:boards/TMC2660_eval.c **** 		// smartEnergy stall velocity
 558:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 559:boards/TMC2660_eval.c **** 			*value = StepDir_getStallGuardThreshold(motor);
 560:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 561:boards/TMC2660_eval.c **** 			StepDir_setStallGuardThreshold(motor, *value);
 562:boards/TMC2660_eval.c **** 		}
 563:boards/TMC2660_eval.c **** 		break;
 564:boards/TMC2660_eval.c **** 	case 182:
 565:boards/TMC2660_eval.c **** 		// smartEnergy threshold speed
 566:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 567:boards/TMC2660_eval.c **** 			*value = TMC2660.coolStepThreshold;
 568:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 569:boards/TMC2660_eval.c **** 			TMC2660.coolStepThreshold = *value;
 570:boards/TMC2660_eval.c **** 		}
 571:boards/TMC2660_eval.c **** 		break;
 572:boards/TMC2660_eval.c **** 	case 183:
 573:boards/TMC2660_eval.c **** 		// Disable step/dir interface
 574:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 575:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_SDOFF_MASK, TMC2660_SDOFF_SHIFT);
 576:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 577:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_SDOFF_MASK, TMC2660_SDOFF_SHIFT, *value);
 578:boards/TMC2660_eval.c **** 		}
 579:boards/TMC2660_eval.c **** 		break;
 580:boards/TMC2660_eval.c **** 	case 184:
 581:boards/TMC2660_eval.c **** 		// Random TOff mode
 582:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 583:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF, TMC2660_RNDTF_MASK, TMC2660_RNDTF_SHIFT);
 584:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 585:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_RNDTF_MASK, TMC2660_RNDTF_SHIFT, *value);
 586:boards/TMC2660_eval.c **** 		}
 587:boards/TMC2660_eval.c **** 		break;
 588:boards/TMC2660_eval.c **** 	case 185:
 589:boards/TMC2660_eval.c **** 		// Reserved test mode: leave undocumented?
 590:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 591:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_TST_MASK, TMC2660_TST_SHIFT);
 592:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 593:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_TST_MASK, TMC2660_TST_SHIFT, *value);
 594:boards/TMC2660_eval.c **** 		}
 595:boards/TMC2660_eval.c **** 		break;
 596:boards/TMC2660_eval.c **** 	case 206:
 597:boards/TMC2660_eval.c **** 		// Load value
 598:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 599:boards/TMC2660_eval.c **** 			*value = (compatibilityMode) ?
 600:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE2, TMC2660_SGU_MASK, TMC2660_SGU_SHIFT)<<5 :
 601:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE1, TMC2660_SG2_MASK, TMC2660_SG2_SHIFT);
 602:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 603:boards/TMC2660_eval.c **** 			errors |= TMC_ERROR_TYPE;
 604:boards/TMC2660_eval.c **** 		}
 605:boards/TMC2660_eval.c **** 		break;
 606:boards/TMC2660_eval.c **** 	case 208:
 607:boards/TMC2660_eval.c **** 		// Status Flags
 608:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 609:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_RESPONSE_LATEST, TMC2660_STATUS_MASK, TMC2660_STATUS_SHIF
 610:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 611:boards/TMC2660_eval.c **** 			errors |= TMC_ERROR_TYPE;
 612:boards/TMC2660_eval.c **** 		}
 613:boards/TMC2660_eval.c **** 		break;
 614:boards/TMC2660_eval.c **** 	case 214:
 615:boards/TMC2660_eval.c **** 		// Power Down Delay
 616:boards/TMC2660_eval.c **** 		if(readWrite == READ) {
 617:boards/TMC2660_eval.c **** 			*value = TMC2660.standStillTimeout;
 618:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 619:boards/TMC2660_eval.c **** 			TMC2660.standStillTimeout = *value;
 620:boards/TMC2660_eval.c **** 		}
 621:boards/TMC2660_eval.c **** 		break;
 622:boards/TMC2660_eval.c **** 	default:
 623:boards/TMC2660_eval.c **** 		errors |= TMC_ERROR_TYPE;
 624:boards/TMC2660_eval.c **** 		break;
 625:boards/TMC2660_eval.c **** 	}
 626:boards/TMC2660_eval.c **** 	return errors;
 627:boards/TMC2660_eval.c **** }
 628:boards/TMC2660_eval.c **** 
 629:boards/TMC2660_eval.c **** static uint32_t SAP(uint8_t type, uint8_t motor, int32_t value)
 630:boards/TMC2660_eval.c **** {
 631:boards/TMC2660_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 632:boards/TMC2660_eval.c **** }
 633:boards/TMC2660_eval.c **** 
 634:boards/TMC2660_eval.c **** static uint32_t GAP(uint8_t type, uint8_t motor, int32_t *value)
 635:boards/TMC2660_eval.c **** {
 636:boards/TMC2660_eval.c **** 	return handleParameter(READ, motor, type, value);
 637:boards/TMC2660_eval.c **** }
 638:boards/TMC2660_eval.c **** 
 639:boards/TMC2660_eval.c **** static void writeRegister(uint8_t motor, uint8_t address, int32_t value)
 640:boards/TMC2660_eval.c **** {
 641:boards/TMC2660_eval.c **** 	UNUSED(motor);
 642:boards/TMC2660_eval.c **** 	tmc2660_writeInt(0, address, value);
 643:boards/TMC2660_eval.c **** }
 644:boards/TMC2660_eval.c **** 
 645:boards/TMC2660_eval.c **** static void readRegister(uint8_t motor, uint8_t address, int32_t *value)
 646:boards/TMC2660_eval.c **** {
 647:boards/TMC2660_eval.c **** 	UNUSED(motor);
 648:boards/TMC2660_eval.c **** 	*value = tmc2660_readInt(0, address);
 649:boards/TMC2660_eval.c **** }
 650:boards/TMC2660_eval.c **** 
 651:boards/TMC2660_eval.c **** static uint32_t getMeasuredSpeed(uint8_t motor, int32_t *value)
 652:boards/TMC2660_eval.c **** {
 653:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 654:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 655:boards/TMC2660_eval.c **** 
 656:boards/TMC2660_eval.c **** 	switch(motor)
 657:boards/TMC2660_eval.c **** 	{
 658:boards/TMC2660_eval.c **** 	case 0:
 659:boards/TMC2660_eval.c **** 		*value = StepDir_getActualVelocity(motor);
 660:boards/TMC2660_eval.c **** 		break;
 661:boards/TMC2660_eval.c **** 	default:
 662:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 663:boards/TMC2660_eval.c **** 		break;
 664:boards/TMC2660_eval.c **** 	}
 665:boards/TMC2660_eval.c **** 	return TMC_ERROR_NONE;
 666:boards/TMC2660_eval.c **** }
 667:boards/TMC2660_eval.c **** 
 668:boards/TMC2660_eval.c **** static void deInit(void)
 669:boards/TMC2660_eval.c **** {
 670:boards/TMC2660_eval.c **** 	enableDriver(DRIVER_DISABLE);
 671:boards/TMC2660_eval.c **** 
 672:boards/TMC2660_eval.c **** 	HAL.IOs->config->setHigh(Pins.ENN);
 673:boards/TMC2660_eval.c **** 
 674:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.CSN);
 675:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 676:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.ENN);
 677:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.SG_TST);
 678:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.STEP);
 679:boards/TMC2660_eval.c **** 
 680:boards/TMC2660_eval.c **** 	StepDir_deInit();
 681:boards/TMC2660_eval.c **** }
 682:boards/TMC2660_eval.c **** 
 683:boards/TMC2660_eval.c **** static void on_standstill_changed(uint8_t newStandstill)
 684:boards/TMC2660_eval.c **** {
 685:boards/TMC2660_eval.c **** 	if(newStandstill == true) {
 686:boards/TMC2660_eval.c **** 		TMC2660.runCurrentScale = TMC2660_FIELD_READ(0, 0x0E, TMC2660_CS_MASK, TMC2660_CS_SHIFT);
 687:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStillCu
 688:boards/TMC2660_eval.c **** 	} else if(newStandstill == false) {
 689:boards/TMC2660_eval.c **** 		TMC2660.standStillCurrentScale = TMC2660_FIELD_READ(0, 0x0E, TMC2660_CS_MASK, TMC2660_CS_SHIFT);
 690:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurrentSc
 691:boards/TMC2660_eval.c **** 	}
 692:boards/TMC2660_eval.c **** }
 693:boards/TMC2660_eval.c **** 
 694:boards/TMC2660_eval.c **** static void periodicJob(uint32_t tick)
 695:boards/TMC2660_eval.c **** {
 696:boards/TMC2660_eval.c **** 	static uint8_t lastCoolStepState = 0;
 697:boards/TMC2660_eval.c **** 	static uint8_t lastStandstillState = 0;
 698:boards/TMC2660_eval.c **** 	uint8_t stst;
 699:boards/TMC2660_eval.c **** 
 700:boards/TMC2660_eval.c **** 	if(Evalboards.ch1.fullCover == NULL) { // Standstill detection only when not using an additional m
 701:boards/TMC2660_eval.c **** 		// Apply current settings
 702:boards/TMC2660_eval.c **** 		if((stst = TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT)) != last
 703:boards/TMC2660_eval.c **** 			on_standstill_changed(stst);
 704:boards/TMC2660_eval.c **** 			lastStandstillState = stst;
 705:boards/TMC2660_eval.c **** 		}
 706:boards/TMC2660_eval.c **** 	}
 707:boards/TMC2660_eval.c **** 
 708:boards/TMC2660_eval.c **** 	Evalboards.ch2.errors = (TMC2660.isStandStillOverCurrent) 	? (Evalboards.ch2.errors | ERRORS_I_STS
 709:boards/TMC2660_eval.c **** 	Evalboards.ch2.errors = (TMC2660.isStandStillCurrentLimit) 	? (Evalboards.ch2.errors | ERRORS_I_TI
 710:boards/TMC2660_eval.c **** 
 711:boards/TMC2660_eval.c **** 	uint8_t currCoolStepState = (abs(StepDir_getActualVelocity(DEFAULT_MOTOR)) >= TMC2660.coolStepThre
 712:boards/TMC2660_eval.c **** 	if(currCoolStepState != lastCoolStepState)
 713:boards/TMC2660_eval.c **** 	{
 714:boards/TMC2660_eval.c **** 		uint8_t value = (currCoolStepState)? TMC2660.coolStepActiveValue : TMC2660.coolStepInactiveValue;
 715:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEMIN_MASK, TMC2660_SEMIN_SHIFT, value);
 716:boards/TMC2660_eval.c **** 
 717:boards/TMC2660_eval.c **** 		lastCoolStepState = currCoolStepState;
 718:boards/TMC2660_eval.c **** 	}
 719:boards/TMC2660_eval.c **** 
 720:boards/TMC2660_eval.c **** 	tmc2660_periodicJob(DEFAULT_MOTOR, tick, &TMC2660, TMC2660_config);
 721:boards/TMC2660_eval.c **** 	StepDir_periodicJob(DEFAULT_MOTOR);
 722:boards/TMC2660_eval.c **** }
 723:boards/TMC2660_eval.c **** 
 724:boards/TMC2660_eval.c **** static uint8_t reset()
 725:boards/TMC2660_eval.c **** {
 726:boards/TMC2660_eval.c **** 	if(StepDir_getActualVelocity(0) != 0)
 727:boards/TMC2660_eval.c **** 		return 0;
 728:boards/TMC2660_eval.c **** 
 729:boards/TMC2660_eval.c **** 	tmc2660_reset(&TMC2660, TMC2660_config);
 730:boards/TMC2660_eval.c **** 	compatibilityMode = 1;
 731:boards/TMC2660_eval.c **** 	enableDriver(DRIVER_USE_GLOBAL_ENABLE);
 732:boards/TMC2660_eval.c **** 
 733:boards/TMC2660_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 734:boards/TMC2660_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, Pins.SG_TST);
 735:boards/TMC2660_eval.c **** 
 736:boards/TMC2660_eval.c **** 	return 1;
 737:boards/TMC2660_eval.c **** }
 738:boards/TMC2660_eval.c **** 
 739:boards/TMC2660_eval.c **** static uint8_t restore()
 740:boards/TMC2660_eval.c **** {
 163              		.loc 1 740 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 741:boards/TMC2660_eval.c **** 	return tmc2660_restore(TMC2660_config);
 168              		.loc 1 741 2 view .LVU41
 169              		.loc 1 741 9 is_stmt 0 view .LVU42
 170 0056 024B     		ldr	r3, .L13
 171 0058 986C     		ldr	r0, [r3, #72]
 172 005a FFF7FEBF 		b	tmc2660_restore
 173              	.LVL15:
 174              	.L14:
 175 005e 00BF     		.align	2
 176              	.L13:
 177 0060 00000000 		.word	.LANCHOR0
 178              		.cfi_endproc
 179              	.LFE23:
 181              		.align	1
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu softvfp
 187              	enableDriver:
 188              	.LVL16:
 189              	.LFB24:
 742:boards/TMC2660_eval.c **** }
 743:boards/TMC2660_eval.c **** 
 744:boards/TMC2660_eval.c **** static void enableDriver(DriverState state)
 745:boards/TMC2660_eval.c **** {
 190              		.loc 1 745 1 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 746:boards/TMC2660_eval.c **** 	if(state == DRIVER_USE_GLOBAL_ENABLE)
 195              		.loc 1 746 2 view .LVU44
 196              		.loc 1 746 4 is_stmt 0 view .LVU45
 197 0064 0228     		cmp	r0, #2
 747:boards/TMC2660_eval.c **** 		state = Evalboards.driverEnable;
 198              		.loc 1 747 3 is_stmt 1 view .LVU46
 199              		.loc 1 747 9 is_stmt 0 view .LVU47
 200 0066 04BF     		itt	eq
 201 0068 0B4B     		ldreq	r3, .L20
 202 006a 93F8F000 		ldrbeq	r0, [r3, #240]	@ zero_extendqisi2
 203              	.LVL17:
 748:boards/TMC2660_eval.c **** 
 749:boards/TMC2660_eval.c **** 	if(state == DRIVER_DISABLE)
 204              		.loc 1 749 2 is_stmt 1 view .LVU48
 205              		.loc 1 749 4 is_stmt 0 view .LVU49
 206 006e 30B9     		cbnz	r0, .L17
 750:boards/TMC2660_eval.c **** 		HAL.IOs->config->setHigh(Pins.ENN);
 207              		.loc 1 750 3 is_stmt 1 view .LVU50
 208              		.loc 1 750 6 is_stmt 0 view .LVU51
 209 0070 0A4B     		ldr	r3, .L20+4
 210              		.loc 1 750 10 view .LVU52
 211 0072 DB68     		ldr	r3, [r3, #12]
 212              		.loc 1 750 18 view .LVU53
 213 0074 1B68     		ldr	r3, [r3]
 214              		.loc 1 750 3 view .LVU54
 215 0076 5B69     		ldr	r3, [r3, #20]
 216              	.L19:
 217              	.LBB4:
 218              	.LBB5:
 751:boards/TMC2660_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 752:boards/TMC2660_eval.c **** 		HAL.IOs->config->setLow(Pins.ENN);
 219              		.loc 1 752 3 view .LVU55
 220 0078 094A     		ldr	r2, .L20+8
 221 007a 906D     		ldr	r0, [r2, #88]
 222 007c 1847     		bx	r3	@ indirect register sibling call
 223              	.LVL18:
 224              	.L17:
 225              		.loc 1 752 3 view .LVU56
 226              	.LBE5:
 227              	.LBE4:
 751:boards/TMC2660_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 228              		.loc 1 751 7 is_stmt 1 view .LVU57
 751:boards/TMC2660_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 229              		.loc 1 751 9 is_stmt 0 view .LVU58
 230 007e 0128     		cmp	r0, #1
 231 0080 09D1     		bne	.L15
 751:boards/TMC2660_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 232              		.loc 1 751 49 discriminator 1 view .LVU59
 233 0082 054B     		ldr	r3, .L20
 751:boards/TMC2660_eval.c **** 	else if((state == DRIVER_ENABLE) && (Evalboards.driverEnable == DRIVER_ENABLE))
 234              		.loc 1 751 35 discriminator 1 view .LVU60
 235 0084 93F8F030 		ldrb	r3, [r3, #240]	@ zero_extendqisi2
 236 0088 012B     		cmp	r3, #1
 237 008a 04D1     		bne	.L15
 238              	.LBB7:
 239              	.LBI4:
 744:boards/TMC2660_eval.c **** {
 240              		.loc 1 744 13 is_stmt 1 view .LVU61
 241              	.LVL19:
 242              	.LBB6:
 243              		.loc 1 752 3 view .LVU62
 244              		.loc 1 752 6 is_stmt 0 view .LVU63
 245 008c 034B     		ldr	r3, .L20+4
 246              		.loc 1 752 10 view .LVU64
 247 008e DB68     		ldr	r3, [r3, #12]
 248              		.loc 1 752 18 view .LVU65
 249 0090 1B68     		ldr	r3, [r3]
 250              		.loc 1 752 3 view .LVU66
 251 0092 9B69     		ldr	r3, [r3, #24]
 252 0094 F0E7     		b	.L19
 253              	.LVL20:
 254              	.L15:
 255              		.loc 1 752 3 view .LVU67
 256              	.LBE6:
 257              	.LBE7:
 753:boards/TMC2660_eval.c **** }
 258              		.loc 1 753 1 view .LVU68
 259 0096 7047     		bx	lr
 260              	.L21:
 261              		.align	2
 262              	.L20:
 263 0098 00000000 		.word	Evalboards
 264 009c 00000000 		.word	HAL
 265 00a0 00000000 		.word	.LANCHOR0
 266              		.cfi_endproc
 267              	.LFE24:
 269              		.align	1
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu softvfp
 275              	deInit:
 276              	.LFB19:
 669:boards/TMC2660_eval.c **** 	enableDriver(DRIVER_DISABLE);
 277              		.loc 1 669 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 670:boards/TMC2660_eval.c **** 
 281              		.loc 1 670 2 view .LVU70
 669:boards/TMC2660_eval.c **** 	enableDriver(DRIVER_DISABLE);
 282              		.loc 1 669 1 is_stmt 0 view .LVU71
 283 00a4 38B5     		push	{r3, r4, r5, lr}
 284              	.LCFI2:
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 3, -16
 287              		.cfi_offset 4, -12
 288              		.cfi_offset 5, -8
 289              		.cfi_offset 14, -4
 670:boards/TMC2660_eval.c **** 
 290              		.loc 1 670 2 view .LVU72
 291 00a6 0020     		movs	r0, #0
 292 00a8 FFF7DCFF 		bl	enableDriver
 293              	.LVL21:
 672:boards/TMC2660_eval.c **** 
 294              		.loc 1 672 2 is_stmt 1 view .LVU73
 672:boards/TMC2660_eval.c **** 
 295              		.loc 1 672 5 is_stmt 0 view .LVU74
 296 00ac 0F4B     		ldr	r3, .L23
 672:boards/TMC2660_eval.c **** 
 297              		.loc 1 672 2 view .LVU75
 298 00ae 104C     		ldr	r4, .L23+4
 672:boards/TMC2660_eval.c **** 
 299              		.loc 1 672 5 view .LVU76
 300 00b0 DD68     		ldr	r5, [r3, #12]
 672:boards/TMC2660_eval.c **** 
 301              		.loc 1 672 2 view .LVU77
 302 00b2 A06D     		ldr	r0, [r4, #88]
 672:boards/TMC2660_eval.c **** 
 303              		.loc 1 672 17 view .LVU78
 304 00b4 2B68     		ldr	r3, [r5]
 672:boards/TMC2660_eval.c **** 
 305              		.loc 1 672 2 view .LVU79
 306 00b6 5B69     		ldr	r3, [r3, #20]
 307 00b8 9847     		blx	r3
 308              	.LVL22:
 674:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 309              		.loc 1 674 2 is_stmt 1 view .LVU80
 674:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 310              		.loc 1 674 17 is_stmt 0 view .LVU81
 311 00ba 2B68     		ldr	r3, [r5]
 674:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.DIR);
 312              		.loc 1 674 2 view .LVU82
 313 00bc E06C     		ldr	r0, [r4, #76]
 314 00be 9B68     		ldr	r3, [r3, #8]
 315 00c0 9847     		blx	r3
 316              	.LVL23:
 675:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.ENN);
 317              		.loc 1 675 2 is_stmt 1 view .LVU83
 675:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.ENN);
 318              		.loc 1 675 17 is_stmt 0 view .LVU84
 319 00c2 2B68     		ldr	r3, [r5]
 675:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.ENN);
 320              		.loc 1 675 2 view .LVU85
 321 00c4 606D     		ldr	r0, [r4, #84]
 322 00c6 9B68     		ldr	r3, [r3, #8]
 323 00c8 9847     		blx	r3
 324              	.LVL24:
 676:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.SG_TST);
 325              		.loc 1 676 2 is_stmt 1 view .LVU86
 676:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.SG_TST);
 326              		.loc 1 676 17 is_stmt 0 view .LVU87
 327 00ca 2B68     		ldr	r3, [r5]
 676:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.SG_TST);
 328              		.loc 1 676 2 view .LVU88
 329 00cc A06D     		ldr	r0, [r4, #88]
 330 00ce 9B68     		ldr	r3, [r3, #8]
 331 00d0 9847     		blx	r3
 332              	.LVL25:
 677:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.STEP);
 333              		.loc 1 677 2 is_stmt 1 view .LVU89
 677:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.STEP);
 334              		.loc 1 677 17 is_stmt 0 view .LVU90
 335 00d2 2B68     		ldr	r3, [r5]
 677:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.STEP);
 336              		.loc 1 677 2 view .LVU91
 337 00d4 E06D     		ldr	r0, [r4, #92]
 338 00d6 9B68     		ldr	r3, [r3, #8]
 339 00d8 9847     		blx	r3
 340              	.LVL26:
 678:boards/TMC2660_eval.c **** 
 341              		.loc 1 678 2 is_stmt 1 view .LVU92
 678:boards/TMC2660_eval.c **** 
 342              		.loc 1 678 17 is_stmt 0 view .LVU93
 343 00da 2B68     		ldr	r3, [r5]
 678:boards/TMC2660_eval.c **** 
 344              		.loc 1 678 2 view .LVU94
 345 00dc 206D     		ldr	r0, [r4, #80]
 346 00de 9B68     		ldr	r3, [r3, #8]
 347 00e0 9847     		blx	r3
 348              	.LVL27:
 680:boards/TMC2660_eval.c **** }
 349              		.loc 1 680 2 is_stmt 1 view .LVU95
 681:boards/TMC2660_eval.c **** 
 350              		.loc 1 681 1 is_stmt 0 view .LVU96
 351 00e2 BDE83840 		pop	{r3, r4, r5, lr}
 352              	.LCFI3:
 353              		.cfi_restore 14
 354              		.cfi_restore 5
 355              		.cfi_restore 4
 356              		.cfi_restore 3
 357              		.cfi_def_cfa_offset 0
 680:boards/TMC2660_eval.c **** }
 358              		.loc 1 680 2 view .LVU97
 359 00e6 FFF7FEBF 		b	StepDir_deInit
 360              	.LVL28:
 361              	.L24:
 362 00ea 00BF     		.align	2
 363              	.L23:
 364 00ec 00000000 		.word	HAL
 365 00f0 00000000 		.word	.LANCHOR0
 366              		.cfi_endproc
 367              	.LFE19:
 369              		.align	1
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu softvfp
 375              	getMeasuredSpeed:
 376              	.LVL29:
 377              	.LFB18:
 652:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 378              		.loc 1 652 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 653:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 382              		.loc 1 653 2 view .LVU99
 652:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 383              		.loc 1 652 1 is_stmt 0 view .LVU100
 384 00f4 38B5     		push	{r3, r4, r5, lr}
 385              	.LCFI4:
 386              		.cfi_def_cfa_offset 16
 387              		.cfi_offset 3, -16
 388              		.cfi_offset 4, -12
 389              		.cfi_offset 5, -8
 390              		.cfi_offset 14, -4
 652:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 391              		.loc 1 652 1 view .LVU101
 392 00f6 0D46     		mov	r5, r1
 653:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 393              		.loc 1 653 4 view .LVU102
 394 00f8 0446     		mov	r4, r0
 395 00fa 20B9     		cbnz	r0, .L27
 396              	.LVL30:
 397              	.LBB10:
 398              	.LBI10:
 651:boards/TMC2660_eval.c **** {
 399              		.loc 1 651 17 is_stmt 1 view .LVU103
 400              	.LBB11:
 656:boards/TMC2660_eval.c **** 	{
 401              		.loc 1 656 2 view .LVU104
 659:boards/TMC2660_eval.c **** 		break;
 402              		.loc 1 659 3 view .LVU105
 659:boards/TMC2660_eval.c **** 		break;
 403              		.loc 1 659 12 is_stmt 0 view .LVU106
 404 00fc FFF7FEFF 		bl	StepDir_getActualVelocity
 405              	.LVL31:
 659:boards/TMC2660_eval.c **** 		break;
 406              		.loc 1 659 10 view .LVU107
 407 0100 2860     		str	r0, [r5]
 660:boards/TMC2660_eval.c **** 	default:
 408              		.loc 1 660 3 is_stmt 1 view .LVU108
 663:boards/TMC2660_eval.c **** 	}
 409              		.loc 1 663 3 view .LVU109
 665:boards/TMC2660_eval.c **** }
 410              		.loc 1 665 2 view .LVU110
 411              	.LVL32:
 659:boards/TMC2660_eval.c **** 		break;
 412              		.loc 1 659 10 is_stmt 0 view .LVU111
 413 0102 2046     		mov	r0, r4
 414              	.L25:
 415              	.LBE11:
 416              	.LBE10:
 666:boards/TMC2660_eval.c **** 
 417              		.loc 1 666 1 view .LVU112
 418 0104 38BD     		pop	{r3, r4, r5, pc}
 419              	.LVL33:
 420              	.L27:
 654:boards/TMC2660_eval.c **** 
 421              		.loc 1 654 10 view .LVU113
 422 0106 0820     		movs	r0, #8
 423              	.LVL34:
 654:boards/TMC2660_eval.c **** 
 424              		.loc 1 654 10 view .LVU114
 425 0108 FCE7     		b	.L25
 426              		.cfi_endproc
 427              	.LFE18:
 429              		.align	1
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu softvfp
 435              	rotate:
 436              	.LVL35:
 437              	.LFB7:
 194:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 438              		.loc 1 194 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 195:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 442              		.loc 1 195 2 view .LVU116
 194:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 443              		.loc 1 194 1 is_stmt 0 view .LVU117
 444 010a 10B5     		push	{r4, lr}
 445              	.LCFI5:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 4, -8
 448              		.cfi_offset 14, -4
 195:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 449              		.loc 1 195 4 view .LVU118
 450 010c 0446     		mov	r4, r0
 451 010e 28B9     		cbnz	r0, .L30
 452              	.LBB14:
 453              	.LBI14:
 193:boards/TMC2660_eval.c **** {
 454              		.loc 1 193 17 is_stmt 1 view .LVU119
 455              	.LVL36:
 456              	.LBB15:
 198:boards/TMC2660_eval.c **** 	TMC2660.isStandStillOverCurrent   = 0;
 457              		.loc 1 198 2 view .LVU120
 199:boards/TMC2660_eval.c **** 
 458              		.loc 1 199 2 view .LVU121
 199:boards/TMC2660_eval.c **** 
 459              		.loc 1 199 36 is_stmt 0 view .LVU122
 460 0110 034B     		ldr	r3, .L31
 461 0112 1881     		strh	r0, [r3, #8]	@ movhi
 201:boards/TMC2660_eval.c **** 
 462              		.loc 1 201 2 is_stmt 1 view .LVU123
 463 0114 FFF7FEFF 		bl	StepDir_rotate
 464              	.LVL37:
 203:boards/TMC2660_eval.c **** }
 465              		.loc 1 203 2 view .LVU124
 201:boards/TMC2660_eval.c **** 
 466              		.loc 1 201 2 is_stmt 0 view .LVU125
 467 0118 2046     		mov	r0, r4
 468              	.L28:
 469              	.LBE15:
 470              	.LBE14:
 204:boards/TMC2660_eval.c **** 
 471              		.loc 1 204 1 view .LVU126
 472 011a 10BD     		pop	{r4, pc}
 473              	.LVL38:
 474              	.L30:
 196:boards/TMC2660_eval.c **** 
 475              		.loc 1 196 10 view .LVU127
 476 011c 0820     		movs	r0, #8
 477              	.LVL39:
 196:boards/TMC2660_eval.c **** 
 478              		.loc 1 196 10 view .LVU128
 479 011e FCE7     		b	.L28
 480              	.L32:
 481              		.align	2
 482              	.L31:
 483 0120 00000000 		.word	.LANCHOR0
 484              		.cfi_endproc
 485              	.LFE7:
 487              		.align	1
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu softvfp
 493              	stop:
 494              	.LVL40:
 495              	.LFB10:
 217:boards/TMC2660_eval.c **** 	return rotate(motor, 0);
 496              		.loc 1 217 1 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 218:boards/TMC2660_eval.c **** }
 501              		.loc 1 218 2 view .LVU130
 218:boards/TMC2660_eval.c **** }
 502              		.loc 1 218 9 is_stmt 0 view .LVU131
 503 0124 0021     		movs	r1, #0
 504 0126 F0E7     		b	rotate
 505              	.LVL41:
 218:boards/TMC2660_eval.c **** }
 506              		.loc 1 218 9 view .LVU132
 507              		.cfi_endproc
 508              	.LFE10:
 510              		.align	1
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu softvfp
 516              	left:
 517              	.LVL42:
 518              	.LFB9:
 212:boards/TMC2660_eval.c **** 	return rotate(motor, -velocity);
 519              		.loc 1 212 1 is_stmt 1 view -0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 213:boards/TMC2660_eval.c **** }
 524              		.loc 1 213 2 view .LVU134
 213:boards/TMC2660_eval.c **** }
 525              		.loc 1 213 9 is_stmt 0 view .LVU135
 526 0128 4942     		rsbs	r1, r1, #0
 527              	.LVL43:
 213:boards/TMC2660_eval.c **** }
 528              		.loc 1 213 9 view .LVU136
 529 012a EEE7     		b	rotate
 530              	.LVL44:
 213:boards/TMC2660_eval.c **** }
 531              		.loc 1 213 9 view .LVU137
 532              		.cfi_endproc
 533              	.LFE9:
 535              		.align	1
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 539              		.fpu softvfp
 541              	right:
 542              	.LVL45:
 543              	.LFB8:
 207:boards/TMC2660_eval.c **** 	return rotate(motor, velocity);
 544              		.loc 1 207 1 is_stmt 1 view -0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 208:boards/TMC2660_eval.c **** }
 549              		.loc 1 208 2 view .LVU139
 208:boards/TMC2660_eval.c **** }
 550              		.loc 1 208 9 is_stmt 0 view .LVU140
 551 012c EDE7     		b	rotate
 552              	.LVL46:
 208:boards/TMC2660_eval.c **** }
 553              		.loc 1 208 9 view .LVU141
 554              		.cfi_endproc
 555              	.LFE8:
 557              		.align	1
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 563              	reset:
 564              	.LFB22:
 725:boards/TMC2660_eval.c **** 	if(StepDir_getActualVelocity(0) != 0)
 565              		.loc 1 725 1 is_stmt 1 view -0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 726:boards/TMC2660_eval.c **** 		return 0;
 569              		.loc 1 726 2 view .LVU143
 725:boards/TMC2660_eval.c **** 	if(StepDir_getActualVelocity(0) != 0)
 570              		.loc 1 725 1 is_stmt 0 view .LVU144
 571 012e 70B5     		push	{r4, r5, r6, lr}
 572              	.LCFI6:
 573              		.cfi_def_cfa_offset 16
 574              		.cfi_offset 4, -16
 575              		.cfi_offset 5, -12
 576              		.cfi_offset 6, -8
 577              		.cfi_offset 14, -4
 726:boards/TMC2660_eval.c **** 		return 0;
 578              		.loc 1 726 5 view .LVU145
 579 0130 0020     		movs	r0, #0
 580 0132 FFF7FEFF 		bl	StepDir_getActualVelocity
 581              	.LVL47:
 726:boards/TMC2660_eval.c **** 		return 0;
 582              		.loc 1 726 4 view .LVU146
 583 0136 0646     		mov	r6, r0
 584 0138 B0B9     		cbnz	r0, .L38
 585              	.LBB18:
 586              	.LBI18:
 724:boards/TMC2660_eval.c **** {
 587              		.loc 1 724 16 is_stmt 1 view .LVU147
 588              	.LBB19:
 729:boards/TMC2660_eval.c **** 	compatibilityMode = 1;
 589              		.loc 1 729 2 view .LVU148
 590 013a 0C4D     		ldr	r5, .L39
 591 013c A96C     		ldr	r1, [r5, #72]
 592 013e 2846     		mov	r0, r5
 593 0140 FFF7FEFF 		bl	tmc2660_reset
 594              	.LVL48:
 730:boards/TMC2660_eval.c **** 	enableDriver(DRIVER_USE_GLOBAL_ENABLE);
 595              		.loc 1 730 2 view .LVU149
 730:boards/TMC2660_eval.c **** 	enableDriver(DRIVER_USE_GLOBAL_ENABLE);
 596              		.loc 1 730 20 is_stmt 0 view .LVU150
 597 0144 0A4B     		ldr	r3, .L39+4
 598 0146 0124     		movs	r4, #1
 731:boards/TMC2660_eval.c **** 
 599              		.loc 1 731 2 view .LVU151
 600 0148 0220     		movs	r0, #2
 730:boards/TMC2660_eval.c **** 	enableDriver(DRIVER_USE_GLOBAL_ENABLE);
 601              		.loc 1 730 20 view .LVU152
 602 014a 1C60     		str	r4, [r3]
 731:boards/TMC2660_eval.c **** 
 603              		.loc 1 731 2 is_stmt 1 view .LVU153
 604 014c FFF78AFF 		bl	enableDriver
 605              	.LVL49:
 733:boards/TMC2660_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, Pins.SG_TST);
 606              		.loc 1 733 2 view .LVU154
 607 0150 4FF40030 		mov	r0, #131072
 608 0154 FFF7FEFF 		bl	StepDir_init
 609              	.LVL50:
 734:boards/TMC2660_eval.c **** 
 610              		.loc 1 734 2 view .LVU155
 611 0158 3046     		mov	r0, r6
 612 015a D5E91412 		ldrd	r1, r2, [r5, #80]
 613 015e EB6D     		ldr	r3, [r5, #92]
 614 0160 FFF7FEFF 		bl	StepDir_setPins
 615              	.LVL51:
 736:boards/TMC2660_eval.c **** }
 616              		.loc 1 736 2 view .LVU156
 734:boards/TMC2660_eval.c **** 
 617              		.loc 1 734 2 is_stmt 0 view .LVU157
 618 0164 2046     		mov	r0, r4
 619              	.L37:
 620              	.LBE19:
 621              	.LBE18:
 737:boards/TMC2660_eval.c **** 
 622              		.loc 1 737 1 view .LVU158
 623 0166 70BD     		pop	{r4, r5, r6, pc}
 624              	.L38:
 727:boards/TMC2660_eval.c **** 
 625              		.loc 1 727 10 view .LVU159
 626 0168 0020     		movs	r0, #0
 627 016a FCE7     		b	.L37
 628              	.L40:
 629              		.align	2
 630              	.L39:
 631 016c 00000000 		.word	.LANCHOR0
 632 0170 00000000 		.word	.LANCHOR1
 633              		.cfi_endproc
 634              	.LFE22:
 636              		.align	1
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu softvfp
 642              	moveBy:
 643              	.LVL52:
 644              	.LFB12:
 232:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 645              		.loc 1 232 1 is_stmt 1 view -0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 233:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 649              		.loc 1 233 2 view .LVU161
 232:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 650              		.loc 1 232 1 is_stmt 0 view .LVU162
 651 0174 38B5     		push	{r3, r4, r5, lr}
 652              	.LCFI7:
 653              		.cfi_def_cfa_offset 16
 654              		.cfi_offset 3, -16
 655              		.cfi_offset 4, -12
 656              		.cfi_offset 5, -8
 657              		.cfi_offset 14, -4
 232:boards/TMC2660_eval.c **** 	if(motor >= MOTORS)
 658              		.loc 1 232 1 view .LVU163
 659 0176 0D46     		mov	r5, r1
 233:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 660              		.loc 1 233 4 view .LVU164
 661 0178 0446     		mov	r4, r0
 662 017a 48B9     		cbnz	r0, .L43
 663              	.LVL53:
 664              	.LBB24:
 665              	.LBI24:
 231:boards/TMC2660_eval.c **** {
 666              		.loc 1 231 17 is_stmt 1 view .LVU165
 667              	.LBB25:
 237:boards/TMC2660_eval.c **** 
 668              		.loc 1 237 2 view .LVU166
 237:boards/TMC2660_eval.c **** 
 669              		.loc 1 237 12 is_stmt 0 view .LVU167
 670 017c FFF7FEFF 		bl	StepDir_getActualPosition
 671              	.LVL54:
 237:boards/TMC2660_eval.c **** 
 672              		.loc 1 237 9 view .LVU168
 673 0180 2968     		ldr	r1, [r5]
 674 0182 0144     		add	r1, r1, r0
 675 0184 2960     		str	r1, [r5]
 239:boards/TMC2660_eval.c **** }
 676              		.loc 1 239 2 is_stmt 1 view .LVU169
 677              	.LVL55:
 678              	.LBB26:
 679              	.LBI26:
 221:boards/TMC2660_eval.c **** {
 680              		.loc 1 221 17 view .LVU170
 681              	.LBB27:
 223:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 682              		.loc 1 223 2 view .LVU171
 226:boards/TMC2660_eval.c **** 
 683              		.loc 1 226 2 view .LVU172
 684 0186 2046     		mov	r0, r4
 685 0188 FFF7FEFF 		bl	StepDir_moveTo
 686              	.LVL56:
 228:boards/TMC2660_eval.c **** }
 687              		.loc 1 228 2 view .LVU173
 226:boards/TMC2660_eval.c **** 
 688              		.loc 1 226 2 is_stmt 0 view .LVU174
 689 018c 2046     		mov	r0, r4
 690              	.L41:
 691              	.LBE27:
 692              	.LBE26:
 693              	.LBE25:
 694              	.LBE24:
 240:boards/TMC2660_eval.c **** 
 695              		.loc 1 240 1 view .LVU175
 696 018e 38BD     		pop	{r3, r4, r5, pc}
 697              	.LVL57:
 698              	.L43:
 234:boards/TMC2660_eval.c **** 
 699              		.loc 1 234 10 view .LVU176
 700 0190 0820     		movs	r0, #8
 701              	.LVL58:
 234:boards/TMC2660_eval.c **** 
 702              		.loc 1 234 10 view .LVU177
 703 0192 FCE7     		b	.L41
 704              		.cfi_endproc
 705              	.LFE12:
 707              		.align	1
 708              		.global	readWrite
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu softvfp
 714              	readWrite:
 715              	.LVL59:
 716              	.LFB1:
  68:boards/TMC2660_eval.c **** 	static uint8_t rdsel = 0; // number of expected read response
 717              		.loc 1 68 1 is_stmt 1 view -0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
  69:boards/TMC2660_eval.c **** 
 721              		.loc 1 69 2 view .LVU179
  79:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
 722              		.loc 1 79 2 view .LVU180
  68:boards/TMC2660_eval.c **** 	static uint8_t rdsel = 0; // number of expected read response
 723              		.loc 1 68 1 is_stmt 0 view .LVU181
 724 0194 38B5     		push	{r3, r4, r5, lr}
 725              	.LCFI8:
 726              		.cfi_def_cfa_offset 16
 727              		.cfi_offset 3, -16
 728              		.cfi_offset 4, -12
 729              		.cfi_offset 5, -8
 730              		.cfi_offset 14, -4
  79:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
 731              		.loc 1 79 61 view .LVU182
 732 0196 1F4C     		ldr	r4, .L49
 733 0198 636E     		ldr	r3, [r4, #100]
  68:boards/TMC2660_eval.c **** 	static uint8_t rdsel = 0; // number of expected read response
 734              		.loc 1 68 1 view .LVU183
 735 019a 0546     		mov	r5, r0
  79:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
 736              		.loc 1 79 43 view .LVU184
 737 019c 9B68     		ldr	r3, [r3, #8]
 738 019e 0021     		movs	r1, #0
 739 01a0 C0F30740 		ubfx	r0, r0, #16, #8
 740              	.LVL60:
  79:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
 741              		.loc 1 79 43 view .LVU185
 742 01a4 9847     		blx	r3
 743              	.LVL61:
  80:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  |= TMC2660_SPIChannel->readWrite(datagram>>8, 0);
 744              		.loc 1 80 2 is_stmt 1 view .LVU186
  79:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
 745              		.loc 1 79 32 is_stmt 0 view .LVU187
 746 01a6 94F86820 		ldrb	r2, [r4, #104]	@ zero_extendqisi2
  80:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  |= TMC2660_SPIChannel->readWrite(datagram>>8, 0);
 747              		.loc 1 80 41 view .LVU188
 748 01aa A36C     		ldr	r3, [r4, #72]
 749 01ac 03EB8203 		add	r3, r3, r2, lsl #2
 750 01b0 0002     		lsls	r0, r0, #8
 751 01b2 5860     		str	r0, [r3, #4]
  81:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
 752              		.loc 1 81 2 is_stmt 1 view .LVU189
  81:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
 753              		.loc 1 81 62 is_stmt 0 view .LVU190
 754 01b4 636E     		ldr	r3, [r4, #100]
  81:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
 755              		.loc 1 81 44 view .LVU191
 756 01b6 0021     		movs	r1, #0
 757 01b8 9B68     		ldr	r3, [r3, #8]
 758 01ba C5F30720 		ubfx	r0, r5, #8, #8
 759 01be 9847     		blx	r3
 760              	.LVL62:
 761 01c0 94F86820 		ldrb	r2, [r4, #104]	@ zero_extendqisi2
 762 01c4 A36C     		ldr	r3, [r4, #72]
 763 01c6 03EB8203 		add	r3, r3, r2, lsl #2
  82:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  |= TMC2660_SPIChannel->readWrite(datagram & 0xFF, 1);
 764              		.loc 1 82 2 is_stmt 1 view .LVU192
  83:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  >>= 4;
 765              		.loc 1 83 44 is_stmt 0 view .LVU193
 766 01ca 0121     		movs	r1, #1
  81:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  <<= 8;
 767              		.loc 1 81 41 view .LVU194
 768 01cc 5A68     		ldr	r2, [r3, #4]
 769 01ce 1043     		orrs	r0, r0, r2
  82:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  |= TMC2660_SPIChannel->readWrite(datagram & 0xFF, 1);
 770              		.loc 1 82 41 view .LVU195
 771 01d0 0002     		lsls	r0, r0, #8
 772 01d2 5860     		str	r0, [r3, #4]
  83:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  >>= 4;
 773              		.loc 1 83 2 is_stmt 1 view .LVU196
  83:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  >>= 4;
 774              		.loc 1 83 62 is_stmt 0 view .LVU197
 775 01d4 636E     		ldr	r3, [r4, #100]
  83:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  >>= 4;
 776              		.loc 1 83 44 view .LVU198
 777 01d6 E8B2     		uxtb	r0, r5
 778 01d8 9B68     		ldr	r3, [r3, #8]
 779 01da 9847     		blx	r3
 780              	.LVL63:
  83:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  >>= 4;
 781              		.loc 1 83 41 view .LVU199
 782 01dc A26C     		ldr	r2, [r4, #72]
 783 01de 94F86830 		ldrb	r3, [r4, #104]	@ zero_extendqisi2
 784 01e2 02EB8303 		add	r3, r2, r3, lsl #2
  84:boards/TMC2660_eval.c **** 
 785              		.loc 1 84 2 is_stmt 1 view .LVU200
  83:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel]  >>= 4;
 786              		.loc 1 83 41 is_stmt 0 view .LVU201
 787 01e6 5968     		ldr	r1, [r3, #4]
 788 01e8 0843     		orrs	r0, r0, r1
  84:boards/TMC2660_eval.c **** 
 789              		.loc 1 84 41 view .LVU202
 790 01ea 0011     		asrs	r0, r0, #4
 791 01ec 5860     		str	r0, [r3, #4]
  86:boards/TMC2660_eval.c **** 
 792              		.loc 1 86 2 is_stmt 1 view .LVU203
  89:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(datagram);
 793              		.loc 1 89 4 is_stmt 0 view .LVU204
 794 01ee AB0C     		lsrs	r3, r5, #18
  86:boards/TMC2660_eval.c **** 
 795              		.loc 1 86 58 view .LVU205
 796 01f0 1061     		str	r0, [r2, #16]
  89:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(datagram);
 797              		.loc 1 89 2 is_stmt 1 view .LVU206
  89:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(datagram);
 798              		.loc 1 89 4 is_stmt 0 view .LVU207
 799 01f2 0AD0     		beq	.L47
  89:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(datagram);
 800              		.loc 1 89 5 discriminator 1 view .LVU208
 801 01f4 C5F34243 		ubfx	r3, r5, #17, #3
  89:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(datagram);
 802              		.loc 1 89 35 discriminator 1 view .LVU209
 803 01f8 072B     		cmp	r3, #7
 804 01fa 03D1     		bne	.L46
  90:boards/TMC2660_eval.c **** 
 805              		.loc 1 90 3 is_stmt 1 view .LVU210
  90:boards/TMC2660_eval.c **** 
 806              		.loc 1 90 11 is_stmt 0 view .LVU211
 807 01fc C5F30111 		ubfx	r1, r5, #4, #2
  90:boards/TMC2660_eval.c **** 
 808              		.loc 1 90 9 view .LVU212
 809 0200 84F86810 		strb	r1, [r4, #104]
 810              	.L46:
  93:boards/TMC2660_eval.c **** }
 811              		.loc 1 93 2 is_stmt 1 view .LVU213
  93:boards/TMC2660_eval.c **** }
 812              		.loc 1 93 63 is_stmt 0 view .LVU214
 813 0204 43F00803 		orr	r3, r3, #8
 814 0208 00E0     		b	.L45
 815              	.L47:
 816 020a 0823     		movs	r3, #8
 817              	.L45:
  93:boards/TMC2660_eval.c **** }
 818              		.loc 1 93 85 discriminator 4 view .LVU215
 819 020c 02EB8303 		add	r3, r2, r3, lsl #2
 820 0210 5D60     		str	r5, [r3, #4]
  94:boards/TMC2660_eval.c **** 
 821              		.loc 1 94 1 discriminator 4 view .LVU216
 822 0212 38BD     		pop	{r3, r4, r5, pc}
 823              	.LVL64:
 824              	.L50:
  94:boards/TMC2660_eval.c **** 
 825              		.loc 1 94 1 discriminator 4 view .LVU217
 826              		.align	2
 827              	.L49:
 828 0214 00000000 		.word	.LANCHOR0
 829              		.cfi_endproc
 830              	.LFE1:
 832              		.align	1
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu softvfp
 838              	tmc2660_writeInt.constprop.0:
 839              	.LVL65:
 840              	.LFB32:
 110:boards/TMC2660_eval.c **** {
 841              		.loc 1 110 6 is_stmt 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 112:boards/TMC2660_eval.c **** 
 846              		.loc 1 112 2 view .LVU219
 115:boards/TMC2660_eval.c **** 
 847              		.loc 1 115 2 view .LVU220
 110:boards/TMC2660_eval.c **** {
 848              		.loc 1 110 6 is_stmt 0 view .LVU221
 849 0218 10B4     		push	{r4}
 850              	.LCFI9:
 851              		.cfi_def_cfa_offset 4
 852              		.cfi_offset 4, -4
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 853              		.loc 1 117 16 view .LVU222
 854 021a 0A4C     		ldr	r4, .L53
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 855              		.loc 1 117 38 view .LVU223
 856 021c 00F07702 		and	r2, r0, #119
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 857              		.loc 1 117 71 view .LVU224
 858 0220 A36C     		ldr	r3, [r4, #72]
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 859              		.loc 1 117 38 view .LVU225
 860 0222 42F00802 		orr	r2, r2, #8
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 861              		.loc 1 117 71 view .LVU226
 862 0226 03EB8203 		add	r3, r3, r2, lsl #2
 115:boards/TMC2660_eval.c **** 
 863              		.loc 1 115 8 view .LVU227
 864 022a C1F31301 		ubfx	r1, r1, #0, #20
 865              	.LVL66:
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 866              		.loc 1 117 2 is_stmt 1 view .LVU228
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 867              		.loc 1 117 71 is_stmt 0 view .LVU229
 868 022e 5960     		str	r1, [r3, #4]
 118:boards/TMC2660_eval.c **** 		readWrite(TMC2660_DATAGRAM(address, value));
 869              		.loc 1 118 2 is_stmt 1 view .LVU230
 118:boards/TMC2660_eval.c **** 		readWrite(TMC2660_DATAGRAM(address, value));
 870              		.loc 1 118 4 is_stmt 0 view .LVU231
 871 0230 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 872 0232 23B9     		cbnz	r3, .L51
 119:boards/TMC2660_eval.c **** }
 873              		.loc 1 119 3 is_stmt 1 view .LVU232
 120:boards/TMC2660_eval.c **** 
 874              		.loc 1 120 1 is_stmt 0 view .LVU233
 875 0234 10BC     		pop	{r4}
 876              	.LCFI10:
 877              		.cfi_remember_state
 878              		.cfi_restore 4
 879              		.cfi_def_cfa_offset 0
 119:boards/TMC2660_eval.c **** }
 880              		.loc 1 119 3 view .LVU234
 881 0236 41EA4040 		orr	r0, r1, r0, lsl #17
 882              	.LVL67:
 119:boards/TMC2660_eval.c **** }
 883              		.loc 1 119 3 view .LVU235
 884 023a FFF7FEBF 		b	readWrite
 885              	.LVL68:
 886              	.L51:
 887              	.LCFI11:
 888              		.cfi_restore_state
 120:boards/TMC2660_eval.c **** 
 889              		.loc 1 120 1 view .LVU236
 890 023e 10BC     		pop	{r4}
 891              	.LCFI12:
 892              		.cfi_restore 4
 893              		.cfi_def_cfa_offset 0
 894 0240 7047     		bx	lr
 895              	.L54:
 896 0242 00BF     		.align	2
 897              	.L53:
 898 0244 00000000 		.word	.LANCHOR0
 899              		.cfi_endproc
 900              	.LFE32:
 902              		.align	1
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 906              		.fpu softvfp
 908              	writeRegister:
 909              	.LVL69:
 910              	.LFB16:
 640:boards/TMC2660_eval.c **** 	UNUSED(motor);
 911              		.loc 1 640 1 is_stmt 1 view -0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 641:boards/TMC2660_eval.c **** 	tmc2660_writeInt(0, address, value);
 916              		.loc 1 641 2 view .LVU238
 642:boards/TMC2660_eval.c **** }
 917              		.loc 1 642 2 view .LVU239
 640:boards/TMC2660_eval.c **** 	UNUSED(motor);
 918              		.loc 1 640 1 is_stmt 0 view .LVU240
 919 0248 0846     		mov	r0, r1
 920              	.LVL70:
 642:boards/TMC2660_eval.c **** }
 921              		.loc 1 642 2 view .LVU241
 922 024a 1146     		mov	r1, r2
 923              	.LVL71:
 642:boards/TMC2660_eval.c **** }
 924              		.loc 1 642 2 view .LVU242
 925 024c E4E7     		b	tmc2660_writeInt.constprop.0
 926              	.LVL72:
 642:boards/TMC2660_eval.c **** }
 927              		.loc 1 642 2 view .LVU243
 928              		.cfi_endproc
 929              	.LFE16:
 931              		.align	1
 932              		.global	readImmediately
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 936              		.fpu softvfp
 938              	readImmediately:
 939              	.LVL73:
 940              	.LFB2:
  97:boards/TMC2660_eval.c **** 	uint32_t value, drvConf;
 941              		.loc 1 97 1 is_stmt 1 view -0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
  98:boards/TMC2660_eval.c **** 
 945              		.loc 1 98 2 view .LVU245
 101:boards/TMC2660_eval.c **** 	drvConf = value;
 946              		.loc 1 101 2 view .LVU246
  97:boards/TMC2660_eval.c **** 	uint32_t value, drvConf;
 947              		.loc 1 97 1 is_stmt 0 view .LVU247
 948 024e 38B5     		push	{r3, r4, r5, lr}
 949              	.LCFI13:
 950              		.cfi_def_cfa_offset 16
 951              		.cfi_offset 3, -16
 952              		.cfi_offset 4, -12
 953              		.cfi_offset 5, -8
 954              		.cfi_offset 14, -4
  97:boards/TMC2660_eval.c **** 	uint32_t value, drvConf;
 955              		.loc 1 97 1 view .LVU248
 956 0250 0446     		mov	r4, r0
 101:boards/TMC2660_eval.c **** 	drvConf = value;
 957              		.loc 1 101 10 view .LVU249
 958 0252 0F20     		movs	r0, #15
 959              	.LVL74:
 101:boards/TMC2660_eval.c **** 	drvConf = value;
 960              		.loc 1 101 10 view .LVU250
 961 0254 00F013F8 		bl	tmc2660_readInt.constprop.0
 962              	.LVL75:
 104:boards/TMC2660_eval.c **** 	readWrite(value);                                             // write to chip and readout reply
 963              		.loc 1 104 11 view .LVU251
 964 0258 0323     		movs	r3, #3
 965 025a B4FBF3F3 		udiv	r3, r4, r3
 966 025e 03EB4303 		add	r3, r3, r3, lsl #1
 967 0262 E41A     		subs	r4, r4, r3
 101:boards/TMC2660_eval.c **** 	drvConf = value;
 968              		.loc 1 101 10 view .LVU252
 969 0264 0546     		mov	r5, r0
 970              	.LVL76:
 102:boards/TMC2660_eval.c **** 	value &= ~TMC2660_SET_RDSEL(-1);                              // clear RDSEL bits
 971              		.loc 1 102 2 is_stmt 1 view .LVU253
 103:boards/TMC2660_eval.c **** 	value |= TMC2660_SET_RDSEL(rdsel%3);                          // set rdsel
 972              		.loc 1 103 2 view .LVU254
 104:boards/TMC2660_eval.c **** 	readWrite(value);                                             // write to chip and readout reply
 973              		.loc 1 104 11 is_stmt 0 view .LVU255
 974 0266 E4B2     		uxtb	r4, r4
 103:boards/TMC2660_eval.c **** 	value |= TMC2660_SET_RDSEL(rdsel%3);                          // set rdsel
 975              		.loc 1 103 8 view .LVU256
 976 0268 20F03000 		bic	r0, r0, #48
 977              	.LVL77:
 104:boards/TMC2660_eval.c **** 	readWrite(value);                                             // write to chip and readout reply
 978              		.loc 1 104 2 is_stmt 1 view .LVU257
 105:boards/TMC2660_eval.c **** 	readWrite(drvConf);                                           // write to chip and return desired 
 979              		.loc 1 105 2 view .LVU258
 980 026c 40EA0410 		orr	r0, r0, r4, lsl #4
 981 0270 FFF7FEFF 		bl	readWrite
 982              	.LVL78:
 106:boards/TMC2660_eval.c **** }
 983              		.loc 1 106 2 view .LVU259
 984 0274 2846     		mov	r0, r5
 107:boards/TMC2660_eval.c **** 
 985              		.loc 1 107 1 is_stmt 0 view .LVU260
 986 0276 BDE83840 		pop	{r3, r4, r5, lr}
 987              	.LCFI14:
 988              		.cfi_restore 14
 989              		.cfi_restore 5
 990              		.cfi_restore 4
 991              		.cfi_restore 3
 992              		.cfi_def_cfa_offset 0
 993              	.LVL79:
 106:boards/TMC2660_eval.c **** }
 994              		.loc 1 106 2 view .LVU261
 995 027a FFF7FEBF 		b	readWrite
 996              	.LVL80:
 106:boards/TMC2660_eval.c **** }
 997              		.loc 1 106 2 view .LVU262
 998              		.cfi_endproc
 999              	.LFE2:
 1001              		.align	1
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu softvfp
 1007              	tmc2660_readInt.constprop.0:
 1008              	.LVL81:
 1009              	.LFB31:
 122:boards/TMC2660_eval.c **** {
 1010              		.loc 1 122 10 is_stmt 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 124:boards/TMC2660_eval.c **** 
 1014              		.loc 1 124 2 view .LVU264
 126:boards/TMC2660_eval.c **** 		readImmediately(address);
 1015              		.loc 1 126 2 view .LVU265
 122:boards/TMC2660_eval.c **** {
 1016              		.loc 1 122 10 is_stmt 0 view .LVU266
 1017 027e 38B5     		push	{r3, r4, r5, lr}
 1018              	.LCFI15:
 1019              		.cfi_def_cfa_offset 16
 1020              		.cfi_offset 3, -16
 1021              		.cfi_offset 4, -12
 1022              		.cfi_offset 5, -8
 1023              		.cfi_offset 14, -4
 126:boards/TMC2660_eval.c **** 		readImmediately(address);
 1024              		.loc 1 126 13 view .LVU267
 1025 0280 084D     		ldr	r5, .L59
 126:boards/TMC2660_eval.c **** 		readImmediately(address);
 1026              		.loc 1 126 35 view .LVU268
 1027 0282 A97A     		ldrb	r1, [r5, #10]	@ zero_extendqisi2
 1028 0284 00F00802 		and	r2, r0, #8
 1029 0288 51EA0203 		orrs	r3, r1, r2
 122:boards/TMC2660_eval.c **** {
 1030              		.loc 1 122 10 view .LVU269
 1031 028c 0446     		mov	r4, r0
 126:boards/TMC2660_eval.c **** 		readImmediately(address);
 1032              		.loc 1 126 35 view .LVU270
 1033 028e 01D1     		bne	.L58
 127:boards/TMC2660_eval.c **** 
 1034              		.loc 1 127 3 is_stmt 1 view .LVU271
 1035 0290 FFF7FEFF 		bl	readImmediately
 1036              	.LVL82:
 1037              	.L58:
 129:boards/TMC2660_eval.c **** }
 1038              		.loc 1 129 2 view .LVU272
 129:boards/TMC2660_eval.c **** }
 1039              		.loc 1 129 39 is_stmt 0 view .LVU273
 1040 0294 A86C     		ldr	r0, [r5, #72]
 129:boards/TMC2660_eval.c **** }
 1041              		.loc 1 129 45 view .LVU274
 1042 0296 04F07F04 		and	r4, r4, #127
 129:boards/TMC2660_eval.c **** }
 1043              		.loc 1 129 39 view .LVU275
 1044 029a 00EB8404 		add	r4, r0, r4, lsl #2
 130:boards/TMC2660_eval.c **** 
 1045              		.loc 1 130 1 view .LVU276
 1046 029e 6068     		ldr	r0, [r4, #4]
 1047 02a0 38BD     		pop	{r3, r4, r5, pc}
 1048              	.L60:
 1049 02a2 00BF     		.align	2
 1050              	.L59:
 1051 02a4 00000000 		.word	.LANCHOR0
 1052              		.cfi_endproc
 1053              	.LFE31:
 1055              		.align	1
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1059              		.fpu softvfp
 1061              	handleParameter:
 1062              	.LVL83:
 1063              	.LFB13:
 243:boards/TMC2660_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 1064              		.loc 1 243 1 is_stmt 1 view -0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 0
 1067              		@ frame_needed = 0, uses_anonymous_args = 0
 244:boards/TMC2660_eval.c **** 
 1068              		.loc 1 244 2 view .LVU278
 246:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 1069              		.loc 1 246 2 view .LVU279
 243:boards/TMC2660_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 1070              		.loc 1 243 1 is_stmt 0 view .LVU280
 1071 02a8 70B5     		push	{r4, r5, r6, lr}
 1072              	.LCFI16:
 1073              		.cfi_def_cfa_offset 16
 1074              		.cfi_offset 4, -16
 1075              		.cfi_offset 5, -12
 1076              		.cfi_offset 6, -8
 1077              		.cfi_offset 14, -4
 243:boards/TMC2660_eval.c **** 	uint32_t errors = TMC_ERROR_NONE;
 1078              		.loc 1 243 1 view .LVU281
 1079 02aa 0446     		mov	r4, r0
 1080 02ac 1D46     		mov	r5, r3
 246:boards/TMC2660_eval.c **** 		return TMC_ERROR_MOTOR;
 1081              		.loc 1 246 4 view .LVU282
 1082 02ae 0E46     		mov	r6, r1
 1083 02b0 0029     		cmp	r1, #0
 1084 02b2 40F08983 		bne	.L166
 249:boards/TMC2660_eval.c **** 	{
 1085              		.loc 1 249 2 is_stmt 1 view .LVU283
 1086 02b6 D62A     		cmp	r2, #214
 1087 02b8 0AD8     		bhi	.L175
 1088 02ba 8B2A     		cmp	r2, #139
 1089 02bc 0AD8     		bhi	.L63
 1090 02be 1D2A     		cmp	r2, #29
 1091 02c0 40F2A480 		bls	.L179
 1092 02c4 322A     		cmp	r2, #50
 1093 02c6 00F06381 		beq	.L107
 1094 02ca 332A     		cmp	r2, #51
 1095 02cc 00F06981 		beq	.L108
 1096              	.LVL84:
 1097              	.L175:
 280:boards/TMC2660_eval.c **** 		}
 1098              		.loc 1 280 11 is_stmt 0 view .LVU284
 1099 02d0 0424     		movs	r4, #4
 1100              	.LVL85:
 280:boards/TMC2660_eval.c **** 		}
 1101              		.loc 1 280 11 view .LVU285
 1102 02d2 E1E0     		b	.L61
 1103              	.LVL86:
 1104              	.L63:
 280:boards/TMC2660_eval.c **** 		}
 1105              		.loc 1 280 11 view .LVU286
 1106 02d4 8C3A     		subs	r2, r2, #140
 1107              	.LVL87:
 280:boards/TMC2660_eval.c **** 		}
 1108              		.loc 1 280 11 view .LVU287
 1109 02d6 4A2A     		cmp	r2, #74
 1110 02d8 FAD8     		bhi	.L175
 1111 02da 01A3     		adr	r3, .L67
 1112 02dc 53F822F0 		ldr	pc, [r3, r2, lsl #2]
 1113              	.LVL88:
 1114              		.p2align 2
 1115              	.L67:
 1116 02e0 B5050000 		.word	.L96+1
 1117 02e4 D1020000 		.word	.L175+1
 1118 02e8 D1020000 		.word	.L175+1
 1119 02ec D1020000 		.word	.L175+1
 1120 02f0 D1020000 		.word	.L175+1
 1121 02f4 D1020000 		.word	.L175+1
 1122 02f8 D1020000 		.word	.L175+1
 1123 02fc D1020000 		.word	.L175+1
 1124 0300 D1020000 		.word	.L175+1
 1125 0304 D1020000 		.word	.L175+1
 1126 0308 D1020000 		.word	.L175+1
 1127 030c D1020000 		.word	.L175+1
 1128 0310 D1020000 		.word	.L175+1
 1129 0314 D1020000 		.word	.L175+1
 1130 0318 D1020000 		.word	.L175+1
 1131 031c D1020000 		.word	.L175+1
 1132 0320 D1020000 		.word	.L175+1
 1133 0324 D1020000 		.word	.L175+1
 1134 0328 D1020000 		.word	.L175+1
 1135 032c D1020000 		.word	.L175+1
 1136 0330 3D060000 		.word	.L95+1
 1137 0334 5F060000 		.word	.L94+1
 1138 0338 7F060000 		.word	.L93+1
 1139 033c A1060000 		.word	.L92+1
 1140 0340 C1060000 		.word	.L91+1
 1141 0344 E1060000 		.word	.L90+1
 1142 0348 01070000 		.word	.L89+1
 1143 034c 21070000 		.word	.L88+1
 1144 0350 43070000 		.word	.L87+1
 1145 0354 6B070000 		.word	.L86+1
 1146 0358 8D070000 		.word	.L85+1
 1147 035c B9070000 		.word	.L84+1
 1148 0360 DB070000 		.word	.L83+1
 1149 0364 F5070000 		.word	.L82+1
 1150 0368 19080000 		.word	.L81+1
 1151 036c 49080000 		.word	.L80+1
 1152 0370 6D080000 		.word	.L79+1
 1153 0374 8F080000 		.word	.L78+1
 1154 0378 B1080000 		.word	.L77+1
 1155 037c D3080000 		.word	.L76+1
 1156 0380 F5080000 		.word	.L75+1
 1157 0384 07090000 		.word	.L74+1
 1158 0388 19090000 		.word	.L73+1
 1159 038c 27090000 		.word	.L72+1
 1160 0390 47090000 		.word	.L71+1
 1161 0394 69090000 		.word	.L70+1
 1162 0398 D1020000 		.word	.L175+1
 1163 039c D1020000 		.word	.L175+1
 1164 03a0 D1020000 		.word	.L175+1
 1165 03a4 D1020000 		.word	.L175+1
 1166 03a8 D1020000 		.word	.L175+1
 1167 03ac D1020000 		.word	.L175+1
 1168 03b0 D1020000 		.word	.L175+1
 1169 03b4 D1020000 		.word	.L175+1
 1170 03b8 D1020000 		.word	.L175+1
 1171 03bc D1020000 		.word	.L175+1
 1172 03c0 D1020000 		.word	.L175+1
 1173 03c4 D1020000 		.word	.L175+1
 1174 03c8 D1020000 		.word	.L175+1
 1175 03cc D1020000 		.word	.L175+1
 1176 03d0 D1020000 		.word	.L175+1
 1177 03d4 D1020000 		.word	.L175+1
 1178 03d8 D1020000 		.word	.L175+1
 1179 03dc D1020000 		.word	.L175+1
 1180 03e0 D1020000 		.word	.L175+1
 1181 03e4 D1020000 		.word	.L175+1
 1182 03e8 83090000 		.word	.L69+1
 1183 03ec D1020000 		.word	.L175+1
 1184 03f0 AB090000 		.word	.L68+1
 1185 03f4 D1020000 		.word	.L175+1
 1186 03f8 D1020000 		.word	.L175+1
 1187 03fc D1020000 		.word	.L175+1
 1188 0400 D1020000 		.word	.L175+1
 1189 0404 D1020000 		.word	.L175+1
 1190 0408 BB090000 		.word	.L66+1
 1191              		.p2align 1
 1192              	.L179:
 280:boards/TMC2660_eval.c **** 		}
 1193              		.loc 1 280 11 view .LVU288
 1194 040c 1D2A     		cmp	r2, #29
 1195 040e 3FF65FAF 		bhi	.L175
 1196 0412 01A3     		adr	r3, .L98
 1197 0414 53F822F0 		ldr	pc, [r3, r2, lsl #2]
 1198              	.LVL89:
 1199              		.p2align 2
 1200              	.L98:
 1201 0418 91040000 		.word	.L106+1
 1202 041c A9040000 		.word	.L105+1
 1203 0420 BB040000 		.word	.L104+1
 1204 0424 CD040000 		.word	.L97+1
 1205 0428 D9040000 		.word	.L103+1
 1206 042c F1040000 		.word	.L102+1
 1207 0430 03050000 		.word	.L101+1
 1208 0434 55050000 		.word	.L100+1
 1209 0438 81050000 		.word	.L99+1
 1210 043c D1020000 		.word	.L175+1
 1211 0440 D1020000 		.word	.L175+1
 1212 0444 D1020000 		.word	.L175+1
 1213 0448 D1020000 		.word	.L175+1
 1214 044c D1020000 		.word	.L175+1
 1215 0450 D1020000 		.word	.L175+1
 1216 0454 D1020000 		.word	.L175+1
 1217 0458 D1020000 		.word	.L175+1
 1218 045c D1020000 		.word	.L175+1
 1219 0460 D1020000 		.word	.L175+1
 1220 0464 D1020000 		.word	.L175+1
 1221 0468 D1020000 		.word	.L175+1
 1222 046c D1020000 		.word	.L175+1
 1223 0470 D1020000 		.word	.L175+1
 1224 0474 D1020000 		.word	.L175+1
 1225 0478 D1020000 		.word	.L175+1
 1226 047c D1020000 		.word	.L175+1
 1227 0480 D1020000 		.word	.L175+1
 1228 0484 D1020000 		.word	.L175+1
 1229 0488 D1020000 		.word	.L175+1
 1230 048c CD040000 		.word	.L97+1
 1231              		.p2align 1
 1232              	.L106:
 253:boards/TMC2660_eval.c **** 			*value = StepDir_getTargetPosition(motor);
 1233              		.loc 1 253 3 is_stmt 1 view .LVU289
 253:boards/TMC2660_eval.c **** 			*value = StepDir_getTargetPosition(motor);
 1234              		.loc 1 253 5 is_stmt 0 view .LVU290
 1235 0490 20B9     		cbnz	r0, .L109
 254:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1236              		.loc 1 254 4 is_stmt 1 view .LVU291
 254:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1237              		.loc 1 254 13 is_stmt 0 view .LVU292
 1238 0492 FFF7FEFF 		bl	StepDir_getTargetPosition
 1239              	.LVL90:
 1240              	.L181:
 262:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1241              		.loc 1 262 11 view .LVU293
 1242 0496 2860     		str	r0, [r5]
 1243              	.LVL91:
 1244              	.L61:
 627:boards/TMC2660_eval.c **** 
 1245              		.loc 1 627 1 view .LVU294
 1246 0498 2046     		mov	r0, r4
 1247 049a 70BD     		pop	{r4, r5, r6, pc}
 1248              	.LVL92:
 1249              	.L109:
 255:boards/TMC2660_eval.c **** 			StepDir_moveTo(motor, *value);
 1250              		.loc 1 255 10 is_stmt 1 view .LVU295
 256:boards/TMC2660_eval.c **** 		}
 1251              		.loc 1 256 4 view .LVU296
 1252 049c 2968     		ldr	r1, [r5]
 1253              	.LVL93:
 256:boards/TMC2660_eval.c **** 		}
 1254              		.loc 1 256 4 is_stmt 0 view .LVU297
 1255 049e 0020     		movs	r0, #0
 1256              	.LVL94:
 256:boards/TMC2660_eval.c **** 		}
 1257              		.loc 1 256 4 view .LVU298
 1258 04a0 FFF7FEFF 		bl	StepDir_moveTo
 1259              	.LVL95:
 1260              	.L182:
 244:boards/TMC2660_eval.c **** 
 1261              		.loc 1 244 11 view .LVU299
 1262 04a4 0024     		movs	r4, #0
 1263 04a6 F7E7     		b	.L61
 1264              	.LVL96:
 1265              	.L105:
 261:boards/TMC2660_eval.c **** 			*value = StepDir_getActualPosition(motor);
 1266              		.loc 1 261 3 is_stmt 1 view .LVU300
 261:boards/TMC2660_eval.c **** 			*value = StepDir_getActualPosition(motor);
 1267              		.loc 1 261 5 is_stmt 0 view .LVU301
 1268 04a8 10B9     		cbnz	r0, .L110
 262:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1269              		.loc 1 262 4 is_stmt 1 view .LVU302
 262:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1270              		.loc 1 262 13 is_stmt 0 view .LVU303
 1271 04aa FFF7FEFF 		bl	StepDir_getActualPosition
 1272              	.LVL97:
 262:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1273              		.loc 1 262 13 view .LVU304
 1274 04ae F2E7     		b	.L181
 1275              	.LVL98:
 1276              	.L110:
 263:boards/TMC2660_eval.c **** 			StepDir_setActualPosition(motor, *value);
 1277              		.loc 1 263 10 is_stmt 1 view .LVU305
 264:boards/TMC2660_eval.c **** 		}
 1278              		.loc 1 264 4 view .LVU306
 1279 04b0 2968     		ldr	r1, [r5]
 1280              	.LVL99:
 264:boards/TMC2660_eval.c **** 		}
 1281              		.loc 1 264 4 is_stmt 0 view .LVU307
 1282 04b2 0020     		movs	r0, #0
 1283              	.LVL100:
 264:boards/TMC2660_eval.c **** 		}
 1284              		.loc 1 264 4 view .LVU308
 1285 04b4 FFF7FEFF 		bl	StepDir_setActualPosition
 1286              	.LVL101:
 264:boards/TMC2660_eval.c **** 		}
 1287              		.loc 1 264 4 view .LVU309
 1288 04b8 F4E7     		b	.L182
 1289              	.LVL102:
 1290              	.L104:
 269:boards/TMC2660_eval.c **** 			*value = StepDir_getTargetVelocity(motor);
 1291              		.loc 1 269 3 is_stmt 1 view .LVU310
 269:boards/TMC2660_eval.c **** 			*value = StepDir_getTargetVelocity(motor);
 1292              		.loc 1 269 5 is_stmt 0 view .LVU311
 1293 04ba 10B9     		cbnz	r0, .L111
 270:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1294              		.loc 1 270 4 is_stmt 1 view .LVU312
 270:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1295              		.loc 1 270 13 is_stmt 0 view .LVU313
 1296 04bc FFF7FEFF 		bl	StepDir_getTargetVelocity
 1297              	.LVL103:
 270:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1298              		.loc 1 270 13 view .LVU314
 1299 04c0 E9E7     		b	.L181
 1300              	.LVL104:
 1301              	.L111:
 271:boards/TMC2660_eval.c **** 			StepDir_rotate(motor, *value);
 1302              		.loc 1 271 10 is_stmt 1 view .LVU315
 272:boards/TMC2660_eval.c **** 		}
 1303              		.loc 1 272 4 view .LVU316
 1304 04c2 2968     		ldr	r1, [r5]
 1305              	.LVL105:
 272:boards/TMC2660_eval.c **** 		}
 1306              		.loc 1 272 4 is_stmt 0 view .LVU317
 1307 04c4 0020     		movs	r0, #0
 1308              	.LVL106:
 272:boards/TMC2660_eval.c **** 		}
 1309              		.loc 1 272 4 view .LVU318
 1310 04c6 FFF7FEFF 		bl	StepDir_rotate
 1311              	.LVL107:
 272:boards/TMC2660_eval.c **** 		}
 1312              		.loc 1 272 4 view .LVU319
 1313 04ca EBE7     		b	.L182
 1314              	.LVL108:
 1315              	.L97:
 277:boards/TMC2660_eval.c **** 			*value = StepDir_getActualVelocity(motor);
 1316              		.loc 1 277 3 is_stmt 1 view .LVU320
 277:boards/TMC2660_eval.c **** 			*value = StepDir_getActualVelocity(motor);
 1317              		.loc 1 277 5 is_stmt 0 view .LVU321
 1318 04cc 0028     		cmp	r0, #0
 1319 04ce 7FF4FFAE 		bne	.L175
 278:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1320              		.loc 1 278 4 is_stmt 1 view .LVU322
 278:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1321              		.loc 1 278 13 is_stmt 0 view .LVU323
 1322 04d2 FFF7FEFF 		bl	StepDir_getActualVelocity
 1323              	.LVL109:
 278:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1324              		.loc 1 278 13 view .LVU324
 1325 04d6 DEE7     		b	.L181
 1326              	.LVL110:
 1327              	.L103:
 285:boards/TMC2660_eval.c **** 			*value = StepDir_getVelocityMax(motor);
 1328              		.loc 1 285 3 is_stmt 1 view .LVU325
 285:boards/TMC2660_eval.c **** 			*value = StepDir_getVelocityMax(motor);
 1329              		.loc 1 285 5 is_stmt 0 view .LVU326
 1330 04d8 10B9     		cbnz	r0, .L112
 286:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1331              		.loc 1 286 4 is_stmt 1 view .LVU327
 286:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1332              		.loc 1 286 13 is_stmt 0 view .LVU328
 1333 04da FFF7FEFF 		bl	StepDir_getVelocityMax
 1334              	.LVL111:
 286:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1335              		.loc 1 286 13 view .LVU329
 1336 04de DAE7     		b	.L181
 1337              	.LVL112:
 1338              	.L112:
 287:boards/TMC2660_eval.c **** 			StepDir_setVelocityMax(motor, abs(*value));
 1339              		.loc 1 287 10 is_stmt 1 view .LVU330
 288:boards/TMC2660_eval.c **** 		}
 1340              		.loc 1 288 4 view .LVU331
 1341 04e0 2968     		ldr	r1, [r5]
 1342              	.LVL113:
 288:boards/TMC2660_eval.c **** 		}
 1343              		.loc 1 288 4 is_stmt 0 view .LVU332
 1344 04e2 0029     		cmp	r1, #0
 1345 04e4 B8BF     		it	lt
 1346 04e6 4942     		rsblt	r1, r1, #0
 1347 04e8 0020     		movs	r0, #0
 1348              	.LVL114:
 288:boards/TMC2660_eval.c **** 		}
 1349              		.loc 1 288 4 view .LVU333
 1350 04ea FFF7FEFF 		bl	StepDir_setVelocityMax
 1351              	.LVL115:
 288:boards/TMC2660_eval.c **** 		}
 1352              		.loc 1 288 4 view .LVU334
 1353 04ee D9E7     		b	.L182
 1354              	.LVL116:
 1355              	.L102:
 293:boards/TMC2660_eval.c **** 			*value = StepDir_getAcceleration(motor);
 1356              		.loc 1 293 3 is_stmt 1 view .LVU335
 293:boards/TMC2660_eval.c **** 			*value = StepDir_getAcceleration(motor);
 1357              		.loc 1 293 5 is_stmt 0 view .LVU336
 1358 04f0 10B9     		cbnz	r0, .L113
 294:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1359              		.loc 1 294 4 is_stmt 1 view .LVU337
 294:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1360              		.loc 1 294 13 is_stmt 0 view .LVU338
 1361 04f2 FFF7FEFF 		bl	StepDir_getAcceleration
 1362              	.LVL117:
 294:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1363              		.loc 1 294 13 view .LVU339
 1364 04f6 CEE7     		b	.L181
 1365              	.LVL118:
 1366              	.L113:
 295:boards/TMC2660_eval.c **** 			StepDir_setAcceleration(motor, *value);
 1367              		.loc 1 295 10 is_stmt 1 view .LVU340
 296:boards/TMC2660_eval.c **** 		}
 1368              		.loc 1 296 4 view .LVU341
 1369 04f8 2968     		ldr	r1, [r5]
 1370              	.LVL119:
 296:boards/TMC2660_eval.c **** 		}
 1371              		.loc 1 296 4 is_stmt 0 view .LVU342
 1372 04fa 0020     		movs	r0, #0
 1373              	.LVL120:
 296:boards/TMC2660_eval.c **** 		}
 1374              		.loc 1 296 4 view .LVU343
 1375 04fc FFF7FEFF 		bl	StepDir_setAcceleration
 1376              	.LVL121:
 296:boards/TMC2660_eval.c **** 		}
 1377              		.loc 1 296 4 view .LVU344
 1378 0500 D0E7     		b	.L182
 1379              	.LVL122:
 1380              	.L101:
 301:boards/TMC2660_eval.c **** 			*value = TMC2660.runCurrentScale;
 1381              		.loc 1 301 3 is_stmt 1 view .LVU345
 1382 0502 AB4E     		ldr	r6, .L197
 301:boards/TMC2660_eval.c **** 			*value = TMC2660.runCurrentScale;
 1383              		.loc 1 301 5 is_stmt 0 view .LVU346
 1384 0504 10B9     		cbnz	r0, .L114
 302:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1385              		.loc 1 302 4 is_stmt 1 view .LVU347
 302:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1386              		.loc 1 302 20 is_stmt 0 view .LVU348
 1387 0506 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 1388              	.LVL123:
 1389              	.L184:
 617:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1390              		.loc 1 617 11 view .LVU349
 1391 0508 2B60     		str	r3, [r5]
 1392 050a C5E7     		b	.L61
 1393              	.LVL124:
 1394              	.L114:
 303:boards/TMC2660_eval.c **** 			TMC2660.runCurrentScale = *value;
 1395              		.loc 1 303 10 is_stmt 1 view .LVU350
 304:boards/TMC2660_eval.c **** 			if(Evalboards.ch1.fullCover == NULL) {
 1396              		.loc 1 304 4 view .LVU351
 304:boards/TMC2660_eval.c **** 			if(Evalboards.ch1.fullCover == NULL) {
 1397              		.loc 1 304 28 is_stmt 0 view .LVU352
 1398 050c 2B68     		ldr	r3, [r5]
 1399 050e F372     		strb	r3, [r6, #11]
 305:boards/TMC2660_eval.c **** 				if(TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT) == 0)
 1400              		.loc 1 305 4 is_stmt 1 view .LVU353
 305:boards/TMC2660_eval.c **** 				if(TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT) == 0)
 1401              		.loc 1 305 21 is_stmt 0 view .LVU354
 1402 0510 A84B     		ldr	r3, .L197+4
 305:boards/TMC2660_eval.c **** 				if(TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT) == 0)
 1403              		.loc 1 305 6 view .LVU355
 1404 0512 D86E     		ldr	r0, [r3, #108]
 1405              	.LVL125:
 305:boards/TMC2660_eval.c **** 				if(TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT) == 0)
 1406              		.loc 1 305 6 view .LVU356
 1407 0514 88B9     		cbnz	r0, .L115
 306:boards/TMC2660_eval.c **** 					TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurren
 1408              		.loc 1 306 5 is_stmt 1 view .LVU357
 306:boards/TMC2660_eval.c **** 					TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurren
 1409              		.loc 1 306 8 is_stmt 0 view .LVU358
 1410 0516 FFF7B2FE 		bl	tmc2660_readInt.constprop.0
 1411              	.LVL126:
 306:boards/TMC2660_eval.c **** 					TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurren
 1412              		.loc 1 306 7 view .LVU359
 1413 051a 10F08004 		ands	r4, r0, #128
 1414 051e C1D1     		bne	.L182
 307:boards/TMC2660_eval.c **** 			} else {
 1415              		.loc 1 307 6 is_stmt 1 view .LVU360
 1416 0520 0E20     		movs	r0, #14
 1417 0522 FFF7ACFE 		bl	tmc2660_readInt.constprop.0
 1418              	.LVL127:
 1419 0526 F17A     		ldrb	r1, [r6, #11]	@ zero_extendqisi2
 1420              	.L186:
 322:boards/TMC2660_eval.c **** 			} else {
 1421              		.loc 1 322 6 is_stmt 0 view .LVU361
 1422 0528 20F01F00 		bic	r0, r0, #31
 1423 052c 01F01F01 		and	r1, r1, #31
 1424 0530 0143     		orrs	r1, r1, r0
 1425 0532 0E20     		movs	r0, #14
 1426 0534 FFF770FE 		bl	tmc2660_writeInt.constprop.0
 1427              	.LVL128:
 1428 0538 AEE7     		b	.L61
 1429              	.LVL129:
 1430              	.L115:
 309:boards/TMC2660_eval.c **** 				TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurrent
 1431              		.loc 1 309 5 is_stmt 1 view .LVU362
 309:boards/TMC2660_eval.c **** 				TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurrent
 1432              		.loc 1 309 36 is_stmt 0 view .LVU363
 1433 053a 2B68     		ldr	r3, [r5]
 1434 053c 3370     		strb	r3, [r6]
 310:boards/TMC2660_eval.c **** 			}
 1435              		.loc 1 310 5 is_stmt 1 view .LVU364
 1436 053e 0E20     		movs	r0, #14
 1437 0540 FFF79DFE 		bl	tmc2660_readInt.constprop.0
 1438              	.LVL130:
 310:boards/TMC2660_eval.c **** 			}
 1439              		.loc 1 310 5 is_stmt 0 view .LVU365
 1440 0544 F17A     		ldrb	r1, [r6, #11]	@ zero_extendqisi2
 1441 0546 20F01F00 		bic	r0, r0, #31
 1442 054a 01F01F01 		and	r1, r1, #31
 1443 054e 0143     		orrs	r1, r1, r0
 1444              	.L191:
 505:boards/TMC2660_eval.c **** 		}
 1445              		.loc 1 505 4 view .LVU366
 1446 0550 0E20     		movs	r0, #14
 1447 0552 07E1     		b	.L183
 1448              	.LVL131:
 1449              	.L100:
 316:boards/TMC2660_eval.c **** 			*value = TMC2660.standStillCurrentScale;
 1450              		.loc 1 316 3 is_stmt 1 view .LVU367
 1451 0554 964E     		ldr	r6, .L197
 316:boards/TMC2660_eval.c **** 			*value = TMC2660.standStillCurrentScale;
 1452              		.loc 1 316 5 is_stmt 0 view .LVU368
 1453 0556 08B9     		cbnz	r0, .L117
 317:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1454              		.loc 1 317 4 is_stmt 1 view .LVU369
 317:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1455              		.loc 1 317 20 is_stmt 0 view .LVU370
 1456 0558 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1457 055a D5E7     		b	.L184
 1458              	.L117:
 318:boards/TMC2660_eval.c **** 			TMC2660.standStillCurrentScale = *value;
 1459              		.loc 1 318 10 is_stmt 1 view .LVU371
 319:boards/TMC2660_eval.c **** 			if(Evalboards.ch1.fullCover == NULL) {
 1460              		.loc 1 319 4 view .LVU372
 319:boards/TMC2660_eval.c **** 			if(Evalboards.ch1.fullCover == NULL) {
 1461              		.loc 1 319 35 is_stmt 0 view .LVU373
 1462 055c 2B68     		ldr	r3, [r5]
 1463 055e 3370     		strb	r3, [r6]
 320:boards/TMC2660_eval.c **** 				if(TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT) == 1)
 1464              		.loc 1 320 4 is_stmt 1 view .LVU374
 320:boards/TMC2660_eval.c **** 				if(TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT) == 1)
 1465              		.loc 1 320 21 is_stmt 0 view .LVU375
 1466 0560 944B     		ldr	r3, .L197+4
 320:boards/TMC2660_eval.c **** 				if(TMC2660_FIELD_READ(0, TMC2660_DRVCTRL, TMC2660_STST_MASK, TMC2660_STST_SHIFT) == 1)
 1467              		.loc 1 320 6 view .LVU376
 1468 0562 DC6E     		ldr	r4, [r3, #108]
 1469 0564 4CB9     		cbnz	r4, .L118
 321:boards/TMC2660_eval.c **** 					TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStil
 1470              		.loc 1 321 5 is_stmt 1 view .LVU377
 321:boards/TMC2660_eval.c **** 					TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStil
 1471              		.loc 1 321 8 is_stmt 0 view .LVU378
 1472 0566 2046     		mov	r0, r4
 1473              	.LVL132:
 321:boards/TMC2660_eval.c **** 					TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStil
 1474              		.loc 1 321 8 view .LVU379
 1475 0568 FFF789FE 		bl	tmc2660_readInt.constprop.0
 1476              	.LVL133:
 321:boards/TMC2660_eval.c **** 					TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStil
 1477              		.loc 1 321 7 view .LVU380
 1478 056c 0306     		lsls	r3, r0, #24
 1479 056e 99D5     		bpl	.L182
 322:boards/TMC2660_eval.c **** 			} else {
 1480              		.loc 1 322 6 is_stmt 1 view .LVU381
 1481 0570 0E20     		movs	r0, #14
 1482 0572 FFF784FE 		bl	tmc2660_readInt.constprop.0
 1483              	.LVL134:
 1484 0576 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1485 0578 D6E7     		b	.L186
 1486              	.LVL135:
 1487              	.L118:
 324:boards/TMC2660_eval.c **** 			}
 1488              		.loc 1 324 5 view .LVU382
 324:boards/TMC2660_eval.c **** 			}
 1489              		.loc 1 324 29 is_stmt 0 view .LVU383
 1490 057a 2B68     		ldr	r3, [r5]
 1491 057c F372     		strb	r3, [r6, #11]
 1492 057e 91E7     		b	.L182
 1493              	.L99:
 330:boards/TMC2660_eval.c **** 			*value = (StepDir_getStatus(motor) & STATUS_TARGET_REACHED)? 1:0;
 1494              		.loc 1 330 3 is_stmt 1 view .LVU384
 330:boards/TMC2660_eval.c **** 			*value = (StepDir_getStatus(motor) & STATUS_TARGET_REACHED)? 1:0;
 1495              		.loc 1 330 5 is_stmt 0 view .LVU385
 1496 0580 0028     		cmp	r0, #0
 1497 0582 7FF4A5AE 		bne	.L175
 331:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1498              		.loc 1 331 4 is_stmt 1 view .LVU386
 331:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1499              		.loc 1 331 14 is_stmt 0 view .LVU387
 1500 0586 FFF7FEFF 		bl	StepDir_getStatus
 1501              	.LVL136:
 331:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1502              		.loc 1 331 66 view .LVU388
 1503 058a C0F30010 		ubfx	r0, r0, #4, #1
 1504 058e 82E7     		b	.L181
 1505              	.LVL137:
 1506              	.L107:
 345:boards/TMC2660_eval.c **** 			*value = StepDir_getMode(motor);
 1507              		.loc 1 345 3 is_stmt 1 view .LVU389
 345:boards/TMC2660_eval.c **** 			*value = StepDir_getMode(motor);
 1508              		.loc 1 345 5 is_stmt 0 view .LVU390
 1509 0590 10B9     		cbnz	r0, .L120
 346:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1510              		.loc 1 346 4 is_stmt 1 view .LVU391
 346:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1511              		.loc 1 346 13 is_stmt 0 view .LVU392
 1512 0592 FFF7FEFF 		bl	StepDir_getMode
 1513              	.LVL138:
 346:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1514              		.loc 1 346 13 view .LVU393
 1515 0596 7EE7     		b	.L181
 1516              	.LVL139:
 1517              	.L120:
 347:boards/TMC2660_eval.c **** 			StepDir_setMode(motor, *value);
 1518              		.loc 1 347 10 is_stmt 1 view .LVU394
 348:boards/TMC2660_eval.c **** 		}
 1519              		.loc 1 348 4 view .LVU395
 1520 0598 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1521              	.LVL140:
 348:boards/TMC2660_eval.c **** 		}
 1522              		.loc 1 348 4 is_stmt 0 view .LVU396
 1523 059a 3046     		mov	r0, r6
 1524              	.LVL141:
 348:boards/TMC2660_eval.c **** 		}
 1525              		.loc 1 348 4 view .LVU397
 1526 059c FFF7FEFF 		bl	StepDir_setMode
 1527              	.LVL142:
 348:boards/TMC2660_eval.c **** 		}
 1528              		.loc 1 348 4 view .LVU398
 1529 05a0 80E7     		b	.L182
 1530              	.LVL143:
 1531              	.L108:
 352:boards/TMC2660_eval.c **** 			*value = StepDir_getFrequency(motor);
 1532              		.loc 1 352 3 is_stmt 1 view .LVU399
 352:boards/TMC2660_eval.c **** 			*value = StepDir_getFrequency(motor);
 1533              		.loc 1 352 5 is_stmt 0 view .LVU400
 1534 05a2 10B9     		cbnz	r0, .L121
 353:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1535              		.loc 1 353 4 is_stmt 1 view .LVU401
 353:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1536              		.loc 1 353 13 is_stmt 0 view .LVU402
 1537 05a4 FFF7FEFF 		bl	StepDir_getFrequency
 1538              	.LVL144:
 353:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1539              		.loc 1 353 13 view .LVU403
 1540 05a8 75E7     		b	.L181
 1541              	.LVL145:
 1542              	.L121:
 354:boards/TMC2660_eval.c **** 			StepDir_setFrequency(motor, *value);
 1543              		.loc 1 354 10 is_stmt 1 view .LVU404
 355:boards/TMC2660_eval.c **** 		}
 1544              		.loc 1 355 4 view .LVU405
 1545 05aa 1968     		ldr	r1, [r3]
 1546              	.LVL146:
 355:boards/TMC2660_eval.c **** 		}
 1547              		.loc 1 355 4 is_stmt 0 view .LVU406
 1548 05ac 3046     		mov	r0, r6
 1549              	.LVL147:
 355:boards/TMC2660_eval.c **** 		}
 1550              		.loc 1 355 4 view .LVU407
 1551 05ae FFF7FEFF 		bl	StepDir_setFrequency
 1552              	.LVL148:
 355:boards/TMC2660_eval.c **** 		}
 1553              		.loc 1 355 4 view .LVU408
 1554 05b2 77E7     		b	.L182
 1555              	.LVL149:
 1556              	.L96:
 360:boards/TMC2660_eval.c **** 			*value = 8 - TMC2660_FIELD_READ(0, TMC2660_DRVCTRL | TMC2660_WRITE_BIT, TMC2660_MRES_MASK, TMC26
 1557              		.loc 1 360 3 is_stmt 1 view .LVU409
 360:boards/TMC2660_eval.c **** 			*value = 8 - TMC2660_FIELD_READ(0, TMC2660_DRVCTRL | TMC2660_WRITE_BIT, TMC2660_MRES_MASK, TMC26
 1558              		.loc 1 360 5 is_stmt 0 view .LVU410
 1559 05b4 38B9     		cbnz	r0, .L122
 361:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1560              		.loc 1 361 4 is_stmt 1 view .LVU411
 361:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1561              		.loc 1 361 17 is_stmt 0 view .LVU412
 1562 05b6 0820     		movs	r0, #8
 1563              	.LVL150:
 361:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1564              		.loc 1 361 17 view .LVU413
 1565 05b8 FFF761FE 		bl	tmc2660_readInt.constprop.0
 1566              	.LVL151:
 361:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1567              		.loc 1 361 17 view .LVU414
 1568 05bc 00F00F00 		and	r0, r0, #15
 361:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1569              		.loc 1 361 15 view .LVU415
 1570 05c0 C0F10800 		rsb	r0, r0, #8
 1571 05c4 67E7     		b	.L181
 1572              	.LVL152:
 1573              	.L122:
 362:boards/TMC2660_eval.c **** 			switch(*value)
 1574              		.loc 1 362 10 is_stmt 1 view .LVU416
 363:boards/TMC2660_eval.c **** 			{
 1575              		.loc 1 363 4 view .LVU417
 363:boards/TMC2660_eval.c **** 			{
 1576              		.loc 1 363 11 is_stmt 0 view .LVU418
 1577 05c6 2B68     		ldr	r3, [r5]
 1578 05c8 102B     		cmp	r3, #16
 1579 05ca 2FD0     		beq	.L123
 1580 05cc 0ADC     		bgt	.L124
 1581 05ce 013B     		subs	r3, r3, #1
 1582 05d0 072B     		cmp	r3, #7
 1583 05d2 0ED8     		bhi	.L125
 1584 05d4 072B     		cmp	r3, #7
 1585 05d6 0CD8     		bhi	.L125
 1586 05d8 DFE803F0 		tbb	[pc, r3]
 1587              	.L127:
 1588 05dc 15       		.byte	(.L130-.L127)/2
 1589 05dd 22       		.byte	(.L129-.L127)/2
 1590 05de 0B       		.byte	(.L125-.L127)/2
 1591 05df 24       		.byte	(.L128-.L127)/2
 1592 05e0 0B       		.byte	(.L125-.L127)/2
 1593 05e1 0B       		.byte	(.L125-.L127)/2
 1594 05e2 0B       		.byte	(.L125-.L127)/2
 1595 05e3 26       		.byte	(.L126-.L127)/2
 1596              		.p2align 1
 1597              	.L124:
 1598 05e4 802B     		cmp	r3, #128
 1599 05e6 27D0     		beq	.L131
 1600 05e8 08DC     		bgt	.L132
 1601 05ea 202B     		cmp	r3, #32
 1602 05ec 20D0     		beq	.L133
 1603 05ee 402B     		cmp	r3, #64
 1604 05f0 20D0     		beq	.L134
 1605              	.L125:
 374:boards/TMC2660_eval.c **** 			}
 1606              		.loc 1 374 15 is_stmt 1 view .LVU419
 374:boards/TMC2660_eval.c **** 			}
 1607              		.loc 1 374 22 is_stmt 0 view .LVU420
 1608 05f2 4FF0FF33 		mov	r3, #-1
 1609 05f6 2B60     		str	r3, [r5]
 374:boards/TMC2660_eval.c **** 			}
 1610              		.loc 1 374 29 is_stmt 1 view .LVU421
 377:boards/TMC2660_eval.c **** 			{
 1611              		.loc 1 377 4 view .LVU422
 383:boards/TMC2660_eval.c **** 			}
 1612              		.loc 1 383 12 is_stmt 0 view .LVU423
 1613 05f8 1024     		movs	r4, #16
 1614 05fa 4DE7     		b	.L61
 1615              	.L132:
 383:boards/TMC2660_eval.c **** 			}
 1616              		.loc 1 383 12 view .LVU424
 1617 05fc B3F5807F 		cmp	r3, #256
 1618 0600 F7D1     		bne	.L125
 373:boards/TMC2660_eval.c **** 			default:   *value = -1;  break;
 1619              		.loc 1 373 15 is_stmt 1 view .LVU425
 373:boards/TMC2660_eval.c **** 			default:   *value = -1;  break;
 1620              		.loc 1 373 22 is_stmt 0 view .LVU426
 1621 0602 0023     		movs	r3, #0
 1622 0604 00E0     		b	.L180
 1623              	.L130:
 365:boards/TMC2660_eval.c **** 			case 2:    *value = 7;   break;
 1624              		.loc 1 365 15 is_stmt 1 view .LVU427
 365:boards/TMC2660_eval.c **** 			case 2:    *value = 7;   break;
 1625              		.loc 1 365 22 is_stmt 0 view .LVU428
 1626 0606 0823     		movs	r3, #8
 1627              	.L180:
 373:boards/TMC2660_eval.c **** 			default:   *value = -1;  break;
 1628              		.loc 1 373 22 view .LVU429
 1629 0608 2B60     		str	r3, [r5]
 373:boards/TMC2660_eval.c **** 			default:   *value = -1;  break;
 1630              		.loc 1 373 29 is_stmt 1 view .LVU430
 377:boards/TMC2660_eval.c **** 			{
 1631              		.loc 1 377 4 view .LVU431
 379:boards/TMC2660_eval.c **** 			}
 1632              		.loc 1 379 5 view .LVU432
 1633 060a 0820     		movs	r0, #8
 1634              	.LVL153:
 379:boards/TMC2660_eval.c **** 			}
 1635              		.loc 1 379 5 is_stmt 0 view .LVU433
 1636 060c FFF737FE 		bl	tmc2660_readInt.constprop.0
 1637              	.LVL154:
 379:boards/TMC2660_eval.c **** 			}
 1638              		.loc 1 379 5 view .LVU434
 1639 0610 2968     		ldr	r1, [r5]
 1640 0612 20F00F00 		bic	r0, r0, #15
 1641 0616 01F00F01 		and	r1, r1, #15
 1642 061a 0143     		orrs	r1, r1, r0
 1643              	.L185:
 379:boards/TMC2660_eval.c **** 			}
 1644              		.loc 1 379 5 view .LVU435
 1645 061c 0820     		movs	r0, #8
 1646 061e A1E0     		b	.L183
 1647              	.LVL155:
 1648              	.L129:
 366:boards/TMC2660_eval.c **** 			case 4:    *value = 6;   break;
 1649              		.loc 1 366 15 is_stmt 1 view .LVU436
 366:boards/TMC2660_eval.c **** 			case 4:    *value = 6;   break;
 1650              		.loc 1 366 22 is_stmt 0 view .LVU437
 1651 0620 0723     		movs	r3, #7
 1652 0622 F1E7     		b	.L180
 1653              	.L128:
 367:boards/TMC2660_eval.c **** 			case 8:    *value = 5;   break;
 1654              		.loc 1 367 15 is_stmt 1 view .LVU438
 367:boards/TMC2660_eval.c **** 			case 8:    *value = 5;   break;
 1655              		.loc 1 367 22 is_stmt 0 view .LVU439
 1656 0624 0623     		movs	r3, #6
 1657 0626 EFE7     		b	.L180
 1658              	.L126:
 368:boards/TMC2660_eval.c **** 			case 16:   *value = 4;   break;
 1659              		.loc 1 368 15 is_stmt 1 view .LVU440
 368:boards/TMC2660_eval.c **** 			case 16:   *value = 4;   break;
 1660              		.loc 1 368 22 is_stmt 0 view .LVU441
 1661 0628 0523     		movs	r3, #5
 1662 062a EDE7     		b	.L180
 1663              	.L123:
 369:boards/TMC2660_eval.c **** 			case 32:   *value = 3;   break;
 1664              		.loc 1 369 15 is_stmt 1 view .LVU442
 369:boards/TMC2660_eval.c **** 			case 32:   *value = 3;   break;
 1665              		.loc 1 369 22 is_stmt 0 view .LVU443
 1666 062c 0423     		movs	r3, #4
 1667 062e EBE7     		b	.L180
 1668              	.L133:
 370:boards/TMC2660_eval.c **** 			case 64:   *value = 2;   break;
 1669              		.loc 1 370 15 is_stmt 1 view .LVU444
 370:boards/TMC2660_eval.c **** 			case 64:   *value = 2;   break;
 1670              		.loc 1 370 22 is_stmt 0 view .LVU445
 1671 0630 0323     		movs	r3, #3
 1672 0632 E9E7     		b	.L180
 1673              	.L134:
 371:boards/TMC2660_eval.c **** 			case 128:  *value = 1;   break;
 1674              		.loc 1 371 15 is_stmt 1 view .LVU446
 371:boards/TMC2660_eval.c **** 			case 128:  *value = 1;   break;
 1675              		.loc 1 371 22 is_stmt 0 view .LVU447
 1676 0634 0223     		movs	r3, #2
 1677 0636 E7E7     		b	.L180
 1678              	.L131:
 372:boards/TMC2660_eval.c **** 			case 256:  *value = 0;   break;
 1679              		.loc 1 372 15 is_stmt 1 view .LVU448
 372:boards/TMC2660_eval.c **** 			case 256:  *value = 0;   break;
 1680              		.loc 1 372 22 is_stmt 0 view .LVU449
 1681 0638 0123     		movs	r3, #1
 1682 063a E5E7     		b	.L180
 1683              	.L95:
 389:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCTRL | TMC2660_WRITE_BIT, TMC2660_INTPOL_MASK, TMC2660
 1684              		.loc 1 389 3 is_stmt 1 view .LVU450
 390:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1685              		.loc 1 390 13 is_stmt 0 view .LVU451
 1686 063c 0820     		movs	r0, #8
 1687              	.LVL156:
 389:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCTRL | TMC2660_WRITE_BIT, TMC2660_INTPOL_MASK, TMC2660
 1688              		.loc 1 389 5 view .LVU452
 1689 063e 24B9     		cbnz	r4, .L137
 390:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1690              		.loc 1 390 4 is_stmt 1 view .LVU453
 390:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1691              		.loc 1 390 13 is_stmt 0 view .LVU454
 1692 0640 FFF71DFE 		bl	tmc2660_readInt.constprop.0
 1693              	.LVL157:
 390:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1694              		.loc 1 390 13 view .LVU455
 1695 0644 C0F34020 		ubfx	r0, r0, #9, #1
 1696 0648 25E7     		b	.L181
 1697              	.LVL158:
 1698              	.L137:
 391:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCTRL, TMC2660_INTPOL_MASK, TMC2660_INTPOL_SHIFT, *value);
 1699              		.loc 1 391 10 is_stmt 1 view .LVU456
 392:boards/TMC2660_eval.c **** 		}
 1700              		.loc 1 392 4 view .LVU457
 1701 064a FFF718FE 		bl	tmc2660_readInt.constprop.0
 1702              	.LVL159:
 392:boards/TMC2660_eval.c **** 		}
 1703              		.loc 1 392 4 is_stmt 0 view .LVU458
 1704 064e 2B68     		ldr	r3, [r5]
 1705 0650 5B02     		lsls	r3, r3, #9
 1706 0652 03F40073 		and	r3, r3, #512
 1707 0656 20F40071 		bic	r1, r0, #512
 1708              	.L189:
 400:boards/TMC2660_eval.c **** 		}
 1709              		.loc 1 400 4 view .LVU459
 1710 065a 1943     		orrs	r1, r1, r3
 1711 065c DEE7     		b	.L185
 1712              	.LVL160:
 1713              	.L94:
 397:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCTRL | TMC2660_WRITE_BIT, TMC2660_DEDGE_MASK, TMC2660_
 1714              		.loc 1 397 3 is_stmt 1 view .LVU460
 398:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1715              		.loc 1 398 13 is_stmt 0 view .LVU461
 1716 065e 0820     		movs	r0, #8
 1717              	.LVL161:
 397:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCTRL | TMC2660_WRITE_BIT, TMC2660_DEDGE_MASK, TMC2660_
 1718              		.loc 1 397 5 view .LVU462
 1719 0660 24B9     		cbnz	r4, .L138
 398:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1720              		.loc 1 398 4 is_stmt 1 view .LVU463
 398:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1721              		.loc 1 398 13 is_stmt 0 view .LVU464
 1722 0662 FFF70CFE 		bl	tmc2660_readInt.constprop.0
 1723              	.LVL162:
 398:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1724              		.loc 1 398 13 view .LVU465
 1725 0666 C0F30020 		ubfx	r0, r0, #8, #1
 1726 066a 14E7     		b	.L181
 1727              	.LVL163:
 1728              	.L138:
 399:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCTRL, TMC2660_DEDGE_MASK, TMC2660_DEDGE_SHIFT, *value);
 1729              		.loc 1 399 10 is_stmt 1 view .LVU466
 400:boards/TMC2660_eval.c **** 		}
 1730              		.loc 1 400 4 view .LVU467
 1731 066c FFF707FE 		bl	tmc2660_readInt.constprop.0
 1732              	.LVL164:
 400:boards/TMC2660_eval.c **** 		}
 1733              		.loc 1 400 4 is_stmt 0 view .LVU468
 1734 0670 2B68     		ldr	r3, [r5]
 1735 0672 1B02     		lsls	r3, r3, #8
 1736 0674 03F48073 		and	r3, r3, #256
 1737 0678 20F48071 		bic	r1, r0, #256
 1738 067c EDE7     		b	.L189
 1739              	.LVL165:
 1740              	.L93:
 405:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_TBL_MASK, TMC2660_T
 1741              		.loc 1 405 3 is_stmt 1 view .LVU469
 406:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1742              		.loc 1 406 13 is_stmt 0 view .LVU470
 1743 067e 0C20     		movs	r0, #12
 1744              	.LVL166:
 405:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_TBL_MASK, TMC2660_T
 1745              		.loc 1 405 5 view .LVU471
 1746 0680 24B9     		cbnz	r4, .L139
 406:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1747              		.loc 1 406 4 is_stmt 1 view .LVU472
 406:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1748              		.loc 1 406 13 is_stmt 0 view .LVU473
 1749 0682 FFF7FCFD 		bl	tmc2660_readInt.constprop.0
 1750              	.LVL167:
 406:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1751              		.loc 1 406 13 view .LVU474
 1752 0686 C0F3C130 		ubfx	r0, r0, #15, #2
 1753 068a 04E7     		b	.L181
 1754              	.LVL168:
 1755              	.L139:
 407:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_TBL_MASK, TMC2660_TBL_SHIFT, *value);
 1756              		.loc 1 407 10 is_stmt 1 view .LVU475
 408:boards/TMC2660_eval.c **** 		}
 1757              		.loc 1 408 4 view .LVU476
 1758 068c FFF7F7FD 		bl	tmc2660_readInt.constprop.0
 1759              	.LVL169:
 408:boards/TMC2660_eval.c **** 		}
 1760              		.loc 1 408 4 is_stmt 0 view .LVU477
 1761 0690 2B68     		ldr	r3, [r5]
 1762 0692 DB03     		lsls	r3, r3, #15
 1763 0694 03F4C033 		and	r3, r3, #98304
 1764 0698 20F4C031 		bic	r1, r0, #98304
 1765              	.L192:
 585:boards/TMC2660_eval.c **** 		}
 1766              		.loc 1 585 4 view .LVU478
 1767 069c 1943     		orrs	r1, r1, r3
 1768 069e 4EE0     		b	.L193
 1769              	.LVL170:
 1770              	.L92:
 413:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_CHM_MASK, TMC2660_C
 1771              		.loc 1 413 3 is_stmt 1 view .LVU479
 414:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1772              		.loc 1 414 13 is_stmt 0 view .LVU480
 1773 06a0 0C20     		movs	r0, #12
 1774              	.LVL171:
 413:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_CHM_MASK, TMC2660_C
 1775              		.loc 1 413 5 view .LVU481
 1776 06a2 24B9     		cbnz	r4, .L140
 414:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1777              		.loc 1 414 4 is_stmt 1 view .LVU482
 414:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1778              		.loc 1 414 13 is_stmt 0 view .LVU483
 1779 06a4 FFF7EBFD 		bl	tmc2660_readInt.constprop.0
 1780              	.LVL172:
 414:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1781              		.loc 1 414 13 view .LVU484
 1782 06a8 C0F38030 		ubfx	r0, r0, #14, #1
 1783 06ac F3E6     		b	.L181
 1784              	.LVL173:
 1785              	.L140:
 415:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_CHM_MASK, TMC2660_CHM_SHIFT, *value);
 1786              		.loc 1 415 10 is_stmt 1 view .LVU485
 416:boards/TMC2660_eval.c **** 		}
 1787              		.loc 1 416 4 view .LVU486
 1788 06ae FFF7E6FD 		bl	tmc2660_readInt.constprop.0
 1789              	.LVL174:
 416:boards/TMC2660_eval.c **** 		}
 1790              		.loc 1 416 4 is_stmt 0 view .LVU487
 1791 06b2 2B68     		ldr	r3, [r5]
 1792 06b4 9B03     		lsls	r3, r3, #14
 1793 06b6 03F48043 		and	r3, r3, #16384
 1794 06ba 20F48041 		bic	r1, r0, #16384
 1795 06be EDE7     		b	.L192
 1796              	.LVL175:
 1797              	.L91:
 421:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_HDEC_MASK, TMC2660_
 1798              		.loc 1 421 3 is_stmt 1 view .LVU488
 422:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1799              		.loc 1 422 13 is_stmt 0 view .LVU489
 1800 06c0 0C20     		movs	r0, #12
 1801              	.LVL176:
 421:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_HDEC_MASK, TMC2660_
 1802              		.loc 1 421 5 view .LVU490
 1803 06c2 24B9     		cbnz	r4, .L141
 422:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1804              		.loc 1 422 4 is_stmt 1 view .LVU491
 422:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1805              		.loc 1 422 13 is_stmt 0 view .LVU492
 1806 06c4 FFF7DBFD 		bl	tmc2660_readInt.constprop.0
 1807              	.LVL177:
 422:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1808              		.loc 1 422 13 view .LVU493
 1809 06c8 C0F3C120 		ubfx	r0, r0, #11, #2
 1810 06cc E3E6     		b	.L181
 1811              	.LVL178:
 1812              	.L141:
 423:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_HDEC_MASK, TMC2660_HDEC_SHIFT, *value);
 1813              		.loc 1 423 10 is_stmt 1 view .LVU494
 424:boards/TMC2660_eval.c **** 		}
 1814              		.loc 1 424 4 view .LVU495
 1815 06ce FFF7D6FD 		bl	tmc2660_readInt.constprop.0
 1816              	.LVL179:
 424:boards/TMC2660_eval.c **** 		}
 1817              		.loc 1 424 4 is_stmt 0 view .LVU496
 1818 06d2 2B68     		ldr	r3, [r5]
 1819 06d4 DB02     		lsls	r3, r3, #11
 1820 06d6 03F4C053 		and	r3, r3, #6144
 1821 06da 20F4C051 		bic	r1, r0, #6144
 1822 06de DDE7     		b	.L192
 1823              	.LVL180:
 1824              	.L90:
 429:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_HEND_MASK, TMC2660_
 1825              		.loc 1 429 3 is_stmt 1 view .LVU497
 430:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1826              		.loc 1 430 13 is_stmt 0 view .LVU498
 1827 06e0 0C20     		movs	r0, #12
 1828              	.LVL181:
 429:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_HEND_MASK, TMC2660_
 1829              		.loc 1 429 5 view .LVU499
 1830 06e2 24B9     		cbnz	r4, .L142
 430:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1831              		.loc 1 430 4 is_stmt 1 view .LVU500
 430:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1832              		.loc 1 430 13 is_stmt 0 view .LVU501
 1833 06e4 FFF7CBFD 		bl	tmc2660_readInt.constprop.0
 1834              	.LVL182:
 430:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1835              		.loc 1 430 13 view .LVU502
 1836 06e8 C0F3C310 		ubfx	r0, r0, #7, #4
 1837 06ec D3E6     		b	.L181
 1838              	.LVL183:
 1839              	.L142:
 431:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_HEND_MASK, TMC2660_HEND_SHIFT, *value);
 1840              		.loc 1 431 10 is_stmt 1 view .LVU503
 432:boards/TMC2660_eval.c **** 		}
 1841              		.loc 1 432 4 view .LVU504
 1842 06ee FFF7C6FD 		bl	tmc2660_readInt.constprop.0
 1843              	.LVL184:
 432:boards/TMC2660_eval.c **** 		}
 1844              		.loc 1 432 4 is_stmt 0 view .LVU505
 1845 06f2 2B68     		ldr	r3, [r5]
 1846 06f4 DB01     		lsls	r3, r3, #7
 1847 06f6 03F4F063 		and	r3, r3, #1920
 1848 06fa 20F4F061 		bic	r1, r0, #1920
 1849 06fe CDE7     		b	.L192
 1850              	.LVL185:
 1851              	.L89:
 437:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_HSTRT_MASK, TMC2660
 1852              		.loc 1 437 3 is_stmt 1 view .LVU506
 438:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1853              		.loc 1 438 13 is_stmt 0 view .LVU507
 1854 0700 0C20     		movs	r0, #12
 1855              	.LVL186:
 437:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_HSTRT_MASK, TMC2660
 1856              		.loc 1 437 5 view .LVU508
 1857 0702 24B9     		cbnz	r4, .L143
 438:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1858              		.loc 1 438 4 is_stmt 1 view .LVU509
 438:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1859              		.loc 1 438 13 is_stmt 0 view .LVU510
 1860 0704 FFF7BBFD 		bl	tmc2660_readInt.constprop.0
 1861              	.LVL187:
 438:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1862              		.loc 1 438 13 view .LVU511
 1863 0708 C0F30210 		ubfx	r0, r0, #4, #3
 1864 070c C3E6     		b	.L181
 1865              	.LVL188:
 1866              	.L143:
 439:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_HSTRT_MASK, TMC2660_HSTRT_SHIFT, *value);
 1867              		.loc 1 439 10 is_stmt 1 view .LVU512
 440:boards/TMC2660_eval.c **** 		}
 1868              		.loc 1 440 4 view .LVU513
 1869 070e FFF7B6FD 		bl	tmc2660_readInt.constprop.0
 1870              	.LVL189:
 440:boards/TMC2660_eval.c **** 		}
 1871              		.loc 1 440 4 is_stmt 0 view .LVU514
 1872 0712 2B68     		ldr	r3, [r5]
 1873 0714 1B01     		lsls	r3, r3, #4
 1874 0716 03F07003 		and	r3, r3, #112
 1875 071a 20F07001 		bic	r1, r0, #112
 1876 071e BDE7     		b	.L192
 1877              	.LVL190:
 1878              	.L88:
 445:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_TOFF_MASK, TMC2660_
 1879              		.loc 1 445 3 is_stmt 1 view .LVU515
 446:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1880              		.loc 1 446 13 is_stmt 0 view .LVU516
 1881 0720 0C20     		movs	r0, #12
 1882              	.LVL191:
 445:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF | TMC2660_WRITE_BIT, TMC2660_TOFF_MASK, TMC2660_
 1883              		.loc 1 445 5 view .LVU517
 1884 0722 24B9     		cbnz	r4, .L144
 1885              	.L188:
 486:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1886              		.loc 1 486 13 view .LVU518
 1887 0724 FFF7ABFD 		bl	tmc2660_readInt.constprop.0
 1888              	.LVL192:
 486:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1889              		.loc 1 486 13 view .LVU519
 1890 0728 00F00F00 		and	r0, r0, #15
 1891 072c B3E6     		b	.L181
 1892              	.LVL193:
 1893              	.L144:
 447:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_TOFF_MASK, TMC2660_TOFF_SHIFT, *value);
 1894              		.loc 1 447 10 is_stmt 1 view .LVU520
 448:boards/TMC2660_eval.c **** 		}
 1895              		.loc 1 448 4 view .LVU521
 1896 072e FFF7A6FD 		bl	tmc2660_readInt.constprop.0
 1897              	.LVL194:
 448:boards/TMC2660_eval.c **** 		}
 1898              		.loc 1 448 4 is_stmt 0 view .LVU522
 1899 0732 2968     		ldr	r1, [r5]
 1900 0734 20F00F00 		bic	r0, r0, #15
 1901 0738 01F00F01 		and	r1, r1, #15
 1902 073c 0143     		orrs	r1, r1, r0
 1903              	.L193:
 585:boards/TMC2660_eval.c **** 		}
 1904              		.loc 1 585 4 view .LVU523
 1905 073e 0C20     		movs	r0, #12
 1906 0740 10E0     		b	.L183
 1907              	.LVL195:
 1908              	.L87:
 453:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEIMIN_MASK, TMC2660_SEIMIN_SHIFT);
 1909              		.loc 1 453 3 is_stmt 1 view .LVU524
 453:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEIMIN_MASK, TMC2660_SEIMIN_SHIFT);
 1910              		.loc 1 453 5 is_stmt 0 view .LVU525
 1911 0742 28B9     		cbnz	r0, .L145
 454:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1912              		.loc 1 454 4 is_stmt 1 view .LVU526
 454:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1913              		.loc 1 454 13 is_stmt 0 view .LVU527
 1914 0744 0520     		movs	r0, #5
 1915              	.LVL196:
 454:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1916              		.loc 1 454 13 view .LVU528
 1917 0746 FFF79AFD 		bl	tmc2660_readInt.constprop.0
 1918              	.LVL197:
 454:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1919              		.loc 1 454 13 view .LVU529
 1920 074a C0F3C030 		ubfx	r0, r0, #15, #1
 1921 074e A2E6     		b	.L181
 1922              	.LVL198:
 1923              	.L145:
 455:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEIMIN_MASK, TMC2660_SEIMIN_SHIFT, *value);
 1924              		.loc 1 455 10 is_stmt 1 view .LVU530
 456:boards/TMC2660_eval.c **** 		}
 1925              		.loc 1 456 4 view .LVU531
 1926 0750 0D20     		movs	r0, #13
 1927              	.LVL199:
 456:boards/TMC2660_eval.c **** 		}
 1928              		.loc 1 456 4 is_stmt 0 view .LVU532
 1929 0752 FFF794FD 		bl	tmc2660_readInt.constprop.0
 1930              	.LVL200:
 456:boards/TMC2660_eval.c **** 		}
 1931              		.loc 1 456 4 view .LVU533
 1932 0756 2B68     		ldr	r3, [r5]
 1933 0758 DB03     		lsls	r3, r3, #15
 1934 075a 9BB2     		uxth	r3, r3
 1935 075c 20F40041 		bic	r1, r0, #32768
 1936              	.L196:
 464:boards/TMC2660_eval.c **** 		}
 1937              		.loc 1 464 4 view .LVU534
 1938 0760 1943     		orrs	r1, r1, r3
 1939              	.L194:
 488:boards/TMC2660_eval.c **** 		}
 1940              		.loc 1 488 4 view .LVU535
 1941 0762 0D20     		movs	r0, #13
 1942              	.L183:
 379:boards/TMC2660_eval.c **** 			}
 1943              		.loc 1 379 5 view .LVU536
 1944 0764 FFF758FD 		bl	tmc2660_writeInt.constprop.0
 1945              	.LVL201:
 1946 0768 9CE6     		b	.L182
 1947              	.LVL202:
 1948              	.L86:
 461:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEDN_MASK, TMC2660_SEDN_SHIFT);
 1949              		.loc 1 461 3 is_stmt 1 view .LVU537
 461:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEDN_MASK, TMC2660_SEDN_SHIFT);
 1950              		.loc 1 461 5 is_stmt 0 view .LVU538
 1951 076a 28B9     		cbnz	r0, .L146
 462:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1952              		.loc 1 462 4 is_stmt 1 view .LVU539
 462:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1953              		.loc 1 462 13 is_stmt 0 view .LVU540
 1954 076c 0520     		movs	r0, #5
 1955              	.LVL203:
 462:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1956              		.loc 1 462 13 view .LVU541
 1957 076e FFF786FD 		bl	tmc2660_readInt.constprop.0
 1958              	.LVL204:
 462:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1959              		.loc 1 462 13 view .LVU542
 1960 0772 C0F34130 		ubfx	r0, r0, #13, #2
 1961 0776 8EE6     		b	.L181
 1962              	.LVL205:
 1963              	.L146:
 463:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEDN_MASK, TMC2660_SEDN_SHIFT, *value);
 1964              		.loc 1 463 10 is_stmt 1 view .LVU543
 464:boards/TMC2660_eval.c **** 		}
 1965              		.loc 1 464 4 view .LVU544
 1966 0778 0D20     		movs	r0, #13
 1967              	.LVL206:
 464:boards/TMC2660_eval.c **** 		}
 1968              		.loc 1 464 4 is_stmt 0 view .LVU545
 1969 077a FFF780FD 		bl	tmc2660_readInt.constprop.0
 1970              	.LVL207:
 464:boards/TMC2660_eval.c **** 		}
 1971              		.loc 1 464 4 view .LVU546
 1972 077e 2B68     		ldr	r3, [r5]
 1973 0780 5B03     		lsls	r3, r3, #13
 1974 0782 03F4C043 		and	r3, r3, #24576
 1975 0786 20F4C041 		bic	r1, r0, #24576
 1976 078a E9E7     		b	.L196
 1977              	.LVL208:
 1978              	.L85:
 469:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEMAX_MASK, TMC2660_SEMAX_SHIFT);
 1979              		.loc 1 469 3 is_stmt 1 view .LVU547
 469:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEMAX_MASK, TMC2660_SEMAX_SHIFT);
 1980              		.loc 1 469 5 is_stmt 0 view .LVU548
 1981 078c 28B9     		cbnz	r0, .L147
 470:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1982              		.loc 1 470 4 is_stmt 1 view .LVU549
 470:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1983              		.loc 1 470 13 is_stmt 0 view .LVU550
 1984 078e 0520     		movs	r0, #5
 1985              	.LVL209:
 470:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1986              		.loc 1 470 13 view .LVU551
 1987 0790 FFF775FD 		bl	tmc2660_readInt.constprop.0
 1988              	.LVL210:
 470:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 1989              		.loc 1 470 13 view .LVU552
 1990 0794 C0F30320 		ubfx	r0, r0, #8, #4
 1991 0798 7DE6     		b	.L181
 1992              	.LVL211:
 1993              	.L147:
 471:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEMAX_MASK, TMC2660_SEMAX_SHIFT, *value);
 1994              		.loc 1 471 10 is_stmt 1 view .LVU553
 472:boards/TMC2660_eval.c **** 		}
 1995              		.loc 1 472 4 view .LVU554
 1996 079a 0D20     		movs	r0, #13
 1997              	.LVL212:
 472:boards/TMC2660_eval.c **** 		}
 1998              		.loc 1 472 4 is_stmt 0 view .LVU555
 1999 079c FFF76FFD 		bl	tmc2660_readInt.constprop.0
 2000              	.LVL213:
 472:boards/TMC2660_eval.c **** 		}
 2001              		.loc 1 472 4 view .LVU556
 2002 07a0 2B68     		ldr	r3, [r5]
 2003 07a2 1B02     		lsls	r3, r3, #8
 2004 07a4 03F47063 		and	r3, r3, #3840
 2005 07a8 20F47061 		bic	r1, r0, #3840
 2006 07ac D8E7     		b	.L196
 2007              	.L198:
 2008 07ae 00BF     		.align	2
 2009              	.L197:
 2010 07b0 00000000 		.word	.LANCHOR0
 2011 07b4 00000000 		.word	Evalboards
 2012              	.LVL214:
 2013              	.L84:
 477:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEUP_MASK, TMC2660_SEUP_SHIFT);
 2014              		.loc 1 477 3 is_stmt 1 view .LVU557
 477:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEUP_MASK, TMC2660_SEUP_SHIFT);
 2015              		.loc 1 477 5 is_stmt 0 view .LVU558
 2016 07b8 28B9     		cbnz	r0, .L148
 478:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2017              		.loc 1 478 4 is_stmt 1 view .LVU559
 478:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2018              		.loc 1 478 13 is_stmt 0 view .LVU560
 2019 07ba 0520     		movs	r0, #5
 2020              	.LVL215:
 478:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2021              		.loc 1 478 13 view .LVU561
 2022 07bc FFF75FFD 		bl	tmc2660_readInt.constprop.0
 2023              	.LVL216:
 478:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2024              		.loc 1 478 13 view .LVU562
 2025 07c0 C0F34110 		ubfx	r0, r0, #5, #2
 2026 07c4 67E6     		b	.L181
 2027              	.LVL217:
 2028              	.L148:
 479:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEUP_MASK, TMC2660_SEUP_SHIFT, *value);
 2029              		.loc 1 479 10 is_stmt 1 view .LVU563
 480:boards/TMC2660_eval.c **** 		}
 2030              		.loc 1 480 4 view .LVU564
 2031 07c6 0D20     		movs	r0, #13
 2032              	.LVL218:
 480:boards/TMC2660_eval.c **** 		}
 2033              		.loc 1 480 4 is_stmt 0 view .LVU565
 2034 07c8 FFF759FD 		bl	tmc2660_readInt.constprop.0
 2035              	.LVL219:
 480:boards/TMC2660_eval.c **** 		}
 2036              		.loc 1 480 4 view .LVU566
 2037 07cc 2B68     		ldr	r3, [r5]
 2038 07ce 5B01     		lsls	r3, r3, #5
 2039 07d0 03F06003 		and	r3, r3, #96
 2040 07d4 20F06001 		bic	r1, r0, #96
 2041 07d8 C2E7     		b	.L196
 2042              	.LVL220:
 2043              	.L83:
 485:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEMIN_MASK, TMC2660_SEMIN_SHIFT);
 2044              		.loc 1 485 3 is_stmt 1 view .LVU567
 485:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SMARTEN, TMC2660_SEMIN_MASK, TMC2660_SEMIN_SHIFT);
 2045              		.loc 1 485 5 is_stmt 0 view .LVU568
 2046 07da 08B9     		cbnz	r0, .L149
 486:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2047              		.loc 1 486 4 is_stmt 1 view .LVU569
 486:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2048              		.loc 1 486 13 is_stmt 0 view .LVU570
 2049 07dc 0520     		movs	r0, #5
 2050              	.LVL221:
 486:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2051              		.loc 1 486 13 view .LVU571
 2052 07de A1E7     		b	.L188
 2053              	.LVL222:
 2054              	.L149:
 487:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEMIN_MASK, TMC2660_SEMIN_SHIFT, *value);
 2055              		.loc 1 487 10 is_stmt 1 view .LVU572
 488:boards/TMC2660_eval.c **** 		}
 2056              		.loc 1 488 4 view .LVU573
 2057 07e0 0D20     		movs	r0, #13
 2058              	.LVL223:
 488:boards/TMC2660_eval.c **** 		}
 2059              		.loc 1 488 4 is_stmt 0 view .LVU574
 2060 07e2 FFF74CFD 		bl	tmc2660_readInt.constprop.0
 2061              	.LVL224:
 488:boards/TMC2660_eval.c **** 		}
 2062              		.loc 1 488 4 view .LVU575
 2063 07e6 2968     		ldr	r1, [r5]
 2064 07e8 20F00F00 		bic	r0, r0, #15
 2065 07ec 01F00F01 		and	r1, r1, #15
 2066 07f0 0143     		orrs	r1, r1, r0
 2067 07f2 B6E7     		b	.L194
 2068              	.LVL225:
 2069              	.L82:
 493:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SGCSCONF, TMC2660_SFILT_MASK, TMC2660_SFILT_SHIFT);
 2070              		.loc 1 493 3 is_stmt 1 view .LVU576
 493:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SGCSCONF, TMC2660_SFILT_MASK, TMC2660_SFILT_SHIFT);
 2071              		.loc 1 493 5 is_stmt 0 view .LVU577
 2072 07f4 28B9     		cbnz	r0, .L150
 494:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2073              		.loc 1 494 4 is_stmt 1 view .LVU578
 494:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2074              		.loc 1 494 13 is_stmt 0 view .LVU579
 2075 07f6 0620     		movs	r0, #6
 2076              	.LVL226:
 2077              	.L187:
 591:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2078              		.loc 1 591 13 view .LVU580
 2079 07f8 FFF741FD 		bl	tmc2660_readInt.constprop.0
 2080              	.LVL227:
 591:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2081              		.loc 1 591 13 view .LVU581
 2082 07fc C0F30040 		ubfx	r0, r0, #16, #1
 2083 0800 49E6     		b	.L181
 2084              	.LVL228:
 2085              	.L150:
 495:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_SFILT_MASK, TMC2660_SFILT_SHIFT, *value);
 2086              		.loc 1 495 10 is_stmt 1 view .LVU582
 496:boards/TMC2660_eval.c **** 		}
 2087              		.loc 1 496 4 view .LVU583
 2088 0802 0E20     		movs	r0, #14
 2089              	.LVL229:
 496:boards/TMC2660_eval.c **** 		}
 2090              		.loc 1 496 4 is_stmt 0 view .LVU584
 2091 0804 FFF73BFD 		bl	tmc2660_readInt.constprop.0
 2092              	.LVL230:
 496:boards/TMC2660_eval.c **** 		}
 2093              		.loc 1 496 4 view .LVU585
 2094 0808 2B68     		ldr	r3, [r5]
 2095 080a 1B04     		lsls	r3, r3, #16
 2096 080c 03F48033 		and	r3, r3, #65536
 2097 0810 20F48031 		bic	r1, r0, #65536
 2098              	.L195:
 505:boards/TMC2660_eval.c **** 		}
 2099              		.loc 1 505 4 view .LVU586
 2100 0814 1943     		orrs	r1, r1, r3
 2101 0816 9BE6     		b	.L191
 2102              	.LVL231:
 2103              	.L81:
 501:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SGCSCONF, TMC2660_SGT_MASK, TMC2660_SGT_SHIFT);
 2104              		.loc 1 501 3 is_stmt 1 view .LVU587
 501:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_SGCSCONF, TMC2660_SGT_MASK, TMC2660_SGT_SHIFT);
 2105              		.loc 1 501 5 is_stmt 0 view .LVU588
 2106 0818 60B9     		cbnz	r0, .L151
 502:boards/TMC2660_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2107              		.loc 1 502 4 is_stmt 1 view .LVU589
 502:boards/TMC2660_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2108              		.loc 1 502 13 is_stmt 0 view .LVU590
 2109 081a 0620     		movs	r0, #6
 2110              	.LVL232:
 502:boards/TMC2660_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2111              		.loc 1 502 13 view .LVU591
 2112 081c FFF72FFD 		bl	tmc2660_readInt.constprop.0
 2113              	.LVL233:
 502:boards/TMC2660_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2114              		.loc 1 502 13 view .LVU592
 2115 0820 030A     		lsrs	r3, r0, #8
 503:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2116              		.loc 1 503 13 view .LVU593
 2117 0822 13F04003 		ands	r3, r3, #64
 502:boards/TMC2660_eval.c **** 			*value = CAST_Sn_TO_S32(*value, 7);
 2118              		.loc 1 502 13 view .LVU594
 2119 0826 C0F30620 		ubfx	r0, r0, #8, #7
 503:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2120              		.loc 1 503 4 is_stmt 1 view .LVU595
 503:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2121              		.loc 1 503 13 is_stmt 0 view .LVU596
 2122 082a 18BF     		it	ne
 2123 082c 6FF07F03 		mvnne	r3, #127
 2124 0830 1843     		orrs	r0, r0, r3
 2125 0832 30E6     		b	.L181
 2126              	.LVL234:
 2127              	.L151:
 504:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_SGT_MASK, TMC2660_SGT_SHIFT, *value);
 2128              		.loc 1 504 10 is_stmt 1 view .LVU597
 505:boards/TMC2660_eval.c **** 		}
 2129              		.loc 1 505 4 view .LVU598
 2130 0834 0E20     		movs	r0, #14
 2131              	.LVL235:
 505:boards/TMC2660_eval.c **** 		}
 2132              		.loc 1 505 4 is_stmt 0 view .LVU599
 2133 0836 FFF722FD 		bl	tmc2660_readInt.constprop.0
 2134              	.LVL236:
 505:boards/TMC2660_eval.c **** 		}
 2135              		.loc 1 505 4 view .LVU600
 2136 083a 2B68     		ldr	r3, [r5]
 2137 083c 1B02     		lsls	r3, r3, #8
 2138 083e 03F4FE43 		and	r3, r3, #32512
 2139 0842 20F4FE41 		bic	r1, r0, #32512
 2140 0846 E5E7     		b	.L195
 2141              	.LVL237:
 2142              	.L80:
 510:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_SLPH_MASK, TMC2660_SLPH_SHIFT);
 2143              		.loc 1 510 3 is_stmt 1 view .LVU601
 510:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_SLPH_MASK, TMC2660_SLPH_SHIFT);
 2144              		.loc 1 510 5 is_stmt 0 view .LVU602
 2145 0848 28B9     		cbnz	r0, .L153
 511:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2146              		.loc 1 511 4 is_stmt 1 view .LVU603
 511:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2147              		.loc 1 511 13 is_stmt 0 view .LVU604
 2148 084a 0720     		movs	r0, #7
 2149              	.LVL238:
 511:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2150              		.loc 1 511 13 view .LVU605
 2151 084c FFF717FD 		bl	tmc2660_readInt.constprop.0
 2152              	.LVL239:
 511:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2153              		.loc 1 511 13 view .LVU606
 2154 0850 C0F38130 		ubfx	r0, r0, #14, #2
 2155 0854 1FE6     		b	.L181
 2156              	.LVL240:
 2157              	.L153:
 512:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_SLPH_MASK, TMC2660_SLPH_SHIFT, *value);
 2158              		.loc 1 512 10 is_stmt 1 view .LVU607
 513:boards/TMC2660_eval.c **** 		}
 2159              		.loc 1 513 4 view .LVU608
 2160 0856 0F20     		movs	r0, #15
 2161              	.LVL241:
 513:boards/TMC2660_eval.c **** 		}
 2162              		.loc 1 513 4 is_stmt 0 view .LVU609
 2163 0858 FFF711FD 		bl	tmc2660_readInt.constprop.0
 2164              	.LVL242:
 513:boards/TMC2660_eval.c **** 		}
 2165              		.loc 1 513 4 view .LVU610
 2166 085c 2B68     		ldr	r3, [r5]
 2167 085e 9B03     		lsls	r3, r3, #14
 2168 0860 9BB2     		uxth	r3, r3
 2169 0862 20F44041 		bic	r1, r0, #49152
 2170              	.L190:
 593:boards/TMC2660_eval.c **** 		}
 2171              		.loc 1 593 4 view .LVU611
 2172 0866 1943     		orrs	r1, r1, r3
 2173 0868 0F20     		movs	r0, #15
 2174 086a 7BE7     		b	.L183
 2175              	.LVL243:
 2176              	.L79:
 518:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_SLPL_MASK, TMC2660_SLPL_SHIFT);
 2177              		.loc 1 518 3 is_stmt 1 view .LVU612
 518:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_SLPL_MASK, TMC2660_SLPL_SHIFT);
 2178              		.loc 1 518 5 is_stmt 0 view .LVU613
 2179 086c 28B9     		cbnz	r0, .L154
 519:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2180              		.loc 1 519 4 is_stmt 1 view .LVU614
 519:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2181              		.loc 1 519 13 is_stmt 0 view .LVU615
 2182 086e 0720     		movs	r0, #7
 2183              	.LVL244:
 519:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2184              		.loc 1 519 13 view .LVU616
 2185 0870 FFF705FD 		bl	tmc2660_readInt.constprop.0
 2186              	.LVL245:
 519:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2187              		.loc 1 519 13 view .LVU617
 2188 0874 C0F30130 		ubfx	r0, r0, #12, #2
 2189 0878 0DE6     		b	.L181
 2190              	.LVL246:
 2191              	.L154:
 520:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_SLPL_MASK, TMC2660_SLPL_SHIFT, *value);
 2192              		.loc 1 520 10 is_stmt 1 view .LVU618
 521:boards/TMC2660_eval.c **** 		}
 2193              		.loc 1 521 4 view .LVU619
 2194 087a 0F20     		movs	r0, #15
 2195              	.LVL247:
 521:boards/TMC2660_eval.c **** 		}
 2196              		.loc 1 521 4 is_stmt 0 view .LVU620
 2197 087c FFF7FFFC 		bl	tmc2660_readInt.constprop.0
 2198              	.LVL248:
 521:boards/TMC2660_eval.c **** 		}
 2199              		.loc 1 521 4 view .LVU621
 2200 0880 2B68     		ldr	r3, [r5]
 2201 0882 1B03     		lsls	r3, r3, #12
 2202 0884 03F44053 		and	r3, r3, #12288
 2203 0888 20F44051 		bic	r1, r0, #12288
 2204 088c EBE7     		b	.L190
 2205              	.LVL249:
 2206              	.L78:
 526:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_DISS2G_MASK, TMC2660_DISS2G_SHIFT);
 2207              		.loc 1 526 3 is_stmt 1 view .LVU622
 526:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_DISS2G_MASK, TMC2660_DISS2G_SHIFT);
 2208              		.loc 1 526 5 is_stmt 0 view .LVU623
 2209 088e 28B9     		cbnz	r0, .L155
 527:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2210              		.loc 1 527 4 is_stmt 1 view .LVU624
 527:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2211              		.loc 1 527 13 is_stmt 0 view .LVU625
 2212 0890 0720     		movs	r0, #7
 2213              	.LVL250:
 527:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2214              		.loc 1 527 13 view .LVU626
 2215 0892 FFF7F4FC 		bl	tmc2660_readInt.constprop.0
 2216              	.LVL251:
 527:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2217              		.loc 1 527 13 view .LVU627
 2218 0896 C0F38020 		ubfx	r0, r0, #10, #1
 2219 089a FCE5     		b	.L181
 2220              	.LVL252:
 2221              	.L155:
 528:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_DISS2G_MASK, TMC2660_DISS2G_SHIFT, *value);
 2222              		.loc 1 528 10 is_stmt 1 view .LVU628
 529:boards/TMC2660_eval.c **** 		}
 2223              		.loc 1 529 4 view .LVU629
 2224 089c 0F20     		movs	r0, #15
 2225              	.LVL253:
 529:boards/TMC2660_eval.c **** 		}
 2226              		.loc 1 529 4 is_stmt 0 view .LVU630
 2227 089e FFF7EEFC 		bl	tmc2660_readInt.constprop.0
 2228              	.LVL254:
 529:boards/TMC2660_eval.c **** 		}
 2229              		.loc 1 529 4 view .LVU631
 2230 08a2 2B68     		ldr	r3, [r5]
 2231 08a4 9B02     		lsls	r3, r3, #10
 2232 08a6 03F48063 		and	r3, r3, #1024
 2233 08aa 20F48061 		bic	r1, r0, #1024
 2234 08ae DAE7     		b	.L190
 2235              	.LVL255:
 2236              	.L77:
 534:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_TS2G_MASK, TMC2660_TS2G_SHIFT);
 2237              		.loc 1 534 3 is_stmt 1 view .LVU632
 534:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_TS2G_MASK, TMC2660_TS2G_SHIFT);
 2238              		.loc 1 534 5 is_stmt 0 view .LVU633
 2239 08b0 28B9     		cbnz	r0, .L156
 535:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2240              		.loc 1 535 4 is_stmt 1 view .LVU634
 535:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2241              		.loc 1 535 13 is_stmt 0 view .LVU635
 2242 08b2 0720     		movs	r0, #7
 2243              	.LVL256:
 535:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2244              		.loc 1 535 13 view .LVU636
 2245 08b4 FFF7E3FC 		bl	tmc2660_readInt.constprop.0
 2246              	.LVL257:
 535:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2247              		.loc 1 535 13 view .LVU637
 2248 08b8 C0F30120 		ubfx	r0, r0, #8, #2
 2249 08bc EBE5     		b	.L181
 2250              	.LVL258:
 2251              	.L156:
 536:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_TS2G_MASK, TMC2660_TS2G_SHIFT, *value);
 2252              		.loc 1 536 10 is_stmt 1 view .LVU638
 537:boards/TMC2660_eval.c **** 		}
 2253              		.loc 1 537 4 view .LVU639
 2254 08be 0F20     		movs	r0, #15
 2255              	.LVL259:
 537:boards/TMC2660_eval.c **** 		}
 2256              		.loc 1 537 4 is_stmt 0 view .LVU640
 2257 08c0 FFF7DDFC 		bl	tmc2660_readInt.constprop.0
 2258              	.LVL260:
 537:boards/TMC2660_eval.c **** 		}
 2259              		.loc 1 537 4 view .LVU641
 2260 08c4 2B68     		ldr	r3, [r5]
 2261 08c6 1B02     		lsls	r3, r3, #8
 2262 08c8 03F44073 		and	r3, r3, #768
 2263 08cc 20F44071 		bic	r1, r0, #768
 2264 08d0 C9E7     		b	.L190
 2265              	.LVL261:
 2266              	.L76:
 542:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_VSENSE_MASK, TMC2660_VSENSE_SHIFT);
 2267              		.loc 1 542 3 is_stmt 1 view .LVU642
 542:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_VSENSE_MASK, TMC2660_VSENSE_SHIFT);
 2268              		.loc 1 542 5 is_stmt 0 view .LVU643
 2269 08d2 28B9     		cbnz	r0, .L157
 543:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2270              		.loc 1 543 4 is_stmt 1 view .LVU644
 543:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2271              		.loc 1 543 13 is_stmt 0 view .LVU645
 2272 08d4 0720     		movs	r0, #7
 2273              	.LVL262:
 543:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2274              		.loc 1 543 13 view .LVU646
 2275 08d6 FFF7D2FC 		bl	tmc2660_readInt.constprop.0
 2276              	.LVL263:
 543:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2277              		.loc 1 543 13 view .LVU647
 2278 08da C0F38010 		ubfx	r0, r0, #6, #1
 2279 08de DAE5     		b	.L181
 2280              	.LVL264:
 2281              	.L157:
 544:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_VSENSE_MASK, TMC2660_VSENSE_SHIFT, *value);
 2282              		.loc 1 544 10 is_stmt 1 view .LVU648
 545:boards/TMC2660_eval.c **** 		}
 2283              		.loc 1 545 4 view .LVU649
 2284 08e0 0F20     		movs	r0, #15
 2285              	.LVL265:
 545:boards/TMC2660_eval.c **** 		}
 2286              		.loc 1 545 4 is_stmt 0 view .LVU650
 2287 08e2 FFF7CCFC 		bl	tmc2660_readInt.constprop.0
 2288              	.LVL266:
 545:boards/TMC2660_eval.c **** 		}
 2289              		.loc 1 545 4 view .LVU651
 2290 08e6 2B68     		ldr	r3, [r5]
 2291 08e8 9B01     		lsls	r3, r3, #6
 2292 08ea 03F04003 		and	r3, r3, #64
 2293 08ee 20F04001 		bic	r1, r0, #64
 2294 08f2 B8E7     		b	.L190
 2295              	.LVL267:
 2296              	.L75:
 550:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_RESPONSE2, TMC2660_SE_MASK, TMC2660_SE_SHIFT);
 2297              		.loc 1 550 3 is_stmt 1 view .LVU652
 550:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_RESPONSE2, TMC2660_SE_MASK, TMC2660_SE_SHIFT);
 2298              		.loc 1 550 5 is_stmt 0 view .LVU653
 2299 08f4 0028     		cmp	r0, #0
 2300 08f6 7FF4EBAC 		bne	.L175
 551:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2301              		.loc 1 551 4 is_stmt 1 view .LVU654
 551:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2302              		.loc 1 551 13 is_stmt 0 view .LVU655
 2303 08fa 0220     		movs	r0, #2
 2304              	.LVL268:
 551:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2305              		.loc 1 551 13 view .LVU656
 2306 08fc FFF7BFFC 		bl	tmc2660_readInt.constprop.0
 2307              	.LVL269:
 551:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2308              		.loc 1 551 13 view .LVU657
 2309 0900 C0F38420 		ubfx	r0, r0, #10, #5
 2310 0904 C7E5     		b	.L181
 2311              	.LVL270:
 2312              	.L74:
 558:boards/TMC2660_eval.c **** 			*value = StepDir_getStallGuardThreshold(motor);
 2313              		.loc 1 558 3 is_stmt 1 view .LVU658
 558:boards/TMC2660_eval.c **** 			*value = StepDir_getStallGuardThreshold(motor);
 2314              		.loc 1 558 5 is_stmt 0 view .LVU659
 2315 0906 10B9     		cbnz	r0, .L158
 559:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2316              		.loc 1 559 4 is_stmt 1 view .LVU660
 559:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2317              		.loc 1 559 13 is_stmt 0 view .LVU661
 2318 0908 FFF7FEFF 		bl	StepDir_getStallGuardThreshold
 2319              	.LVL271:
 559:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2320              		.loc 1 559 13 view .LVU662
 2321 090c C3E5     		b	.L181
 2322              	.LVL272:
 2323              	.L158:
 560:boards/TMC2660_eval.c **** 			StepDir_setStallGuardThreshold(motor, *value);
 2324              		.loc 1 560 10 is_stmt 1 view .LVU663
 561:boards/TMC2660_eval.c **** 		}
 2325              		.loc 1 561 4 view .LVU664
 2326 090e 2968     		ldr	r1, [r5]
 2327              	.LVL273:
 561:boards/TMC2660_eval.c **** 		}
 2328              		.loc 1 561 4 is_stmt 0 view .LVU665
 2329 0910 0020     		movs	r0, #0
 2330              	.LVL274:
 561:boards/TMC2660_eval.c **** 		}
 2331              		.loc 1 561 4 view .LVU666
 2332 0912 FFF7FEFF 		bl	StepDir_setStallGuardThreshold
 2333              	.LVL275:
 2334 0916 C5E5     		b	.L182
 2335              	.LVL276:
 2336              	.L73:
 566:boards/TMC2660_eval.c **** 			*value = TMC2660.coolStepThreshold;
 2337              		.loc 1 566 3 is_stmt 1 view .LVU667
 2338 0918 2C4B     		ldr	r3, .L199
 566:boards/TMC2660_eval.c **** 			*value = TMC2660.coolStepThreshold;
 2339              		.loc 1 566 5 is_stmt 0 view .LVU668
 2340 091a 08B9     		cbnz	r0, .L159
 567:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2341              		.loc 1 567 4 is_stmt 1 view .LVU669
 567:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2342              		.loc 1 567 11 is_stmt 0 view .LVU670
 2343 091c 1B69     		ldr	r3, [r3, #16]
 2344 091e F3E5     		b	.L184
 2345              	.L159:
 568:boards/TMC2660_eval.c **** 			TMC2660.coolStepThreshold = *value;
 2346              		.loc 1 568 10 is_stmt 1 view .LVU671
 569:boards/TMC2660_eval.c **** 		}
 2347              		.loc 1 569 4 view .LVU672
 569:boards/TMC2660_eval.c **** 		}
 2348              		.loc 1 569 30 is_stmt 0 view .LVU673
 2349 0920 2A68     		ldr	r2, [r5]
 2350 0922 1A61     		str	r2, [r3, #16]
 2351 0924 BEE5     		b	.L182
 2352              	.L72:
 574:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_SDOFF_MASK, TMC2660_SDOFF_SHIFT);
 2353              		.loc 1 574 3 is_stmt 1 view .LVU674
 574:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_SDOFF_MASK, TMC2660_SDOFF_SHIFT);
 2354              		.loc 1 574 5 is_stmt 0 view .LVU675
 2355 0926 28B9     		cbnz	r0, .L160
 575:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2356              		.loc 1 575 4 is_stmt 1 view .LVU676
 575:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2357              		.loc 1 575 13 is_stmt 0 view .LVU677
 2358 0928 0720     		movs	r0, #7
 2359              	.LVL277:
 575:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2360              		.loc 1 575 13 view .LVU678
 2361 092a FFF7A8FC 		bl	tmc2660_readInt.constprop.0
 2362              	.LVL278:
 575:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2363              		.loc 1 575 13 view .LVU679
 2364 092e C0F3C010 		ubfx	r0, r0, #7, #1
 2365 0932 B0E5     		b	.L181
 2366              	.LVL279:
 2367              	.L160:
 576:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_SDOFF_MASK, TMC2660_SDOFF_SHIFT, *value);
 2368              		.loc 1 576 10 is_stmt 1 view .LVU680
 577:boards/TMC2660_eval.c **** 		}
 2369              		.loc 1 577 4 view .LVU681
 2370 0934 0F20     		movs	r0, #15
 2371              	.LVL280:
 577:boards/TMC2660_eval.c **** 		}
 2372              		.loc 1 577 4 is_stmt 0 view .LVU682
 2373 0936 FFF7A2FC 		bl	tmc2660_readInt.constprop.0
 2374              	.LVL281:
 577:boards/TMC2660_eval.c **** 		}
 2375              		.loc 1 577 4 view .LVU683
 2376 093a 2B68     		ldr	r3, [r5]
 2377 093c DB01     		lsls	r3, r3, #7
 2378 093e DBB2     		uxtb	r3, r3
 2379 0940 20F08001 		bic	r1, r0, #128
 2380 0944 8FE7     		b	.L190
 2381              	.LVL282:
 2382              	.L71:
 582:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF, TMC2660_RNDTF_MASK, TMC2660_RNDTF_SHIFT);
 2383              		.loc 1 582 3 is_stmt 1 view .LVU684
 582:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_CHOPCONF, TMC2660_RNDTF_MASK, TMC2660_RNDTF_SHIFT);
 2384              		.loc 1 582 5 is_stmt 0 view .LVU685
 2385 0946 28B9     		cbnz	r0, .L161
 583:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2386              		.loc 1 583 4 is_stmt 1 view .LVU686
 583:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2387              		.loc 1 583 13 is_stmt 0 view .LVU687
 2388 0948 0420     		movs	r0, #4
 2389              	.LVL283:
 583:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2390              		.loc 1 583 13 view .LVU688
 2391 094a FFF798FC 		bl	tmc2660_readInt.constprop.0
 2392              	.LVL284:
 583:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2393              		.loc 1 583 13 view .LVU689
 2394 094e C0F34030 		ubfx	r0, r0, #13, #1
 2395 0952 A0E5     		b	.L181
 2396              	.LVL285:
 2397              	.L161:
 584:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_CHOPCONF, TMC2660_RNDTF_MASK, TMC2660_RNDTF_SHIFT, *value);
 2398              		.loc 1 584 10 is_stmt 1 view .LVU690
 585:boards/TMC2660_eval.c **** 		}
 2399              		.loc 1 585 4 view .LVU691
 2400 0954 0C20     		movs	r0, #12
 2401              	.LVL286:
 585:boards/TMC2660_eval.c **** 		}
 2402              		.loc 1 585 4 is_stmt 0 view .LVU692
 2403 0956 FFF792FC 		bl	tmc2660_readInt.constprop.0
 2404              	.LVL287:
 585:boards/TMC2660_eval.c **** 		}
 2405              		.loc 1 585 4 view .LVU693
 2406 095a 2B68     		ldr	r3, [r5]
 2407 095c 5B03     		lsls	r3, r3, #13
 2408 095e 03F40053 		and	r3, r3, #8192
 2409 0962 20F40051 		bic	r1, r0, #8192
 2410 0966 99E6     		b	.L192
 2411              	.LVL288:
 2412              	.L70:
 590:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_TST_MASK, TMC2660_TST_SHIFT);
 2413              		.loc 1 590 3 is_stmt 1 view .LVU694
 590:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_DRVCONF, TMC2660_TST_MASK, TMC2660_TST_SHIFT);
 2414              		.loc 1 590 5 is_stmt 0 view .LVU695
 2415 0968 08B9     		cbnz	r0, .L162
 591:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2416              		.loc 1 591 4 is_stmt 1 view .LVU696
 591:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2417              		.loc 1 591 13 is_stmt 0 view .LVU697
 2418 096a 0720     		movs	r0, #7
 2419              	.LVL289:
 591:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2420              		.loc 1 591 13 view .LVU698
 2421 096c 44E7     		b	.L187
 2422              	.LVL290:
 2423              	.L162:
 592:boards/TMC2660_eval.c **** 			TMC2660_FIELD_UPDATE(0, TMC2660_DRVCONF, TMC2660_TST_MASK, TMC2660_TST_SHIFT, *value);
 2424              		.loc 1 592 10 is_stmt 1 view .LVU699
 593:boards/TMC2660_eval.c **** 		}
 2425              		.loc 1 593 4 view .LVU700
 2426 096e 0F20     		movs	r0, #15
 2427              	.LVL291:
 593:boards/TMC2660_eval.c **** 		}
 2428              		.loc 1 593 4 is_stmt 0 view .LVU701
 2429 0970 FFF785FC 		bl	tmc2660_readInt.constprop.0
 2430              	.LVL292:
 593:boards/TMC2660_eval.c **** 		}
 2431              		.loc 1 593 4 view .LVU702
 2432 0974 2B68     		ldr	r3, [r5]
 2433 0976 1B04     		lsls	r3, r3, #16
 2434 0978 03F48033 		and	r3, r3, #65536
 2435 097c 20F48031 		bic	r1, r0, #65536
 2436 0980 71E7     		b	.L190
 2437              	.LVL293:
 2438              	.L69:
 598:boards/TMC2660_eval.c **** 			*value = (compatibilityMode) ?
 2439              		.loc 1 598 3 is_stmt 1 view .LVU703
 598:boards/TMC2660_eval.c **** 			*value = (compatibilityMode) ?
 2440              		.loc 1 598 5 is_stmt 0 view .LVU704
 2441 0982 0028     		cmp	r0, #0
 2442 0984 7FF4A4AC 		bne	.L175
 599:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE2, TMC2660_SGU_MASK, TMC2660_SGU_SHIFT)<<5 :
 2443              		.loc 1 599 4 is_stmt 1 view .LVU705
 599:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE2, TMC2660_SGU_MASK, TMC2660_SGU_SHIFT)<<5 :
 2444              		.loc 1 599 33 is_stmt 0 view .LVU706
 2445 0988 114B     		ldr	r3, .L199+4
 600:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE1, TMC2660_SG2_MASK, TMC2660_SG2_SHIFT);
 2446              		.loc 1 600 87 view .LVU707
 2447 098a 1B68     		ldr	r3, [r3]
 2448 098c 3BB1     		cbz	r3, .L163
 600:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE1, TMC2660_SG2_MASK, TMC2660_SG2_SHIFT);
 2449              		.loc 1 600 6 discriminator 1 view .LVU708
 2450 098e 0220     		movs	r0, #2
 2451              	.LVL294:
 600:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE1, TMC2660_SG2_MASK, TMC2660_SG2_SHIFT);
 2452              		.loc 1 600 6 discriminator 1 view .LVU709
 2453 0990 FFF775FC 		bl	tmc2660_readInt.constprop.0
 2454              	.LVL295:
 600:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE1, TMC2660_SG2_MASK, TMC2660_SG2_SHIFT);
 2455              		.loc 1 600 83 discriminator 1 view .LVU710
 2456 0994 800A     		lsrs	r0, r0, #10
 600:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE1, TMC2660_SG2_MASK, TMC2660_SG2_SHIFT);
 2457              		.loc 1 600 87 discriminator 1 view .LVU711
 2458 0996 00F47870 		and	r0, r0, #992
 2459              	.L164:
 599:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE2, TMC2660_SGU_MASK, TMC2660_SGU_SHIFT)<<5 :
 2460              		.loc 1 599 11 view .LVU712
 2461 099a 2860     		str	r0, [r5]
 2462 099c 82E5     		b	.L182
 2463              	.LVL296:
 2464              	.L163:
 601:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2465              		.loc 1 601 6 discriminator 2 view .LVU713
 2466 099e 0120     		movs	r0, #1
 2467              	.LVL297:
 601:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2468              		.loc 1 601 6 discriminator 2 view .LVU714
 2469 09a0 FFF76DFC 		bl	tmc2660_readInt.constprop.0
 2470              	.LVL298:
 600:boards/TMC2660_eval.c **** 					TMC2660_FIELD_READ(0, TMC2660_RESPONSE1, TMC2660_SG2_MASK, TMC2660_SG2_SHIFT);
 2471              		.loc 1 600 87 discriminator 2 view .LVU715
 2472 09a4 C0F38920 		ubfx	r0, r0, #10, #10
 2473 09a8 F7E7     		b	.L164
 2474              	.LVL299:
 2475              	.L68:
 608:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_RESPONSE_LATEST, TMC2660_STATUS_MASK, TMC2660_STATUS_SHIF
 2476              		.loc 1 608 3 is_stmt 1 view .LVU716
 608:boards/TMC2660_eval.c **** 			*value = TMC2660_FIELD_READ(0, TMC2660_RESPONSE_LATEST, TMC2660_STATUS_MASK, TMC2660_STATUS_SHIF
 2477              		.loc 1 608 5 is_stmt 0 view .LVU717
 2478 09aa 0028     		cmp	r0, #0
 2479 09ac 7FF490AC 		bne	.L175
 609:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2480              		.loc 1 609 4 is_stmt 1 view .LVU718
 609:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2481              		.loc 1 609 13 is_stmt 0 view .LVU719
 2482 09b0 0320     		movs	r0, #3
 2483              	.LVL300:
 609:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2484              		.loc 1 609 13 view .LVU720
 2485 09b2 FFF764FC 		bl	tmc2660_readInt.constprop.0
 2486              	.LVL301:
 609:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2487              		.loc 1 609 13 view .LVU721
 2488 09b6 C0B2     		uxtb	r0, r0
 2489 09b8 6DE5     		b	.L181
 2490              	.LVL302:
 2491              	.L66:
 616:boards/TMC2660_eval.c **** 			*value = TMC2660.standStillTimeout;
 2492              		.loc 1 616 3 is_stmt 1 view .LVU722
 2493 09ba 044B     		ldr	r3, .L199
 616:boards/TMC2660_eval.c **** 			*value = TMC2660.standStillTimeout;
 2494              		.loc 1 616 5 is_stmt 0 view .LVU723
 2495 09bc 08B9     		cbnz	r0, .L165
 617:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2496              		.loc 1 617 4 is_stmt 1 view .LVU724
 617:boards/TMC2660_eval.c **** 		} else if(readWrite == WRITE) {
 2497              		.loc 1 617 11 is_stmt 0 view .LVU725
 2498 09be 5B68     		ldr	r3, [r3, #4]
 2499 09c0 A2E5     		b	.L184
 2500              	.L165:
 618:boards/TMC2660_eval.c **** 			TMC2660.standStillTimeout = *value;
 2501              		.loc 1 618 10 is_stmt 1 view .LVU726
 619:boards/TMC2660_eval.c **** 		}
 2502              		.loc 1 619 4 view .LVU727
 619:boards/TMC2660_eval.c **** 		}
 2503              		.loc 1 619 30 is_stmt 0 view .LVU728
 2504 09c2 2A68     		ldr	r2, [r5]
 2505 09c4 5A60     		str	r2, [r3, #4]
 2506 09c6 6DE5     		b	.L182
 2507              	.LVL303:
 2508              	.L166:
 247:boards/TMC2660_eval.c **** 
 2509              		.loc 1 247 10 view .LVU729
 2510 09c8 0824     		movs	r4, #8
 2511 09ca 65E5     		b	.L61
 2512              	.L200:
 2513              		.align	2
 2514              	.L199:
 2515 09cc 00000000 		.word	.LANCHOR0
 2516 09d0 00000000 		.word	.LANCHOR1
 2517              		.cfi_endproc
 2518              	.LFE13:
 2520              		.align	1
 2521              		.syntax unified
 2522              		.thumb
 2523              		.thumb_func
 2524              		.fpu softvfp
 2526              	SAP:
 2527              	.LVL304:
 2528              	.LFB14:
 630:boards/TMC2660_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 2529              		.loc 1 630 1 is_stmt 1 view -0
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 8
 2532              		@ frame_needed = 0, uses_anonymous_args = 0
 631:boards/TMC2660_eval.c **** }
 2533              		.loc 1 631 2 view .LVU731
 630:boards/TMC2660_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 2534              		.loc 1 630 1 is_stmt 0 view .LVU732
 2535 09d4 07B5     		push	{r0, r1, r2, lr}
 2536              	.LCFI17:
 2537              		.cfi_def_cfa_offset 16
 2538              		.cfi_offset 14, -4
 630:boards/TMC2660_eval.c **** 	return handleParameter(WRITE, motor, type, &value);
 2539              		.loc 1 630 1 view .LVU733
 2540 09d6 0192     		str	r2, [sp, #4]
 631:boards/TMC2660_eval.c **** }
 2541              		.loc 1 631 9 view .LVU734
 2542 09d8 01AB     		add	r3, sp, #4
 2543 09da 0246     		mov	r2, r0
 2544              	.LVL305:
 631:boards/TMC2660_eval.c **** }
 2545              		.loc 1 631 9 view .LVU735
 2546 09dc 0120     		movs	r0, #1
 2547              	.LVL306:
 631:boards/TMC2660_eval.c **** }
 2548              		.loc 1 631 9 view .LVU736
 2549 09de FFF763FC 		bl	handleParameter
 2550              	.LVL307:
 632:boards/TMC2660_eval.c **** 
 2551              		.loc 1 632 1 view .LVU737
 2552 09e2 03B0     		add	sp, sp, #12
 2553              	.LCFI18:
 2554              		.cfi_def_cfa_offset 4
 2555              		@ sp needed
 2556 09e4 5DF804FB 		ldr	pc, [sp], #4
 2557              		.cfi_endproc
 2558              	.LFE14:
 2560              		.align	1
 2561              		.syntax unified
 2562              		.thumb
 2563              		.thumb_func
 2564              		.fpu softvfp
 2566              	GAP:
 2567              	.LVL308:
 2568              	.LFB15:
 635:boards/TMC2660_eval.c **** 	return handleParameter(READ, motor, type, value);
 2569              		.loc 1 635 1 is_stmt 1 view -0
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 0
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573              		@ link register save eliminated.
 636:boards/TMC2660_eval.c **** }
 2574              		.loc 1 636 2 view .LVU739
 635:boards/TMC2660_eval.c **** 	return handleParameter(READ, motor, type, value);
 2575              		.loc 1 635 1 is_stmt 0 view .LVU740
 2576 09e8 1346     		mov	r3, r2
 636:boards/TMC2660_eval.c **** }
 2577              		.loc 1 636 9 view .LVU741
 2578 09ea 0246     		mov	r2, r0
 2579              	.LVL309:
 636:boards/TMC2660_eval.c **** }
 2580              		.loc 1 636 9 view .LVU742
 2581 09ec 0020     		movs	r0, #0
 2582              	.LVL310:
 636:boards/TMC2660_eval.c **** }
 2583              		.loc 1 636 9 view .LVU743
 2584 09ee 5BE4     		b	handleParameter
 2585              	.LVL311:
 636:boards/TMC2660_eval.c **** }
 2586              		.loc 1 636 9 view .LVU744
 2587              		.cfi_endproc
 2588              	.LFE15:
 2590              		.align	1
 2591              		.syntax unified
 2592              		.thumb
 2593              		.thumb_func
 2594              		.fpu softvfp
 2596              	readRegister:
 2597              	.LVL312:
 2598              	.LFB17:
 646:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2599              		.loc 1 646 1 is_stmt 1 view -0
 2600              		.cfi_startproc
 2601              		@ args = 0, pretend = 0, frame = 0
 2602              		@ frame_needed = 0, uses_anonymous_args = 0
 647:boards/TMC2660_eval.c **** 	*value = tmc2660_readInt(0, address);
 2603              		.loc 1 647 2 view .LVU746
 648:boards/TMC2660_eval.c **** }
 2604              		.loc 1 648 2 view .LVU747
 646:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2605              		.loc 1 646 1 is_stmt 0 view .LVU748
 2606 09f0 10B5     		push	{r4, lr}
 2607              	.LCFI19:
 2608              		.cfi_def_cfa_offset 8
 2609              		.cfi_offset 4, -8
 2610              		.cfi_offset 14, -4
 648:boards/TMC2660_eval.c **** }
 2611              		.loc 1 648 11 view .LVU749
 2612 09f2 0846     		mov	r0, r1
 2613              	.LVL313:
 646:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2614              		.loc 1 646 1 view .LVU750
 2615 09f4 1446     		mov	r4, r2
 648:boards/TMC2660_eval.c **** }
 2616              		.loc 1 648 11 view .LVU751
 2617 09f6 FFF742FC 		bl	tmc2660_readInt.constprop.0
 2618              	.LVL314:
 648:boards/TMC2660_eval.c **** }
 2619              		.loc 1 648 9 view .LVU752
 2620 09fa 2060     		str	r0, [r4]
 649:boards/TMC2660_eval.c **** 
 2621              		.loc 1 649 1 view .LVU753
 2622 09fc 10BD     		pop	{r4, pc}
 649:boards/TMC2660_eval.c **** 
 2623              		.loc 1 649 1 view .LVU754
 2624              		.cfi_endproc
 2625              	.LFE17:
 2627              		.align	1
 2628              		.syntax unified
 2629              		.thumb
 2630              		.thumb_func
 2631              		.fpu softvfp
 2633              	periodicJob:
 2634              	.LVL315:
 2635              	.LFB21:
 695:boards/TMC2660_eval.c **** 	static uint8_t lastCoolStepState = 0;
 2636              		.loc 1 695 1 is_stmt 1 view -0
 2637              		.cfi_startproc
 2638              		@ args = 0, pretend = 0, frame = 0
 2639              		@ frame_needed = 0, uses_anonymous_args = 0
 696:boards/TMC2660_eval.c **** 	static uint8_t lastStandstillState = 0;
 2640              		.loc 1 696 2 view .LVU756
 697:boards/TMC2660_eval.c **** 	uint8_t stst;
 2641              		.loc 1 697 2 view .LVU757
 698:boards/TMC2660_eval.c **** 
 2642              		.loc 1 698 2 view .LVU758
 700:boards/TMC2660_eval.c **** 		// Apply current settings
 2643              		.loc 1 700 2 view .LVU759
 695:boards/TMC2660_eval.c **** 	static uint8_t lastCoolStepState = 0;
 2644              		.loc 1 695 1 is_stmt 0 view .LVU760
 2645 09fe F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2646              	.LCFI20:
 2647              		.cfi_def_cfa_offset 24
 2648              		.cfi_offset 3, -24
 2649              		.cfi_offset 4, -20
 2650              		.cfi_offset 5, -16
 2651              		.cfi_offset 6, -12
 2652              		.cfi_offset 7, -8
 2653              		.cfi_offset 14, -4
 700:boards/TMC2660_eval.c **** 		// Apply current settings
 2654              		.loc 1 700 19 view .LVU761
 2655 0a00 364D     		ldr	r5, .L218
 2656 0a02 374C     		ldr	r4, .L218+4
 695:boards/TMC2660_eval.c **** 	static uint8_t lastCoolStepState = 0;
 2657              		.loc 1 695 1 view .LVU762
 2658 0a04 0746     		mov	r7, r0
 700:boards/TMC2660_eval.c **** 		// Apply current settings
 2659              		.loc 1 700 4 view .LVU763
 2660 0a06 E86E     		ldr	r0, [r5, #108]
 2661              	.LVL316:
 700:boards/TMC2660_eval.c **** 		// Apply current settings
 2662              		.loc 1 700 4 view .LVU764
 2663 0a08 E8B9     		cbnz	r0, .L206
 702:boards/TMC2660_eval.c **** 			on_standstill_changed(stst);
 2664              		.loc 1 702 3 is_stmt 1 view .LVU765
 702:boards/TMC2660_eval.c **** 			on_standstill_changed(stst);
 2665              		.loc 1 702 14 is_stmt 0 view .LVU766
 2666 0a0a FFF738FC 		bl	tmc2660_readInt.constprop.0
 2667              	.LVL317:
 702:boards/TMC2660_eval.c **** 			on_standstill_changed(stst);
 2668              		.loc 1 702 5 view .LVU767
 2669 0a0e 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 702:boards/TMC2660_eval.c **** 			on_standstill_changed(stst);
 2670              		.loc 1 702 12 view .LVU768
 2671 0a12 C0F3C016 		ubfx	r6, r0, #7, #1
 2672              	.LVL318:
 702:boards/TMC2660_eval.c **** 			on_standstill_changed(stst);
 2673              		.loc 1 702 5 view .LVU769
 2674 0a16 B342     		cmp	r3, r6
 2675 0a18 15D0     		beq	.L206
 703:boards/TMC2660_eval.c **** 			lastStandstillState = stst;
 2676              		.loc 1 703 4 is_stmt 1 view .LVU770
 2677              	.LVL319:
 2678              	.LBB31:
 2679              	.LBI31:
 683:boards/TMC2660_eval.c **** {
 2680              		.loc 1 683 13 view .LVU771
 2681              	.LBB32:
 685:boards/TMC2660_eval.c **** 		TMC2660.runCurrentScale = TMC2660_FIELD_READ(0, 0x0E, TMC2660_CS_MASK, TMC2660_CS_SHIFT);
 2682              		.loc 1 685 2 view .LVU772
 686:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStillCu
 2683              		.loc 1 686 29 is_stmt 0 view .LVU773
 2684 0a1a 0E20     		movs	r0, #14
 685:boards/TMC2660_eval.c **** 		TMC2660.runCurrentScale = TMC2660_FIELD_READ(0, 0x0E, TMC2660_CS_MASK, TMC2660_CS_SHIFT);
 2685              		.loc 1 685 4 view .LVU774
 2686 0a1c 002E     		cmp	r6, #0
 2687 0a1e 4CD0     		beq	.L208
 686:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStillCu
 2688              		.loc 1 686 3 is_stmt 1 view .LVU775
 686:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStillCu
 2689              		.loc 1 686 29 is_stmt 0 view .LVU776
 2690 0a20 FFF72DFC 		bl	tmc2660_readInt.constprop.0
 2691              	.LVL320:
 2692 0a24 00F01F00 		and	r0, r0, #31
 686:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.standStillCu
 2693              		.loc 1 686 27 view .LVU777
 2694 0a28 E072     		strb	r0, [r4, #11]
 687:boards/TMC2660_eval.c **** 	} else if(newStandstill == false) {
 2695              		.loc 1 687 3 is_stmt 1 view .LVU778
 2696 0a2a 0E20     		movs	r0, #14
 2697 0a2c FFF727FC 		bl	tmc2660_readInt.constprop.0
 2698              	.LVL321:
 2699 0a30 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 2700              	.L217:
 690:boards/TMC2660_eval.c **** 	}
 2701              		.loc 1 690 3 is_stmt 0 view .LVU779
 2702 0a32 20F01F00 		bic	r0, r0, #31
 2703 0a36 01F01F01 		and	r1, r1, #31
 2704 0a3a 0143     		orrs	r1, r1, r0
 2705 0a3c 0E20     		movs	r0, #14
 2706 0a3e FFF7EBFB 		bl	tmc2660_writeInt.constprop.0
 2707              	.LVL322:
 690:boards/TMC2660_eval.c **** 	}
 2708              		.loc 1 690 3 view .LVU780
 2709              	.LBE32:
 2710              	.LBE31:
 704:boards/TMC2660_eval.c **** 		}
 2711              		.loc 1 704 4 is_stmt 1 view .LVU781
 704:boards/TMC2660_eval.c **** 		}
 2712              		.loc 1 704 24 is_stmt 0 view .LVU782
 2713 0a42 84F86960 		strb	r6, [r4, #105]
 2714              	.LVL323:
 2715              	.L206:
 708:boards/TMC2660_eval.c **** 	Evalboards.ch2.errors = (TMC2660.isStandStillCurrentLimit) 	? (Evalboards.ch2.errors | ERRORS_I_TI
 2716              		.loc 1 708 2 is_stmt 1 view .LVU783
 708:boards/TMC2660_eval.c **** 	Evalboards.ch2.errors = (TMC2660.isStandStillCurrentLimit) 	? (Evalboards.ch2.errors | ERRORS_I_TI
 2717              		.loc 1 708 105 is_stmt 0 view .LVU784
 2718 0a46 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 2719 0a48 D5F88030 		ldr	r3, [r5, #128]
 2720 0a4c 002A     		cmp	r2, #0
 2721 0a4e 3ED0     		beq	.L210
 708:boards/TMC2660_eval.c **** 	Evalboards.ch2.errors = (TMC2660.isStandStillCurrentLimit) 	? (Evalboards.ch2.errors | ERRORS_I_TI
 2722              		.loc 1 708 105 discriminator 1 view .LVU785
 2723 0a50 43F00103 		orr	r3, r3, #1
 2724              	.L211:
 709:boards/TMC2660_eval.c **** 
 2725              		.loc 1 709 2 is_stmt 1 discriminator 4 view .LVU786
 709:boards/TMC2660_eval.c **** 
 2726              		.loc 1 709 112 is_stmt 0 discriminator 4 view .LVU787
 2727 0a54 627A     		ldrb	r2, [r4, #9]	@ zero_extendqisi2
 2728 0a56 002A     		cmp	r2, #0
 2729 0a58 3CD0     		beq	.L212
 709:boards/TMC2660_eval.c **** 
 2730              		.loc 1 709 112 discriminator 1 view .LVU788
 2731 0a5a 43F00203 		orr	r3, r3, #2
 2732              	.L213:
 711:boards/TMC2660_eval.c **** 	if(currCoolStepState != lastCoolStepState)
 2733              		.loc 1 711 35 discriminator 4 view .LVU789
 2734 0a5e 0020     		movs	r0, #0
 709:boards/TMC2660_eval.c **** 
 2735              		.loc 1 709 24 discriminator 4 view .LVU790
 2736 0a60 C5F88030 		str	r3, [r5, #128]
 711:boards/TMC2660_eval.c **** 	if(currCoolStepState != lastCoolStepState)
 2737              		.loc 1 711 2 is_stmt 1 discriminator 4 view .LVU791
 711:boards/TMC2660_eval.c **** 	if(currCoolStepState != lastCoolStepState)
 2738              		.loc 1 711 35 is_stmt 0 discriminator 4 view .LVU792
 2739 0a64 FFF7FEFF 		bl	StepDir_getActualVelocity
 2740              	.LVL324:
 711:boards/TMC2660_eval.c **** 	if(currCoolStepState != lastCoolStepState)
 2741              		.loc 1 711 87 discriminator 4 view .LVU793
 2742 0a68 2369     		ldr	r3, [r4, #16]
 712:boards/TMC2660_eval.c **** 	{
 2743              		.loc 1 712 4 discriminator 4 view .LVU794
 2744 0a6a 94F86A20 		ldrb	r2, [r4, #106]	@ zero_extendqisi2
 711:boards/TMC2660_eval.c **** 	if(currCoolStepState != lastCoolStepState)
 2745              		.loc 1 711 31 discriminator 4 view .LVU795
 2746 0a6e 0028     		cmp	r0, #0
 2747 0a70 B8BF     		it	lt
 2748 0a72 4042     		rsblt	r0, r0, #0
 711:boards/TMC2660_eval.c **** 	if(currCoolStepState != lastCoolStepState)
 2749              		.loc 1 711 10 discriminator 4 view .LVU796
 2750 0a74 9842     		cmp	r0, r3
 2751 0a76 34BF     		ite	cc
 2752 0a78 0026     		movcc	r6, #0
 2753 0a7a 0126     		movcs	r6, #1
 2754              	.LVL325:
 712:boards/TMC2660_eval.c **** 	{
 2755              		.loc 1 712 2 is_stmt 1 discriminator 4 view .LVU797
 712:boards/TMC2660_eval.c **** 	{
 2756              		.loc 1 712 4 is_stmt 0 discriminator 4 view .LVU798
 2757 0a7c B242     		cmp	r2, r6
 2758 0a7e 11D0     		beq	.L214
 2759              	.LBB34:
 714:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEMIN_MASK, TMC2660_SEMIN_SHIFT, value);
 2760              		.loc 1 714 3 is_stmt 1 view .LVU799
 714:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEMIN_MASK, TMC2660_SEMIN_SHIFT, value);
 2761              		.loc 1 714 11 is_stmt 0 view .LVU800
 2762 0a80 9842     		cmp	r0, r3
 715:boards/TMC2660_eval.c **** 
 2763              		.loc 1 715 3 view .LVU801
 2764 0a82 4FF00D00 		mov	r0, #13
 714:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SMARTEN, TMC2660_SEMIN_MASK, TMC2660_SEMIN_SHIFT, value);
 2765              		.loc 1 714 11 view .LVU802
 2766 0a86 2CBF     		ite	cs
 2767 0a88 657B     		ldrbcs	r5, [r4, #13]	@ zero_extendqisi2
 2768 0a8a 257B     		ldrbcc	r5, [r4, #12]	@ zero_extendqisi2
 2769              	.LVL326:
 715:boards/TMC2660_eval.c **** 
 2770              		.loc 1 715 3 is_stmt 1 view .LVU803
 2771 0a8c FFF7F7FB 		bl	tmc2660_readInt.constprop.0
 2772              	.LVL327:
 2773 0a90 05F00F05 		and	r5, r5, #15
 2774              	.LVL328:
 715:boards/TMC2660_eval.c **** 
 2775              		.loc 1 715 3 is_stmt 0 view .LVU804
 2776 0a94 20F00F01 		bic	r1, r0, #15
 2777 0a98 2943     		orrs	r1, r1, r5
 2778 0a9a 0D20     		movs	r0, #13
 2779 0a9c FFF7BCFB 		bl	tmc2660_writeInt.constprop.0
 2780              	.LVL329:
 717:boards/TMC2660_eval.c **** 	}
 2781              		.loc 1 717 3 is_stmt 1 view .LVU805
 717:boards/TMC2660_eval.c **** 	}
 2782              		.loc 1 717 21 is_stmt 0 view .LVU806
 2783 0aa0 84F86A60 		strb	r6, [r4, #106]
 2784              	.L214:
 717:boards/TMC2660_eval.c **** 	}
 2785              		.loc 1 717 21 view .LVU807
 2786              	.LBE34:
 720:boards/TMC2660_eval.c **** 	StepDir_periodicJob(DEFAULT_MOTOR);
 2787              		.loc 1 720 2 is_stmt 1 view .LVU808
 2788 0aa4 A36C     		ldr	r3, [r4, #72]
 2789 0aa6 0E4A     		ldr	r2, .L218+4
 2790 0aa8 3946     		mov	r1, r7
 2791 0aaa 0020     		movs	r0, #0
 2792 0aac FFF7FEFF 		bl	tmc2660_periodicJob
 2793              	.LVL330:
 721:boards/TMC2660_eval.c **** }
 2794              		.loc 1 721 2 view .LVU809
 722:boards/TMC2660_eval.c **** 
 2795              		.loc 1 722 1 is_stmt 0 view .LVU810
 2796 0ab0 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 2797              	.LCFI21:
 2798              		.cfi_remember_state
 2799              		.cfi_restore 14
 2800              		.cfi_restore 7
 2801              		.cfi_restore 6
 2802              		.cfi_restore 5
 2803              		.cfi_restore 4
 2804              		.cfi_restore 3
 2805              		.cfi_def_cfa_offset 0
 2806              	.LVL331:
 721:boards/TMC2660_eval.c **** }
 2807              		.loc 1 721 2 view .LVU811
 2808 0ab4 0020     		movs	r0, #0
 2809 0ab6 FFF7FEBF 		b	StepDir_periodicJob
 2810              	.LVL332:
 2811              	.L208:
 2812              	.LCFI22:
 2813              		.cfi_restore_state
 2814              	.LBB35:
 2815              	.LBB33:
 688:boards/TMC2660_eval.c **** 		TMC2660.standStillCurrentScale = TMC2660_FIELD_READ(0, 0x0E, TMC2660_CS_MASK, TMC2660_CS_SHIFT);
 2816              		.loc 1 688 9 is_stmt 1 view .LVU812
 689:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurrentSc
 2817              		.loc 1 689 3 view .LVU813
 689:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurrentSc
 2818              		.loc 1 689 36 is_stmt 0 view .LVU814
 2819 0aba FFF7E0FB 		bl	tmc2660_readInt.constprop.0
 2820              	.LVL333:
 2821 0abe 00F01F00 		and	r0, r0, #31
 689:boards/TMC2660_eval.c **** 		TMC2660_FIELD_UPDATE(0, TMC2660_SGCSCONF, TMC2660_CS_MASK, TMC2660_CS_SHIFT, TMC2660.runCurrentSc
 2822              		.loc 1 689 34 view .LVU815
 2823 0ac2 2070     		strb	r0, [r4]
 690:boards/TMC2660_eval.c **** 	}
 2824              		.loc 1 690 3 is_stmt 1 view .LVU816
 2825 0ac4 0E20     		movs	r0, #14
 2826 0ac6 FFF7DAFB 		bl	tmc2660_readInt.constprop.0
 2827              	.LVL334:
 2828 0aca E17A     		ldrb	r1, [r4, #11]	@ zero_extendqisi2
 2829 0acc B1E7     		b	.L217
 2830              	.LVL335:
 2831              	.L210:
 690:boards/TMC2660_eval.c **** 	}
 2832              		.loc 1 690 3 is_stmt 0 view .LVU817
 2833              	.LBE33:
 2834              	.LBE35:
 708:boards/TMC2660_eval.c **** 	Evalboards.ch2.errors = (TMC2660.isStandStillCurrentLimit) 	? (Evalboards.ch2.errors | ERRORS_I_TI
 2835              		.loc 1 708 105 discriminator 2 view .LVU818
 2836 0ace 23F00103 		bic	r3, r3, #1
 2837 0ad2 BFE7     		b	.L211
 2838              	.L212:
 709:boards/TMC2660_eval.c **** 
 2839              		.loc 1 709 112 discriminator 2 view .LVU819
 2840 0ad4 23F00203 		bic	r3, r3, #2
 2841 0ad8 C1E7     		b	.L213
 2842              	.L219:
 2843 0ada 00BF     		.align	2
 2844              	.L218:
 2845 0adc 00000000 		.word	Evalboards
 2846 0ae0 00000000 		.word	.LANCHOR0
 2847              		.cfi_endproc
 2848              	.LFE21:
 2850              		.align	1
 2851              		.global	tmc2660_writeInt
 2852              		.syntax unified
 2853              		.thumb
 2854              		.thumb_func
 2855              		.fpu softvfp
 2857              	tmc2660_writeInt:
 2858              	.LVL336:
 2859              	.LFB3:
 111:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2860              		.loc 1 111 1 is_stmt 1 view -0
 2861              		.cfi_startproc
 2862              		@ args = 0, pretend = 0, frame = 0
 2863              		@ frame_needed = 0, uses_anonymous_args = 0
 2864              		@ link register save eliminated.
 112:boards/TMC2660_eval.c **** 
 2865              		.loc 1 112 2 view .LVU821
 115:boards/TMC2660_eval.c **** 
 2866              		.loc 1 115 2 view .LVU822
 111:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2867              		.loc 1 111 1 is_stmt 0 view .LVU823
 2868 0ae4 10B4     		push	{r4}
 2869              	.LCFI23:
 2870              		.cfi_def_cfa_offset 4
 2871              		.cfi_offset 4, -4
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 2872              		.loc 1 117 16 view .LVU824
 2873 0ae6 0A4C     		ldr	r4, .L222
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 2874              		.loc 1 117 38 view .LVU825
 2875 0ae8 01F07700 		and	r0, r1, #119
 2876              	.LVL337:
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 2877              		.loc 1 117 71 view .LVU826
 2878 0aec A36C     		ldr	r3, [r4, #72]
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 2879              		.loc 1 117 38 view .LVU827
 2880 0aee 40F00800 		orr	r0, r0, #8
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 2881              		.loc 1 117 71 view .LVU828
 2882 0af2 03EB8003 		add	r3, r3, r0, lsl #2
 115:boards/TMC2660_eval.c **** 
 2883              		.loc 1 115 8 view .LVU829
 2884 0af6 C2F31302 		ubfx	r2, r2, #0, #20
 2885              	.LVL338:
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 2886              		.loc 1 117 2 is_stmt 1 view .LVU830
 117:boards/TMC2660_eval.c **** 	if(!TMC2660.continuousModeEnable)
 2887              		.loc 1 117 71 is_stmt 0 view .LVU831
 2888 0afa 5A60     		str	r2, [r3, #4]
 118:boards/TMC2660_eval.c **** 		readWrite(TMC2660_DATAGRAM(address, value));
 2889              		.loc 1 118 2 is_stmt 1 view .LVU832
 118:boards/TMC2660_eval.c **** 		readWrite(TMC2660_DATAGRAM(address, value));
 2890              		.loc 1 118 4 is_stmt 0 view .LVU833
 2891 0afc A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 2892 0afe 23B9     		cbnz	r3, .L220
 119:boards/TMC2660_eval.c **** }
 2893              		.loc 1 119 3 is_stmt 1 view .LVU834
 120:boards/TMC2660_eval.c **** 
 2894              		.loc 1 120 1 is_stmt 0 view .LVU835
 2895 0b00 10BC     		pop	{r4}
 2896              	.LCFI24:
 2897              		.cfi_remember_state
 2898              		.cfi_restore 4
 2899              		.cfi_def_cfa_offset 0
 119:boards/TMC2660_eval.c **** }
 2900              		.loc 1 119 3 view .LVU836
 2901 0b02 42EA4140 		orr	r0, r2, r1, lsl #17
 2902 0b06 FFF7FEBF 		b	readWrite
 2903              	.LVL339:
 2904              	.L220:
 2905              	.LCFI25:
 2906              		.cfi_restore_state
 120:boards/TMC2660_eval.c **** 
 2907              		.loc 1 120 1 view .LVU837
 2908 0b0a 10BC     		pop	{r4}
 2909              	.LCFI26:
 2910              		.cfi_restore 4
 2911              		.cfi_def_cfa_offset 0
 2912 0b0c 7047     		bx	lr
 2913              	.L223:
 2914 0b0e 00BF     		.align	2
 2915              	.L222:
 2916 0b10 00000000 		.word	.LANCHOR0
 2917              		.cfi_endproc
 2918              	.LFE3:
 2920              		.align	1
 2921              		.global	tmc2660_readInt
 2922              		.syntax unified
 2923              		.thumb
 2924              		.thumb_func
 2925              		.fpu softvfp
 2927              	tmc2660_readInt:
 2928              	.LVL340:
 2929              	.LFB4:
 123:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2930              		.loc 1 123 1 is_stmt 1 view -0
 2931              		.cfi_startproc
 2932              		@ args = 0, pretend = 0, frame = 0
 2933              		@ frame_needed = 0, uses_anonymous_args = 0
 124:boards/TMC2660_eval.c **** 
 2934              		.loc 1 124 2 view .LVU839
 126:boards/TMC2660_eval.c **** 		readImmediately(address);
 2935              		.loc 1 126 2 view .LVU840
 123:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2936              		.loc 1 123 1 is_stmt 0 view .LVU841
 2937 0b14 38B5     		push	{r3, r4, r5, lr}
 2938              	.LCFI27:
 2939              		.cfi_def_cfa_offset 16
 2940              		.cfi_offset 3, -16
 2941              		.cfi_offset 4, -12
 2942              		.cfi_offset 5, -8
 2943              		.cfi_offset 14, -4
 126:boards/TMC2660_eval.c **** 		readImmediately(address);
 2944              		.loc 1 126 13 view .LVU842
 2945 0b16 094D     		ldr	r5, .L226
 126:boards/TMC2660_eval.c **** 		readImmediately(address);
 2946              		.loc 1 126 35 view .LVU843
 2947 0b18 01F00802 		and	r2, r1, #8
 123:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2948              		.loc 1 123 1 view .LVU844
 2949 0b1c 0C46     		mov	r4, r1
 126:boards/TMC2660_eval.c **** 		readImmediately(address);
 2950              		.loc 1 126 35 view .LVU845
 2951 0b1e A97A     		ldrb	r1, [r5, #10]	@ zero_extendqisi2
 2952              	.LVL341:
 126:boards/TMC2660_eval.c **** 		readImmediately(address);
 2953              		.loc 1 126 35 view .LVU846
 2954 0b20 51EA0203 		orrs	r3, r1, r2
 2955 0b24 02D1     		bne	.L225
 127:boards/TMC2660_eval.c **** 
 2956              		.loc 1 127 3 is_stmt 1 view .LVU847
 2957 0b26 2046     		mov	r0, r4
 2958              	.LVL342:
 127:boards/TMC2660_eval.c **** 
 2959              		.loc 1 127 3 is_stmt 0 view .LVU848
 2960 0b28 FFF7FEFF 		bl	readImmediately
 2961              	.LVL343:
 2962              	.L225:
 129:boards/TMC2660_eval.c **** }
 2963              		.loc 1 129 2 is_stmt 1 view .LVU849
 129:boards/TMC2660_eval.c **** }
 2964              		.loc 1 129 39 is_stmt 0 view .LVU850
 2965 0b2c A96C     		ldr	r1, [r5, #72]
 129:boards/TMC2660_eval.c **** }
 2966              		.loc 1 129 45 view .LVU851
 2967 0b2e 04F07F04 		and	r4, r4, #127
 129:boards/TMC2660_eval.c **** }
 2968              		.loc 1 129 39 view .LVU852
 2969 0b32 01EB8404 		add	r4, r1, r4, lsl #2
 130:boards/TMC2660_eval.c **** 
 2970              		.loc 1 130 1 view .LVU853
 2971 0b36 6068     		ldr	r0, [r4, #4]
 2972 0b38 38BD     		pop	{r3, r4, r5, pc}
 2973              	.L227:
 2974 0b3a 00BF     		.align	2
 2975              	.L226:
 2976 0b3c 00000000 		.word	.LANCHOR0
 2977              		.cfi_endproc
 2978              	.LFE4:
 2980              		.align	1
 2981              		.global	tmc2660_readWrite
 2982              		.syntax unified
 2983              		.thumb
 2984              		.thumb_func
 2985              		.fpu softvfp
 2987              	tmc2660_readWrite:
 2988              	.LVL344:
 2989              	.LFB5:
 133:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2990              		.loc 1 133 1 is_stmt 1 view -0
 2991              		.cfi_startproc
 2992              		@ args = 0, pretend = 0, frame = 0
 2993              		@ frame_needed = 0, uses_anonymous_args = 0
 134:boards/TMC2660_eval.c **** 
 2994              		.loc 1 134 2 view .LVU855
 136:boards/TMC2660_eval.c **** 
 2995              		.loc 1 136 2 view .LVU856
 146:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 2996              		.loc 1 146 2 view .LVU857
 133:boards/TMC2660_eval.c **** 	UNUSED(motor);
 2997              		.loc 1 133 1 is_stmt 0 view .LVU858
 2998 0b40 38B5     		push	{r3, r4, r5, lr}
 2999              	.LCFI28:
 3000              		.cfi_def_cfa_offset 16
 3001              		.cfi_offset 3, -16
 3002              		.cfi_offset 4, -12
 3003              		.cfi_offset 5, -8
 3004              		.cfi_offset 14, -4
 146:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 3005              		.loc 1 146 60 view .LVU859
 3006 0b42 1F4C     		ldr	r4, .L233
 3007 0b44 636E     		ldr	r3, [r4, #100]
 133:boards/TMC2660_eval.c **** 	UNUSED(motor);
 3008              		.loc 1 133 1 view .LVU860
 3009 0b46 0D46     		mov	r5, r1
 146:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 3010              		.loc 1 146 42 view .LVU861
 3011 0b48 9B68     		ldr	r3, [r3, #8]
 3012 0b4a 0021     		movs	r1, #0
 3013              	.LVL345:
 146:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 3014              		.loc 1 146 42 view .LVU862
 3015 0b4c C5F30740 		ubfx	r0, r5, #16, #8
 3016              	.LVL346:
 146:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 3017              		.loc 1 146 42 view .LVU863
 3018 0b50 9847     		blx	r3
 3019              	.LVL347:
 147:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] |= TMC2660_SPIChannel->readWrite(value>>8, 0);
 3020              		.loc 1 147 2 is_stmt 1 view .LVU864
 146:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 3021              		.loc 1 146 32 is_stmt 0 view .LVU865
 3022 0b52 94F86B20 		ldrb	r2, [r4, #107]	@ zero_extendqisi2
 147:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] |= TMC2660_SPIChannel->readWrite(value>>8, 0);
 3023              		.loc 1 147 40 view .LVU866
 3024 0b56 A36C     		ldr	r3, [r4, #72]
 3025 0b58 03EB8203 		add	r3, r3, r2, lsl #2
 3026 0b5c 0002     		lsls	r0, r0, #8
 3027 0b5e 5860     		str	r0, [r3, #4]
 148:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 3028              		.loc 1 148 2 is_stmt 1 view .LVU867
 148:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 3029              		.loc 1 148 61 is_stmt 0 view .LVU868
 3030 0b60 636E     		ldr	r3, [r4, #100]
 148:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 3031              		.loc 1 148 43 view .LVU869
 3032 0b62 0021     		movs	r1, #0
 3033 0b64 9B68     		ldr	r3, [r3, #8]
 3034 0b66 C5F30720 		ubfx	r0, r5, #8, #8
 3035 0b6a 9847     		blx	r3
 3036              	.LVL348:
 3037 0b6c 94F86B20 		ldrb	r2, [r4, #107]	@ zero_extendqisi2
 3038 0b70 A36C     		ldr	r3, [r4, #72]
 3039 0b72 03EB8203 		add	r3, r3, r2, lsl #2
 149:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] |= TMC2660_SPIChannel->readWrite(value & 0xFF, 1);
 3040              		.loc 1 149 2 is_stmt 1 view .LVU870
 150:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] >>= 4;
 3041              		.loc 1 150 43 is_stmt 0 view .LVU871
 3042 0b76 0121     		movs	r1, #1
 148:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] <<= 8;
 3043              		.loc 1 148 40 view .LVU872
 3044 0b78 5A68     		ldr	r2, [r3, #4]
 3045 0b7a 1043     		orrs	r0, r0, r2
 149:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] |= TMC2660_SPIChannel->readWrite(value & 0xFF, 1);
 3046              		.loc 1 149 40 view .LVU873
 3047 0b7c 0002     		lsls	r0, r0, #8
 3048 0b7e 5860     		str	r0, [r3, #4]
 150:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] >>= 4;
 3049              		.loc 1 150 2 is_stmt 1 view .LVU874
 150:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] >>= 4;
 3050              		.loc 1 150 61 is_stmt 0 view .LVU875
 3051 0b80 636E     		ldr	r3, [r4, #100]
 150:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] >>= 4;
 3052              		.loc 1 150 43 view .LVU876
 3053 0b82 E8B2     		uxtb	r0, r5
 3054 0b84 9B68     		ldr	r3, [r3, #8]
 3055 0b86 9847     		blx	r3
 3056              	.LVL349:
 150:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] >>= 4;
 3057              		.loc 1 150 40 view .LVU877
 3058 0b88 A26C     		ldr	r2, [r4, #72]
 3059 0b8a 94F86B30 		ldrb	r3, [r4, #107]	@ zero_extendqisi2
 3060 0b8e 02EB8303 		add	r3, r2, r3, lsl #2
 151:boards/TMC2660_eval.c **** 
 3061              		.loc 1 151 2 is_stmt 1 view .LVU878
 150:boards/TMC2660_eval.c **** 	TMC2660_config->shadowRegister[rdsel] >>= 4;
 3062              		.loc 1 150 40 is_stmt 0 view .LVU879
 3063 0b92 5968     		ldr	r1, [r3, #4]
 3064 0b94 0843     		orrs	r0, r0, r1
 151:boards/TMC2660_eval.c **** 
 3065              		.loc 1 151 40 view .LVU880
 3066 0b96 0011     		asrs	r0, r0, #4
 3067 0b98 5860     		str	r0, [r3, #4]
 153:boards/TMC2660_eval.c **** 
 3068              		.loc 1 153 2 is_stmt 1 view .LVU881
 156:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(value);
 3069              		.loc 1 156 4 is_stmt 0 view .LVU882
 3070 0b9a AB0C     		lsrs	r3, r5, #18
 153:boards/TMC2660_eval.c **** 
 3071              		.loc 1 153 58 view .LVU883
 3072 0b9c 1061     		str	r0, [r2, #16]
 156:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(value);
 3073              		.loc 1 156 2 is_stmt 1 view .LVU884
 156:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(value);
 3074              		.loc 1 156 4 is_stmt 0 view .LVU885
 3075 0b9e 0AD0     		beq	.L231
 156:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(value);
 3076              		.loc 1 156 5 discriminator 1 view .LVU886
 3077 0ba0 C5F34243 		ubfx	r3, r5, #17, #3
 156:boards/TMC2660_eval.c **** 		rdsel = TMC2660_GET_RDSEL(value);
 3078              		.loc 1 156 32 discriminator 1 view .LVU887
 3079 0ba4 072B     		cmp	r3, #7
 3080 0ba6 03D1     		bne	.L230
 157:boards/TMC2660_eval.c **** 
 3081              		.loc 1 157 3 is_stmt 1 view .LVU888
 157:boards/TMC2660_eval.c **** 
 3082              		.loc 1 157 11 is_stmt 0 view .LVU889
 3083 0ba8 C5F30111 		ubfx	r1, r5, #4, #2
 157:boards/TMC2660_eval.c **** 
 3084              		.loc 1 157 9 view .LVU890
 3085 0bac 84F86B10 		strb	r1, [r4, #107]
 3086              	.L230:
 160:boards/TMC2660_eval.c **** }
 3087              		.loc 1 160 2 is_stmt 1 view .LVU891
 160:boards/TMC2660_eval.c **** }
 3088              		.loc 1 160 60 is_stmt 0 view .LVU892
 3089 0bb0 43F00803 		orr	r3, r3, #8
 3090 0bb4 00E0     		b	.L229
 3091              	.L231:
 3092 0bb6 0823     		movs	r3, #8
 3093              	.L229:
 160:boards/TMC2660_eval.c **** }
 3094              		.loc 1 160 82 discriminator 4 view .LVU893
 3095 0bb8 02EB8303 		add	r3, r2, r3, lsl #2
 3096 0bbc 5D60     		str	r5, [r3, #4]
 161:boards/TMC2660_eval.c **** 
 3097              		.loc 1 161 1 discriminator 4 view .LVU894
 3098 0bbe 38BD     		pop	{r3, r4, r5, pc}
 3099              	.LVL350:
 3100              	.L234:
 161:boards/TMC2660_eval.c **** 
 3101              		.loc 1 161 1 discriminator 4 view .LVU895
 3102              		.align	2
 3103              	.L233:
 3104 0bc0 00000000 		.word	.LANCHOR0
 3105              		.cfi_endproc
 3106              	.LFE5:
 3108              		.align	1
 3109              		.global	TMC2660_init
 3110              		.syntax unified
 3111              		.thumb
 3112              		.thumb_func
 3113              		.fpu softvfp
 3115              	TMC2660_init:
 3116              	.LFB25:
 754:boards/TMC2660_eval.c **** 
 755:boards/TMC2660_eval.c **** void TMC2660_init(void)
 756:boards/TMC2660_eval.c **** {
 3117              		.loc 1 756 1 is_stmt 1 view -0
 3118              		.cfi_startproc
 3119              		@ args = 0, pretend = 0, frame = 0
 3120              		@ frame_needed = 0, uses_anonymous_args = 0
 757:boards/TMC2660_eval.c **** 	compatibilityMode = 1;
 3121              		.loc 1 757 2 view .LVU897
 756:boards/TMC2660_eval.c **** 	compatibilityMode = 1;
 3122              		.loc 1 756 1 is_stmt 0 view .LVU898
 3123 0bc4 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3124              	.LCFI29:
 3125              		.cfi_def_cfa_offset 24
 3126              		.cfi_offset 3, -24
 3127              		.cfi_offset 4, -20
 3128              		.cfi_offset 5, -16
 3129              		.cfi_offset 6, -12
 3130              		.cfi_offset 7, -8
 3131              		.cfi_offset 14, -4
 758:boards/TMC2660_eval.c **** 
 759:boards/TMC2660_eval.c **** 	tmc2660_initConfig(&TMC2660);
 3132              		.loc 1 759 2 view .LVU899
 3133 0bc6 434C     		ldr	r4, .L236
 757:boards/TMC2660_eval.c **** 
 3134              		.loc 1 757 20 view .LVU900
 3135 0bc8 434B     		ldr	r3, .L236+4
 760:boards/TMC2660_eval.c **** 
 761:boards/TMC2660_eval.c **** 	Pins.ENN     = &HAL.IOs->pins->DIO0;
 3136              		.loc 1 761 21 view .LVU901
 3137 0bca 444F     		ldr	r7, .L236+8
 757:boards/TMC2660_eval.c **** 
 3138              		.loc 1 757 20 view .LVU902
 3139 0bcc 0126     		movs	r6, #1
 759:boards/TMC2660_eval.c **** 
 3140              		.loc 1 759 2 view .LVU903
 3141 0bce 2046     		mov	r0, r4
 757:boards/TMC2660_eval.c **** 
 3142              		.loc 1 757 20 view .LVU904
 3143 0bd0 1E60     		str	r6, [r3]
 759:boards/TMC2660_eval.c **** 
 3144              		.loc 1 759 2 is_stmt 1 view .LVU905
 3145 0bd2 FFF7FEFF 		bl	tmc2660_initConfig
 3146              	.LVL351:
 3147              		.loc 1 761 2 view .LVU906
 3148              		.loc 1 761 21 is_stmt 0 view .LVU907
 3149 0bd6 FD68     		ldr	r5, [r7, #12]
 3150              		.loc 1 761 25 view .LVU908
 3151 0bd8 6B68     		ldr	r3, [r5, #4]
 3152              		.loc 1 761 17 view .LVU909
 3153 0bda 03F16802 		add	r2, r3, #104
 3154              		.loc 1 761 15 view .LVU910
 3155 0bde A265     		str	r2, [r4, #88]
 762:boards/TMC2660_eval.c **** 	Pins.SG_TST  = &HAL.IOs->pins->DIO1;
 3156              		.loc 1 762 2 is_stmt 1 view .LVU911
 3157              		.loc 1 762 17 is_stmt 0 view .LVU912
 3158 0be0 03F18802 		add	r2, r3, #136
 763:boards/TMC2660_eval.c **** 	Pins.STEP    = &HAL.IOs->pins->DIO6;
 3159              		.loc 1 763 17 view .LVU913
 3160 0be4 03F59470 		add	r0, r3, #296
 762:boards/TMC2660_eval.c **** 	Pins.SG_TST  = &HAL.IOs->pins->DIO1;
 3161              		.loc 1 762 15 view .LVU914
 3162 0be8 E265     		str	r2, [r4, #92]
 3163              		.loc 1 763 2 is_stmt 1 view .LVU915
 764:boards/TMC2660_eval.c **** 	Pins.DIR     = &HAL.IOs->pins->DIO7;
 3164              		.loc 1 764 17 is_stmt 0 view .LVU916
 3165 0bea 03F5A472 		add	r2, r3, #328
 765:boards/TMC2660_eval.c **** 	Pins.CSN     = &HAL.IOs->pins->SPI2_CSN0;
 3166              		.loc 1 765 17 view .LVU917
 3167 0bee 03F50273 		add	r3, r3, #520
 3168              		.loc 1 765 15 view .LVU918
 3169 0bf2 E364     		str	r3, [r4, #76]
 766:boards/TMC2660_eval.c **** 
 767:boards/TMC2660_eval.c **** 	HAL.IOs->config->toOutput(Pins.STEP);
 3170              		.loc 1 767 17 view .LVU919
 3171 0bf4 2B68     		ldr	r3, [r5]
 764:boards/TMC2660_eval.c **** 	Pins.CSN     = &HAL.IOs->pins->SPI2_CSN0;
 3172              		.loc 1 764 15 view .LVU920
 3173 0bf6 6265     		str	r2, [r4, #84]
 3174              		.loc 1 767 2 view .LVU921
 3175 0bf8 DB68     		ldr	r3, [r3, #12]
 763:boards/TMC2660_eval.c **** 	Pins.DIR     = &HAL.IOs->pins->DIO7;
 3176              		.loc 1 763 15 view .LVU922
 3177 0bfa 2065     		str	r0, [r4, #80]
 764:boards/TMC2660_eval.c **** 	Pins.CSN     = &HAL.IOs->pins->SPI2_CSN0;
 3178              		.loc 1 764 2 is_stmt 1 view .LVU923
 765:boards/TMC2660_eval.c **** 
 3179              		.loc 1 765 2 view .LVU924
 3180              		.loc 1 767 2 view .LVU925
 3181 0bfc 9847     		blx	r3
 3182              	.LVL352:
 768:boards/TMC2660_eval.c **** 	HAL.IOs->config->toOutput(Pins.DIR);
 3183              		.loc 1 768 2 view .LVU926
 3184              		.loc 1 768 17 is_stmt 0 view .LVU927
 3185 0bfe 2B68     		ldr	r3, [r5]
 3186              		.loc 1 768 2 view .LVU928
 3187 0c00 606D     		ldr	r0, [r4, #84]
 3188 0c02 DB68     		ldr	r3, [r3, #12]
 3189 0c04 9847     		blx	r3
 3190              	.LVL353:
 769:boards/TMC2660_eval.c **** 	HAL.IOs->config->toOutput(Pins.ENN);
 3191              		.loc 1 769 2 is_stmt 1 view .LVU929
 3192              		.loc 1 769 17 is_stmt 0 view .LVU930
 3193 0c06 2B68     		ldr	r3, [r5]
 3194              		.loc 1 769 2 view .LVU931
 3195 0c08 A06D     		ldr	r0, [r4, #88]
 3196 0c0a DB68     		ldr	r3, [r3, #12]
 3197 0c0c 9847     		blx	r3
 3198              	.LVL354:
 770:boards/TMC2660_eval.c **** 	HAL.IOs->config->toInput(Pins.SG_TST);
 3199              		.loc 1 770 2 is_stmt 1 view .LVU932
 3200              		.loc 1 770 17 is_stmt 0 view .LVU933
 3201 0c0e 2B68     		ldr	r3, [r5]
 3202              		.loc 1 770 2 view .LVU934
 3203 0c10 E06D     		ldr	r0, [r4, #92]
 3204 0c12 1B69     		ldr	r3, [r3, #16]
 3205 0c14 9847     		blx	r3
 3206              	.LVL355:
 771:boards/TMC2660_eval.c **** 	HAL.IOs->config->toOutput(Pins.CSN);
 3207              		.loc 1 771 2 is_stmt 1 view .LVU935
 3208              		.loc 1 771 17 is_stmt 0 view .LVU936
 3209 0c16 2B68     		ldr	r3, [r5]
 3210              		.loc 1 771 2 view .LVU937
 3211 0c18 E06C     		ldr	r0, [r4, #76]
 3212 0c1a DB68     		ldr	r3, [r3, #12]
 3213 0c1c 9847     		blx	r3
 3214              	.LVL356:
 772:boards/TMC2660_eval.c **** 
 773:boards/TMC2660_eval.c **** #if defined(Startrampe)
 774:boards/TMC2660_eval.c **** 	Pins.TEMP_BRIDGE	= &HAL.IOs->pins->AIN0;
 775:boards/TMC2660_eval.c **** 	HAL.IOs->config->reset(Pins.TEMP_BRIDGE);
 776:boards/TMC2660_eval.c **** #endif
 777:boards/TMC2660_eval.c **** 
 778:boards/TMC2660_eval.c **** 	TMC2660_SPIChannel = &HAL.SPI->ch2;
 3215              		.loc 1 778 2 is_stmt 1 view .LVU938
 3216              		.loc 1 778 27 is_stmt 0 view .LVU939
 3217 0c1e 3B69     		ldr	r3, [r7, #16]
 3218              		.loc 1 778 23 view .LVU940
 3219 0c20 03F11402 		add	r2, r3, #20
 3220              		.loc 1 778 21 view .LVU941
 3221 0c24 6266     		str	r2, [r4, #100]
 779:boards/TMC2660_eval.c **** 	TMC2660_SPIChannel->CSN = Pins.CSN;
 3222              		.loc 1 779 2 is_stmt 1 view .LVU942
 3223              		.loc 1 779 26 is_stmt 0 view .LVU943
 3224 0c26 E26C     		ldr	r2, [r4, #76]
 3225 0c28 9A61     		str	r2, [r3, #24]
 780:boards/TMC2660_eval.c **** 
 781:boards/TMC2660_eval.c **** 	TMC2660.standStillCurrentScale  = I_STAND_STILL;
 3226              		.loc 1 781 2 is_stmt 1 view .LVU944
 3227              		.loc 1 781 34 is_stmt 0 view .LVU945
 3228 0c2a 0523     		movs	r3, #5
 3229 0c2c 2370     		strb	r3, [r4]
 782:boards/TMC2660_eval.c **** 	TMC2660.standStillTimeout       = T_STAND_STILL;
 3230              		.loc 1 782 2 is_stmt 1 view .LVU946
 783:boards/TMC2660_eval.c **** 
 784:boards/TMC2660_eval.c **** 	StepDir_init(STEPDIR_PRECISION);
 3231              		.loc 1 784 2 is_stmt 0 view .LVU947
 3232 0c2e 4FF40030 		mov	r0, #131072
 782:boards/TMC2660_eval.c **** 	TMC2660.standStillTimeout       = T_STAND_STILL;
 3233              		.loc 1 782 34 view .LVU948
 3234 0c32 4FF47A73 		mov	r3, #1000
 3235 0c36 6360     		str	r3, [r4, #4]
 3236              		.loc 1 784 2 is_stmt 1 view .LVU949
 3237 0c38 FFF7FEFF 		bl	StepDir_init
 3238              	.LVL357:
 785:boards/TMC2660_eval.c **** 	StepDir_setPins(0, Pins.STEP, Pins.DIR, Pins.SG_TST);
 3239              		.loc 1 785 2 view .LVU950
 3240 0c3c D4E91412 		ldrd	r1, r2, [r4, #80]
 3241 0c40 E36D     		ldr	r3, [r4, #92]
 3242 0c42 0020     		movs	r0, #0
 3243 0c44 FFF7FEFF 		bl	StepDir_setPins
 3244              	.LVL358:
 786:boards/TMC2660_eval.c **** 
 787:boards/TMC2660_eval.c **** 	TMC2660_config = Evalboards.ch2.config;
 3245              		.loc 1 787 2 view .LVU951
 3246              		.loc 1 787 33 is_stmt 0 view .LVU952
 3247 0c48 254B     		ldr	r3, .L236+12
 788:boards/TMC2660_eval.c **** 
 789:boards/TMC2660_eval.c **** 	Evalboards.ch2.config->restore      = restore;
 3248              		.loc 1 789 38 view .LVU953
 3249 0c4a 2649     		ldr	r1, .L236+16
 787:boards/TMC2660_eval.c **** 
 3250              		.loc 1 787 33 view .LVU954
 3251 0c4c D3F89020 		ldr	r2, [r3, #144]
 787:boards/TMC2660_eval.c **** 
 3252              		.loc 1 787 17 view .LVU955
 3253 0c50 A264     		str	r2, [r4, #72]
 3254              		.loc 1 789 2 is_stmt 1 view .LVU956
 3255              		.loc 1 789 38 is_stmt 0 view .LVU957
 3256 0c52 C2F80812 		str	r1, [r2, #520]
 790:boards/TMC2660_eval.c **** 	Evalboards.ch2.config->reset        = reset;
 3257              		.loc 1 790 2 is_stmt 1 view .LVU958
 3258              		.loc 1 790 38 is_stmt 0 view .LVU959
 3259 0c56 2449     		ldr	r1, .L236+20
 3260 0c58 C2F80412 		str	r1, [r2, #516]
 791:boards/TMC2660_eval.c **** 	Evalboards.ch2.config->state        = CONFIG_READY; // Not used, leave this as CONFIG_READY to ind
 3261              		.loc 1 791 2 is_stmt 1 view .LVU960
 792:boards/TMC2660_eval.c **** 	Evalboards.ch2.config->configIndex  = 0;
 3262              		.loc 1 792 2 view .LVU961
 791:boards/TMC2660_eval.c **** 	Evalboards.ch2.config->state        = CONFIG_READY; // Not used, leave this as CONFIG_READY to ind
 3263              		.loc 1 791 38 is_stmt 0 view .LVU962
 3264 0c5c 0021     		movs	r1, #0
 3265 0c5e 1180     		strh	r1, [r2]	@ movhi
 793:boards/TMC2660_eval.c **** 
 794:boards/TMC2660_eval.c **** 	Evalboards.ch2.rotate               = rotate;
 3266              		.loc 1 794 2 is_stmt 1 view .LVU963
 3267              		.loc 1 794 38 is_stmt 0 view .LVU964
 3268 0c60 224A     		ldr	r2, .L236+24
 3269 0c62 C3F89C20 		str	r2, [r3, #156]
 795:boards/TMC2660_eval.c **** 	Evalboards.ch2.right                = right;
 3270              		.loc 1 795 2 is_stmt 1 view .LVU965
 3271              		.loc 1 795 38 is_stmt 0 view .LVU966
 3272 0c66 224A     		ldr	r2, .L236+28
 3273 0c68 C3F89820 		str	r2, [r3, #152]
 796:boards/TMC2660_eval.c **** 	Evalboards.ch2.left                 = left;
 3274              		.loc 1 796 2 is_stmt 1 view .LVU967
 3275              		.loc 1 796 38 is_stmt 0 view .LVU968
 3276 0c6c 214A     		ldr	r2, .L236+32
 3277 0c6e C3F89420 		str	r2, [r3, #148]
 797:boards/TMC2660_eval.c **** 	Evalboards.ch2.stop                 = stop;
 3278              		.loc 1 797 2 is_stmt 1 view .LVU969
 3279              		.loc 1 797 38 is_stmt 0 view .LVU970
 3280 0c72 214A     		ldr	r2, .L236+36
 3281 0c74 C3F8A020 		str	r2, [r3, #160]
 798:boards/TMC2660_eval.c **** 	Evalboards.ch2.GAP                  = GAP;
 3282              		.loc 1 798 2 is_stmt 1 view .LVU971
 3283              		.loc 1 798 38 is_stmt 0 view .LVU972
 3284 0c78 204A     		ldr	r2, .L236+40
 3285 0c7a C3F8B420 		str	r2, [r3, #180]
 799:boards/TMC2660_eval.c **** 	Evalboards.ch2.SAP                  = SAP;
 3286              		.loc 1 799 2 is_stmt 1 view .LVU973
 3287              		.loc 1 799 38 is_stmt 0 view .LVU974
 3288 0c7e 204A     		ldr	r2, .L236+44
 3289 0c80 C3F8B020 		str	r2, [r3, #176]
 800:boards/TMC2660_eval.c **** 	Evalboards.ch2.moveTo               = moveTo;
 3290              		.loc 1 800 2 is_stmt 1 view .LVU975
 3291              		.loc 1 800 38 is_stmt 0 view .LVU976
 3292 0c84 1F4A     		ldr	r2, .L236+48
 3293 0c86 C3F8A420 		str	r2, [r3, #164]
 801:boards/TMC2660_eval.c **** 	Evalboards.ch2.moveBy               = moveBy;
 3294              		.loc 1 801 2 is_stmt 1 view .LVU977
 3295              		.loc 1 801 38 is_stmt 0 view .LVU978
 3296 0c8a 1F4A     		ldr	r2, .L236+52
 3297 0c8c C3F8A820 		str	r2, [r3, #168]
 802:boards/TMC2660_eval.c **** 	Evalboards.ch2.writeRegister        = writeRegister;
 3298              		.loc 1 802 2 is_stmt 1 view .LVU979
 3299              		.loc 1 802 38 is_stmt 0 view .LVU980
 3300 0c90 1E4A     		ldr	r2, .L236+56
 3301 0c92 C3F8C420 		str	r2, [r3, #196]
 803:boards/TMC2660_eval.c **** 	Evalboards.ch2.readRegister         = readRegister;
 3302              		.loc 1 803 2 is_stmt 1 view .LVU981
 3303              		.loc 1 803 38 is_stmt 0 view .LVU982
 3304 0c96 1E4A     		ldr	r2, .L236+60
 3305 0c98 C3F8C020 		str	r2, [r3, #192]
 804:boards/TMC2660_eval.c **** 	Evalboards.ch2.periodicJob          = periodicJob;
 3306              		.loc 1 804 2 is_stmt 1 view .LVU983
 3307              		.loc 1 804 38 is_stmt 0 view .LVU984
 3308 0c9c 1D4A     		ldr	r2, .L236+64
 3309 0c9e C3F8D020 		str	r2, [r3, #208]
 805:boards/TMC2660_eval.c **** 	Evalboards.ch2.userFunction         = userFunction;
 3310              		.loc 1 805 2 is_stmt 1 view .LVU985
 3311              		.loc 1 805 38 is_stmt 0 view .LVU986
 3312 0ca2 1D4A     		ldr	r2, .L236+68
 3313 0ca4 C3F8CC20 		str	r2, [r3, #204]
 806:boards/TMC2660_eval.c **** 	Evalboards.ch2.getMeasuredSpeed     = getMeasuredSpeed;
 3314              		.loc 1 806 2 is_stmt 1 view .LVU987
 3315              		.loc 1 806 38 is_stmt 0 view .LVU988
 3316 0ca8 1C4A     		ldr	r2, .L236+72
 3317 0caa C3F8C820 		str	r2, [r3, #200]
 807:boards/TMC2660_eval.c **** 	Evalboards.ch2.enableDriver         = enableDriver;
 3318              		.loc 1 807 2 is_stmt 1 view .LVU989
 3319              		.loc 1 807 38 is_stmt 0 view .LVU990
 3320 0cae 1C4A     		ldr	r2, .L236+76
 3321 0cb0 C3F8DC20 		str	r2, [r3, #220]
 808:boards/TMC2660_eval.c **** 	Evalboards.ch2.numberOfMotors       = MOTORS;
 3322              		.loc 1 808 2 is_stmt 1 view .LVU991
 809:boards/TMC2660_eval.c **** 	Evalboards.ch2.VMMin                = VM_MIN;
 810:boards/TMC2660_eval.c **** 	Evalboards.ch2.VMMax                = VM_MAX;
 3323              		.loc 1 810 38 is_stmt 0 view .LVU992
 3324 0cb4 3221     		movs	r1, #50
 3325 0cb6 4FF41672 		mov	r2, #600
 3326 0cba C3E92121 		strd	r2, r1, [r3, #132]
 808:boards/TMC2660_eval.c **** 	Evalboards.ch2.numberOfMotors       = MOTORS;
 3327              		.loc 1 808 38 view .LVU993
 3328 0cbe 83F88C60 		strb	r6, [r3, #140]
 809:boards/TMC2660_eval.c **** 	Evalboards.ch2.VMMin                = VM_MIN;
 3329              		.loc 1 809 2 is_stmt 1 view .LVU994
 811:boards/TMC2660_eval.c **** 	Evalboards.ch2.deInit               = deInit;
 3330              		.loc 1 811 2 view .LVU995
 3331              		.loc 1 811 38 is_stmt 0 view .LVU996
 3332 0cc2 184A     		ldr	r2, .L236+80
 3333 0cc4 C3F8D420 		str	r2, [r3, #212]
 812:boards/TMC2660_eval.c **** 
 813:boards/TMC2660_eval.c **** 	enableDriver(DRIVER_USE_GLOBAL_ENABLE);
 3334              		.loc 1 813 2 is_stmt 1 view .LVU997
 3335 0cc8 0220     		movs	r0, #2
 814:boards/TMC2660_eval.c **** }
 3336              		.loc 1 814 1 is_stmt 0 view .LVU998
 3337 0cca BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 3338              	.LCFI30:
 3339              		.cfi_restore 14
 3340              		.cfi_restore 7
 3341              		.cfi_restore 6
 3342              		.cfi_restore 5
 3343              		.cfi_restore 4
 3344              		.cfi_restore 3
 3345              		.cfi_def_cfa_offset 0
 813:boards/TMC2660_eval.c **** }
 3346              		.loc 1 813 2 view .LVU999
 3347 0cce FFF7C9B9 		b	enableDriver
 3348              	.LVL359:
 3349              	.L237:
 3350 0cd2 00BF     		.align	2
 3351              	.L236:
 3352 0cd4 00000000 		.word	.LANCHOR0
 3353 0cd8 00000000 		.word	.LANCHOR1
 3354 0cdc 00000000 		.word	HAL
 3355 0ce0 00000000 		.word	Evalboards
 3356 0ce4 00000000 		.word	restore
 3357 0ce8 00000000 		.word	reset
 3358 0cec 00000000 		.word	rotate
 3359 0cf0 00000000 		.word	right
 3360 0cf4 00000000 		.word	left
 3361 0cf8 00000000 		.word	stop
 3362 0cfc 00000000 		.word	GAP
 3363 0d00 00000000 		.word	SAP
 3364 0d04 00000000 		.word	moveTo
 3365 0d08 00000000 		.word	moveBy
 3366 0d0c 00000000 		.word	writeRegister
 3367 0d10 00000000 		.word	readRegister
 3368 0d14 00000000 		.word	periodicJob
 3369 0d18 00000000 		.word	userFunction
 3370 0d1c 00000000 		.word	getMeasuredSpeed
 3371 0d20 00000000 		.word	enableDriver
 3372 0d24 00000000 		.word	deInit
 3373              		.cfi_endproc
 3374              	.LFE25:
 3376              		.comm	TMCMotionController,532,4
 3377              		.comm	TMCDriver,532,4
 3378              		.comm	Evalboards,244,4
 3379              		.comm	VitalSignsMonitor,20,4
 3380              		.comm	hwid,1,1
 3381              		.comm	HAL,48,4
 3382              		.comm	UART,40,4
 3383              		.comm	Timer,16,4
 3384              		.comm	WLAN,36,4
 3385              		.comm	RS232,36,4
 3386              		.comm	LEDs,28,4
 3387              		.comm	USB,36,4
 3388              		.comm	uart0_interrupt,1,1
 3389              		.comm	ADCs,32,4
 3390              		.comm	SPI,44,4
 3391              		.comm	IOMap,2088,4
 3392              		.comm	IOs,52,4
 3393              		.comm	Cpu,8,4
 3394              		.data
 3395              		.align	2
 3396              		.set	.LANCHOR1,. + 0
 3399              	compatibilityMode:
 3400 0000 01000000 		.word	1
 3401              		.bss
 3402              		.align	2
 3403              		.set	.LANCHOR0,. + 0
 3406              	TMC2660:
 3407 0000 00000000 		.space	72
 3407      00000000 
 3407      00000000 
 3407      00000000 
 3407      00000000 
 3410              	TMC2660_config:
 3411 0048 00000000 		.space	4
 3414              	Pins:
 3415 004c 00000000 		.space	24
 3415      00000000 
 3415      00000000 
 3415      00000000 
 3415      00000000 
 3418              	TMC2660_SPIChannel:
 3419 0064 00000000 		.space	4
 3422              	rdsel.7789:
 3423 0068 00       		.space	1
 3426              	lastStandstillState.7942:
 3427 0069 00       		.space	1
 3430              	lastCoolStepState.7941:
 3431 006a 00       		.space	1
 3434              	rdsel.7808:
 3435 006b 00       		.space	1
 3438              	ADCValue:
 3439 006c 00000000 		.space	12
 3439      00000000 
 3439      00000000 
 3440              		.text
 3441              	.Letext0:
 3442              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 3443              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3444              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3445              		.file 5 "TMC-API/tmc/helpers/Types.h"
 3446              		.file 6 "TMC-API/tmc/helpers/Config.h"
 3447              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3448              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3449              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3450              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 3451              		.file 11 "TMC-API/tmc/helpers/API_Header.h"
 3452              		.file 12 "hal/Landungsbruecke/freescale/MK20D10.h"
 3453              		.file 13 "./hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 3454              		.file 14 "./hal/Landungsbruecke/freescale/Cpu.h"
 3455              		.file 15 "./hal/IOs.h"
 3456              		.file 16 "./hal/IOMap.h"
 3457              		.file 17 "./hal/SPI.h"
 3458              		.file 18 "./hal/ADCs.h"
 3459              		.file 19 "./hal/RXTX.h"
 3460              		.file 20 "./hal/USB.h"
 3461              		.file 21 "./hal/LEDs.h"
 3462              		.file 22 "./hal/RS232.h"
 3463              		.file 23 "./hal/WLAN.h"
 3464              		.file 24 "./hal/Timer.h"
 3465              		.file 25 "./hal/UART.h"
 3466              		.file 26 "./hal/HAL.h"
 3467              		.file 27 "./tmc/VitalSignsMonitor.h"
 3468              		.file 28 "boards/Board.h"
 3469              		.file 29 "boards/TMCDriver.h"
 3470              		.file 30 "boards/TMCMotionController.h"
 3471              		.file 31 "TMC-API/tmc/ic/TMC2660/TMC2660.h"
 3472              		.file 32 "./tmc/StepDir.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TMC2660_eval.c
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:22     .text:00000000 userFunction
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:108    .text:0000003c $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:113    .text:00000044 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:119    .text:00000044 moveTo
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:161    .text:00000056 restore
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:177    .text:00000060 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:181    .text:00000064 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:187    .text:00000064 enableDriver
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:263    .text:00000098 $d
                            *COM*:000000f4 Evalboards
                            *COM*:00000030 HAL
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:269    .text:000000a4 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:275    .text:000000a4 deInit
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:364    .text:000000ec $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:369    .text:000000f4 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:375    .text:000000f4 getMeasuredSpeed
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:435    .text:0000010a rotate
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:483    .text:00000120 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:487    .text:00000124 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:493    .text:00000124 stop
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:516    .text:00000128 left
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:541    .text:0000012c right
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:563    .text:0000012e reset
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:631    .text:0000016c $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:636    .text:00000174 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:642    .text:00000174 moveBy
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:714    .text:00000194 readWrite
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:828    .text:00000214 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:832    .text:00000218 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:838    .text:00000218 tmc2660_writeInt.constprop.0
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:898    .text:00000244 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:902    .text:00000248 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:908    .text:00000248 writeRegister
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:938    .text:0000024e readImmediately
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1007   .text:0000027e tmc2660_readInt.constprop.0
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1051   .text:000002a4 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1055   .text:000002a8 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1061   .text:000002a8 handleParameter
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1116   .text:000002e0 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1191   .text:0000040c $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1201   .text:00000418 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1231   .text:00000490 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1588   .text:000005dc $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:1596   .text:000005e4 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2010   .text:000007b0 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2016   .text:000007b8 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2515   .text:000009cc $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2520   .text:000009d4 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2526   .text:000009d4 SAP
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2566   .text:000009e8 GAP
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2596   .text:000009f0 readRegister
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2633   .text:000009fe periodicJob
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2845   .text:00000adc $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2850   .text:00000ae4 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2857   .text:00000ae4 tmc2660_writeInt
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2916   .text:00000b10 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2920   .text:00000b14 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2927   .text:00000b14 tmc2660_readInt
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2976   .text:00000b3c $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2980   .text:00000b40 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:2987   .text:00000b40 tmc2660_readWrite
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3104   .text:00000bc0 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3108   .text:00000bc4 $t
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3115   .text:00000bc4 TMC2660_init
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3352   .text:00000cd4 $d
                            *COM*:00000214 TMCMotionController
                            *COM*:00000214 TMCDriver
                            *COM*:00000014 VitalSignsMonitor
                            *COM*:00000001 hwid
                            *COM*:00000028 UART
                            *COM*:00000010 Timer
                            *COM*:00000024 WLAN
                            *COM*:00000024 RS232
                            *COM*:0000001c LEDs
                            *COM*:00000024 USB
                            *COM*:00000001 uart0_interrupt
                            *COM*:00000020 ADCs
                            *COM*:0000002c SPI
                            *COM*:00000828 IOMap
                            *COM*:00000034 IOs
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3395   .data:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3399   .data:00000000 compatibilityMode
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3402   .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3406   .bss:00000000 TMC2660
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3410   .bss:00000048 TMC2660_config
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3414   .bss:0000004c Pins
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3418   .bss:00000064 TMC2660_SPIChannel
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3422   .bss:00000068 rdsel.7789
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3426   .bss:00000069 lastStandstillState.7942
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3430   .bss:0000006a lastCoolStepState.7941
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3434   .bss:0000006b rdsel.7808
C:\Users\Shubham\AppData\Local\Temp\ccKbt8rW.s:3438   .bss:0000006c ADCValue

UNDEFINED SYMBOLS
StepDir_getStatus
StepDir_moveTo
tmc2660_restore
StepDir_deInit
StepDir_getActualVelocity
StepDir_rotate
tmc2660_reset
StepDir_init
StepDir_setPins
StepDir_getActualPosition
StepDir_getTargetPosition
StepDir_setActualPosition
StepDir_getTargetVelocity
StepDir_getVelocityMax
StepDir_setVelocityMax
StepDir_getAcceleration
StepDir_setAcceleration
StepDir_getMode
StepDir_setMode
StepDir_getFrequency
StepDir_setFrequency
StepDir_getStallGuardThreshold
StepDir_setStallGuardThreshold
tmc2660_periodicJob
StepDir_periodicJob
tmc2660_initConfig
