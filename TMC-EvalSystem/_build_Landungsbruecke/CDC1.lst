   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"CDC1.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	CDC1_Notify_Callback
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	CDC1_Notify_Callback:
  24              	.LVL0:
  25              	.LFB9:
  26              		.file 1 "hal/Landungsbruecke/freescale/USB_CDC/CDC1.c"
   1:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /* ###################################################################
   2:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Filename    : CDC1.c
   4:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Project     : Landungsbruecke_KDS_v2.0.0
   5:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Processor   : MK20DN512VLL10
   6:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Component   : FSL_USB_CDC_Device
   7:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Version     : Component 01.031, Driver 01.00, CPU db: 3.00.000
   8:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Compiler    : GNU C Compiler
   9:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Date/Time   : 2015-01-09, 16:27, # CodeGen: 0
  10:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Abstract    :
  11:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **
  12:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Settings    :
  13:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **          Component name                                 : CDC1
  14:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **          CPU                                            : Kinetis K20D72
  15:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **          CDC Settings                                   : Enabled
  16:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **            .inf ClassGuid                               : 4D36E978-E325-11CE-BFC1-08002BE10318
  17:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **            .inf VID                                     : 2504
  18:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **            .inf PID                                     : 0300
  19:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **            .inf PRVDR                                   : Freescale
  20:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **            .inf MFGNAME                                 : My Company
  21:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **            .inf DESCRIPTION                             : Freescale CDC Device
  22:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **            .inf SERVICE                                 : Virtual Com Driver
  23:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **            Bus reported device                          : FSL CDC DEVICE
  24:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **            Bus reported vendor                          : FREESCALE INC.
  25:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **          Send Buffer                                    : RingBuffer
  26:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **          Receive Buffer                                 : RingBuffer
  27:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **          Use Timeout                                    : Disabled
  28:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Contents    :
  29:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ClearRxBuffer    - void CDC1_ClearRxBuffer(void);
  30:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ClearTxBuffer    - void CDC1_ClearTxBuffer(void);
  31:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         GetFreeInTxBuf   - word CDC1_GetFreeInTxBuf(void);
  32:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         GetCharsInTxBuf  - word CDC1_GetCharsInTxBuf(void);
  33:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         GetCharsInRxBuf  - word CDC1_GetCharsInRxBuf(void);
  34:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         GetChar          - byte CDC1_GetChar(CDC1_TComData *Chr);
  35:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         RecvChar         - byte CDC1_RecvChar(CDC1_TComData *Chr);
  36:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         SendChar         - byte CDC1_SendChar(CDC1_TComData Chr);
  37:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         SendString       - byte CDC1_SendString(CDC1_TComData *Chr);
  38:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         SendBlock        - byte CDC1_SendBlock(byte *data, word dataSize);
  39:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         PutBufferChecked - byte CDC1_PutBufferChecked(byte *buf, size_t bufSize);
  40:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         App_Callback     - void CDC1_App_Callback(byte controller_ID, byte event_type, void *val
  41:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Notify_Callback  - void CDC1_Notify_Callback(byte controller_ID, byte event_type, void *
  42:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         App_Task         - byte CDC1_App_Task(byte *txBuf, size_t txBufSize);
  43:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Init             - byte CDC1_Init(void);
  44:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **
  45:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     (c) Copyright Freescale, all rights reserved, 2013
  46:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Ported as Processor Expert component: Erich Styger
  47:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     http: www.mcuoneclipse.com
  48:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ###################################################################*/
  49:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*!
  50:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** @file CDC1.c
  51:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** @version 01.00
  52:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** @brief
  53:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **
  54:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
  55:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*!
  56:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **  @addtogroup CDC1_module CDC1 module documentation
  57:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **  @{
  58:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
  59:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
  60:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /* MODULE CDC1. */
  61:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
  62:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #include "CDC1.h"
  63:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #include "hidef.h"          /* for EnableInterrupts; macro */
  64:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #include "hal/derivative.h"     /* include peripheral declarations */
  65:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #include "usb_cdc.h"        /* USB CDC Class Header File */
  66:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #include <stdio.h>
  67:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /* skip the inclusion in dependency state */
  68:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #ifndef __NO_SETJMP
  69:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   #include <stdio.h>
  70:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #endif
  71:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #include <stdlib.h>
  72:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #include <string.h>
  73:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
  74:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #define  CONTROLLER_ID      (0)   /* ID to identify USB CONTROLLER */
  75:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
  76:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #if HIGH_SPEED_DEVICE
  77:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** static uint_32 g_cdcBuffer[DIC_BULK_OUT_ENDP_PACKET_SIZE>>1];
  78:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #endif
  79:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
  80:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /* Virtual COM Application start Init Flag */
  81:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** static volatile boolean start_app = FALSE;
  82:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
  83:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /* Virtual COM Application Carrier Activate Flag */
  84:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** static volatile boolean start_transactions = FALSE;
  85:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
  86:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** static volatile boolean transactionOngoing = FALSE;
  87:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
  88:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
  89:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_GetFreeInTxBuf (component FSL_USB_CDC_Device)
  90:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
  91:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Returns the number of free character in the send buffer
  92:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  : None
  93:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
  94:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Number of free character in the receive
  95:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           buffer.
  96:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
  97:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
  98:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
  99:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** word CDC1_GetFreeInTxBuf(void)
 100:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 101:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   *** Implemented as macro in the header file
 102:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 103:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 104:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 105:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 106:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 107:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_GetCharsInTxBuf (component FSL_USB_CDC_Device)
 108:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 109:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Returns the number of character in the send buffer
 110:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  : None
 111:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 112:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Number of character in the receive buffer.
 113:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 114:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 115:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 116:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** word CDC1_GetCharsInTxBuf(void)
 117:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 118:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   *** implemented as macro in the header file
 119:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return (word)Tx1_NofElements();
 120:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 121:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 122:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 123:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 124:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 125:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_GetCharsInRxBuf (component FSL_USB_CDC_Device)
 126:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 127:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Returns the number of character in the receive buffer
 128:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  : None
 129:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 130:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Number of character in the receive buffer.
 131:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 132:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 133:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** word CDC1_GetCharsInRxBuf(void)
 134:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 135:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   static uint8 txBuf[CDC1_DATA_BUFF_SIZE];
 136:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 137:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(CDC1_App_Task(txBuf, sizeof(txBuf))!=ERR_OK) { /* call USB handler: if active, then this will 
 138:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 139:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return (word)Rx1_NofElements();
 140:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 141:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 142:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 143:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 144:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_GetChar (component FSL_USB_CDC_Device)
 145:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 146:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Receives a character from the USB interface. Function is not
 147:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         blocking if there is no character in the input buffer.
 148:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  :
 149:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         NAME            - DESCRIPTION
 150:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **       * Chr             - Pointer to where to store the character
 151:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           received
 152:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 153:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Error code, ERR_OK for success,
 154:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           ERR_RXEMPTY if nothing is in RX buffer.
 155:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 156:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 157:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /**
 158:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** byte CDC1_GetChar(CDC1_TComData *Chr)
 159:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 160:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   *** implemented as macro in the header file
 161:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return Rx1_Get(Chr);
 162:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 163:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 164:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 165:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 166:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_RecvChar (component FSL_USB_CDC_Device)
 167:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 168:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Receives a character from the USB interface. Function is
 169:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         blocking if there is no character in the input buffer.
 170:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  :
 171:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         NAME            - DESCRIPTION
 172:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **       * Chr             - Pointer to where to store the character
 173:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           received
 174:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 175:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Error code, ERR_OK for success,
 176:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           ERR_RXEMPTY if nothing is in RX buffer.
 177:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 178:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 179:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** byte CDC1_RecvChar(CDC1_TComData *Chr)
 180:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 181:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   while(Rx1_Get(Chr)!=ERR_OK) {
 182:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* retry receiving until success */
 183:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 184:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return ERR_OK;
 185:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 186:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 187:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 188:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 189:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_SendChar (component FSL_USB_CDC_Device)
 190:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 191:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Method to send a character to the USB interface. Method is
 192:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         non-blocking: If the output buffer is full, it tries to send
 193:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         it over USB. If this fails or buffer is still full, the
 194:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         character will be lost. If OnError() event is enabled, the
 195:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         error event will be called in case of error.
 196:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  :
 197:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         NAME            - DESCRIPTION
 198:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Chr             - Character to send.
 199:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 200:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Error code. ERR_OK for success and
 201:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           ERR_FAILED otherwise.
 202:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 203:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 204:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** byte CDC1_SendChar(CDC1_TComData Chr)
 205:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 206:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   static uint8 txBuf[CDC1_DATA_BUFF_SIZE];
 207:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 208:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(Tx1_Put(Chr)==ERR_TXFULL) { /* retry once, otherwise throw it away  */
 209:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_App_Task(txBuf, sizeof(txBuf))!=ERR_OK) { /* call USB handler: if active, then this wil
 210:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       return ERR_TXFULL;
 211:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     } else { /* retry, as USB App_Task() should have sent the buffer */
 212:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       return Tx1_Put(Chr); /* retry. If buffer is still full, we will lose the character */
 213:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 214:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 215:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return ERR_OK;
 216:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 217:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 218:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 219:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 220:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_SendBlock (component FSL_USB_CDC_Device)
 221:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 222:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Method to send a data block to the USB interface. Method is
 223:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         non-blocking: if data cannot be sent, it will be lost. If
 224:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         OnError() event is enabled, the error event will be called
 225:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         in case of error.
 226:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  :
 227:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         NAME            - DESCRIPTION
 228:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **       * data            - Pointer to data to send.
 229:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         dataSize        - Size of data in bytes
 230:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 231:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Error code. ERR_OK for success and
 232:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           ERR_FAILED otherwise.
 233:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 234:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 235:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** byte CDC1_SendBlock(byte *data, word dataSize)
 236:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 237:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   byte res = ERR_OK;
 238:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 239:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   while(dataSize > 0) {
 240:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_SendChar(*data)!=ERR_OK) {
 241:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = ERR_TXFULL;
 242:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 243:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     dataSize--; data++;
 244:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 245:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return res;
 246:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 247:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 248:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 249:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 250:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_SendString (component FSL_USB_CDC_Device)
 251:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 252:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Method to send a string to the USB interface. Method is
 253:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         non-blocking: if string cannot be sent, it will be lost. If
 254:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         OnError() event is enabled, the error event will be called
 255:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         in case of error.
 256:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  :
 257:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         NAME            - DESCRIPTION
 258:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **       * Chr             - Pointer to string to send.
 259:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 260:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Error code. ERR_OK for success and
 261:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           ERR_FAILED otherwise.
 262:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 263:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 264:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** byte CDC1_SendString(CDC1_TComData *Chr)
 265:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 266:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   byte res = ERR_OK;
 267:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 268:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   while(*Chr != '\0') {
 269:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_SendChar(*Chr)!=ERR_OK) {
 270:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = ERR_TXFULL;
 271:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 272:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     Chr++;
 273:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 274:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return res;
 275:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 276:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 277:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 278:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 279:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_App_Callback (component FSL_USB_CDC_Device)
 280:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 281:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Method to handle class callbacks from USB
 282:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  :
 283:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         NAME            - DESCRIPTION
 284:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         controller_ID   - controller ID
 285:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         event_type      - value of the event
 286:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         val             - gives the configuration value
 287:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     : Nothing
 288:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 289:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 290:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** void CDC1_App_Callback(byte controller_ID, byte event_type, void *val)
 291:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 292:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   UNUSED(controller_ID);
 293:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   UNUSED(val);
 294:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(event_type == USB_APP_BUS_RESET) {
 295:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_app = FALSE;
 296:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if(event_type == USB_APP_ENUM_COMPLETE) {
 297:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #if HIGH_SPEED_DEVICE
 298:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* prepare for the next receive event */
 299:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     USB_Class_CDC_Interface_DIC_Recv_Data(&controller_ID,
 300:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****                                            (uint_8_ptr)g_cdcBuffer,
 301:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****                                            DIC_BULK_OUT_ENDP_PACKET_SIZE);
 302:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #endif
 303:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_app = TRUE;
 304:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if((event_type == USB_APP_DATA_RECEIVED)&&(start_transactions==TRUE)) {
 305:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Copy Received Data buffer to Application Buffer */
 306:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     USB_PACKET_SIZE BytesToBeCopied;
 307:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     APP_DATA_STRUCT *dp_rcv = (APP_DATA_STRUCT*)val;
 308:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     uint_8 index;
 309:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 310:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     BytesToBeCopied = (USB_PACKET_SIZE)((dp_rcv->data_size > CDC1_DATA_BUFF_SIZE) ? CDC1_DATA_BUFF_
 311:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     for(index = 0; index<BytesToBeCopied ; index++) {
 312:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if(Rx1_Put(dp_rcv->data_ptr[index])!=ERR_OK) {
 313:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         /* Failed to put byte into buffer. Is the buffer to small? Then increase the Rx buffer.
 314:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****            Otherwise not much we could do here, so we are loosing byte here.
 315:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****          */
 316:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         /* Enable OnError() event so this event will be called here */
 317:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       }
 318:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 319:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     (void)USB_Class_CDC_Interface_DIC_Recv_Data(CONTROLLER_ID, NULL, 0); /* see http://eprints.utar
 320:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if((event_type == USB_APP_SEND_COMPLETE)&&(start_transactions==TRUE)) {
 321:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     transactionOngoing = FALSE;
 322:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Previous Send is complete. Queue next receive */
 323:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #if HIGH_SPEED_DEVICE
 324:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     //(void)USB_Class_CDC_Interface_DIC_Recv_Data(CONTROLLER_ID, g_cdcBuffer, 0);
 325:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #else
 326:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     (void)USB_Class_CDC_Interface_DIC_Recv_Data(CONTROLLER_ID, NULL, 0);
 327:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #endif
 328:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if(event_type == USB_APP_ERROR) { /* detach? */
 329:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_app = FALSE;
 330:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_transactions = FALSE;
 331:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 332:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 333:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 334:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 335:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 336:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_Notify_Callback (component FSL_USB_CDC_Device)
 337:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 338:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Method to handle PSTN Sub Class callbacks
 339:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  :
 340:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         NAME            - DESCRIPTION
 341:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         controller_ID   - controller ID
 342:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         event_type      - value of the event
 343:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         val             -
 344:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     : Nothing
 345:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 346:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 347:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** void CDC1_Notify_Callback(byte controller_ID, byte event_type, void *val)
 348:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
  27              		.loc 1 348 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 349:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   UNUSED(controller_ID);
  32              		.loc 1 349 3 view .LVU1
 350:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   UNUSED(val);
  33              		.loc 1 350 3 view .LVU2
 351:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(start_app == TRUE) {
  34              		.loc 1 351 3 view .LVU3
  35              		.loc 1 351 16 is_stmt 0 view .LVU4
  36 0000 074B     		ldr	r3, .L4
  37 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  38              	.LVL1:
  39              		.loc 1 351 5 view .LVU5
  40 0004 012A     		cmp	r2, #1
  41              		.loc 1 351 16 view .LVU6
  42 0006 D0B2     		uxtb	r0, r2
  43              	.LVL2:
  44              		.loc 1 351 5 view .LVU7
  45 0008 02D1     		bne	.L2
 352:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(event_type == USB_APP_CDC_CARRIER_ACTIVATED) {
  46              		.loc 1 352 5 is_stmt 1 view .LVU8
  47              		.loc 1 352 7 is_stmt 0 view .LVU9
  48 000a 2229     		cmp	r1, #34
  49 000c 03D1     		bne	.L3
 353:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       start_transactions = TRUE;
  50              		.loc 1 353 7 is_stmt 1 view .LVU10
  51              		.loc 1 353 26 is_stmt 0 view .LVU11
  52 000e 5870     		strb	r0, [r3, #1]
  53              	.L2:
 354:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     } else if(event_type == USB_APP_CDC_CARRIER_DEACTIVATED) {
 355:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       start_transactions = FALSE;
 356:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 357:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 358:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   start_transactions = TRUE; /* ??? see http://forums.freescale.com/t5/Freescale-MQX-trade-USB-Host
  54              		.loc 1 358 3 is_stmt 1 view .LVU12
  55              		.loc 1 358 22 is_stmt 0 view .LVU13
  56 0010 0122     		movs	r2, #1
  57 0012 5A70     		strb	r2, [r3, #1]
 359:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
  58              		.loc 1 359 1 view .LVU14
  59 0014 7047     		bx	lr
  60              	.L3:
 354:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     } else if(event_type == USB_APP_CDC_CARRIER_DEACTIVATED) {
  61              		.loc 1 354 12 is_stmt 1 view .LVU15
 354:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     } else if(event_type == USB_APP_CDC_CARRIER_DEACTIVATED) {
  62              		.loc 1 354 14 is_stmt 0 view .LVU16
  63 0016 2129     		cmp	r1, #33
 355:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
  64              		.loc 1 355 7 is_stmt 1 view .LVU17
 355:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
  65              		.loc 1 355 26 is_stmt 0 view .LVU18
  66 0018 04BF     		itt	eq
  67 001a 0022     		moveq	r2, #0
  68 001c 5A70     		strbeq	r2, [r3, #1]
  69 001e F7E7     		b	.L2
  70              	.L5:
  71              		.align	2
  72              	.L4:
  73 0020 00000000 		.word	.LANCHOR0
  74              		.cfi_endproc
  75              	.LFE9:
  77              		.align	1
  78              		.global	CDC1_App_Callback
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu softvfp
  84              	CDC1_App_Callback:
  85              	.LVL3:
  86              	.LFB8:
 291:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   UNUSED(controller_ID);
  87              		.loc 1 291 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
 292:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   UNUSED(val);
  91              		.loc 1 292 3 view .LVU20
 293:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(event_type == USB_APP_BUS_RESET) {
  92              		.loc 1 293 3 view .LVU21
 294:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_app = FALSE;
  93              		.loc 1 294 3 view .LVU22
 291:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   UNUSED(controller_ID);
  94              		.loc 1 291 1 is_stmt 0 view .LVU23
  95 0024 70B5     		push	{r4, r5, r6, lr}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 16
  98              		.cfi_offset 4, -16
  99              		.cfi_offset 5, -12
 100              		.cfi_offset 6, -8
 101              		.cfi_offset 14, -4
 291:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   UNUSED(controller_ID);
 102              		.loc 1 291 1 view .LVU24
 103 0026 1446     		mov	r4, r2
 294:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_app = FALSE;
 104              		.loc 1 294 5 view .LVU25
 105 0028 11B9     		cbnz	r1, .L7
 295:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if(event_type == USB_APP_ENUM_COMPLETE) {
 106              		.loc 1 295 5 is_stmt 1 view .LVU26
 295:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if(event_type == USB_APP_ENUM_COMPLETE) {
 107              		.loc 1 295 15 is_stmt 0 view .LVU27
 108 002a 1B4B     		ldr	r3, .L15
 109 002c 1970     		strb	r1, [r3]
 110              	.LVL4:
 111              	.L6:
 332:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 112              		.loc 1 332 1 view .LVU28
 113 002e 70BD     		pop	{r4, r5, r6, pc}
 114              	.LVL5:
 115              	.L7:
 296:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #if HIGH_SPEED_DEVICE
 116              		.loc 1 296 10 is_stmt 1 view .LVU29
 296:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #if HIGH_SPEED_DEVICE
 117              		.loc 1 296 12 is_stmt 0 view .LVU30
 118 0030 0229     		cmp	r1, #2
 119 0032 03D1     		bne	.L9
 303:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if((event_type == USB_APP_DATA_RECEIVED)&&(start_transactions==TRUE)) {
 120              		.loc 1 303 5 is_stmt 1 view .LVU31
 303:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if((event_type == USB_APP_DATA_RECEIVED)&&(start_transactions==TRUE)) {
 121              		.loc 1 303 15 is_stmt 0 view .LVU32
 122 0034 184B     		ldr	r3, .L15
 123 0036 0122     		movs	r2, #1
 124              	.LVL6:
 303:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if((event_type == USB_APP_DATA_RECEIVED)&&(start_transactions==TRUE)) {
 125              		.loc 1 303 15 view .LVU33
 126 0038 1A70     		strb	r2, [r3]
 127 003a F8E7     		b	.L6
 128              	.LVL7:
 129              	.L9:
 304:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Copy Received Data buffer to Application Buffer */
 130              		.loc 1 304 10 is_stmt 1 view .LVU34
 304:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Copy Received Data buffer to Application Buffer */
 131              		.loc 1 304 12 is_stmt 0 view .LVU35
 132 003c 0429     		cmp	r1, #4
 133 003e 1BD1     		bne	.L10
 304:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Copy Received Data buffer to Application Buffer */
 134              		.loc 1 304 71 discriminator 1 view .LVU36
 135 0040 154B     		ldr	r3, .L15
 136 0042 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 304:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Copy Received Data buffer to Application Buffer */
 137              		.loc 1 304 50 discriminator 1 view .LVU37
 138 0044 012B     		cmp	r3, #1
 139 0046 F2D1     		bne	.L6
 140              	.LBB11:
 306:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     APP_DATA_STRUCT *dp_rcv = (APP_DATA_STRUCT*)val;
 141              		.loc 1 306 5 is_stmt 1 view .LVU38
 307:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     uint_8 index;
 142              		.loc 1 307 5 view .LVU39
 143              	.LVL8:
 308:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 144              		.loc 1 308 5 view .LVU40
 310:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     for(index = 0; index<BytesToBeCopied ; index++) {
 145              		.loc 1 310 5 view .LVU41
 310:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     for(index = 0; index<BytesToBeCopied ; index++) {
 146              		.loc 1 310 21 is_stmt 0 view .LVU42
 147 0048 9588     		ldrh	r5, [r2, #4]
 148 004a 402D     		cmp	r5, #64
 149 004c 28BF     		it	cs
 150 004e 4025     		movcs	r5, #64
 151              	.LVL9:
 311:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if(Rx1_Put(dp_rcv->data_ptr[index])!=ERR_OK) {
 152              		.loc 1 311 5 is_stmt 1 view .LVU43
 311:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if(Rx1_Put(dp_rcv->data_ptr[index])!=ERR_OK) {
 153              		.loc 1 311 5 is_stmt 0 view .LVU44
 154 0050 0023     		movs	r3, #0
 155              	.LVL10:
 156              	.L11:
 311:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if(Rx1_Put(dp_rcv->data_ptr[index])!=ERR_OK) {
 157              		.loc 1 311 20 is_stmt 1 discriminator 1 view .LVU45
 311:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if(Rx1_Put(dp_rcv->data_ptr[index])!=ERR_OK) {
 158              		.loc 1 311 25 is_stmt 0 discriminator 1 view .LVU46
 159 0052 DAB2     		uxtb	r2, r3
 311:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if(Rx1_Put(dp_rcv->data_ptr[index])!=ERR_OK) {
 160              		.loc 1 311 5 discriminator 1 view .LVU47
 161 0054 AA42     		cmp	r2, r5
 162 0056 03F10106 		add	r6, r3, #1
 163 005a 07D3     		bcc	.L12
 319:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if((event_type == USB_APP_SEND_COMPLETE)&&(start_transactions==TRUE)) {
 164              		.loc 1 319 5 is_stmt 1 view .LVU48
 319:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if((event_type == USB_APP_SEND_COMPLETE)&&(start_transactions==TRUE)) {
 165              		.loc 1 319 11 is_stmt 0 view .LVU49
 166 005c 0023     		movs	r3, #0
 167              	.LVL11:
 168              	.L14:
 319:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else if((event_type == USB_APP_SEND_COMPLETE)&&(start_transactions==TRUE)) {
 169              		.loc 1 319 11 view .LVU50
 170              	.LBE11:
 171              	.LBB12:
 172              	.LBB13:
 326:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #endif
 173              		.loc 1 326 5 is_stmt 1 view .LVU51
 174              	.LBE13:
 175              	.LBE12:
 332:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 176              		.loc 1 332 1 is_stmt 0 view .LVU52
 177 005e BDE87040 		pop	{r4, r5, r6, lr}
 178              	.LCFI1:
 179              		.cfi_remember_state
 180              		.cfi_restore 14
 181              		.cfi_restore 6
 182              		.cfi_restore 5
 183              		.cfi_restore 4
 184              		.cfi_def_cfa_offset 0
 185              	.LVL12:
 186              	.LBB16:
 187              	.LBB14:
 326:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #endif
 188              		.loc 1 326 11 view .LVU53
 189 0062 1A46     		mov	r2, r3
 190 0064 0221     		movs	r1, #2
 191 0066 1846     		mov	r0, r3
 192 0068 FFF7FEBF 		b	_usb_device_recv_data
 193              	.LVL13:
 194              	.L12:
 195              	.LCFI2:
 196              		.cfi_restore_state
 326:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #endif
 197              		.loc 1 326 11 view .LVU54
 198              	.LBE14:
 199              	.LBE16:
 200              	.LBB17:
 312:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         /* Failed to put byte into buffer. Is the buffer to small? Then increase the Rx buffer.
 201              		.loc 1 312 7 is_stmt 1 view .LVU55
 312:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         /* Failed to put byte into buffer. Is the buffer to small? Then increase the Rx buffer.
 202              		.loc 1 312 10 is_stmt 0 view .LVU56
 203 006c 2368     		ldr	r3, [r4]
 204              	.LVL14:
 312:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         /* Failed to put byte into buffer. Is the buffer to small? Then increase the Rx buffer.
 205              		.loc 1 312 10 view .LVU57
 206 006e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 207 0070 FFF7FEFF 		bl	Rx1_Put
 208              	.LVL15:
 317:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 209              		.loc 1 317 7 is_stmt 1 view .LVU58
 311:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if(Rx1_Put(dp_rcv->data_ptr[index])!=ERR_OK) {
 210              		.loc 1 311 44 view .LVU59
 312:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         /* Failed to put byte into buffer. Is the buffer to small? Then increase the Rx buffer.
 211              		.loc 1 312 10 is_stmt 0 view .LVU60
 212 0074 3346     		mov	r3, r6
 213 0076 ECE7     		b	.L11
 214              	.LVL16:
 215              	.L10:
 312:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         /* Failed to put byte into buffer. Is the buffer to small? Then increase the Rx buffer.
 216              		.loc 1 312 10 view .LVU61
 217              	.LBE17:
 320:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     transactionOngoing = FALSE;
 218              		.loc 1 320 10 is_stmt 1 view .LVU62
 320:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     transactionOngoing = FALSE;
 219              		.loc 1 320 12 is_stmt 0 view .LVU63
 220 0078 0329     		cmp	r1, #3
 221 007a 06D1     		bne	.L13
 320:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     transactionOngoing = FALSE;
 222              		.loc 1 320 71 discriminator 1 view .LVU64
 223 007c 064A     		ldr	r2, .L15
 224              	.LVL17:
 320:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     transactionOngoing = FALSE;
 225              		.loc 1 320 71 discriminator 1 view .LVU65
 226 007e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 320:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     transactionOngoing = FALSE;
 227              		.loc 1 320 50 discriminator 1 view .LVU66
 228 0080 012B     		cmp	r3, #1
 229 0082 D4D1     		bne	.L6
 230              	.LBB18:
 231              	.LBI12:
 290:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 232              		.loc 1 290 6 is_stmt 1 view .LVU67
 233              	.LVL18:
 234              	.LBB15:
 321:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Previous Send is complete. Queue next receive */
 235              		.loc 1 321 5 view .LVU68
 321:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Previous Send is complete. Queue next receive */
 236              		.loc 1 321 24 is_stmt 0 view .LVU69
 237 0084 0023     		movs	r3, #0
 238 0086 9370     		strb	r3, [r2, #2]
 239 0088 E9E7     		b	.L14
 240              	.LVL19:
 241              	.L13:
 321:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Previous Send is complete. Queue next receive */
 242              		.loc 1 321 24 view .LVU70
 243              	.LBE15:
 244              	.LBE18:
 328:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_app = FALSE;
 245              		.loc 1 328 10 is_stmt 1 view .LVU71
 328:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_app = FALSE;
 246              		.loc 1 328 12 is_stmt 0 view .LVU72
 247 008a 0529     		cmp	r1, #5
 329:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_transactions = FALSE;
 248              		.loc 1 329 5 is_stmt 1 view .LVU73
 329:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_transactions = FALSE;
 249              		.loc 1 329 15 is_stmt 0 view .LVU74
 250 008c 01BF     		itttt	eq
 251 008e 024B     		ldreq	r3, .L15
 252 0090 0022     		moveq	r2, #0
 253              	.LVL20:
 329:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     start_transactions = FALSE;
 254              		.loc 1 329 15 view .LVU75
 255 0092 1A70     		strbeq	r2, [r3]
 330:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 256              		.loc 1 330 5 is_stmt 1 view .LVU76
 330:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 257              		.loc 1 330 24 is_stmt 0 view .LVU77
 258 0094 5A70     		strbeq	r2, [r3, #1]
 332:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 259              		.loc 1 332 1 view .LVU78
 260 0096 CAE7     		b	.L6
 261              	.L16:
 262              		.align	2
 263              	.L15:
 264 0098 00000000 		.word	.LANCHOR0
 265              		.cfi_endproc
 266              	.LFE8:
 268              		.align	1
 269              		.global	CDC1_RecvChar
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu softvfp
 275              	CDC1_RecvChar:
 276              	.LVL21:
 277              	.LFB4:
 180:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   while(Rx1_Get(Chr)!=ERR_OK) {
 278              		.loc 1 180 1 is_stmt 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 180:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   while(Rx1_Get(Chr)!=ERR_OK) {
 282              		.loc 1 180 1 is_stmt 0 view .LVU80
 283 009c 10B5     		push	{r4, lr}
 284              	.LCFI3:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 4, -8
 287              		.cfi_offset 14, -4
 288 009e 0446     		mov	r4, r0
 181:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* retry receiving until success */
 289              		.loc 1 181 3 is_stmt 1 view .LVU81
 290              	.LVL22:
 291              	.L18:
 183:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return ERR_OK;
 292              		.loc 1 183 3 discriminator 1 view .LVU82
 181:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* retry receiving until success */
 293              		.loc 1 181 8 discriminator 1 view .LVU83
 181:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* retry receiving until success */
 294              		.loc 1 181 9 is_stmt 0 discriminator 1 view .LVU84
 295 00a0 2046     		mov	r0, r4
 296 00a2 FFF7FEFF 		bl	Rx1_Get
 297              	.LVL23:
 181:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* retry receiving until success */
 298              		.loc 1 181 8 discriminator 1 view .LVU85
 299 00a6 0028     		cmp	r0, #0
 300 00a8 FAD1     		bne	.L18
 185:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 301              		.loc 1 185 1 view .LVU86
 302 00aa 10BD     		pop	{r4, pc}
 185:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 303              		.loc 1 185 1 view .LVU87
 304              		.cfi_endproc
 305              	.LFE4:
 307              		.align	1
 308              		.global	CDC1_RunUsbEngine
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu softvfp
 314              	CDC1_RunUsbEngine:
 315              	.LFB10:
 360:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 361:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 362:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 363:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_RunUsbEngine (component FSL_USB_CDC_Device)
 364:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **
 365:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 366:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Runs the USB polling engine
 367:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         This method is internal. It is used by Processor Expert only.
 368:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 369:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 370:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** void CDC1_RunUsbEngine(void)
 371:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 316              		.loc 1 371 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 372:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   /* not needed */
 373:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 321              		.loc 1 373 1 view .LVU89
 322 00ac 7047     		bx	lr
 323              		.cfi_endproc
 324              	.LFE10:
 326              		.align	1
 327              		.global	CDC1_SendDataBlock
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu softvfp
 333              	CDC1_SendDataBlock:
 334              	.LVL24:
 335              	.LFB11:
 374:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 375:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 376:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 377:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_SendDataBlock (component FSL_USB_CDC_Device)
 378:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **
 379:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 380:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Sends a USB data block
 381:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         This method is internal. It is used by Processor Expert only.
 382:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 383:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 384:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** byte CDC1_SendDataBlock(byte *data, word dataSize)
 385:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 336              		.loc 1 385 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 386:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   uint8 res = ERR_OK;
 340              		.loc 1 386 3 view .LVU91
 387:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 388:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   transactionOngoing = TRUE;
 341              		.loc 1 388 3 view .LVU92
 385:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   uint8 res = ERR_OK;
 342              		.loc 1 385 1 is_stmt 0 view .LVU93
 343 00ae 10B5     		push	{r4, lr}
 344              	.LCFI4:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 4, -8
 347              		.cfi_offset 14, -4
 348              		.loc 1 388 22 view .LVU94
 349 00b0 094C     		ldr	r4, .L27
 385:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   uint8 res = ERR_OK;
 350              		.loc 1 385 1 view .LVU95
 351 00b2 0246     		mov	r2, r0
 352 00b4 0B46     		mov	r3, r1
 389:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(USB_Class_CDC_Interface_DIC_Send_Data(CONTROLLER_ID, data, dataSize)!=USB_OK) {
 353              		.loc 1 389 6 view .LVU96
 354 00b6 0020     		movs	r0, #0
 355              	.LVL25:
 388:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(USB_Class_CDC_Interface_DIC_Send_Data(CONTROLLER_ID, data, dataSize)!=USB_OK) {
 356              		.loc 1 388 22 view .LVU97
 357 00b8 0121     		movs	r1, #1
 358              	.LVL26:
 388:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(USB_Class_CDC_Interface_DIC_Send_Data(CONTROLLER_ID, data, dataSize)!=USB_OK) {
 359              		.loc 1 388 22 view .LVU98
 360 00ba A170     		strb	r1, [r4, #2]
 361              		.loc 1 389 3 is_stmt 1 view .LVU99
 362              		.loc 1 389 6 is_stmt 0 view .LVU100
 363 00bc FFF7FEFF 		bl	USB_Class_CDC_Send_Data
 364              	.LVL27:
 365              		.loc 1 389 6 view .LVU101
 366 00c0 2246     		mov	r2, r4
 367              		.loc 1 389 5 view .LVU102
 368 00c2 18B1     		cbz	r0, .L22
 390:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     transactionOngoing = FALSE;
 369              		.loc 1 390 5 is_stmt 1 view .LVU103
 370              		.loc 1 390 24 is_stmt 0 view .LVU104
 371 00c4 0023     		movs	r3, #0
 372 00c6 A370     		strb	r3, [r4, #2]
 391:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     return ERR_FAULT;
 373              		.loc 1 391 5 is_stmt 1 view .LVU105
 374              		.loc 1 391 12 is_stmt 0 view .LVU106
 375 00c8 1220     		movs	r0, #18
 376              	.L23:
 392:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 393:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   /* wait for transaction finish */
 394:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   while(transactionOngoing) { /* wait until transaction is finished */
 395:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     CDC1_RunUsbEngine();
 396:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 397:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return res;
 398:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 377              		.loc 1 398 1 view .LVU107
 378 00ca 10BD     		pop	{r4, pc}
 379              	.L22:
 380              	.LBB21:
 381              	.LBB22:
 394:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     CDC1_RunUsbEngine();
 382              		.loc 1 394 8 is_stmt 1 view .LVU108
 394:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     CDC1_RunUsbEngine();
 383              		.loc 1 394 9 is_stmt 0 view .LVU109
 384 00cc 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 394:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     CDC1_RunUsbEngine();
 385              		.loc 1 394 8 view .LVU110
 386 00ce 03F0FF00 		and	r0, r3, #255
 387 00d2 002B     		cmp	r3, #0
 388 00d4 FAD1     		bne	.L22
 389 00d6 F8E7     		b	.L23
 390              	.L28:
 391              		.align	2
 392              	.L27:
 393 00d8 00000000 		.word	.LANCHOR0
 394              	.LBE22:
 395              	.LBE21:
 396              		.cfi_endproc
 397              	.LFE11:
 399              		.align	1
 400              		.global	CDC1_App_Task
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu softvfp
 406              	CDC1_App_Task:
 407              	.LVL28:
 408              	.LFB12:
 399:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 400:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 401:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 402:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_App_Task (component FSL_USB_CDC_Device)
 403:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 404:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Application task to be called periodically from the main
 405:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         task.
 406:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  :
 407:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         NAME            - DESCRIPTION
 408:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **       * txBuf           - Pointer to temporary buffer used to
 409:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           transmit data over USB. Should be equal or
 410:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           greater than the endpoint buffer size. Data
 411:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           will be sent in an asynchronous way, so
 412:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           make sure the buffer is *not* on the stack.
 413:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           This buffer must be available until the
 414:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           next transmission.
 415:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         txBufSize       - Size of the buffer in bytes
 416:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 417:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Error code, returns ERR_OK if USB
 418:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           enumeration has been finished, error code
 419:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **                           otherwise.
 420:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 421:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 422:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** byte CDC1_App_Task(byte *txBuf, size_t txBufSize)
 423:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 409              		.loc 1 423 1 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 424:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   uint8 i, res;
 413              		.loc 1 424 3 view .LVU112
 425:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 426:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   /* device is Kinetis K20D72 */
 427:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   CDC1_RunUsbEngine();
 414              		.loc 1 427 3 view .LVU113
 373:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 415              		.loc 1 373 1 view .LVU114
 428:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   /* call the periodic task function */
 429:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   USB_Class_CDC_Periodic_Task();
 416              		.loc 1 429 3 view .LVU115
 423:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   uint8 i, res;
 417              		.loc 1 423 1 is_stmt 0 view .LVU116
 418 00dc F8B5     		push	{r3, r4, r5, r6, r7, lr}
 419              	.LCFI5:
 420              		.cfi_def_cfa_offset 24
 421              		.cfi_offset 3, -24
 422              		.cfi_offset 4, -20
 423              		.cfi_offset 5, -16
 424              		.cfi_offset 6, -12
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 423:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   uint8 i, res;
 427              		.loc 1 423 1 view .LVU117
 428 00de 0446     		mov	r4, r0
 429 00e0 0F46     		mov	r7, r1
 430              		.loc 1 429 3 view .LVU118
 431 00e2 FFF7FEFF 		bl	USB_Class_Periodic_Task
 432              	.LVL29:
 430:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   /* check whether enumeration is complete or not */
 431:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if((start_app==TRUE) && (start_transactions==TRUE)) {
 433              		.loc 1 431 3 is_stmt 1 view .LVU119
 434              		.loc 1 431 16 is_stmt 0 view .LVU120
 435 00e6 0E4B     		ldr	r3, .L41
 436 00e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 437              		.loc 1 431 5 view .LVU121
 438 00ea 012A     		cmp	r2, #1
 439 00ec 16D1     		bne	.L35
 440              		.loc 1 431 46 discriminator 1 view .LVU122
 441 00ee 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 442              		.loc 1 431 24 discriminator 1 view .LVU123
 443 00f0 012B     		cmp	r3, #1
 444 00f2 13D1     		bne	.L35
 445              	.LVL30:
 446              	.LBB25:
 447              	.LBI25:
 422:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 448              		.loc 1 422 6 is_stmt 1 view .LVU124
 449              	.LBB26:
 432:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(Tx1_NofElements()!=0) {
 450              		.loc 1 432 5 view .LVU125
 451              		.loc 1 432 8 is_stmt 0 view .LVU126
 452 00f4 FFF7FEFF 		bl	Tx1_NofElements
 453              	.LVL31:
 454              		.loc 1 432 7 view .LVU127
 455 00f8 88B1     		cbz	r0, .L30
 456 00fa 0026     		movs	r6, #0
 457              	.L32:
 458 00fc F5B2     		uxtb	r5, r6
 459              	.LVL32:
 433:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       i = 0;
 434:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       while(i<txBufSize && Tx1_Get(&txBuf[i])==ERR_OK) {
 460              		.loc 1 434 12 is_stmt 1 view .LVU128
 461 00fe AF42     		cmp	r7, r5
 462 0100 05D8     		bhi	.L31
 463              	.L33:
 435:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         i++;
 436:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       }
 437:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = CDC1_SendDataBlock(txBuf, i);
 464              		.loc 1 437 7 view .LVU129
 465              		.loc 1 437 13 is_stmt 0 view .LVU130
 466 0102 2946     		mov	r1, r5
 467 0104 2046     		mov	r0, r4
 468              	.LBE26:
 469              	.LBE25:
 438:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if(res!=ERR_OK) {
 439:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         return res;
 440:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       }
 441:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #if 0 /* workaround for problem in USB stack v3.1.1: if last block is 8, 16, 32, 40, 48, ... bytes,
 442:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if((i%8)==0) {
 443:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         /* workaround: sending a dummy block of zero bytes */
 444:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         res = CDC1_SendDataBlock(txBuf, 0);
 445:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         if(res!=ERR_OK) {
 446:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****           return res;
 447:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         }
 448:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       }
 449:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** #endif
 450:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     } /* if */
 451:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     return ERR_OK;
 452:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else {
 453:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     return ERR_BUSOFF; /* USB bus not available yet */
 454:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 455:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 470              		.loc 1 455 1 view .LVU131
 471 0106 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 472              	.LCFI6:
 473              		.cfi_remember_state
 474              		.cfi_restore 14
 475              		.cfi_restore 7
 476              		.cfi_restore 6
 477              		.cfi_restore 5
 478              		.cfi_restore 4
 479              		.cfi_restore 3
 480              		.cfi_def_cfa_offset 0
 481              	.LVL33:
 482              	.LBB28:
 483              	.LBB27:
 437:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       if(res!=ERR_OK) {
 484              		.loc 1 437 13 view .LVU132
 485 010a FFF7FEBF 		b	CDC1_SendDataBlock
 486              	.LVL34:
 487              	.L31:
 488              	.LCFI7:
 489              		.cfi_restore_state
 434:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         i++;
 490              		.loc 1 434 28 view .LVU133
 491 010e 6019     		adds	r0, r4, r5
 492 0110 FFF7FEFF 		bl	Tx1_Get
 493              	.LVL35:
 494 0114 0136     		adds	r6, r6, #1
 434:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         i++;
 495              		.loc 1 434 25 view .LVU134
 496 0116 0028     		cmp	r0, #0
 497 0118 F0D0     		beq	.L32
 498 011a F2E7     		b	.L33
 499              	.LVL36:
 500              	.L35:
 434:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****         i++;
 501              		.loc 1 434 25 view .LVU135
 502              	.LBE27:
 503              	.LBE28:
 453:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 504              		.loc 1 453 12 view .LVU136
 505 011c 0C20     		movs	r0, #12
 506              	.L30:
 507              		.loc 1 455 1 view .LVU137
 508 011e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 509              	.LVL37:
 510              	.L42:
 511              		.loc 1 455 1 view .LVU138
 512              		.align	2
 513              	.L41:
 514 0120 00000000 		.word	.LANCHOR0
 515              		.cfi_endproc
 516              	.LFE12:
 518              		.align	1
 519              		.global	CDC1_GetCharsInRxBuf
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu softvfp
 525              	CDC1_GetCharsInRxBuf:
 526              	.LFB3:
 134:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   static uint8 txBuf[CDC1_DATA_BUFF_SIZE];
 527              		.loc 1 134 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 135:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 531              		.loc 1 135 3 view .LVU140
 137:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 532              		.loc 1 137 3 view .LVU141
 134:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   static uint8 txBuf[CDC1_DATA_BUFF_SIZE];
 533              		.loc 1 134 1 is_stmt 0 view .LVU142
 534 0124 08B5     		push	{r3, lr}
 535              	.LCFI8:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 3, -8
 538              		.cfi_offset 14, -4
 137:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 539              		.loc 1 137 6 view .LVU143
 540 0126 4021     		movs	r1, #64
 541 0128 0348     		ldr	r0, .L44
 542 012a FFF7FEFF 		bl	CDC1_App_Task
 543              	.LVL38:
 138:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return (word)Rx1_NofElements();
 544              		.loc 1 138 3 is_stmt 1 view .LVU144
 139:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 545              		.loc 1 139 3 view .LVU145
 139:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 546              		.loc 1 139 16 is_stmt 0 view .LVU146
 547 012e FFF7FEFF 		bl	Rx1_NofElements
 548              	.LVL39:
 140:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 549              		.loc 1 140 1 view .LVU147
 550 0132 80B2     		uxth	r0, r0
 551 0134 08BD     		pop	{r3, pc}
 552              	.L45:
 553 0136 00BF     		.align	2
 554              	.L44:
 555 0138 03000000 		.word	.LANCHOR0+3
 556              		.cfi_endproc
 557              	.LFE3:
 559              		.align	1
 560              		.global	CDC1_SendChar
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu softvfp
 566              	CDC1_SendChar:
 567              	.LVL40:
 568              	.LFB5:
 205:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   static uint8 txBuf[CDC1_DATA_BUFF_SIZE];
 569              		.loc 1 205 1 is_stmt 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 206:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 573              		.loc 1 206 3 view .LVU149
 208:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_App_Task(txBuf, sizeof(txBuf))!=ERR_OK) { /* call USB handler: if active, then this wil
 574              		.loc 1 208 3 view .LVU150
 205:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   static uint8 txBuf[CDC1_DATA_BUFF_SIZE];
 575              		.loc 1 205 1 is_stmt 0 view .LVU151
 576 013c 38B5     		push	{r3, r4, r5, lr}
 577              	.LCFI9:
 578              		.cfi_def_cfa_offset 16
 579              		.cfi_offset 3, -16
 580              		.cfi_offset 4, -12
 581              		.cfi_offset 5, -8
 582              		.cfi_offset 14, -4
 205:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   static uint8 txBuf[CDC1_DATA_BUFF_SIZE];
 583              		.loc 1 205 1 view .LVU152
 584 013e 0546     		mov	r5, r0
 208:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_App_Task(txBuf, sizeof(txBuf))!=ERR_OK) { /* call USB handler: if active, then this wil
 585              		.loc 1 208 6 view .LVU153
 586 0140 FFF7FEFF 		bl	Tx1_Put
 587              	.LVL41:
 208:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_App_Task(txBuf, sizeof(txBuf))!=ERR_OK) { /* call USB handler: if active, then this wil
 588              		.loc 1 208 5 view .LVU154
 589 0144 0B28     		cmp	r0, #11
 208:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_App_Task(txBuf, sizeof(txBuf))!=ERR_OK) { /* call USB handler: if active, then this wil
 590              		.loc 1 208 6 view .LVU155
 591 0146 0446     		mov	r4, r0
 208:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_App_Task(txBuf, sizeof(txBuf))!=ERR_OK) { /* call USB handler: if active, then this wil
 592              		.loc 1 208 5 view .LVU156
 593 0148 09D1     		bne	.L48
 594              	.LVL42:
 595              	.LBB31:
 596              	.LBI31:
 204:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 597              		.loc 1 204 6 is_stmt 1 view .LVU157
 598              	.LBB32:
 209:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       return ERR_TXFULL;
 599              		.loc 1 209 5 view .LVU158
 209:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       return ERR_TXFULL;
 600              		.loc 1 209 8 is_stmt 0 view .LVU159
 601 014a 0648     		ldr	r0, .L49
 602 014c 4021     		movs	r1, #64
 603 014e FFF7FEFF 		bl	CDC1_App_Task
 604              	.LVL43:
 209:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       return ERR_TXFULL;
 605              		.loc 1 209 7 view .LVU160
 606 0152 28B9     		cbnz	r0, .L47
 212:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 607              		.loc 1 212 7 is_stmt 1 view .LVU161
 212:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 608              		.loc 1 212 14 is_stmt 0 view .LVU162
 609 0154 2846     		mov	r0, r5
 610              	.LBE32:
 611              	.LBE31:
 216:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 612              		.loc 1 216 1 view .LVU163
 613 0156 BDE83840 		pop	{r3, r4, r5, lr}
 614              	.LCFI10:
 615              		.cfi_remember_state
 616              		.cfi_restore 14
 617              		.cfi_restore 5
 618              		.cfi_restore 4
 619              		.cfi_restore 3
 620              		.cfi_def_cfa_offset 0
 621              	.LVL44:
 622              	.LBB34:
 623              	.LBB33:
 212:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 624              		.loc 1 212 14 view .LVU164
 625 015a FFF7FEBF 		b	Tx1_Put
 626              	.LVL45:
 627              	.L48:
 628              	.LCFI11:
 629              		.cfi_restore_state
 212:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 630              		.loc 1 212 14 view .LVU165
 631              	.LBE33:
 632              	.LBE34:
 215:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 633              		.loc 1 215 10 view .LVU166
 634 015e 0024     		movs	r4, #0
 635              	.L47:
 216:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 636              		.loc 1 216 1 view .LVU167
 637 0160 2046     		mov	r0, r4
 638 0162 38BD     		pop	{r3, r4, r5, pc}
 639              	.L50:
 640              		.align	2
 641              	.L49:
 642 0164 43000000 		.word	.LANCHOR0+67
 643              		.cfi_endproc
 644              	.LFE5:
 646              		.align	1
 647              		.global	CDC1_SendBlock
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu softvfp
 653              	CDC1_SendBlock:
 654              	.LVL46:
 655              	.LFB6:
 236:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   byte res = ERR_OK;
 656              		.loc 1 236 1 is_stmt 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 237:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 660              		.loc 1 237 3 view .LVU169
 239:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_SendChar(*data)!=ERR_OK) {
 661              		.loc 1 239 3 view .LVU170
 236:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   byte res = ERR_OK;
 662              		.loc 1 236 1 is_stmt 0 view .LVU171
 663 0168 70B5     		push	{r4, r5, r6, lr}
 664              	.LCFI12:
 665              		.cfi_def_cfa_offset 16
 666              		.cfi_offset 4, -16
 667              		.cfi_offset 5, -12
 668              		.cfi_offset 6, -8
 669              		.cfi_offset 14, -4
 236:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   byte res = ERR_OK;
 670              		.loc 1 236 1 view .LVU172
 671 016a 0C46     		mov	r4, r1
 672 016c 451E     		subs	r5, r0, #1
 237:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 673              		.loc 1 237 8 view .LVU173
 674 016e 0026     		movs	r6, #0
 675              	.LVL47:
 676              	.L52:
 239:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_SendChar(*data)!=ERR_OK) {
 677              		.loc 1 239 8 is_stmt 1 view .LVU174
 678 0170 0CB9     		cbnz	r4, .L54
 245:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 679              		.loc 1 245 3 view .LVU175
 246:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 680              		.loc 1 246 1 is_stmt 0 view .LVU176
 681 0172 3046     		mov	r0, r6
 682 0174 70BD     		pop	{r4, r5, r6, pc}
 683              	.LVL48:
 684              	.L54:
 240:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = ERR_TXFULL;
 685              		.loc 1 240 5 is_stmt 1 view .LVU177
 240:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = ERR_TXFULL;
 686              		.loc 1 240 8 is_stmt 0 view .LVU178
 687 0176 15F8010F 		ldrb	r0, [r5, #1]!	@ zero_extendqisi2
 688              	.LVL49:
 240:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = ERR_TXFULL;
 689              		.loc 1 240 8 view .LVU179
 690 017a FFF7FEFF 		bl	CDC1_SendChar
 691              	.LVL50:
 243:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 692              		.loc 1 243 13 view .LVU180
 693 017e 013C     		subs	r4, r4, #1
 694              	.LVL51:
 241:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 695              		.loc 1 241 11 view .LVU181
 696 0180 0028     		cmp	r0, #0
 697 0182 18BF     		it	ne
 698 0184 0B26     		movne	r6, #11
 699              	.LVL52:
 243:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 700              		.loc 1 243 5 is_stmt 1 view .LVU182
 243:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 701              		.loc 1 243 13 is_stmt 0 view .LVU183
 702 0186 A4B2     		uxth	r4, r4
 703              	.LVL53:
 243:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 704              		.loc 1 243 17 is_stmt 1 view .LVU184
 243:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 705              		.loc 1 243 17 is_stmt 0 view .LVU185
 706 0188 F2E7     		b	.L52
 707              		.cfi_endproc
 708              	.LFE6:
 710              		.align	1
 711              		.global	CDC1_SendString
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu softvfp
 717              	CDC1_SendString:
 718              	.LVL54:
 719              	.LFB7:
 265:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   byte res = ERR_OK;
 720              		.loc 1 265 1 is_stmt 1 view -0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 266:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 724              		.loc 1 266 3 view .LVU187
 268:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_SendChar(*Chr)!=ERR_OK) {
 725              		.loc 1 268 3 view .LVU188
 265:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   byte res = ERR_OK;
 726              		.loc 1 265 1 is_stmt 0 view .LVU189
 727 018a 38B5     		push	{r3, r4, r5, lr}
 728              	.LCFI13:
 729              		.cfi_def_cfa_offset 16
 730              		.cfi_offset 3, -16
 731              		.cfi_offset 4, -12
 732              		.cfi_offset 5, -8
 733              		.cfi_offset 14, -4
 734 018c 441E     		subs	r4, r0, #1
 266:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 735              		.loc 1 266 8 view .LVU190
 736 018e 0025     		movs	r5, #0
 737              	.LVL55:
 738              	.L58:
 268:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_SendChar(*Chr)!=ERR_OK) {
 739              		.loc 1 268 8 is_stmt 1 view .LVU191
 268:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_SendChar(*Chr)!=ERR_OK) {
 740              		.loc 1 268 9 is_stmt 0 view .LVU192
 741 0190 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 742              	.LVL56:
 268:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     if(CDC1_SendChar(*Chr)!=ERR_OK) {
 743              		.loc 1 268 8 view .LVU193
 744 0194 08B9     		cbnz	r0, .L60
 274:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 745              		.loc 1 274 3 is_stmt 1 view .LVU194
 275:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 746              		.loc 1 275 1 is_stmt 0 view .LVU195
 747 0196 2846     		mov	r0, r5
 748 0198 38BD     		pop	{r3, r4, r5, pc}
 749              	.LVL57:
 750              	.L60:
 269:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = ERR_TXFULL;
 751              		.loc 1 269 5 is_stmt 1 view .LVU196
 269:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = ERR_TXFULL;
 752              		.loc 1 269 8 is_stmt 0 view .LVU197
 753 019a FFF7FEFF 		bl	CDC1_SendChar
 754              	.LVL58:
 270:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 755              		.loc 1 270 11 view .LVU198
 756 019e 0028     		cmp	r0, #0
 757 01a0 18BF     		it	ne
 758 01a2 0B25     		movne	r5, #11
 759              	.LVL59:
 272:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 760              		.loc 1 272 5 is_stmt 1 view .LVU199
 272:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 761              		.loc 1 272 5 is_stmt 0 view .LVU200
 762 01a4 F4E7     		b	.L58
 763              		.cfi_endproc
 764              	.LFE7:
 766              		.align	1
 767              		.global	CDC1_Init
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu softvfp
 773              	CDC1_Init:
 774              	.LFB13:
 456:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 457:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 458:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 459:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_Init (component FSL_USB_CDC_Device)
 460:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 461:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Initializes the driver
 462:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  : None
 463:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 464:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Error code
 465:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 466:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 467:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** byte CDC1_Init(void)
 468:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 775              		.loc 1 468 1 is_stmt 1 view -0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 469:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   uint_8 err;
 779              		.loc 1 469 3 view .LVU202
 470:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 471:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   err = USB_Class_CDC_Init(CONTROLLER_ID, CDC1_App_Callback, NULL, CDC1_Notify_Callback, TRUE);
 780              		.loc 1 471 3 view .LVU203
 468:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   uint_8 err;
 781              		.loc 1 468 1 is_stmt 0 view .LVU204
 782 01a6 07B5     		push	{r0, r1, r2, lr}
 783              	.LCFI14:
 784              		.cfi_def_cfa_offset 16
 785              		.cfi_offset 14, -4
 786              		.loc 1 471 9 view .LVU205
 787 01a8 0123     		movs	r3, #1
 788 01aa 0022     		movs	r2, #0
 789 01ac 0093     		str	r3, [sp]
 790 01ae 0549     		ldr	r1, .L67
 791 01b0 054B     		ldr	r3, .L67+4
 792 01b2 1046     		mov	r0, r2
 793 01b4 FFF7FEFF 		bl	USB_Class_CDC_Init
 794              	.LVL60:
 472:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(err != USB_OK) {
 795              		.loc 1 472 3 is_stmt 1 view .LVU206
 796              		.loc 1 472 5 is_stmt 0 view .LVU207
 797 01b8 0028     		cmp	r0, #0
 798              	.LVL61:
 473:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     /* Error initializing USB-CDC Class */
 474:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     return ERR_FAILED;
 475:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 476:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return ERR_OK;
 477:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 799              		.loc 1 477 1 view .LVU208
 800 01ba 18BF     		it	ne
 801 01bc 1B20     		movne	r0, #27
 802 01be 03B0     		add	sp, sp, #12
 803              	.LCFI15:
 804              		.cfi_def_cfa_offset 4
 805              		@ sp needed
 806 01c0 5DF804FB 		ldr	pc, [sp], #4
 807              	.L68:
 808              		.align	2
 809              	.L67:
 810 01c4 00000000 		.word	CDC1_App_Callback
 811 01c8 00000000 		.word	CDC1_Notify_Callback
 812              		.cfi_endproc
 813              	.LFE13:
 815              		.align	1
 816              		.global	CDC1_PutBufferChecked
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu softvfp
 822              	CDC1_PutBufferChecked:
 823              	.LVL62:
 824              	.LFB14:
 478:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 479:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** /*
 480:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 481:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Method      :  CDC1_PutBufferChecked (component FSL_USB_CDC_Device)
 482:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Description :
 483:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         Puts a data block into the output buffer, but does not send
 484:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         it. If there is not enough size available, then ERR_TXFULL
 485:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         is returned, otherwise ERR_OK. The application then needs to
 486:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         call USB_App_Callback() to actually send the buffer.
 487:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Parameters  :
 488:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         NAME            - DESCRIPTION
 489:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **       * buf             - Pointer to buffer to be sent
 490:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         bufsize         - Buffer size in bytes
 491:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **     Returns     :
 492:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** **         ---             - Error code
 493:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** ** ===================================================================
 494:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** */
 495:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** byte CDC1_PutBufferChecked(byte *buf, size_t bufSize)
 496:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** {
 825              		.loc 1 496 1 is_stmt 1 view -0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		.loc 1 496 1 is_stmt 0 view .LVU210
 830 01cc 38B5     		push	{r3, r4, r5, lr}
 831              	.LCFI16:
 832              		.cfi_def_cfa_offset 16
 833              		.cfi_offset 3, -16
 834              		.cfi_offset 4, -12
 835              		.cfi_offset 5, -8
 836              		.cfi_offset 14, -4
 837              		.loc 1 496 1 view .LVU211
 838 01ce 0C46     		mov	r4, r1
 839 01d0 0546     		mov	r5, r0
 497:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   byte res;
 840              		.loc 1 497 3 is_stmt 1 view .LVU212
 498:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** 
 499:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   if(bufSize>CDC1_GetFreeInTxBuf()) { /* no room at the Inn... */
 841              		.loc 1 499 3 view .LVU213
 842              		.loc 1 499 14 is_stmt 0 view .LVU214
 843 01d2 FFF7FEFF 		bl	Tx1_NofFreeElements
 844              	.LVL63:
 845              		.loc 1 499 5 view .LVU215
 846 01d6 A042     		cmp	r0, r4
 847 01d8 0AD3     		bcc	.L73
 848 01da 2C44     		add	r4, r4, r5
 849              	.LVL64:
 500:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     res = ERR_TXFULL;
 501:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else {
 502:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     res = ERR_OK;
 850              		.loc 1 502 9 view .LVU216
 851 01dc 0020     		movs	r0, #0
 852              	.LVL65:
 853              	.L71:
 503:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     while(bufSize>0 && res==ERR_OK) {
 854              		.loc 1 503 10 is_stmt 1 view .LVU217
 855 01de A542     		cmp	r5, r4
 856 01e0 00D0     		beq	.L70
 857              		.loc 1 503 21 is_stmt 0 discriminator 1 view .LVU218
 858 01e2 00B1     		cbz	r0, .L72
 859              	.LVL66:
 860              	.L70:
 504:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = Tx1_Put(*buf);
 505:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       bufSize--;
 506:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       buf++;
 507:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 508:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   }
 509:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   return res;
 861              		.loc 1 509 3 is_stmt 1 view .LVU219
 510:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c **** }
 862              		.loc 1 510 1 is_stmt 0 view .LVU220
 863 01e4 38BD     		pop	{r3, r4, r5, pc}
 864              	.LVL67:
 865              	.L72:
 504:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = Tx1_Put(*buf);
 866              		.loc 1 504 7 is_stmt 1 view .LVU221
 504:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = Tx1_Put(*buf);
 867              		.loc 1 504 13 is_stmt 0 view .LVU222
 868 01e6 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 869              	.LVL68:
 504:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       res = Tx1_Put(*buf);
 870              		.loc 1 504 13 view .LVU223
 871 01ea FFF7FEFF 		bl	Tx1_Put
 872              	.LVL69:
 505:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****       buf++;
 873              		.loc 1 505 7 is_stmt 1 view .LVU224
 506:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 874              		.loc 1 506 7 view .LVU225
 506:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****     }
 875              		.loc 1 506 7 is_stmt 0 view .LVU226
 876 01ee F6E7     		b	.L71
 877              	.LVL70:
 878              	.L73:
 500:hal/Landungsbruecke/freescale/USB_CDC/CDC1.c ****   } else {
 879              		.loc 1 500 9 view .LVU227
 880 01f0 0B20     		movs	r0, #11
 881 01f2 F7E7     		b	.L70
 882              		.cfi_endproc
 883              	.LFE14:
 885              		.comm	Cpu,8,4
 886              		.bss
 887              		.set	.LANCHOR0,. + 0
 890              	start_app:
 891 0000 00       		.space	1
 894              	start_transactions:
 895 0001 00       		.space	1
 898              	transactionOngoing:
 899 0002 00       		.space	1
 902              	txBuf.8388:
 903 0003 00000000 		.space	64
 903      00000000 
 903      00000000 
 903      00000000 
 903      00000000 
 906              	txBuf.8398:
 907 0043 00000000 		.space	64
 907      00000000 
 907      00000000 
 907      00000000 
 907      00000000 
 908              		.text
 909              	.Letext0:
 910              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 911              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 912              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 913              		.file 5 "TMC-API/tmc/helpers/Types.h"
 914              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 915              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 916              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 917              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 918              		.file 10 "./hal/Landungsbruecke/freescale/Cpu.h"
 919              		.file 11 "hal/Landungsbruecke/freescale/USB_CDC/PE_Types.h"
 920              		.file 12 "hal/Landungsbruecke/freescale/USB_CDC/CDC1.h"
 921              		.file 13 "hal/Landungsbruecke/freescale/USB_CDC/types.h"
 922              		.file 14 "hal/Landungsbruecke/freescale/USB_CDC/usb_devapi.h"
 923              		.file 15 "hal/Landungsbruecke/freescale/USB_CDC/usb_cdc.h"
 924              		.file 16 "hal/Landungsbruecke/freescale/USB_CDC/Tx1.h"
 925              		.file 17 "hal/Landungsbruecke/freescale/USB_CDC/Rx1.h"
 926              		.file 18 "hal/Landungsbruecke/freescale/USB_CDC/usb_class.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CDC1.c
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:15     .text:00000000 $t
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:23     .text:00000000 CDC1_Notify_Callback
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:73     .text:00000020 $d
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:77     .text:00000024 $t
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:84     .text:00000024 CDC1_App_Callback
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:264    .text:00000098 $d
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:268    .text:0000009c $t
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:275    .text:0000009c CDC1_RecvChar
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:314    .text:000000ac CDC1_RunUsbEngine
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:333    .text:000000ae CDC1_SendDataBlock
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:393    .text:000000d8 $d
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:399    .text:000000dc $t
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:406    .text:000000dc CDC1_App_Task
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:514    .text:00000120 $d
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:518    .text:00000124 $t
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:525    .text:00000124 CDC1_GetCharsInRxBuf
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:555    .text:00000138 $d
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:559    .text:0000013c $t
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:566    .text:0000013c CDC1_SendChar
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:642    .text:00000164 $d
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:646    .text:00000168 $t
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:653    .text:00000168 CDC1_SendBlock
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:717    .text:0000018a CDC1_SendString
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:773    .text:000001a6 CDC1_Init
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:810    .text:000001c4 $d
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:815    .text:000001cc $t
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:822    .text:000001cc CDC1_PutBufferChecked
                            *COM*:00000008 Cpu
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:890    .bss:00000000 start_app
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:891    .bss:00000000 $d
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:894    .bss:00000001 start_transactions
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:898    .bss:00000002 transactionOngoing
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:902    .bss:00000003 txBuf.8388
C:\Users\Shubham\AppData\Local\Temp\ccy5pTUd.s:906    .bss:00000043 txBuf.8398

UNDEFINED SYMBOLS
_usb_device_recv_data
Rx1_Put
Rx1_Get
USB_Class_CDC_Send_Data
USB_Class_Periodic_Task
Tx1_NofElements
Tx1_Get
Rx1_NofElements
Tx1_Put
USB_Class_CDC_Init
Tx1_NofFreeElements
